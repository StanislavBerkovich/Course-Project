das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %cl,-0x10603f61(%ebx)
scas   %es:(%edi),%al
mov    $0xf9e0c40e,%eax
cli
sub    0x21(%esi,%eax,8),%ah
fwait
gs
loope  8048149 <dev_to_tty@plt-0xfd7>
add    (%eax),%eax
add    %al,(%eax)
pop    %esi
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
adc    %dl,(%esi)
push   %es
adc    0x10(%ecx),%ah
add    0x0(%esi),%bl
add    %al,(%eax)
pusha
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %dl,-0x67(%esp,%edi,4)
shrl   $0x1d,(%ecx)
mov    %ds,(%eax,%edi,1)
repnz mov (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  80481a0 <dev_to_tty@plt-0xf80>
adc    (%ebx),%bh
dec    %edi
or     $0x907e5e99,%eax
and    %edx,(%ecx)
push   %cx
loope  80481fe <dev_to_tty@plt-0xf22>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aaa
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repnz add (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cli
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %es
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    8048422 <dev_to_tty@plt-0xcfe>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ebx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %ds:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jno    8048501 <dev_to_tty@plt-0xc1f>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %esi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sti
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%ebx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
scas   %es:(%edi),%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   $0x0,(%ecx)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edi)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
dec    %edi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
into
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %esi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    %al,(%eax)
add    %bh,-0x1e(%eax)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dl,%bh
add    (%eax),%al
add    %al,0x40805e2(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,(%edx)
add    (%eax),%eax
add    %al,-0x1e(%eax)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,0x64000001(%esi)
inc    %ebx
add    $0x408,%eax
add    %dl,(%ecx)
add    %cl,(%edi)
add    %ch,%ah
add    %al,(%eax)
add    %cl,0x80805e2(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x0(%ecx)
add    %al,(%eax)
nop
loop   8048828 <dev_to_tty@plt-0x8f8>
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
lahf
add    %al,(%eax)
add    %ah,-0x1e(%eax)
add    $0x1808,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
jo     80488b4 <dev_to_tty@plt-0x86c>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x73(%eax)
jae,pn 80488b8 <dev_to_tty@plt-0x868>
xor    %cs:(%eax),%eax
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     80488ba <dev_to_tty@plt-0x866>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    80488e5 <dev_to_tty@plt-0x83b>
popa
jb     80488e8 <dev_to_tty@plt-0x838>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    80488da <dev_to_tty@plt-0x846>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    80488fb <dev_to_tty@plt-0x825>
gs
jae    804888b <dev_to_tty@plt-0x895>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     80488f7 <dev_to_tty@plt-0x829>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
imul   $0x6d,0x5f(%edx),%esp
popa
imul   $0x61746f74,0x5f(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ah,0x73(%ebp)
arpl   %sp,0x70(%ecx)
gs
pop    %edi
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x73(%ecx,%ebp,2)
jo     8048933 <dev_to_tty@plt-0x7ed>
popa
jns    8048929 <dev_to_tty@plt-0x7f7>
jbe    8048931 <dev_to_tty@plt-0x7ef>
jb     8048941 <dev_to_tty@plt-0x7df>
imul   $0x61657200,0x6e(%edi),%ebp
fs
jo     804894a <dev_to_tty@plt-0x7d6>
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jo     804894f <dev_to_tty@plt-0x7d1>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x73(%eax)
pop    %edi
jbe    8048949 <dev_to_tty@plt-0x7d7>
jb     8048959 <dev_to_tty@plt-0x7c7>
imul   $0x6f6f6c00,0x6e(%edi),%ebp
imul   $0x70,0x75(%edi),%ebx
pop    %edi
outsl  %ds:(%esi),(%dx)
jne    8048967 <dev_to_tty@plt-0x7b9>
pop    %edi
jae    804895d <dev_to_tty@plt-0x7c3>
insb   (%dx),%es:(%edi)
data16
add    %ah,0x65(%edi)
je     804895e <dev_to_tty@plt-0x7c2>
jo     804896a <dev_to_tty@plt-0x7b6>
fs
pop    %edi
imul   $0x6c007374,%fs:0x69(%edi),%esp
imul   $0x65765f78,0x75(%esi),%ebp
jb     8048987 <dev_to_tty@plt-0x799>
imul   $0x646f635f,0x6e(%edi),%ebp
add    %ah,%gs:0x76(%ebp,%eiz,2)
pop    %edi
je     8048992 <dev_to_tty@plt-0x78e>
pop    %edi
je     804899a <dev_to_tty@plt-0x786>
jns    8048928 <dev_to_tty@plt-0x7f8>
dec    %eax
gs
jb     80489a0 <dev_to_tty@plt-0x780>
jp     804892e <dev_to_tty@plt-0x7f2>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
imul   $0x6572006f,0x66(%esi),%ebp
popa
fs
jo     80489ae <dev_to_tty@plt-0x772>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x62(%ecx,%eiz,2)
xor    (%eax),%al
gs
jae    80489a9 <dev_to_tty@plt-0x777>
popa
jo     80489ae <dev_to_tty@plt-0x772>
pop    %edi
jae    80489c0 <dev_to_tty@plt-0x760>
jb     804894e <dev_to_tty@plt-0x7d2>
jne    80489c0 <dev_to_tty@plt-0x760>
je     80489bb <dev_to_tty@plt-0x765>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edi)
je     80489bb <dev_to_tty@plt-0x765>
je     80489c4 <dev_to_tty@plt-0x75c>
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x65(%edx)
popa
fs
jo     80489d6 <dev_to_tty@plt-0x74a>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x62(%ecx,%eiz,2)
xor    (%eax),%eax
outsl  %ds:(%esi),(%dx)
jo     80489d3 <dev_to_tty@plt-0x74d>
outsb  %ds:(%esi),(%dx)
pop    %edi
jo     80489e5 <dev_to_tty@plt-0x73b>
bound  %eax,%fs:(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
ja     80489e1 <dev_to_tty@plt-0x73f>
push   $0x72006e61
gs
popa
fs
je     80489e9 <dev_to_tty@plt-0x737>
jae    80489f5 <dev_to_tty@plt-0x72b>
add    %ah,0x73(%ebp)
arpl   %sp,0x70(%ecx)
gs
pop    %edi
jae    8048a08 <dev_to_tty@plt-0x718>
jb     8048a02 <dev_to_tty@plt-0x71e>
imul   $0x6f6c6300,0x74(%ebx),%esi
jae    8048a04 <dev_to_tty@plt-0x71c>
jo     8048a13 <dev_to_tty@plt-0x70d>
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsl  %ds:(%esi),(%dx)
jo     8048a0c <dev_to_tty@plt-0x714>
outsb  %ds:(%esi),(%dx)
jo     8048a1c <dev_to_tty@plt-0x704>
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048a18 <dev_to_tty@plt-0x708>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %ds:(%esi),(%dx)
jne    8048a24 <dev_to_tty@plt-0x6fc>
bound  %esp,0x72(%ebp)
pop    %edi
je     8048a2c <dev_to_tty@plt-0x6f4>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
gs
fs
pop    %edi
arpl   %bp,0x70(%edi)
jns    80489d0 <dev_to_tty@plt-0x750>
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048a54 <dev_to_tty@plt-0x6cc>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x74(%ebx)
jb     8048a50 <dev_to_tty@plt-0x6d0>
jo     8048a68 <dev_to_tty@plt-0x6b8>
add    %bl,0x5f(%edi)
jo     8048a66 <dev_to_tty@plt-0x6ba>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
gs
je     8048a6d <dev_to_tty@plt-0x6b3>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebx)
jb     8048a79 <dev_to_tty@plt-0x6a7>
arpl   %bp,0x70(%ebp)
add    %dh,0x74(%ebx)
jb     8048a85 <dev_to_tty@plt-0x69b>
arpl   %bp,0x72(%eax)
add    %dh,0x69(%eax)
jo     8048a80 <dev_to_tty@plt-0x6a0>
add    %bl,0x5f(%edi)
jae    8048a94 <dev_to_tty@plt-0x68c>
jb     8048a86 <dev_to_tty@plt-0x69a>
jne    8048a94 <dev_to_tty@plt-0x68c>
add    %dh,0x65(%eax)
jb     8048a9b <dev_to_tty@plt-0x685>
outsl  %ds:(%esi),(%dx)
jb     8048a2c <dev_to_tty@plt-0x6f4>
arpl   %sp,%fs:0x65(%edi)
je     8048aa6 <dev_to_tty@plt-0x67a>
gs
js     8048aa9 <dev_to_tty@plt-0x677>
add    %bl,0x5f(%edi)
data16
fs
gs
insb   (%dx),%es:(%edi)
je     8048a9d <dev_to_tty@plt-0x683>
arpl   %bp,0x6b(%eax)
add    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048abb <dev_to_tty@plt-0x665>
arpl   %si,0x79(%eax)
add    %ah,0x6f(%esi)
jb     8048ac0 <dev_to_tty@plt-0x660>
add    %dh,0x69(%ebx)
imul   $0x6573,0x6c(%si),%bp
je     8048a61 <dev_to_tty@plt-0x6bf>
pop    %edi
pop    %edi
jae    8048ad9 <dev_to_tty@plt-0x647>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x63656c65,0x73(%eax,%eax,1),%ebp
je     8048a79 <dev_to_tty@plt-0x6a7>
pop    %edi
gs
js     8048ae6 <dev_to_tty@plt-0x63a>
je     8048a7f <dev_to_tty@plt-0x6a1>
jae    8048af5 <dev_to_tty@plt-0x62b>
jb     8048af3 <dev_to_tty@plt-0x62d>
bound  %esi,0x6b(%edx)
add    %ah,0x65(%edi)
je     8048afb <dev_to_tty@plt-0x625>
imul   $0x6c6c69,0x6b(%eax,%eax,1),%esp
jae    8048b09 <dev_to_tty@plt-0x617>
jb     8048b0a <dev_to_tty@plt-0x616>
jo     8048b07 <dev_to_tty@plt-0x619>
add    %dh,0x74(%ebx)
jb     8048b04 <dev_to_tty@plt-0x61c>
je     8048b09 <dev_to_tty@plt-0x617>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x72(%ebp)
jb     8048b16 <dev_to_tty@plt-0x60a>
jb     8048b08 <dev_to_tty@plt-0x618>
popa
je     8048b0b <dev_to_tty@plt-0x615>
insb   (%dx),%es:(%edi)
imul   $0x72747300,0x65(%esi),%ebp
je     8048b25 <dev_to_tty@plt-0x5fb>
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     8048b31 <dev_to_tty@plt-0x5ef>
jns    8048abf <dev_to_tty@plt-0x661>
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
jo     8048ac4 <dev_to_tty@plt-0x65c>
addr16
gs
je     8048b38 <dev_to_tty@plt-0x5e8>
ja     8048b38 <dev_to_tty@plt-0x5e8>
popa
insl   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048b3d <dev_to_tty@plt-0x5e3>
outsb  %gs:(%esi),(%dx)
add    %bl,0x5f(%edi)
gs
jb     8048b4b <dev_to_tty@plt-0x5d5>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x61657200,0x6e(%edi),%ebp
add    %ah,%fs:0x65(%edi)
je     8048b5e <dev_to_tty@plt-0x5c2>
popa
addr16
gs
jae    8048b5c <dev_to_tty@plt-0x5c4>
jp     8048b5a <dev_to_tty@plt-0x5c6>
add    %bl,0x5f(%edi)
data16
jo     8048b6d <dev_to_tty@plt-0x5b3>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x63,(%eax),%eax
je     8048b70 <dev_to_tty@plt-0x5b0>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x65(%edi)
je     8048b75 <dev_to_tty@plt-0x5ab>
jb     8048b7e <dev_to_tty@plt-0x5a2>
popa
insl   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    8048b8d <dev_to_tty@plt-0x593>
add    %ah,0x70(%esi)
jne    8048b92 <dev_to_tty@plt-0x58e>
jae    8048b20 <dev_to_tty@plt-0x600>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048b92 <dev_to_tty@plt-0x58e>
add    %ch,0x70(%ebp)
jb     8048ba1 <dev_to_tty@plt-0x57f>
je     8048b99 <dev_to_tty@plt-0x587>
arpl   %si,0x73(%eax,%eax,1)
je     8048bac <dev_to_tty@plt-0x574>
je     8048bab <dev_to_tty@plt-0x575>
jne    8048baa <dev_to_tty@plt-0x576>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048bbc <dev_to_tty@plt-0x564>
jb     8048bad <dev_to_tty@plt-0x573>
popa
jae    8048bb2 <dev_to_tty@plt-0x56e>
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
jae    8048bc9 <dev_to_tty@plt-0x557>
jb     8048bc5 <dev_to_tty@plt-0x55b>
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x65(%edi)
je     8048bc8 <dev_to_tty@plt-0x558>
outsb  %ds:(%esi),(%dx)
jbe    8048b66 <dev_to_tty@plt-0x5ba>
jae    8048bdc <dev_to_tty@plt-0x544>
fs
gs
jb     8048bde <dev_to_tty@plt-0x542>
add    %ch,0x6f(%ecx)
arpl   %si,0x0(%esp,%ebp,2)
pop    %edi
pop    %edi
jae    8048be5 <dev_to_tty@plt-0x53b>
jo     8048beb <dev_to_tty@plt-0x535>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8048bea <dev_to_tty@plt-0x536>
arpl   %si,0x70(%esi)
add    %ah,0x77(%esi)
jb     8048bf6 <dev_to_tty@plt-0x52a>
je     8048bf4 <dev_to_tty@plt-0x52c>
add    %dh,0x69(%ebx)
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     8048c03 <dev_to_tty@plt-0x51d>
jne    8048c09 <dev_to_tty@plt-0x517>
add    %bl,%fs:0x5f(%edi)
data16
jo     8048c0c <dev_to_tty@plt-0x514>
outsb  %ds:(%esi),(%dx)
imul   $0x65706f00,%fs:0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ch,0x63(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
je     8048c22 <dev_to_tty@plt-0x4fe>
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebx)
jb     8048c23 <dev_to_tty@plt-0x4fd>
push   $0x73710072
outsl  %ds:(%esi),(%dx)
jb     8048c3c <dev_to_tty@plt-0x4e4>
add    %bl,0x5f(%edi)
js     8048c40 <dev_to_tty@plt-0x4e0>
je     8048c30 <dev_to_tty@plt-0x4f0>
je     8048bd1 <dev_to_tty@plt-0x54f>
bound  %ebp,0x6e(%ecx)
fs
je     8048c3c <dev_to_tty@plt-0x4e4>
js     8048c4d <dev_to_tty@plt-0x4d3>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x63727473,0x0(%esi),%ebp
insl   (%dx),%es:(%edi)
jo     8048be7 <dev_to_tty@plt-0x539>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048c67 <dev_to_tty@plt-0x4b9>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8048c00 <dev_to_tty@plt-0x520>
jae    8048c70 <dev_to_tty@plt-0x4b0>
jo     8048c76 <dev_to_tty@plt-0x4aa>
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     8048c7c <dev_to_tty@plt-0x4a4>
js     8048c82 <dev_to_tty@plt-0x49e>
je     8048c1b <dev_to_tty@plt-0x505>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,0x494c4700
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
dec    %esp
dec    %ecx
inc    %edx
push   %eax
push   %edx
dec    %edi
inc    %ebx
push   %eax
push   %ebx
pop    %edi
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    $0x2000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %eax,(%eax)
pop    %es
add    %dl,0x100000(%ecx,%eax,1)
add    %al,(%eax)
addb   $0x0,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x90000,(%ecx),%ecx
fild   (%ebx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x80000,%eax
jmp    8048d69 <dev_to_tty@plt-0x3b7>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%ebp
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
pop    %es
add    %dh,%ch
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x400,0x60000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x50000,%eax
or     (%eax,%eax,1),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%eax,%eax,1)
adc    $0x4,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
and    %al,(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x70(%eax)
push   $0x2000007
add    %ch,(%edx)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
cld
fild   0x2e0608
add    %al,-0x1e(%eax)
add    $0x600508,%eax
add    %ah,-0x1e(%eax)
add    $0x640508,%eax
add    %bh,-0x1e(%eax)
add    $0x5e0508,%eax
add    %al,0x50805e2(%eax)
pop    %edi
add    %al,(%eax)
mov    %ah,%dl
add    $0x620508,%eax
add    %dl,0x50805e2(%eax)
arpl   %ax,(%eax)
or     $0xe0,%al
add    $0x10708,%eax
add    %dl,(%eax)
loopne 8048e24 <dev_to_tty@plt-0x2fc>
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%eiz,8)
add    $0x30708,%eax
add    %bl,(%eax)
loopne 8048e34 <dev_to_tty@plt-0x2ec>
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%eiz,8)
add    $0x50708,%eax
add    %ah,(%eax)
loopne 8048e44 <dev_to_tty@plt-0x2dc>
or     %al,(%edi)
push   %es
add    %al,(%eax)
and    $0xe0,%al
add    $0x70708,%eax
add    %ch,(%eax)
loopne 8048e54 <dev_to_tty@plt-0x2cc>
or     %al,(%edi)
or     %eax,(%eax)
add    %ch,(%eax,%eiz,8)
add    $0xa0708,%eax
add    %dh,(%eax)
loopne 8048e64 <dev_to_tty@plt-0x2bc>
or     %al,(%edi)
or     (%eax),%eax
add    %dh,(%eax,%eiz,8)
add    $0xc0708,%eax
add    %bh,(%eax)
loopne 8048e74 <dev_to_tty@plt-0x2ac>
or     %al,(%edi)
or     $0xe03c0000,%eax
add    $0xe0708,%eax
add    %al,-0x20(%eax)
add    $0xf0708,%eax
add    %al,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,-0x20(%eax)
add    $0x110708,%eax
add    %cl,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,-0x20(%eax)
add    $0x130708,%eax
add    %dl,0x5(%eax,%eiz,8)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,-0x20(%eax)
add    $0x150708,%eax
add    %bl,0x5(%eax,%eiz,8)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
loopne 8048ec4 <dev_to_tty@plt-0x25c>
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
fs
loopne 8048ecc <dev_to_tty@plt-0x254>
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,-0x20(%eax)
add    $0x190708,%eax
add    %ch,0x5(%eax,%eiz,8)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,-0x20(%eax)
add    $0x1b0708,%eax
add    %dh,0x5(%eax,%eiz,8)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,-0x20(%eax)
add    $0x1d0708,%eax
add    %bh,0x5(%eax,%eiz,8)
or     %al,(%edi)
push   %ds
add    %al,(%eax)
and    $0x5,%al
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
test   %ah,%al
add    $0x200708,%eax
add    %cl,0x70805e0(%eax)
and    %eax,(%eax)
add    %cl,0x22070805(%eax,%eiz,8)
add    %al,(%eax)
nop
loopne 8048f24 <dev_to_tty@plt-0x1fc>
or     %al,(%edi)
and    (%eax),%eax
add    %dl,0x24070805(%eax,%eiz,8)
add    %al,(%eax)
cwtl
loopne 8048f34 <dev_to_tty@plt-0x1ec>
or     %al,(%edi)
and    $0xe09c0000,%eax
add    $0x260708,%eax
add    %ah,0x70805e0(%eax)
daa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
loopne 8048f4c <dev_to_tty@plt-0x1d4>
or     %al,(%edi)
sub    %al,(%eax)
add    %ch,0x70805e0(%eax)
sub    %eax,(%eax)
add    %ch,0x2a070805(%eax,%eiz,8)
add    %al,(%eax)
mov    $0xe0,%al
add    $0x2b0708,%eax
add    %dh,0x2c070805(%eax,%eiz,8)
add    %al,(%eax)
mov    $0x70805e0,%eax
sub    $0xe0bc0000,%eax
add    $0x2e0708,%eax
add    %al,%al
loopne 8048f84 <dev_to_tty@plt-0x19c>
or     %al,(%edi)
das
add    %al,(%eax)
(bad)
loopne 8048f8c <dev_to_tty@plt-0x194>
or     %al,(%edi)
xor    %al,(%eax)
add    %cl,%al
loopne 8048f94 <dev_to_tty@plt-0x18c>
or     %al,(%edi)
xor    %eax,(%eax)
add    %cl,%ah
loopne 8048f9c <dev_to_tty@plt-0x184>
or     %al,(%edi)
xor    (%eax),%al
add    %dl,%al
loopne 8048fa4 <dev_to_tty@plt-0x17c>
or     %al,(%edi)
xor    (%eax),%eax
add    %dl,%ah
loopne 8048fac <dev_to_tty@plt-0x174>
or     %al,(%edi)
xor    $0x0,%al
add    %bl,%al
loopne 8048fb4 <dev_to_tty@plt-0x16c>
or     %al,(%edi)
xor    $0xe0dc0000,%eax
add    $0x360708,%eax
add    %ah,%al
loopne 8048fc4 <dev_to_tty@plt-0x15c>
or     %al,(%edi)
aaa
add    %al,(%eax)
in     $0xe0,%al
add    $0x380708,%eax
add    %ch,%al
loopne 8048fd4 <dev_to_tty@plt-0x14c>
or     %al,(%edi)
cmp    %eax,(%eax)
add    %ch,%ah
loopne 8048fdc <dev_to_tty@plt-0x144>
or     %al,(%edi)
cmp    (%eax),%al
add    %dh,%al
loopne 8048fe4 <dev_to_tty@plt-0x13c>
or     %al,(%edi)
cmp    (%eax),%eax
add    %dh,%ah
loopne 8048fec <dev_to_tty@plt-0x134>
or     %al,(%edi)
cmp    $0x0,%al
add    %bh,%al
loopne 8048ff4 <dev_to_tty@plt-0x12c>
or     %al,(%edi)
cmp    $0xe0fc0000,%eax
add    $0x3e0708,%eax
add    %al,(%eax)
loope  8049004 <dev_to_tty@plt-0x11c>
or     %al,(%edi)
aas
add    %al,(%eax)
add    $0xe1,%al
add    $0x400708,%eax
add    %cl,(%eax)
loope  8049014 <dev_to_tty@plt-0x10c>
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
or     $0xe1,%al
add    $0x420708,%eax
add    %dl,(%eax)
loope  8049024 <dev_to_tty@plt-0xfc>
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
adc    $0xe1,%al
add    $0x440708,%eax
add    %bl,(%eax)
loope  8049034 <dev_to_tty@plt-0xec>
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
sbb    $0xe1,%al
add    $0x460708,%eax
add    %ah,(%eax)
loope  8049044 <dev_to_tty@plt-0xdc>
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
and    $0xe1,%al
add    $0x480708,%eax
add    %ch,(%eax)
loope  8049054 <dev_to_tty@plt-0xcc>
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
sub    $0xe1,%al
add    $0x4a0708,%eax
add    %dh,(%eax)
loope  8049064 <dev_to_tty@plt-0xbc>
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
xor    $0xe1,%al
add    $0x4c0708,%eax
add    %bh,(%eax)
loope  8049074 <dev_to_tty@plt-0xac>
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
cmp    $0xe1,%al
add    $0x4e0708,%eax
add    %al,-0x1f(%eax)
add    $0x500708,%eax
add    %al,0x5(%ecx,%eiz,8)
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
dec    %eax
loope  8049094 <dev_to_tty@plt-0x8c>
or     %al,(%edi)
push   %edx
add    %al,(%eax)
dec    %esp
loope  804909c <dev_to_tty@plt-0x84>
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
push   %eax
loope  80490a4 <dev_to_tty@plt-0x7c>
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
push   %esp
loope  80490ac <dev_to_tty@plt-0x74>
or     %al,(%edi)
push   %esi
add    %al,(%eax)
pop    %eax
loope  80490b4 <dev_to_tty@plt-0x6c>
or     %al,(%edi)
push   %edi
add    %al,(%eax)
pop    %esp
loope  80490bc <dev_to_tty@plt-0x64>
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
pusha
loope  80490c4 <dev_to_tty@plt-0x5c>
or     %al,(%edi)
pop    %ecx
add    %al,(%eax)
fs
loope  80490cc <dev_to_tty@plt-0x54>
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
push   $0x70805e1
pop    %ebx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
loope  80490dc <dev_to_tty@plt-0x44>
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
jo     80490bf <dev_to_tty@plt-0x61>
add    $0x5d0708,%eax
push   %ebx
sub    $0x8,%esp
call   804a290 <readtask@plt+0xbe0>
add    $0x14f13,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8049102 <dev_to_tty@plt-0x1e>
call   80493e0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x805e004
jmp    *0x805e008
add    %al,(%eax)
jmp    *0x805e00c
push   $0x0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e010
push   $0x8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e014
push   $0x10
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e018
push   $0x18
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e01c
push   $0x20
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e020
push   $0x28
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e024
push   $0x30
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e028
push   $0x38
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e02c
push   $0x40
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e030
push   $0x48
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e034
push   $0x50
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e038
push   $0x58
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e03c
push   $0x60
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e040
push   $0x68
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e044
push   $0x70
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e048
push   $0x78
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e04c
push   $0x80
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e050
push   $0x88
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e054
push   $0x90
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e058
push   $0x98
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e05c
push   $0xa0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e060
push   $0xa8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e064
push   $0xb0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e068
push   $0xb8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e06c
push   $0xc0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e070
push   $0xc8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e074
push   $0xd0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e078
push   $0xd8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e07c
push   $0xe0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e080
push   $0xe8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e084
push   $0xf0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e088
push   $0xf8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e08c
push   $0x100
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e090
push   $0x108
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e094
push   $0x110
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e098
push   $0x118
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e09c
push   $0x120
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0a0
push   $0x128
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0a4
push   $0x130
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0a8
push   $0x138
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0ac
push   $0x140
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0b0
push   $0x148
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0b4
push   $0x150
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0b8
push   $0x158
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0bc
push   $0x160
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0c0
push   $0x168
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0c4
push   $0x170
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0c8
push   $0x178
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0cc
push   $0x180
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0d0
push   $0x188
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0d4
push   $0x190
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0d8
push   $0x198
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0dc
push   $0x1a0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0e0
push   $0x1a8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0e4
push   $0x1b0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0e8
push   $0x1b8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0ec
push   $0x1c0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0f0
push   $0x1c8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0f4
push   $0x1d0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0f8
push   $0x1d8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e0fc
push   $0x1e0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e100
push   $0x1e8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e104
push   $0x1f0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e108
push   $0x1f8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e10c
push   $0x200
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e110
push   $0x208
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e114
push   $0x210
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e118
push   $0x218
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e11c
push   $0x220
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e120
push   $0x228
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e124
push   $0x230
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e128
push   $0x238
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e12c
push   $0x240
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e130
push   $0x248
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e134
push   $0x250
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e138
push   $0x258
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e13c
push   $0x260
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e140
push   $0x268
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e144
push   $0x270
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e148
push   $0x278
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e14c
push   $0x280
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e150
push   $0x288
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e154
push   $0x290
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e158
push   $0x298
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e15c
push   $0x2a0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e160
push   $0x2a8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e164
push   $0x2b0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e168
push   $0x2b8
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e16c
push   $0x2c0
jmp    8049110 <dev_to_tty@plt-0x10>
jmp    *0x805e170
push   $0x2c8
jmp    8049110 <dev_to_tty@plt-0x10>
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x24c,%esp
movl   $0x8053ee0,0x4(%esp)
movl   $0x11,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x23c(%esp)
xor    %eax,%eax
movl   $0x0,0x805ed24
00
call   8049250 <signal@plt>
lea    0x24(%esp),%edx
mov    %edx,(%esp)
call   8049540 <pipe@plt>
inc    %eax
jne    8049720 <readtask@plt+0x70>
movl   $0x8059fdc,(%esp)
call   8049330 <perror@plt>
movl   $0x0,(%esp)
call   80491b0 <_exit@plt>
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049540 <pipe@plt>
inc    %eax
je     8049708 <readtask@plt+0x58>
call   8049590 <fork@plt>
test   %eax,%eax
jne    80497a6 <readtask@plt+0xf6>
movl   $0x0,(%esp)
call   8049690 <close@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049190 <dup@plt>
movl   $0x1,(%esp)
call   8049690 <close@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049190 <dup@plt>
movl   $0x2,(%esp)
call   8049690 <close@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049190 <dup@plt>
mov    %ebx,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80492f0 <execvp@plt>
movl   $0x8059fec,(%esp)
call   8049330 <perror@plt>
movl   $0x0,(%esp)
call   80491b0 <_exit@plt>
inc    %eax
jne    80497c1 <readtask@plt+0x111>
movl   $0x8059ff8,(%esp)
call   8049330 <perror@plt>
movl   $0x0,(%esp)
call   80491b0 <_exit@plt>
mov    $0x20,%ecx
xor    %eax,%eax
lea    0x3c(%esp),%edi
cld
rep stos %eax,%es:(%edi)
mov    0x2c(%esp),%eax
mov    $0x20,%ebx
lea    0x34(%esp),%ebp
mov    %eax,(%esp)
call   80492b0 <__fdelt_chk@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
cltd
idiv   %ebx
mov    0x28(%esp),%eax
mov    $0x1,%bl
mov    %dl,%cl
shl    %cl,%ebx
or     %ebx,0x3c(%esp,%esi,4)
lea    0xbc(%esp),%ebx
movl   $0xa,0x8(%esp)
movl   $0x805a007,0x4(%esp)
mov    %eax,(%esp)
call   8049490 <write@plt>
mov    0x28(%esp),%eax
movl   $0x8,0x8(%esp)
movl   $0x805a012,0x4(%esp)
mov    %eax,(%esp)
call   8049490 <write@plt>
mov    0x28(%esp),%eax
movl   $0x5,0x8(%esp)
movl   $0x805a01b,0x4(%esp)
mov    %eax,(%esp)
call   8049490 <write@plt>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    $0x20,%ecx
mov    %ebx,%edi
lea    0x3c(%esp),%esi
rep movsl %ds:(%esi),%es:(%edi)
mov    %ebp,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x400,(%esp)
movl   $0x1,0x34(%esp)
movl   $0x0,0x38(%esp)
call   8049260 <select@plt>
cmp    $0xffffffff,%eax
jne    80498e4 <readtask@plt+0x234>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049690 <close@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049690 <close@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049690 <close@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049690 <close@plt>
movl   $0x0,(%esp)
call   80491b0 <_exit@plt>
test   %eax,%eax
jle    80499c6 <readtask@plt+0x316>
mov    0x2c(%esp),%eax
mov    $0x20,%esi
mov    %eax,(%esp)
call   80492b0 <__fdelt_chk@plt>
mov    0x2c(%esp),%ecx
mov    %eax,%edi
mov    %ecx,%eax
cltd
idiv   %esi
mov    0xbc(%esp,%edi,4),%eax
bt     %edx,%eax
jae    80499c6 <readtask@plt+0x316>
lea    0x23(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8049180 <read@plt>
test   %eax,%eax
je     8049862 <readtask@plt+0x1b2>
cmpl   $0x1,0x18(%esp)
je     804996f <readtask@plt+0x2bf>
cmpb   $0x23,0x23(%esp)
movl   $0x0,0x18(%esp)
jne    8049862 <readtask@plt+0x1b2>
movb   $0x23,0x13c(%esp)
movl   $0x1,0x18(%esp)
movl   $0x1,0x1c(%esp)
jmp    8049862 <readtask@plt+0x1b2>
mov    0x23(%esp),%al
mov    0x1c(%esp),%esi
cmp    $0xd,%al
lea    0x1(%esi),%edx
mov    %al,0x13c(%esp,%esi,1)
je     8049991 <readtask@plt+0x2e1>
cmp    $0xa,%al
mov    %edx,0x1c(%esp)
jne    8049862 <readtask@plt+0x1b2>
mov    0x805e240,%eax
movb   $0x0,0x13c(%esp,%edx,1)
mov    %eax,0x4(%esp)
lea    0x13c(%esp),%eax
mov    %eax,(%esp)
call   8049670 <fputs@plt>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
jmp    8049862 <readtask@plt+0x1b2>
cmpl   $0x0,0x805ed24
je     8049862 <readtask@plt+0x1b2>
jmp    80498a8 <readtask@plt+0x1f8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xd0,%esp
movl   $0x80540d0,(%esp)
call   8054310 <readtask@plt+0xac60>
mov    0xc(%ebp),%eax
movl   $0x2f,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   80495c0 <strrchr@plt>
test   %eax,%eax
mov    %eax,0x805ed28
je     8049fda <readtask@plt+0x92a>
add    $0x1,%eax
mov    %eax,0x805ed28
movl   $0x8059aaa,0x4(%esp)
lea    0x44(%esp),%ebx
mov    $0x1f,%esi
movl   $0x6,(%esp)
mov    %ebx,%edi
call   80495b0 <setlocale@plt>
movl   $0x80543ac,0x4(%esp)
movl   $0x80543be,(%esp)
call   8049620 <bindtextdomain@plt>
movl   $0x80543be,(%esp)
call   80492e0 <textdomain@plt>
xor    %eax,%eax
mov    $0x23,%ecx
rep stos %eax,%es:(%edi)
lea    0x48(%esp),%eax
mov    $0x1,%edi
mov    %eax,(%esp)
movl   $0x804a510,0x44(%esp)
call   80494d0 <sigfillset@plt>
xchg   %ax,%ax
cmp    $0x1c,%esi
ja     8049a9a <readtask@plt+0x3ea>
mov    %edi,%eax
mov    %esi,%ecx
shl    %cl,%eax
test   $0x1858020d,%eax
jne    8049aae <readtask@plt+0x3fe>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049610 <sigaction@plt>
sub    $0x1,%esi
cmp    $0xffffffff,%esi
jne    8049a88 <readtask@plt+0x3d8>
call   804ab70 <readtask@plt+0x14c0>
mov    0xc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8051960 <readtask@plt+0x82b0>
call   804f700 <readtask@plt+0x6050>
mov    0x805e1d8,%eax
mov    0x805e1e4,%esi
cmp    $0x2,%eax
je     8049f42 <readtask@plt+0x892>
cmp    $0x1,%eax
je     8049b1e <readtask@plt+0x46e>
xor    %ecx,%ecx
test   %esi,%esi
mov    %esi,%eax
jne    8049b08 <readtask@plt+0x458>
jmp    8049b1e <readtask@plt+0x46e>
lea    0x0(%esi),%esi
mov    0x8(%eax),%edx
test   %edx,%edx
je     8049b10 <readtask@plt+0x460>
mov    (%eax),%eax
add    $0x1,%ecx
test   %eax,%eax
je     8049b16 <readtask@plt+0x466>
mov    0x4(%eax),%edx
cmpb   $0x0,(%edx)
jne    8049af8 <readtask@plt+0x448>
mov    (%eax),%eax
test   %eax,%eax
jne    8049b08 <readtask@plt+0x458>
test   %ecx,%ecx
jne    8049c46 <readtask@plt+0x596>
movl   $0xffffffff,0x805e1d0
ff
testb  $0x4,0x805e18d
je     8049c53 <readtask@plt+0x5a3>
test   %esi,%esi
je     804a0e6 <readtask@plt+0xa36>
lea    0x24(%esp),%edi
mov    %edi,0x1c(%esp)
mov    %ebx,%edi
jmp    8049b7b <readtask@plt+0x4cb>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x10000000,%eax
jne    8049be6 <readtask@plt+0x536>
movl   $0x804c5c0,0x8(%esi)
movl   $0x0,0x10(%esi)
mov    (%esi),%eax
test   %eax,%eax
je     8049c24 <readtask@plt+0x574>
mov    %esi,0x1c(%esp)
mov    %ebx,%edi
mov    %eax,%esi
movl   $0x20,(%esp)
call   80493c0 <malloc@plt>
mov    %eax,%ebx
mov    (%esi),%eax
mov    %eax,(%ebx)
mov    0x4(%esi),%eax
mov    %eax,0x4(%ebx)
mov    0x8(%esi),%eax
mov    %eax,0x8(%ebx)
mov    0xc(%esi),%eax
mov    %eax,0xc(%ebx)
mov    0x10(%esi),%eax
mov    %eax,0x10(%ebx)
mov    0x14(%esi),%eax
mov    %eax,0x14(%ebx)
mov    0x18(%esi),%eax
mov    %eax,0x18(%ebx)
mov    0x1c(%esi),%eax
mov    %eax,0x1c(%ebx)
mov    0x1c(%esp),%eax
mov    %esi,(%eax)
mov    0x18(%esi),%eax
mov    %ebx,(%edi)
and    $0xf0000000,%eax
cmp    $0x20000000,%eax
je     8049eb0 <readtask@plt+0x800>
jbe    8049b50 <readtask@plt+0x4a0>
cmp    $0x40000000,%eax
je     8049b69 <readtask@plt+0x4b9>
cmp    $0x80000000,%eax
je     8049b69 <readtask@plt+0x4b9>
movl   $0x5,0x8(%esp)
movl   $0x805438b,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x10e,0x4(%esp)
movl   $0x80543a2,(%esp)
mov    %eax,0x8(%esp)
call   804b240 <readtask@plt+0x1b90>
mov    (%esi),%eax
test   %eax,%eax
jne    8049b73 <readtask@plt+0x4c3>
mov    %ebx,%edx
movl   $0x0,(%edx)
movl   $0x0,(%esi)
mov    0x24(%esp),%eax
mov    %eax,0x805e9c0
mov    0x44(%esp),%eax
mov    %eax,0x805e9bc
jmp    8049c5f <readtask@plt+0x5af>
testb  $0x4,0x805e18d
jne    8049b3d <readtask@plt+0x48d>
mov    %esi,0x805e9c0
mov    %esi,0x805e9bc
mov    0x805e9c0,%eax
xor    %ecx,%ecx
test   %eax,%eax
je     8049c79 <readtask@plt+0x5c9>
lea    0x0(%esi),%esi
or     0x10(%eax),%ecx
mov    (%eax),%eax
test   %eax,%eax
jne    8049c70 <readtask@plt+0x5c0>
mov    0x805e9bc,%eax
xor    %ebx,%ebx
test   %eax,%eax
je     8049c91 <readtask@plt+0x5e1>
lea    0x0(%esi,%eiz,1),%esi
or     0x10(%eax),%ebx
mov    (%eax),%eax
test   %eax,%eax
jne    8049c88 <readtask@plt+0x5d8>
mov    0x805e1a0,%eax
xor    %edx,%edx
test   %eax,%eax
je     8049ca9 <readtask@plt+0x5f9>
lea    0x0(%esi,%eiz,1),%esi
or     0x10(%eax),%edx
mov    (%eax),%eax
test   %eax,%eax
jne    8049ca0 <readtask@plt+0x5f0>
mov    0x805e200,%eax
and    $0xfffffcf8,%ebx
or     %ebx,%ecx
mov    %edx,0x805e9b4
mov    %ecx,0x805e9b0
test   %eax,%eax
mov    %ebx,0x805e9ac
je     8049cde <readtask@plt+0x62e>
and    $0xfe,%ch
and    $0xfe,%dh
mov    %ecx,0x805e9b0
mov    %edx,0x805e9b4
mov    0x805e188,%edi
test   %edi,%edi
jne    8049cf6 <readtask@plt+0x646>
andl   $0xfffffffd,0x805e9b0
andl   $0xfffffffd,0x805e9b4
mov    0x805e9b0,%eax
test   $0x1,%ah
je     8049d0d <readtask@plt+0x65d>
and    $0xfe,%ah
or     $0x20002,%eax
mov    %eax,0x805e9b0
mov    0x805e1fc,%esi
test   %esi,%esi
je     8049d1f <readtask@plt+0x66f>
test   $0x2,%al
jne    8049e9c <readtask@plt+0x7ec>
mov    0x805e9b4,%edx
or     %eax,%edx
or     %ebx,%edx
and    $0x80,%edx
je     8049d3e <readtask@plt+0x68e>
cmpl   $0x0,0x805e180
je     8049f54 <readtask@plt+0x8a4>
testb  $0x8,0x805e18d
je     8049d51 <readtask@plt+0x6a1>
orl    $0x2000,0x805e9b8
00
mov    0x805e1ec,%ecx
or     0x805e9ac,%eax
or     $0x60,%eax
or     0x805e9b4,%eax
or     0x805e9b8,%eax
test   %ecx,%ecx
jne    8049d7e <readtask@plt+0x6ce>
mov    0x805e1a0,%edx
test   %edx,%edx
je     8049fe9 <readtask@plt+0x939>
mov    %eax,(%esp)
call   80495e0 <openproc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a1fb <readtask@plt+0xb4b>
testb  $0x8,0x805e18d
jne    8049e87 <readtask@plt+0x7d7>
mov    %eax,0x8(%esp)
movl   $0xdeadbeaf,0x4(%esp)
movl   $0x804a620,(%esp)
call   8049170 <readproctab2@plt>
mov    0xc(%eax),%edi
mov    (%eax),%eax
test   %edi,%edi
mov    %edi,0x1c(%esp)
mov    %eax,0x805e9a8
je     8049e68 <readtask@plt+0x7b8>
cmpl   $0x0,0x805e1ec
jne    8049f7f <readtask@plt+0x8cf>
mov    0x1c(%esp),%eax
movl   $0x804a360,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x805e9a8,%eax
mov    %eax,(%esp)
call   80495f0 <qsort@plt>
cmpl   $0x0,0x805e1ec
je     8049ec3 <readtask@plt+0x813>
mov    0x1c(%esp),%eax
mov    %ebx,0x18(%esp)
sub    $0x1,%eax
lea    0x0(,%eax,4),%esi
mov    %eax,%ebx
xchg   %ax,%ax
mov    0x805e9a8,%ecx
mov    0x1c(%esp),%edx
mov    (%ecx,%esi,1),%eax
mov    0x4(%eax),%edi
mov    -0x4(%ecx,%edx,4),%eax
cmp    %edi,(%eax)
je     8049e51 <readtask@plt+0x7a1>
sub    $0x1,%edx
jne    8049e30 <readtask@plt+0x780>
mov    0x1c(%esp),%edx
xor    %ecx,%ecx
mov    %ebx,%eax
movl   $0x0,(%esp)
call   804a3c0 <readtask@plt+0xd10>
sub    $0x1,%ebx
sub    $0x4,%esi
cmp    $0xffffffff,%ebx
jne    8049e20 <readtask@plt+0x770>
mov    0x18(%esp),%ebx
mov    %ebx,(%esp)
call   8049520 <closeproc@plt>
mov    0x805e1e4,%eax
movl   $0xffffffff,(%esp)
mov    %eax,0x4(%esp)
call   804f2e0 <readtask@plt+0x5c30>
lea    -0xc(%ebp),%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x4(%esp)
movl   $0x804a620,(%esp)
call   80494a0 <readproctab3@plt>
jmp    8049db5 <readtask@plt+0x705>
or     $0x4,%eax
mov    %eax,0x805e9b0
jmp    8049d1f <readtask@plt+0x66f>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x804c5c0,0x8(%ebx)
movl   $0x0,0x10(%ebx)
jmp    8049b69 <readtask@plt+0x4b9>
mov    0x805e9a8,%esi
mov    0x1c(%esp),%edi
jmp    8049ed8 <readtask@plt+0x828>
nop
add    $0x4,%esi
sub    $0x1,%edi
je     8049e60 <readtask@plt+0x7b0>
mov    0x805e18c,%eax
test   $0x1,%ah
jne    8049f28 <readtask@plt+0x878>
test   $0x2,%ah
jne    8049f05 <readtask@plt+0x855>
jmp    8049ed0 <readtask@plt+0x820>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e9bc,%eax
movl   $0x805e760,(%esp)
mov    %eax,0x4(%esp)
call   804f2e0 <readtask@plt+0x5c30>
movl   $0x805e760,0x8(%esp)
mov    (%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80496b0 <readtask@plt>
test   %eax,%eax
jne    8049ef0 <readtask@plt+0x840>
jmp    8049ed0 <readtask@plt+0x820>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e9c0,%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804f2e0 <readtask@plt+0x5c30>
mov    0x805e18c,%eax
jmp    8049ee2 <readtask@plt+0x832>
mov    0x805e1b0,%eax
sub    $0x1,%eax
mov    %eax,0x805e1dc
jmp    8049b28 <readtask@plt+0x478>
mov    0x805e1cc,%eax
mov    %eax,(%esp)
call   80491e0 <open_psdb@plt>
mov    %eax,%edx
mov    0x805e9b0,%eax
test   %edx,%edx
je     8049d3e <readtask@plt+0x68e>
movl   $0x1,0x805e180
00
jmp    8049d3e <readtask@plt+0x68e>
cmpl   $0x0,0x805e1a0
je     804a1ad <readtask@plt+0xafd>
movl   $0x805440b,(%esp)
call   804f200 <readtask@plt+0x5b50>
test   %eax,%eax
mov    %eax,%esi
je     804a23c <readtask@plt+0xb8c>
movl   $0x14,(%esp)
call   80493c0 <malloc@plt>
mov    0xc(%esi),%edx
mov    %edx,0x4(%eax)
mov    0x14(%esi),%edx
movl   $0x0,0x8(%eax)
movl   $0x3f,0xc(%eax)
mov    %edx,0x10(%eax)
mov    0x805e1a0,%edx
mov    %eax,0x805e1a0
mov    %edx,(%eax)
jmp    8049dd8 <readtask@plt+0x728>
mov    0xc(%ebp),%eax
mov    (%eax),%eax
mov    %eax,0x805ed28
jmp    8049a25 <readtask@plt+0x375>
mov    %eax,(%esp)
call   80495e0 <openproc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a1fb <readtask@plt+0xb4b>
mov    0x805e18c,%eax
and    $0xb00,%eax
cmp    $0x200,%eax
je     804a0bc <readtask@plt+0xa0c>
jbe    804a163 <readtask@plt+0xab3>
cmp    $0x300,%eax
je     804a139 <readtask@plt+0xa89>
cmp    $0x900,%eax
jne    8049e60 <readtask@plt+0x7b0>
movl   $0x805e500,0x4(%esp)
mov    %ebx,(%esp)
call   80495d0 <readproc@plt>
test   %eax,%eax
je     8049e60 <readtask@plt+0x7b0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x805e2a0,0x8(%esp)
movl   $0x805e500,0x4(%esp)
mov    %ebx,(%esp)
call   80496b0 <readtask@plt>
test   %eax,%eax
je     804a02c <readtask@plt+0x97c>
movl   $0x805e500,(%esp)
call   8051c70 <readtask@plt+0x85c0>
test   %eax,%eax
je     804a048 <readtask@plt+0x998>
mov    0x805e9bc,%eax
movl   $0x805e2a0,(%esp)
mov    %eax,0x4(%esp)
call   804f2e0 <readtask@plt+0x5c30>
jmp    804a048 <readtask@plt+0x998>
mov    0x805e9bc,%eax
movl   $0x805e2a0,(%esp)
mov    %eax,0x4(%esp)
call   804f2e0 <readtask@plt+0x5c30>
movl   $0x805e2a0,0x8(%esp)
movl   $0x805e500,0x4(%esp)
mov    %ebx,(%esp)
call   80496b0 <readtask@plt>
test   %eax,%eax
jne    804a08b <readtask@plt+0x9db>
movl   $0x805e500,0x4(%esp)
mov    %ebx,(%esp)
call   80495d0 <readproc@plt>
test   %eax,%eax
je     8049e60 <readtask@plt+0x7b0>
movl   $0x805e500,(%esp)
call   8051c70 <readtask@plt+0x85c0>
test   %eax,%eax
je     804a0bc <readtask@plt+0xa0c>
jmp    804a0a0 <readtask@plt+0x9f0>
mov    %ebx,%edx
lea    0x24(%esp),%esi
jmp    8049c26 <readtask@plt+0x576>
mov    0x805e9c0,%eax
movl   $0x805e500,(%esp)
mov    %eax,0x4(%esp)
call   804f2e0 <readtask@plt+0x5c30>
jmp    804a11d <readtask@plt+0xa6d>
mov    0x805e9bc,%eax
movl   $0x805e2a0,(%esp)
mov    %eax,0x4(%esp)
call   804f2e0 <readtask@plt+0x5c30>
movl   $0x805e2a0,0x8(%esp)
movl   $0x805e500,0x4(%esp)
mov    %ebx,(%esp)
call   80496b0 <readtask@plt>
test   %eax,%eax
jne    804a108 <readtask@plt+0xa58>
movl   $0x805e500,0x4(%esp)
mov    %ebx,(%esp)
call   80495d0 <readproc@plt>
test   %eax,%eax
je     8049e60 <readtask@plt+0x7b0>
movl   $0x805e500,(%esp)
call   8051c70 <readtask@plt+0x85c0>
test   %eax,%eax
je     804a139 <readtask@plt+0xa89>
jmp    804a0f1 <readtask@plt+0xa41>
cmp    $0x100,%eax
jne    8049e60 <readtask@plt+0x7b0>
movl   $0x805e500,0x4(%esp)
mov    %ebx,(%esp)
call   80495d0 <readproc@plt>
test   %eax,%eax
je     8049e60 <readtask@plt+0x7b0>
movl   $0x805e500,(%esp)
call   8051c70 <readtask@plt+0x85c0>
test   %eax,%eax
je     804a16e <readtask@plt+0xabe>
mov    0x805e9c0,%eax
movl   $0x805e500,(%esp)
mov    %eax,0x4(%esp)
call   804f2e0 <readtask@plt+0x5c30>
jmp    804a16e <readtask@plt+0xabe>
movl   $0x80543e5,(%esp)
call   804f200 <readtask@plt+0x5b50>
test   %eax,%eax
mov    %eax,%esi
je     804a24e <readtask@plt+0xb9e>
movl   $0x14,(%esp)
call   80493c0 <malloc@plt>
mov    0xc(%esi),%edx
mov    %edx,0x4(%eax)
mov    0x14(%esi),%edx
movl   $0x0,0x8(%eax)
movl   $0x3f,0xc(%eax)
mov    %edx,0x10(%eax)
mov    0x805e1a0,%edx
mov    %eax,0x805e1a0
mov    %edx,(%eax)
jmp    8049f8c <readtask@plt+0x8dc>
movl   $0x5,0x8(%esp)
movl   $0x80543c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   80493f0 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054410,0x4(%esp)
jmp    804a20b <readtask@plt+0xb5b>
movl   $0x5,0x8(%esp)
movl   $0x80543f0,0x4(%esp)
jmp    804a20b <readtask@plt+0xb5b>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8054300
push   $0x8054290
push   %ecx
push   %esi
push   $0x80499e0
call   8049480 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x805e22f,%eax
sub    $0x805e22c,%eax
cmp    $0x6,%eax
ja     804a2b0 <readtask@plt+0xc00>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804a2af <readtask@plt+0xbff>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805e22c,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x805e22c,%eax
sub    $0x805e22c,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804a2e9 <readtask@plt+0xc39>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804a2e8 <readtask@plt+0xc38>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x805e22c,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x805e294
jne    804a32c <readtask@plt+0xc7c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804a2a0 <readtask@plt+0xbf0>
movb   $0x1,0x805e294
leave
repz ret
xchg   %ax,%ax
mov    0x805df08,%eax
test   %eax,%eax
je     804a358 <readtask@plt+0xca8>
mov    $0x0,%eax
test   %eax,%eax
je     804a358 <readtask@plt+0xca8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x805df08,(%esp)
call   *%eax
leave
jmp    804a2d0 <readtask@plt+0xc20>
nop
jmp    804a2d0 <readtask@plt+0xc20>
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805e1a0,%ebx
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
test   %ebx,%ebx
jne    804a386 <readtask@plt+0xcd6>
jmp    804a3b0 <readtask@plt+0xd00>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
je     804a3b0 <readtask@plt+0xd00>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   *0x4(%ebx)
test   %eax,%eax
je     804a380 <readtask@plt+0xcd0>
mov    0x8(%ebx),%ecx
mov    %eax,%edx
neg    %edx
test   %ecx,%ecx
cmovne %edx,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
test   %ecx,%ecx
mov    %ecx,0x18(%esp)
je     804a3eb <readtask@plt+0xd3b>
cmpl   $0x1,0x40(%esp)
movb   $0x0,0x805ed60(%ecx)
sbb    %edx,%edx
and    $0x21,%edx
add    $0x2b,%edx
mov    %dl,0x805ed5f(%ecx)
mov    0x805e1e4,%edx
lea    0x0(,%eax,4),%ebp
mov    %edx,0x4(%esp)
mov    0x805e9a8,%edx
mov    (%edx,%eax,4),%eax
mov    %eax,(%esp)
call   804f2e0 <readtask@plt+0x5c30>
test   %ebx,%ebx
jle    804a43f <readtask@plt+0xd8f>
mov    0x805e9a8,%ecx
lea    (%ecx,%ebp,1),%edi
mov    (%edi),%eax
mov    (%eax),%edx
mov    (%ecx),%eax
cmp    %edx,0x4(%eax)
mov    $0x0,%eax
jne    804a438 <readtask@plt+0xd88>
jmp    804a448 <readtask@plt+0xd98>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx,%eax,4),%esi
cmp    %edx,0x4(%esi)
je     804a448 <readtask@plt+0xd98>
add    $0x1,%eax
cmp    %ebx,%eax
jne    804a430 <readtask@plt+0xd80>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x18(%esp),%esi
test   %esi,%esi
je     804a472 <readtask@plt+0xdc2>
cmpl   $0x1,0x40(%esp)
mov    0x18(%esp),%esi
sbb    %edx,%edx
and    $0xffffffa4,%edx
add    $0x7c,%edx
mov    %dl,0x805ed5f(%esi)
movb   $0x0,0x805ed60(%esi)
mov    (%edi),%edx
mov    (%edx),%edx
lea    0x1(%eax),%esi
lea    0x0(,%esi,4),%edi
mov    %edi,0x14(%esp)
mov    0x18(%esp),%edi
add    $0x1,%edi
mov    %edi,0x1c(%esp)
mov    %ebx,%edi
jmp    804a4c4 <readtask@plt+0xe14>
nop
cmpl   $0x75,0x805e1ec
je     804a4de <readtask@plt+0xe2e>
mov    0x18(%esp),%ecx
mov    %edi,%edx
mov    %ebx,(%esp)
call   804a3c0 <readtask@plt+0xd10>
test   %ebx,%ebx
je     804a4f0 <readtask@plt+0xe40>
addl   $0x4,0x14(%esp)
cmp    %esi,%edi
jle    804a4f0 <readtask@plt+0xe40>
mov    0x805e9a8,%ecx
mov    (%ecx,%ebp,1),%eax
mov    (%eax),%edx
mov    %esi,%eax
add    $0x1,%esi
xor    %ebx,%ebx
cmp    %esi,%edi
jle    804a4d9 <readtask@plt+0xe29>
mov    0x14(%esp),%ebx
mov    (%ecx,%ebx,1),%ecx
xor    %ebx,%ebx
cmp    %edx,0x4(%ecx)
sete   %bl
cmp    $0x1,%edx
je     804a490 <readtask@plt+0xde0>
mov    0x1c(%esp),%ecx
mov    %edi,%edx
mov    %ebx,(%esp)
call   804a3c0 <readtask@plt+0xd10>
test   %ebx,%ebx
jne    804a4ab <readtask@plt+0xdfb>
mov    0x18(%esp),%eax
movb   $0x0,0x805ed60(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
cmp    $0xd,%ebx
je     804a612 <readtask@plt+0xf62>
mov    %ebx,(%esp)
mov    0x805ed28,%edi
call   80492a0 <signal_number_to_name@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054368,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049280 <dcgettext@plt>
movl   $0x805e260,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
lea    -0x1(%ebx),%ecx
cmp    $0xb,%ecx
ja     804a592 <readtask@plt+0xee2>
mov    $0x1,%eax
shl    %cl,%eax
test   $0xa01,%eax
jne    804a606 <readtask@plt+0xf56>
movl   $0x5,0x8(%esp)
movl   $0x805438b,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x8059360,0x10(%esp)
movl   $0x42,0xc(%esp)
movl   $0x80543a2,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x14(%esp)
call   80493d0 <error_at_line@plt>
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   8049250 <signal@plt>
call   8049380 <getpid@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049400 <kill@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x1,(%esp)
call   80493f0 <exit@plt>
movl   $0x0,(%esp)
call   80491b0 <_exit@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
mov    %ebx,(%esp)
call   8051c70 <readtask@plt+0x85c0>
test   %eax,%eax
je     804a6bf <readtask@plt+0x100f>
mov    0x805e1d4,%eax
mov    0x20(%ebx),%esi
mov    0x24(%ebx),%edi
add    0x18(%ebx),%esi
adc    0x1c(%ebx),%edi
test   %eax,%eax
je     804a65c <readtask@plt+0xfac>
add    0x30(%ebx),%esi
adc    0x34(%ebx),%edi
add    0x28(%ebx),%esi
adc    0x2c(%ebx),%edi
mov    0x805e288,%eax
mov    0x805e28c,%edx
mov    %eax,0x18(%esp)
mov    %edx,%ecx
mov    %eax,%edx
mov    0x805e1ac,%eax
mov    %ecx,0xc(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x10(%esp)
sar    $0x1f,%eax
mov    %eax,0x14(%esp)
mov    %edx,%eax
mov    %eax,0x8(%esp)
mov    0x38(%ebx),%eax
mov    0x3c(%ebx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
sub    %eax,0x10(%esp)
sbb    %edx,0x14(%esp)
xor    %eax,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%edx
mov    %ecx,%ebp
or     %edx,%ebp
jne    804a6c8 <readtask@plt+0x1018>
mov    %eax,0x10(%ebx)
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    $0x3e8,%ax
mul    %esi
mov    0x18(%esp),%esi
imul   $0x3e8,%edi,%ecx
mov    0x1c(%esp),%edi
mov    %esi,0x8(%esp)
add    %ecx,%edx
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
jmp    804a6b7 <readtask@plt+0x1007>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
movl   $0x805444a,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
movl   $0x0,0x805e1bc
00
movl   $0x0,0x805e1b8
00
movl   $0x8054431,0x805e214
08
movl   $0x8054436,0x805e210
08
movl   $0x805443b,0x805e20c
08
movl   $0x8054440,0x805e208
08
movl   $0x8054445,0x805e204
08
movl   $0x0,0x805e19c
00
movl   $0x0,0x805e198
00
movl   $0x0,0x805e194
00
movl   $0x0,0x805e190
00
call   80493b0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a880 <readtask@plt+0x11d0>
cmpb   $0x0,(%eax)
je     804a880 <readtask@plt+0x11d0>
movl   $0x8054461,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
je     804a8b1 <readtask@plt+0x1201>
mov    $0x3,%esi
mov    $0x805442d,%ebx
lea    0x2c(%esp),%edi
movl   $0x10,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049530 <__strncpy_chk@plt>
movb   $0x0,0x2c(%esp,%esi,1)
mov    %edi,(%esp)
call   80494f0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x805e21c
je     804ab25 <readtask@plt+0x1475>
mov    $0x1b,%esi
xor    %ebp,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
lea    (%esi,%ebp,1),%ebx
shr    %ebx
lea    0x80547e0(,%ebx,8),%eax
mov    %eax,0x1c(%esp)
mov    0x80547e0(,%ebx,8),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80494b0 <strcasecmp@plt>
test   %eax,%eax
js     804a8c8 <readtask@plt+0x1218>
je     804a8d8 <readtask@plt+0x1228>
lea    0x1(%ebx),%ebp
cmp    %ebp,%esi
ja     804a810 <readtask@plt+0x1160>
movl   $0x5,0x8(%esp)
movl   $0x80545ec,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    0x3c(%esp),%edx
xor    %gs:0x14,%edx
jne    804ab1a <readtask@plt+0x146a>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x8054459,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a8e0 <readtask@plt+0x1230>
cmpb   $0x0,(%eax)
mov    $0x8054425,%eax
movl   $0x8054461,(%esp)
cmove  %eax,%ebx
call   80493b0 <getenv@plt>
test   %eax,%eax
jne    804a7c4 <readtask@plt+0x1114>
mov    %ebx,(%esp)
call   8049470 <strlen@plt>
cmp    $0xf,%eax
mov    %eax,%esi
ja     804a848 <readtask@plt+0x1198>
jmp    804a7ce <readtask@plt+0x111e>
lea    0x0(%esi),%esi
cmp    %ebx,%ebp
jae    804a848 <readtask@plt+0x1198>
mov    %ebx,%esi
jmp    804a810 <readtask@plt+0x1160>
nop
mov    0x1c(%esp),%eax
jmp    *0x4(%eax)
nop
mov    $0x8054425,%ebx
jmp    804a7b0 <readtask@plt+0x1100>
movl   $0x8054497,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
jne    804a938 <readtask@plt+0x1288>
movl   $0x805449e,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
jne    804a938 <readtask@plt+0x1288>
movl   $0x80544ae,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
je     804a942 <readtask@plt+0x1292>
movl   $0x80544ae,(%esp)
call   80493b0 <getenv@plt>
cmpb   $0x6f,(%eax)
jne    804a942 <readtask@plt+0x1292>
cmpb   $0x6e,0x1(%eax)
jne    804a942 <readtask@plt+0x1292>
cmpb   $0x0,0x2(%eax)
jne    804a942 <readtask@plt+0x1292>
nop
movl   $0x1,0x805e1bc
00
xor    %eax,%eax
jmp    804a864 <readtask@plt+0x11b4>
movl   $0x22,0x805e1bc
00
xor    %eax,%eax
movl   $0x1,0x805e1b8
00
movl   $0x80544b5,0x805e19c
08
movl   $0x80544bb,0x805e198
08
movl   $0x80544c2,0x805e194
08
movl   $0x80544bc,0x805e190
08
movl   $0x80544c2,0x805e214
08
movl   $0x80544c7,0x805e210
08
movl   $0x80544cc,0x805e20c
08
movl   $0x80544d1,0x805e208
08
movl   $0x80544d6,0x805e204
08
jmp    804a864 <readtask@plt+0x11b4>
movl   $0x801,0x805e1bc
00
xor    %eax,%eax
jmp    804a864 <readtask@plt+0x11b4>
movl   $0x80544e0,0x805e194
08
xor    %eax,%eax
jmp    804a864 <readtask@plt+0x11b4>
movl   $0x60,0x805e1bc
00
xor    %eax,%eax
movl   $0x1,0x805e1b8
00
movl   $0x8054488,0x805e19c
08
movl   $0x805448d,0x805e194
08
movl   $0x8054492,0x805e190
08
jmp    804a864 <readtask@plt+0x11b4>
movl   $0x80544db,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
je     804aa37 <readtask@plt+0x1387>
movzbl (%eax),%eax
sub    $0x31,%eax
cmp    $0x8,%al
jbe    804a938 <readtask@plt+0x1288>
movl   $0x8,0x805e1bc
00
xor    %eax,%eax
jmp    804a864 <readtask@plt+0x11b4>
movl   $0x401,0x805e1bc
00
xor    %eax,%eax
jmp    804a864 <readtask@plt+0x11b4>
movl   $0x80,0x805e1bc
00
movl   $0x1,0x805e1b8
00
movl   $0x8054474,0x805e214
08
xor    %eax,%eax
movl   $0x8054479,0x805e210
08
movl   $0x805447e,0x805e208
08
movl   $0x8054483,0x805e204
08
jmp    804a864 <readtask@plt+0x11b4>
jmp    804a9cf <readtask@plt+0x131f>
jmp    804a938 <readtask@plt+0x1288>
movl   $0x320,0x805e1bc
00
xor    %eax,%eax
jmp    804a864 <readtask@plt+0x11b4>
jmp    804a938 <readtask@plt+0x1288>
jmp    804a938 <readtask@plt+0x1288>
movl   $0x50,0x805e1bc
00
xor    %eax,%eax
movl   $0x1,0x805e1b8
00
jmp    804a864 <readtask@plt+0x11b4>
movl   $0x16,0x805e1bc
00
jmp    804aa63 <readtask@plt+0x13b3>
jmp    804a949 <readtask@plt+0x1299>
jmp    804aa6d <readtask@plt+0x13bd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    804a938 <readtask@plt+0x1288>
xor    %eax,%eax
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    804a864 <readtask@plt+0x11b4>
jmp    804a9be <readtask@plt+0x130e>
lea    0x0(%esi),%esi
call   8049290 <__stack_chk_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x805461c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   80493f0 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x805e1a8,%ebx
cmp    $0xdeadbeef,%ebx
je     804abab <readtask@plt+0x14fb>
test   %ebx,%ebx
jne    804ab92 <readtask@plt+0x14e2>
jmp    804abab <readtask@plt+0x14fb>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0x4(%ebx),%eax
mov    (%ebx),%esi
mov    %eax,(%esp)
call   80491d0 <free@plt>
mov    %ebx,(%esp)
call   80491d0 <free@plt>
test   %esi,%esi
jne    804ab90 <readtask@plt+0x14e0>
movl   $0x805e9e0,(%esp)
lea    0x28(%esp),%ebx
movl   $0x0,0x805e1a8
00
call   8049570 <look_up_our_self@plt>
mov    %ebx,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x1,(%esp)
call   8049300 <ioctl@plt>
cmp    $0xffffffff,%eax
je     804adb8 <readtask@plt+0x1708>
movzwl 0x2a(%esp),%edx
test   %dx,%dx
je     804adb8 <readtask@plt+0x1708>
movzwl 0x28(%esp),%eax
test   %ax,%ax
je     804adb8 <readtask@plt+0x1708>
movl   $0x1,(%esp)
mov    %edx,0x805e1b4
mov    %eax,0x805e1b0
call   8049650 <isatty@plt>
test   %eax,%eax
jne    804ac27 <readtask@plt+0x1577>
movl   $0x20000,0x805e1b4
00
movl   $0x80544ee,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
je     804ac40 <readtask@plt+0x1590>
cmpb   $0x0,(%eax)
jne    804af08 <readtask@plt+0x1858>
movl   $0x80544f6,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
je     804ac59 <readtask@plt+0x15a9>
cmpb   $0x0,(%eax)
jne    804af48 <readtask@plt+0x1898>
mov    0x805e1b0,%esi
mov    0x805e1b4,%ebx
cmp    $0x8,%ebx
jle    804aec0 <readtask@plt+0x1810>
cmp    $0x1,%esi
jle    804aec0 <readtask@plt+0x1810>
call   804a710 <readtask@plt+0x1060>
movl   $0x0,0x805e218
00
movl   $0x0,0x805e200
00
movl   $0x0,0x805e1fc
00
call   80492c0 <geteuid@plt>
movl   $0x0,0x805e1ec
00
movl   $0x0,0x805e1e8
00
movl   $0x0,0x805e1e4
00
movl   $0x0,0x805e1e0
00
movl   $0xffffffff,0x805e1dc
ff
mov    %eax,0x805e1f8
mov    0x805ebe0,%eax
movl   $0x0,0x805e1d8
00
movl   $0x0,0x805e1d4
00
movl   $0x1,0x805e1d0
00
mov    %eax,0x805e1f0
sar    $0x1f,%eax
mov    %eax,0x805e1f4
movl   $0x0,0x805e1cc
00
movl   $0x0,0x805e1c8
00
call   80494c0 <getpagesize@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x805e1c4
00
mov    %eax,0x805e1c0
call   8049310 <uptime@plt>
movl   $0x5,0x8(%esp)
movl   $0x80544fc,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x805e1a8
00
movl   $0x0,0x805e1a4
00
mov    %eax,0x805e1ac
movl   $0x0,0x805e1a0
00
movl   $0x0,0x805e18c
00
movl   $0x0,0x805e188
00
movl   $0x0,0x805e184
00
movl   $0x0,0x805e180
00
call   8049280 <dcgettext@plt>
mov    %eax,0x805ed40
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x2,(%esp)
call   8049300 <ioctl@plt>
cmp    $0xffffffff,%eax
je     804ade3 <readtask@plt+0x1733>
movzwl 0x2a(%esp),%edx
test   %dx,%dx
jne    804ae90 <readtask@plt+0x17e0>
mov    %ebx,0x8(%esp)
movl   $0x5413,0x4(%esp)
movl   $0x0,(%esp)
call   8049300 <ioctl@plt>
cmp    $0xffffffff,%eax
je     804ae0e <readtask@plt+0x175e>
movzwl 0x2a(%esp),%edx
test   %dx,%dx
jne    804aea8 <readtask@plt+0x17f8>
movl   $0x900,0x4(%esp)
movl   $0x80544e5,(%esp)
call   8049410 <open@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     804ae68 <readtask@plt+0x17b8>
mov    %ebx,0x8(%esp)
movl   $0x5413,0x4(%esp)
mov    %eax,(%esp)
call   8049300 <ioctl@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8049690 <close@plt>
cmp    $0xffffffff,%ebx
je     804ae68 <readtask@plt+0x17b8>
movzwl 0x2a(%esp),%edx
test   %dx,%dx
je     804ae68 <readtask@plt+0x17b8>
movzwl 0x28(%esp),%eax
test   %ax,%ax
jne    804ac02 <readtask@plt+0x1552>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x50,%eax
mov    $0x18,%edx
mov    %ax,0x2a(%esp)
mov    $0x18,%eax
mov    %dx,0x28(%esp)
mov    $0x50,%edx
jmp    804ac02 <readtask@plt+0x1552>
nop
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x28(%esp),%eax
test   %ax,%ax
jne    804ac02 <readtask@plt+0x1552>
jmp    804ade3 <readtask@plt+0x1733>
nop
lea    0x0(%esi,%eiz,1),%esi
movzwl 0x28(%esp),%eax
test   %ax,%ax
jne    804ac02 <readtask@plt+0x1552>
jmp    804ae0e <readtask@plt+0x175e>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8054640,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
jmp    804ac77 <readtask@plt+0x15c7>
lea    0x0(%esi),%esi
lea    0x24(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049660 <strtol@plt>
mov    0x24(%esp),%edx
cmpb   $0x0,(%edx)
jne    804ac40 <readtask@plt+0x1590>
lea    -0x1(%eax),%edx
cmp    $0x1fffe,%edx
ja     804ac40 <readtask@plt+0x1590>
mov    %eax,0x805e1b4
jmp    804ac40 <readtask@plt+0x1590>
xchg   %ax,%ax
lea    0x24(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049660 <strtol@plt>
mov    0x24(%esp),%edx
cmpb   $0x0,(%edx)
jne    804ac59 <readtask@plt+0x15a9>
lea    -0x1(%eax),%edx
cmp    $0x1fffe,%edx
ja     804ac59 <readtask@plt+0x15a9>
mov    %eax,0x805e1b0
mov    %eax,%esi
jmp    804ac5f <readtask@plt+0x15af>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x8054501,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x805e190,%ebp
mov    0x805e194,%edi
mov    0x805e198,%esi
mov    0x805e19c,%edx
test   %ebp,%ebp
mov    0x805e210,%ecx
cmove  %eax,%ebp
test   %edi,%edi
cmove  %eax,%edi
test   %esi,%esi
cmove  %eax,%esi
test   %edx,%edx
cmove  %eax,%edx
mov    %edx,0x38(%esp)
mov    0x805e204,%edx
mov    %edi,0x28(%esp)
mov    %esi,0x24(%esp)
mov    0x38(%esp),%esi
mov    %ebp,0x2c(%esp)
test   %edx,%edx
mov    %edx,%ebx
mov    0x805e208,%edx
cmove  %eax,%ebx
mov    %ebx,0x3c(%esp)
mov    0x805e20c,%ebx
mov    0x3c(%esp),%edi
test   %edx,%edx
cmove  %eax,%edx
test   %ebx,%ebx
cmove  %eax,%ebx
test   %ecx,%ecx
cmove  %eax,%ecx
cmpl   $0x0,0x805e214
cmovne 0x805e214,%eax
mov    %ecx,0x10(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0xc(%esp)
mov    0x805e240,%eax
mov    %esi,0x20(%esp)
mov    %edi,0x1c(%esp)
mov    %ebx,0x14(%esp)
movl   $0x8054674,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
call   8049210 <display_version@plt>
mov    0x805e278,%eax
movl   $0x805451d,0x8(%esp)
movl   $0x1,0x4(%esp)
movzbl %al,%edx
mov    %edx,0x14(%esp)
movzbl %ah,%edx
sar    $0x10,%eax
movzbl %al,%eax
mov    %eax,0xc(%esp)
mov    0x805e240,%eax
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805e240,%eax
movl   $0x8,0x18(%esp)
movl   $0x4,0x14(%esp)
movl   $0x13,0x10(%esp)
movl   $0x2,0xc(%esp)
movl   $0x80546e4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805e1b0,%eax
movl   $0x805470c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x805e1b4,%eax
mov    %eax,0x14(%esp)
mov    0x805e1d0,%eax
mov    %eax,0x10(%esp)
mov    0x805e1dc,%eax
mov    %eax,0xc(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805e1c0,%eax
mov    0x805e1f0,%ecx
mov    0x805e1f4,%ebx
mov    0x805e28c,%edx
mov    %eax,0x28(%esp)
mov    0x805e288,%eax
movl   $0x8054754,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x24(%esp)
movzbl %cl,%edx
mov    %eax,0x20(%esp)
mov    %ecx,%eax
shrd   $0xc,%ebx,%eax
xor    %al,%al
or     %edx,%eax
mov    %eax,0x1c(%esp)
shrd   $0x8,%ebx,%ecx
mov    %ebx,%eax
and    $0xfff,%ecx
and    $0xfffff000,%eax
or     %ecx,%eax
mov    %eax,0x18(%esp)
mov    0x805e1f8,%eax
mov    %eax,0x14(%esp)
mov    0x805e21c,%eax
mov    %eax,0x10(%esp)
mov    0x805e1bc,%eax
mov    %eax,0xc(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805e240,%eax
movl   $0x4,0x14(%esp)
movl   $0x4,0x10(%esp)
movl   $0x248,0xc(%esp)
movl   $0x80547a0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805e240,%eax
movl   $0x80548b8,0xc(%esp)
movl   $0x8054535,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805e1cc,%eax
mov    %eax,(%esp)
call   80491e0 <open_psdb@plt>
mov    0x805e1cc,%edx
mov    $0x8054508,%eax
movl   $0x8054542,0x8(%esp)
movl   $0x1,0x4(%esp)
test   %edx,%edx
cmovne %edx,%eax
mov    %eax,0xc(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0x8059360,0x10(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x14(%esp)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esp)
call   80493d0 <error_at_line@plt>
movl   $0x1,(%esp)
call   80493f0 <exit@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0x805e280,%ebx
mov    0xa4(%esp),%esi
movl   $0x5,0x8(%esp)
mov    0xa0(%esp),%ebp
movl   $0x80548be,0x4(%esp)
movl   $0x0,(%esp)
test   %esi,%esi
cmovne 0x805e240,%ebx
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059361,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
mov    %eax,0x805ec40
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x80593b1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec44
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x805447c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec48
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x80548c5,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec4c
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x805551e,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec50
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x80548cc,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec54
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x80595b4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec58
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x80548d4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec5c
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x8055835,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec60
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x80548d9,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec64
call   8049280 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x8055fed,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805ec68
call   8049280 <dcgettext@plt>
test   %ebp,%ebp
mov    %eax,0x805ec6c
je     804b5e8 <readtask@plt+0x1f38>
mov    %edi,%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
je     804b49b <readtask@plt+0x1deb>
mov    0x805ec44(,%edi,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
je     804b49b <readtask@plt+0x1deb>
add    $0x1,%edi
cmp    $0x6,%edi
je     804b5e8 <readtask@plt+0x1f38>
mov    0x805ec40(,%edi,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
jne    804b461 <readtask@plt+0x1db1>
movl   $0x5,0x8(%esp)
mov    0x805ed28,%ebp
movl   $0x80548dd,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %ebp,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049600 <__fprintf_chk@plt>
cmp    $0x5,%edi
sete   %al
mov    %eax,%ebp
jne    804b822 <readtask@plt+0x2172>
movl   $0x5,0x8(%esp)
movl   $0x8054914,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049600 <__fprintf_chk@plt>
mov    %edi,%eax
and    $0xfffffffb,%eax
sub    $0x1,%eax
jne    804b54d <readtask@plt+0x1e9d>
movl   $0x5,0x8(%esp)
movl   $0x8054ab4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049600 <__fprintf_chk@plt>
cmp    $0x2,%edi
sete   %al
or     %ebp,%eax
cmp    $0x3,%edi
sete   %dl
or     %ebp,%edx
test   %al,%al
lea    -0x4(%edi),%ebp
je     804b59c <readtask@plt+0x1eec>
movl   $0x5,0x8(%esp)
movl   $0x8054cc0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x50(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x50(%esp),%edx
test   %dl,%dl
je     804b5d0 <readtask@plt+0x1f20>
movl   $0x5,0x8(%esp)
movl   $0x8055124,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049600 <__fprintf_chk@plt>
cmp    $0x1,%ebp
jbe    804b780 <readtask@plt+0x20d0>
cmp    $0x6,%edi
jne    804b748 <readtask@plt+0x2098>
jmp    804b622 <readtask@plt+0x1f72>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
mov    0x805ed28,%edi
movl   $0x80548dd,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805ec64,%edx
mov    0x805ec5c,%eax
mov    0x805ec4c,%edi
mov    0x805ec44,%ebp
mov    %edx,0x78(%esp)
mov    0x805ec54,%edx
mov    %eax,0x50(%esp)
mov    0x805ec68,%eax
mov    %edi,0x58(%esp)
mov    0x805ec60,%edi
mov    0x805ec6c,%ecx
mov    %edx,0x54(%esp)
mov    0x805ec48,%edx
mov    %ebp,0x5c(%esp)
mov    0x805ec58,%ebp
mov    %eax,0x60(%esp)
mov    0x805ec50,%eax
mov    %edi,0x64(%esp)
mov    0x805ec40,%edi
movl   $0x5,0x8(%esp)
movl   $0x8055488,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x7c(%esp)
mov    %ebp,0x68(%esp)
mov    0x805ed40,%ebp
mov    %edx,0x70(%esp)
mov    %edi,0x74(%esp)
mov    0x805ed28,%edi
mov    %eax,0x6c(%esp)
call   8049280 <dcgettext@plt>
mov    0x7c(%esp),%ecx
mov    0x78(%esp),%edx
mov    %ebp,0x30(%esp)
mov    %edi,0x2c(%esp)
mov    %ecx,0x48(%esp)
mov    0x50(%esp),%ecx
mov    %edx,0x44(%esp)
mov    0x54(%esp),%edx
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %ecx,0x40(%esp)
mov    0x58(%esp),%ecx
mov    %edx,0x3c(%esp)
mov    0x70(%esp),%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x38(%esp)
mov    0x5c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x34(%esp)
mov    0x60(%esp),%ecx
mov    %ecx,0x28(%esp)
mov    0x64(%esp),%ecx
mov    %ecx,0x24(%esp)
mov    0x68(%esp),%ecx
mov    %ecx,0x20(%esp)
mov    0x6c(%esp),%ecx
mov    %ecx,0x1c(%esp)
mov    0x74(%esp),%ecx
mov    %ecx,0x14(%esp)
call   8049600 <__fprintf_chk@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80548f4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8049600 <__fprintf_chk@plt>
mov    %esi,(%esp)
call   80493f0 <exit@plt>
mov    0x805ec60,%edx
mov    0x805ec68,%ecx
mov    0x805ec40,%edi
mov    0x805ec50,%eax
mov    %edx,0x5c(%esp)
mov    0x805ec48,%edx
movl   $0x5,0x8(%esp)
mov    0x805ec58,%ebp
movl   $0x80551f4,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x60(%esp)
mov    %edx,0x54(%esp)
mov    %edi,0x58(%esp)
mov    0x805ed40,%edi
mov    %eax,0x50(%esp)
call   8049280 <dcgettext@plt>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0xc(%esp)
mov    %ecx,0x24(%esp)
mov    0x50(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x54(%esp),%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x18(%esp)
mov    0x58(%esp),%ecx
mov    %edx,0x14(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x10(%esp)
call   8049600 <__fprintf_chk@plt>
jmp    804b748 <readtask@plt+0x2098>
test   %edi,%edi
je     804b4e3 <readtask@plt+0x1e33>
lea    0x0(%esi),%esi
jmp    804b513 <readtask@plt+0x1e63>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x100(%edx),%eax
cmp    %eax,0x100(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x104(%eax),%eax
sub    0x104(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    0x2c(%edx),%ecx
mov    0x28(%edx),%esi
mov    0x2c(%eax),%edx
mov    0x28(%eax),%ebx
cmp    %edx,%ecx
jae    804b8c8 <readtask@plt+0x2218>
mov    $0xffffffff,%eax
nop
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jbe    804b8e8 <readtask@plt+0x2238>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     804b8c0 <readtask@plt+0x2210>
jb     804b8d9 <readtask@plt+0x2229>
cmp    %ebx,%esi
ja     804b8c0 <readtask@plt+0x2210>
xor    %eax,%eax
pop    %ebx
pop    %esi
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%esi
jb     804b8ba <readtask@plt+0x220a>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     804b8c0 <readtask@plt+0x2210>
jmp    804b8d3 <readtask@plt+0x2223>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0xb4(%eax),%eax
sub    0xb4(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x1f8(%eax),%eax
sub    0x1f8(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0xb8(%eax),%eax
sub    0xb8(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xbc(%edx),%eax
cmp    %eax,0xbc(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xc0(%edx),%eax
cmp    %eax,0xc0(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xc4(%edx),%eax
cmp    %eax,0xc4(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xc8(%edx),%eax
cmp    %eax,0xc8(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xcc(%edx),%eax
cmp    %eax,0xcc(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xd0(%edx),%eax
cmp    %eax,0xd0(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xd4(%edx),%eax
cmp    %eax,0xd4(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xd8(%edx),%eax
cmp    %eax,0xd8(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xdc(%edx),%eax
cmp    %eax,0xdc(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xe0(%edx),%eax
cmp    %eax,0xe0(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xe4(%edx),%eax
cmp    %eax,0xe4(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xe8(%edx),%eax
cmp    %eax,0xe8(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xec(%edx),%eax
cmp    %eax,0xec(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xf0(%edx),%eax
cmp    %eax,0xf0(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xf8(%edx),%eax
cmp    %eax,0xf8(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xfc(%edx),%eax
cmp    %eax,0xfc(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x108(%edx),%eax
cmp    %eax,0x108(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x10c(%edx),%eax
cmp    %eax,0x10c(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x110(%eax),%eax
sub    0x110(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x114(%edx),%eax
cmp    %eax,0x114(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x118(%edx),%eax
cmp    %eax,0x118(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x11c(%edx),%eax
cmp    %eax,0x11c(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x120(%edx),%eax
cmp    %eax,0x120(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    0x1c(%edx),%ecx
mov    0x18(%edx),%esi
mov    0x1c(%eax),%edx
mov    0x18(%eax),%ebx
cmp    %edx,%ecx
jae    804bdc8 <readtask@plt+0x2718>
mov    $0xffffffff,%eax
nop
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jbe    804bde8 <readtask@plt+0x2738>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     804bdc0 <readtask@plt+0x2710>
jb     804bdd9 <readtask@plt+0x2729>
cmp    %ebx,%esi
ja     804bdc0 <readtask@plt+0x2710>
xor    %eax,%eax
pop    %ebx
pop    %esi
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%esi
jb     804bdba <readtask@plt+0x270a>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     804bdc0 <readtask@plt+0x2710>
jmp    804bdd3 <readtask@plt+0x2723>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    0x24(%edx),%ecx
mov    0x20(%edx),%esi
mov    0x24(%eax),%edx
mov    0x20(%eax),%ebx
cmp    %edx,%ecx
jae    804be28 <readtask@plt+0x2778>
mov    $0xffffffff,%eax
nop
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jbe    804be48 <readtask@plt+0x2798>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     804be20 <readtask@plt+0x2770>
jb     804be39 <readtask@plt+0x2789>
cmp    %ebx,%esi
ja     804be20 <readtask@plt+0x2770>
xor    %eax,%eax
pop    %ebx
pop    %esi
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%esi
jb     804be1a <readtask@plt+0x276a>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     804be20 <readtask@plt+0x2770>
jmp    804be33 <readtask@plt+0x2783>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x9c(%edx),%eax
cmp    %eax,0x9c(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xa0(%edx),%eax
cmp    %eax,0xa0(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xa4(%edx),%eax
cmp    %eax,0xa4(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xa8(%edx),%eax
cmp    %eax,0xa8(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xac(%edx),%eax
cmp    %eax,0xac(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    0x3c(%edx),%ecx
mov    0x38(%edx),%esi
mov    0x3c(%eax),%edx
mov    0x38(%eax),%ebx
cmp    %edx,%ecx
jae    804bf78 <readtask@plt+0x28c8>
mov    $0xffffffff,%eax
nop
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jbe    804bf98 <readtask@plt+0x28e8>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     804bf70 <readtask@plt+0x28c0>
jb     804bf89 <readtask@plt+0x28d9>
cmp    %ebx,%esi
ja     804bf70 <readtask@plt+0x28c0>
xor    %eax,%eax
pop    %ebx
pop    %esi
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%esi
jb     804bf6a <readtask@plt+0x28ba>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     804bf70 <readtask@plt+0x28c0>
jmp    804bf83 <readtask@plt+0x28d3>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0xb0(%edx),%eax
cmp    %eax,0xb0(%ecx)
mov    $0xffffffff,%eax
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x20c(%edx),%eax
cmp    %eax,0x20c(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x210(%edx),%eax
cmp    %eax,0x210(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x204(%edx),%eax
cmp    %eax,0x204(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x208(%edx),%eax
cmp    %eax,0x208(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x214(%edx),%eax
cmp    %eax,0x214(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x218(%edx),%eax
cmp    %eax,0x218(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x21c(%edx),%eax
cmp    %eax,0x21c(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x220(%edx),%eax
cmp    %eax,0x220(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x1fc(%eax),%eax
sub    0x1fc(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    (%eax),%eax
sub    (%edx),%eax
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x4(%eax),%eax
sub    0x4(%edx),%eax
ret
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x1f0(%eax),%eax
sub    0x1f0(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x1f4(%eax),%eax
sub    0x1f4(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x200(%edx),%eax
cmp    %eax,0x200(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x224(%eax),%eax
sub    0x224(%edx),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x10(%eax),%eax
sub    0x10(%edx),%eax
ret
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movsbl 0x14(%eax),%eax
movsbl 0x14(%edx),%edx
sub    %edx,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x805e288,%esi
mov    0x30(%esp),%ecx
mov    0x805e28c,%edi
mov    0x34(%esp),%ebx
mov    0x20(%ecx),%eax
mov    0x24(%ecx),%edx
add    0x18(%ecx),%eax
adc    0x1c(%ecx),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    0x24(%ebx),%edx
mov    %eax,%ebp
mov    0x20(%ebx),%eax
add    0x18(%ebx),%eax
adc    0x1c(%ebx),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
xor    %ecx,%ecx
mov    $0xffffffff,%edx
cmp    %eax,%ebp
seta   %cl
cmovae %ecx,%edx
add    $0x1c,%esp
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x805e1ac,%ebp
mov    0x805e288,%esi
mov    0x805e28c,%edi
mov    %ebp,%eax
sar    $0x1f,%eax
mov    %eax,0x1c(%esp)
mov    0x40(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %ebp,0x18(%esp)
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
cmp    %edx,0x1c(%esp)
jb     804c37c <readtask@plt+0x2ccc>
jbe    804c378 <readtask@plt+0x2cc8>
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %ecx,%ebx
mov    0x44(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
cmp    %edx,0x1c(%esp)
jb     804c374 <readtask@plt+0x2cc4>
jbe    804c370 <readtask@plt+0x2cc0>
sub    %eax,%ebp
cmp    %ebp,%ebx
jb     804c388 <readtask@plt+0x2cd8>
xor    %eax,%eax
cmp    %ebp,%ebx
seta   %al
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %eax,%ebp
jae    804c358 <readtask@plt+0x2ca8>
xor    %ebp,%ebp
jmp    804c35e <readtask@plt+0x2cae>
cmp    %eax,%ebp
jae    804c32c <readtask@plt+0x2c7c>
xor    %ebx,%ebx
xchg   %ax,%ax
jmp    804c332 <readtask@plt+0x2c82>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    804c365 <readtask@plt+0x2cb5>
nop
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x230(%edx),%eax
cmp    %eax,0x230(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x234(%edx),%eax
cmp    %eax,0x234(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x238(%edx),%eax
cmp    %eax,0x238(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x23c(%edx),%eax
cmp    %eax,0x23c(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x240(%edx),%eax
cmp    %eax,0x240(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0xc(%esp),%edx
xor    %ebx,%ebx
mov    0x8(%esp),%ecx
mov    0x244(%edx),%eax
cmp    %eax,0x244(%ecx)
mov    $0xffffffff,%eax
setg   %bl
cmovge %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    0x8(%esp),%edx
xor    %ebx,%ebx
mov    0xc(%esp),%eax
mov    0xf0(%edx),%ecx
add    0xec(%edx),%ecx
mov    0xf0(%eax),%edx
add    0xec(%eax),%edx
mov    $0xffffffff,%eax
cmp    %edx,%ecx
seta   %bl
cmovae %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    0x10(%esp),%edx
mov    0xc(%esp),%ecx
movzbl 0x14(%edx),%eax
mov    %al,(%ecx)
mov    0xb8(%edx),%eax
test   %eax,%eax
js     804c580 <readtask@plt+0x2ed0>
je     804c590 <readtask@plt+0x2ee0>
movb   $0x4e,0x1(%ecx)
mov    $0x2,%ebx
mov    $0x2,%eax
mov    0xe4(%edx),%esi
test   %esi,%esi
je     804c531 <readtask@plt+0x2e81>
add    $0x1,%eax
movb   $0x4c,(%ecx,%ebx,1)
mov    %eax,%ebx
mov    0x1fc(%edx),%esi
cmp    %esi,0x1f4(%edx)
je     804c570 <readtask@plt+0x2ec0>
cmpl   $0x1,0x1f8(%edx)
jle    804c551 <readtask@plt+0x2ea1>
add    $0x1,%eax
movb   $0x6c,(%ecx,%ebx,1)
mov    %eax,%ebx
mov    0x224(%edx),%esi
cmp    %esi,0x1f0(%edx)
jne    804c568 <readtask@plt+0x2eb8>
add    $0x1,%eax
movb   $0x2b,(%ecx,%ebx,1)
mov    %eax,%ebx
movb   $0x0,(%ecx,%ebx,1)
pop    %ebx
pop    %esi
ret
nop
add    $0x1,%eax
movb   $0x73,(%ecx,%ebx,1)
mov    %eax,%ebx
jmp    804c53f <readtask@plt+0x2e8f>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x3c,0x1(%ecx)
mov    $0x2,%ebx
mov    $0x2,%eax
jmp    804c51e <readtask@plt+0x2e6e>
mov    $0x1,%ebx
mov    $0x1,%eax
jmp    804c51e <readtask@plt+0x2e6e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
movzbl 0x14(%edx),%edx
movb   $0x0,0x1(%eax)
mov    %dl,(%eax)
mov    $0x1,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
movl   $0x2d,0x14(%esp)
movl   $0x80554eb,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x805e288,%eax
mov    0x805e28c,%edx
mov    0x805e1ac,%esi
mov    0x40(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    %eax,%edi
mov    %esi,%eax
mov    %edx,%ecx
cltd
cmp    %ecx,%edx
jb     804c758 <readtask@plt+0x30a8>
jbe    804c750 <readtask@plt+0x30a0>
sub    %edi,%esi
mov    $0x88888889,%ecx
mov    %esi,%eax
mul    %ecx
mov    %edx,%ebp
shr    $0x5,%ebp
imul   $0x3c,%ebp,%ebp
shr    $0x5,%edx
mov    %edx,%eax
sub    %ebp,%esi
mov    %esi,%ebp
mov    %edx,%esi
mul    %ecx
mov    %edx,%edi
mov    %edx,%ecx
shr    $0x5,%edi
imul   $0x3c,%edi,%edi
shr    $0x5,%ecx
mov    %ecx,%eax
sub    %edi,%esi
mov    %esi,%edi
mov    $0xaaaaaaab,%esi
mul    %esi
mov    %edx,%esi
shr    $0x4,%esi
lea    (%esi,%esi,2),%eax
mov    %esi,%edx
shl    $0x3,%eax
sub    %eax,%ecx
xor    %eax,%eax
test   %edx,%edx
mov    %ecx,%esi
je     804c6d4 <readtask@plt+0x3024>
mov    %edx,0x14(%esp)
movl   $0x80554ee,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x1c(%esp)
call   8049140 <__snprintf_chk@plt>
mov    0x1c(%esp),%edx
lea    (%ebx,%eax,1),%ecx
xor    %eax,%eax
or     %esi,%edx
je     804c711 <readtask@plt+0x3061>
mov    %ecx,(%esp)
mov    %esi,0x14(%esp)
movl   $0x80554f2,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   8049140 <__snprintf_chk@plt>
mov    0x1c(%esp),%ecx
lea    (%ecx,%eax,1),%esi
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %esi,(%esp)
movl   $0x805550b,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
add    %esi,%eax
sub    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    %edi,%esi
jae    804c64f <readtask@plt+0x2f9f>
mov    %ebx,%ecx
xor    %edi,%edi
xor    %ebp,%ebp
xor    %eax,%eax
jmp    804c711 <readtask@plt+0x3061>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x805e288,%eax
mov    0x805e28c,%edx
mov    0x805e1ac,%ebx
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %edx,0xc(%esp)
mov    %ebx,%edi
sar    $0x1f,%edi
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
cmp    %edx,%edi
jae    804c7b8 <readtask@plt+0x3108>
xor    %ebx,%ebx
jmp    804c7bc <readtask@plt+0x310c>
lea    0x0(%esi),%esi
jbe    804c7f8 <readtask@plt+0x3148>
sub    %eax,%ebx
mov    0x30(%esp),%eax
mov    %ebx,0x14(%esp)
movl   $0x80554ff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,%ebx
jae    804c7ba <readtask@plt+0x310a>
xor    %ebx,%ebx
xchg   %ax,%ax
jmp    804c7bc <readtask@plt+0x310c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
mov    0x20(%eax),%ebx
mov    0x18(%eax),%edx
mov    0x24(%eax),%esi
mov    0x1c(%eax),%ecx
mov    %ebx,0x20(%esp)
add    %edx,0x20(%esp)
mov    0x805e1d4,%edx
mov    %esi,0x24(%esp)
adc    %ecx,0x24(%esp)
test   %edx,%edx
je     804c85d <readtask@plt+0x31ad>
mov    0x30(%eax),%ebx
add    %ebx,0x20(%esp)
mov    0x34(%eax),%esi
mov    0x28(%eax),%ebx
adc    %esi,0x24(%esp)
mov    0x2c(%eax),%esi
add    %ebx,0x20(%esp)
adc    %esi,0x24(%esp)
mov    0x805e288,%ecx
mov    0x805e28c,%ebx
mov    0x805e1ac,%esi
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %esi,%ebp
mov    %esi,%edi
mov    %ecx,0x28(%esp)
sar    $0x1f,%ebp
mov    %ebx,0x2c(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
cmp    %edx,%ebp
jb     804c948 <readtask@plt+0x3298>
jbe    804c940 <readtask@plt+0x3290>
sub    %eax,%edi
sbb    %edx,%ebp
mov    %edi,%esi
mov    %ebp,%eax
or     %esi,%eax
je     804c948 <readtask@plt+0x3298>
mov    0x24(%esp),%ecx
mov    $0x64,%eax
mov    0x20(%esp),%edx
imul   $0x64,%ecx,%ebx
mov    0x28(%esp),%ecx
mul    %edx
mov    %ecx,0x8(%esp)
add    %ebx,%edx
mov    0x2c(%esp),%ebx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,0xc(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    $0x63,%edx
cmp    $0x64,%eax
cmovae %edx,%eax
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
movl   $0x80554f8,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %eax,%esi
jae    804c8a6 <readtask@plt+0x31f6>
xor    %eax,%eax
jmp    804c905 <readtask@plt+0x3255>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x805e1d4,%edx
mov    0x54(%esp),%eax
mov    0x20(%eax),%ebx
mov    0x24(%eax),%esi
mov    %ebx,0x20(%esp)
mov    0x18(%eax),%ebx
mov    %esi,0x24(%esp)
mov    0x1c(%eax),%esi
add    %ebx,0x20(%esp)
adc    %esi,0x24(%esp)
test   %edx,%edx
je     804c99d <readtask@plt+0x32ed>
mov    0x30(%eax),%ebx
add    %ebx,0x20(%esp)
mov    0x34(%eax),%esi
mov    0x28(%eax),%edi
adc    %esi,0x24(%esp)
mov    0x2c(%eax),%ebp
add    %edi,0x20(%esp)
adc    %ebp,0x24(%esp)
mov    0x805e288,%ecx
mov    0x805e28c,%ebx
mov    0x805e1ac,%esi
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %esi,%ebp
mov    %esi,%edi
mov    %ecx,0x28(%esp)
sar    $0x1f,%ebp
mov    %ebx,0x2c(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
cmp    %edx,%ebp
jb     804ca98 <readtask@plt+0x33e8>
jbe    804ca90 <readtask@plt+0x33e0>
sub    %eax,%edi
sbb    %edx,%ebp
mov    %edi,%esi
mov    %ebp,%eax
or     %esi,%eax
je     804ca98 <readtask@plt+0x33e8>
mov    0x24(%esp),%ecx
mov    $0x3e8,%eax
mov    0x20(%esp),%edx
imul   $0x3e8,%ecx,%ebx
mov    0x28(%esp),%ecx
mul    %edx
mov    %ecx,0x8(%esp)
add    %ebx,%edx
mov    0x2c(%esp),%ebx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,0xc(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    $0xcccccccd,%edx
mov    %eax,%ecx
mov    %ecx,%eax
mul    %edx
shr    $0x3,%edx
cmp    $0x3e7,%ecx
jbe    804cad8 <readtask@plt+0x3428>
mov    0x50(%esp),%eax
mov    %edx,0x14(%esp)
movl   $0x80554ff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %eax,%esi
jae    804c9e6 <readtask@plt+0x3336>
xor    %eax,%eax
xor    %edx,%edx
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
mov    %edx,0x18(%esp)
movl   $0x80554fc,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%eax
lea    (%edx,%edx,4),%edx
add    %edx,%edx
sub    %edx,%ecx
mov    %ecx,%edx
jmp    804ca9c <readtask@plt+0x33ec>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
mov    0x20(%eax),%ebx
mov    0x18(%eax),%edx
mov    0x24(%eax),%esi
mov    0x1c(%eax),%ecx
mov    %ebx,0x20(%esp)
add    %edx,0x20(%esp)
mov    0x805e1d4,%edx
mov    %esi,0x24(%esp)
adc    %ecx,0x24(%esp)
test   %edx,%edx
je     804cb3d <readtask@plt+0x348d>
mov    0x30(%eax),%ebx
add    %ebx,0x20(%esp)
mov    0x34(%eax),%esi
mov    0x28(%eax),%ebx
adc    %esi,0x24(%esp)
mov    0x2c(%eax),%esi
add    %ebx,0x20(%esp)
adc    %esi,0x24(%esp)
mov    0x805e288,%ecx
mov    0x805e28c,%ebx
mov    0x805e1ac,%esi
mov    %ecx,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %esi,%ebp
mov    %esi,%edi
mov    %ecx,0x28(%esp)
sar    $0x1f,%ebp
mov    %ebx,0x2c(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
cmp    %edx,%ebp
jb     804cc30 <readtask@plt+0x3580>
jbe    804cc28 <readtask@plt+0x3578>
sub    %eax,%edi
sbb    %edx,%ebp
mov    %edi,%esi
mov    %ebp,%eax
or     %esi,%eax
je     804cc30 <readtask@plt+0x3580>
mov    0x24(%esp),%ecx
mov    $0x3e8,%eax
mov    0x20(%esp),%edx
imul   $0x3e8,%ecx,%ebx
mov    0x28(%esp),%ecx
mul    %edx
mov    %ecx,0x8(%esp)
add    %ebx,%edx
mov    0x2c(%esp),%ebx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
mov    %ebx,0xc(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    $0x3e7,%edx
cmp    $0x3e8,%eax
cmovae %edx,%eax
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
movl   $0x8055502,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %eax,%esi
jae    804cb86 <readtask@plt+0x34d6>
xor    %eax,%eax
jmp    804cbea <readtask@plt+0x353a>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x1f0(%eax),%eax
movl   $0x80554ff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804cc90 <readtask@plt+0x35e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x80554ff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x805e28c,%edx
mov    0x44(%esp),%eax
mov    0x20(%eax),%esi
mov    0x24(%eax),%edi
add    0x18(%eax),%esi
adc    0x1c(%eax),%edi
xor    %ebx,%ebx
mov    0x805e288,%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    $0x88888889,%ecx
mov    %eax,%edi
mul    %ecx
mov    %edx,%ebp
shr    $0x5,%ebp
shr    $0x5,%edx
imul   $0x3c,%ebp,%ebp
mov    %edx,%eax
mov    %edx,%esi
mul    %ecx
sub    %ebp,%edi
mov    %edi,%ebp
mov    %edx,%edi
mov    %edx,%ecx
shr    $0x5,%edi
imul   $0x3c,%edi,%edi
shr    $0x5,%ecx
mov    %ecx,%eax
sub    %edi,%esi
mov    %esi,%edi
mov    $0xaaaaaaab,%esi
mul    %esi
mov    %edx,%esi
shr    $0x4,%esi
lea    (%esi,%esi,2),%eax
mov    %esi,%edx
shl    $0x3,%eax
sub    %eax,%ecx
xor    %eax,%eax
test   %edx,%edx
mov    %ecx,%esi
je     804cd89 <readtask@plt+0x36d9>
mov    0x40(%esp),%eax
mov    %edx,0x14(%esp)
movl   $0x80554ee,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
mov    %eax,%ebx
add    0x40(%esp),%eax
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %esi,0x14(%esp)
movl   $0x8055506,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
add    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xe0(%eax),%eax
movl   $0x8055515,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804ce20 <readtask@plt+0x3770>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xb4(%eax),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804ce70 <readtask@plt+0x37c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xb4(%eax),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
add    $0x3c,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xb4(%eax),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
sub    $0x14,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xb4(%eax),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
add    $0x1,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xb4(%eax),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
add    $0x64,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x2c,%esp
mov    $0x27,%eax
mov    0x34(%esp),%edx
sub    0xb4(%edx),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xb4(%eax),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
not    %eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
mov    0x104(%eax),%eax
cmp    $0x5,%eax
je     804d158 <readtask@plt+0x3aa8>
ja     804d098 <readtask@plt+0x39e8>
cmp    $0x2,%eax
je     804d100 <readtask@plt+0x3a50>
jbe    804d0c0 <readtask@plt+0x3a10>
cmp    $0x3,%eax
je     804d168 <readtask@plt+0x3ab8>
cmp    $0x4,%eax
jne    804d130 <readtask@plt+0x3a80>
movl   $0x4f5349,(%edx)
mov    $0x3,%eax
ret
lea    0x0(%esi),%esi
cmp    $0x8,%eax
je     804d178 <readtask@plt+0x3ac8>
jbe    804d0e0 <readtask@plt+0x3a30>
cmp    $0x9,%eax
je     804d118 <readtask@plt+0x3a68>
cmp    $0xffffffff,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
jne    804d130 <readtask@plt+0x3a80>
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
ret
test   %eax,%eax
je     804d140 <readtask@plt+0x3a90>
cmp    $0x1,%eax
jne    804d130 <readtask@plt+0x3a80>
mov    $0x4646,%eax
mov    %ax,(%edx)
mov    $0x2,%eax
movb   $0x0,0x2(%edx)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x6,%eax
je     804d190 <readtask@plt+0x3ae0>
cmp    $0x7,%eax
jne    804d130 <readtask@plt+0x3a80>
mov    $0x3723,%eax
mov    %ax,(%edx)
mov    $0x2,%eax
movb   $0x0,0x2(%edx)
ret
mov    $0x5252,%eax
mov    %ax,(%edx)
mov    $0x2,%eax
movb   $0x0,0x2(%edx)
ret
lea    0x0(%esi),%esi
mov    $0x3923,%ecx
mov    $0x2,%eax
mov    %cx,(%edx)
movb   $0x0,0x2(%edx)
ret
lea    0x0(%esi),%esi
mov    $0x3f,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
ret
xchg   %ax,%ax
mov    $0x5354,%ecx
mov    $0x2,%eax
mov    %cx,(%edx)
movb   $0x0,0x2(%edx)
ret
lea    0x0(%esi),%esi
movl   $0x4c4449,(%edx)
mov    $0x3,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x42,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
ret
xchg   %ax,%ax
mov    $0x3823,%eax
mov    %ax,(%edx)
mov    $0x2,%eax
movb   $0x0,0x2(%edx)
ret
lea    0x0(%esi),%esi
mov    $0x3623,%eax
mov    %ax,(%edx)
mov    $0x2,%eax
movb   $0x0,0x2(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x110(%eax),%eax
movl   $0x805551d,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
shr    $0x6,%eax
and    $0x7,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xa4(%eax),%eax
movl   $0x8055520,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d250 <readtask@plt+0x3ba0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xa8(%eax),%eax
movl   $0x8055520,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d2a0 <readtask@plt+0x3bf0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xac(%eax),%eax
movl   $0x8055520,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d2f0 <readtask@plt+0x3c40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x28,%esp
mov    0x805e1d4,%edx
mov    0x34(%esp),%eax
mov    0x20(%eax),%ecx
mov    0x24(%eax),%ebx
add    0x18(%eax),%ecx
adc    0x1c(%eax),%ebx
test   %edx,%edx
je     804d31a <readtask@plt+0x3c6a>
add    0x30(%eax),%ecx
adc    0x34(%eax),%ebx
add    0x28(%eax),%ecx
adc    0x2c(%eax),%ebx
mov    0x805e288,%eax
mov    0x805e28c,%edx
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    $0x88888889,%edx
movl   $0x8055525,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,%ecx
mov    %ecx,%eax
mul    %edx
shr    $0x5,%edx
imul   $0x3c,%edx,%eax
mov    %edx,0x14(%esp)
sub    %eax,%ecx
mov    0x30(%esp),%eax
mov    %ecx,0x18(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x805e1c0,%eax
test   %eax,%eax
lea    0x3ff(%eax),%ecx
cmovns %eax,%ecx
mov    0x34(%esp),%eax
xor    %edx,%edx
sar    $0xa,%ecx
mov    0xe0(%eax),%eax
movl   $0x8055515,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
div    %ecx
movl   $0xf0,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x34(%esp),%edx
mov    0x108(%edx),%ecx
test   %ecx,%ecx
je     804d414 <readtask@plt+0x3d64>
mov    0x9c(%edx),%eax
add    %ecx,%eax
sub    0xa0(%edx),%eax
shr    $0xa,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x34(%esp),%edx
mov    0x108(%edx),%ecx
test   %ecx,%ecx
je     804d472 <readtask@plt+0x3dc2>
mov    0xa0(%edx),%eax
sub    0x9c(%edx),%eax
shr    $0xa,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x34(%esp),%edx
mov    0x108(%edx),%ecx
test   %ecx,%ecx
je     804d4d4 <readtask@plt+0x3e24>
mov    0x9c(%edx),%eax
add    %ecx,%eax
sub    0xa0(%edx),%eax
shr    $0xa,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x34(%esp),%edx
mov    0x108(%edx),%ecx
test   %ecx,%ecx
je     804d532 <readtask@plt+0x3e82>
mov    0xa0(%edx),%eax
sub    0x9c(%edx),%eax
shr    $0xa,%eax
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%edx
mov    0xf0(%edx),%eax
add    0xec(%edx),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xc4(%eax),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d610 <readtask@plt+0x3f60>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x805e1d4,%ecx
mov    0x34(%esp),%eax
test   %ecx,%ecx
mov    0x114(%eax),%edx
je     804d62d <readtask@plt+0x3f7d>
add    0x11c(%eax),%edx
mov    0x30(%esp),%eax
mov    %edx,0x14(%esp)
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d670 <readtask@plt+0x3fc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x805e1d4,%ecx
mov    0x34(%esp),%eax
test   %ecx,%ecx
mov    0x118(%eax),%edx
je     804d68d <readtask@plt+0x3fdd>
add    0x120(%eax),%edx
mov    0x30(%esp),%eax
mov    %edx,0x14(%esp)
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d6d0 <readtask@plt+0x4020>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    0x10c(%edx),%edx
cmp    $0xffffffff,%edx
jne    804d700 <readtask@plt+0x4050>
movb   $0x78,(%eax)
movb   $0x78,0x1(%eax)
movb   $0x0,0x2(%eax)
mov    $0x2,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
shr    $0xa,%edx
mov    %edx,0x14(%esp)
movl   $0x805552e,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x22c(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d790 <readtask@plt+0x40e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0xe8(%eax),%eax
movl   $0x8055515,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d7e0 <readtask@plt+0x4130>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    $0x3e8,%eax
mov    0x805e290,%ecx
mov    0x34(%esp),%edx
mull   0xe8(%edx)
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    $0x3e7,%ecx
mov    $0xcccccccd,%edx
movl   $0x8055533,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
cmp    $0x3e7,%eax
cmovbe %eax,%ecx
mov    %ecx,%eax
mul    %edx
shr    $0x3,%edx
lea    (%edx,%edx,4),%eax
add    %eax,%eax
sub    %eax,%ecx
mov    0x30(%esp),%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x208(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d8c0 <readtask@plt+0x4210>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x210(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d910 <readtask@plt+0x4260>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x218(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d960 <readtask@plt+0x42b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x220(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804d9b0 <readtask@plt+0x4300>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x204(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804da00 <readtask@plt+0x4350>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x20c(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804da50 <readtask@plt+0x43a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x214(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804daa0 <readtask@plt+0x43f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x21c(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804daf0 <readtask@plt+0x4440>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x1fc(%eax),%eax
movl   $0x80554ff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804db40 <readtask@plt+0x4490>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    (%eax),%eax
movl   $0x80554ff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x1f8(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804dbd0 <readtask@plt+0x4520>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x1f4(%eax),%eax
movl   $0x80554ff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804dc20 <readtask@plt+0x4570>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x224(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
jmp    804dc70 <readtask@plt+0x45c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x805e1d0,%eax
movl   $0x8059360,0x8(%esp)
movl   $0xf0,0x4(%esp)
and    $0x3,%eax
mov    0x80560a0(,%eax,4),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80494e0 <snprintf@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x805e1d0,%ecx
mov    $0xaaaaaaab,%edx
movl   $0x8059360,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %ecx,%eax
mul    %edx
shr    %edx
lea    (%edx,%edx,2),%eax
sub    %eax,%ecx
mov    0x80560b0(,%ecx,4),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80494e0 <snprintf@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x805e1d0,%ecx
mov    $0xcccccccd,%edx
movl   $0x8059360,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %ecx,%eax
mul    %edx
shr    $0x2,%edx
lea    (%edx,%edx,4),%eax
sub    %eax,%ecx
mov    0x805607c(,%ecx,4),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80494e0 <snprintf@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x805e1d0,%eax
movl   $0x8059360,0x8(%esp)
movl   $0xf0,0x4(%esp)
and    $0x3,%eax
mov    0x8056090(,%eax,4),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80494e0 <snprintf@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x805e1d0,%eax
mov    0x20(%esp),%ebx
movl   $0x8059360,0x8(%esp)
and    $0x3,%eax
mov    0x80560c8(,%eax,4),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x805e224,%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   80494e0 <snprintf@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049470 <strlen@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
mov    $0xaaaaaaab,%edx
sub    $0x18,%esp
mov    0x805e1d0,%ecx
mov    0x20(%esp),%ebx
movl   $0x8059360,0x8(%esp)
mov    %ecx,%eax
mul    %edx
mov    %ebx,(%esp)
shr    %edx
lea    (%edx,%edx,2),%eax
sub    %eax,%ecx
mov    0x80560bc(,%ecx,4),%eax
mov    %eax,0xc(%esp)
mov    0x805e224,%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   80494e0 <snprintf@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049470 <strlen@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x24,%esp
mov    %edx,(%esp)
call   8049470 <strlen@plt>
mov    %eax,%edx
mov    0x805ec84,%eax
test   %eax,%eax
jne    804dea8 <readtask@plt+0x47f8>
xor    %ecx,%ecx
cmpb   $0x30,(%ebx)
jne    804de71 <readtask@plt+0x47c1>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmpb   $0x30,(%ebx,%ecx,1)
je     804de68 <readtask@plt+0x47b8>
mov    %edx,%eax
sub    %ecx,%eax
cmp    $0x8,%eax
lea    -0x8(%ebx,%edx,1),%eax
ja     804df08 <readtask@plt+0x4858>
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
movl   $0x8059360,0x8(%esp)
movl   $0xf0,0x4(%esp)
call   80494e0 <snprintf@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x8,%edx
jg     804dee0 <readtask@plt+0x4830>
mov    %ebx,0x14(%esp)
movl   $0x805553a,0x10(%esp)
mov    %esi,(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
movl   $0x8059360,0x8(%esp)
movl   $0xf0,0x4(%esp)
call   80494e0 <snprintf@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %eax,0x14(%esp)
movl   $0x8055545,0x10(%esp)
jmp    804deb9 <readtask@plt+0x4809>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
lea    0x88(%eax),%edx
mov    0x4(%esp),%eax
jmp    804de40 <readtask@plt+0x4790>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
lea    0x40(%eax),%edx
mov    0x4(%esp),%eax
jmp    804de40 <readtask@plt+0x4790>
mov    0x8(%esp),%eax
lea    0x64(%eax),%edx
mov    0x4(%esp),%eax
jmp    804de40 <readtask@plt+0x4790>
mov    0x8(%esp),%eax
lea    0x76(%eax),%edx
mov    0x4(%esp),%eax
jmp    804de40 <readtask@plt+0x4790>
mov    0x8(%esp),%eax
lea    0x52(%eax),%edx
mov    0x4(%esp),%eax
jmp    804de40 <readtask@plt+0x4790>
sub    $0x2c,%esp
mov    0x34(%esp),%eax
movl   $0x7,0x14(%esp)
mov    (%eax),%edx
mov    %edx,0x10(%esp)
mov    0x200(%eax),%eax
movl   $0x4,0x4(%esp)
mov    %eax,0x8(%esp)
sar    $0x1f,%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049120 <dev_to_tty@plt>
add    $0x2c,%esp
ret
xchg   %ax,%ax
sub    $0x2c,%esp
mov    0x34(%esp),%eax
movl   $0x1,0x14(%esp)
mov    (%eax),%edx
mov    %edx,0x10(%esp)
mov    0x200(%eax),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,0x8(%esp)
sar    $0x1f,%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049120 <dev_to_tty@plt>
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
addl   $0x160,0x8(%esp)
add    $0x160,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1b0,0x8(%esp)
add    $0x1b0,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x14c,0x8(%esp)
add    $0x14c,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x188,0x8(%esp)
add    $0x188,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x174,0x8(%esp)
add    $0x174,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1c4,0x8(%esp)
add    $0x1c4,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x138,0x8(%esp)
add    $0x138,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x19c,0x8(%esp)
add    $0x19c,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1d8,0x8(%esp)
add    $0x1d8,%eax
mov    %eax,0x4(%esp)
jmp    8049150 <strcmp@plt>
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x805e224,%eax
movl   $0x20000,0x8(%esp)
mov    %eax,0x1c(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    0x134(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049350 <escaped_copy@plt>
mov    0x805e224,%eax
sub    0x1c(%esp),%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x805e224,%eax
movl   $0x20000,0x8(%esp)
mov    %eax,0x1c(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    0x130(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049350 <escaped_copy@plt>
mov    0x805e224,%eax
sub    0x1c(%esp),%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x805e224,%eax
movl   $0x20000,0x8(%esp)
mov    %eax,0x1c(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    0x12c(%eax),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049350 <escaped_copy@plt>
mov    0x805e224,%eax
sub    0x1c(%esp),%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
movl   $0x805ec80,(%esp)
call   8049430 <localtime@plt>
mov    0x14(%eax),%esi
mov    0x1c(%eax),%edi
call   80491c0 <getbtime@plt>
mov    0x805e28c,%edx
mov    %edx,0xc(%esp)
mov    %eax,%ebx
mov    0x805e288,%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
add    %eax,%ebx
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,0x1c(%esp)
call   8049430 <localtime@plt>
mov    $0x805554f,%ecx
mov    $0x8055549,%edx
cmp    %edi,0x1c(%eax)
cmovne %ecx,%edx
mov    $0x8055554,%ecx
cmp    %esi,0x14(%eax)
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
movl   $0x2a,0x4(%esp)
cmovne %ecx,%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049420 <strftime@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x38,%esp
call   80491c0 <getbtime@plt>
mov    0x805e28c,%edx
mov    %edx,0xc(%esp)
mov    %eax,%ebx
mov    0x805e288,%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
add    %eax,%ebx
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,0x2c(%esp)
call   8049270 <ctime@plt>
cmpb   $0x20,0x8(%eax)
je     804e370 <readtask@plt+0x4cc0>
cmpb   $0x20,0xb(%eax)
je     804e368 <readtask@plt+0x4cb8>
mov    0x2c(%esp),%ecx
lea    0x15180(%ecx),%edx
cmp    0x805ec80,%edx
ja     804e350 <readtask@plt+0x4ca0>
add    $0x4,%eax
mov    %eax,0x14(%esp)
movl   $0x805555d,0x10(%esp)
mov    0x40(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x38,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0xb,%eax
mov    %eax,0x14(%esp)
movl   $0x8055557,0x10(%esp)
jmp    804e323 <readtask@plt+0x4c73>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x30,0xb(%eax)
jmp    804e302 <readtask@plt+0x4c52>
xchg   %ax,%ax
movb   $0x30,0x8(%eax)
jmp    804e2fc <readtask@plt+0x4c4c>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
call   80491c0 <getbtime@plt>
mov    0x805e28c,%edx
mov    %edx,0xc(%esp)
mov    %eax,%ebx
mov    0x805e288,%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
add    %eax,%ebx
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,0x2c(%esp)
call   8049270 <ctime@plt>
movl   $0x8055565,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x38,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x805ed60,%edx
push   %edi
mov    0x805e224,%edi
push   %esi
push   %ebx
test   %dl,%dl
je     804e490 <readtask@plt+0x4de0>
cmpl   $0x75,0x805e1ec
je     804e498 <readtask@plt+0x4de8>
mov    %edi,%ebx
mov    %eax,%ecx
mov    $0x805ed60,%esi
cmp    $0x2b,%dl
je     804e468 <readtask@plt+0x4db8>
jle    804e478 <readtask@plt+0x4dc8>
cmp    $0x4c,%dl
je     804e468 <readtask@plt+0x4db8>
cmp    $0x7c,%dl
jne    804e448 <readtask@plt+0x4d98>
movl   $0x20207c20,(%ecx)
movb   $0x0,0x4(%ecx)
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3,%ebx
jle    804e4e8 <readtask@plt+0x4e38>
add    $0x1,%esi
movzbl (%esi),%edx
add    $0x4,%ecx
sub    $0x4,%ebx
test   %dl,%dl
jne    804e426 <readtask@plt+0x4d76>
sub    %eax,%ecx
mov    %ecx,%eax
jmp    804e492 <readtask@plt+0x4de2>
nop
movl   $0x205f5c20,(%ecx)
movb   $0x0,0x4(%ecx)
jmp    804e448 <readtask@plt+0x4d98>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%dl
jne    804e448 <readtask@plt+0x4d98>
movl   $0x20202020,(%ecx)
movb   $0x0,0x4(%ecx)
jmp    804e448 <readtask@plt+0x4d98>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %edi,%ecx
mov    %eax,%ebx
mov    $0x805ed60,%esi
cmp    $0x2b,%dl
je     804e4b2 <readtask@plt+0x4e02>
jle    804e4e0 <readtask@plt+0x4e30>
cmp    $0x4c,%dl
je     804e4b2 <readtask@plt+0x4e02>
cmp    $0x7c,%dl
jne    804e4be <readtask@plt+0x4e0e>
mov    $0x2020,%edx
mov    %dx,(%ebx)
movb   $0x0,0x2(%ebx)
cmp    $0x1,%ecx
jle    804e4e8 <readtask@plt+0x4e38>
add    $0x1,%esi
movzbl (%esi),%edx
add    $0x2,%ebx
sub    $0x2,%ecx
test   %dl,%dl
jne    804e4a1 <readtask@plt+0x4df1>
sub    %eax,%ebx
mov    %ebx,%eax
jmp    804e492 <readtask@plt+0x4de2>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%dl
je     804e4b2 <readtask@plt+0x4e02>
jmp    804e4be <readtask@plt+0x4e0e>
nop
movb   $0x0,(%ebx,%ecx,1)
mov    %edi,%eax
xchg   %ax,%ax
jmp    804e492 <readtask@plt+0x4de2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x805e224,%eax
mov    0x30(%esp),%ebx
mov    %eax,0x1c(%esp)
mov    %ebx,%eax
call   804e400 <readtask@plt+0x4d50>
mov    0x1c(%esp),%edx
mov    $0x8,%ecx
movl   $0x20000,0x8(%esp)
add    %eax,%ebx
sub    %eax,%edx
lea    0x1c(%esp),%eax
cmp    $0x8,%edx
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
cmovle %edx,%ecx
mov    %ebx,(%esp)
mov    %ecx,0x1c(%esp)
add    $0x1d8,%eax
mov    %eax,0x4(%esp)
call   80492d0 <escape_str@plt>
mov    0x805e224,%eax
sub    0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
call   80491c0 <getbtime@plt>
mov    0x805e28c,%edx
mov    %edx,0xc(%esp)
mov    %eax,%esi
mov    0x805e288,%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    0x3c(%eax),%edx
mov    0x38(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8054160 <readtask@plt+0xaab0>
mov    0x805ec80,%edx
add    %eax,%esi
sub    %esi,%edx
lea    0x1c(%esp),%eax
cmp    $0x15180,%edx
mov    %esi,0x1c(%esp)
mov    %eax,(%esp)
jle    804e5f0 <readtask@plt+0x4f40>
call   8049270 <ctime@plt>
mov    %ebx,(%esp)
add    $0x4,%eax
mov    %eax,0x4(%esp)
call   8049360 <strcpy@plt>
mov    $0x6,%eax
movb   $0x0,0x6(%ebx)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049270 <ctime@plt>
mov    %ebx,(%esp)
add    $0xa,%eax
mov    %eax,0x4(%esp)
call   8049360 <strcpy@plt>
mov    $0x6,%eax
movb   $0x0,0x6(%ebx)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x60,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x74(%esp),%eax
lea    0x2c(%esp),%esi
mov    0x70(%esp),%ebx
mov    0x1fc(%eax),%eax
mov    %esi,(%esp)
movl   $0x805556d,0x10(%esp)
movl   $0x30,0xc(%esp)
mov    %eax,0x14(%esp)
movl   $0x1,0x8(%esp)
movl   $0x30,0x4(%esp)
call   8049140 <__snprintf_chk@plt>
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   8049410 <open@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
jne    804e6b4 <readtask@plt+0x5004>
movb   $0x2d,(%ebx)
mov    $0x1,%eax
movb   $0x0,0x1(%ebx)
mov    0x5c(%esp),%edi
xor    %gs:0x14,%edi
jne    804e6af <readtask@plt+0x4fff>
add    $0x60,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049290 <__stack_chk_fail@plt>
movl   $0x29a,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049180 <read@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049690 <close@plt>
test   %edi,%edi
jle    804e68f <readtask@plt+0x4fdf>
movb   $0x0,(%ebx,%edi,1)
movzbl (%ebx),%eax
sub    $0x21,%eax
cmp    $0x5d,%al
ja     804e68f <readtask@plt+0x4fdf>
add    $0x1,%ebx
xor    %eax,%eax
mov    %ebx,%edx
add    $0x1,%eax
movzbl (%edx),%ecx
add    $0x1,%ebx
sub    $0x21,%ecx
cmp    $0x5d,%cl
jbe    804e6e9 <readtask@plt+0x5039>
movb   $0x0,(%edx)
jmp    804e69b <readtask@plt+0x4feb>
jmp    804e710 <readtask@plt+0x5060>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x805e224,%eax
mov    0x40(%esp),%esi
mov    0x44(%esp),%ebx
mov    %eax,0x2c(%esp)
mov    %esi,%eax
call   804e400 <readtask@plt+0x4d50>
sub    %eax,0x2c(%esp)
add    %eax,%esi
mov    0x128(%ebx),%eax
test   %eax,%eax
je     804e74c <readtask@plt+0x509c>
mov    0x805e188,%edi
test   %edi,%edi
jne    804e7d0 <readtask@plt+0x5120>
lea    0x2c(%esp),%edi
mov    %esi,(%esp)
movl   $0x4,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x20000,0x8(%esp)
mov    %ebx,0x4(%esp)
call   8049580 <escape_command@plt>
add    %eax,%esi
mov    0x805e1fc,%ecx
mov    0x2c(%esp),%edx
test   %ecx,%ecx
je     804e7be <readtask@plt+0x510e>
cmp    $0x1,%edx
jle    804e7be <readtask@plt+0x510e>
mov    0x124(%ebx),%ecx
test   %ecx,%ecx
je     804e7be <readtask@plt+0x510e>
mov    (%ecx),%eax
test   %eax,%eax
je     804e7be <readtask@plt+0x510e>
movb   $0x20,(%esi)
add    $0x1,%esi
sub    $0x1,%edx
mov    %edi,0xc(%esp)
movl   $0x20000,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
call   8049630 <escape_strlist@plt>
mov    0x2c(%esp),%edx
mov    0x805e224,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
sub    %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%edi
mov    %edi,0xc(%esp)
movl   $0x20000,0x8(%esp)
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049350 <escaped_copy@plt>
add    %eax,%esi
jmp    804e772 <readtask@plt+0x50c2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x805e224,%eax
mov    0x40(%esp),%esi
mov    0x44(%esp),%ebx
mov    %eax,0x2c(%esp)
mov    %esi,%eax
call   804e400 <readtask@plt+0x4d50>
sub    %eax,0x2c(%esp)
add    %eax,%esi
mov    0x128(%ebx),%eax
test   %eax,%eax
je     804e83c <readtask@plt+0x518c>
mov    0x805e200,%edi
test   %edi,%edi
je     804e8c0 <readtask@plt+0x5210>
lea    0x2c(%esp),%edi
mov    %esi,(%esp)
movl   $0x4,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x20000,0x8(%esp)
mov    %ebx,0x4(%esp)
call   8049580 <escape_command@plt>
add    %eax,%esi
mov    0x805e1fc,%ecx
mov    0x2c(%esp),%edx
test   %ecx,%ecx
je     804e8ae <readtask@plt+0x51fe>
cmp    $0x1,%edx
jle    804e8ae <readtask@plt+0x51fe>
mov    0x124(%ebx),%ecx
test   %ecx,%ecx
je     804e8ae <readtask@plt+0x51fe>
mov    (%ecx),%eax
test   %eax,%eax
je     804e8ae <readtask@plt+0x51fe>
movb   $0x20,(%esi)
add    $0x1,%esi
sub    $0x1,%edx
mov    %edi,0xc(%esp)
movl   $0x20000,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
call   8049630 <escape_strlist@plt>
mov    0x2c(%esp),%edx
mov    0x805e224,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
sub    %edx,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%edi
mov    %edi,0xc(%esp)
movl   $0x20000,0x8(%esp)
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049350 <escaped_copy@plt>
add    %eax,%esi
jmp    804e862 <readtask@plt+0x51b2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%edx
mov    0x104(%edx),%eax
test   %eax,%eax
je     804e90b <readtask@plt+0x525b>
cmp    $0x3,%eax
je     804e90b <readtask@plt+0x525b>
cmp    $0xffffffff,%eax
jne    804e948 <readtask@plt+0x5298>
mov    0xb8(%edx),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
mov    $0x2d,%edx
mov    %dx,(%eax)
mov    $0x1,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    0x104(%eax),%ecx
sub    $0x1,%ecx
cmp    $0xfffffffd,%ecx
ja     804e9b0 <readtask@plt+0x5300>
mov    0x100(%eax),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0xf0,0x4(%esp)
mov    %edx,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
add    $0x2c,%esp
ret
jmp    804e9d0 <readtask@plt+0x5320>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x104(%eax),%eax
cmp    $0xffffffff,%eax
je     804ea18 <readtask@plt+0x5368>
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0x8055519,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    0x30(%esp),%eax
mov    $0x2d,%edx
mov    %dx,(%eax)
mov    $0x1,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    0xb0(%eax),%eax
and    $0xffffff,%eax
je     804ea78 <readtask@plt+0x53c8>
mov    %eax,0x14(%esp)
movl   $0x8055583,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %edx,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
cmpb   $0x52,0x14(%eax)
je     804eab8 <readtask@plt+0x5408>
mov    0x30(%esp),%eax
mov    $0x2a,%edx
mov    %dx,(%eax)
mov    $0x1,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
mov    0x22c(%eax),%eax
movl   $0x8055551,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x30(%esp),%eax
movl   $0xf0,0x4(%esp)
mov    %eax,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    0x230(%eax),%eax
test   %eax,%eax
jne    804eb28 <readtask@plt+0x5478>
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    %eax,0x14(%esp)
movl   $0x8055586,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %edx,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    0x234(%eax),%eax
test   %eax,%eax
jne    804eb88 <readtask@plt+0x54d8>
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    %eax,0x14(%esp)
movl   $0x8055586,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %edx,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    0x238(%eax),%eax
test   %eax,%eax
jne    804ebe8 <readtask@plt+0x5538>
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    %eax,0x14(%esp)
movl   $0x8055586,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %edx,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    0x23c(%eax),%eax
test   %eax,%eax
jne    804ec48 <readtask@plt+0x5598>
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    %eax,0x14(%esp)
movl   $0x8055586,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %edx,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    0x240(%eax),%eax
test   %eax,%eax
jne    804eca8 <readtask@plt+0x55f8>
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    %eax,0x14(%esp)
movl   $0x8055586,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %edx,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    0x244(%eax),%eax
test   %eax,%eax
jne    804ed08 <readtask@plt+0x5658>
mov    $0x2d,%eax
mov    %ax,(%edx)
mov    $0x1,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    %eax,0x14(%esp)
movl   $0x8055586,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %edx,(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x2c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%edx
mov    0x20(%esp),%ebx
mov    0xb0(%edx),%eax
test   $0xffffff,%eax
je     804eda0 <readtask@plt+0x56f0>
mov    (%edx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049240 <lookup_wchan@plt>
mov    %eax,(%esp)
mov    %eax,%edi
call   8049470 <strlen@plt>
mov    0x805e224,%edx
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,%esi
cmp    %edx,%eax
cmovbe %eax,%esi
mov    %esi,0x8(%esp)
call   80491f0 <memcpy@plt>
mov    %esi,%eax
movb   $0x0,(%ebx,%esi,1)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    $0x2d,%eax
mov    %ax,(%ebx)
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%edx
mov    0x30(%esp),%ebx
mov    0xb0(%edx),%eax
mov    %eax,%ecx
and    $0xffffff,%ecx
je     804ee68 <readtask@plt+0x57b8>
mov    0x805e180,%esi
test   %esi,%esi
jne    804ee30 <readtask@plt+0x5780>
mov    (%edx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049240 <lookup_wchan@plt>
mov    %eax,(%esp)
mov    %eax,%edi
call   8049470 <strlen@plt>
mov    0x805e224,%edx
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,%esi
cmp    %edx,%eax
cmovbe %eax,%esi
mov    %esi,0x8(%esp)
call   80491f0 <memcpy@plt>
mov    %esi,%eax
movb   $0x0,(%ebx,%esi,1)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
mov    %ecx,0x14(%esp)
movl   $0x8055583,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2d,%edi
mov    $0x1,%eax
mov    %di,(%ebx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x38,%esp
mov    0x805e184,%eax
test   %eax,%eax
jne    804eed8 <readtask@plt+0x5828>
lea    0x2c(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0xc(%esp)
movl   $0x20000,0x8(%esp)
mov    %ebx,(%esp)
movl   $0x20000,0x2c(%esp)
call   80492d0 <escape_str@plt>
mov    0x805e224,%edx
mov    $0x20000,%eax
sub    0x2c(%esp),%eax
cmp    %edx,%eax
jle    804eed1 <readtask@plt+0x5821>
movb   $0x2b,-0x1(%ebx,%edx,1)
mov    %edx,%eax
movb   $0x0,(%ebx,%edx,1)
add    $0x38,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
mov    %ecx,0x14(%esp)
movl   $0x80554ff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x38,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x214(%edx),%ecx
add    $0x160,%edx
jmp    804ee80 <readtask@plt+0x57d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x218(%edx),%ecx
add    $0x1b0,%edx
jmp    804ee80 <readtask@plt+0x57d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x20c(%edx),%ecx
add    $0x14c,%edx
jmp    804ee80 <readtask@plt+0x57d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x210(%edx),%ecx
add    $0x188,%edx
jmp    804ee80 <readtask@plt+0x57d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x21c(%edx),%ecx
add    $0x174,%edx
jmp    804ee80 <readtask@plt+0x57d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x220(%edx),%ecx
add    $0x1c4,%edx
jmp    804ee80 <readtask@plt+0x57d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x204(%edx),%ecx
add    $0x138,%edx
jmp    804ee80 <readtask@plt+0x57d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0x208(%edx),%ecx
add    $0x19c,%edx
jmp    804ee80 <readtask@plt+0x57d0>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%esi
mov    0xc0(%eax),%edi
mov    %edi,%ebx
mov    %edi,%eax
sar    $0x1f,%ebx
or     %ebx,%eax
je     804f100 <readtask@plt+0x5a50>
mov    %edi,%eax
and    %ebx,%eax
cmp    $0xffffffff,%eax
je     804f128 <readtask@plt+0x5a78>
test   %edi,%edi
js     804f120 <readtask@plt+0x5a70>
cmp    $0x0,%ebx
mov    %edi,%ecx
jbe    804f0a8 <readtask@plt+0x59f8>
movl   $0x64,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ecx,(%esp)
mov    %ebx,0x4(%esp)
call   8054160 <readtask@plt+0xaab0>
movl   $0x805558a,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
cmp    $0x270f,%edi
ja     804f04f <readtask@plt+0x599f>
mov    %edi,%eax
mov    $0x51eb851f,%edx
mul    %edx
mov    %edx,%eax
shr    $0x5,%eax
imul   $0x64,%eax,%eax
shr    $0x5,%edx
sub    %eax,%edi
mov    %edi,%eax
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
mov    %edx,0x14(%esp)
movl   $0x8055590,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xf0,0x4(%esp)
call   8049140 <__snprintf_chk@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0x2d,%edx
mov    $0x5,%eax
movl   $0x20202020,(%esi)
mov    %dx,0x4(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
jmp    804f0c8 <readtask@plt+0x5a18>
xchg   %ax,%ax
mov    $0x78,%eax
mov    %ax,0x4(%esi)
mov    $0x5,%eax
movl   $0x78202020,(%esi)
jmp    804f09b <readtask@plt+0x59eb>
jmp    804f150 <readtask@plt+0x5aa0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
mov    $0x8055599,%eax
sub    $0x18,%esp
mov    $0x8056420,%ebx
xchg   %ax,%ax
cmpl   $0x804c5c0,0x8(%ebx)
je     804f188 <readtask@plt+0x5ad8>
mov    0x4(%ebx),%edx
mov    %eax,0x8(%esp)
movl   $0x805559e,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
call   8049560 <__printf_chk@plt>
add    $0x20,%ebx
mov    (%ebx),%eax
cmpb   $0x7e,(%eax)
jne    804f160 <readtask@plt+0x5ab0>
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
mov    $0x80560e0,%eax
cmp    $0x43,%ecx
jne    804f1b4 <readtask@plt+0x5b04>
jmp    804f1c8 <readtask@plt+0x5b18>
cmp    %ecx,%edx
je     804f1c8 <readtask@plt+0x5b18>
add    $0x8,%eax
mov    (%eax),%edx
cmp    $0x7e,%edx
jne    804f1b0 <readtask@plt+0x5b00>
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%ecx
mov    $0x80561c0,%eax
cmp    $0x43,%ecx
jne    804f1e4 <readtask@plt+0x5b34>
jmp    804f1f8 <readtask@plt+0x5b48>
cmp    %ecx,%edx
je     804f1f8 <readtask@plt+0x5b48>
add    $0xc,%eax
mov    (%eax),%edx
cmp    $0x7e,%edx
jne    804f1e0 <readtask@plt+0x5b30>
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    $0xf5,%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
xchg   %ax,%ax
lea    (%esi,%edi,1),%ebx
shr    %ebx
mov    %ebx,%eax
shl    $0x5,%eax
lea    0x8056420(%eax),%ebp
mov    0x8056420(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
jns    804f258 <readtask@plt+0x5ba8>
cmp    %esi,%ebx
jbe    804f248 <readtask@plt+0x5b98>
mov    %ebx,%edi
jmp    804f210 <readtask@plt+0x5b60>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
je     804f267 <readtask@plt+0x5bb7>
lea    0x1(%ebx),%esi
cmp    %edi,%esi
jae    804f248 <readtask@plt+0x5b98>
mov    %edi,%ebx
mov    %ebx,%edi
jmp    804f210 <readtask@plt+0x5b60>
mov    %ebp,%eax
jmp    804f24a <readtask@plt+0x5b9a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    $0x32,%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
xchg   %ax,%ax
lea    (%esi,%edi,1),%ebx
shr    %ebx
mov    0x8056280(,%ebx,8),%eax
lea    0x8056280(,%ebx,8),%ebp
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
jns    804f2c8 <readtask@plt+0x5c18>
cmp    %esi,%ebx
jbe    804f2b8 <readtask@plt+0x5c08>
mov    %ebx,%edi
lea    0x0(%esi),%esi
jmp    804f280 <readtask@plt+0x5bd0>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
je     804f2d7 <readtask@plt+0x5c27>
lea    0x1(%ebx),%esi
cmp    %edi,%esi
jae    804f2b8 <readtask@plt+0x5c08>
mov    %edi,%ebx
mov    %ebx,%edi
jmp    804f280 <readtask@plt+0x5bd0>
mov    %ebp,%eax
jmp    804f2ba <readtask@plt+0x5c0a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x805ec74,%eax
cmpl   $0xffffffff,0x50(%esp)
mov    0x54(%esp),%esi
mov    %eax,0x18(%esp)
je     804f69f <readtask@plt+0x5fef>
mov    0x50(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
mov    %eax,0x2c(%esp)
je     804f31d <readtask@plt+0x5c6d>
subl   $0x1,0x805e1d0
je     804f6d8 <readtask@plt+0x6028>
cmpl   $0x20000,0x805ec78
00
movl   $0x1,0x805ec70
00
ja     804f665 <readtask@plt+0x5fb5>
xor    %ebp,%ebp
xor    %ebx,%ebx
movl   $0x0,0x24(%esp)
mov    %esi,%edi
movl   $0x0,0x14(%esp)
lea    0x0(%esi),%esi
mov    (%edi),%eax
test   %eax,%eax
je     804f461 <readtask@plt+0x5db1>
mov    0xc(%edi),%eax
mov    %ebx,%esi
sub    0x14(%esp),%esi
movl   $0x0,0x28(%esp)
mov    %eax,0x805e224
add    0x14(%esp),%eax
sub    %ebx,%eax
mov    %eax,0x805e220
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804f5de <readtask@plt+0x5f2e>
mov    0x8(%edi),%eax
test   %eax,%eax
je     804f5de <readtask@plt+0x5f2e>
mov    0x50(%esp),%ecx
mov    0x18(%esp),%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   *%eax
mov    %eax,0x1c(%esp)
mov    0x18(%edi),%eax
and    $0xf,%eax
cmp    $0x6,%eax
ja     804f570 <readtask@plt+0x5ec0>
jmp    *0x8056060(,%eax,4)
lea    0x0(%esi),%esi
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
add    0x24(%esp),%esi
test   %esi,%esi
jle    804f4d8 <readtask@plt+0x5e28>
cmp    $0x90,%esi
jg     804f602 <readtask@plt+0x5f52>
mov    %esi,%ebp
neg    %ebp
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049470 <strlen@plt>
mov    (%edi),%ecx
test   %ecx,%ecx
je     804f611 <readtask@plt+0x5f61>
mov    0x805e280,%ecx
add    %esi,%eax
add    0x18(%esp),%ebp
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %ebp,(%esp)
call   8049340 <fwrite@plt>
mov    0x8(%edi),%edx
add    0x1c(%esp),%esi
add    0xc(%edi),%ebx
add    %esi,0x14(%esp)
add    0x20(%esp),%ebx
test   %edx,%edx
je     804f560 <readtask@plt+0x5eb0>
mov    (%edi),%edx
mov    0x8(%edx),%eax
test   %eax,%eax
je     804f5b8 <readtask@plt+0x5f08>
mov    %edx,%edi
add    $0x1,%ebx
mov    (%edi),%eax
mov    $0x1,%ebp
test   %eax,%eax
jne    804f35a <readtask@plt+0x5caa>
mov    %ebx,%eax
sub    0x14(%esp),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
jle    804f645 <readtask@plt+0x5f95>
mov    0x14(%esp),%ecx
mov    0x805ec78,%eax
mov    0x28(%esp),%esi
cmp    %ebx,%ecx
cmovl  %ebx,%ecx
sub    %ecx,%eax
mov    %eax,0x805e224
mov    0xc(%edi),%eax
jmp    804f370 <readtask@plt+0x5cc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e180,%eax
test   %eax,%eax
jne    804f4e0 <readtask@plt+0x5e30>
mov    0x805ec78,%eax
sub    0x14(%esp),%eax
cmp    0x28(%esp),%eax
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
jne    804f3d0 <readtask@plt+0x5d20>
mov    0x18(%esp),%eax
add    0x24(%esp),%esi
test   %esi,%esi
movb   $0x0,0x1(%eax)
jg     804f3dc <readtask@plt+0x5d2c>
mov    %ebp,%esi
jmp    804f3e8 <readtask@plt+0x5d38>
nop
mov    0xc(%edi),%eax
xor    %ecx,%ecx
sub    0x1c(%esp),%eax
movl   $0x0,0x20(%esp)
cmovs  %ecx,%eax
mov    %eax,0x24(%esp)
jmp    804f3d0 <readtask@plt+0x5d20>
lea    0x0(%esi),%esi
mov    0x805ec84,%ecx
test   %ecx,%ecx
je     804f5c8 <readtask@plt+0x5f18>
mov    $0x10,%eax
sub    0x1c(%esp),%eax
movl   $0x7,0x20(%esp)
xor    %ecx,%ecx
test   %eax,%eax
cmovs  %ecx,%eax
mov    %eax,0x24(%esp)
jmp    804f3d0 <readtask@plt+0x5d20>
nop
mov    0x805e184,%edx
mov    0xc(%edi),%eax
test   %edx,%edx
je     804f3c0 <readtask@plt+0x5d10>
xor    %edx,%edx
sub    0x1c(%esp),%eax
movl   $0x0,0x20(%esp)
cmovs  %edx,%eax
mov    %eax,0x24(%esp)
jmp    804f3d0 <readtask@plt+0x5d20>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edi
xor    %ebp,%ebp
jmp    804f350 <readtask@plt+0x5ca0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80555c2,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
movl   $0x0,0x20(%esp)
jmp    804f3d0 <readtask@plt+0x5d20>
lea    0x0(%esi),%esi
mov    %edx,%edi
xor    %ebp,%ebp
jmp    804f350 <readtask@plt+0x5ca0>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x9,%eax
movl   $0x0,0x20(%esp)
sub    0x1c(%esp),%eax
jmp    804f51f <readtask@plt+0x5e6f>
mov    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049360 <strcpy@plt>
mov    %eax,(%esp)
call   8049470 <strlen@plt>
mov    %eax,0x1c(%esp)
jmp    804f3a7 <readtask@plt+0x5cf7>
mov    $0xffffff70,%ebp
mov    $0x90,%esi
jmp    804f3ec <readtask@plt+0x5d3c>
mov    0x18(%esp),%ecx
movb   $0xa,(%ecx,%eax,1)
mov    0x805e280,%edx
lea    0x1(%esi,%eax,1),%eax
add    %ecx,%ebp
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %ebp,(%esp)
call   8049340 <fwrite@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x805ec78,%eax
sub    0x14(%esp),%eax
mov    0x28(%esp),%esi
mov    %ebp,0x28(%esp)
sub    %ebp,%eax
mov    %eax,0x805e224
mov    0xc(%edi),%eax
jmp    804f370 <readtask@plt+0x5cc0>
movl   $0x5,0x8(%esp)
movl   $0x80555af,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
jmp    804f337 <readtask@plt+0x5c87>
mov    0x805ec70,%ecx
test   %ecx,%ecx
jne    804f63d <readtask@plt+0x5f8d>
subl   $0x1,0x805e1d0
jne    804f6cc <readtask@plt+0x601c>
mov    0x805e1dc,%eax
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805e1d0
call   804f2e0 <readtask@plt+0x5c30>
movl   $0x1,(%esp)
call   80493f0 <exit@plt>
mov    0x805e1dc,%eax
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x805e1d0
call   804f2e0 <readtask@plt+0x5c30>
jmp    804f31d <readtask@plt+0x5c6d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x805e1c0,%eax
cmp    $0x2000,%eax
je     804f9e0 <readtask@plt+0x6330>
jle    804f8f0 <readtask@plt+0x6240>
cmp    $0x8000,%eax
je     804f9b0 <readtask@plt+0x6300>
cmp    $0x10000,%eax
je     804f928 <readtask@plt+0x6278>
cmp    $0x4000,%eax
je     804f99a <readtask@plt+0x62ea>
movl   $0x5,0x8(%esp)
movl   $0x80582c0,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805e1c0,%ecx
movl   $0xc,0x805ec7c
00
lea    0x2008f(%ecx),%eax
cltd
idiv   %ecx
movl   $0x0,0x14(%esp)
movl   $0xffffffff,0x10(%esp)
movl   $0x22,0xc(%esp)
movl   $0x3,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
lea    0x1(%eax),%eax
imul   %ecx,%eax
mov    %eax,0x4(%esp)
call   8049450 <mmap@plt>
mov    $0x90,%edx
test   $0x1,%al
mov    %eax,%ebx
mov    %eax,%edi
jne    804fa08 <readtask@plt+0x6358>
test   $0x2,%edi
jne    804f9f4 <readtask@plt+0x6344>
mov    %edx,%ecx
mov    $0x20202020,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     804f7fd <readtask@plt+0x614d>
mov    $0x2020,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     804f805 <readtask@plt+0x6155>
movb   $0x20,(%edi)
mov    0x805e1c0,%eax
cmp    $0x90,%eax
je     804f978 <readtask@plt+0x62c8>
mov    %eax,0x4(%esp)
imul   %esi,%eax
movl   $0x0,0x8(%esp)
add    %ebx,%eax
add    $0x90,%ebx
mov    %eax,(%esp)
call   8049160 <mprotect@plt>
movl   $0x0,(%esp)
mov    %ebx,0x805ec74
call   8049230 <time@plt>
mov    %eax,0x805ec80
call   80491a0 <meminfo@plt>
mov    0x805e1e4,%eax
test   %eax,%eax
je     804fa15 <readtask@plt+0x6365>
xor    %esi,%esi
xor    %ebx,%ebx
xor    %ecx,%ecx
jmp    804f889 <readtask@plt+0x61d9>
lea    0x0(%esi),%esi
cmp    $0x6,%edx
je     804f960 <readtask@plt+0x62b0>
add    0xc(%eax),%ecx
test   %edx,%edx
je     804f950 <readtask@plt+0x62a0>
mov    (%eax),%eax
add    %ebx,%ecx
mov    $0x1,%ebx
test   %eax,%eax
je     804f8ae <readtask@plt+0x61fe>
mov    0x18(%eax),%edx
and    $0xf,%edx
cmp    $0x4,%edx
jne    804f868 <readtask@plt+0x61b8>
mov    (%eax),%edx
test   %edx,%edx
je     804f970 <readtask@plt+0x62c0>
add    0xc(%eax),%ecx
mov    %edx,%eax
add    %ebx,%ecx
test   %eax,%eax
mov    $0x1,%ebx
jne    804f889 <readtask@plt+0x61d9>
lea    (%ecx,%esi,8),%edi
sub    %esi,%edi
mov    0x805e1b4,%ebx
mov    %ebx,%eax
jmp    804f8cc <readtask@plt+0x621c>
lea    0x0(%esi),%esi
cmp    $0xffff,%eax
lea    (%eax,%ebx,1),%edx
ja     804f8d0 <readtask@plt+0x6220>
mov    %edx,%eax
cmp    %eax,%ecx
ja     804f8c0 <readtask@plt+0x6210>
cmp    %edi,%eax
mov    %eax,0x805ec78
setae  %al
movzbl %al,%eax
mov    %eax,0x805ec84
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x800,%eax
je     804f9c8 <readtask@plt+0x6318>
cmp    $0x1000,%eax
je     804f940 <readtask@plt+0x6290>
cmp    $0x400,%eax
jne    804f73d <readtask@plt+0x608d>
movl   $0xa,0x805ec7c
00
mov    $0x400,%ecx
jmp    804f782 <readtask@plt+0x60d2>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x10,0x805ec7c
00
mov    $0x10000,%ecx
jmp    804f782 <readtask@plt+0x60d2>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1000,%ecx
jmp    804f778 <readtask@plt+0x60c8>
lea    0x0(%esi),%esi
mov    (%eax),%eax
xor    %ebx,%ebx
jmp    804f885 <readtask@plt+0x61d5>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
add    0xc(%eax),%ecx
jmp    804f87c <readtask@plt+0x61cc>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x3,%ecx
jmp    804f8a1 <readtask@plt+0x61f1>
movl   $0x1,0x8(%esp)
movl   $0x90,0x4(%esp)
mov    %ebx,(%esp)
call   8049160 <mprotect@plt>
mov    0x805e1c0,%eax
jmp    804f815 <readtask@plt+0x6165>
movl   $0xe,0x805ec7c
00
mov    $0x4000,%ecx
jmp    804f782 <readtask@plt+0x60d2>
xchg   %ax,%ax
movl   $0xf,0x805ec7c
00
mov    $0x8000,%ecx
jmp    804f782 <readtask@plt+0x60d2>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xb,0x805ec7c
00
mov    $0x800,%ecx
jmp    804f782 <readtask@plt+0x60d2>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xd,0x805ec7c
00
mov    $0x2000,%ecx
jmp    804f782 <readtask@plt+0x60d2>
mov    $0x2020,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    804f7e0 <readtask@plt+0x6130>
movb   $0x20,(%eax)
lea    0x1(%eax),%edi
mov    $0x8f,%dl
jmp    804f7d4 <readtask@plt+0x6124>
xor    %edi,%edi
xor    %ecx,%ecx
jmp    804f8b3 <readtask@plt+0x6203>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x805e18c,%eax
test   %eax,%eax
je     804faf0 <readtask@plt+0x6440>
mov    0x805e1ec,%edx
test   %edx,%edx
jne    804fad0 <readtask@plt+0x6420>
test   $0x1,%al
je     804fa88 <readtask@plt+0x63d8>
test   $0x6,%al
jne    804fb00 <readtask@plt+0x6450>
mov    %eax,%edx
and    $0x18,%edx
cmp    $0x18,%edx
je     804faa0 <readtask@plt+0x63f0>
or     $0x9,%ah
mov    %eax,0x805e18c
test   $0x6,%al
je     804fa68 <readtask@plt+0x63b8>
or     $0x7,%ah
mov    %eax,0x805e18c
test   $0x18,%al
je     804fb50 <readtask@plt+0x64a0>
test   $0x7,%al
je     804fac0 <readtask@plt+0x6410>
or     $0x40,%ah
mov    %eax,0x805e18c
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    %eax,%edx
and    $0x6,%edx
cmp    $0x6,%edx
je     804fb28 <readtask@plt+0x6478>
mov    %eax,%edx
and    $0x18,%edx
cmp    $0x18,%edx
jne    804fa5c <readtask@plt+0x63ac>
movl   $0x5,0x8(%esp)
movl   $0x8058c08,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    804fa7e <readtask@plt+0x63ce>
xchg   %ax,%ax
or     $0x2,%ah
mov    %eax,0x805e18c
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8058b78,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
add    $0x1c,%esp
ret
movl   $0x100,0x805e18c
00
add    $0x1c,%esp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8058ba8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    804fa7e <readtask@plt+0x63ce>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8058bd8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    804fa7e <readtask@plt+0x63ce>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804fa7e <readtask@plt+0x63ce>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x108c,%esp
mov    0x10a0(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x107c(%esp)
xor    %eax,%eax
mov    0x10a4(%esp),%ebx
cmpb   $0x2f,(%esi)
je     804fc30 <readtask@plt+0x6580>
lea    0x7c(%esp),%edi
mov    %esi,0x14(%esp)
lea    0x24(%esp),%ebp
movl   $0x8059357,0x10(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edi,(%esp)
call   8049140 <__snprintf_chk@plt>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049320 <__xstat@plt>
test   %eax,%eax
js     804fc70 <readtask@plt+0x65c0>
mov    0x34(%esp),%eax
and    $0xf000,%eax
cmp    $0x2000,%eax
je     804fdb8 <readtask@plt+0x6708>
movl   $0x5,0x8(%esp)
movl   $0x805938e,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    0x107c(%esp),%edx
xor    %gs:0x14,%edx
jne    804fdcc <readtask@plt+0x671c>
add    $0x108c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049320 <__xstat@plt>
test   %eax,%eax
jns    804fbe0 <readtask@plt+0x6530>
movl   $0x5,0x8(%esp)
movl   $0x8059340,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    804fc10 <readtask@plt+0x6560>
lea    0x0(%esi),%esi
mov    %esi,0x14(%esp)
movl   $0x8059363,0x10(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edi,(%esp)
call   8049140 <__snprintf_chk@plt>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049320 <__xstat@plt>
test   %eax,%eax
jns    804fbe0 <readtask@plt+0x6530>
mov    %esi,0x14(%esp)
movl   $0x805936b,0x10(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edi,(%esp)
call   8049140 <__snprintf_chk@plt>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049320 <__xstat@plt>
test   %eax,%eax
jns    804fbe0 <readtask@plt+0x6530>
mov    %esi,0x14(%esp)
movl   $0x8059376,0x10(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edi,(%esp)
call   8049140 <__snprintf_chk@plt>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049320 <__xstat@plt>
test   %eax,%eax
jns    804fbe0 <readtask@plt+0x6530>
mov    %esi,0x14(%esp)
movl   $0x8059381,0x10(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edi,(%esp)
call   8049140 <__snprintf_chk@plt>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049320 <__xstat@plt>
test   %eax,%eax
jns    804fbe0 <readtask@plt+0x6530>
movzbl (%esi),%eax
cmp    $0x2d,%eax
jne    804fdd1 <readtask@plt+0x6721>
cmpb   $0x0,0x1(%esi)
jne    804fdd6 <readtask@plt+0x6726>
movl   $0x0,(%ebx)
xor    %eax,%eax
movl   $0x0,0x4(%ebx)
jmp    804fc10 <readtask@plt+0x6560>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
mov    %eax,(%ebx)
xor    %eax,%eax
mov    %edx,0x4(%ebx)
jmp    804fc10 <readtask@plt+0x6560>
call   8049290 <__stack_chk_fail@plt>
cmp    $0x3f,%eax
je     804fd98 <readtask@plt+0x66e8>
cmpb   $0x0,0x1(%esi)
jne    804fc4c <readtask@plt+0x659c>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049320 <__xstat@plt>
test   %eax,%eax
js     804fc4c <readtask@plt+0x659c>
jmp    804fd9e <readtask@plt+0x66ee>
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
movl   $0x10,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049510 <strncpy@plt>
xor    %eax,%eax
movb   $0x0,0xf(%ebx)
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
movl   $0x10,(%esp)
mov    %edx,0x18(%esp)
call   80493c0 <malloc@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049470 <strlen@plt>
shl    $0x4,%eax
mov    %eax,(%esp)
call   80493c0 <malloc@plt>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esi)
mov    %eax,0x4(%esi)
call   80494f0 <__strdup@plt>
movl   $0x5,0x8(%esp)
movl   $0x80593a8,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    %eax,0x1c(%esp)
call   8049280 <dcgettext@plt>
movzbl (%ebx),%edx
mov    %ebx,%ecx
xor    %ebx,%ebx
jmp    804febd <readtask@plt+0x680d>
cmp    $0x20,%dl
je     804fec8 <readtask@plt+0x6818>
cmp    $0x2c,%dl
je     804fec8 <readtask@plt+0x6818>
test   %ebp,%ebp
je     804feb3 <readtask@plt+0x6803>
add    $0x1,%ebx
xor    %ebp,%ebp
add    $0x1,%ecx
movzbl (%ecx),%edx
test   %dl,%dl
je     804fee4 <readtask@plt+0x6834>
cmp    $0x9,%dl
je     804fec8 <readtask@plt+0x6818>
jg     804fea0 <readtask@plt+0x67f0>
test   %dl,%dl
jne    804feaa <readtask@plt+0x67fa>
test   %ebp,%ebp
lea    0x0(%esi),%esi
jne    804ff78 <readtask@plt+0x68c8>
add    $0x1,%ecx
movzbl (%ecx),%edx
mov    $0x1,%bp
test   %dl,%dl
jne    804febd <readtask@plt+0x680d>
test   %ebp,%ebp
jne    804ff78 <readtask@plt+0x68c8>
test   %ebx,%ebx
mov    %ebx,0x8(%esi)
lea    -0x1(%ebx),%edx
je     804ff55 <readtask@plt+0x68a5>
mov    0x1c(%esp),%eax
mov    %edx,%edi
shl    $0x4,%edi
mov    %edi,%ebp
lea    0x0(%esi,%eiz,1),%esi
movsbl (%eax),%edx
test   %dl,%dl
je     804ffa8 <readtask@plt+0x68f8>
mov    %eax,%edi
jmp    804ff2c <readtask@plt+0x687c>
nop
cmp    $0x2c,%edx
je     804ff31 <readtask@plt+0x6881>
cmp    $0x9,%edx
je     804ff31 <readtask@plt+0x6881>
add    $0x1,%edi
movsbl (%edi),%edx
test   %dl,%dl
je     804ffa8 <readtask@plt+0x68f8>
cmp    $0x20,%edx
jne    804ff18 <readtask@plt+0x6868>
movb   $0x0,(%edi)
mov    0x4(%esi),%edx
mov    %eax,(%esp)
mov    0x18(%esp),%eax
add    %ebp,%edx
mov    %edx,0x4(%esp)
call   *%eax
test   %eax,%eax
jne    804ff78 <readtask@plt+0x68c8>
sub    $0x10,%ebp
sub    $0x1,%ebx
lea    0x1(%edi),%eax
jne    804ff08 <readtask@plt+0x6858>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
mov    0x805e1a8,%eax
mov    %esi,0x805e1a8
mov    %eax,(%esi)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
mov    0x4(%esi),%edx
mov    %edx,(%esp)
call   80491d0 <free@plt>
mov    %esi,(%esp)
call   80491d0 <free@plt>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
xor    %edi,%edi
jmp    804ff34 <readtask@plt+0x6884>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805ec90,%eax
cmpb   $0x0,0x1(%eax)
jne    804ffe0 <readtask@plt+0x6930>
mov    0x805ec94,%eax
lea    0x1(%eax),%edx
cmp    0x805ec9c,%edx
jge    804fff0 <readtask@plt+0x6940>
mov    0x805ec98,%eax
mov    (%eax,%edx,4),%eax
cmpb   $0x0,(%eax)
je     804fff0 <readtask@plt+0x6940>
mov    %edx,0x805ec94
ret
nop
movl   $0x1,0x805ec8c
00
add    $0x1,%eax
ret
xchg   %ax,%ax
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x805ec90,%edx
movzbl (%edx),%eax
cmp    $0x3a,%al
je     8050040 <readtask@plt+0x6990>
cmp    $0x3d,%al
je     8050040 <readtask@plt+0x6990>
test   %al,%al
je     8050018 <readtask@plt+0x6968>
xor    %eax,%eax
ret
mov    0x805ec94,%eax
lea    0x1(%eax),%edx
cmp    0x805ec9c,%edx
jge    8050015 <readtask@plt+0x6965>
mov    0x805ec98,%eax
mov    (%eax,%edx,4),%eax
cmpb   $0x0,(%eax)
je     8050015 <readtask@plt+0x6965>
mov    %edx,0x805ec94
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x0,0x1(%edx)
lea    0x1(%edx),%ecx
mov    %ecx,0x805ec90
cmovne %ecx,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x805ec98,%eax
mov    %eax,%edi
mov    %eax,0x18(%esp)
mov    0x805ec94,%eax
mov    (%edi,%eax,4),%eax
movzbl 0x2(%eax),%edx
lea    0x2(%eax),%edi
test   %dl,%dl
je     80501b1 <readtask@plt+0x6b01>
movsbl %dl,%ecx
cmp    $0x3a,%ecx
je     80501b1 <readtask@plt+0x6b01>
cmp    $0x3d,%ecx
je     80501b1 <readtask@plt+0x6b01>
add    $0x3,%eax
xor    %ebx,%ebx
jmp    80500c8 <readtask@plt+0x6a18>
lea    0x0(%esi,%eiz,1),%esi
movsbl %dl,%ecx
cmp    $0x3a,%ecx
je     80500d4 <readtask@plt+0x6a24>
add    $0x1,%eax
cmp    $0x3d,%ecx
je     80500d4 <readtask@plt+0x6a24>
movzbl (%eax),%edx
add    $0x1,%ebx
mov    %eax,%esi
test   %dl,%dl
jne    80500b8 <readtask@plt+0x6a08>
cmp    $0xf,%ebx
ja     8050171 <readtask@plt+0x6ac1>
mov    %edi,0x4(%esp)
lea    0x2c(%esp),%edi
mov    $0x21,%ebp
movl   $0x10,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %edx,0x14(%esp)
call   8049530 <__strncpy_chk@plt>
mov    0x14(%esp),%edx
mov    %esi,0x805ec90
xor    %esi,%esi
movb   $0x0,0x2c(%esp,%ebx,1)
mov    %dl,0x1f(%esp)
nop
lea    (%esi,%ebp,1),%ebx
shr    %ebx
lea    0x80598a0(,%ebx,8),%eax
mov    %eax,0x14(%esp)
mov    0x80598a0(,%ebx,8),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
jns    8050148 <readtask@plt+0x6a98>
cmp    %esi,%ebx
jbe    8050158 <readtask@plt+0x6aa8>
mov    %ebx,%ebp
jmp    8050118 <readtask@plt+0x6a68>
nop
je     80501ba <readtask@plt+0x6b0a>
lea    0x1(%ebx),%esi
cmp    %ebp,%esi
nop
jb     80501a8 <readtask@plt+0x6af8>
lea    0x0(%esi),%esi
mov    0x805ed40,%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
je     8050878 <readtask@plt+0x71c8>
movl   $0x5,0x8(%esp)
movl   $0x80593b6,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    0x3c(%esp),%edi
xor    %gs:0x14,%edi
jne    805076a <readtask@plt+0x70ba>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%ebx
mov    %ebx,%ebp
jmp    8050118 <readtask@plt+0x6a68>
mov    %edi,%esi
xor    %ebx,%ebx
jmp    80500dd <readtask@plt+0x6a2d>
mov    0x14(%esp),%eax
movzbl 0x1f(%esp),%edx
jmp    *0x4(%eax)
test   %dl,%dl
jne    805060f <readtask@plt+0x6f5f>
mov    0x805e1d8,%edx
test   %edx,%edx
je     8050630 <readtask@plt+0x6f80>
movl   $0x5,0x8(%esp)
movl   $0x8058d50,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
test   %dl,%dl
jne    8050681 <readtask@plt+0x6fd1>
mov    0x805e1d8,%eax
test   %eax,%eax
jne    80501dc <readtask@plt+0x6b2c>
movl   $0x2,0x805e1d8
00
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     805022e <readtask@plt+0x6b7e>
cmpb   $0x0,(%eax)
jne    8050641 <readtask@plt+0x6f91>
movl   $0x5,0x8(%esp)
movl   $0x8058c88,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     8050261 <readtask@plt+0x6bb1>
cmpb   $0x0,(%eax)
jne    80506a2 <readtask@plt+0x6ff2>
movl   $0x5,0x8(%esp)
movl   $0x8058ea0,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
jmp    80501c6 <readtask@plt+0x6b16>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    80501c6 <readtask@plt+0x6b16>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    80501c6 <readtask@plt+0x6b16>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     805076f <readtask@plt+0x70bf>
mov    $0x8050890,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    805018d <readtask@plt+0x6add>
mov    0x805e1a8,%eax
movl   $0xc,0xc(%eax)
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x0(%esi),%esi
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
jne    80506e8 <readtask@plt+0x7038>
movl   $0x5,0x8(%esp)
movl   $0x8058ef4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
test   %dl,%dl
je     8050727 <readtask@plt+0x7077>
movl   $0x5,0x8(%esp)
movl   $0x8058cf4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
jmp    80501c6 <readtask@plt+0x6b16>
jmp    80501c6 <readtask@plt+0x6b16>
lea    0x0(%esi,%eiz,1),%esi
jmp    80501c6 <readtask@plt+0x6b16>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     80507d2 <readtask@plt+0x7122>
mov    $0x80518a0,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    805018d <readtask@plt+0x6add>
mov    0x805e1a8,%eax
movl   $0x5,0xc(%eax)
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x0(%esi),%esi
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     8050790 <readtask@plt+0x70e0>
mov    $0x80517e0,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    805018d <readtask@plt+0x6add>
mov    0x805e1a8,%eax
movl   $0x1,0xc(%eax)
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x0(%esi),%esi
jmp    805021c <readtask@plt+0x6b6c>
test   %dl,%dl
je     8050738 <readtask@plt+0x7088>
movl   $0x5,0x8(%esp)
movl   $0x8058cc4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
jmp    80501fa <readtask@plt+0x6b4a>
jmp    80501fa <readtask@plt+0x6b4a>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     80507b1 <readtask@plt+0x7101>
mov    $0x804fb60,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    805018d <readtask@plt+0x6add>
mov    0x805e1a8,%eax
movl   $0xb,0xc(%eax)
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x0(%esi),%esi
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     8050835 <readtask@plt+0x7185>
mov    $0x80517e0,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    805018d <readtask@plt+0x6add>
mov    0x805e1a8,%eax
movl   $0x2,0xc(%eax)
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x0(%esi),%esi
cmpl   $0x2,0x805ec9c
jne    80504a2 <readtask@plt+0x6df2>
mov    0x18(%esp),%eax
mov    $0x80593d5,%edi
mov    $0xa,%ecx
mov    0x4(%eax),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050856 <readtask@plt+0x71a6>
movl   $0x5,0x8(%esp)
movl   $0x8058f6c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
orl    $0x400,0x805e1e8
00
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     8050749 <readtask@plt+0x7099>
mov    $0x80518a0,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    805018d <readtask@plt+0x6add>
mov    0x805e1a8,%eax
movl   $0x6,0xc(%eax)
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
xchg   %ax,%ax
cmpl   $0x2,0x805ec9c
jne    805052a <readtask@plt+0x6e7a>
mov    0x18(%esp),%eax
mov    $0x80593ce,%edi
mov    $0x7,%ecx
mov    0x4(%eax),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050867 <readtask@plt+0x71b7>
movl   $0x5,0x8(%esp)
movl   $0x8058e30,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     80507f3 <readtask@plt+0x7143>
mov    $0x8050890,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    805018d <readtask@plt+0x6add>
mov    0x805e1a8,%eax
movl   $0xa,0xc(%eax)
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x0(%esi),%esi
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
je     8050814 <readtask@plt+0x7164>
mov    $0x8050890,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    805018d <readtask@plt+0x6add>
mov    0x805e1a8,%eax
movl   $0xe,0xc(%eax)
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x0(%esi),%esi
test   %dl,%dl
je     8050716 <readtask@plt+0x7066>
movl   $0x5,0x8(%esp)
movl   $0x8058da8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
call   8050000 <readtask@plt+0x6950>
test   %eax,%eax
jne    80506ff <readtask@plt+0x704f>
movl   $0x5,0x8(%esp)
movl   $0x8058dd4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058d20,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
movl   $0x1,0x805e1d8
00
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x28(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049660 <strtol@plt>
mov    0x28(%esp),%edx
cmpb   $0x0,(%edx)
jne    805022e <readtask@plt+0x6b7e>
lea    -0x1(%eax),%edx
cmp    $0x773593fe,%edx
ja     805022e <readtask@plt+0x6b7e>
mov    %eax,0x805e1b4
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058d7c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
lea    0x28(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049660 <strtol@plt>
mov    0x28(%esp),%edx
cmpb   $0x0,(%edx)
jne    8050261 <readtask@plt+0x6bb1>
lea    -0x1(%eax),%edx
cmp    $0x773593fe,%edx
ja     8050261 <readtask@plt+0x6bb1>
mov    %eax,0x805e1b0
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
lea    0x0(%esi),%esi
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   8052f30 <readtask@plt+0x9880>
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
movl   $0x7,0x4(%esp)
mov    %eax,(%esp)
call   8052f30 <readtask@plt+0x9880>
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
movl   $0x67,0x805e1ec
00
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
movl   $0x1,0x805e1c8
00
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
movl   $0x1,0x805e1d4
00
xor    %eax,%eax
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058e00,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
call   8049290 <__stack_chk_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x8058ed0,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058c60,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058f20,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058c38,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058e50,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058e78,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
movl   $0x5,0x8(%esp)
movl   $0x8058f40,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    805018d <readtask@plt+0x6add>
call   8049210 <display_version@plt>
movl   $0x0,(%esp)
call   80493f0 <exit@plt>
call   804af90 <readtask@plt+0x18e0>
movl   $0x0,(%esp)
call   80493f0 <exit@plt>
call   8050000 <readtask@plt+0x6950>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804b290 <readtask@plt+0x1be0>
lea    0x0(%esi),%esi
sub    $0x2c,%esp
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8049440 <strtoul@plt>
mov    0x1c(%esp),%edx
cmpb   $0x0,(%edx)
jne    80508f0 <readtask@plt+0x7240>
test   %eax,%eax
je     80508be <readtask@plt+0x720e>
jns    80508e0 <readtask@plt+0x7230>
movl   $0x5,0x8(%esp)
movl   $0x80593fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
add    $0x2c,%esp
ret
xchg   %ax,%ax
mov    0x34(%esp),%edx
mov    %eax,(%edx)
xor    %eax,%eax
add    $0x2c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x80593df,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
add    $0x2c,%esp
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x805ec94,%eax
mov    0x805ec9c,%esi
lea    0x1(%eax),%edi
cmp    %esi,%edi
mov    %edi,0x805ec94
jge    8050c78 <readtask@plt+0x75c8>
mov    0x805ec98,%ebp
lea    0x0(%ebp,%edi,4),%ebx
mov    (%ebx),%eax
movsbl (%eax),%edx
mov    %edx,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
ja     80509d0 <readtask@plt+0x7320>
mov    0x805ec88,%edx
movl   $0x1,0x805ec8c
00
test   %edx,%edx
jne    8050b88 <readtask@plt+0x74d8>
movl   $0x1,0x805e1b8
00
movzbl (%eax),%edx
mov    %eax,0x805ec90
cmp    $0x2d,%dl
je     80514db <readtask@plt+0x7e2b>
xor    %ecx,%ecx
sub    $0x1,%eax
testb  $0x10,0x805e1bc
mov    %eax,0x805ec90
je     8050bc0 <readtask@plt+0x7510>
test   %ecx,%ecx
je     8050c40 <readtask@plt+0x7590>
mov    %eax,%esi
add    $0x1,%esi
test   %dl,%dl
mov    %esi,0x805ec90
je     8050917 <readtask@plt+0x7267>
sub    $0x2d,%edx
cmp    $0x4b,%dl
ja     8051017 <readtask@plt+0x7967>
movzbl %dl,%edx
jmp    *0x8059620(,%edx,4)
xchg   %ax,%ax
lea    -0x30(%edx),%ecx
cmp    $0x9,%ecx
ja     8050bf8 <readtask@plt+0x7548>
lea    -0x1(%esi),%eax
sub    %edi,%esi
movl   $0x10,(%esp)
movl   $0x1,0x805ec8c
00
movl   $0x1,0x805e1b8
00
mov    %eax,0x805ec94
call   80493c0 <malloc@plt>
mov    %esi,0x14(%esp)
shl    $0x4,%esi
mov    %esi,(%esp)
mov    %eax,%ebp
call   80493c0 <malloc@plt>
movl   $0x0,0x8(%ebp)
mov    %eax,0x4(%ebp)
movl   $0x10,(%esp)
call   80493c0 <malloc@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   80493c0 <malloc@plt>
movl   $0x0,0x8(%edi)
mov    %eax,0x4(%edi)
movl   $0x10,(%esp)
call   80493c0 <malloc@plt>
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   80493c0 <malloc@plt>
mov    0x1c(%esp),%esi
mov    0x14(%esp),%edx
movl   $0x0,0x8(%esi)
mov    %eax,0x4(%esi)
mov    %edx,%esi
jmp    8050a92 <readtask@plt+0x73e2>
nop
mov    0x8(%ebp),%edx
lea    0x1(%edx),%ecx
shl    $0x4,%edx
add    0x4(%ebp),%edx
mov    %ecx,0x8(%ebp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050890 <readtask@plt+0x71e0>
sub    $0x1,%esi
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
test   %esi,%esi
je     8050b20 <readtask@plt+0x7470>
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
movzbl (%eax),%edx
cmp    $0x2b,%dl
je     8050ae0 <readtask@plt+0x7430>
cmp    $0x2d,%dl
jne    8050a70 <readtask@plt+0x73c0>
mov    0x8(%edi),%edx
add    $0x1,%eax
sub    $0x1,%esi
lea    0x1(%edx),%ecx
shl    $0x4,%edx
add    0x4(%edi),%edx
mov    %ecx,0x8(%edi)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050890 <readtask@plt+0x71e0>
test   %eax,%eax
je     8050a92 <readtask@plt+0x73e2>
lea    0x0(%esi),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%esp),%ecx
add    $0x1,%eax
mov    0x4(%ecx),%edx
mov    %edx,0x14(%esp)
mov    %ecx,%edx
mov    0x8(%ecx),%ecx
mov    %ecx,0x18(%esp)
add    $0x1,%ecx
mov    %ecx,0x8(%edx)
mov    0x18(%esp),%edx
mov    %eax,(%esp)
shl    $0x4,%edx
add    0x14(%esp),%edx
mov    %edx,0x4(%esp)
call   8050890 <readtask@plt+0x71e0>
jmp    8050a8b <readtask@plt+0x73db>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebp),%ecx
test   %ecx,%ecx
je     8050b3c <readtask@plt+0x748c>
mov    0x805e1a8,%eax
movl   $0xa,0xc(%ebp)
mov    %ebp,0x805e1a8
mov    %eax,0x0(%ebp)
mov    0x8(%edi),%edx
test   %edx,%edx
je     8050b57 <readtask@plt+0x74a7>
mov    0x805e1a8,%eax
movl   $0x9,0xc(%edi)
mov    %edi,0x805e1a8
mov    %eax,(%edi)
mov    0x1c(%esp),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     8050917 <readtask@plt+0x7267>
mov    0x1c(%esp),%ebx
mov    0x805e1a8,%eax
movl   $0xc,0xc(%ebx)
mov    %eax,(%ebx)
mov    %ebx,0x805e1a8
jmp    8050917 <readtask@plt+0x7267>
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x10,0x805e1bc
je     8051592 <readtask@plt+0x7ee2>
mov    %edx,%ecx
movl   $0x1,0x805e1b8
00
movzbl (%eax),%edx
mov    %eax,0x805ec90
cmp    $0x2d,%dl
jne    8050988 <readtask@plt+0x72d8>
movzbl 0x1(%eax),%edx
mov    %eax,%esi
jmp    80509a7 <readtask@plt+0x72f7>
lea    0x0(%esi),%esi
test   %ecx,%ecx
je     80509a5 <readtask@plt+0x72f5>
movl   $0x5,0x8(%esp)
movl   $0x80591c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     8050917 <readtask@plt+0x7267>
jmp    8050ad8 <readtask@plt+0x7428>
lea    0x0(%esi),%esi
cmp    $0x2b,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
je     80509dc <readtask@plt+0x732c>
cmp    $0x2d,%edx
je     8051038 <readtask@plt+0x7988>
movl   $0x5,0x8(%esp)
movl   $0x8059504,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x1,0x805ec8c
00
call   8049280 <dcgettext@plt>
jmp    8050ad8 <readtask@plt+0x7428>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8059497,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
xchg   %ax,%ax
orl    $0x2,0x805e18c
nop
movzbl 0x1(%esi),%edx
jmp    80509a7 <readtask@plt+0x72f7>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8050ad8 <readtask@plt+0x7428>
movl   $0x5,0x8(%esp)
movl   $0x8059248,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
orl    $0x100,0x805e1e8
00
jmp    8050c68 <readtask@plt+0x75b8>
orl    $0x20,0x805e1e0
jmp    8050c68 <readtask@plt+0x75b8>
orl    $0x10,0x805e1a4
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x1,0x805e200
00
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x1,0x805e1fc
00
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x62,0x805e1ec
00
jmp    8050c68 <readtask@plt+0x75b8>
orl    $0x2,0x805e1a4
jmp    8050c68 <readtask@plt+0x75b8>
mov    0x805e1d8,%ebx
test   %ebx,%ebx
jne    8051705 <readtask@plt+0x8055>
testb  $0x2,0x805e1bc
je     8051523 <readtask@plt+0x7e73>
movl   $0x2,0x805e1d8
00
jmp    8050c68 <readtask@plt+0x75b8>
orl    $0x8,0x805e1e8
jmp    8050c68 <readtask@plt+0x75b8>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
jne    8051553 <readtask@plt+0x7ea3>
movl   $0x5,0x8(%esp)
movl   $0x8059280,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
orl    $0x10,0x805e1e8
jmp    8050c68 <readtask@plt+0x75b8>
mov    0x805e1bc,%eax
test   $0x40,%al
je     80514fc <readtask@plt+0x7e4c>
orl    $0x200,0x805e1e8
00
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x1,0x805e180
00
movl   $0x1,0x805e184
00
jmp    8050c68 <readtask@plt+0x75b8>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
jne    8051568 <readtask@plt+0x7eb8>
movl   $0x5,0x8(%esp)
movl   $0x80592a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
je     80515b3 <readtask@plt+0x7f03>
mov    $0x8050890,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
mov    0x805e1a8,%eax
movl   $0xa,0xc(%eax)
jmp    8050917 <readtask@plt+0x7267>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x1,0x805e1a4
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x5,0x8(%esp)
movl   $0x80592f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
mov    $0x8050890,%edx
mov    %esi,%eax
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
jmp    8050de0 <readtask@plt+0x7730>
nop
lea    0x0(%esi,%eiz,1),%esi
orl    $0x1,0x805e18c
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x1,0x805e1c4
00
jmp    8050c68 <readtask@plt+0x75b8>
orl    $0x20,0x805e1e8
jmp    8050c68 <readtask@plt+0x75b8>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
je     8051633 <readtask@plt+0x7f83>
mov    $0x804fb60,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
mov    0x805e1a8,%eax
movl   $0xb,0xc(%eax)
jmp    8050917 <readtask@plt+0x7267>
nop
orl    $0x40,0x805e1e8
jmp    8050c68 <readtask@plt+0x75b8>
orl    $0x80,0x805e1e8
00
jmp    8050c68 <readtask@plt+0x75b8>
addl   $0x1,0x805eca0
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x1,0x805e1d4
00
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x10,(%esp)
call   80493c0 <malloc@plt>
movl   $0x10,(%esp)
mov    %eax,%edi
call   80493c0 <malloc@plt>
mov    0x805e1f0,%ecx
mov    0x805e1f4,%ebx
movl   $0xb,0xc(%edi)
movl   $0x1,0x8(%edi)
mov    %eax,0x4(%edi)
mov    %ecx,(%eax)
mov    %ebx,0x4(%eax)
mov    0x805e1a8,%eax
mov    %edi,0x805e1a8
mov    %eax,(%edi)
jmp    8050c68 <readtask@plt+0x75b8>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
je     80515d4 <readtask@plt+0x7f24>
mov    $0x80517e0,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
mov    0x805e1a8,%eax
movl   $0x2,0xc(%eax)
jmp    8050917 <readtask@plt+0x7267>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x2,0x805ec9c
jne    8050f70 <readtask@plt+0x78c0>
mov    0x805ec98,%eax
mov    0x4(%eax),%eax
cmpb   $0x56,(%eax)
jne    8050f70 <readtask@plt+0x78c0>
cmpb   $0x0,0x1(%eax)
je     8051799 <readtask@plt+0x80e9>
movl   $0x5,0x8(%esp)
movl   $0x80594e9,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
je     8051532 <readtask@plt+0x7e82>
mov    %eax,0x805e1cc
jmp    8050917 <readtask@plt+0x7267>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
jne    805157d <readtask@plt+0x7ecd>
movl   $0x5,0x8(%esp)
movl   $0x805921c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
cmpl   $0x2,0x805ec9c
jne    8050ff6 <readtask@plt+0x7946>
mov    0x805ec98,%eax
mov    0x4(%eax),%eax
cmpb   $0x4c,(%eax)
jne    8050ff6 <readtask@plt+0x7946>
cmpb   $0x0,0x1(%eax)
je     80517cb <readtask@plt+0x811b>
movl   $0x5,0x8(%esp)
movl   $0x80594b2,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x5,0x8(%esp)
movl   $0x8059320,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movzbl 0x1(%eax),%edx
mov    %edx,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
ja     8051747 <readtask@plt+0x8097>
mov    0x805ec88,%ecx
test   %ecx,%ecx
jne    8050b97 <readtask@plt+0x74e7>
mov    0x805e1bc,%ebx
mov    0x805e194,%edi
mov    %ebx,%esi
and    $0x400,%ebx
and    $0x800,%esi
mov    %esi,0x14(%esp)
mov    %ebx,0x18(%esp)
movzbl 0x1(%eax),%ebx
lea    0x1(%eax),%esi
mov    %esi,0x805ec90
test   %bl,%bl
je     8050917 <readtask@plt+0x7267>
movsbl %bl,%eax
mov    %eax,0x4(%esp)
movl   $0x8059414,(%esp)
call   8049460 <strchr@plt>
test   %eax,%eax
je     80514cc <readtask@plt+0x7e1c>
sub    $0x2d,%ebx
cmp    $0x4c,%bl
ja     80514ab <readtask@plt+0x7dfb>
movzbl %bl,%ebx
jmp    *0x8059750(,%ebx,4)
movl   $0x1,0x805e218
00
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
orl    $0x20,0x805e1e0
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
orl    $0x4,0x805e1e0
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
orl    $0x4,0x805e1a4
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
orl    $0x1,0x805e1e0
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
cmpl   $0x2,0x805ec9c
jne    805111e <readtask@plt+0x7a6e>
mov    0x4(%ebp),%eax
cmpb   $0x2d,(%eax)
jne    805111e <readtask@plt+0x7a6e>
cmpb   $0x56,0x1(%eax)
jne    805111e <readtask@plt+0x7a6e>
cmpb   $0x0,0x2(%eax)
je     8051799 <readtask@plt+0x80e9>
movl   $0x5,0x8(%esp)
movl   $0x8059423,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
je     80516a2 <readtask@plt+0x7ff2>
mov    $0x80517e0,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
mov    0x805e1a8,%eax
movl   $0x1,0xc(%eax)
jmp    8050917 <readtask@plt+0x7267>
nop
orl    $0x8,0x805e18c
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
orl    $0x10,0x805e1e0
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
jne    8051610 <readtask@plt+0x7f60>
movl   $0x5,0x8(%esp)
movl   $0x8058fdc,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x1,0x805e1c8
00
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
movl   $0x75,0x805e1ec
00
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
je     80516c3 <readtask@plt+0x8013>
mov    $0x80518a0,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
mov    0x805e1a8,%eax
movl   $0x5,0xc(%eax)
jmp    8050917 <readtask@plt+0x7267>
lea    0x0(%esi,%eiz,1),%esi
orl    $0x80,0x805e1e0
00
mov    %esi,%eax
orl    $0x1,0x805e1e8
movl   $0x1,0x805e188
00
jmp    805107d <readtask@plt+0x79cd>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
je     80516e4 <readtask@plt+0x8034>
mov    $0x804fe00,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
mov    0x805e1a8,%eax
movl   $0xd,0xc(%eax)
jmp    8050917 <readtask@plt+0x7267>
lea    0x0(%esi),%esi
addl   $0x1,0x805eca0
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
orl    $0x10,0x805e18c
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
orl    $0x8,0x805e1a4
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
mov    0x14(%esp),%eax
test   %eax,%eax
jne    80510dc <readtask@plt+0x7a2c>
mov    0x18(%esp),%eax
test   %eax,%eax
je     80517aa <readtask@plt+0x80fa>
addl   $0x2,0x805eca0
mov    %esi,%eax
movl   $0x1,0x805e188
00
jmp    805107d <readtask@plt+0x79cd>
movl   $0x5,0x8(%esp)
movl   $0x8059198,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
lea    0x0(%esi),%esi
jne    8050f29 <readtask@plt+0x7879>
movl   $0x5,0x8(%esp)
movl   $0x805943f,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
xchg   %ax,%ax
jne    8050e74 <readtask@plt+0x77c4>
movl   $0x5,0x8(%esp)
movl   $0x8059140,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
xchg   %ax,%ax
je     8051726 <readtask@plt+0x8076>
mov    $0x8050890,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
jne    8050ad8 <readtask@plt+0x7428>
mov    0x805e1a8,%eax
movl   $0xc,0xc(%eax)
jmp    8050917 <readtask@plt+0x7267>
lea    0x0(%esi,%eiz,1),%esi
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
jne    8050dce <readtask@plt+0x771e>
movl   $0x5,0x8(%esp)
movl   $0x80590f8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
orl    $0x4,0x805e1e8
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
test   %edi,%edi
je     8051625 <readtask@plt+0x7f75>
orl    $0x2,0x805e1e8
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
mov    %eax,%ebx
je     8051681 <readtask@plt+0x7fd1>
mov    $0x8050890,%edx
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
je     8051368 <readtask@plt+0x7cb8>
mov    $0x80518a0,%edx
mov    %ebx,%eax
call   804fe30 <readtask@plt+0x6780>
test   %eax,%eax
je     8051788 <readtask@plt+0x80d8>
movl   $0x5,0x8(%esp)
movl   $0x805906c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
nop
jne    8050f9e <readtask@plt+0x78ee>
movl   $0x5,0x8(%esp)
movl   $0x80590a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
orl    $0x4,0x805e18c
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
orl    $0x1,0x805e1e8
mov    %esi,%eax
movl   $0x1,0x805e188
00
jmp    805107d <readtask@plt+0x79cd>
call   804ffb0 <readtask@plt+0x6900>
test   %eax,%eax
jne    80515f5 <readtask@plt+0x7f45>
movl   $0x5,0x8(%esp)
movl   $0x80590d4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x5,0x8(%esp)
movl   $0x805945c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x1,0x805ec8c
00
jmp    80510ad <readtask@plt+0x79fd>
movl   $0x5,0x8(%esp)
movl   $0x805947c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
test   $0x4,%al
je     8050c60 <readtask@plt+0x75b0>
movl   $0x5,0x4(%esp)
movl   $0x8055cd2,(%esp)
call   8052f30 <readtask@plt+0x9880>
mov    0x805ec90,%esi
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x1,0x805e1d8
00
jmp    8050c68 <readtask@plt+0x75b8>
movl   $0x5,0x8(%esp)
movl   $0x80591f4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
call   8052f30 <readtask@plt+0x9880>
jmp    8050917 <readtask@plt+0x7267>
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   8052f30 <readtask@plt+0x9880>
jmp    8050917 <readtask@plt+0x7267>
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   8052f30 <readtask@plt+0x9880>
jmp    8050917 <readtask@plt+0x7267>
movl   $0x5,0x8(%esp)
movl   $0x8059474,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050ad8 <readtask@plt+0x7428>
movl   $0x5,0x8(%esp)
movl   $0x80592cc,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x5,0x8(%esp)
movl   $0x80594cd,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8052f30 <readtask@plt+0x9880>
or     %eax,0x805ec8c
jmp    8050917 <readtask@plt+0x7267>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8052f30 <readtask@plt+0x9880>
jmp    8050917 <readtask@plt+0x7267>
orl    $0x2,0x805e1e0
mov    %esi,%eax
jmp    805107d <readtask@plt+0x79cd>
movl   $0x10,(%esp)
call   80493c0 <malloc@plt>
movl   $0x10,(%esp)
mov    %eax,%esi
call   80493c0 <malloc@plt>
mov    0x805e1f0,%ecx
mov    0x805e1f4,%ebx
movl   $0xb,0xc(%esi)
movl   $0x1,0x8(%esi)
mov    %eax,0x4(%esi)
mov    %ecx,(%eax)
mov    %ebx,0x4(%eax)
mov    0x805e1a8,%eax
mov    %esi,0x805e1a8
mov    %eax,(%esi)
jmp    8050917 <readtask@plt+0x7267>
movl   $0x5,0x8(%esp)
movl   $0x805902c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x5,0x8(%esp)
movl   $0x8059008,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x5,0x8(%esp)
movl   $0x8058fb8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x5,0x8(%esp)
movl   $0x8058f90,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x5,0x8(%esp)
movl   $0x8058d50,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movl   $0x5,0x8(%esp)
movl   $0x805911c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
movsbl %dl,%ecx
sub    $0x30,%ecx
cmp    $0x9,%ecx
jbe    80509dc <readtask@plt+0x732c>
cmp    $0x2d,%dl
jne    8050c0f <readtask@plt+0x755f>
movzbl 0x2(%eax),%eax
and    $0xffffffdf,%eax
sub    $0x41,%eax
cmp    $0x19,%al
ja     8050c0f <readtask@plt+0x755f>
movl   $0x1,0x805ec8c
00
call   8050060 <readtask@plt+0x69b0>
jmp    8050be8 <readtask@plt+0x7538>
lea    0x0(%esi),%esi
mov    0x805e1a8,%eax
movl   $0x6,0xc(%eax)
jmp    8050917 <readtask@plt+0x7267>
call   8049210 <display_version@plt>
movl   $0x0,(%esp)
call   80493f0 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059170,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8050be8 <readtask@plt+0x7538>
call   804f150 <readtask@plt+0x5aa0>
movl   $0x0,(%esp)
call   80493f0 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049440 <strtoul@plt>
mov    0x1c(%esp),%edx
cmpb   $0x0,(%edx)
jne    8051850 <readtask@plt+0x81a0>
mov    0x805e1c8,%edx
test   %edx,%edx
jne    8051840 <readtask@plt+0x8190>
cmp    $0xffffffff,%eax
jne    8051840 <readtask@plt+0x8190>
movl   $0x5,0x8(%esp)
movl   $0x805952c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
mov    %eax,(%edx)
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049130 <getpwnam@plt>
test   %eax,%eax
je     8051868 <readtask@plt+0x81b8>
mov    0x8(%eax),%eax
jmp    8051809 <readtask@plt+0x8159>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e1c8,%ecx
mov    $0xffffffff,%eax
test   %ecx,%ecx
jne    8051840 <readtask@plt+0x8190>
movl   $0x5,0x8(%esp)
movl   $0x8059513,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8051834 <readtask@plt+0x8184>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ebx
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049440 <strtoul@plt>
mov    0x1c(%esp),%edx
cmpb   $0x0,(%edx)
jne    8051910 <readtask@plt+0x8260>
mov    0x805e1c8,%edx
test   %edx,%edx
jne    8051900 <readtask@plt+0x8250>
cmp    $0xffffffff,%eax
jne    8051900 <readtask@plt+0x8250>
movl   $0x5,0x8(%esp)
movl   $0x805955b,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
mov    %eax,(%edx)
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049680 <getgrnam@plt>
test   %eax,%eax
je     8051928 <readtask@plt+0x8278>
mov    0x8(%eax),%eax
jmp    80518c9 <readtask@plt+0x8219>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e1c8,%ecx
mov    $0xffffffff,%eax
test   %ecx,%ecx
jne    8051900 <readtask@plt+0x8250>
movl   $0x5,0x8(%esp)
movl   $0x8059541,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    80518f4 <readtask@plt+0x8244>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
testb  $0x10,0x805e1bc
movl   $0x0,0x805ec94
00
mov    %esi,0x805ec9c
mov    %ebx,0x805ec98
jne    8051a88 <readtask@plt+0x83d8>
call   8050910 <readtask@plt+0x7260>
test   %eax,%eax
mov    %eax,%edi
je     8051a90 <readtask@plt+0x83e0>
call   804ab70 <readtask@plt+0x14c0>
movl   $0x0,0x805eca0
00
call   80530e0 <readtask@plt+0x9a30>
mov    0x805e1bc,%eax
movl   $0x0,0x805e1e8
00
mov    %esi,0x805ec9c
mov    %ebx,0x805ec98
test   $0x44,%al
movl   $0x0,0x805ec94
00
movl   $0x1,0x805ec8c
00
movl   $0x1,0x805ec88
00
movl   $0x1,0x805e1b8
00
jne    8051a03 <readtask@plt+0x8353>
or     $0x40,%eax
mov    %eax,0x805e1bc
call   8050910 <readtask@plt+0x7260>
test   %eax,%eax
mov    %eax,%ebx
jne    8051ad8 <readtask@plt+0x8428>
call   804fa20 <readtask@plt+0x6370>
test   %eax,%eax
mov    %eax,%ebx
jne    8051ad8 <readtask@plt+0x8428>
mov    0x805ec8c,%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    %eax,(%esp)
call   8053120 <readtask@plt+0x9a70>
test   %eax,%eax
mov    %eax,%ebx
jne    8051ad8 <readtask@plt+0x8428>
call   8051b50 <readtask@plt+0x84a0>
test   %eax,%eax
mov    %eax,%ebx
jne    8051ad8 <readtask@plt+0x8428>
mov    0x805eca0,%eax
test   %eax,%eax
je     8051a7d <readtask@plt+0x83cd>
cmpl   $0x83,0x805e1b4
00
jg     8051a6e <readtask@plt+0x83be>
movl   $0x84,0x805e1b4
00
cmp    $0x1,%eax
jle    8051a7d <readtask@plt+0x83cd>
movl   $0x20000,0x805e1b4
00
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xor    %edi,%edi
jmp    80519a0 <readtask@plt+0x82f0>
nop
call   804fa20 <readtask@plt+0x6370>
test   %eax,%eax
mov    %eax,%edi
jne    80519a0 <readtask@plt+0x82f0>
mov    0x805ec8c,%ecx
xor    %eax,%eax
test   %ecx,%ecx
sete   %al
mov    %eax,(%esp)
call   8053120 <readtask@plt+0x9a70>
test   %eax,%eax
mov    %eax,%edi
jne    80519a0 <readtask@plt+0x82f0>
call   8051b50 <readtask@plt+0x84a0>
test   %eax,%eax
mov    %eax,%edi
jne    80519a0 <readtask@plt+0x82f0>
lea    0x0(%esi),%esi
jmp    8051a4f <readtask@plt+0x839f>
lea    0x0(%esi),%esi
testb  $0x10,0x805e1bc
movl   $0x0,0x805eca0
00
movl   $0x5,0x8(%esp)
movl   $0x8059571,0x4(%esp)
movl   $0x0,(%esp)
je     8051b38 <readtask@plt+0x8488>
call   8049280 <dcgettext@plt>
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
movl   $0x1,0x4(%esp)
movl   $0x0,(%esp)
call   804b290 <readtask@plt+0x1be0>
call   8049280 <dcgettext@plt>
mov    %edi,0xc(%esp)
jmp    8051b0b <readtask@plt+0x845b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x805e1a4,%eax
test   %eax,%eax
jne    8051b6a <readtask@plt+0x84ba>
mov    0x805e1b8,%edx
test   %edx,%edx
je     8051c38 <readtask@plt+0x8588>
testb  $0x80,0x805e1bc
jne    8051b7a <readtask@plt+0x84ca>
test   $0xc,%al
jne    8051b7a <readtask@plt+0x84ca>
or     $0x2,%eax
cmp    $0x13,%eax
ja     8051c48 <readtask@plt+0x8598>
jmp    *0x80599cc(,%eax,4)
lea    0x0(%esi),%esi
movl   $0x3333,0x805eca4
00
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x303,0x805eca4
00
xor    %eax,%eax
add    $0x1c,%esp
ret
movl   $0x3f3f,0x805eca4
00
xor    %eax,%eax
jmp    8051ba0 <readtask@plt+0x84f0>
xchg   %ax,%ax
movl   $0x1,0x805e218
00
xor    %eax,%eax
movl   $0x0,0x805e1a4
00
jmp    8051ba0 <readtask@plt+0x84f0>
movl   $0xf0f,0x805eca4
00
xor    %eax,%eax
jmp    8051ba0 <readtask@plt+0x84f0>
xchg   %ax,%ax
movl   $0x202,0x805eca4
00
xor    %eax,%eax
jmp    8051ba0 <readtask@plt+0x84f0>
xchg   %ax,%ax
movl   $0x2222,0x805eca4
00
xor    %eax,%eax
jmp    8051ba0 <readtask@plt+0x84f0>
xchg   %ax,%ax
movl   $0xa0a,0x805eca4
00
xor    %eax,%eax
jmp    8051ba0 <readtask@plt+0x84f0>
xchg   %ax,%ax
movl   $0xaaaa,0x805eca4
00
xor    %eax,%eax
jmp    8051ba0 <readtask@plt+0x84f0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xaa00,0x805eca4
00
jmp    8051ba0 <readtask@plt+0x84f0>
nop
movl   $0x5,0x8(%esp)
movl   $0x80599a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8051ba0 <readtask@plt+0x84f0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x805e218,%ebp
mov    0x30(%esp),%esi
test   %ebp,%ebp
jne    8051d18 <readtask@plt+0x8668>
mov    0x805e1a4,%edi
test   %edi,%edi
jne    8051cc0 <readtask@plt+0x8610>
mov    0x805e1a8,%ebx
test   %ebx,%ebx
je     8051cc0 <readtask@plt+0x8610>
lea    0x1d8(%esi),%eax
mov    %eax,0xc(%esp)
cmpl   $0xe,0xc(%ebx)
ja     8052088 <readtask@plt+0x89d8>
mov    0xc(%ebx),%eax
jmp    *0x8059a1c(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e1f8,%eax
cmp    %eax,0x204(%esi)
mov    0x1fc(%esi),%edi
mov    0x200(%esi),%edx
sete   %al
xor    %ecx,%ecx
cmp    %edi,0x1f4(%esi)
movzbl %al,%eax
sete   %cl
add    %ecx,%ecx
or     %eax,%ecx
cmp    $0x1,%edx
sbb    %eax,%eax
and    $0x4,%eax
or     %eax,%ecx
xor    %eax,%eax
cmp    0x805e1f0,%edx
sete   %al
shl    $0x3,%eax
or     %eax,%ecx
mov    $0x1,%eax
shl    %cl,%eax
test   %eax,0x805eca4
je     8051d58 <readtask@plt+0x86a8>
lea    0x0(%esi),%esi
mov    $0x1,%eax
mov    0x805e1c4,%ebx
test   %ebx,%ebx
je     8051d30 <readtask@plt+0x8680>
movzbl 0x14(%esi),%edx
cmp    $0x44,%dl
jne    8051d48 <readtask@plt+0x8698>
mov    0x805e1c8,%ecx
mov    %eax,%edx
xor    $0x1,%edx
test   %ecx,%ecx
cmovne %edx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x52,%dl
mov    $0x0,%edx
cmovne %edx,%eax
jmp    8051d30 <readtask@plt+0x8680>
lea    0x0(%esi),%esi
mov    0x805e1a8,%ebx
test   %ebx,%ebx
jne    8051c9d <readtask@plt+0x85ed>
xor    %eax,%eax
jmp    8051d1d <readtask@plt+0x866d>
lea    0x0(%esi),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051d91 <readtask@plt+0x86e1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x4(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051d80 <readtask@plt+0x86d0>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
test   %ebx,%ebx
jne    8051ca7 <readtask@plt+0x85f7>
xor    %eax,%eax
jmp    8051d1d <readtask@plt+0x866d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051dd8 <readtask@plt+0x8728>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x20c(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051dc0 <readtask@plt+0x8710>
jmp    8051d98 <readtask@plt+0x86e8>
xchg   %ax,%ax
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051e08 <readtask@plt+0x8758>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x204(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051df0 <readtask@plt+0x8740>
jmp    8051d98 <readtask@plt+0x86e8>
xchg   %ax,%ax
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051e38 <readtask@plt+0x8788>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x214(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051e20 <readtask@plt+0x8770>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051e70 <readtask@plt+0x87c0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x21c(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051e58 <readtask@plt+0x87a8>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051ea8 <readtask@plt+0x87f8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x210(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051e90 <readtask@plt+0x87e0>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051ee0 <readtask@plt+0x8830>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x208(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051ec8 <readtask@plt+0x8818>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051f18 <readtask@plt+0x8868>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x218(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051f00 <readtask@plt+0x8850>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051f50 <readtask@plt+0x88a0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x220(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051f38 <readtask@plt+0x8888>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051f88 <readtask@plt+0x88d8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x1f0(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051f70 <readtask@plt+0x88c0>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051fc0 <readtask@plt+0x8910>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x1fc(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051fa8 <readtask@plt+0x88f8>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8051ff8 <readtask@plt+0x8948>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x200(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8051fe0 <readtask@plt+0x8930>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%edx
lea    -0x1(%edx),%eax
shl    $0x4,%eax
jmp    8052030 <readtask@plt+0x8980>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%ecx
sub    $0x1,%edx
mov    (%ecx,%eax,1),%ecx
sub    $0x10,%eax
cmp    %ecx,0x1f4(%esi)
je     8051d18 <readtask@plt+0x8668>
test   %edx,%edx
jne    8052018 <readtask@plt+0x8968>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%eax
lea    -0x1(%eax),%ebp
mov    %ebp,%edi
shl    $0x4,%edi
jmp    805207b <readtask@plt+0x89cb>
lea    0x0(%esi),%esi
movl   $0xf,0x8(%esp)
mov    0x4(%ebx),%eax
sub    $0x1,%ebp
add    %edi,%eax
sub    $0x10,%edi
mov    %eax,0x4(%esp)
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   8049640 <strncmp@plt>
test   %eax,%eax
je     8051d18 <readtask@plt+0x8668>
cmp    $0xffffffff,%ebp
jne    8052050 <readtask@plt+0x89a0>
jmp    8051d98 <readtask@plt+0x86e8>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x805438b,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x5f,0x4(%esp)
movl   $0x8059a58,(%esp)
mov    %eax,0x8(%esp)
call   804b240 <readtask@plt+0x1b90>
jmp    8051d98 <readtask@plt+0x86e8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
movzbl (%eax),%edx
cmp    $0x2d,%dl
je     8052120 <readtask@plt+0x8a70>
xor    %esi,%esi
cmp    $0x2b,%dl
sete   %dl
movzbl %dl,%edx
add    %edx,%eax
mov    %eax,(%esp)
call   804f200 <readtask@plt+0x5b50>
test   %eax,%eax
mov    %eax,%ebx
je     8052130 <readtask@plt+0x8a80>
movl   $0x14,(%esp)
call   80493c0 <malloc@plt>
mov    0xc(%ebx),%edx
mov    %edx,0x4(%eax)
mov    0x14(%ebx),%edx
mov    %esi,0x8(%eax)
movl   $0x0,(%eax)
mov    %edx,0x10(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
add    $0x1,%eax
mov    $0x1,%esi
jmp    80520ea <readtask@plt+0x8a3a>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8052119 <readtask@plt+0x8a69>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x144,%esp
mov    %gs:0x14,%eax
mov    %eax,0x13c(%esp)
xor    %eax,%eax
lea    0x1f(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x4b4a4743,0x1f(%esp)
movl   $0x52504e4d,0x23(%esp)
movl   $0x63555453,0x27(%esp)
movl   $0x6b6a6766,0x2b(%esp)
movl   $0x706f6e6d,0x2f(%esp)
movl   $0x75747372,0x33(%esp)
movl   $0x2d2b7976,0x37(%esp)
movb   $0x0,0x3b(%esp)
call   80496a0 <strspn@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049470 <strlen@plt>
lea    0x13b(%esp),%edx
lea    0x3b(%esp),%ecx
cmp    %eax,%esi
jne    8052212 <readtask@plt+0x8b62>
nop
movb   $0x0,(%edx)
sub    $0x1,%edx
cmp    %ecx,%edx
jne    80521c0 <readtask@plt+0x8b10>
movsbl (%ebx),%eax
mov    0x805e1ec,%ecx
cmp    $0x2b,%al
je     80521fd <readtask@plt+0x8b4d>
jle    8052230 <readtask@plt+0x8b80>
cmp    $0x2d,%al
je     80521fd <readtask@plt+0x8b4d>
cmp    $0x50,%al
nop
jne    80521e6 <readtask@plt+0x8b36>
test   %ecx,%ecx
jne    805224f <readtask@plt+0x8b9f>
cmpb   $0x0,0x3c(%esp,%eax,1)
jne    8052212 <readtask@plt+0x8b62>
movb   $0x1,0x3c(%esp,%eax,1)
movsbl 0x1(%ebx),%eax
add    $0x1,%ebx
cmp    $0x2b,%al
jne    80521d7 <readtask@plt+0x8b27>
movsbl 0x1(%ebx),%eax
movsbl %al,%edx
test   %edx,%edx
je     8052212 <readtask@plt+0x8b62>
cmp    $0x2b,%edx
je     8052212 <readtask@plt+0x8b62>
cmp    $0x2d,%edx
jne    80521f6 <readtask@plt+0x8b46>
movl   $0x5,0x8(%esp)
movl   $0x8059a61,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8052236 <readtask@plt+0x8b86>
test   %al,%al
jne    80521e6 <readtask@plt+0x8b36>
xor    %eax,%eax
mov    0x13c(%esp),%esi
xor    %gs:0x14,%esi
jne    805226d <readtask@plt+0x8bbd>
add    $0x144,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x8059b80,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8052236 <readtask@plt+0x8b86>
call   8049290 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x3c,%esp
mov    %edi,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
call   804f200 <readtask@plt+0x5b50>
test   %eax,%eax
mov    %eax,%ebx
je     8052346 <readtask@plt+0x8c96>
movl   $0x20,(%esp)
call   80493c0 <malloc@plt>
testb  $0x10,0x1c(%ebx)
mov    %eax,%edi
jne    8052318 <readtask@plt+0x8c68>
test   %esi,%esi
mov    0x10(%ebx),%ebp
je     8052333 <readtask@plt+0x8c83>
mov    %esi,(%esp)
call   8049470 <strlen@plt>
cmp    %ebp,%eax
cmovl  %ebp,%eax
mov    %eax,0xc(%edi)
mov    %esi,(%esp)
call   80494f0 <__strdup@plt>
mov    %eax,0x4(%edi)
mov    0x8(%ebx),%eax
mov    %eax,0x8(%edi)
mov    0x14(%ebx),%eax
mov    %eax,0x10(%edi)
mov    0x18(%ebx),%eax
mov    %eax,0x14(%edi)
mov    0x1c(%ebx),%eax
movl   $0x0,(%edi)
mov    %eax,0x18(%edi)
mov    %edi,%eax
mov    0x2c(%esp),%esi
xor    %gs:0x14,%esi
jne    80523ff <readtask@plt+0x8d4f>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049550 <get_pid_digits@plt>
mov    %eax,%ebp
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049470 <strlen@plt>
cmp    %ebp,%eax
cmovge %eax,%ebp
test   %esi,%esi
jne    80522c4 <readtask@plt+0x8c14>
mov    0x4(%ebx),%eax
mov    %ebp,0xc(%edi)
mov    %eax,(%esp)
call   80494f0 <__strdup@plt>
mov    %eax,0x4(%edi)
jmp    80522df <readtask@plt+0x8c2f>
mov    %edi,(%esp)
call   804f270 <readtask@plt+0x5bc0>
test   %eax,%eax
je     80523f8 <readtask@plt+0x8d48>
mov    0x4(%eax),%edx
xor    %edi,%edi
movsbl (%edx),%ecx
test   %cl,%cl
je     80523dc <readtask@plt+0x8d2c>
lea    0x0(%esi),%esi
cmp    $0x2c,%ecx
je     80523f0 <readtask@plt+0x8d40>
cmp    $0x20,%ecx
je     80523f0 <readtask@plt+0x8d40>
lea    0x1(%edx),%ebp
xor    %ecx,%ecx
jmp    805238d <readtask@plt+0x8cdd>
lea    0x0(%esi),%esi
cmp    $0x2c,%eax
je     805239a <readtask@plt+0x8cea>
cmp    $0x20,%eax
lea    0x1(%ebp),%ebp
je     805239a <readtask@plt+0x8cea>
movsbl 0x0(%ebp),%eax
add    $0x1,%ecx
mov    %ebp,%ebx
test   %al,%al
jne    8052380 <readtask@plt+0x8cd0>
mov    %ecx,%ebp
lea    0x1c(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0x10,0xc(%esp)
mov    %eax,(%esp)
call   8049530 <__strncpy_chk@plt>
mov    %esi,%edx
lea    0x1c(%esp),%eax
movb   $0x0,0x1c(%esp,%ebp,1)
call   8052280 <readtask@plt+0x8bd0>
mov    %edi,(%eax)
cmpb   $0x0,(%ebx)
je     80523e8 <readtask@plt+0x8d38>
movsbl 0x1(%ebx),%ecx
lea    0x1(%ebx),%edx
mov    %eax,%edi
test   %cl,%cl
jne    8052368 <readtask@plt+0x8cb8>
mov    %edi,%eax
jmp    80522ff <readtask@plt+0x8c4f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
xor    %ecx,%ecx
mov    %eax,%edi
jmp    80523d8 <readtask@plt+0x8d28>
mov    %edx,%ebx
xor    %ebp,%ebp
xor    %ecx,%ecx
jmp    805239c <readtask@plt+0x8cec>
xor    %eax,%eax
jmp    80522ff <readtask@plt+0x8c4f>
call   8049290 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x805e1e4,%esi
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
jne    805244d <readtask@plt+0x8d9d>
jmp    805245d <readtask@plt+0x8dad>
xchg   %ax,%ax
mov    %edi,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
je     8052478 <readtask@plt+0x8dc8>
mov    %ebx,%esi
mov    (%esi),%ebx
test   %ebx,%ebx
jne    8052438 <readtask@plt+0x8d88>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%esi),%eax
mov    %eax,0x0(%ebp)
mov    $0x1,%eax
mov    %ebp,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
mov    %eax,0x0(%ebp)
mov    (%esi),%eax
mov    %ebp,(%eax)
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x805e1e4,%esi
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
jne    80524cd <readtask@plt+0x8e1d>
jmp    80524f8 <readtask@plt+0x8e48>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049150 <strcmp@plt>
test   %eax,%eax
je     80524e0 <readtask@plt+0x8e30>
mov    %ebx,%esi
mov    (%esi),%ebx
test   %ebx,%ebx
jne    80524b8 <readtask@plt+0x8e08>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
mov    %eax,(%esi)
mov    %ebx,(%esp)
call   80491d0 <free@plt>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%esi),%eax
mov    %esi,(%esp)
mov    %eax,0x805e1e4
call   80491d0 <free@plt>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    $0x805572d,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    $0x805574e,%eax
cmp    $0x62,%edx
cmovne %eax,%esi
xor    %edx,%edx
mov    $0x805440c,%eax
call   8052280 <readtask@plt+0x8bd0>
test   %eax,%eax
mov    %eax,%edi
je     80525bb <readtask@plt+0x8f0b>
mov    (%ebx),%ecx
jmp    8052552 <readtask@plt+0x8ea2>
xchg   %ax,%ax
mov    %edx,%ecx
mov    (%ecx),%edx
test   %edx,%edx
jne    8052550 <readtask@plt+0x8ea0>
xor    %edx,%edx
mov    %esi,%eax
mov    %edi,(%ecx)
call   8052280 <readtask@plt+0x8bd0>
test   %eax,%eax
mov    %eax,%esi
je     8052585 <readtask@plt+0x8ed5>
mov    %esi,%ecx
jmp    8052572 <readtask@plt+0x8ec2>
lea    0x0(%esi),%esi
mov    %edx,%ecx
mov    (%ecx),%edx
test   %edx,%edx
jne    8052570 <readtask@plt+0x8ec0>
mov    (%ebx),%eax
mov    %eax,(%ecx)
mov    %esi,(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x5,0x8(%esp)
movl   $0x8059ba8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x70,0x4(%esp)
movl   $0x8059a72,(%esp)
mov    %eax,0x8(%esp)
call   804b240 <readtask@plt+0x1b90>
jmp    8052569 <readtask@plt+0x8eb9>
movl   $0x5,0x8(%esp)
movl   $0x8059ba8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x6b,0x4(%esp)
movl   $0x8059a72,(%esp)
mov    %eax,0x8(%esp)
call   804b240 <readtask@plt+0x1b90>
jmp    805254a <readtask@plt+0x8e9a>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x3c,%esp
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   80494f0 <__strdup@plt>
mov    0x805ed1c,%esi
mov    $0x1,%ecx
mov    %eax,%edx
mov    %eax,0x2c(%esp)
movzbl (%eax),%eax
jmp    8052655 <readtask@plt+0x8fa5>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2c,%al
je     8052662 <readtask@plt+0x8fb2>
cmp    $0x3d,%al
jne    80527d0 <readtask@plt+0x9120>
test   %esi,%esi
xchg   %ax,%ax
jne    8052679 <readtask@plt+0x8fc9>
test   %ecx,%ecx
je     805264b <readtask@plt+0x8f9b>
add    $0x1,%ebx
xor    %ecx,%ecx
add    $0x1,%edx
movzbl (%edx),%eax
test   %al,%al
je     8052679 <readtask@plt+0x8fc9>
cmp    $0xa,%al
jg     8052630 <readtask@plt+0x8f80>
cmp    $0x9,%al
jge    8052662 <readtask@plt+0x8fb2>
test   %al,%al
nop
jne    8052642 <readtask@plt+0x8f92>
test   %ecx,%ecx
jne    80527e0 <readtask@plt+0x9130>
add    $0x1,%edx
movzbl (%edx),%eax
mov    $0x1,%ecx
test   %al,%al
jne    8052655 <readtask@plt+0x8fa5>
test   %ebx,%ebx
je     80529fe <readtask@plt+0x934e>
test   %ecx,%ecx
jne    805280c <readtask@plt+0x915c>
lea    -0x1(%ebx),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    %edi,0x28(%esp)
mov    %eax,%ebx
lea    0x0(%esi),%esi
movl   $0x8059aa6,0x4(%esp)
mov    %ebx,(%esp)
call   80495a0 <strpbrk@plt>
mov    0x1c(%esp),%edx
test   %edx,%edx
setne  0x18(%esp)
test   %eax,%eax
mov    %eax,%edi
je     80526cb <readtask@plt+0x901b>
cmpb   $0x0,0x18(%esp)
je     80526cb <readtask@plt+0x901b>
movb   $0x0,(%eax)
movl   $0x3d,0x4(%esp)
mov    %ebx,(%esp)
call   8049460 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     80526e7 <readtask@plt+0x9037>
movb   $0x0,(%eax)
add    $0x1,%ebp
movl   $0x3a,0x4(%esp)
mov    %ebx,(%esp)
call   8049460 <strchr@plt>
test   %eax,%eax
je     8052a2d <readtask@plt+0x937d>
lea    0x1(%eax),%esi
movb   $0x0,(%eax)
movl   $0x8059aab,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x24(%esp)
call   80496a0 <strspn@plt>
mov    %esi,(%esp)
mov    %eax,0x20(%esp)
call   8049470 <strlen@plt>
cmp    %eax,0x20(%esp)
jne    8052815 <readtask@plt+0x9165>
mov    0x24(%esp),%ecx
movzbl 0x1(%ecx),%eax
cmp    $0x30,%al
je     8052815 <readtask@plt+0x9165>
test   %al,%al
je     8052815 <readtask@plt+0x9165>
mov    %ebp,%edx
mov    %ebx,%eax
call   8052280 <readtask@plt+0x8bd0>
test   %eax,%eax
mov    %eax,%ebp
je     8052a40 <readtask@plt+0x9390>
test   %esi,%esi
je     8052783 <readtask@plt+0x90d3>
mov    (%eax),%eax
test   %eax,%eax
jne    8052aab <readtask@plt+0x93fb>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8049660 <strtol@plt>
mov    %eax,0xc(%ebp)
mov    %ebp,%eax
jmp    805278a <readtask@plt+0x90da>
nop
mov    %edx,%eax
mov    (%eax),%edx
test   %edx,%edx
jne    8052788 <readtask@plt+0x90d8>
mov    0x28(%esp),%ecx
lea    0x1(%edi),%ebx
subl   $0x1,0x1c(%esp)
cmpb   $0x0,0x18(%esp)
mov    0x4(%ecx),%edx
mov    %edx,(%eax)
mov    %ebp,0x4(%ecx)
jne    80526a0 <readtask@plt+0x8ff0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
xor    %eax,%eax
movl   $0x1,0x805ed10
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0x20,%al
jne    8052642 <readtask@plt+0x8f92>
test   %ecx,%ecx
je     805266a <readtask@plt+0x8fba>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059a7f,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    8052843 <readtask@plt+0x9193>
movb   $0x0,-0x1(%edx)
jmp    8052689 <readtask@plt+0x8fd9>
mov    0x2c(%esp),%eax
mov    0x28(%esp),%edi
mov    %eax,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059bd0,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
mov    0xc(%edi),%esi
movl   $0x25,0x4(%esp)
mov    %esi,(%esp)
call   8049460 <strchr@plt>
mov    %eax,%edx
mov    %ebx,%eax
test   %edx,%edx
je     80527c7 <readtask@plt+0x9117>
mov    %esi,%edx
xor    %ebx,%ebx
lea    0x1(%edx),%eax
movsbl (%edx),%edx
cmp    $0x25,%edx
je     8052890 <readtask@plt+0x91e0>
test   %edx,%edx
je     8052b30 <readtask@plt+0x9480>
add    $0x1,%ebx
jmp    8052884 <readtask@plt+0x91d4>
xchg   %ax,%ax
test   %edx,%edx
je     80528c0 <readtask@plt+0x9210>
add    $0x1,%eax
movsbl -0x1(%eax),%edx
cmp    $0x25,%edx
jne    8052880 <readtask@plt+0x91d0>
add    $0x1,%ebx
cmpb   $0x0,(%eax)
lea    0x1(%eax),%edx
jne    8052866 <readtask@plt+0x91b6>
movl   $0x5,0x8(%esp)
movl   $0x8059ab6,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    80527c7 <readtask@plt+0x9117>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   80494f0 <__strdup@plt>
mov    0xc(%edi),%ebp
mov    %eax,%esi
mov    %ebx,0x1c(%esp)
mov    %ebp,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ebx),%edx
cmp    $0x25,%dl
je     80529a8 <readtask@plt+0x92f8>
xor    %eax,%eax
test   %dl,%dl
jne    80528f5 <readtask@plt+0x9245>
jmp    80529f5 <readtask@plt+0x9345>
nop
cmp    $0x25,%dl
je     8052900 <readtask@plt+0x9250>
add    $0x1,%eax
movzbl (%ebx,%eax,1),%edx
test   %dl,%dl
jne    80528f0 <readtask@plt+0x9240>
mov    %eax,%edx
mov    %eax,%ebp
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x18(%esp)
call   80491f0 <memcpy@plt>
mov    0x18(%esp),%edx
movb   $0x0,(%esi,%edx,1)
add    %edx,%ebx
movl   $0x20,(%esp)
call   80493c0 <malloc@plt>
mov    %ebp,0xc(%eax)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   80494f0 <__strdup@plt>
mov    0x18(%esp),%edx
movl   $0x0,0x8(%edx)
movl   $0x0,0x10(%edx)
mov    %eax,0x4(%edx)
xor    %eax,%eax
movl   $0x3,0x14(%edx)
movl   $0x40000000,0x18(%edx)
movl   $0x0,(%edx)
mov    %edx,%ebp
jmp    8052974 <readtask@plt+0x92c4>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    (%eax),%eax
test   %eax,%eax
jne    8052970 <readtask@plt+0x92c0>
mov    0x4(%edi),%eax
subl   $0x1,0x1c(%esp)
mov    %eax,0x0(%ebp)
mov    %edx,0x4(%edi)
jne    80528d8 <readtask@plt+0x9228>
mov    %esi,(%esp)
call   80491d0 <free@plt>
xor    %eax,%eax
movl   $0x1,0x805ed10
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movsbl 0x1(%ebx),%eax
cmp    $0x25,%al
je     80529e0 <readtask@plt+0x9330>
mov    %eax,(%esp)
add    $0x2,%ebx
call   804f1d0 <readtask@plt+0x5b20>
test   %eax,%eax
je     8052b07 <readtask@plt+0x9457>
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
call   8052280 <readtask@plt+0x8bd0>
test   %eax,%eax
mov    %eax,%edx
je     8052ade <readtask@plt+0x942e>
mov    (%eax),%eax
jmp    8052968 <readtask@plt+0x92b8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    $0x1,%edx
movb   $0x25,(%esi)
mov    $0x1,%ebp
jmp    805291c <readtask@plt+0x926c>
xor    %edx,%edx
xor    %ebp,%ebp
jmp    8052904 <readtask@plt+0x9254>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059a94,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    8052843 <readtask@plt+0x9193>
mov    %ebp,%edx
mov    %ebx,%eax
call   8052280 <readtask@plt+0x8bd0>
test   %eax,%eax
mov    %eax,%ebp
jne    8052783 <readtask@plt+0x90d3>
cmpb   $0x0,0x805ecc0
mov    0x28(%esp),%edi
jne    8052a95 <readtask@plt+0x93e5>
movl   $0x5,0x8(%esp)
movl   $0x8059c00,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %ebx,0x14(%esp)
movl   $0x50,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x50,0x4(%esp)
movl   $0x805ecc0,(%esp)
mov    %eax,0x10(%esp)
call   8049140 <__snprintf_chk@plt>
mov    0x2c(%esp),%eax
mov    $0x805ecc0,%ebx
mov    %eax,(%esp)
call   80491d0 <free@plt>
jmp    8052843 <readtask@plt+0x9193>
mov    0x2c(%esp),%eax
mov    0x28(%esp),%edi
mov    %eax,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059c2c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    8052843 <readtask@plt+0x9193>
mov    %esi,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059c6c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    80527c7 <readtask@plt+0x9117>
mov    %esi,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059ad4,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    80527c7 <readtask@plt+0x9117>
mov    %esi,(%esp)
call   80494f0 <__strdup@plt>
test   %ebx,%ebx
mov    0xc(%edi),%ebp
mov    %eax,%esi
je     805298c <readtask@plt+0x92dc>
jmp    80528cd <readtask@plt+0x921d>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    (%eax),%eax
test   %eax,%eax
je     8052b78 <readtask@plt+0x94c8>
call   8052b50 <readtask@plt+0x94a0>
test   %eax,%eax
mov    %eax,%ebx
je     8052b78 <readtask@plt+0x94c8>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x7,0x10(%edi)
ja     8052c90 <readtask@plt+0x95e0>
mov    0x10(%edi),%eax
jmp    *0x8059f08(,%eax,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x805ed14,%eax
test   %eax,%eax
jne    8052d88 <readtask@plt+0x96d8>
mov    0xc(%edi),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   80494f0 <__strdup@plt>
mov    $0x1,%ecx
mov    %eax,%edx
mov    %eax,0xc(%esp)
movzbl (%eax),%eax
cmp    $0x2c,%al
ja     8052d70 <readtask@plt+0x96c0>
jmp    *0x8059f28(,%eax,4)
nop
mov    0x805ed18,%ebx
test   %ebx,%ebx
jne    8052be0 <readtask@plt+0x9530>
mov    0x805ed14,%ecx
test   %ecx,%ecx
je     8052dcb <readtask@plt+0x971b>
movl   $0x5,0x8(%esp)
movl   $0x8059af1,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%esi
test   %esi,%esi
je     8052e8a <readtask@plt+0x97da>
mov    0x805ed10,%edx
test   %edx,%edx
jne    8052da8 <readtask@plt+0x96f8>
mov    %edi,%eax
call   8052600 <readtask@plt+0x8f50>
test   %eax,%eax
mov    %eax,%ebx
je     8052f0b <readtask@plt+0x985b>
mov    %esi,%ebx
jmp    8052b6a <readtask@plt+0x94ba>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   8052600 <readtask@plt+0x8f50>
test   %eax,%eax
mov    %eax,%ebx
jne    8052b6a <readtask@plt+0x94ba>
movl   $0x1,0x805ed10
00
jmp    8052b6a <readtask@plt+0x94ba>
mov    0x805ed10,%esi
test   %esi,%esi
jne    8052de0 <readtask@plt+0x9730>
mov    %edi,%eax
call   8052600 <readtask@plt+0x8f50>
test   %eax,%eax
mov    %eax,%ebx
jne    8052b6a <readtask@plt+0x94ba>
lea    0x4(%edi),%eax
mov    $0x75,%edx
movl   $0x1,0x805ed10
00
call   8052520 <readtask@plt+0x8e70>
jmp    8052b6a <readtask@plt+0x94ba>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
xor    %ebx,%ebx
movl   $0x805438b,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x226,0x4(%esp)
movl   $0x8059a72,(%esp)
mov    %eax,0x8(%esp)
call   804b240 <readtask@plt+0x1b90>
jmp    8052b6a <readtask@plt+0x94ba>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
jne    8052e03 <readtask@plt+0x9753>
mov    $0x1,%ecx
add    $0x1,%edx
movzbl (%edx),%eax
test   %al,%al
jne    8052bb8 <readtask@plt+0x9508>
test   %ebx,%ebx
je     8052e5d <readtask@plt+0x97ad>
test   %ecx,%ecx
je     8052cfb <readtask@plt+0x964b>
movb   $0x0,-0x1(%edx)
mov    0xc(%esp),%esi
nop
movl   $0x8059aa6,0x4(%esp)
mov    %esi,(%esp)
call   80495a0 <strpbrk@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8052d19 <readtask@plt+0x9669>
movb   $0x0,(%eax)
mov    %esi,%eax
call   80520d0 <readtask@plt+0x8a20>
test   %eax,%eax
je     8052e30 <readtask@plt+0x9780>
mov    %eax,%ecx
jmp    8052d32 <readtask@plt+0x9682>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%ecx
mov    (%ecx),%edx
test   %edx,%edx
jne    8052d30 <readtask@plt+0x9680>
mov    0x8(%edi),%edx
sub    $0x1,%ebx
lea    0x1(%ebp),%esi
mov    %edx,(%ecx)
mov    %eax,0x8(%edi)
jne    8052d00 <readtask@plt+0x9650>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
xor    %eax,%eax
xchg   %ax,%ax
movl   $0x1,0x805ed14
00
mov    %eax,%ebx
jmp    8052b6a <readtask@plt+0x94ba>
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
je     8052cdd <readtask@plt+0x962d>
add    $0x1,%ebx
xor    %ecx,%ecx
jmp    8052cdd <readtask@plt+0x962d>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8059af1,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8052d58 <readtask@plt+0x96a8>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x8059cc0,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    8052b6a <readtask@plt+0x94ba>
mov    0xc(%edi),%eax
call   8052140 <readtask@plt+0x8a90>
mov    %eax,%esi
jmp    8052bfe <readtask@plt+0x954e>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x8059c90,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    8052b6a <readtask@plt+0x94ba>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059b1e,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8052d58 <readtask@plt+0x96a8>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059b07,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8052d58 <readtask@plt+0x96a8>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   80491d0 <free@plt>
movl   $0x5,0x8(%esp)
movl   $0x8059b31,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
jmp    8052d58 <readtask@plt+0x96a8>
mov    0xc(%edi),%ebx
movsbl (%ebx),%eax
cmp    $0x2b,%al
je     8052ed0 <readtask@plt+0x9820>
cmp    $0x2d,%al
je     8052f04 <readtask@plt+0x9854>
test   %al,%al
je     8052ef3 <readtask@plt+0x9843>
mov    %eax,(%esp)
call   804f1a0 <readtask@plt+0x5af0>
test   %eax,%eax
je     8052ed7 <readtask@plt+0x9827>
mov    0x4(%eax),%eax
call   80520d0 <readtask@plt+0x8a20>
test   %eax,%eax
je     8052ed7 <readtask@plt+0x9827>
mov    %esi,0x8(%eax)
mov    %eax,%edx
jmp    8052ec2 <readtask@plt+0x9812>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%edx
mov    (%edx),%ecx
test   %ecx,%ecx
jne    8052ec0 <readtask@plt+0x9810>
mov    0x8(%edi),%ecx
mov    %ecx,(%edx)
mov    %eax,0x8(%edi)
xor    %esi,%esi
add    $0x1,%ebx
jmp    8052e8d <readtask@plt+0x97dd>
movl   $0x5,0x8(%esp)
movl   $0x8059b07,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x1,0x805ed14
00
xor    %ebx,%ebx
jmp    8052b6a <readtask@plt+0x94ba>
mov    $0x1,%esi
jmp    8052ed2 <readtask@plt+0x9822>
lea    0x4(%edi),%eax
mov    $0x62,%edx
movl   $0x1,0x805ed10
00
call   8052520 <readtask@plt+0x8e70>
jmp    8052b6a <readtask@plt+0x94ba>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
movl   $0x14,(%esp)
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
call   80493c0 <malloc@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   80494f0 <__strdup@plt>
cmp    $0x6,%edi
mov    %edi,0x10(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0x4(%ebx)
mov    %eax,0xc(%ebx)
mov    0x805ed20,%eax
mov    %ebx,0x805ed20
mov    %eax,(%ebx)
je     80530a8 <readtask@plt+0x99f8>
cmp    $0x2,%edi
jne    8053070 <readtask@plt+0x99c0>
movsbl (%esi),%edx
mov    $0x1,%eax
cmp    $0x20,%dl
je     8053098 <readtask@plt+0x99e8>
jle    8052fd0 <readtask@plt+0x9920>
cmp    $0x2c,%dl
je     8053098 <readtask@plt+0x99e8>
cmp    $0x3d,%dl
jne    8052fd8 <readtask@plt+0x9928>
mov    0x2c(%esp),%ecx
xor    %gs:0x14,%ecx
nop
jne    80530cc <readtask@plt+0x9a1c>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
test   %dl,%dl
je     8053098 <readtask@plt+0x99e8>
test   %eax,%eax
je     8053080 <readtask@plt+0x99d0>
test   %dl,%dl
je     80530bc <readtask@plt+0x9a0c>
cmp    $0x2c,%edx
je     80530bc <readtask@plt+0x9a0c>
cmp    $0x20,%edx
je     80530bc <readtask@plt+0x9a0c>
cmp    $0x3d,%edx
mov    $0x0,%edx
jne    805301f <readtask@plt+0x996f>
jmp    80530c5 <readtask@plt+0x9a15>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2c,%eax
je     805302a <readtask@plt+0x997a>
cmp    $0x20,%eax
je     805302a <readtask@plt+0x997a>
cmp    $0x3d,%eax
je     805302a <readtask@plt+0x997a>
add    $0x1,%edx
movsbl (%esi,%edx,1),%eax
test   %al,%al
jne    8053010 <readtask@plt+0x9960>
cmp    $0xf,%edx
mov    %edx,%ebx
jg     8053070 <readtask@plt+0x99c0>
lea    0x1c(%esp),%eax
mov    %edx,0x8(%esp)
movl   $0x10,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049530 <__strncpy_chk@plt>
lea    0x1c(%esp),%eax
movb   $0x0,0x1c(%esp,%ebx,1)
mov    %eax,(%esp)
call   804f200 <readtask@plt+0x5b50>
test   %eax,%eax
je     8053070 <readtask@plt+0x99c0>
mov    0x18(%eax),%eax
test   %eax,%eax
je     8053080 <readtask@plt+0x99d0>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    8052fb4 <readtask@plt+0x9904>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x1,%esi
movsbl (%esi),%edx
test   %dl,%dl
jne    8052f9b <readtask@plt+0x98eb>
xor    %eax,%eax
jmp    8052fb4 <readtask@plt+0x9904>
nop
test   %eax,%eax
jne    8053070 <readtask@plt+0x99c0>
mov    $0x1,%al
xchg   %ax,%ax
jmp    8053082 <readtask@plt+0x99d2>
lea    0x0(%esi),%esi
movl   $0x1,0x805ed18
00
mov    $0x1,%eax
jmp    8052fb4 <readtask@plt+0x9904>
xor    %edx,%edx
xor    %ebx,%ebx
jmp    8053031 <readtask@plt+0x9981>
xor    %ebx,%ebx
jmp    8053031 <readtask@plt+0x9981>
lea    0x0(%esi,%eiz,1),%esi
call   8049290 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
movl   $0x0,0x805ed20
00
movl   $0x0,0x805e1e4
00
movl   $0x0,0x805e1a0
00
movl   $0x0,0x805ed18
00
movl   $0x0,0x805ed14
00
movl   $0x0,0x805ed10
00
ret
lea    0x0(%esi),%esi
push   %esi
mov    $0x1,%eax
push   %ebx
sub    $0x34,%esp
mov    0x805e1bc,%edx
test   $0x1,%dl
cmove  0x40(%esp),%eax
and    $0x20,%edx
mov    $0x0,%edx
cmovne %edx,%eax
mov    %eax,0x805ed1c
mov    0x805ed20,%eax
test   %eax,%eax
je     8053164 <readtask@plt+0x9ab4>
call   8052b50 <readtask@plt+0x94a0>
test   %eax,%eax
mov    %eax,%ebx
je     8053164 <readtask@plt+0x9ab4>
add    $0x34,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
mov    0x805e1e4,%eax
test   %eax,%eax
je     80531a1 <readtask@plt+0x9af1>
movl   $0x5,0x8(%esp)
movl   $0x8059cf0,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x2fd,0x4(%esp)
movl   $0x8059a72,(%esp)
mov    %eax,0x8(%esp)
call   804b240 <readtask@plt+0x1b90>
mov    0x805ed20,%ebx
mov    0x805e1e4,%edx
mov    0x805e1a0,%ecx
test   %ebx,%ebx
mov    %ebx,%esi
je     805322a <readtask@plt+0x9b7a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    %edx,%ecx
movl   $0x0,0x4(%esi)
test   %eax,%eax
jne    80531dc <readtask@plt+0x9b2c>
jmp    80531e6 <readtask@plt+0x9b36>
lea    0x0(%esi),%esi
mov    %eax,%ecx
mov    %edx,%eax
mov    (%eax),%edx
mov    %ecx,(%eax)
test   %edx,%edx
jne    80531d8 <readtask@plt+0x9b28>
mov    %eax,%edx
mov    (%esi),%esi
test   %esi,%esi
jne    80531c0 <readtask@plt+0x9b10>
mov    0x805e1a0,%ecx
mov    %edx,0x805e1e4
mov    %ecx,%edx
lea    0x0(%esi),%esi
mov    0x8(%ebx),%eax
movl   $0x0,0x8(%ebx)
test   %eax,%eax
jne    8053212 <readtask@plt+0x9b62>
jmp    805321e <readtask@plt+0x9b6e>
mov    %edx,%eax
mov    (%eax),%edx
mov    %ecx,(%eax)
mov    %eax,%ecx
test   %edx,%edx
jne    8053210 <readtask@plt+0x9b60>
mov    %eax,%edx
mov    (%ebx),%ebx
test   %ebx,%ebx
jne    8053200 <readtask@plt+0x9b50>
mov    %edx,0x805e1a0
test   %ecx,%ecx
je     805323b <readtask@plt+0x9b8b>
testb  $0x10,0x805e18d
jne    8053390 <readtask@plt+0x9ce0>
mov    0x805e1e8,%edx
test   %edx,%edx
jne    8053304 <readtask@plt+0x9c54>
mov    0x805e1e0,%eax
test   %eax,%eax
je     805333d <readtask@plt+0x9c8d>
mov    0x805e1e4,%eax
xor    %edx,%edx
test   %eax,%eax
je     80534fc <readtask@plt+0x9e4c>
mov    0x805e1e0,%ebx
test   %ebx,%ebx
jne    80534ba <readtask@plt+0x9e0a>
testb  $0x40,0x805e18d
je     80534b3 <readtask@plt+0x9e03>
movl   $0x5,0x8(%esp)
movl   $0x8059de8,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
add    $0x34,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
mov    %eax,0x28(%esp)
lea    0x1c(%esp),%eax
movl   $0x0,0x20(%esp)
call   8052600 <readtask@plt+0x8f50>
test   %eax,%eax
mov    %eax,%ebx
je     8053c59 <readtask@plt+0xa5a9>
movl   $0x5,0x8(%esp)
movl   $0x8059d8c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8049600 <__fprintf_chk@plt>
mov    0x805e1e8,%edx
mov    0x805e1e4,%esi
test   %esi,%esi
je     80533b3 <readtask@plt+0x9d03>
test   %edx,%edx
je     8053265 <readtask@plt+0x9bb5>
movl   $0x5,0x8(%esp)
movl   $0x8059b4b,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
mov    0x805e1e4,%eax
test   %eax,%eax
jne    8053273 <readtask@plt+0x9bc3>
movl   $0x8059b41,(%esp)
call   80493b0 <getenv@plt>
test   %eax,%eax
je     80532fe <readtask@plt+0x9c4e>
cmpb   $0x0,(%eax)
je     80532fe <readtask@plt+0x9c4e>
testb  $0x40,0x805e18d
je     80532a6 <readtask@plt+0x9bf6>
movl   $0x5,0x8(%esp)
movl   $0x8059d40,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
nop
movl   $0x5,0x8(%esp)
movl   $0x8059d10,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
cmp    $0x8,%edx
je     8053ae0 <readtask@plt+0xa430>
lea    0x0(%esi,%eiz,1),%esi
jbe    80534dd <readtask@plt+0x9e2d>
cmp    $0x80,%edx
je     8053a1e <readtask@plt+0xa36e>
ja     80539f8 <readtask@plt+0xa348>
cmp    $0x20,%edx
je     8053b3c <readtask@plt+0xa48c>
cmp    $0x40,%edx
je     8053b32 <readtask@plt+0xa482>
cmp    $0x10,%edx
jne    805331a <readtask@plt+0x9c6a>
mov    0x805e210,%eax
test   %eax,%eax
je     80534fc <readtask@plt+0x9e4c>
xor    %edx,%edx
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%ecx
test   %eax,%eax
jne    805341c <readtask@plt+0x9d6c>
jmp    8053429 <readtask@plt+0x9d79>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
mov    %edx,%eax
mov    (%eax),%edx
mov    %ecx,(%eax)
test   %edx,%edx
jne    8053418 <readtask@plt+0x9d68>
mov    %eax,0x805e1e4
mov    0x805e1e0,%eax
test   $0x2,%al
jne    80538c9 <readtask@plt+0xa219>
test   $0x4,%al
jne    805388f <readtask@plt+0xa1df>
test   $0x1,%al
jne    80537c0 <readtask@plt+0xa110>
mov    0x805e18c,%eax
test   $0x8,%al
jne    8053964 <readtask@plt+0xa2b4>
test   $0x10,%al
jne    8053915 <readtask@plt+0xa265>
testb  $0x20,0x805e1e0
jne    80539b8 <readtask@plt+0xa308>
mov    0x805e1bc,%eax
test   $0x1,%ah
je     805347f <readtask@plt+0x9dcf>
testb  $0x4,0x805e1e8
jne    8053b08 <readtask@plt+0xa458>
test   $0x2,%ah
je     80534b3 <readtask@plt+0x9e03>
testb  $0x1,0x805e1e8
je     80534b3 <readtask@plt+0x9e03>
xor    %edx,%edx
mov    $0x8055a3d,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    $0x8055a38,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
je     80534b3 <readtask@plt+0x9e03>
mov    $0x8055a38,%eax
call   8052490 <readtask@plt+0x8de0>
xor    %ebx,%ebx
jmp    805315c <readtask@plt+0x9aac>
movl   $0x5,0x8(%esp)
movl   $0x8059db0,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
cmp    $0x3,%edx
je     8053aea <readtask@plt+0xa43a>
ja     80539d6 <readtask@plt+0xa326>
cmp    $0x1,%edx
nop
je     8053afe <readtask@plt+0xa44e>
ja     8053af4 <readtask@plt+0xa444>
testb  $0x4,0x805e1e0
je     805350e <readtask@plt+0x9e5e>
test   $0x4,%dl
je     8053db1 <readtask@plt+0xa701>
mov    0x805e1b8,%ecx
test   %ecx,%ecx
je     8053d72 <readtask@plt+0xa6c2>
test   %edx,%edx
mov    $0x0,%edx
je     8053d56 <readtask@plt+0xa6a6>
mov    $0x8055729,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
xor    %edx,%edx
mov    $0x8055952,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
testb  $0x4,0x805e1e8
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jne    805357b <readtask@plt+0x9ecb>
xor    %edx,%edx
mov    $0x805602c,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
xor    %edx,%edx
mov    $0x8055b4d,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
testb  $0x1,0x805e1e8
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jne    8053d38 <readtask@plt+0xa688>
mov    0x805e1e0,%eax
test   $0x80,%al
je     8053ace <readtask@plt+0xa41e>
test   $0x10,%al
jne    80535cb <readtask@plt+0x9f1b>
xor    %edx,%edx
mov    $0x8055d59,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
testb  $0x4,0x805e1e8
je     8053ab5 <readtask@plt+0xa405>
testb  $0x4,0x805e1e0
je     8053ab5 <readtask@plt+0xa405>
xor    %edx,%edx
mov    $0x8055c1a,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
testb  $0x4,0x805e1e8
mov    %edx,(%eax)
mov    %eax,0x805e1e4
je     8053aab <readtask@plt+0xa3fb>
mov    0x805e1e0,%edx
mov    %edx,%eax
and    $0x4,%edx
jne    8053625 <readtask@plt+0x9f75>
testb  $0x8,0x805e1bc
jne    8053a3c <readtask@plt+0xa38c>
test   $0x80,%al
jne    8053632 <readtask@plt+0x9f82>
testb  $0x4,0x805e1e8
je     8053691 <readtask@plt+0x9fe1>
xor    %edx,%edx
mov    $0x8055c7b,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
testb  $0x4,0x805e1e8
mov    %edx,(%eax)
mov    %eax,0x805e1e4
je     805368c <readtask@plt+0x9fdc>
xor    %edx,%edx
mov    $0x8055dd4,%eax
testb  $0x4,0x805e1e0
jne    805367a <readtask@plt+0x9fca>
testl  $0x108,0x805e1bc
00
mov    $0x8055dca,%eax
jne    805367a <readtask@plt+0x9fca>
mov    $0x8055908,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
mov    0x805e1e0,%eax
test   $0x1,%al
jne    8053d16 <readtask@plt+0xa666>
mov    0x805e1e8,%eax
test   $0x4,%al
jne    8053ccc <readtask@plt+0xa61c>
testb  $0x10,0x805e18c
je     80536d1 <readtask@plt+0xa021>
test   $0x1,%al
je     80536d1 <readtask@plt+0xa021>
xor    %edx,%edx
mov    $0x8055c43,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
mov    0x805e1e8,%eax
test   $0x5,%al
mov    0x805e1e0,%eax
je     80536fc <readtask@plt+0xa04c>
test   $0x1,%al
jne    80536fc <readtask@plt+0xa04c>
xor    %edx,%edx
mov    $0x80554ec,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
mov    0x805e1e0,%eax
test   $0x10,%al
jne    8053e60 <readtask@plt+0xa7b0>
testb  $0x10,0x805e18c
jne    8053e42 <readtask@plt+0xa792>
testb  $0x2,0x805e1e0
jne    8053e0b <readtask@plt+0xa75b>
testb  $0x5,0x805e1e8
jne    8053ded <readtask@plt+0xa73d>
testb  $0x8,0x805e18c
jne    8053ea4 <readtask@plt+0xa7f4>
xor    %edx,%edx
mov    $0x805440c,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
mov    0x805e1e8,%eax
test   $0x1,%al
je     8053e7e <readtask@plt+0xa7ce>
xor    %edx,%edx
testb  $0x2,0x805e1bd
je     8053ec2 <readtask@plt+0xa812>
mov    $0x8055a3d,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
testb  $0x4,0x805e1e8
jne    8053c88 <readtask@plt+0xa5d8>
mov    0x805e1e0,%eax
xor    %ebx,%ebx
test   $0x20,%al
je     805315c <readtask@plt+0x9aac>
xor    %edx,%edx
mov    $0x8055b17,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    805315c <readtask@plt+0x9aac>
xchg   %ax,%ax
mov    $0x8055684,%eax
call   8052490 <readtask@plt+0x8de0>
mov    $0x8055685,%eax
call   8052490 <readtask@plt+0x8de0>
mov    $0x8055f7a,%eax
call   8052490 <readtask@plt+0x8de0>
mov    $0x8055af7,%eax
call   8052490 <readtask@plt+0x8de0>
mov    $0x80556a9,%eax
call   8052490 <readtask@plt+0x8de0>
xor    %edx,%edx
mov    $0x8055976,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    $0x8055adf,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    8053842 <readtask@plt+0xa192>
movl   $0x5,0x8(%esp)
movl   $0x8059e74,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x38e,0x4(%esp)
movl   $0x8059a72,(%esp)
mov    %eax,0x8(%esp)
call   804b240 <readtask@plt+0x1b90>
mov    $0x8055adf,%eax
call   8052490 <readtask@plt+0x8de0>
xor    %edx,%edx
mov    $0x8055c76,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    $0x8059b7b,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    8053446 <readtask@plt+0x9d96>
movl   $0x5,0x8(%esp)
movl   $0x8059b73,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
mov    $0x8055a48,%eax
call   8052490 <readtask@plt+0x8de0>
xor    %edx,%edx
mov    $0x8055dd4,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    $0x8055ca3,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
je     80538bf <readtask@plt+0xa20f>
mov    $0x8055ca3,%eax
call   8052490 <readtask@plt+0x8de0>
mov    0x805e1e0,%eax
jmp    805343e <readtask@plt+0x9d8e>
xor    %edx,%edx
mov    $0x8055648,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    %eax,%ebx
mov    $0x8055689,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
je     8053b7d <readtask@plt+0xa4cd>
xor    %edx,%edx
mov    $0x8055f4b,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    $0x8059b6e,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
je     8053b5a <readtask@plt+0xa4aa>
mov    0x805e1e0,%eax
jmp    8053436 <readtask@plt+0x9d86>
xor    %edx,%edx
mov    $0x8055c44,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    %eax,%ebx
mov    $0x8055f50,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    8053947 <readtask@plt+0xa297>
mov    %ebx,%edx
mov    $0x8055f3c,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
je     8053bca <readtask@plt+0xa51a>
xor    %edx,%edx
mov    $0x8055c43,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    $0x8055684,%eax
call   8052410 <readtask@plt+0x8d60>
jmp    805345b <readtask@plt+0x9dab>
xor    %edx,%edx
mov    $0x8055e30,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    $0x805568a,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
mov    0x805e18c,%eax
jne    8053453 <readtask@plt+0x9da3>
test   $0x40,%ah
je     8053453 <readtask@plt+0x9da3>
movl   $0x5,0x8(%esp)
movl   $0x8059e9c,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x8055b17,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053468 <readtask@plt+0x9db8>
cmp    $0x5,%edx
je     8053b50 <readtask@plt+0xa4a0>
jb     8053b46 <readtask@plt+0xa496>
cmp    $0x6,%edx
mov    $0x805585e,%eax
je     8053400 <readtask@plt+0x9d50>
jmp    805331a <readtask@plt+0x9c6a>
cmp    $0x200,%edx
je     8053a32 <readtask@plt+0xa382>
cmp    $0x400,%edx
je     8053a28 <readtask@plt+0xa378>
cmp    $0x100,%edx
jne    805331a <readtask@plt+0x9c6a>
mov    $0x805582d,%eax
jmp    8053400 <readtask@plt+0x9d50>
mov    0x805e204,%eax
jmp    80533f8 <readtask@plt+0x9d48>
mov    $0x80557d9,%eax
jmp    8053400 <readtask@plt+0x9d50>
mov    $0x8055832,%eax
jmp    8053400 <readtask@plt+0x9d50>
xor    %edx,%edx
mov    $0x8055dd0,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%esi
mov    0x805e1e4,%eax
mov    %eax,(%esi)
movl   $0x20,(%esp)
mov    %esi,0x805e1e4
call   80493c0 <malloc@plt>
movl   $0x1,0xc(%eax)
mov    %eax,%ebx
movl   $0x2,(%esp)
call   80493c0 <malloc@plt>
test   %eax,%eax
je     8053a84 <readtask@plt+0xa3d4>
mov    $0x3a,%edx
mov    %dx,(%eax)
mov    %eax,0x4(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x3,0x14(%ebx)
movl   $0x40000000,0x18(%ebx)
mov    %esi,(%ebx)
mov    %ebx,0x805e1e4
mov    0x805e1e0,%eax
jmp    8053625 <readtask@plt+0x9f75>
xor    %edx,%edx
mov    $0x8055dd4,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
testb  $0x4,0x805e1e8
je     8053aab <readtask@plt+0xa3fb>
jmp    80535e5 <readtask@plt+0x9f35>
lea    0x0(%esi,%eiz,1),%esi
mov    0x805e214,%eax
jmp    80533f8 <readtask@plt+0x9d48>
mov    $0x8055858,%eax
jmp    8053400 <readtask@plt+0x9d50>
mov    0x805e194,%eax
jmp    80533f8 <readtask@plt+0x9d48>
mov    0x805e19c,%eax
jmp    80533f8 <readtask@plt+0x9d48>
xor    %edx,%edx
mov    $0x8055dca,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    %eax,%edx
mov    $0x8055ca3,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    8053c4a <readtask@plt+0xa59a>
mov    0x805e1bc,%eax
jmp    805347f <readtask@plt+0x9dcf>
mov    0x805e208,%eax
jmp    80533f8 <readtask@plt+0x9d48>
mov    0x805e20c,%eax
jmp    80533f8 <readtask@plt+0x9d48>
mov    0x805e190,%eax
jmp    80533f8 <readtask@plt+0x9d48>
mov    0x805e198,%eax
jmp    80533f8 <readtask@plt+0x9d48>
movl   $0x5,0x8(%esp)
movl   $0x8059b66,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
mov    %ebx,%edx
mov    $0x805568a,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    80538eb <readtask@plt+0xa23b>
movl   $0x5,0x8(%esp)
movl   $0x8059e44,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x37f,0x4(%esp)
movl   $0x8059a72,(%esp)
mov    %eax,0x8(%esp)
call   804b240 <readtask@plt+0x1b90>
jmp    80538eb <readtask@plt+0xa23b>
mov    %ebx,%edx
mov    $0x8059b6e,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    8053947 <readtask@plt+0xa297>
mov    %ebx,%edx
mov    $0x8055e97,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    8053947 <readtask@plt+0xa297>
mov    %ebx,%edx
mov    $0x8055689,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    8053947 <readtask@plt+0xa297>
mov    %ebx,%edx
mov    $0x805568a,%eax
call   8052410 <readtask@plt+0x8d60>
test   %eax,%eax
jne    8053947 <readtask@plt+0xa297>
testb  $0x40,0x805e18d
je     8053947 <readtask@plt+0xa297>
movl   $0x5,0x8(%esp)
movl   $0x8059ecc,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
mov    $0x8055ca3,%eax
call   8052490 <readtask@plt+0x8de0>
jmp    8053b28 <readtask@plt+0xa478>
mov    0x20(%esp),%eax
test   %eax,%eax
je     80534b3 <readtask@plt+0x9e03>
mov    0x805e1e4,%edx
jmp    8053c74 <readtask@plt+0xa5c4>
lea    0x0(%esi),%esi
mov    %eax,%edx
mov    %ecx,%eax
mov    (%eax),%ecx
mov    %edx,(%eax)
test   %ecx,%ecx
jne    8053c70 <readtask@plt+0xa5c0>
mov    %eax,0x805e1e4
xor    %ebx,%ebx
jmp    805315c <readtask@plt+0x9aac>
xor    %edx,%edx
mov    $0x8059361,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
mov    0x805e1e0,%eax
test   $0x4,%al
jne    8053796 <readtask@plt+0xa0e6>
xor    %edx,%edx
mov    $0x80557a6,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053791 <readtask@plt+0xa0e1>
xor    %edx,%edx
mov    $0x8055c33,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
xor    %edx,%edx
testb  $0x8,0x805e1bc
mov    %eax,0x805e1e4
mov    $0x8055679,%eax
jne    8053cfa <readtask@plt+0xa64a>
mov    $0x8055c75,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
mov    0x805e1e8,%eax
jmp    80536a6 <readtask@plt+0x9ff6>
xor    %edx,%edx
mov    $0x8055c76,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
xor    %edx,%edx
mov    %eax,0x805e1e4
mov    $0x8055976,%eax
jmp    8053cfa <readtask@plt+0xa64a>
xor    %edx,%edx
mov    $0x805564e,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    80535a1 <readtask@plt+0x9ef1>
mov    $0x8055828,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053540 <readtask@plt+0x9e90>
and    $0x1,%edx
mov    $0x0,%edx
je     8053dd4 <readtask@plt+0xa724>
mov    $0x8055729,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
xor    %edx,%edx
mov    $0x80543eb,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    805357b <readtask@plt+0x9ecb>
movl   $0x5,0x8(%esp)
movl   $0x8059e14,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
mov    %eax,%ebx
jmp    805315c <readtask@plt+0x9aac>
mov    $0x8055f7d,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053d93 <readtask@plt+0xa6e3>
xor    %edx,%edx
mov    $0x805440b,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    805372b <readtask@plt+0xa07b>
xor    %edx,%edx
mov    $0x8055f4b,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
xor    %edx,%edx
mov    %eax,0x805e1e4
mov    $0x8055648,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    805371e <readtask@plt+0xa06e>
xor    %edx,%edx
mov    $0x8055c44,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053711 <readtask@plt+0xa061>
xor    %edx,%edx
mov    $0x8055d59,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053704 <readtask@plt+0xa054>
test   $0x4,%al
je     8053791 <readtask@plt+0xa0e1>
xor    %edx,%edx
mov    $0x8055a33,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053784 <readtask@plt+0xa0d4>
xor    %edx,%edx
mov    $0x8055e30,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053738 <readtask@plt+0xa088>
mov    $0x8055f88,%eax
call   8052280 <readtask@plt+0x8bd0>
mov    0x805e1e4,%edx
mov    %edx,(%eax)
mov    %eax,0x805e1e4
jmp    8053784 <readtask@plt+0xa0d4>
xchg   %ax,%ax
movl   $0x1,0x805ed24
00
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x64(%esp),%esi
lea    0x3c(%esp),%ebx
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x60(%esp),%edi
movl   $0x805a021,0x2c(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
call   8049380 <getpid@plt>
movl   $0x8055551,0x10(%esp)
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x14(%esp)
call   8049140 <__snprintf_chk@plt>
mov    %esi,0x30(%esp)
mov    %ebx,0x34(%esp)
call   8049590 <fork@plt>
test   %eax,%eax
jne    8053fb0 <readtask@plt+0xa900>
test   %edi,%edi
je     8053fb7 <readtask@plt+0xa907>
cmp    $0x1,%edi
jne    8054008 <readtask@plt+0xa958>
mov    0x805e240,%eax
movl   $0xc,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805a031,(%esp)
mov    %eax,0xc(%esp)
call   8049340 <fwrite@plt>
lea    0x2c(%esp),%eax
call   80496c0 <readtask@plt+0x10>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     8054014 <readtask@plt+0xa964>
jmp    8053fb5 <readtask@plt+0xa905>
mov    0x805e240,%eax
movl   $0xb,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805a025,(%esp)
mov    %eax,0xc(%esp)
call   8049340 <fwrite@plt>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80492f0 <execvp@plt>
movl   $0x8059fec,(%esp)
call   8049330 <perror@plt>
movl   $0x0,(%esp)
call   80491b0 <_exit@plt>
movl   $0x0,(%esp)
call   80491b0 <_exit@plt>
movl   $0x8059ff8,(%esp)
call   8049330 <perror@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    8054034 <readtask@plt+0xa984>
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049290 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049370 <__fpending@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049200 <ferror@plt>
mov    %esi,(%esp)
mov    %eax,%ebx
call   8049220 <fclose@plt>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    8054088 <readtask@plt+0xa9d8>
test   %edx,%edx
je     805407e <readtask@plt+0xa9ce>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     80540b0 <readtask@plt+0xaa00>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
test   %edx,%edx
jne    80540c8 <readtask@plt+0xaa18>
call   8049500 <__errno_location@plt>
mov    $0xffffffff,%ebx
cmpl   $0x20,(%eax)
je     805407e <readtask@plt+0xa9ce>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049500 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
or     $0xffffffff,%ebx
jmp    805407e <readtask@plt+0xa9ce>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x805e280,%eax
mov    %eax,(%esp)
call   8054040 <readtask@plt+0xa990>
test   %eax,%eax
je     80540f1 <readtask@plt+0xaa41>
call   8049500 <__errno_location@plt>
cmpl   $0x20,(%eax)
mov    %eax,%ebx
jne    8054113 <readtask@plt+0xaa63>
mov    0x805e240,%eax
mov    %eax,(%esp)
call   8054040 <readtask@plt+0xa990>
test   %eax,%eax
jne    8054107 <readtask@plt+0xaa57>
add    $0x18,%esp
pop    %ebx
ret
movl   $0x1,(%esp)
call   80491b0 <_exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x805a05a,0x4(%esp)
movl   $0x0,(%esp)
call   8049280 <dcgettext@plt>
movl   $0x8059360,0x8(%esp)
mov    %eax,0xc(%esp)
mov    (%ebx),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80493a0 <error@plt>
movl   $0x1,(%esp)
call   80491b0 <_exit@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    80541b0 <readtask@plt+0xab00>
cmp    %ebp,%ecx
ja     80541e8 <readtask@plt+0xab38>
test   %ecx,%ecx
mov    %ecx,%esi
jne    8054198 <readtask@plt+0xaae8>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     80541d8 <readtask@plt+0xab28>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    80541f8 <readtask@plt+0xab48>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    8054268 <readtask@plt+0xabb8>
cmp    %edx,%eax
jb     8054268 <readtask@plt+0xabb8>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     8054278 <readtask@plt+0xabc8>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    8054259 <readtask@plt+0xaba9>
cmp    (%esp),%esi
je     8054278 <readtask@plt+0xabc8>
mov    %edi,%eax
xor    %edx,%edx
jmp    80541dc <readtask@plt+0xab2c>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    80541dc <readtask@plt+0xab2c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804a290 <readtask@plt+0xbe0>
add    $0x9d65,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xfc(%ebx),%esi
call   80490e4 <dev_to_tty@plt-0x3c>
lea    -0x100(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     80542e9 <readtask@plt+0xac39>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x100(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    80542c8 <readtask@plt+0xac18>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8054300 <readtask@plt+0xac50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804a290 <readtask@plt+0xbe0>
add    $0x9cea,%ebx
sub    $0x18,%esp
lea    0x17c(%ebx),%eax
test   %eax,%eax
je     8054348 <readtask@plt+0xac98>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049390 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    805432b <readtask@plt+0xac7b>
push   %ebx
sub    $0x8,%esp
call   804a290 <readtask@plt+0xbe0>
add    $0x9cab,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %ebx
imul   $0x25206c61,0x6e(%edi),%esp
and    %ch,%fs:(%eax)
and    $0x63202973,%eax
popa
jne    80543e2 <_IO_stdin_used+0x7e>
push   $0x79622074
and    %ah,0x25282073
jae    80543b1 <_IO_stdin_used+0x4d>
or     %cs:(%eax),%al
jo     80543f9 <_IO_stdin_used+0x95>
gs
popa
jae    80543f6 <_IO_stdin_used+0x92>
and    %dh,0x65(%edx)
jo     8054405 <_IO_stdin_used+0xa1>
jb     805440c <_IO_stdin_used+0xa8>
and    %dh,0x69(%eax,%ebp,2)
jae    80543be <_IO_stdin_used+0x5a>
bound  %esi,0x67(%ebp)
add    %ah,0x73(%ecx,%ebp,2)
jo     8054413 <_IO_stdin_used+0xaf>
popa
jns    80543d8 <_IO_stdin_used+0x74>
arpl   %ax,(%eax)
das
jne    8054422 <_IO_stdin_used+0xbe>
jb     80543e0 <_IO_stdin_used+0x7c>
jae    805441b <_IO_stdin_used+0xb7>
popa
jb     805441b <_IO_stdin_used+0xb7>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %si,0x73(%eax)
sub    $0x6500676e,%eax
jb     805443d <_IO_stdin_used+0xd9>
outsl  %ds:(%esi),(%dx)
jb     8054408 <_IO_stdin_used+0xa4>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     80543f7 <_IO_stdin_used+0x93>
popa
arpl   %sp,0x65(%ebx)
jae    8054450 <_IO_stdin_used+0xec>
and    %ch,(%edi)
jo     8054453 <_IO_stdin_used+0xef>
outsl  %ds:(%esi),(%dx)
arpl   %cx,(%edx)
add    %dh,0x74(%ebx)
popa
jb     805445e <_IO_stdin_used+0xfa>
pop    %edi
je     8054456 <_IO_stdin_used+0xf2>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%ebx)
jne    8054460 <_IO_stdin_used+0xfc>
and    %ch,%fs:0x6f(%esi)
je     805441a <_IO_stdin_used+0xb6>
imul   $0x7320,0x64(%esi),%bp
je     8054463 <_IO_stdin_used+0xff>
jb     8054478 <_IO_stdin_used+0x114>
pop    %edi
je     8054470 <_IO_stdin_used+0x10c>
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%al
jo     805447d <_IO_stdin_used+0x119>
imul   $0x646c756f,0x63(%eax,%eax,1),%esp
and    %ch,0x6f(%esi)
je     805443a <_IO_stdin_used+0xd6>
imul   $0x7020,0x64(%esi),%bp
jo     805448b <_IO_stdin_used+0x127>
or     %fs:(%eax),%al
jne    8054495 <_IO_stdin_used+0x131>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ch,0x6c(%edi)
add    %cl,%fs:0x4c(%edi)
pop    %edi
push   $0x0
dec    %edi
dec    %esp
pop    %edi
insb   (%dx),%es:(%edi)
add    %cl,0x4c(%edi)
pop    %edi
jae    8054440 <_IO_stdin_used+0xdc>
dec    %edi
dec    %esp
pop    %edi
jne    8054445 <_IO_stdin_used+0xe1>
dec    %edi
dec    %esp
pop    %edi
jbe    805444a <_IO_stdin_used+0xe6>
push   %eax
push   %ebx
pop    %edi
push   %eax
inc    %ebp
push   %edx
push   %ebx
dec    %edi
dec    %esi
inc    %ecx
dec    %esp
dec    %ecx
push   %esp
pop    %ecx
add    %al,0x4d(%ebx)
inc    %esp
pop    %edi
inc    %ebp
dec    %esi
push   %esi
add    %cl,0x5f(%ecx)
push   %edi
inc    %ecx
dec    %esi
push   %esp
pop    %edi
inc    %ecx
pop    %edi
inc    %edx
push   %edx
dec    %edi
dec    %ebx
inc    %ebp
dec    %esi
pop    %edi
push   %eax
push   %ebx
add    %al,0x42(%esi)
pop    %edi
push   $0x0
inc    %esi
inc    %edx
pop    %edi
insb   (%dx),%es:(%edi)
add    %al,0x42(%esi)
pop    %edi
jne    8054483 <_IO_stdin_used+0x11f>
inc    %esi
inc    %edx
pop    %edi
jbe    8054488 <_IO_stdin_used+0x124>
push   %edx
inc    %esp
pop    %edi
data16
add    %dl,0x44(%edx)
pop    %edi
push   $0x0
push   %edx
inc    %esp
pop    %edi
insb   (%dx),%es:(%edi)
add    %dl,0x4e(%ebp)
dec    %ecx
pop    %eax
cmp    %esi,0x534f5000
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
add    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
xor    (%eax),%al
inc    %esi
xor    $0x544d46,%eax
inc    %esi
dec    %esp
xor    $0x544d46,%eax
dec    %edx
inc    %esi
dec    %ebp
push   %esp
add    %cl,0x4d(%esi,%eax,2)
push   %esp
add    %dl,0x46(%ebx)
dec    %ebp
push   %esp
add    %dl,0x46(%ebp)
dec    %ebp
push   %esp
add    %dl,0x46(%esi)
dec    %ebp
push   %esp
add    %bl,0x58(%edi)
push   %eax
inc    %edi
add    %cl,0x33(%edx)
cmp    %esi,(%eax)
add    %ch,(%edi)
fs
gs
jbe    8054519 <_IO_stdin_used+0x1b5>
je     8054560 <_IO_stdin_used+0x1fc>
jns    80544ee <_IO_stdin_used+0x18a>
inc    %ebx
dec    %edi
dec    %esp
push   %ebp
dec    %ebp
dec    %esi
push   %ebx
add    %cl,0x4e(%ecx,%ecx,2)
inc    %ebp
push   %ebx
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8054501 <_IO_stdin_used+0x19d>
sub    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    %eax,%gs:(%eax)
cmp    $0x6e,%al
outsl  %ds:(%esi),(%dx)
and    %dl,0x79(%ebx)
jae    8054584 <_IO_stdin_used+0x220>
gs
insl   (%dx),%es:(%edi)
cs
insl   (%dx),%es:(%edi)
popa
jo     8054537 <_IO_stdin_used+0x1d3>
imul   $0x4c00,0x3e(%ebp,%eiz,2),%bp
imul   $0x65762078,0x75(%esi),%ebp
jb     805459a <_IO_stdin_used+0x236>
imul   $0x2e642520,0x6e(%edi),%ebp
and    $0x64252e64,%eax
or     (%eax),%al
popa
jb     805459b <_IO_stdin_used+0x237>
push   $0x73666564
cmp    0x6e000a73,%ah
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
imul   $0x6c69665f,0x74(%ebx),%esi
gs
cmp    $0x22732522,%eax
or     (%eax),%al
popa
imul   $0x647362,0x0(%eax),%edi
arpl   %bp,0x6d(%edi)
jo     80545c4 <_IO_stdin_used+0x260>
jno    8054565 <_IO_stdin_used+0x201>
fs bound %ebp,%fs:%gs:0x61(%ecx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x66(%ebp,%eiz,2)
popa
jne    80545de <_IO_stdin_used+0x27a>
je     8054574 <_IO_stdin_used+0x210>
imul   $0x6c6174,%fs:0x69(%edi),%esp
outsb  %ds:(%si),(%dx)
jne    8054580 <_IO_stdin_used+0x21c>
push   $0x70680070
jne    80545ff <_IO_stdin_used+0x29b>
add    %ch,0x72(%ecx)
imul   $0x756e696c,0x0(%eax),%edi
js     8054593 <_IO_stdin_used+0x22f>
outsl  %ds:(%esi),(%dx)
jae    80545c9 <_IO_stdin_used+0x265>
cmp    %esi,(%eax)
add    %dh,0x6f(%eax)
jae    8054606 <_IO_stdin_used+0x2a2>
js     805459f <_IO_stdin_used+0x23b>
jae    8054604 <_IO_stdin_used+0x2a0>
outsl  %ds:(%esi),(%dx)
add    %dh,0x67(%ebx)
imul   $0x616c6f73,(%eax),%eax
jb     8054616 <_IO_stdin_used+0x2b2>
jae    80545e1 <_IO_stdin_used+0x27d>
add    %dh,0x75(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    80545ea <_IO_stdin_used+0x286>
add    %dh,0x76(%ebx)
jb     80545ef <_IO_stdin_used+0x28b>
add    %dh,0x79(%ebx)
jae    8054636 <_IO_stdin_used+0x2d2>
add    %dh,0x75(%edx,%esi,2)
ss
xor    $0x0,%al
jne    8054637 <_IO_stdin_used+0x2d3>
imul   $0x78696e75,0x0(%eax),%edi
cmp    %esi,0x696e7500
js     8054611 <_IO_stdin_used+0x2ad>
cmp    %al,(%eax)
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    80545fe <_IO_stdin_used+0x29a>
outsw  %ds:(%esi),(%dx)
jne    8054650 <_IO_stdin_used+0x2ec>
and    %ah,%fs:0x20(%ecx)
bound  %esi,0x67(%ebp)
and    %eax,(%eax)
add    %ah,0x6e(%ebp)
jbe    8054659 <_IO_stdin_used+0x2f5>
jb     8054661 <_IO_stdin_used+0x2fd>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8054618 <_IO_stdin_used+0x2b4>
jae    805466a <_IO_stdin_used+0x306>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x206e6120,0x64(%ebp),%esp
jne    8054675 <_IO_stdin_used+0x311>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax)
jb     8054684 <_IO_stdin_used+0x320>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
imul   $0x63000000,0x0(%ecx,%edi,2),%esi
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054643 <_IO_stdin_used+0x2df>
jae    8054699 <_IO_stdin_used+0x335>
jb     805468b <_IO_stdin_used+0x327>
jne    8054699 <_IO_stdin_used+0x335>
sub    %ch,(%ecx)
and    %dh,0x65(%eax)
jb     80546a3 <_IO_stdin_used+0x33f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
imul   $0x74786574,0x20(%ecx,%edi,2),%esi
or     (%eax),%al
add    %al,(%eax)
jns    80546b1 <_IO_stdin_used+0x34d>
jne    80546b6 <_IO_stdin_used+0x352>
and    %ah,0x64257864
and    %dh,0x63(%ebx)
jb     80546b4 <_IO_stdin_used+0x350>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%ebx)
jp     80546bb <_IO_stdin_used+0x357>
and    %ch,0x73(%ecx)
and    %ah,0x6f(%edx)
addr16 jne 80546d2 <_IO_stdin_used+0x36e>
and    %ah,%cs:0x78(%ebp)
jo     80546ca <_IO_stdin_used+0x366>
arpl   %si,0x74(%eax,%eiz,1)
jb     80546da <_IO_stdin_used+0x376>
jne    80546cf <_IO_stdin_used+0x36b>
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %al,0x53(%edx)
inc    %esp
and    %ch,0x20(%edx)
and    %ah,(%eax)
and    %ah,0x53420a73
inc    %esp
and    %ch,0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    $0x53420a73,%eax
inc    %esp
and    %dh,0x20(%ebx)
and    %ah,(%eax)
and    %ah,0x53420a73
inc    %esp
and    %dh,0x20(%ebp)
and    %ah,(%eax)
and    %ah,0x53420a73
inc    %esp
and    %dh,0x20(%esi)
and    %ah,(%eax)
and    %ah,0x79530a73
jae    805470a <_IO_stdin_used+0x3a6>
and    %ch,0x25202066
jae    80546c6 <_IO_stdin_used+0x362>
push   %ebx
jns    8054732 <_IO_stdin_used+0x3ce>
push   %esi
and    %ch,0x25206c66
jae    80546d2 <_IO_stdin_used+0x36e>
push   %ebx
jns    805473e <_IO_stdin_used+0x3da>
push   %esi
and    %ch,0x2520206a
jae    80546de <_IO_stdin_used+0x37a>
push   %ebx
jns    805474a <_IO_stdin_used+0x3e6>
push   %esi
and    %ch,0x2520206c
jae    80546ea <_IO_stdin_used+0x386>
or     (%eax),%al
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     8054752 <_IO_stdin_used+0x3ee>
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     8054759 <_IO_stdin_used+0x3f5>
cmp    (%eax),%ah
insb   (%dx),%es:(%di)
imul   $0x2e642520,0x63(%edx),%esp
and    $0x67202c64,%eax
arpl   %sp,0x20(%ebx)
and    $0x64252e64,%eax
or     (%edx),%cl
add    %ch,0x65(%eax)
popa
fs
gs
jb     8054772 <_IO_stdin_used+0x40e>
addr16 popa
jo     8054754 <_IO_stdin_used+0x3f0>
and    $0x696c2064,%eax
outsb  %ds:(%esi),(%dx)
gs
jae    805477f <_IO_stdin_used+0x41b>
je     8054791 <_IO_stdin_used+0x42d>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     805479b <_IO_stdin_used+0x437>
pop    %edi
push   $0x65646165
jb     805476c <_IO_stdin_used+0x408>
and    $0x63730a64,%eax
jb     805479b <_IO_stdin_used+0x437>
outsb  %gs:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6c(%edi)
jae    805477b <_IO_stdin_used+0x417>
and    $0x63732064,%eax
jb     80547aa <_IO_stdin_used+0x446>
outsb  %gs:(%esi),(%dx)
pop    %edi
jb     80547b9 <_IO_stdin_used+0x455>
ja     80547bf <_IO_stdin_used+0x45b>
cmp    $0xa0a6425,%eax
add    %al,(%eax)
add    %dh,0x65(%eax)
jb     80547cb <_IO_stdin_used+0x467>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
imul   $0x30257830,0x3d(%ecx,%edi,2),%esi
cmp    %bh,0x20(%eax)
sub    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edx)
and    $0xa292273,%eax
inc    %ebp
push   %ebp
dec    %ecx
inc    %esp
cmp    $0x54206425,%eax
push   %esp
pop    %ecx
cmp    $0x252c6425,%eax
and    %cl,%fs:0x65(%eax)
jb     80547fd <_IO_stdin_used+0x499>
jp     80547c8 <_IO_stdin_used+0x464>
and    $0x20646c6c,%eax
jo     80547f3 <_IO_stdin_used+0x48f>
addr16
gs
pop    %edi
jae    8054800 <_IO_stdin_used+0x49c>
jp     80547fe <_IO_stdin_used+0x49a>
cmp    $0xa6425,%eax
add    %al,(%eax)
jae    805480b <_IO_stdin_used+0x4a7>
jp     8054809 <_IO_stdin_used+0x4a5>
outsl  %ds:(%esi),(%dx)
data16
sub    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %bx,0x74(%edi)
sub    %edi,0x73206425
imul   $0x6c28666f,0x65(%edx),%edi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    %edi,(%di)
and    $0x69732064,%eax
jp     805482b <_IO_stdin_used+0x4c7>
outsl  %ds:(%esi),(%dx)
data16
sub    %cl,0x4c(%ebx)
dec    %edi
dec    %esi
inc    %edi
sub    %edi,0xa6425
loope  8054826 <_IO_stdin_used+0x4c2>
add    $0x4a9cf08,%eax
or     %dl,0x45(%esi)
add    $0x4aaf008,%eax
or     %bl,0x45(%edx)
add    $0x4aadc08,%eax
or     %bl,0x45(%esi)
add    $0x4a94908,%eax
or     %ah,0x45(%ebp)
add    $0x4a9e008,%eax
or     %ch,0x5(%ebp,%eax,2)
or     %al,0x740804ab
inc    %ebp
add    $0x4a94908,%eax
or     %bh,0x5(%ebp,%eax,2)
or     %ah,%al
test   $0x45800804,%eax
add    $0x4aa4808,%eax
or     %al,0x48080545(%ebx)
stos   %al,%es:(%edi)
add    $0x8,%al
mov    %al,0x5(%ebp)
or     %bl,(%ecx)
stos   %al,%es:(%edi)
add    $0x8,%al
lea    0x5(%ebp),%eax
or     %ah,0x2d0804aa(%esi)
inc    %esp
add    $0x4aac108,%eax
or     %dl,-0x63f7fabb(%ebx)
stos   %al,%es:(%edi)
add    $0x8,%al
cltd
inc    %ebp
add    $0x4aaa108,%eax
or     %dl,-0x5630f7fb(%ebp,%eax,2)
add    $0x8,%al
lahf
inc    %ebp
add    $0x4a9be08,%eax
or     %ah,0x19080545(%ebx)
stos   %al,%es:(%edi)
add    $0x8,%al
cmpsl  %es:(%edi),%ds:(%esi)
inc    %ebp
add    $0x4aabc08,%eax
or     %dh,0x59080545(%eax)
stos   %al,%es:(%edi)
add    $0x8,%al
mov    $0x45,%bh
add    $0x4ab1508,%eax
or     %bh,-0x5641f7fb(%ebp,%eax,2)
add    $0x8,%al
roll   $0x8,0x5(%ebp)
jmp    8054840 <_IO_stdin_used+0x4dc>
add    $0x8,%al
movl   $0x4a93808,0x5(%ebp)
or     %cl,%ah
inc    %ebp
add    $0x4aab708,%eax
or     %dl,%bl
inc    %ebp
add    $0x4aaf508,%eax
or     %ah,0xea080544
test   $0x4,%al
or     %ah,(%eax)
imul   $0x73003638,(%ebx),%esi
imul   $0x6f00656c,0x70(%ebp),%ebp
jne    805493c <_IO_stdin_used+0x5d8>
jo     805493f <_IO_stdin_used+0x5db>
je     80548cc <_IO_stdin_used+0x568>
je     8054936 <_IO_stdin_used+0x5d2>
jb     8054935 <_IO_stdin_used+0x5d1>
popa
fs
jae    80548d4 <_IO_stdin_used+0x570>
insl   (%dx),%es:(%edi)
imul   $0x6c6c6100,0x63(%ebx),%esi
add    %cl,(%edx)
push   %ebp
jae    8054942 <_IO_stdin_used+0x5de>
cmp    %gs:(%bp,%si),%cl
and    %ah,0x6f5b2073
jo     8054961 <_IO_stdin_used+0x5fd>
imul   $0xa5d73,0x6e(%edi),%ebp
or     0x6f(%esi),%al
jb     8054919 <_IO_stdin_used+0x5b5>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8054962 <_IO_stdin_used+0x5fe>
and    %ah,0x74(%ebp,%eiz,2)
popa
imul   $0x20656573,0x20(%ebx,%esi,2),%ebp
jo     805497f <_IO_stdin_used+0x61b>
sub    %dh,(%ecx)
sub    %ebp,(%esi)
or     (%eax),%al
add    %al,(%eax)
or     0x61(%edx),%al
jae    8054982 <_IO_stdin_used+0x61e>
arpl   %sp,(%eax)
outsl  %ds:(%esi),(%dx)
jo     8054992 <_IO_stdin_used+0x62e>
imul   $0x200a3a73,0x6e(%edi),%ebp
sub    $0x2d202c41,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80549ab <_IO_stdin_used+0x647>
jae    8054952 <_IO_stdin_used+0x5ee>
and    %ch,0x20202061
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%edi)
je     80549ce <_IO_stdin_used+0x66a>
and    %dh,0x79(%esp,%esi,2)
sub    $0x20,%al
gs
js     80549d2 <_IO_stdin_used+0x66e>
gs
jo     80549e6 <_IO_stdin_used+0x682>
and    %dh,0x65(%ebx)
jae    80549ea <_IO_stdin_used+0x686>
imul   $0x61656c20,0x6e(%edi),%ebp
fs
gs
jb     80549f5 <_IO_stdin_used+0x691>
or     (%eax),%ah
and    %ah,0x20(%ecx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%edi)
je     8054a09 <_IO_stdin_used+0x6a5>
and    %dh,0x79(%esp,%esi,2)
sub    $0x20,%al
imul   $0x6964756c,0x63(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%bx)
push   $0x75207265
jae    8054a1f <_IO_stdin_used+0x6bb>
jb     8054a2f <_IO_stdin_used+0x6cb>
or     (%eax),%ah
sub    $0x20202064,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x78(%ebp)
arpl   %sp,0x70(%ebp)
je     80549fe <_IO_stdin_used+0x69a>
jae    8054a45 <_IO_stdin_used+0x6e1>
jae    8054a55 <_IO_stdin_used+0x6f1>
imul   $0x61656c20,0x6e(%edi),%ebp
fs
gs
jb     8054a60 <_IO_stdin_used+0x6fc>
or     (%eax),%ah
sub    $0x2d202c4e,%eax
sub    $0x65736564,%eax
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%esi)
addr16 popa
je     8054a6f <_IO_stdin_used+0x70b>
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %dh,0x20(%edx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8054a50 <_IO_stdin_used+0x6ec>
jb     8054aa7 <_IO_stdin_used+0x743>
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6f727020,0x67(%esi),%ebp
arpl   %sp,0x73(%ebp)
jae    8054aa5 <_IO_stdin_used+0x741>
jae    8054a4c <_IO_stdin_used+0x6e8>
and    %ah,(%eax)
push   %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8054ac9 <_IO_stdin_used+0x765>
jae    8054a86 <_IO_stdin_used+0x722>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%eax,%ebp,2)
jae    8054a8e <_IO_stdin_used+0x72a>
je     8054ad5 <_IO_stdin_used+0x771>
jb     8054adf <_IO_stdin_used+0x77b>
imul   $0x20200a6c,0x61(%esi),%ebp
js     8054a9b <_IO_stdin_used+0x737>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     8054b01 <_IO_stdin_used+0x79d>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8054afa <_IO_stdin_used+0x796>
jae    8054ab7 <_IO_stdin_used+0x753>
ja     8054b02 <_IO_stdin_used+0x79e>
je     8054b03 <_IO_stdin_used+0x79f>
outsl  %ds:(%esi),(%dx)
jne    8054b12 <_IO_stdin_used+0x7ae>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8054b16 <_IO_stdin_used+0x7b2>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x79747420,0x67(%esi),%ebp
jae    8054aba <_IO_stdin_used+0x756>
add    %al,(%eax)
add    %al,(%eax)
or     0x65(%ebx),%dl
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ch,0x73(%ecx,%ebp,2)
je     8054b01 <_IO_stdin_used+0x79d>
or     (%eax),%ah
sub    $0x633c2043,%eax
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs and %ah,%ds:%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x61(%esi)
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
sub    $0x2d202c47,%eax
sub    $0x756f7247,%eax
jo     8054b18 <_IO_stdin_used+0x7b4>
cmp    $0x67,%al
imul   $0x72202020,0x20(%esi,%edi,1),%esp
gs
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8054b7b <_IO_stdin_used+0x817>
and    %ch,0x64(%ecx)
and    %ch,0x72(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
sub    $0x2d202c67,%eax
sub    $0x756f7267,%eax
jo     8054b44 <_IO_stdin_used+0x7e0>
cmp    $0x67,%al
jb     8054b97 <_IO_stdin_used+0x833>
jne    8054b9a <_IO_stdin_used+0x836>
and    %ah,%ds:(%eax)
jae    8054b94 <_IO_stdin_used+0x830>
jae    8054ba4 <_IO_stdin_used+0x840>
imul   $0x20726f20,0x6e(%edi),%ebp
gs
data16
data16
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %ah,%gs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8054bb7 <_IO_stdin_used+0x853>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
sub    $0x2d202c70,%eax
sub    $0x20646970,%eax
cmp    $0x70,%al
imul   $0x20202020,0x20(%esi,%edi,1),%esp
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8054b8b <_IO_stdin_used+0x827>
imul   $0x20202020,0x20(%edx,%ecx,1),%esp
sub    $0x6970702d,%eax
and    %bh,%fs:(%eax,%esi,2)
imul   $0x20202020,0x20(%esi,%edi,1),%esp
jae    8054beb <_IO_stdin_used+0x887>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x62(%eax,%eiz,1)
jns    8054bae <_IO_stdin_used+0x84a>
jo     8054bf1 <_IO_stdin_used+0x88d>
jb     8054bf7 <_IO_stdin_used+0x893>
outsb  %ds:(%esi),(%dx)
je     8054bb5 <_IO_stdin_used+0x851>
jo     8054c09 <_IO_stdin_used+0x8a5>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8054bbd <_IO_stdin_used+0x859>
imul   $0x202c732d,0x20(%edx,%ecx,1),%esp
sub    $0x6469732d,%eax
and    %bh,(%ebx,%esi,2)
gs
jae    8054c23 <_IO_stdin_used+0x8bf>
imul   $0x7320203e,0x6e(%edi),%ebp
gs
jae    8054c2d <_IO_stdin_used+0x8c9>
imul   $0xa646920,0x6e(%edi),%ebp
and    %ch,0x74202c74
sub    $0x20,%al
sub    $0x7974742d,%eax
and    %bh,(%esp,%esi,2)
je     8054c4c <_IO_stdin_used+0x8e8>
and    %ah,%ds:(%eax)
and    %dh,0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x2d200a6c,0x61(%esi),%ebp
jne    8054c10 <_IO_stdin_used+0x8ac>
and    %dl,0x2c(%ebp)
and    %ch,0x6573752d
jb     8054c0f <_IO_stdin_used+0x8ab>
cmp    $0x75,%al
imul   $0x66666520,0x20(%esi,%edi,1),%esp
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %dh,%gs:0x73(%ebp)
gs
jb     8054c25 <_IO_stdin_used+0x8c1>
imul   $0x616e2072,0x6f(%eax,%eiz,1),%esp
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
sub    $0x2d202c55,%eax
sub    $0x72657355,%eax
and    %bh,0x203e6469(,%esi,2)
and    %ah,(%eax)
and    %ah,(%eax)
jb     8054c8d <_IO_stdin_used+0x929>
popa
insb   (%dx),%es:(%edi)
and    %dh,0x73(%ebp)
gs
jb     8054c50 <_IO_stdin_used+0x8ec>
imul   $0x616e2072,0x6f(%eax,%eiz,1),%esp
insl   (%dx),%es:(%edi)
or     %gs:(%edx),%cl
and    %ah,(%eax)
jae    8054ca5 <_IO_stdin_used+0x941>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %bh,(%ecx,%eiz,2)
jb     8054cb3 <_IO_stdin_used+0x94f>
jne    8054cbb <_IO_stdin_used+0x957>
outsb  %gs:(%esi),(%dx)
je     8054cc5 <_IO_stdin_used+0x961>
and    %dh,%ds:0x6b(%ecx,%eiz,2)
and    %ah,%gs:0x69(%ebp)
je     8054cc5 <_IO_stdin_used+0x961>
gs
jb     8054c9a <_IO_stdin_used+0x936>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
sub    $0x61706573,%eax
jb     8054cd2 <_IO_stdin_used+0x96e>
je     8054cd8 <_IO_stdin_used+0x974>
and    %ch,%fs:0x73(%ecx,%ebp,2)
je     8054c9a <_IO_stdin_used+0x936>
gs cs and %ah,%cs:%gs:(%bx)
sub    $0x6f722075,%eax
outsl  %ds:(%esi),(%dx)
je     8054cb4 <_IO_stdin_used+0x950>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x64(%edi)
jns    8054cb6 <_IO_stdin_used+0x952>
and    %ch,0x72(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,0x6c(%edx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x72,0x61706573,%ebp
popa
je     8054d0a <_IO_stdin_used+0x9a6>
and    %ch,%fs:0x73(%ecx,%ebp,2)
je     8054ccc <_IO_stdin_used+0x968>
gs cs and %ah,%cs:%gs:(%bx)
sub    $0x32312070,%eax
xor    (%eax),%esp
xor    $0x35,%al
ss
aaa
daa
or     (%eax),%al
or     0x75(%edi),%cl
je     8054d35 <_IO_stdin_used+0x9d1>
jne    8054d3b <_IO_stdin_used+0x9d7>
and    %ah,0x6f(%esi)
jb     8054d39 <_IO_stdin_used+0x9d5>
popa
je     8054d42 <_IO_stdin_used+0x9de>
cmp    (%edx),%cl
and    %ch,0x20202046
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
js     8054d5e <_IO_stdin_used+0x9fa>
jb     8054d4d <_IO_stdin_used+0x9e9>
and    %ah,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%ah
sub    $0x20202066,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
data16
jne    8054d77 <_IO_stdin_used+0xa13>
insb   (%dx),%es:(%edi)
sub    $0x6d726f66,%eax
popa
je     8054d40 <_IO_stdin_used+0x9dc>
and    %ch,0x6e(%ecx)
arpl   %bp,0x64(%ebp,%esi,2)
imul   $0x6d6f6320,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
gs
jae    8054d37 <_IO_stdin_used+0x9d3>
and    %ah,(%eax)
data16
sub    $0x20,%al
sub    $0x726f662d,%eax
gs
jae    8054dae <_IO_stdin_used+0xa4a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx)
arpl   %bp,0x69(%ecx)
and    %ah,0x72(%ecx)
je     8054d6d <_IO_stdin_used+0xa09>
jo     8054dc1 <_IO_stdin_used+0xa5d>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8054d75 <_IO_stdin_used+0xa11>
je     8054dc9 <_IO_stdin_used+0xa65>
gs or  %gs:(%eax),%ah
sub    $0x20202048,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8054dda <_IO_stdin_used+0xa76>
outsl  %ds:(%esi),(%dx)
ja     8054d95 <_IO_stdin_used+0xa31>
jo     8054de9 <_IO_stdin_used+0xa85>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8054d9d <_IO_stdin_used+0xa39>
push   $0x61726569
jb     8054de7 <_IO_stdin_used+0xa83>
push   $0x2d200a79
push   $0x20
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   $0x6f
bound  %esi,0x20(%ebx)
outsw  %ds:(%esi),(%dx)
jb     8054e13 <_IO_stdin_used+0xaaf>
popa
je     8054db3 <_IO_stdin_used+0xa4f>
and    %ah,(%eax)
push   $0x20
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %edx
push   %ebx
inc    %esp
and    %ch,0x6f(%edx)
bound  %esp,(%eax)
arpl   %bp,0x6e(%edi)
je     8054e3e <_IO_stdin_used+0xada>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     8054e40 <_IO_stdin_used+0xadc>
popa
je     8054de0 <_IO_stdin_used+0xa7c>
and    %ch,0x2020206c
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp)
jb     8054e62 <_IO_stdin_used+0xafe>
popa
je     8054e02 <_IO_stdin_used+0xa9e>
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x53(%edx)
inc    %esp
and    %ch,0x6e(%edi,%ebp,2)
and    %ah,0x6f(%bp)
jb     8054e88 <_IO_stdin_used+0xb24>
popa
je     8054e28 <_IO_stdin_used+0xac4>
and    %ch,0x5a202c4d
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
fs and %dh,%fs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61746164,0x20(%ecx,%edi,2),%esi
and    %ch,(%eax)
outsw  %ds:(%esi),(%dx)
jb     8054e6b <_IO_stdin_used+0xb07>
push   %ebx
inc    %ebp
dec    %esp
imul   $0x200a2978,0x75(%esi),%ebp
sub    $0x663c204f,%eax
outsl  %ds:(%esi),(%dx)
jb     8054eca <_IO_stdin_used+0xb66>
popa
je     8054e9e <_IO_stdin_used+0xb3a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     8054ede <_IO_stdin_used+0xb7a>
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs and %dh,%fs:%gs:0x69(%edi)
je     8054ee0 <_IO_stdin_used+0xb7c>
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    8054eeb <_IO_stdin_used+0xb87>
je     8054ea1 <_IO_stdin_used+0xb3d>
arpl   %bp,0x6c(%edi)
jne    8054ef3 <_IO_stdin_used+0xb8f>
outsb  %ds:(%esi),(%dx)
jae    8054e93 <_IO_stdin_used+0xb2f>
and    %ah,(%eax)
dec    %edi
and    %bh,(%esi,%eiz,2)
outsl  %ds:(%esi),(%dx)
jb     8054eff <_IO_stdin_used+0xb9b>
popa
je     8054ed3 <_IO_stdin_used+0xb6f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
jae    8054ec2 <_IO_stdin_used+0xb5e>
sub    $0x77202c4f,%eax
imul   $0x20445342,0x20(%eax,%ebp,2),%esi
jo     8054f16 <_IO_stdin_used+0xbb2>
jb     8054f26 <_IO_stdin_used+0xbc2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
imul   $0x2c6f2d20,0xa(%ecx,%edi,2),%esi
and    %ch,0x2c(%edi)
and    %ch,0x726f662d
insl   (%dx),%es:(%edi)
popa
je     8054eec <_IO_stdin_used+0xb88>
cmp    $0x66,%al
outsl  %ds:(%esi),(%dx)
jb     8054f3e <_IO_stdin_used+0xbda>
popa
je     8054f12 <_IO_stdin_used+0xbae>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
gs
jb     8054f10 <_IO_stdin_used+0xbac>
fs imul $0x2064,%fs:%gs:0x65(%esi),%bp
outsw  %ds:(%esi),(%dx)
jb     8054f69 <_IO_stdin_used+0xc05>
popa
je     8054f09 <_IO_stdin_used+0xba5>
and    %ah,(%eax)
jae    8054f23 <_IO_stdin_used+0xbbf>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    8054f80 <_IO_stdin_used+0xc1c>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     8054f8d <_IO_stdin_used+0xc29>
popa
je     8054f2d <_IO_stdin_used+0xbc9>
and    %ah,(%eax)
jne    8054f47 <_IO_stdin_used+0xbe3>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    8054fae <_IO_stdin_used+0xc4a>
gs
jb     8054f6b <_IO_stdin_used+0xc07>
outsl  %ds:(%esi),(%dx)
jb     8054faa <_IO_stdin_used+0xc46>
outsb  %gs:(%esi),(%dx)
je     8054faa <_IO_stdin_used+0xc46>
and    %ah,%fs:0x6f(%esi)
jb     8054fb8 <_IO_stdin_used+0xc54>
popa
je     8054f58 <_IO_stdin_used+0xbf4>
and    %ah,(%eax)
jbe    8054f72 <_IO_stdin_used+0xc0e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jbe    8054fcf <_IO_stdin_used+0xc6b>
jb     8054fdc <_IO_stdin_used+0xc78>
jne    8054fcb <_IO_stdin_used+0xc67>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8054feb <_IO_stdin_used+0xc87>
and    %ah,0x6f(%esi)
jb     8054fe4 <_IO_stdin_used+0xc80>
popa
je     8054f84 <_IO_stdin_used+0xc20>
and    %ah,(%eax)
pop    %eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%edx)
imul   $0x66207265,0x74(%bp,%di),%esi
outsl  %ds:(%esi),(%dx)
jb     805500a <_IO_stdin_used+0xca6>
popa
je     8054faa <_IO_stdin_used+0xc46>
and    %ch,0x20202079
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8054fdd <_IO_stdin_used+0xc79>
jae    8055027 <_IO_stdin_used+0xcc3>
outsl  %ds:(%esi),(%dx)
ja     8054fe2 <_IO_stdin_used+0xc7e>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8054ff4 <_IO_stdin_used+0xc90>
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     8054fee <_IO_stdin_used+0xc8a>
jb     8055042 <_IO_stdin_used+0xcde>
jae    8054ff2 <_IO_stdin_used+0xc8e>
jbe    8055047 <_IO_stdin_used+0xce3>
and    %ah,%cs:0x64(%ecx)
fs
jb     8054ffb <_IO_stdin_used+0xc97>
sub    %dh,0x73(%ebp)
gs and %dh,%fs:%gs:0x69(%edi)
je     805504d <_IO_stdin_used+0xce9>
and    %ch,0x200a296c
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6e6f632d,%eax
je     805505b <_IO_stdin_used+0xcf7>
js     805506c <_IO_stdin_used+0xd08>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
jae    805506f <_IO_stdin_used+0xd0b>
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     805508c <_IO_stdin_used+0xd28>
and    %ch,(%eax)
outsw  %ds:(%esi),(%dx)
jb     805503e <_IO_stdin_used+0xcda>
push   %ebx
inc    %ebp
dec    %esp
imul   $0x200a2978,0x75(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6165682d,%eax
fs
gs
jb     80550a8 <_IO_stdin_used+0xd44>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jb     80550a4 <_IO_stdin_used+0xd40>
jo     80550a6 <_IO_stdin_used+0xd42>
popa
je     8055064 <_IO_stdin_used+0xd00>
push   $0x65646165
jb     805506b <_IO_stdin_used+0xd07>
insb   (%dx),%es:(%edi)
imul   $0x6f202c73,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x65(%eax)
jb     805507a <_IO_stdin_used+0xd16>
jo     80550bd <_IO_stdin_used+0xd59>
or     %gs:(%bx,%si),%ah
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d6f6e2d,%eax
push   $0x65646165
jb     80550e3 <_IO_stdin_used+0xd7f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805509c <_IO_stdin_used+0xd38>
jo     80550f0 <_IO_stdin_used+0xd8c>
imul   $0x61656820,0x74(%esi),%ebp
fs
gs
jb     80550a9 <_IO_stdin_used+0xd45>
popa
je     80550ac <_IO_stdin_used+0xd48>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c6f632d,%eax
jae    80550c8 <_IO_stdin_used+0xd64>
and    %ch,0x6c6f632d
jne    8055111 <_IO_stdin_used+0xdad>
outsb  %ds:(%esi),(%dx)
jae    80550d3 <_IO_stdin_used+0xd6f>
and    %ch,0x6469772d
je     8055117 <_IO_stdin_used+0xdb3>
and    %bh,(%esi,%ebp,2)
jne    8055121 <_IO_stdin_used+0xdbd>
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
je     80550f0 <_IO_stdin_used+0xd8c>
jae    8055135 <_IO_stdin_used+0xdd1>
jb     8055139 <_IO_stdin_used+0xdd5>
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%edi)
fs
je     8055144 <_IO_stdin_used+0xde0>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x776f722d,%eax
jae    8055115 <_IO_stdin_used+0xdb1>
and    %ch,0x6e696c2d
gs
jae    8055112 <_IO_stdin_used+0xdae>
cmp    $0x6e,%al
jne    8055163 <_IO_stdin_used+0xdff>
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
je     8055132 <_IO_stdin_used+0xdce>
jae    8055177 <_IO_stdin_used+0xe13>
jb     805517b <_IO_stdin_used+0xe17>
outsb  %gs:(%esi),(%dx)
and    %ch,0x65(%eax)
imul   $0xa74,0x68(%edi),%esp
add    %al,(%eax)
or     0x68(%ebx),%dl
outsl  %ds:(%esi),(%dx)
ja     805514a <_IO_stdin_used+0xde6>
je     8055194 <_IO_stdin_used+0xe30>
jb     8055193 <_IO_stdin_used+0xe2f>
popa
fs
jae    805516c <_IO_stdin_used+0xe08>
or     (%eax),%ah
and    %cl,0x20(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
jae    805516c <_IO_stdin_used+0xe08>
imul   $0x79656874,0x20(%esi),%esp
and    %dh,0x68(%edi)
gs
jb     80551be <_IO_stdin_used+0xe5a>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80551c7 <_IO_stdin_used+0xe63>
jae    805516e <_IO_stdin_used+0xe0a>
and    %ch,0x2020204c
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     80551eb <_IO_stdin_used+0xe87>
jae    80551f1 <_IO_stdin_used+0xe8d>
imul   $0x69772079,0x6c(%edx),%esp
je     80551ef <_IO_stdin_used+0xe8b>
and    %cl,0x50(%edi,%edx,2)
and    %ah,0x6e(%ecx)
and    %cl,%fs:0x4c(%esi)
push   %edi
push   %eax
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    8055207 <_IO_stdin_used+0xea3>
outsb  %ds:(%esi),(%dx)
jae    80551a7 <_IO_stdin_used+0xe43>
and    %ch,0x6d202c6d
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
data16
je     805521c <_IO_stdin_used+0xeb8>
jb     80551d9 <_IO_stdin_used+0xe75>
jo     805522d <_IO_stdin_used+0xec9>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8055226 <_IO_stdin_used+0xec2>
jae    80551cd <_IO_stdin_used+0xe69>
and    %ch,0x20202054
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     805524a <_IO_stdin_used+0xee6>
jae    8055250 <_IO_stdin_used+0xeec>
imul   $0x69772079,0x6c(%edx),%esp
je     805524e <_IO_stdin_used+0xeea>
and    %dl,0x50(%ebx)
dec    %ecx
inc    %esp
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    805525e <_IO_stdin_used+0xefa>
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
or     0x69(%ebp),%cl
jae    805525c <_IO_stdin_used+0xef8>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
outsl  %gs:(%esi),(%dx)
jne    8055275 <_IO_stdin_used+0xf11>
and    %ch,0x70(%edi)
je     8055270 <_IO_stdin_used+0xf0c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8055245 <_IO_stdin_used+0xee1>
or     (%eax),%ah
sub    $0x20202063,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    805528c <_IO_stdin_used+0xf28>
outsl  %ds:(%esi),(%dx)
ja     8055247 <_IO_stdin_used+0xee3>
jae    805528c <_IO_stdin_used+0xf28>
push   $0x6c756465
imul   $0x616c6320,0x67(%esi),%ebp
jae    80552aa <_IO_stdin_used+0xf46>
and    %dh,0x69(%edi)
je     80552a4 <_IO_stdin_used+0xf40>
and    %ch,0x706f206c
je     80552ad <_IO_stdin_used+0xf49>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     (%eax),%ah
and    %ah,0x20(%ebx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    80552c7 <_IO_stdin_used+0xf63>
outsl  %ds:(%esi),(%dx)
ja     8055282 <_IO_stdin_used+0xf1e>
je     80552d6 <_IO_stdin_used+0xf72>
jne    80552cb <_IO_stdin_used+0xf67>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x61(%esi)
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%ah
and    %ah,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    80552f4 <_IO_stdin_used+0xf90>
outsl  %ds:(%esi),(%dx)
ja     80552af <_IO_stdin_used+0xf4b>
je     80552f9 <_IO_stdin_used+0xf95>
and    %ah,%gs:0x6e(%ebp)
jbe    8055300 <_IO_stdin_used+0xf9c>
jb     8055308 <_IO_stdin_used+0xfa4>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80552bf <_IO_stdin_used+0xf5b>
popa
data16
je     8055308 <_IO_stdin_used+0xfa4>
jb     80552c5 <_IO_stdin_used+0xf61>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
or     %fs:(%eax),%ah
and    %ch,0x2c(%ebx)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x726f732d,%eax
je     80552dc <_IO_stdin_used+0xf78>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
jns    80552eb <_IO_stdin_used+0xf87>
jae    805533c <_IO_stdin_used+0xfd8>
jb     8055343 <_IO_stdin_used+0xfdf>
and    %ch,0x72(%edi)
fs
gs
jb     80552f6 <_IO_stdin_used+0xf92>
popa
jae    8055313 <_IO_stdin_used+0xfaf>
and    %bl,0x2b(%ebx)
jl     805530b <_IO_stdin_used+0xfa7>
pop    %ebp
imul   $0x5b,0x79(%ebp),%esp
sub    $0x5b,%al
sub    0x5d(%ebp,%ebp,1),%edi
imul   $0x5b,0x79(%ebp),%esp
sub    $0x2e,%al
cs
cs
pop    %ebp
pop    %ebp
or     (%eax),%ah
and    %cl,0x20(%eax,%eiz,1)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x73(%ecx,%ebp,2)
je     805532f <_IO_stdin_used+0xfcb>
outsw  %ds:(%esi),(%dx)
jb     8055380 <_IO_stdin_used+0x101c>
popa
je     8055336 <_IO_stdin_used+0xfd2>
jae    8055388 <_IO_stdin_used+0x1024>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x20200a73,0x72(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     80553a8 <_IO_stdin_used+0x1044>
popa
jns    805535f <_IO_stdin_used+0xffb>
outsb  %ds:(%esi),(%dx)
jne    80553af <_IO_stdin_used+0x104b>
gs
jb     80553ae <_IO_stdin_used+0x104a>
arpl   %sp,(%eax)
jne    80553b2 <_IO_stdin_used+0x104e>
and    %ah,%fs:0x6e(%ecx)
and    %dh,%fs:0x63(%edi)
push   $0x200a6e61
and    %dl,0x2c(%ebx)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6d75632d,%eax
jne    80553d0 <_IO_stdin_used+0x106c>
popa
je     80553d0 <_IO_stdin_used+0x106c>
jbe    80553ce <_IO_stdin_used+0x106a>
and    %ah,(%eax)
imul   $0x6564756c,0x63(%esi),%ebp
and    %dh,0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%ebp,%eiz,2)
and    %ah,%fs:0x68(%ebx)
imul   $0x636f7270,0x20(%esp,%eiz,2),%ebp
gs
jae    80553fd <_IO_stdin_used+0x1099>
and    %ah,0x74(%ecx,%eiz,2)
popa
or     (%eax),%ah
sub    $0x20202079,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     80553cd <_IO_stdin_used+0x1069>
jae    8055417 <_IO_stdin_used+0x10b3>
outsl  %ds:(%esi),(%dx)
ja     80553d2 <_IO_stdin_used+0x106e>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 80553e4 <_IO_stdin_used+0x1080>
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     80553de <_IO_stdin_used+0x107a>
jb     8055433 <_IO_stdin_used+0x10cf>
jae    80553e2 <_IO_stdin_used+0x107e>
sub    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    80553e8 <_IO_stdin_used+0x1084>
ja     8055433 <_IO_stdin_used+0x10cf>
je     8055434 <_IO_stdin_used+0x10d0>
and    %ch,0x200a296c
sub    $0x56202c56,%eax
sub    $0x20,%al
sub    $0x7265762d,%eax
jae    8055449 <_IO_stdin_used+0x10e5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     8055458 <_IO_stdin_used+0x10f4>
popa
jns    805540f <_IO_stdin_used+0x10ab>
jbe    8055456 <_IO_stdin_used+0x10f2>
jb     8055466 <_IO_stdin_used+0x1102>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     805546a <_IO_stdin_used+0x1106>
popa
je     8055469 <_IO_stdin_used+0x1105>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x202c772d,0x20(%edx,%ecx,1),%esi
ja     8055433 <_IO_stdin_used+0x10cf>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x6e(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x20646574,0x69(%ebp),%ebp
outsl  %ds:(%esi),(%dx)
jne    80554a3 <_IO_stdin_used+0x113f>
jo     80554a6 <_IO_stdin_used+0x1142>
je     8055453 <_IO_stdin_used+0x10ef>
ja     805549e <_IO_stdin_used+0x113a>
fs
je     80554a0 <_IO_stdin_used+0x113c>
or     (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2073252d,%eax
cmp    $0x25,%al
jae    80554c7 <_IO_stdin_used+0x1163>
and    $0x73257c73,%eax
jl     8055477 <_IO_stdin_used+0x1113>
jae    80554d0 <_IO_stdin_used+0x116c>
and    $0x73257c73,%eax
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     80554e2 <_IO_stdin_used+0x117e>
popa
jns    8055499 <_IO_stdin_used+0x1135>
push   $0x20706c65
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x78(%ebp)
imul   $0x7254200a,0x0(%edx,%ecx,1),%esi
jns    80554ae <_IO_stdin_used+0x114a>
daa
and    $0x2d2d2073,%eax
and    $0x253c2073,%eax
jae    8055517 <_IO_stdin_used+0x11b3>
and    $0x73257c73,%eax
jl     80554c7 <_IO_stdin_used+0x1163>
jae    8055520 <_IO_stdin_used+0x11bc>
and    $0x73257c73,%eax
ds
daa
or     (%eax),%ah
and    %ch,0x72(%edi)
and    %ah,(%edi)
and    $0x2d2d2073,%eax
and    $0x253c2073,%eax
jae    805553a <_IO_stdin_used+0x11d6>
and    $0x73257c73,%eax
jl     80554ea <_IO_stdin_used+0x1186>
jae    8055543 <_IO_stdin_used+0x11df>
and    $0x73257c73,%eax
ds
daa
or     (%eax),%ah
outsw  %ds:(%esi),(%dx)
jb     80554f4 <_IO_stdin_used+0x1190>
popa
fs imul $0x206c616e,%fs:0x6f(%ecx,%ebp,2),%esi
20
push   $0x20706c65
je     805554b <_IO_stdin_used+0x11e7>
js     805555c <_IO_stdin_used+0x11f8>
or     %cs:(%eax),%al
and    $0x75250063,%eax
sub    $0x32302500,%eax
jne    8055531 <_IO_stdin_used+0x11cd>
add    %ah,0x25007532
jne    805552d <_IO_stdin_used+0x11c9>
and    $0x33250075,%eax
jne    8055506 <_IO_stdin_used+0x11a2>
and    $0x3a753230,%eax
and    $0x3a753230,%eax
and    $0x753230,%eax
and    $0x2500756c,%eax
insb   (%dx),%es:(%edi)
add    %ah,%fs:0x3025006f
cmp    %bh,0x0(%eax)
and    $0x253a7533,%eax
xor    %dh,(%edx)
jne    805552e <_IO_stdin_used+0x11ca>
and    $0x646c35,%eax
and    $0x252e7532,%eax
jne    805553a <_IO_stdin_used+0x11d6>
xor    %dh,(%eax)
xor    %dh,(%eax)
xor    %dh,(%eax)
xor    %dh,(%eax)
and    $0x253c0073,%eax
jae    8055549 <_IO_stdin_used+0x11e5>
and    $0x4d253a48,%eax
add    %ah,0x642562
and    $0x38250059,%eax
cmp    %dh,%cs:0x0(%ebx)
and    %ah,(%eax)
and    $0x73362e36,%eax
add    %ah,0x322e3432
xor    $0x73,%al
add    %ch,(%edi)
jo     80555e2 <_IO_stdin_used+0x127e>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x74612f64,%eax
je     80555ec <_IO_stdin_used+0x1288>
das
arpl   %si,0x72(%ebp)
jb     80555e5 <_IO_stdin_used+0x1281>
outsb  %ds:(%esi),(%dx)
je     8055583 <_IO_stdin_used+0x121f>
and    $0x6c250078,%eax
imul   $0x6c6c3525,(%eax),%eax
jne    8055590 <_IO_stdin_used+0x122c>
and    $0x252e7532,%eax
xor    %dh,(%edx)
jne    8055599 <_IO_stdin_used+0x1235>
and    $0x757063,%eax
and    $0x2e32312d,%eax
xor    %esi,(%edx)
jae    80555c7 <_IO_stdin_used+0x1263>
and    $0x382e382d,%eax
jae    80555b8 <_IO_stdin_used+0x1254>
add    %ah,0x69(%esi)
js     80555d3 <_IO_stdin_used+0x126f>
bound  %ebp,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
gs
jae    805562d <_IO_stdin_used+0x12c9>
and    %ah,0x72(%ebp)
jb     805562e <_IO_stdin_used+0x12ca>
jb     80555cb <_IO_stdin_used+0x1267>
add    %ah,0x61(%edx)
and    %ah,%fs:0x6c(%ecx)
imul   $0x746e656d,0x6e(%edi),%esp
and    %ah,0x6f(%ebx)
fs or  %fs:%gs:(%eax),%al
je     805564c <_IO_stdin_used+0x12e8>
jns    8055611 <_IO_stdin_used+0x12ad>
add    %dh,0x74(%eax)
jae    805560e <_IO_stdin_used+0x12aa>
cmp    %edi,(%ecx)
cmp    %edi,(%ecx)
add    %ch,0x73(%ecx)
gs
jb     8055652 <_IO_stdin_used+0x12ee>
gs
jae    805561b <_IO_stdin_used+0x12b7>
jbe    8055662 <_IO_stdin_used+0x12fe>
je     8055669 <_IO_stdin_used+0x1305>
xor    $0x32,%al
add    %dh,0x79(%esp,%esi,2)
push   %ebx
dec    %ebp
pop    %eax
xor    %al,(%eax)
xor    (%edx),%esi
aaa
xor    %ch,(%edi)
je     8055676 <_IO_stdin_used+0x1312>
jns    8055638 <_IO_stdin_used+0x12d4>
add    %bh,(%ecx)
cmp    %edi,(%ecx)
sub    $0x353a3332,%eax
cmp    %edi,(%edx)
xor    $0x315b0039,%eax
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
sub    $0x34333231,%eax
xor    $0x643c205d,%eax
gs
data16
jne    8055698 <_IO_stdin_used+0x1334>
arpl   %si,0x0(%esi,%edi,1)
jo     80556a3 <_IO_stdin_used+0x133f>
add    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
sub    $0x34333231,%eax
xor    $0x63700036,%eax
jo     80556bb <_IO_stdin_used+0x1357>
add    %dh,0x67(%eax,%esi,2)
imul   $0x6d697473,0x63(%eax,%eax,1),%esp
add    %ah,%gs:0x6d(%ebx)
popa
push   $0x5f
data16
insb   (%dx),%es:(%edi)
je     805565d <_IO_stdin_used+0x12f9>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8055663 <_IO_stdin_used+0x12ff>
arpl   %si,0x74(%ebp)
imul   $0x696d6300,0x65(%ebp),%ebp
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
insb   (%dx),%es:(%edi)
je     8055673 <_IO_stdin_used+0x130f>
jbe    80556e8 <_IO_stdin_used+0x1384>
imul   $0x69727000,0x65(%edx),%edi
outsl  %ds:(%esi),(%dx)
jb     80556e8 <_IO_stdin_used+0x1384>
je     80556fa <_IO_stdin_used+0x1396>
add    %bh,0x0(%esi)
and    $0x555043,%eax
push   %eax
push   %eax
dec    %ecx
inc    %esp
add    %al,0x4f(%ebx)
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
add    %dh,0x67(%edx)
jb     8055709 <_IO_stdin_used+0x13a5>
jne    805570c <_IO_stdin_used+0x13a8>
add    %dl,0x47(%edx)
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %ch,0x69(%esi)
arpl   %sp,0x0(%ebp)
dec    %esi
dec    %ecx
add    %ah,0x74(%ebp)
imul   $0x414c4500,0x65(%ebp),%ebp
push   %eax
push   %ebx
inc    %ebp
inc    %esp
add    %dh,0x75(%edx)
jae    8055723 <_IO_stdin_used+0x13bf>
jb     80556c0 <_IO_stdin_used+0x135c>
push   %edx
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %dh,0x73(%esi)
jp     80556ca <_IO_stdin_used+0x1366>
push   %esi
push   %ebx
pop    %edx
add    %al,0x4d(%esi,%eax,2)
push   %esp
add    %dh,0x69(%eax)
fs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x73,%al
je     8055741 <_IO_stdin_used+0x13dd>
je     8055747 <_IO_stdin_used+0x13e3>
sub    $0x63,%al
jo     805575b <_IO_stdin_used+0x13f7>
je     8055751 <_IO_stdin_used+0x13ed>
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
insl   (%dx),%es:(%edi)
add    %al,%fs:0x66(%ebp,%eiz,2)
inc    %edx
push   %ebx
inc    %esp
add    %dh,0x69(%eax)
fs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x73,%al
je     8055764 <_IO_stdin_used+0x1400>
je     8055731 <_IO_stdin_used+0x13cd>
bound  %esi,0x64(%ebx)
je     8055773 <_IO_stdin_used+0x140f>
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
jb     8055777 <_IO_stdin_used+0x1413>
jae    8055712 <_IO_stdin_used+0x13ae>
inc    %esp
gs
push   %bx
jns    805578b <_IO_stdin_used+0x1427>
push   %esi
add    %dh,0x69(%eax)
fs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
imul   $0x646d632c,0x65(%ebp),%ebp
add    %al,0x4e(%ebp)
inc    %esp
pop    %edi
inc    %edx
push   %ebx
inc    %esp
add    %dh,0x74(%ebx)
popa
je     805579f <_IO_stdin_used+0x143b>
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
jo     80557b9 <_IO_stdin_used+0x1455>
je     80557af <_IO_stdin_used+0x144b>
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
add    %al,0x4e(%ebp)
inc    %esp
pop    %edi
push   %ebx
pop    %ecx
push   %ebx
xor    $0x61747300,%eax
je     80557c1 <_IO_stdin_used+0x145d>
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x42(%esi)
pop    %edi
add    %dh,0x69(%eax)
fs
sub    $0x74,%al
je     80557a7 <_IO_stdin_used+0x1443>
jae    80557f1 <_IO_stdin_used+0x148d>
popa
je     80557ac <_IO_stdin_used+0x1448>
je     80557eb <_IO_stdin_used+0x1487>
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x44(%esi)
pop    %edi
add    %dh,0x69(%eax)
fs
sub    $0x74,%al
je     8055811 <_IO_stdin_used+0x14ad>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
add    %al,0x44(%esi)
pop    %edi
data16
add    %al,0x44(%esi)
pop    %edi
pushw  $0x0
inc    %esi
inc    %esp
pop    %edi
push   $0x0
jo     805581e <_IO_stdin_used+0x14ba>
fs
sub    $0x74,%al
je     8055833 <_IO_stdin_used+0x14cf>
sub    $0x74,%al
imul   $0x6967702c,0x65(%ebp),%ebp
fs
sub    $0x73,%al
imul   $0x6d6d6f,0x63(%esp,%ebp,1),%esp
inc    %esi
inc    %esp
pop    %edi
insb   (%dx),%es:(%edi)
add    %al,0x44(%esi)
pop    %edi
insb   (%dx),%es:(%edi)
push   $0x0
inc    %esi
dec    %esp
inc    %ecx
push   %ebx
dec    %ebx
pop    %edi
arpl   %bp,0x6e(%edi)
je     8055849 <_IO_stdin_used+0x14e5>
js     805585a <_IO_stdin_used+0x14f6>
add    %dh,0x69(%eax)
fs
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     8055855 <_IO_stdin_used+0x14f1>
js     8055866 <_IO_stdin_used+0x1502>
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %cl,%fs:0x50(%eax)
pop    %edi
add    %cl,0x50(%eax)
pop    %edi
data16
add    %cl,0x50(%eax)
pop    %edi
data16
insb   (%dx),%es:(%edi)
add    %cl,0x50(%eax)
pop    %edi
insb   (%dx),%es:(%edi)
add    %dh,0x69(%eax)
fs
sub    $0x73,%al
imul   $0x2c707267,0x70(%esp,%ebp,1),%esp
je     805588c <_IO_stdin_used+0x1528>
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
je     805588e <_IO_stdin_used+0x152a>
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
jb     8055892 <_IO_stdin_used+0x152e>
jae    805582d <_IO_stdin_used+0x14c9>
dec    %edi
dec    %esp
pop    %edi
pop    %eax
add    %cl,0x4c(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
add    %dl,0x44(%edx)
pop    %edi
add    %dh,0x69(%eax)
fs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x73,%al
je     80558a9 <_IO_stdin_used+0x1545>
je     80558af <_IO_stdin_used+0x154b>
sub    $0x62,%al
jae    80558b2 <_IO_stdin_used+0x154e>
je     80558b9 <_IO_stdin_used+0x1555>
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
add    %dl,0x44(%edx)
pop    %edi
pushw  $0x0
push   %edx
inc    %esp
pop    %edi
insb   (%dx),%es:(%edi)
push   $0x0
push   %edx
push   %ebp
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
add    %dl,0x43(%ebx)
dec    %eax
inc    %ebp
inc    %esp
add    %dl,0x74(%ebx)
fs
pop    %edi
data16
add    %dl,0x74(%ebx)
fs
pop    %edi
data16
insb   (%dx),%es:(%edi)
add    %dl,0x74(%ebx)
fs
pop    %edi
insb   (%dx),%es:(%edi)
add    %dl,0x52(%eax,%ecx,2)
inc    %ebp
inc    %ecx
inc    %esp
add    %ah,0x6d656d
and    $0x4d454d,%eax
pop    %edi
insb   (%dx),%es:(%edi)
gs
data16
je     805589b <_IO_stdin_used+0x1537>
dec    %esp
dec    %esp
dec    %esp
dec    %esp
dec    %esp
dec    %esp
dec    %esp
dec    %esp
add    %bl,0x6c(%edi)
gs
data16
je     80558dc <_IO_stdin_used+0x1578>
add    %cl,0x4c(%edx,%esi,1)
xor    0x4c(%edx,%esi,1),%cl
xor    (%eax),%al
pop    %edi
jb     8055920 <_IO_stdin_used+0x15bc>
addr16 push $0x52520074
push   %edx
push   %edx
push   %edx
push   %edx
push   %edx
push   %edx
push   %edx
push   %edx
push   %edx
add    %bl,0x72(%edi)
imul   $0x52003274,0x68(%edi),%esp
xor    0x32(%edx),%dl
push   %edx
xor    0x32(%edx),%dl
push   %edx
xor    0x0(%edx),%dl
pop    %edi
jne    805594c <_IO_stdin_used+0x15e8>
insb   (%dx),%es:(%edi)
imul   $0x646574,0x69(%ebp),%ebp
pop    %edi
jne    8055957 <_IO_stdin_used+0x15f3>
insb   (%dx),%es:(%edi)
imul   $0x32646574,0x69(%ebp),%ebp
add    %dl,0x32(%ebp)
add    %ah,0x63(%ecx)
data16
insb   (%dx),%es:(%edi)
popa
add    %al,0x43(%bx,%di)
inc    %esi
dec    %esp
inc    %edi
add    %ah,0x63(%ecx)
data16
insb   (%dx),%es:(%edi)
add    %ah,0x64(%bx,%di)
fs
jb     805596c <_IO_stdin_used+0x1608>
xor    %eax,(%eax)
popa
insb   (%dx),%es:(%edi)
popa
jb     8055981 <_IO_stdin_used+0x161d>
add    %al,0x4c(%ecx)
inc    %ecx
push   %edx
dec    %ebp
add    %ah,0x72(%ecx)
arpl   %ax,(%bx,%si)
inc    %ecx
push   %edx
inc    %edi
inc    %ebx
add    %ah,0x74(%ecx)
imul   $0x6f6c6200,0x65(%ebp),%ebp
arpl   %bp,0x65(%ebx)
add    %al,%fs:0x4c(%edx)
dec    %edi
inc    %ebx
dec    %ebx
inc    %ebp
inc    %esp
add    %ah,0x6e(%edx)
add    %al,%fs:0x4e(%edx)
inc    %esp
add    %ah,0x73(%edx)
fs
jae    80559bc <_IO_stdin_used+0x1658>
popa
jb     80559bf <_IO_stdin_used+0x165b>
add    %dl,0x54(%ebx)
inc    %ecx
push   %edx
push   %esp
add    %ah,0x73(%edx)
fs
je     80559c0 <_IO_stdin_used+0x165c>
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x61(%ebx)
jne    80559c5 <_IO_stdin_used+0x1661>
push   $0x41430074
push   %ebp
inc    %edi
dec    %eax
push   %esp
add    %ah,0x67(%ebx)
jb     80559db <_IO_stdin_used+0x1677>
jne    80559de <_IO_stdin_used+0x167a>
add    %al,0x47(%ebx)
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %ah,0x6c(%ebx)
popa
jae    80559ee <_IO_stdin_used+0x168a>
add    %ah,0x6c(%ebx)
jae    8055980 <_IO_stdin_used+0x161c>
inc    %ebx
dec    %ebp
inc    %esp
add    %ah,0x6e(%ebx)
jae    80559ff <_IO_stdin_used+0x169b>
popa
jo     805598b <_IO_stdin_used+0x1627>
inc    %ebx
dec    %edi
dec    %esi
push   %esp
inc    %ebp
pop    %eax
push   %esp
add    %ah,0x70(%ebx)
jne    8055a00 <_IO_stdin_used+0x169c>
add    %al,%fs:0x50(%ebx)
push   %ebp
dec    %ecx
inc    %esp
add    %ah,0x70(%ebx)
jne    8055a17 <_IO_stdin_used+0x16b3>
imul   $0x69746300,0x65(%ebp),%ebp
add    %al,%fs:0x54(%ebx)
dec    %ecx
inc    %esp
add    %ah,0x75(%ebx)
jb     8055a28 <_IO_stdin_used+0x16c4>
imul   $0x53525543,0x0(%edi),%esp
dec    %ecx
inc    %edi
add    %ah,0x77(%ebx)
add    %al,%fs:0x57(%ebx)
inc    %esp
add    %al,0x53(%edx,%edx,2)
add    %ah,0x69(%ebx,%esi,2)
jp     80559d0 <_IO_stdin_used+0x166c>
inc    %esp
push   %ebx
dec    %ecx
pop    %edx
add    %ah,0x67(%ebp)
imul   $0x444947,0x45(%eax,%eax,1),%esp
gs
addr16 jb 8055a52 <_IO_stdin_used+0x16ee>
jne    8055a55 <_IO_stdin_used+0x16f1>
add    %al,0x47(%ebp)
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %ah,0x69(%ebp)
jo     80559f1 <_IO_stdin_used+0x168d>
inc    %ebp
dec    %ecx
push   %eax
add    %ah,0x6d(%ebp)
jne    8055a65 <_IO_stdin_used+0x1701>
add    %al,0x4d(%ebp)
push   %ebp
dec    %esp
add    %ah,0x6e(%ebp)
fs
pop    %edi
arpl   %bp,0x64(%edi)
add    %al,%gs:0x5f(%ebp)
inc    %ebx
dec    %edi
inc    %esp
inc    %ebp
add    %ah,0x6e(%ebp)
jbe    8055a7c <_IO_stdin_used+0x1718>
jb     8055a84 <_IO_stdin_used+0x1720>
outsb  %ds:(%esi),(%dx)
add    %al,0x4e(%ebp)
push   %esi
dec    %ecx
push   %edx
dec    %edi
dec    %esi
dec    %ebp
inc    %ebp
dec    %esi
push   %esp
add    %ah,0x73(%ebp)
jo     8055a27 <_IO_stdin_used+0x16c3>
inc    %ebp
push   %ebx
push   %eax
add    %ah,0x74(%ebp)
imul   $0x75650073,0x65(%ebp),%ebp
imul   $0x444955,0x45(%eax,%eax,1),%esp
gs
jne    8055ab2 <_IO_stdin_used+0x174e>
gs
jb     8055a42 <_IO_stdin_used+0x16de>
inc    %ebp
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %al,0x0(%esi)
imul   $0x4746,0x0(%si),%sp
dec    %ecx
inc    %esp
add    %ah,0x67(%esi)
jb     8055ac7 <_IO_stdin_used+0x1763>
jne    8055aca <_IO_stdin_used+0x1766>
add    %al,0x47(%esi)
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %ah,0x6e(%esi)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x73(%esi)
imul   $0x49475346,0x0(%si),%esp
inc    %esp
add    %ah,0x73(%esi)
addr16 jb 8055ae8 <_IO_stdin_used+0x1784>
jne    8055aeb <_IO_stdin_used+0x1787>
add    %al,0x53(%esi)
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %ah,0x73(%esi)
jne    8055af1 <_IO_stdin_used+0x178d>
add    %al,%fs:0x53(%esi)
push   %ebp
dec    %ecx
inc    %esp
add    %ah,0x73(%esi)
jne    8055b07 <_IO_stdin_used+0x17a3>
gs
jb     8055a97 <_IO_stdin_used+0x1733>
inc    %esi
push   %ebx
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %ah,0x75(%esi)
imul   $0x444955,0x46(%eax,%eax,1),%esp
data16
jne    8055b1e <_IO_stdin_used+0x17ba>
gs
jb     8055aae <_IO_stdin_used+0x174a>
inc    %esi
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8055b1f <_IO_stdin_used+0x17bb>
add    %cl,%fs:0x47(%ecx)
dec    %esi
dec    %edi
push   %edx
inc    %ebp
inc    %esp
add    %ch,0x6e(%ecx)
bound  %ebp,0x0(%ebx,%ebp,2)
dec    %ecx
dec    %esi
inc    %edx
dec    %esp
dec    %ebx
add    %ch,0x6e(%ecx)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x69,(%eax),%eax
outsb  %ds:(%esi),(%dx)
je     8055b4c <_IO_stdin_used+0x17e8>
jb     8055b47 <_IO_stdin_used+0x17e3>
add    %dl,0x52(%eax)
dec    %ecx
add    %ch,0x70(%ecx)
arpl   %bp,0x73(%esi)
add    %cl,0x50(%ecx)
inc    %ebx
dec    %esi
push   %ebx
add    %ch,0x6f(%edx)
bound  %esp,0x0(%ebx)
dec    %edx
dec    %edi
inc    %edx
inc    %ebx
add    %ch,0x74(%ebx)
jb     8055b5e <_IO_stdin_used+0x17fa>
arpl   %sp,0x0(%ebp)
dec    %ebx
push   %esp
push   %edx
inc    %ecx
inc    %ebx
inc    %ebp
add    %ch,0x74(%ebx)
jb     8055b6c <_IO_stdin_used+0x1808>
arpl   %sp,0x70(%ebp)
add    %cl,0x54(%ebx)
push   %edx
inc    %ecx
inc    %ebx
inc    %ebp
push   %eax
add    %ch,0x62(%ecx,%eiz,2)
gs
insb   (%dx),%es:(%edi)
add    %cl,0x42(%ecx,%eax,2)
inc    %ebp
dec    %esp
add    %ch,0x73(%ecx,%eiz,2)
je     8055b8b <_IO_stdin_used+0x1827>
jo     8055b9f <_IO_stdin_used+0x183b>
add    %ch,0x6d(%ecx,%ebp,2)
add    %cl,0x4d(%ecx,%ecx,2)
add    %ch,0x67(%edi,%ebp,2)
imul   $0x4e474f4c,0x0(%esi),%ebp
inc    %ecx
dec    %ebp
inc    %ebp
add    %ch,0x67(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6e(%edi,%ebp,2)
addr16 je 8055bbd <_IO_stdin_used+0x1859>
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x74(%ebx,%esi,2)
popa
jb     8055bcd <_IO_stdin_used+0x1869>
add    %dl,0x54(%ebx)
inc    %ecx
push   %edx
push   %esp
inc    %ebp
inc    %esp
add    %ch,0x69(%ebp,%esi,2)
add    %cl,%fs:0x49(%ebp,%edx,2)
inc    %esp
add    %ch,0x73(%ebp,%esi,2)
gs
jb     8055b72 <_IO_stdin_used+0x180e>
dec    %esp
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %ch,0x5f(%ebp)
fs
jb     8055bf0 <_IO_stdin_used+0x188c>
add    %ch,0x5f(%ebp)
fs
je     8055b83 <_IO_stdin_used+0x181f>
inc    %esp
push   %esp
add    %ch,0x5f(%ebp)
insb   (%dx),%es:(%edi)
jb     8055bfe <_IO_stdin_used+0x189a>
add    %cl,0x53(%edx,%edx,2)
add    %ch,0x5f(%ebp)
jb     8055bf9 <_IO_stdin_used+0x1895>
jae    8055bff <_IO_stdin_used+0x189b>
fs outsb %fs:%gs:(%esi),(%dx)
je     8055b9b <_IO_stdin_used+0x1837>
push   %edx
inc    %ebp
push   %ebx
add    %ch,0x5f(%ebp)
jae    8055c0b <_IO_stdin_used+0x18a7>
popa
jb     8055c0b <_IO_stdin_used+0x18a7>
add    %dl,0x48(%ebx)
push   %edx
inc    %esp
add    %ch,0x5f(%ebp)
jae    8055c19 <_IO_stdin_used+0x18b5>
jp     8055c17 <_IO_stdin_used+0x18b3>
add    %dl,0x49(%ebx)
pop    %edx
inc    %ebp
add    %ch,0x5f(%ebp)
jae    8055c33 <_IO_stdin_used+0x18cf>
popa
jo     8055bbf <_IO_stdin_used+0x185b>
insl   (%dx),%es:(%edi)
pop    %edi
je     8055c35 <_IO_stdin_used+0x18d1>
jae    8055bc5 <_IO_stdin_used+0x1861>
push   %esp
push   %edx
push   %ebx
add    %cl,0x41(%ebp)
dec    %edx
inc    %esi
dec    %esp
add    %ch,0x61(%ebp)
push   $0x66
insb   (%dx),%es:(%edi)
je     8055bd6 <_IO_stdin_used+0x1872>
dec    %ebp
inc    %ecx
dec    %edx
inc    %esi
dec    %esp
push   %esp
add    %cl,0x49(%ebp)
dec    %esi
inc    %esi
dec    %esp
add    %ch,0x69(%ebp)
outsb  %ds:(%esi),(%dx)
data16
insb   (%dx),%es:(%edi)
je     8055bea <_IO_stdin_used+0x1886>
dec    %ebp
dec    %ecx
dec    %esi
inc    %esi
dec    %esp
push   %esp
add    %ch,0x6e(%ebp)
je     8055c63 <_IO_stdin_used+0x18ff>
jae    8055bf7 <_IO_stdin_used+0x1893>
dec    %ebp
dec    %esi
push   %esp
dec    %esi
push   %ebx
add    %ch,0x73(%ebp)
addr16 jb 8055c65 <_IO_stdin_used+0x1901>
jbe    8055c04 <_IO_stdin_used+0x18a0>
dec    %ebp
push   %ebx
inc    %edi
push   %edx
inc    %ebx
push   %esi
add    %ch,0x73(%ebp)
addr16 jae 8055c7e <_IO_stdin_used+0x191a>
add    %cl,%fs:0x53(%ebp)
inc    %edi
push   %ebx
dec    %esi
inc    %esp
add    %ch,0x77(%ebp)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
add    %cl,0x57(%ebp)
inc    %ebx
dec    %eax
inc    %ecx
dec    %esi
add    %ch,0x65(%esi)
je     8055c99 <_IO_stdin_used+0x1935>
jae    8055c2d <_IO_stdin_used+0x18c9>
dec    %esi
inc    %ebp
push   %esp
dec    %esi
push   %ebx
add    %ch,0x69(%esi)
add    %ch,0x69(%esi)
jbe    8055c9d <_IO_stdin_used+0x1939>
jae    8055cb3 <_IO_stdin_used+0x194f>
add    %cl,0x56(%ecx)
inc    %ebx
push   %ebx
push   %edi
add    %ch,0x6c(%esi)
ja     8055cb7 <_IO_stdin_used+0x1953>
add    %cl,0x4c(%esi)
push   %edi
push   %eax
add    %ch,0x73(%esi)
imul   $0x736c61,0x6e(%edi),%esp
dec    %esi
push   %ebx
dec    %ecx
inc    %edi
push   %ebx
add    %ch,0x73(%esi)
imul   $0x57534e00,0x73(%edi),%esp
inc    %ecx
push   %eax
add    %ch,0x76(%esi)
arpl   %si,0x77(%ebx)
add    %ch,0x77(%esi)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
add    %ch,0x70(%edi)
jb     8055ce2 <_IO_stdin_used+0x197e>
add    %ch,0x73(%edi)
jp     8055c7e <_IO_stdin_used+0x191a>
outsl  %ds:(%esi),(%dx)
jne    8055ce3 <_IO_stdin_used+0x197f>
insb   (%dx),%es:(%edi)
imul   $0x4f,(%eax),%eax
push   %ebp
inc    %edx
dec    %esp
dec    %ebx
add    %ch,0x75(%edi)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x70,(%eax),%eax
pop    %edi
jb     8055d0b <_IO_stdin_used+0x19a7>
add    %dl,0x5f(%eax)
push   %edx
push   %ebp
add    %dh,0x61(%eax)
fs
fs
jb     8055ca2 <_IO_stdin_used+0x193e>
push   %eax
inc    %ecx
inc    %esp
inc    %esp
push   %edx
add    %dh,0x61(%eax)
imul   $0x45474150,%gs:0x0(%bp),%ebp
45
dec    %ecx
dec    %esi
add    %dh,0x65(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x4e455000,%fs:0x67(%esi),%ebp
inc    %esp
dec    %ecx
dec    %esi
inc    %edi
add    %dh,0x69(%eax)
outsb  %fs:(%esi),(%dx)
jae    8055ccc <_IO_stdin_used+0x1968>
push   %eax
dec    %ecx
inc    %esp
dec    %esi
push   %ebx
add    %dh,0x6d(%eax)
gs
insl   (%dx),%es:(%edi)
add    %dh,0x6f(%eax)
imul   $0x696c6f70,0x0(%eax),%esi
arpl   %di,0x0(%ecx)
push   %eax
dec    %edi
dec    %esp
add    %dh,0x72(%eax)
imul   $0x41006970,0x61(%edi),%ebx
push   %eax
dec    %ecx
add    %dh,0x72(%eax)
imul   $0x42007261,0x62(%edi),%ebx
inc    %ecx
push   %edx
add    %dh,0x72(%eax)
imul   $0x42007a61,0x62(%edi),%ebx
inc    %ecx
pop    %edx
add    %dh,0x72(%eax)
imul   $0x46006f6f,0x66(%edi),%ebx
dec    %edi
dec    %edi
add    %dh,0x72(%eax)
insl   (%dx),%es:(%edi)
addr16 jb 8055d8d <_IO_stdin_used+0x1a29>
add    %dl,0x52(%eax)
dec    %ebp
inc    %edi
push   %edx
push   %eax
add    %dh,0x72(%eax)
insl   (%dx),%es:(%edi)
imul   $0x44494d52,0x50(%eax,%eax,1),%esp
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x50(%eax,%eax,1)
push   %edx
dec    %edi
dec    %edx
inc    %ebp
inc    %ebx
push   %esp
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
push   $0x69
add    %dl,%fs:0x52(%eax)
dec    %edi
dec    %edx
dec    %ecx
inc    %esp
add    %dh,0x73(%eax)
gs
je     8055d54 <_IO_stdin_used+0x19f0>
push   %eax
push   %ebx
inc    %ebp
push   %esp
add    %dh,0x73(%eax)
jb     8055d5d <_IO_stdin_used+0x19f9>
push   %eax
push   %ebx
push   %edx
add    %dh,0x73(%eax)
js     8055dd5 <_IO_stdin_used+0x1a71>
jb     8055dd0 <_IO_stdin_used+0x1a6c>
add    %dl,0x50(%eax)
push   %edx
add    %dl,0x45(%edx)
add    %dh,0x67(%edx)
imul   $0x444947,0x52(%eax,%eax,1),%esp
jb     8055de7 <_IO_stdin_used+0x1a83>
imul   $0x494c5200,0x6b(%esi),%ebp
dec    %esi
dec    %ebx
add    %dh,0x73(%edx)
jae    8055df2 <_IO_stdin_used+0x1a8e>
jp     8055df0 <_IO_stdin_used+0x1a8c>
add    %dh,0x73(%edx)
jp     8055d90 <_IO_stdin_used+0x1a2c>
push   %edx
push   %ebx
pop    %edx
add    %dh,0x74(%edx)
jo     8055e0a <_IO_stdin_used+0x1aa6>
imul   $0x52505452,0x0(%edi),%ebp
dec    %ecx
dec    %edi
add    %dh,0x75(%edx)
imul   $0x444955,0x52(%eax,%eax,1),%esp
jae    8055e11 <_IO_stdin_used+0x1aad>
push   $0x53006465
inc    %ebx
dec    %eax
add    %dh,0x63(%ebx)
outsb  %ds:(%esi),(%dx)
je     8055dbb <_IO_stdin_used+0x1a57>
push   %ebx
inc    %ebx
dec    %esi
push   %esp
add    %dh,0x63(%ebx)
outsl  %ds:(%esi),(%dx)
jne    8055e33 <_IO_stdin_used+0x1acf>
je     8055dc7 <_IO_stdin_used+0x1a63>
push   %ebx
inc    %ebx
add    %dh,0x67(%ebx)
imul   $0x69677300,0x70(%edi),%ebx
pop    %edi
jb     8055e49 <_IO_stdin_used+0x1ae5>
jae    8055dd8 <_IO_stdin_used+0x1a74>
jae    8055e43 <_IO_stdin_used+0x1adf>
addr16 pop %edi
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x73,(%eax),%eax
imul   $0x63746163,0x5f(%edi),%esp
push   $0x54414300
inc    %ebx
dec    %eax
inc    %ebp
inc    %esp
add    %dh,0x69(%ebx)
addr16 pop %edi
imul   $0x65726f,0x6e(%edi),%esp
jae    8055e6a <_IO_stdin_used+0x1b06>
addr16 pop %edi
jo     8055e6a <_IO_stdin_used+0x1b06>
outsb  %ds:(%esi),(%dx)
add    %dl,%fs:0x49(%ebx)
inc    %edi
dec    %esi
inc    %ecx
dec    %esp
add    %dh,0x69(%ebx)
arpl   %sp,0x74(%bx,%di)
arpl   %bp,0x0(%eax)
jae    8055e83 <_IO_stdin_used+0x1b1f>
imul   $0x65726f,0x6e(%bx),%esp
jae    8055e8d <_IO_stdin_used+0x1b29>
insl   (%dx),%es:(%di)
popa
jae    8055e94 <_IO_stdin_used+0x1b30>
add    %dh,0x6c(%ebx)
add    %dl,0x4c(%ebx)
add    %dh,0x70(%ebx)
imul   $0x444950,0x53(%eax,%eax,1),%esp
jae    8055eb0 <_IO_stdin_used+0x1b4c>
popa
arpl   %bp,0x70(%ebx)
add    %dl,0x54(%ebx)
inc    %ecx
inc    %ebx
dec    %ebx
push   %eax
add    %dh,0x74(%ebx)
popa
jb     8055ec1 <_IO_stdin_used+0x1b5d>
pop    %edi
arpl   %bp,0x64(%edi)
add    %dl,%gs:0x5f(%ebx)
inc    %ebx
dec    %edi
inc    %esp
inc    %ebp
add    %dh,0x74(%ebx)
popa
jb     8055ed3 <_IO_stdin_used+0x1b6f>
pop    %edi
jae    8055ed6 <_IO_stdin_used+0x1b72>
popa
arpl   %bp,0x0(%ebx)
jae    8055edc <_IO_stdin_used+0x1b78>
popa
je     8055ed0 <_IO_stdin_used+0x1b6c>
add    %dh,0x74(%ebx)
popa
je     8055ee6 <_IO_stdin_used+0x1b82>
jae    8055e73 <_IO_stdin_used+0x1b0f>
push   %ebx
push   %esp
inc    %ecx
push   %esp
push   %ebp
push   %ebx
add    %dl,0x54(%ebx)
dec    %ecx
dec    %ebp
inc    %ebp
add    %dh,0x75(%ebx)
jo     8055eeb <_IO_stdin_used+0x1b87>
imul   $0x49475055,0x53(%eax,%eax,1),%esp
inc    %esp
add    %dh,0x75(%ebx)
jo     8055ef9 <_IO_stdin_used+0x1b95>
jb     8055f04 <_IO_stdin_used+0x1ba0>
add    %dl,0x55(%ebx)
push   %eax
inc    %edi
push   %edx
push   %eax
add    %dh,0x76(%ebx)
imul   $0x49475653,0x0(%si),%esp
inc    %esp
add    %dh,0x76(%ebx)
addr16 jb 8055f1c <_IO_stdin_used+0x1bb8>
jne    8055f1f <_IO_stdin_used+0x1bbb>
add    %dl,0x56(%ebx)
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %dh,0x76(%ebx)
jne    8055f25 <_IO_stdin_used+0x1bc1>
add    %dl,%fs:0x56(%ebx)
push   %ebp
dec    %ecx
inc    %esp
add    %dh,0x76(%ebx)
jne    8055f3b <_IO_stdin_used+0x1bd7>
gs
jb     8055ecb <_IO_stdin_used+0x1b67>
push   %ebx
push   %esi
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %dh,0x79(%ebx)
jae    8055f4a <_IO_stdin_used+0x1be6>
imul   $0x53595300,0x65(%ebp),%ebp
push   %esp
inc    %ebp
dec    %ebp
add    %dh,0x73(%ecx,%eiz,2)
imul   $0x0,0x64(%ecx),%ebp
push   %esp
inc    %ecx
push   %ebx
dec    %ebx
dec    %ecx
inc    %esp
add    %dh,0x65(%esp,%eiz,2)
jbe    8055ef4 <_IO_stdin_used+0x1b90>
push   %esp
inc    %esp
inc    %ebp
push   %esi
add    %dh,0x63(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    8055f6d <_IO_stdin_used+0x1c09>
je     8055f01 <_IO_stdin_used+0x1b9d>
push   %esp
dec    %eax
inc    %ebx
dec    %esi
push   %esp
add    %dh,0x69(%edi,%eiz,2)
add    %dl,%fs:0x49(%edi,%eax,2)
inc    %esp
add    %dh,0x6d(%ecx,%ebp,2)
outsl  %gs:(%esi),(%dx)
jne    8055f8c <_IO_stdin_used+0x1c28>
add    %dl,0x4f(%ebp,%ecx,2)
push   %ebp
push   %esp
add    %dh,0x6f(%ebp,%ebp,2)
jne    8055f98 <_IO_stdin_used+0x1c34>
add    %dl,0x47(%eax,%edx,2)
dec    %ecx
inc    %esp
add    %dh,0x73(%edx,%esi,2)
jae    8055f30 <_IO_stdin_used+0x1bcc>
push   %esp
push   %edx
push   %ebx
push   %ebx
add    %dh,0x65(%ebx,%esi,2)
jae    8055fad <_IO_stdin_used+0x1c49>
add    %dl,0x45(%ebx,%edx,2)
push   %ebx
push   %ebx
add    %dh,0x65(%ebx,%esi,2)
jae    8055fb9 <_IO_stdin_used+0x1c55>
imul   $0x69737400,0x6e(%edi),%ebp
add    %dl,%fs:0x49(%ebx,%edx,2)
inc    %esp
add    %dh,0x69(%ebx,%esi,2)
add    %dh,0x73(%si)
imul   $0x5a495354,0x0(%edx),%edi
add    %dh,0x0(%esp,%esi,2)
push   %esp
push   %esp
add    %dh,0x79(%esp,%esi,2)
cmp    %al,(%eax)
jne    8055fcf <_IO_stdin_used+0x1c6b>
jo     8055fe4 <_IO_stdin_used+0x1c80>
outsl  %ds:(%esi),(%dx)
arpl   %si,0x0(%eax)
push   %ebp
push   %eax
push   %edx
dec    %edi
inc    %ebx
push   %eax
add    %dh,0x63(%ebp)
insl   (%dx),%es:(%edi)
add    %dh,%fs:0x63(%ebp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
add    %dh,0x69(%ebp)
fs
pop    %edi
push   $0x6b6361
jne    8056000 <_IO_stdin_used+0x1c9c>
popa
jae    8056001 <_IO_stdin_used+0x1c9d>
add    %dl,0x4d(%ebp)
inc    %ecx
push   %ebx
dec    %ebx
add    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x70(%ebp)
jb     8055fa7 <_IO_stdin_used+0x1c43>
push   %ebp
push   %eax
push   %edx
add    %dh,0x70(%ebp)
jb     805601e <_IO_stdin_used+0x1cba>
arpl   %si,0x0(%eax)
jne    8056027 <_IO_stdin_used+0x1cc3>
gs
jb     8056025 <_IO_stdin_used+0x1cc1>
jae    8055fb9 <_IO_stdin_used+0x1c55>
push   %ebp
push   %ebx
inc    %ebp
push   %edx
dec    %esi
push   %ebx
add    %dh,0x73(%ebp)
gs
jb     8056039 <_IO_stdin_used+0x1cd5>
imul   $0x72737500,0x65(%ebp),%ebp
jo     8056040 <_IO_stdin_used+0x1cdc>
imul   $0x6c697475,(%eax),%eax
add    %dl,0x54(%ebp)
dec    %ecx
dec    %ebp
inc    %ebp
add    %dh,0x74(%ebp)
jae    805604d <_IO_stdin_used+0x1ce9>
jae    8055fe1 <_IO_stdin_used+0x1c7d>
push   %ebp
push   %esp
push   %ebx
dec    %esi
push   %ebx
add    %dh,0x6d(%esi)
pop    %edi
fs
popa
je     805604f <_IO_stdin_used+0x1ceb>
add    %al,0x54(%ecx,%eax,2)
inc    %ecx
add    %dh,0x6d(%esi)
pop    %edi
gs
js     805605f <_IO_stdin_used+0x1cfb>
add    %al,0x58(%ebp)
inc    %ebp
add    %dh,0x6d(%esi)
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x42494c,0x0(%edx),%esp
jbe    8056079 <_IO_stdin_used+0x1d15>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
dec    %esp
inc    %ebx
dec    %ebx
add    %dh,0x6d(%esi)
pop    %edi
jae    805608f <_IO_stdin_used+0x1d2b>
popa
arpl   %bp,0x0(%ebx)
push   %ebx
push   %esp
inc    %ecx
inc    %ebx
dec    %ebx
add    %dh,0x6e(%edi)
popa
insl   (%dx),%es:(%edi)
add    %bh,%gs:0x73(%eax)
je     8056090 <_IO_stdin_used+0x1d2c>
je     8056031 <_IO_stdin_used+0x1ccd>
pop    %eax
push   %ebx
push   %esp
inc    %ecx
push   %esp
add    %bh,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
add    %bl,%gs:0x4f(%edx)
dec    %esi
inc    %ebp
add    %bh,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
imul   $0x49454e4f,%gs:0x5a(%eax,%eax,1),%esp
49
inc    %esp
add    %al,(%eax)
(bad)
repz add $0x8,%al
xor    %dh,%ch
add    $0x8,%al
(bad)
repz add $0x8,%al
loopne 8056062 <_IO_stdin_used+0x1cfe>
add    $0x8,%al
mov    0x980804f4,%eax
hlt
add    $0x8,%al
add    %dh,%ch
add    $0x8,%al
(bad)
push   %ebp
add    $0x555db08,%eax
or     %ah,%ah
push   %ebp
add    $0x555f308,%eax
or     %bh,%bl
push   %ebp
add    $0x555d608,%eax
or     %bl,%bl
push   %ebp
add    $0x555f308,%eax
or     %bh,%bl
push   %ebp
add    $0x5560508,%eax
or     %al,(%esi)
push   %esi
add    $0x5560708,%eax
or     %cl,(%esi,%edx,2)
add    $0x5560508,%eax
or     %al,(%esi)
push   %esi
add    $0x5560708,%eax
or     %dl,(%edx)
push   %esi
add    $0x5562e08,%eax
or     %dh,(%ecx)
push   %esi
add    $0x558dc08,%eax
or     %dl,(%edx)
push   %esi
add    $0x5562e08,%eax
or     %dh,(%ecx)
push   %esi
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
inc    %edx
push   %esi
add    $0x4708,%eax
add    %al,0x56(%edi)
add    $0x4a08,%eax
add    %cl,0x56(%ebp)
add    $0x4d08,%eax
add    %dl,0x56(%ebp)
add    $0x4e08,%eax
add    %dl,0x5(%esi,%edx,2)
or     %dl,0x0(%eax)
add    %al,(%eax)
or     0x8(%ebp,%eax,1),%eax
push   %edx
add    %al,(%eax)
add    %dl,0x5308055b(%edx)
add    %al,(%eax)
add    %ah,0x5408055b(%ecx)
add    %al,(%eax)
add    %ah,%ch
inc    %ebx
add    $0x5508,%eax
add    %dh,(%ebx)
pop    %edx
add    $0x6308,%eax
add    %ch,(%ecx)
push   %edi
add    $0x6608,%eax
add    %bl,0x56(%ebp)
add    $0x6708,%eax
add    %dl,0x6a08055e(%eax)
add    %al,(%eax)
add    %ah,0x56(%ebx)
add    $0x6b08,%eax
add    %ah,0x5(%esi,%edx,2)
or     %ch,0x0(%ebp)
add    %al,(%eax)
imul   $0x8,0x5(%esi),%edx
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ch,0x56(%edx)
add    $0x6f08,%eax
add    %al,0x5f(%edx)
add    $0x7008,%eax
add    %cl,(%esp,%eax,2)
add    $0x7208,%eax
add    %dl,%ah
pop    %ebp
add    $0x7308,%eax
add    %ch,0x7408055b(%esi)
add    %al,(%eax)
add    %ch,%dl
inc    %esp
add    $0x7508,%eax
add    %bh,0x7608055a
add    %al,(%eax)
add    %dh,0x56(%ebx)
add    $0x7908,%eax
add    %bh,0x56(%ecx)
add    $0x7e08,%eax
add    %al,0x80556(%edx)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
inc    %edx
push   %esi
add    $0x5568408,%eax
or     %al,0x0(%edi)
add    %al,(%eax)
imul   $0x5597008,0x5(%ecx),%ebx
or     %dl,0x0(%eax)
add    %al,(%eax)
or     0x8(%ebp,%eax,1),%eax
mov    %edx,0x5(%esi)
or     %dl,0x0(%ebp)
add    %al,(%eax)
cmp    $0x4308055a,%eax
pop    %edx
add    $0x6108,%eax
add    %ch,(%eax)
pop    %eax
add    $0x5568e08,%eax
or     %ah,0x0(%ebx)
add    %al,(%eax)
leave
push   %edi
add    $0x5568e08,%eax
or     %ah,0x0(%edi)
add    %al,(%eax)
xchg   %eax,%esi
push   %esi
add    $0x5569d08,%eax
or     %ch,0x0(%esi)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %esi
add    $0x556a908,%eax
or     %dh,0x0(%eax)
add    %al,(%eax)
or     $0x44,%al
add    $0x5568a08,%eax
or     %dh,0x0(%edx)
add    %al,(%eax)
dec    %eax
push   %esi
add    $0x59b6e08,%eax
or     %dh,0x0(%eax,%eax,1)
add    %ch,0x56b20805(%esi,%edx,2)
add    $0x7508,%eax
add    %bh,-0x3ff7faaa(%edx)
push   %esi
add    $0x7808,%eax
add    %ch,%bl
inc    %ebx
add    $0x55e7b08,%eax
or     %bh,0x0(%ecx)
add    %al,(%eax)
ljmp   $0x593,$0xa4080544
or     %bh,0x0(%edx)
add    %al,(%eax)
(bad)
push   %esi
add    $0x556ca08,%eax
or     %bh,0x0(%esi)
add    %al,(%eax)
(bad)
push   %esi
add    $0x5568208,%eax
or     %cl,%dh
push   %esi
add    $0x556d308,%eax
or     %ch,%bh
push   %esi
add    $0x556f608,%eax
or     %dl,(%edx)
push   %edi
add    $0x5571a08,%eax
or     %ch,0x35080557
push   %edi
add    $0x5574e08,%eax
or     %dl,0x57(%edi)
add    $0x544b508,%eax
or     %ah,%ah
(bad)
add    $0x5577008,%eax
or     %dh,0x5(%edi,%edx,2)
or     %dh,0x5(%esp,%eax,2)
or     %cl,(%ebx,%eax,4)
add    $0x5447908,%eax
or     %al,-0x7d(%eax)
add    $0x5447e08,%eax
or     %al,-0x7cf7fa7d(%eax)
inc    %esp
add    $0x583b808,%eax
or     %cl,-0x6ef7faa9(%ebp)
push   %edi
add    $0x557a308,%eax
or     %bh,%al
addl   $0x8,0x557a808
and    %al,0x557ae08(%ebp,%eax,1)
or     %dh,-0x31f7faa9(%ebx)
push   %edi
add    $0x5845008,%eax
or     %dl,%bl
push   %edi
add    $0x5849008,%eax
or     %bh,-0x27f7fabc(%ebx)
test   %al,0x557d908
or     %ah,%bh
push   %edi
add    $0x557fb08,%eax
or     %dl,-0xf7faa9(%ecx)
push   %edi
add    $0x5851808,%eax
or     %al,(%eax,%ebx,2)
add    $0x5854008,%eax
or     %cl,(%edx)
pop    %eax
add    $0x5858c08,%eax
or     %ah,%al
inc    %esp
add    $0x5580f08,%eax
or     %al,%dl
inc    %esp
add    $0x585d408,%eax
or     %bh,-0x79eff7fb(%esp,%eax,2)
add    $0x544c708,%eax
or     %cl,0x5(%esi,%eax,4)
or     %ch,0x90080558
xchg   %al,0x5443108
or     %dl,%al
xchg   %al,0x5443608
or     %al,(%edi,%eax,4)
add    $0x5583208,%eax
or     %cl,0x5(%edi,%eax,4)
or     %bh,(%ebx)
inc    %esp
add    $0x5879c08,%eax
or     %al,0x44(%eax)
add    $0x587e008,%eax
or     %al,0x44(%ebp)
add    $0x5882008,%eax
or     %dh,(%edi)
pop    %eax
add    $0x5583b08,%eax
or     %cl,0x5c080544(%eax)
mov    %al,0x5585808
or     %cl,-0x72f7fa78(%eax)
inc    %esp
add    $0x588bc08,%eax
or     %dl,-0x1bf7fabc(%edx)
mov    %al,0x5585e08
or     %ah,(%ecx,%ecx,4)
add    $0x5586408,%eax
or     %dh,-0x77(%eax)
add    $0x5586b08,%eax
or     %bh,-0x33f7fa77(%eax)
inc    %esp
add    $0x589ec08,%eax
or     %dh,0x58(%ecx)
add    $0x58a3008,%eax
or     %dh,0x58(%edi)
add    $0x58a5c08,%eax
or     %bh,0x58(%esi)
add    $0x58aa008,%eax
or     %al,-0x7523f7fb(%eax,%ebx,2)
add    $0x544d108,%eax
or     %cl,(%eax)
mov    0x544d608,%eax
or     %al,-0x75(%eax)
add    $0x5568208,%eax
or     %al,0x80556(%edx)
add    %al,(%eax)
add    %bl,-0x7bf7faab(%ecx)
push   %esi
add    $0x4c95008,%eax
or     %dh,(%eax)
ret    $0x804
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
mov    0x5(%eax),%ebx
or     %dl,-0x1ff7faa8(%eax)
xlat   %ds:(%ebx)
add    $0x8,%al
pusha
mov    $0x40804,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %dl,-0x64f7faa8(%ebp)
pop    %eax
add    $0x4dd0008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    %al,-0x5c(%eax)
pop    %eax
add    $0x558ab08,%eax
or     %dl,-0x23(%eax)
add    $0x8,%al
inc    %eax
mov    $0x80804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    %al,-0x4c(%eax)
pop    %eax
add    $0x558bb08,%eax
or     %dh,-0x24(%eax)
add    $0x8,%al
inc    %eax
mov    $0xb0804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x39(%eax)
pop    %eax
add    $0x558cf08,%eax
or     %dh,0x400804dc(%eax)
mov    $0xb0804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x25(%eax)
pop    %eax
add    $0x594e708,%eax
or     %ah,%al
fldl   (%eax,%ecx,1)
inc    %eax
mov    $0x100804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,-0x1a(%eax)
pop    %eax
add    $0x558f208,%eax
or     %dl,0x400804dd(%eax)
mov    $0x100804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,-0xb(%eax)
pop    %eax
add    $0x558fc08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055902(%eax)
cld
pop    %eax
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
sbbb   $0x5c,-0x5cf7faa4(%ebp)
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055908(%eax)
mov    %eax,0xc008055c
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x10804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x2000000,%eax
add    %al,(%eax)
orb    $0x59,(%edi)
add    $0x5591508,%eax
or     %dl,(%eax)
lock add $0x8,%al
nop
mov    $0x50804,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
sbbb   $0x59,(%ebx)
add    $0x5592008,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x40804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %ch,(%eax)
pop    %eax
add    $0x5568e08,%eax
or     %al,(%eax)
call   e9056df2 <kb_main_total+0xe0ff8b62>
add    $0x8,%al
sbb    (%eax),%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %ah,(%eax)
and    $0x7b080559,%eax
pop    %esi
add    $0x4ccd008,%eax
or     %ah,-0x3e(%eax)
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x2b(%eax)
pop    %ecx
add    $0x5593308,%eax
or     %dh,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
adc    %bh,(%ebx)
pop    %ecx
add    $0x5593f08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x10804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax)
inc    %ebx
pop    %ecx
add    $0x5594c08,%eax
or     %dh,-0x1b(%eax)
add    $0x8,%al
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
inc    %eax
push   %edx
pop    %ecx
add    $0x55e7b08,%eax
or     %dh,%al
rolb   %cl,(%eax,%ecx,1)
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
inc    %eax
in     (%dx),%al
push   %esp
add    $0x55af708,%eax
or     %dl,(%eax)
enter  $0x804,$0x30
ret    $0x804
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
pop    %edx
pop    %ecx
add    $0x5596108,%eax
or     %ah,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
adc    %ch,0x59(%eax)
add    $0x5596f08,%eax
or     %al,%al
loope  80566ef <_IO_stdin_used+0x238b>
or     %al,-0x48(%eax)
add    $0x8,%al
sbb    (%eax),%eax
add    %al,(%eax)
add    %al,(%edx)
add    %eax,(%eax)
add    $0x4000000,%eax
add    %al,(%eax)
and    %dh,0x59(%esi)
add    $0x59b7b08,%eax
or     %dl,-0x30(%eax)
add    $0x8,%al
cmpb   $0x0,0x30804(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
adc    %bh,0x5(%ecx,%ebx,2)
or     %bh,-0x65(%ebx)
add    $0x4d05008,%eax
or     %al,0x30804b8(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %dl,0x5(%esi,%edx,2)
or     %dh,%al
push   %esp
add    $0x4c5c008,%eax
or     %dh,-0x43(%eax)
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
subb   $0x57,(%ecx)
add    $0x5598008,%eax
or     %al,(%eax)
call   e9056f72 <kb_main_total+0xe0ff8ce2>
add    $0x8,%al
sbb    (%eax),%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    $0x0,%al
add    %ah,(%eax)
push   $0x56
add    $0x554f008,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x10804,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
addb   $0x5,0x54f00805(%ecx,%ebx,2)
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x10804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
or     $0x57,%cl
add    $0x5568e08,%eax
or     %dl,(%eax)
out    %eax,$0x4
or     %al,(%eax)
loope  80567d3 <_IO_stdin_used+0x246f>
or     %cl,(%edi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %ah,(%eax)
push   $0x8e080557
push   %esi
add    $0x4e80008,%eax
or     %al,(%eax)
loope  80567f3 <_IO_stdin_used+0x248f>
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %ah,(%eax)
fist   0x5(%edi)
or     %cl,0x20080559(%ebx)
out    %al,$0x4
or     %al,-0x48(%eax)
add    $0x8,%al
pop    %ds
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x2000000
add    %al,(%eax)
inc    %eax
jae    8056881 <_IO_stdin_used+0x251d>
add    $0x55f7a08,%eax
or     %dh,%al
lret   $0x804
xor    %al,%dl
add    $0x8,%al
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x66(%eax)
push   %ebp
add    $0x5568508,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adcb   $0x59,-0x66f7faa7(%ebx)
add    $0x4d74008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %bl,0x7b080559(%edi)
pop    %esi
add    $0x4ccd008,%eax
or     %ah,-0x3e(%eax)
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x59(%eax)
pop    %ecx
add    $0x559ac08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
mov    $0x59,%cl
add    $0x559b808,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055663(%eax)
lock push %esp
add    $0x4c5c008,%eax
or     %ah,0x10804b8(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
cmpb   $0x59,-0x3cf7faa7(%edi)
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x2000000,%eax
add    %al,(%eax)
cmpb   $0x5,0x5b(%edx)
or     %al,%bh
pop    %ecx
add    $0x4d4b008,%eax
or     %dh,0x50804ba(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %cl,%bl
pop    %ecx
add    $0x559d008,%eax
or     %dh,%al
roll   %cl,(%eax,%ecx,1)
inc    %eax
mov    $0x40804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %dl,%ch
pop    %ecx
add    $0x559da08,%eax
or     %dh,-0x28(%eax)
add    $0x8,%al
jo     805692e <_IO_stdin_used+0x25ca>
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
fistp  0x5(%ecx)
or     %ah,%dh
pop    %ecx
add    $0x4eff008,%eax
or     %ah,%al
loopne 8056993 <_IO_stdin_used+0x262f>
or     %cl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x1000000
add    %al,(%eax)
inc    %eax
in     (%dx),%eax
pop    %ecx
add    $0x559f108,%eax
or     %ah,0x200804d2(%eax)
mov    $0x80804,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
adc    %dh,%ch
pop    %ecx
add    $0x559fa08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0xd0804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
and    %bh,%bh
pop    %ecx
add    $0x55a0808,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
nop
mov    $0x80804,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %cl,(%edi)
pop    %edx
add    $0x55a1708,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0xb0804,%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x4000000,%eax
add    %al,(%eax)
and    %ah,(%ebx)
pop    %edx
add    $0x55a2708,%eax
or     %dl,-0x2e(%eax)
add    $0x8,%al
lock mov $0x80804,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
adc    %ch,0x56b20805(%esi,%edx,2)
add    $0x4c60008,%eax
or     %ah,%al
ret    $0x804
or     (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x2b(%eax)
pop    %edx
add    $0x556b208,%eax
or     %dh,-0x39(%eax)
add    $0x8,%al
inc    %eax
mov    $0x70804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
xor    0x5(%edx),%bl
or     %dh,(%edi)
pop    %edx
add    $0x4d9b008,%eax
or     %al,-0x40(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
cmp    $0x5a,%al
add    $0x55a4208,%eax
or     %dl,%al
out    %eax,(%dx)
add    $0x8,%al
shl    $0x4,%al
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x1000000
add    %al,(%eax)
inc    %eax
cmpsb  %es:(%edi),%ds:(%esi)
push   %edi
add    $0x55a4808,%eax
or     %dh,-0x3ff7fb2f(%eax)
mov    $0x10804,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x4a(%eax)
pop    %edx
add    $0x55a4f08,%eax
or     %ah,-0x27(%eax)
add    $0x8,%al
xor    %al,%cl
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
push   %esp
pop    %edx
add    $0x55a5b08,%eax
or     %dh,-0x5ff7fb11(%eax)
loopne 8056b13 <_IO_stdin_used+0x27af>
or     %cl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x1000000
add    %al,(%eax)
inc    %eax
negl   0x5(%eax)
or     %cl,0x5a(%eax)
add    $0x4d1b008,%eax
or     %al,%al
mov    $0x10804,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x5d(%eax)
push   %esi
add    $0x55a4808,%eax
or     %dh,-0x3ff7fb2f(%eax)
mov    $0x10804,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
bound  %ebx,0x5(%edx)
or     %cl,0x80556(%esi)
in     $0x4,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
and    %ch,0x5a(%eax)
add    $0x55a6e08,%eax
or     %ah,-0x27(%eax)
add    $0x8,%al
xor    %al,%cl
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
je     8056bfc <_IO_stdin_used+0x2898>
add    $0x55a7c08,%eax
or     %dh,-0x5ff7fb11(%eax)
loopne 8056bb3 <_IO_stdin_used+0x284f>
or     %cl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x1000000
add    %al,(%eax)
inc    %eax
test   %bl,0x5(%edx)
or     %cl,-0x5ff7faa6(%edx)
fiaddl (%eax,%ecx,1)
add    %al,%cl
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
nop
pop    %edx
add    $0x55a9708,%eax
or     %dl,-0x7ff7fb11(%eax)
loopne 8056bf3 <_IO_stdin_used+0x288f>
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x1000000
add    %al,(%eax)
inc    %eax
sahf
pop    %edx
add    $0x55aa308,%eax
or     %ah,0x804da(%eax)
roll   $0x5,(%eax,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
test   $0x5a,%al
add    $0x55aae08,%eax
or     %dl,-0x7ff7fb11(%eax)
loopne 8056c33 <_IO_stdin_used+0x28cf>
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x1000000
add    %al,(%eax)
inc    %eax
(bad)
pop    %ecx
add    $0x559db08,%eax
or     %dh,-0x28(%eax)
add    $0x8,%al
jo     8056c0e <_IO_stdin_used+0x28aa>
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
imul   $0x5597008,0x5(%ecx),%ebx
or     %dh,%al
out    %eax,(%dx)
add    $0x8,%al
loopne 8056c4e <_IO_stdin_used+0x28ea>
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,-0x4c(%eax)
pop    %edx
add    $0x55abc08,%eax
or     %dl,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
adc    %al,%ah
pop    %edx
add    $0x55aca08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    $0x5a,%al
add    $0x55aca08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055ad8(%eax)
fistp  0x5(%edx)
or     %dh,-0x32(%eax)
add    $0x8,%al
add    %bh,0x30804(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax)
jecxz  8056d5c <_IO_stdin_used+0x29f8>
add    $0x55ae908,%eax
or     %al,(%eax)
jmp    8056d0f <_IO_stdin_used+0x29ab>
or     %dl,0xa0804c3(%eax)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
inc    %eax
inc    %esp
pop    %ebp
add    $0x55d4b08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x10804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
out    %eax,(%dx)
pop    %edx
add    $0x55af408,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x40804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055af9(%eax)
add    %bl,0x5(%ebx)
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x80804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
addb   $0x5b,(%edi)
add    $0x55b0f08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x80804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adcb   $0x5b,(%edi)
add    $0x55b1d08,%eax
or     %ah,(%eax)
out    %al,$0x4
or     %al,-0x48(%eax)
add    $0x8,%al
pop    %ds
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
inc    %eax
and    0x5(%ebx),%ebx
or     %dh,%bh
pop    %edx
add    $0x4d74008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %ch,(%ebx)
pop    %ebx
add    $0x55b2f08,%eax
or     %dl,%al
(bad)
add    $0x8,%al
nop
mov    $0x50804,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
xorb   $0x5b,(%ebx)
add    $0x55b3908,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x80804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
addb   $0x5,0x5b(%ecx)
or     %bh,(%ecx)
pop    %ebx
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,0x8055b49(%eax)
movsb  %ds:(%esi),%es:(%edi)
xchg   %eax,%ebx
add    $0x4dfc008,%eax
or     %ah,%al
roll   $0x8,(%eax,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
and    %dl,0x5b(%ebx)
add    $0x55b5a08,%eax
or     %al,0x400804e3(%eax)
mov    $0x180804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x62(%eax)
pop    %ebx
add    $0x55b6708,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
inc    %eax
insb   (%dx),%es:(%edi)
pop    %ebx
add    $0x55b7208,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x80804,%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    $0x1000000,%eax
add    %al,(%eax)
inc    %eax
inc    %esp
pop    %esp
add    $0x55c4908,%eax
or     %al,-0x25(%eax)
add    $0x8,%al
add    $0x4,%cl
or     %al,0x0
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
adc    %bh,0x5b(%eax)
add    $0x559c708,%eax
or     %dh,-0x4ff7fb2c(%eax)
mov    $0x50804,%edx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %bh,0x5b(%esi)
add    $0x55b8308,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
loopne 8056ec8 <_IO_stdin_used+0x2b64>
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %al,-0x73f7faa5(%esi)
pop    %ebx
add    $0x4c5c008,%eax
or     %al,0x50804ba(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %dl,-0x64f7faa5(%eax)
pop    %ebx
add    $0x4c5c008,%eax
or     %dh,%al
mov    $0x50804,%ecx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %bl,-0x58f7faa5(%edi)
pop    %ebx
add    $0x4c5c008,%eax
or     %ah,(%eax)
mov    $0x50804,%edx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %ch,0x5bb30805(%ebx,%ebx,2)
add    $0x4d5c008,%eax
or     %al,%al
mov    $0x50804,%ecx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %bh,0x6308055b(%eax)
pop    %esp
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %bh,-0x3af7faa5(%edi)
pop    %ebx
add    $0x4d51008,%eax
or     %dl,-0x46(%eax)
add    $0x8,%al
add    $0x1000000,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %dl,0x56(%ebp)
add    $0x55bc908,%eax
or     %dh,-0x2a(%eax)
add    $0x8,%al
adc    %bh,0x60804(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
or     $0x5b,%bh
add    $0x55bd608,%eax
or     %dh,-0x2a(%eax)
add    $0x8,%al
adc    %bh,0x60804(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x805566b(%eax)
fstpl  0x5(%ebx)
or     %dl,(%eax)
(bad)
add    $0x8,%al
loopne 8056fea <_IO_stdin_used+0x2c86>
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    $0x5b,%bl
add    $0x55bea08,%eax
or     %dl,(%eax)
(bad)
add    $0x8,%al
loopne 805700a <_IO_stdin_used+0x2ca6>
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
xor    $0x5b,%cl
add    $0x55bf708,%eax
or     %ah,-0x15(%eax)
add    $0x8,%al
rol    $0x4,%bl
or     %cl,(%edx)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
inc    %eax
std
pop    %ebx
add    $0x55c0408,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055c0b(%eax)
adc    0x8(%ebp,%eax,1),%bl
rol    $0x4,%ch
or     %al,-0x48(%eax)
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
sbbb   $0x5c,(%ecx)
add    $0x55c2008,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,0x27100000
pop    %esp
add    $0x55c2d08,%eax
or     %al,%al
jmp    80570ef <_IO_stdin_used+0x2d8b>
or     %dh,%al
ret
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
add    %al,0x50000(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x33(%eax)
pop    %esp
add    $0x556a908,%eax
or     %dh,%al
call   c1457912 <kb_main_total+0xb93f9682>
add    $0x8,%al
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %ah,0x56a90805(%esi,%edx,2)
add    $0x4e8f008,%eax
or     %al,-0x47(%eax)
add    $0x8,%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax)
ss
pop    %esp
add    $0x55c3d08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055c43(%eax)
dec    %eax
pop    %esp
add    $0x4db8008,%eax
or     %ah,(%eax)
mov    $0x40804,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %cl,0x5c(%ebp)
add    $0x55c5608,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055c5c(%eax)
push   %esi
pop    %esp
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
addb   $0x5c,0x62080559(%ebp)
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
subb   $0x5,0x5c(%eax)
or     %bh,(%esi)
pop    %esp
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
subb   $0x5,0x5c(%esi)
or     %ah,(%ecx)
pop    %esp
add    $0x4ea3008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %dh,0x5c(%ebp)
add    $0x55adf08,%eax
or     %dh,-0x32(%eax)
add    $0x8,%al
add    %bh,0x30804(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %bh,0x5c(%edx)
add    $0x55d9108,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x20804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %bh,0x5c(%esi)
add    $0x55c8408,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
orb    $0x5c,-0x7bf7faa4(%edx)
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adcb   $0x5c,-0x68f7faa4(%edx)
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
sbbb   $0x5,0x5ca20805(%esp,%ebx,2)
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
subb   $0x5c,-0x50f7faa4(%eax)
add    $0x4d67008,%eax
or     %dl,(%eax)
mov    $0x60804,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055642(%eax)
test   %dl,0x5(%esi)
or     %dl,-0x37(%eax)
add    $0x8,%al
xor    %al,%dl
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x4a(%eax)
pop    %esp
add    $0x55cbe08,%eax
or     %al,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
inc    %eax
dec    %eax
push   %esi
add    $0x59b6e08,%eax
or     %al,-0x34(%eax)
add    $0x8,%al
mov    0x50804c1,%al
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
and    %dl,-0x68f7faa2(%eax)
pop    %esi
add    $0x4cc4008,%eax
or     %ah,0x50804c1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x13000000
add    %al,(%eax)
and    %cl,(%esp,%eax,2)
add    $0x5568a08,%eax
or     %dh,%al
fiaddl (%eax,%ecx,1)
pusha
roll   $0x5,(%eax,%ecx,1)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
and    %al,%dh
pop    %esp
add    $0x55ccc08,%eax
or     %ah,(%eax)
in     (%dx),%al
add    $0x8,%al
and    %al,%ah
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
add    %al,0x50000(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x2e(%eax)
pop    %esp
add    $0x5589008,%eax
or     %ah,%al
xlat   %ds:(%ebx)
add    $0x8,%al
pusha
mov    $0x40804,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
xlat   %ds:(%ebx)
pop    %esp
add    $0x554f008,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x10804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
sbb    $0x5c,%ah
add    $0x55ce308,%eax
or     %dl,-0x30(%eax)
add    $0x8,%al
cmpb   $0x0,0x30804(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
adc    %cl,(%ebx)
inc    %esp
add    $0x5568908,%eax
or     %dl,-0x6ff7fb34(%eax)
roll   $0x5,(%eax,%ecx,1)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
and    %dh,0x5c(%esi)
add    $0x55adf08,%eax
or     %dh,0x400804cf(%eax)
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax)
out    %eax,$0x5c
add    $0x55cef08,%eax
or     %al,(%eax)
rolb   (%eax,%ecx,1)
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
adc    %dh,%bl
pop    %esp
add    $0x55cfb08,%eax
or     %dl,(%eax)
iret
add    $0x8,%al
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
adc    %bh,%bh
pop    %esp
add    $0x55d0708,%eax
or     %ah,-0x31(%eax)
add    $0x8,%al
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
adc    %cl,(%ebx)
pop    %ebp
add    $0x55d1308,%eax
or     %al,%al
into
add    $0x8,%al
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
adc    %bh,0x56(%ecx)
add    $0x55adf08,%eax
or     %ah,(%eax)
into
add    $0x8,%al
add    %bh,0x30804(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
adc    %dl,(%edi)
pop    %ebp
add    $0x55d1e08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0xc0804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
and    $0x2b08055d,%eax
pop    %ebp
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
or     $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
xor    %ebx,0x5(%ebp)
or     %bh,(%ecx)
pop    %ebp
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
or     $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
and    %al,0x5d(%ecx)
add    $0x55d4808,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %cl,0x5d(%edi)
add    $0x55d5408,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x40804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax)
pop    %ecx
pop    %ebp
add    $0x55d5d08,%eax
or     %al,-0x29(%eax)
add    $0x8,%al
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax)
popa
pop    %ebp
add    $0x55d6808,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pop    %ebx
add    $0x55d6c08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adcb   $0x5b,-0x64f7faa5(%edx)
add    $0x4c5c008,%eax
or     %dh,%al
mov    $0x50804,%ecx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %ch,0x5d(%edi)
add    $0x55d7408,%eax
or     %al,%al
fadds  (%eax,%ecx,1)
adc    %al,%al
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
xchg   %eax,%esi
push   %esi
add    $0x5569d08,%eax
or     %dh,-0x11(%eax)
add    $0x8,%al
pusha
loopne 8057653 <_IO_stdin_used+0x32ef>
or     %cl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
inc    %eax
jns    80576bf <_IO_stdin_used+0x335b>
add    $0x55d7f08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x80804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    $0x5d,%ah
add    $0x55f3108,%eax
or     %dl,0x600804d7(%eax)
mov    $0x50804,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
test   %ebx,0x5(%ebp)
or     %dh,(%ecx)
pop    %edi
add    $0x4d79008,%eax
or     %dh,-0x45(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %cl,0x5d900805(%ebp,%ebx,2)
add    $0x4d79008,%eax
or     %dh,-0x45(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %dl,0x5d9b0805(%ebp,%ebx,2)
add    $0x4e96008,%eax
or     %dl,-0x48(%eax)
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %ah,-0x58f7faa3(%edx)
pop    %ebp
add    $0x4da0008,%eax
or     %ah,%al
mov    $0x50804,%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x46(%eax)
push   %esi
add    $0x556c008,%eax
or     %dl,-0x11(%eax)
add    $0x8,%al
inc    %eax
loopne 8057733 <_IO_stdin_used+0x33cf>
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
inc    %eax
popa
xchg   %eax,%ebx
add    $0x544fa08,%eax
or     %ah,0x400804c5(%eax)
ret    $0x804
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
adc    %ch,0x5db20805(%ebp,%ebx,2)
add    $0x4e9d008,%eax
or     %al,0x30804b8(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %dh,-0x44f7faa3(%esi)
pop    %ebp
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055dc0(%eax)
(bad)
pop    %ebp
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055f36(%eax)
cmp    $0x5f,%al
add    $0x4dbd008,%eax
or     %al,%al
roll   $0x5,(%eax,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
and    %al,0x5f(%edx)
add    $0x55f3c08,%eax
or     %dl,%al
fildl  (%eax,%ecx,1)
rol    $0x4,%cl
or     %al,0x0
add    %al,(%eax)
add    %al,0x13000000
add    %al,(%eax)
and    %cl,%dl
pop    %ebp
add    $0x55c6608,%eax
or     %dl,0x400804ea(%eax)
mov    $0x10804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
adc    %dl,%al
pop    %ebp
add    $0x55f3108,%eax
or     %dl,0x400804d7(%eax)
mov    $0x40804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x2000000,%eax
add    %al,(%eax)
and    %ch,0x5a(%ecx)
add    $0x55a6f08,%eax
or     %dl,(%eax)
flds   (%eax,%ecx,1)
rol    %al
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
jne    80578bc <_IO_stdin_used+0x3558>
add    $0x55a7d08,%eax
or     %dh,(%eax)
out    %eax,(%dx)
add    $0x8,%al
and    %ah,%al
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    $0x1000000,%eax
add    %al,(%eax)
inc    %eax
mov    0xf008055b,%eax
push   %esp
add    $0x4c5c008,%eax
or     %ah,(%eax)
mov    $0x10804,%edx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %cl,0x5f(%ebx)
add    $0x55f5008,%eax
or     %dl,%al
fildl  (%eax,%ecx,1)
rol    $0x4,%cl
or     %al,0x0
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
and    %dh,0x5cbe0805(%ecx,%ebx,2)
add    $0x4df4008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
or     %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
inc    %eax
fcomps 0x5(%ebp)
or     %dh,(%ebx)
pop    %ecx
add    $0x4df7008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
or     %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
adc    %ah,%dl
pop    %ebp
add    $0x55dec08,%eax
or     %ah,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
adc    %dh,%ah
pop    %ebp
add    $0x55abc08,%eax
or     %dl,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
adc    %bh,%bh
pop    %ebp
add    $0x55e0808,%eax
or     %al,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
inc    %eax
divps  0x5596108,%xmm0
or     %ah,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
adc    %bl,(%eax)
pop    %esi
add    $0x55abc08,%eax
or     %dl,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
adc    %ah,(%edx)
pop    %esi
add    $0x5593308,%eax
or     %dh,-0x21(%eax)
add    $0x8,%al
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
adc    %ch,-0x4cf7faa5(%esi)
pop    %ebx
add    $0x4d57008,%eax
or     %dh,0x50804c4(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
sub    0x5(%esi),%bl
or     %ch,0xc008055e
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055e30(%eax)
xor    $0x4008055e,%eax
fildl  (%eax,%ecx,1)
add    $0x4,%cl
or     %al,0x0
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
adc    %bh,(%edx)
pop    %esi
add    $0x55e4108,%eax
or     %al,(%eax)
rolb   %cl,(%eax,%ecx,1)
sarb   $0x0,0x80804(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %al,0x59(%esi)
add    $0x55b5a08,%eax
or     %dh,0x400804e2(%eax)
mov    $0x80804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x48(%eax)
pop    %esi
add    $0x55e5308,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
pusha
mov    $0x80804,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %bl,0x5e(%edx)
add    $0x55e4108,%eax
or     %al,(%eax)
rolb   %cl,(%eax,%ecx,1)
sarb   $0x0,0x80804(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %ah,%ch
inc    %ebx
add    $0x5594c08,%eax
or     %dl,(%eax)
loop   8057aaf <_IO_stdin_used+0x374b>
or     %dl,-0x41(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
sub    $0x60,%al
add    $0x5603208,%eax
or     %dh,%al
les    (%eax,%ecx,1),%eax
inc    %eax
ret    $0x804
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
adc    %ah,0x5e(%esi)
add    $0x544fa08,%eax
or     %ah,0x400804c5(%eax)
ret    $0x804
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %dl,(%eax)
insb   (%dx),%es:(%edi)
pop    %esi
add    $0x55e7308,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x805564e(%eax)
jp     8057b84 <_IO_stdin_used+0x3820>
add    $0x4e21008,%eax
or     %al,(%eax)
mov    $0x50804,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x7b(%eax)
pop    %edx
add    $0x55a8b08,%eax
or     %dl,-0x26(%eax)
add    $0x8,%al
mov    0x50804c0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
sbbb   $0x8,0x5(%esi)
xchg   %ebx,0x5(%esi)
or     %dh,-0x1f(%eax)
add    $0x8,%al
inc    %eax
mov    $0x140804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x4000000,%eax
add    %al,(%eax)
and    %cl,-0x6af7faa2(%esi)
pop    %esi
add    $0x4e12008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
sub    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax,%eax,1)
add    %al,0x4000000
add    %al,(%eax)
and    %dl,-0x67f7faa6(%ecx)
pop    %edx
add    $0x4ef1008,%eax
or     %al,(%eax)
loopne 8057bb3 <_IO_stdin_used+0x384f>
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x1000000
add    %al,(%eax)
inc    %eax
pushf
pop    %esi
add    $0x55ea208,%eax
or     %dl,(%eax)
flds   (%eax,%ecx,1)
rol    %al
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
test   $0x5e,%al
add    $0x55eb008,%eax
or     %dh,(%eax)
out    %eax,(%dx)
add    $0x8,%al
and    %ah,%al
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    $0x1000000,%eax
add    %al,(%eax)
inc    %eax
mov    $0xbe08055e,%eax
pop    %esi
add    $0x4da5008,%eax
or     %ah,0x50804c0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
les    0x5(%esi),%ebx
or     %cl,%bl
pop    %esi
add    $0x4ef1008,%eax
or     %al,(%eax)
loopne 8057c33 <_IO_stdin_used+0x38cf>
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x1000000
add    %al,(%eax)
inc    %eax
rcrb   %cl,0x5(%esi)
or     %bl,%dl
pop    %esi
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
jnp    8057cbe <_IO_stdin_used+0x395a>
add    $0x55d9108,%eax
or     %dl,0x400804d3(%eax)
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
loope  8057ce0 <_IO_stdin_used+0x397c>
add    $0x55ee808,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
adc    %ch,%bh
pop    %esi
add    $0x55ef408,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x40804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055ef9(%eax)
add    %ebx,0x5(%edi)
or     %al,0x200804db(%eax)
mov    $0x50804,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
pop    %es
pop    %edi
add    $0x55f0c08,%eax
or     %dh,%al
fiaddl (%eax,%ecx,1)
pusha
roll   $0x5,(%eax,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x13000000
add    %al,(%eax)
and    %ch,-0x52f7faa7(%eax)
pop    %ecx
add    $0x4db4008,%eax
or     %al,0x50804c1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
adc    %ch,%bl
inc    %ebx
add    $0x55e7b08,%eax
or     %dl,%al
int3
add    $0x8,%al
pusha
ret    $0x804
or     %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x11(%eax)
pop    %edi
add    $0x55f1908,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
sbbb   $0x5f,(%edi)
add    $0x55f1908,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
orb    $0x5,0x5b(%ebp)
or     %ah,-0x203ff7fb(%ebx,%edx,4)
add    $0x8,%al
loopne 8057d4f <_IO_stdin_used+0x39eb>
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    %ah,(%eax)
inc    %edi
push   %esi
add    $0x55f2508,%eax
or     %ah,(%eax)
faddl  (%eax,%ecx,1)
adc    %al,%dl
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
and    %al,%cl
pop    %ebx
add    $0x55bc508,%eax
or     %dl,(%eax)
aad    $0x4
or     %dl,-0x46(%eax)
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
sub    0x5(%edi),%ebx
or     %dh,(%eax)
pop    %edi
add    $0x4d51008,%eax
or     %dl,-0x46(%eax)
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %dh,0x3b08055f
pop    %edi
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
and    %al,0x5f(%ecx)
add    $0x55f3b08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
adc    (%eax),%eax
add    %ah,(%eax)
dec    %edx
pop    %edi
add    $0x55f4f08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
and    %dl,0x5(%edi,%ebx,2)
or     %bh,0x2008055c(%esi)
fild   (%eax,%ecx,1)
inc    %eax
mov    $0x90804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
inc    %eax
pop    %ecx
pop    %edi
add    $0x55f5e08,%eax
or     %dl,-0x2c(%eax)
add    $0x8,%al
inc    %eax
mov    $0x40804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %ah,0x5f(%ebx)
add    $0x55f6608,%eax
or     %al,%al
fild   (%eax,%ecx,1)
loopne 8057e6f <_IO_stdin_used+0x3b0b>
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
and    %ch,%dl
inc    %esp
add    $0x55f6608,%eax
or     %al,%al
fild   (%eax,%ecx,1)
loopne 8057e8f <_IO_stdin_used+0x3b2b>
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %ah,(%eax)
add    %dl,0x5(%esi)
or     %ah,-0x207ff7fb(%ebx,%edx,4)
add    $0x8,%al
loopne 8057eaf <_IO_stdin_used+0x3b4b>
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x2000000,%eax
add    %al,(%eax)
and    %ch,0x5f(%ecx)
add    $0x593a408,%eax
or     %al,%al
fild   (%eax,%ecx,1)
loopne 8057ecf <_IO_stdin_used+0x3b6b>
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x2000000,%eax
add    %al,(%eax)
and    %ch,0x5f(%esi)
add    $0x55f7608,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055f7d(%eax)
sbbb   $0x8,0x5(%ecx)
adc    %ah,%bh
add    $0x8,%al
add    %ah,%cl
add    $0x8,%al
sldt   (%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %ah,(%eax)
(bad)
pop    %edi
add    $0x5568e08,%eax
or     %dl,(%eax)
out    %eax,$0x4
or     %al,(%eax)
loope  8057f73 <_IO_stdin_used+0x3c0f>
or     %cl,(%edi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %ah,(%eax)
xor    0x5(%edx),%ebx
or     %bh,(%eax)
pop    %edx
add    $0x4d9b008,%eax
or     %al,-0x40(%eax)
add    $0x8,%al
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
mov    %bl,0x5(%edi)
or     %bh,(%eax)
pop    %edx
add    $0x4efd008,%eax
or     %al,%al
loopne 8057fb3 <_IO_stdin_used+0x3c4f>
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
inc    %eax
xchg   %eax,%ecx
pop    %edi
add    $0x55f9708,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x8055f9d(%eax)
inc    %ebx
pop    %edx
add    $0x4efd008,%eax
or     %al,%al
loopne 8057ff3 <_IO_stdin_used+0x3c8f>
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
inc    %eax
mov    %eax,0xa708055f
pop    %edi
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
adc    %ch,0x7608055f(%ebx)
pop    %edi
add    $0x4c5c008,%eax
or     %al,-0x48(%eax)
add    $0x8,%al
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
cmpb   $0x5a,0x4308055a
add    $0x4efd008,%eax
or     %al,%al
loopne 8058053 <_IO_stdin_used+0x3cef>
or     %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
inc    %eax
mov    $0x5f,%dl
add    $0x55fb908,%eax
or     %al,0x500804ec(%eax)
les    (%eax,%ecx,1),%eax
or     (%eax),%al
add    %al,(%eax)
add    %al,0x50000(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x40(%eax)
pop    %edi
add    $0x55a4308,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x40804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,-0x37(%eax)
pop    %edi
add    $0x55fa708,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x30804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %dl,(%eax)
rcrb   0x5(%edi)
or     %dh,%bh
pop    %edx
add    $0x4c81008,%eax
or     %dh,(%eax)
ret    $0x804
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,0x64(%eax)
push   %esi
add    $0x55fd508,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
mov    0x60804bd,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
inc    %eax
fistpl 0x5(%edi)
or     %ah,%cl
pop    %edi
add    $0x4ece008,%eax
or     %al,0xa0804c4(%eax)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
inc    %eax
out    %eax,$0x5f
add    $0x55fef08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
mov    0x50804bb,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %dh,%ah
pop    %edi
add    $0x55ffb08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
add    %bh,0x508(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %bh,%bh
pop    %edi
add    $0x5600608,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
xor    %bh,0x508(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x3000000
add    %al,(%eax)
and    %cl,(%edx)
pusha
add    $0x5601208,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x30804,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %dl,(%esi)
pusha
add    $0x5601f08,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
sarb   0x50804(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
and    %dh,0x56(%ebx)
add    $0x556ca08,%eax
or     %dl,%al
int    $0x4
or     %ah,-0x44(%eax)
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
and    %al,%dh
push   %esi
add    $0x556ca08,%eax
or     %dl,%al
int    $0x4
or     %dl,(%eax)
mov    $0x60804,%ebx
add    %al,(%eax)
add    (%eax),%eax
add    %ah,(%eax)
sbb    0x8(%ebp,%eax,1),%bl
and    %ebx,0x8(%ebp,%eax,1)
shr    $0x4,%ch
or     %dh,0x60804bf(%eax)
add    %al,(%eax)
add    %al,0x1000000(%eax)
add    %al,(%eax)
add    %al,0x25100000
pusha
add    $0x55c2108,%eax
or     %al,-0x13(%eax)
add    $0x8,%al
inc    %eax
mov    $0x60804,%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
add    %al,0x2b100000
pusha
add    $0x5603108,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x50804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
xorb   $0x60,(%edi)
add    $0x5603c08,%eax
or     %ah,(%eax)
out    %al,$0x4
or     %al,-0x48(%eax)
add    $0x8,%al
pop    %ds
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
inc    %eax
inc    %ecx
pusha
add    $0x5604808,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x1f0804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
inc    %eax
(bad)
push   %esi
add    $0x554f008,%eax
or     %al,%al
lds    (%eax,%ecx,1),%eax
inc    %eax
mov    $0x10804,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x3000000,%eax
add    %al,(%eax)
xorb   $0x6b,0x6e(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     8058335 <_IO_stdin_used+0x3fd1>
and    %dh,0x61(%eax)
and    %dh,%gs:0x69(%bp,%di)
jp     8058336 <_IO_stdin_used+0x3fd2>
and    %ch,(%eax)
popa
jae    8058349 <_IO_stdin_used+0x3fe5>
jne    8058345 <_IO_stdin_used+0x3fe1>
and    %dh,%gs:(%eax,%esi,1)
cmp    %esi,(%esi)
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
jne    8058354 <_IO_stdin_used+0x3ff0>
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x70,%al
imul   $0x2c646970,0x70(%esp,%ebp,1),%esp
arpl   %bp,(%ebx,%esi,2)
je     8058359 <_IO_stdin_used+0x3ff5>
jb     805836e <_IO_stdin_used+0x400a>
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
imul   $0x646d632c,0x65(%ebp),%ebp
add    %al,(%eax)
add    %dh,0x73(%ebp)
gs
jb     805833d <_IO_stdin_used+0x3fd9>
jo     805837c <_IO_stdin_used+0x4018>
fs
sub    $0x70,%al
jo     8058381 <_IO_stdin_used+0x401d>
fs
sub    $0x70,%al
imul   $0x73736573,0x2c(%si),%esp
sub    $0x6a,%al
outsl  %ds:(%esi),(%dx)
bound  %esp,0x2c(%ebx)
jae    805839f <_IO_stdin_used+0x403b>
popa
je     805835a <_IO_stdin_used+0x3ff6>
je     80583a4 <_IO_stdin_used+0x4040>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %dh,0x69(%ebp)
fs
sub    $0x70,%al
imul   $0x2c646970,0x70(%esp,%ebp,1),%esp
arpl   %si,0x75(%eax)
sub    $0x70,%al
jb     80583bd <_IO_stdin_used+0x4059>
sub    $0x6e,%al
imul   $0x7a73762c,0x65(%ebx),%esp
sub    $0x72,%al
jae    80583d4 <_IO_stdin_used+0x4070>
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x73,%al
je     80583cc <_IO_stdin_used+0x4068>
je     8058399 <_IO_stdin_used+0x4035>
je     80583e3 <_IO_stdin_used+0x407f>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
jne    80583f5 <_IO_stdin_used+0x4091>
gs
jb     80583b1 <_IO_stdin_used+0x404d>
jo     80583f0 <_IO_stdin_used+0x408c>
fs
sub    $0x70,%al
arpl   %si,0x75(%eax)
sub    $0x70,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
sub    $0x76,%al
jae    8058410 <_IO_stdin_used+0x40ac>
sub    $0x72,%al
jae    805840d <_IO_stdin_used+0x40a9>
sub    $0x74,%al
je     80583ca <_IO_stdin_used+0x4066>
jae    8058414 <_IO_stdin_used+0x40b0>
popa
je     80583cf <_IO_stdin_used+0x406b>
jae    8058419 <_IO_stdin_used+0x40b5>
popa
jb     805841c <_IO_stdin_used+0x40b8>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %dh,0x69(%eax)
fs
sub    $0x73,%al
je     8058420 <_IO_stdin_used+0x40bc>
je     80583ed <_IO_stdin_used+0x4089>
je     805842c <_IO_stdin_used+0x40c8>
insl   (%dx),%es:(%edi)
gs
sub    $0x73,%al
insb   (%dx),%es:(%edi)
sub    $0x72,%al
gs
sub    $0x70,%al
popa
imul   $0x2c7a7376,%gs:0x2c(%bp),%ebp
2c
jb     805844c <_IO_stdin_used+0x40e8>
jae    8058407 <_IO_stdin_used+0x40a3>
insb   (%dx),%es:(%edi)
imul   $0x7a697374,0x2c(%ebp),%ebp
sub    $0x70,%al
arpl   %si,0x75(%eax)
sub    $0x70,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %dh,0x73(%ebp)
gs
jb     8058429 <_IO_stdin_used+0x40c5>
jo     8058468 <_IO_stdin_used+0x4104>
fs
sub    $0x70,%al
jo     805846d <_IO_stdin_used+0x4109>
fs
sub    $0x73,%al
je     805846a <_IO_stdin_used+0x4106>
jb     805847f <_IO_stdin_used+0x411b>
pop    %edi
je     8058477 <_IO_stdin_used+0x4113>
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
je     805848d <_IO_stdin_used+0x4129>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
add    %al,(%eax)
jne    8058495 <_IO_stdin_used+0x4131>
gs
jb     8058451 <_IO_stdin_used+0x40ed>
jo     8058490 <_IO_stdin_used+0x412c>
fs
sub    $0x70,%al
jo     8058495 <_IO_stdin_used+0x4131>
fs
sub    $0x73,%al
je     8058492 <_IO_stdin_used+0x412e>
jb     80584a7 <_IO_stdin_used+0x4143>
pop    %edi
je     805849f <_IO_stdin_used+0x413b>
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
je     80584b5 <_IO_stdin_used+0x4151>
sub    $0x74,%al
imul   $0x6967702c,0x65(%ebp),%ebp
fs
sub    $0x73,%al
imul   $0x6d6d6f,0x63(%esp,%ebp,1),%esp
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8058482 <_IO_stdin_used+0x411e>
jae    80584cc <_IO_stdin_used+0x4168>
popa
je     80584c0 <_IO_stdin_used+0x415c>
sub    $0x75,%al
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
jo     80584d0 <_IO_stdin_used+0x416c>
fs
sub    $0x70,%al
jb     80584d5 <_IO_stdin_used+0x4171>
outsl  %ds:(%esi),(%dx)
jb     80584d8 <_IO_stdin_used+0x4174>
je     80584ea <_IO_stdin_used+0x4186>
sub    $0x6e,%al
imul   $0x7a73762c,0x65(%ebx),%esp
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x74,%al
je     80584fd <_IO_stdin_used+0x4199>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
add    %al,(%eax)
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 80584c2 <_IO_stdin_used+0x415e>
jae    805850c <_IO_stdin_used+0x41a8>
popa
je     8058500 <_IO_stdin_used+0x419c>
sub    $0x75,%al
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
jo     8058510 <_IO_stdin_used+0x41ac>
fs
sub    $0x70,%al
jb     8058515 <_IO_stdin_used+0x41b1>
outsl  %ds:(%esi),(%dx)
jb     8058518 <_IO_stdin_used+0x41b4>
je     805852a <_IO_stdin_used+0x41c6>
sub    $0x6e,%al
imul   $0x7a73762c,0x65(%ebx),%esp
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x74,%al
je     805853d <_IO_stdin_used+0x41d9>
sub    $0x74,%al
imul   $0x6967702c,0x65(%ebp),%ebp
fs
sub    $0x73,%al
imul   $0x6d6d6f,0x63(%esp,%ebp,1),%esp
data16
sub    $0x73,%al
je     805853e <_IO_stdin_used+0x41da>
je     8058544 <_IO_stdin_used+0x41e0>
sub    $0x75,%al
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
jo     8058554 <_IO_stdin_used+0x41f0>
fs
sub    $0x70,%al
arpl   %si,0x75(%eax)
sub    $0x70,%al
jb     805855e <_IO_stdin_used+0x41fa>
sub    $0x6e,%al
imul   $0x7373722c,0x65(%ebx),%esp
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x73,%al
je     8058569 <_IO_stdin_used+0x4205>
jb     805857e <_IO_stdin_used+0x421a>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x73(%ebp)
gs
jb     8058549 <_IO_stdin_used+0x41e5>
jo     8058588 <_IO_stdin_used+0x4224>
fs
sub    $0x70,%al
jo     805858d <_IO_stdin_used+0x4229>
fs
sub    $0x63,%al
jo     805859e <_IO_stdin_used+0x423a>
sub    $0x73,%al
je     8058596 <_IO_stdin_used+0x4232>
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
je     80585ac <_IO_stdin_used+0x4248>
sub    $0x74,%al
imul   $0x6772612c,0x65(%ebp),%ebp
jae    805853e <_IO_stdin_used+0x41da>
add    %al,(%eax)
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8058572 <_IO_stdin_used+0x420e>
jae    80585bc <_IO_stdin_used+0x4258>
popa
je     80585b0 <_IO_stdin_used+0x424c>
sub    $0x75,%al
jae    80585b4 <_IO_stdin_used+0x4250>
jb     805857d <_IO_stdin_used+0x4219>
jo     80585bc <_IO_stdin_used+0x4258>
fs
sub    $0x70,%al
jo     80585c1 <_IO_stdin_used+0x425d>
fs
sub    $0x63,%al
jo     80585d2 <_IO_stdin_used+0x426e>
sub    $0x69,%al
outsb  %ds:(%esi),(%dx)
je     80585d2 <_IO_stdin_used+0x426e>
jb     80585cd <_IO_stdin_used+0x4269>
sub    $0x6e,%al
imul   $0x6464612c,0x65(%ebx),%esp
jb     805859b <_IO_stdin_used+0x4237>
jae    80585eb <_IO_stdin_used+0x4287>
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x73,%al
je     80585e4 <_IO_stdin_used+0x4280>
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
je     80585fa <_IO_stdin_used+0x4296>
sub    $0x74,%al
imul   $0x6772612c,0x65(%ebp),%ebp
jae    805858c <_IO_stdin_used+0x4228>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 80585be <_IO_stdin_used+0x425a>
jae    8058608 <_IO_stdin_used+0x42a4>
popa
je     80585fc <_IO_stdin_used+0x4298>
sub    $0x75,%al
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
jo     805860c <_IO_stdin_used+0x42a8>
fs
sub    $0x63,%al
jo     805861d <_IO_stdin_used+0x42b9>
sub    $0x69,%al
outsb  %ds:(%esi),(%dx)
je     805861d <_IO_stdin_used+0x42b9>
jb     8058618 <_IO_stdin_used+0x42b4>
sub    $0x6e,%al
imul   $0x6464612c,0x65(%ebx),%esp
jb     80585e6 <_IO_stdin_used+0x4282>
jae    8058636 <_IO_stdin_used+0x42d2>
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x74,%al
je     805863f <_IO_stdin_used+0x42db>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
jne    8058649 <_IO_stdin_used+0x42e5>
gs
jb     8058605 <_IO_stdin_used+0x42a1>
jo     8058644 <_IO_stdin_used+0x42e0>
fs
sub    $0x70,%al
jo     8058649 <_IO_stdin_used+0x42e5>
fs
sub    $0x70,%al
imul   $0x73736573,0x2c(%si),%esp
sub    $0x6a,%al
outsl  %ds:(%esi),(%dx)
bound  %esp,0x2c(%ebx)
jae    8058667 <_IO_stdin_used+0x4303>
popa
je     805865b <_IO_stdin_used+0x42f7>
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
jo     8058675 <_IO_stdin_used+0x4311>
je     805866b <_IO_stdin_used+0x4307>
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
data16
sub    $0x73,%al
je     8058676 <_IO_stdin_used+0x4312>
je     805867c <_IO_stdin_used+0x4318>
sub    $0x75,%al
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
jo     805868c <_IO_stdin_used+0x4328>
fs
sub    $0x63,%al
sub    $0x70,%al
jb     8058693 <_IO_stdin_used+0x432f>
sub    $0x6e,%al
imul   $0x6464612c,0x65(%ebx),%esp
jb     8058661 <_IO_stdin_used+0x42fd>
jae    80586b1 <_IO_stdin_used+0x434d>
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x74,%al
je     805866d <_IO_stdin_used+0x4309>
je     80586ac <_IO_stdin_used+0x4348>
insl   (%dx),%es:(%edi)
gs
sub    $0x75,%al
arpl   %bp,0x64(%ebp)
add    %al,(%eax)
jne    80586b7 <_IO_stdin_used+0x4353>
fs
sub    $0x70,%al
imul   $0x2c646970,0x70(%esp,%ebp,1),%esp
arpl   %si,0x2c(%eax)
jo     80586d0 <_IO_stdin_used+0x436c>
imul   $0x2c656369,(%esi,%ebp,2),%ebp
jbe    80586da <_IO_stdin_used+0x4376>
jp     8058695 <_IO_stdin_used+0x4331>
jb     80586de <_IO_stdin_used+0x437a>
jae    8058699 <_IO_stdin_used+0x4335>
ja     80586d2 <_IO_stdin_used+0x436e>
push   $0x732c6e61
je     80586d7 <_IO_stdin_used+0x4373>
je     80586dd <_IO_stdin_used+0x4379>
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
jo     80586f7 <_IO_stdin_used+0x4393>
je     80586ed <_IO_stdin_used+0x4389>
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
jo     80586fb <_IO_stdin_used+0x4397>
fs
sub    $0x73,%al
je     80586f8 <_IO_stdin_used+0x4394>
jb     805870d <_IO_stdin_used+0x43a9>
pop    %edi
jae    8058710 <_IO_stdin_used+0x43ac>
popa
arpl   %bp,0x2c(%ebx)
gs
jae    8058713 <_IO_stdin_used+0x43af>
sub    $0x65,%al
imul   $0x656d6974,0x2c(%eax),%esi
outsl  %ds:(%esi),(%dx)
jne    8058723 <_IO_stdin_used+0x43bf>
sub    $0x61,%al
insb   (%dx),%es:(%edi)
popa
jb     8058722 <_IO_stdin_used+0x43be>
sub    $0x73,%al
je     805871a <_IO_stdin_used+0x43b6>
je     80586e7 <_IO_stdin_used+0x4383>
je     805872b <_IO_stdin_used+0x43c7>
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x62,%al
jae    8058728 <_IO_stdin_used+0x43c4>
je     805872f <_IO_stdin_used+0x43cb>
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
jb     8058733 <_IO_stdin_used+0x43cf>
jae    80586ce <_IO_stdin_used+0x436a>
add    %al,(%eax)
jo     8058742 <_IO_stdin_used+0x43de>
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
imul   $0x2c646973,0x2c(%si),%esp
je     8058752 <_IO_stdin_used+0x43ee>
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
jo     8058752 <_IO_stdin_used+0x43ee>
imul   $0x2c746174,0x73(%esp,%ebp,1),%esp
jne    805875e <_IO_stdin_used+0x43fa>
fs
sub    $0x62,%al
jae    805875e <_IO_stdin_used+0x43fa>
je     8058765 <_IO_stdin_used+0x4401>
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
jb     8058769 <_IO_stdin_used+0x4405>
jae    8058704 <_IO_stdin_used+0x43a0>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 8058736 <_IO_stdin_used+0x43d2>
jne    8058775 <_IO_stdin_used+0x4411>
fs
sub    $0x70,%al
imul   $0x2c646970,0x70(%esp,%ebp,1),%esp
jo     805878b <_IO_stdin_used+0x4427>
imul   $0x2c797469,0x72(%edi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x7a73762c,0x65(%ebx),%esp
sub    $0x72,%al
jae    805879f <_IO_stdin_used+0x443b>
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x73,%al
je     8058797 <_IO_stdin_used+0x4433>
je     8058764 <_IO_stdin_used+0x4400>
je     80587a8 <_IO_stdin_used+0x4444>
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x62,%al
jae    80587a5 <_IO_stdin_used+0x4441>
je     80587ac <_IO_stdin_used+0x4448>
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
jb     80587b0 <_IO_stdin_used+0x444c>
jae    805874b <_IO_stdin_used+0x43e7>
add    %dh,0x69(%eax)
fs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x6d,%al
popa
push   $0x66
insb   (%dx),%es:(%edi)
je     8058789 <_IO_stdin_used+0x4425>
insl   (%dx),%es:(%edi)
imul   $0x6d2c746c,0x66(%esi),%ebp
pop    %edi
je     80587da <_IO_stdin_used+0x4476>
jae    8058796 <_IO_stdin_used+0x4432>
insl   (%dx),%es:(%edi)
pop    %edi
fs
jb     80587e2 <_IO_stdin_used+0x447e>
sub    $0x6d,%al
pop    %edi
jae    80587dd <_IO_stdin_used+0x4479>
jp     80587db <_IO_stdin_used+0x4477>
sub    $0x6d,%al
pop    %edi
jae    80587f2 <_IO_stdin_used+0x448e>
popa
jo     80587aa <_IO_stdin_used+0x4446>
jb     80587f3 <_IO_stdin_used+0x448f>
jae    80587ae <_IO_stdin_used+0x444a>
insl   (%dx),%es:(%edi)
pop    %edi
jae    80587ee <_IO_stdin_used+0x448a>
popa
jb     80587ee <_IO_stdin_used+0x448a>
sub    $0x76,%al
insl   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x74645f6d,0x2c(%edx),%esp
sub    $0x61,%al
jb     8058800 <_IO_stdin_used+0x449c>
jae    805879b <_IO_stdin_used+0x4437>
add    %dh,0x69(%ebp)
fs
sub    $0x70,%al
imul   $0x69646e65,0x70(%esp,%ebp,1),%esp
outsb  %ds:(%esi),(%dx)
addr16 sub $0x73,%al
imul   $0x636f6c62,0x5f(%edi),%esp
imul   $0x69,(%ebx,%esi,2),%ebp
addr16 pop %edi
imul   $0x2c65726f,0x6e(%edi),%esp
arpl   %sp,0x75(%ecx)
addr16 push $0x74732c74
popa
je     80587f9 <_IO_stdin_used+0x4495>
je     805883d <_IO_stdin_used+0x44d9>
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x62,%al
jae    805883a <_IO_stdin_used+0x44d6>
je     8058841 <_IO_stdin_used+0x44dd>
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
jb     8058845 <_IO_stdin_used+0x44e1>
jae    80587e0 <_IO_stdin_used+0x447c>
jne    8058855 <_IO_stdin_used+0x44f1>
gs
jb     8058811 <_IO_stdin_used+0x44ad>
jo     8058850 <_IO_stdin_used+0x44ec>
fs
sub    $0x70,%al
arpl   %si,0x75(%eax)
sub    $0x70,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
sub    $0x76,%al
jae    8058870 <_IO_stdin_used+0x450c>
sub    $0x72,%al
jae    805886d <_IO_stdin_used+0x4509>
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x73,%al
je     8058865 <_IO_stdin_used+0x4501>
je     8058832 <_IO_stdin_used+0x44ce>
jae    805887c <_IO_stdin_used+0x4518>
popa
jb     805887f <_IO_stdin_used+0x451b>
pop    %edi
je     8058877 <_IO_stdin_used+0x4513>
insl   (%dx),%es:(%edi)
gs
sub    $0x62,%al
jae    8058878 <_IO_stdin_used+0x4514>
je     805887f <_IO_stdin_used+0x451b>
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
jb     8058883 <_IO_stdin_used+0x451f>
jae    805881e <_IO_stdin_used+0x44ba>
add    %al,(%eax)
jo     805888b <_IO_stdin_used+0x4527>
fs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x73,%al
je     805888e <_IO_stdin_used+0x452a>
je     805885b <_IO_stdin_used+0x44f7>
bound  %esi,0x64(%ebx)
je     805889d <_IO_stdin_used+0x4539>
insl   (%dx),%es:(%edi)
gs
sub    $0x6d,%al
popa
push   $0x5f
data16
insb   (%dx),%es:(%edi)
je     805886b <_IO_stdin_used+0x4507>
insl   (%dx),%es:(%edi)
pop    %edi
je     80588b5 <_IO_stdin_used+0x4551>
jae    8058871 <_IO_stdin_used+0x450d>
insl   (%dx),%es:(%edi)
pop    %edi
fs
jb     80588bd <_IO_stdin_used+0x4559>
sub    $0x72,%al
jae    80588c1 <_IO_stdin_used+0x455d>
sub    $0x70,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
sub    $0x61,%al
jb     80588be <_IO_stdin_used+0x455a>
jae    8058859 <_IO_stdin_used+0x44f5>
add    %al,(%eax)
add    %dh,0x69(%ebp)
fs
sub    $0x70,%al
imul   $0x2c646970,0x70(%esp,%ebp,1),%esp
jae    80588df <_IO_stdin_used+0x457b>
popa
jb     80588e2 <_IO_stdin_used+0x457e>
pop    %edi
je     80588da <_IO_stdin_used+0x4576>
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x62,%al
jae    80588e1 <_IO_stdin_used+0x457d>
je     80588e8 <_IO_stdin_used+0x4584>
insl   (%dx),%es:(%edi)
gs
sub    $0x61,%al
jb     80588ec <_IO_stdin_used+0x4588>
jae    8058887 <_IO_stdin_used+0x4523>
add    %dh,0x69(%ebp)
fs
sub    $0x70,%al
imul   $0x2c646970,0x70(%esp,%ebp,1),%esp
jae    805890b <_IO_stdin_used+0x45a7>
popa
jb     805890e <_IO_stdin_used+0x45aa>
pop    %edi
je     8058906 <_IO_stdin_used+0x45a2>
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x62,%al
jae    805890d <_IO_stdin_used+0x45a9>
je     8058914 <_IO_stdin_used+0x45b0>
insl   (%dx),%es:(%edi)
gs
sub    $0x70,%al
imul   $0x2c646973,0x2c(%si),%esp
popa
jb     8058921 <_IO_stdin_used+0x45bd>
jae    80588bc <_IO_stdin_used+0x4558>
jo     8058927 <_IO_stdin_used+0x45c3>
fs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x73,%al
je     805892a <_IO_stdin_used+0x45c6>
je     8058930 <_IO_stdin_used+0x45cc>
sub    $0x62,%al
jae    8058933 <_IO_stdin_used+0x45cf>
je     805893a <_IO_stdin_used+0x45d6>
insl   (%dx),%es:(%edi)
gs
sub    $0x70,%al
imul   $0x2c646973,0x2c(%si),%esp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ah,0x6c(%esi)
popa
addr16 jae 8058916 <_IO_stdin_used+0x45b2>
jae    8058960 <_IO_stdin_used+0x45fc>
popa
je     8058954 <_IO_stdin_used+0x45f0>
sub    $0x75,%al
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
jo     8058964 <_IO_stdin_used+0x4600>
fs
sub    $0x70,%al
jb     8058969 <_IO_stdin_used+0x4605>
outsl  %ds:(%esi),(%dx)
jb     805896c <_IO_stdin_used+0x4608>
je     805897e <_IO_stdin_used+0x461a>
sub    $0x6e,%al
imul   $0x6863772c,0x65(%ebx),%esp
popa
outsb  %ds:(%esi),(%dx)
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x62,%al
jae    805897e <_IO_stdin_used+0x461a>
je     8058985 <_IO_stdin_used+0x4621>
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
add    %ah,0x6c(%esi)
popa
addr16 jae 8058956 <_IO_stdin_used+0x45f2>
jae    80589a0 <_IO_stdin_used+0x463c>
popa
je     8058994 <_IO_stdin_used+0x4630>
sub    $0x75,%al
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
jo     80589a4 <_IO_stdin_used+0x4640>
fs
sub    $0x70,%al
jb     80589a9 <_IO_stdin_used+0x4645>
outsl  %ds:(%esi),(%dx)
jb     80589ac <_IO_stdin_used+0x4648>
je     80589be <_IO_stdin_used+0x465a>
sub    $0x6e,%al
imul   $0x6863772c,0x65(%ebx),%esp
popa
outsb  %ds:(%esi),(%dx)
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x62,%al
jae    80589be <_IO_stdin_used+0x465a>
je     80589c5 <_IO_stdin_used+0x4661>
insl   (%dx),%es:(%edi)
gs
sub    $0x70,%al
imul   $0x2c646973,0x2c(%si),%esp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x6d2c746c,0x66(%esi),%ebp
popa
push   $0x66
insb   (%dx),%es:(%edi)
je     80589aa <_IO_stdin_used+0x4646>
outsb  %ds:(%esi),(%dx)
jae    80589f8 <_IO_stdin_used+0x4694>
popa
jo     80589b0 <_IO_stdin_used+0x464c>
imul   $0x6b636f6c,0x62(%esi),%ebp
sub    $0x6f,%al
jne    80589f1 <_IO_stdin_used+0x468d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x2c(%ebx)
insl   (%dx),%es:(%edi)
jae    80589fe <_IO_stdin_used+0x469a>
jae    8058a07 <_IO_stdin_used+0x46a3>
fs
sub    $0x6d,%al
jae    8058a05 <_IO_stdin_used+0x46a1>
jb     8058a03 <_IO_stdin_used+0x469f>
jbe    80589ce <_IO_stdin_used+0x466a>
outsb  %ds:(%esi),(%dx)
jae    8058a0e <_IO_stdin_used+0x46aa>
addr16 jae 80589d4 <_IO_stdin_used+0x4670>
outsb  %ds:(%esi),(%dx)
jbe    8058a0e <_IO_stdin_used+0x46aa>
jae    8058a24 <_IO_stdin_used+0x46c0>
sub    $0x6e,%al
imul   $0x7773,0x63(%esi),%esi
add    %al,(%eax)
jne    8058a2d <_IO_stdin_used+0x46c9>
gs
jb     80589e9 <_IO_stdin_used+0x4685>
jo     8058a22 <_IO_stdin_used+0x46be>
jo     8058a36 <_IO_stdin_used+0x46d2>
sub    $0x70,%al
jb     8058a2e <_IO_stdin_used+0x46ca>
sub    $0x75,%al
jae    8058a3b <_IO_stdin_used+0x46d7>
jo     8058a3d <_IO_stdin_used+0x46d9>
imul   $0x2c656369,(%esi,%ebp,2),%ebp
jo     8058a47 <_IO_stdin_used+0x46e3>
js     8058a46 <_IO_stdin_used+0x46e2>
jb     8058a41 <_IO_stdin_used+0x46dd>
sub    $0x70,%al
jae    8058a4e <_IO_stdin_used+0x46ea>
sub    $0x70,%al
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6573702c,0x79(%ebx),%esp
je     80589e9 <_IO_stdin_used+0x4685>
add    %al,(%eax)
add    %dh,0x69(%ebp)
fs
sub    $0x70,%al
imul   $0x69737275,0x63(%esp,%ebp,1),%esp
addr16 sub $0x73,%al
imul   $0x6d676973,0x2c(%edi),%esp
popa
jae    8058a71 <_IO_stdin_used+0x470d>
sub    $0x73,%al
imul   $0x726f6e67,0x69(%edi),%esp
gs
sub    $0x73,%al
imul   $0x68637461,0x63(%edi),%esp
sub    $0x73,%al
je     8058a7e <_IO_stdin_used+0x471a>
je     8058a4b <_IO_stdin_used+0x46e7>
je     8058a8f <_IO_stdin_used+0x472b>
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
jne    8058a9b <_IO_stdin_used+0x4737>
fs
pop    %edi
push   $0x2c6b6361
jo     8058aa4 <_IO_stdin_used+0x4740>
fs
sub    $0x70,%al
jo     8058aa9 <_IO_stdin_used+0x4745>
fs
sub    $0x63,%al
sub    $0x73,%al
je     8058ab0 <_IO_stdin_used+0x474c>
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
imul   $0x646d632c,0x65(%ebp),%ebp
add    %al,(%eax)
add    %al,(%eax)
data16
sub    $0x73,%al
sub    $0x75,%al
imul   $0x2c6b6361,0x68(%edi,%ebx,2),%esp
jo     8058ad4 <_IO_stdin_used+0x4770>
fs
sub    $0x70,%al
jo     8058ad9 <_IO_stdin_used+0x4775>
fs
sub    $0x63,%al
sub    $0x6f,%al
jo     8058ae9 <_IO_stdin_used+0x4785>
imul   $0x64612c69,(%esi,%ebp,2),%ebp
fs
jb     8058aad <_IO_stdin_used+0x4749>
jae    8058afd <_IO_stdin_used+0x4799>
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x73,%al
je     8058af6 <_IO_stdin_used+0x4792>
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
imul   $0x646d632c,0x65(%ebp),%ebp
add    %al,(%eax)
data16
sub    $0x73,%al
sub    $0x75,%al
imul   $0x702c6469,0x70(%esp,%ebp,1),%esp
jo     8058b18 <_IO_stdin_used+0x47b4>
fs
sub    $0x63,%al
sub    $0x6f,%al
jo     8058b28 <_IO_stdin_used+0x47c4>
imul   $0x64612c69,(%esi,%ebp,2),%ebp
fs
jb     8058aec <_IO_stdin_used+0x4788>
jae    8058b3c <_IO_stdin_used+0x47d8>
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x74,%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x74,%al
imul   $0x6d63752c,0x65(%ebp),%ebp
add    %al,%fs:(%eax)
add    %al,(%eax)
jne    8058b51 <_IO_stdin_used+0x47ed>
gs
jb     8058b0d <_IO_stdin_used+0x47a9>
jo     8058b46 <_IO_stdin_used+0x47e2>
jo     8058b5a <_IO_stdin_used+0x47f6>
sub    $0x70,%al
jb     8058b52 <_IO_stdin_used+0x47ee>
sub    $0x73,%al
arpl   %bp,0x74(%esi)
sub    $0x77,%al
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
sub    $0x75,%al
jae    8058b5d <_IO_stdin_used+0x47f9>
jb     8058b6e <_IO_stdin_used+0x480a>
imul   $0x7379732c,0x65(%ebp),%ebp
je     8058b6c <_IO_stdin_used+0x4808>
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x70,%al
imul   $0x2c757063,0x70(%esp,%ebp,1),%esp
jo     8058b86 <_IO_stdin_used+0x4822>
gs
insl   (%dx),%es:(%edi)
sub    $0x76,%al
jae    8058b99 <_IO_stdin_used+0x4835>
sub    $0x72,%al
jae    8058b96 <_IO_stdin_used+0x4832>
sub    $0x74,%al
je     8058b53 <_IO_stdin_used+0x47ef>
jae    8058b9d <_IO_stdin_used+0x4839>
popa
je     8058b91 <_IO_stdin_used+0x482d>
sub    $0x73,%al
je     8058b91 <_IO_stdin_used+0x482d>
jb     8058ba6 <_IO_stdin_used+0x4842>
sub    $0x74,%al
imul   $0x6d6f632c,0x65(%ebp),%ebp
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x69(%eax)
fs
sub    $0x74,%al
je     8058b73 <_IO_stdin_used+0x480f>
jae    8058bbd <_IO_stdin_used+0x4859>
popa
je     8058bb1 <_IO_stdin_used+0x484d>
sub    $0x74,%al
imul   $0x2c6c732c,0x65(%ebp),%ebp
jo     8058bb8 <_IO_stdin_used+0x4854>
imul   $0x2c7a7376,%gs:0x2c(%bp),%ebp
2c
jb     8058bd5 <_IO_stdin_used+0x4871>
jae    8058b90 <_IO_stdin_used+0x482c>
jo     8058bc9 <_IO_stdin_used+0x4865>
jo     8058bdd <_IO_stdin_used+0x4879>
sub    $0x70,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
sub    $0x63,%al
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %dh,0x72(%eax,%ebp,2)
gs
popa
and    %ah,%fs:0x73(%ecx,%ebp,2)
jo     8058bf0 <_IO_stdin_used+0x488c>
popa
jns    8058ba7 <_IO_stdin_used+0x4843>
arpl   %bp,0x6e(%edi)
data16
insb   (%dx),%es:(%edi)
imul   $0x69772073,0x74(%ebx),%esp
je     8058bfd <_IO_stdin_used+0x4899>
and    %ah,0x6f(%esi)
jb     8058bff <_IO_stdin_used+0x489b>
jae    8058c10 <_IO_stdin_used+0x48ac>
and    %ah,0x73(%ecx,%ebp,2)
jo     8058c0e <_IO_stdin_used+0x48aa>
popa
jns    8058ba5 <_IO_stdin_used+0x4841>
add    %al,(%eax)
add    %dh,0x72(%eax,%ebp,2)
gs
popa
and    %ah,%fs:0x6c(%esi)
popa
addr16 jae 8058bd5 <_IO_stdin_used+0x4871>
arpl   %bp,0x6e(%edi)
data16
insb   (%dx),%es:(%edi)
imul   $0x6163203b,0x74(%ebx),%esp
outsb  %ds:(%esi),(%dx)
daa
je     8058be5 <_IO_stdin_used+0x4881>
jne    8058c3a <_IO_stdin_used+0x48d6>
and    %cl,%gs:0x20(%eax)
ja     8058c36 <_IO_stdin_used+0x48d2>
je     8058c37 <_IO_stdin_used+0x48d3>
and    %ch,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
jb     8058bf5 <_IO_stdin_used+0x4891>
sub    $0x6874006d,%eax
jb     8058c41 <_IO_stdin_used+0x48dd>
popa
and    %ah,%fs:0x6c(%esi)
popa
addr16 jae 8058c05 <_IO_stdin_used+0x48a1>
arpl   %bp,0x6e(%edi)
data16
insb   (%dx),%es:(%edi)
imul   $0x6163203b,0x74(%ebx),%esp
outsb  %ds:(%esi),(%dx)
daa
je     8058c15 <_IO_stdin_used+0x48b1>
jne    8058c6a <_IO_stdin_used+0x4906>
and    %ah,%gs:0x6f(%edx)
je     8058c65 <_IO_stdin_used+0x4901>
and    %ch,0x20(%ebp)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x7400006d
push   $0x64616572
and    %ah,0x6c(%esi)
popa
addr16 jae 8058c35 <_IO_stdin_used+0x48d1>
arpl   %bp,0x6e(%edi)
data16
insb   (%dx),%es:(%edi)
imul   $0x6163203b,0x74(%ebx),%esp
outsb  %ds:(%esi),(%dx)
daa
je     8058c45 <_IO_stdin_used+0x48e1>
jne    8058c9a <_IO_stdin_used+0x4936>
and    %ah,%gs:0x6f(%edx)
je     8058c95 <_IO_stdin_used+0x4931>
and    %ch,0x6e61204c
and    %ch,%fs:0x696c0054
jae    8058cb0 <_IO_stdin_used+0x494c>
and    %ch,0x66(%edi)
and    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058cba <_IO_stdin_used+0x4956>
jae    8058c6c <_IO_stdin_used+0x4908>
insl   (%dx),%es:(%edi)
jne    8058cc2 <_IO_stdin_used+0x495e>
je     8058c71 <_IO_stdin_used+0x490d>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058c78 <_IO_stdin_used+0x4914>
sub    $0x6f72472d,%eax
jne    8058ccf <_IO_stdin_used+0x496b>
add    %ch,0x73(%ecx,%ebp,2)
je     8058c85 <_IO_stdin_used+0x4921>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
and    %dh,0x73(%ebp)
gs
jb     8058ce5 <_IO_stdin_used+0x4981>
and    %ch,0x75(%ebp)
jae    8058ceb <_IO_stdin_used+0x4987>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058c9f <_IO_stdin_used+0x493b>
sub    $0x6573552d,%eax
jb     8058c86 <_IO_stdin_used+0x4922>
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
jne    8058cf8 <_IO_stdin_used+0x4994>
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    8058d04 <_IO_stdin_used+0x49a0>
outsb  %ds:(%esi),(%dx)
jae    8058cba <_IO_stdin_used+0x4956>
insl   (%dx),%es:(%edi)
jne    8058d10 <_IO_stdin_used+0x49ac>
je     8058cbf <_IO_stdin_used+0x495b>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058cc6 <_IO_stdin_used+0x4962>
sub    $0x6c6f632d,%eax
jae    8058cd9 <_IO_stdin_used+0x4975>
and    %ch,0x6469772d
je     8058d1d <_IO_stdin_used+0x49b9>
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     8058cda <_IO_stdin_used+0x4976>
sub    $0x6c6f632d,%eax
jne    8058d2e <_IO_stdin_used+0x49ca>
outsb  %ds:(%esi),(%dx)
jae    8058cc4 <_IO_stdin_used+0x4960>
outsl  %ds:(%esi),(%dx)
jo     8058d3b <_IO_stdin_used+0x49d7>
imul   $0x632d2d20,0x6e(%edi),%ebp
jne    8058d3d <_IO_stdin_used+0x49d9>
jne    8058d3e <_IO_stdin_used+0x49da>
popa
je     8058d3e <_IO_stdin_used+0x49da>
jbe    8058d3c <_IO_stdin_used+0x49d8>
and    %ah,0x65(%edi,%ebp,2)
jae    8058cfd <_IO_stdin_used+0x4999>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058d01 <_IO_stdin_used+0x499d>
je     8058d44 <_IO_stdin_used+0x49e0>
imul   $0x61,0x20(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 8058d5b <_IO_stdin_used+0x49f7>
outsb  %gs:(%esi),(%dx)
je     8058cf2 <_IO_stdin_used+0x498e>
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jo     8058d6b <_IO_stdin_used+0x4a07>
imul   $0x642d2d20,0x6e(%edi),%ebp
gs
jae    8058d66 <_IO_stdin_used+0x4a02>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
gs
jae    8058d2b <_IO_stdin_used+0x49c7>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058d2f <_IO_stdin_used+0x49cb>
je     8058d72 <_IO_stdin_used+0x4a0e>
imul   $0x61,0x20(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 8058d89 <_IO_stdin_used+0x4a25>
outsb  %gs:(%esi),(%dx)
je     8058d20 <_IO_stdin_used+0x49bc>
outsl  %ds:(%esi),(%dx)
jo     8058d97 <_IO_stdin_used+0x4a33>
imul   $0x6e2d2d20,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
sub    $0x64616568,%eax
imul   $0x656f6420,0x67(%esi),%ebp
jae    8058d59 <_IO_stdin_used+0x49f5>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058d5d <_IO_stdin_used+0x49f9>
je     8058da0 <_IO_stdin_used+0x4a3c>
imul   $0x61,0x20(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 8058db7 <_IO_stdin_used+0x4a53>
outsb  %gs:(%esi),(%dx)
je     8058d4e <_IO_stdin_used+0x49ea>
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8058d75 <_IO_stdin_used+0x4a11>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x65(%eax)
popa
imul   $0x74706f20,%fs:0x67(%esi),%ebp
imul   $0x79616d20,0x6e(%edi),%ebp
and    %ah,0x65(%edx)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x0,0x64(%ebp),%esp
outsl  %ds:(%esi),(%dx)
jo     8058df3 <_IO_stdin_used+0x4a8f>
imul   $0x682d2d20,0x6e(%edi),%ebp
gs
popa
imul   $0x656f6420,%fs:0x67(%esi),%ebp
jae    8058db2 <_IO_stdin_used+0x4a4e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058db6 <_IO_stdin_used+0x4a52>
je     8058df9 <_IO_stdin_used+0x4a95>
imul   $0x61,0x20(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 8058e10 <_IO_stdin_used+0x4aac>
outsb  %gs:(%esi),(%dx)
je     8058da7 <_IO_stdin_used+0x4a43>
add    %ch,0x70(%edi)
je     8058e15 <_IO_stdin_used+0x4ab1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x726f662d
gs
jae    8058e2b <_IO_stdin_used+0x4ac7>
and    %ah,0x65(%edi,%ebp,2)
jae    8058ddd <_IO_stdin_used+0x4a79>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8058de1 <_IO_stdin_used+0x4a7d>
je     8058e24 <_IO_stdin_used+0x4ac0>
imul   $0x61,0x20(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 8058e3b <_IO_stdin_used+0x4ad7>
outsb  %gs:(%esi),(%dx)
je     8058dd2 <_IO_stdin_used+0x4a6e>
add    %al,(%eax)
outsw  %ds:(%esi),(%dx)
jb     8058e45 <_IO_stdin_used+0x4ae1>
popa
je     8058dfb <_IO_stdin_used+0x4a97>
jae    8058e4d <_IO_stdin_used+0x4ae9>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ch,0x75(%ebp)
jae    8058e61 <_IO_stdin_used+0x4afd>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058e15 <_IO_stdin_used+0x4ab1>
sub    $0x726f662d,%eax
insl   (%dx),%es:(%edi)
popa
je     8058dfe <_IO_stdin_used+0x4a9a>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x74(%ebx),%esi
gs
data16
data16
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %ah,%gs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8058e87 <_IO_stdin_used+0x4b23>
jae    8058e39 <_IO_stdin_used+0x4ad5>
insl   (%dx),%es:(%edi)
jne    8058e8f <_IO_stdin_used+0x4b2b>
je     8058e3e <_IO_stdin_used+0x4ada>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058e45 <_IO_stdin_used+0x4ae1>
sub    $0x6f72672d,%eax
jne    8058e9c <_IO_stdin_used+0x4b38>
add    %al,(%eax)
add    %al,(%eax)
je     8058e9a <_IO_stdin_used+0x4b36>
and    %ch,%gs:0x70(%edi)
je     8058ea1 <_IO_stdin_used+0x4b3d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x78(%ebp)
arpl   %bp,0x73(%ebp,%esi,2)
imul   $0x2d2d203a,0x65(%esi),%esi
imul   $0x696c006f,0x66(%esi),%ebp
jae    8058ec8 <_IO_stdin_used+0x4b64>
and    %ch,0x66(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8058e80 <_IO_stdin_used+0x4b1c>
dec    %ecx
inc    %esp
jae    8058e84 <_IO_stdin_used+0x4b20>
insl   (%dx),%es:(%edi)
jne    8058eda <_IO_stdin_used+0x4b76>
je     8058e89 <_IO_stdin_used+0x4b25>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058e90 <_IO_stdin_used+0x4b2c>
sub    $0x6469702d,%eax
add    %al,(%eax)
add    %ch,0x73(%ecx,%ebp,2)
je     8058e9d <_IO_stdin_used+0x4b39>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8058ea8 <_IO_stdin_used+0x4b44>
dec    %ecx
inc    %esp
jae    8058eac <_IO_stdin_used+0x4b48>
insl   (%dx),%es:(%edi)
jne    8058f02 <_IO_stdin_used+0x4b9e>
je     8058eb1 <_IO_stdin_used+0x4b4d>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058eb8 <_IO_stdin_used+0x4b54>
sub    $0x6970702d,%eax
add    %al,%fs:(%eax)
outsb  %ds:(%esi),(%dx)
jne    8058f10 <_IO_stdin_used+0x4bac>
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %dh,0x6f(%edx)
ja     8058f21 <_IO_stdin_used+0x4bbd>
and    %ch,0x75(%ebp)
jae    8058f27 <_IO_stdin_used+0x4bc3>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058edb <_IO_stdin_used+0x4b77>
sub    $0x776f722d,%eax
jae    8058ee2 <_IO_stdin_used+0x4b7e>
outsl  %ds:(%esi),(%dx)
jb     8058ee5 <_IO_stdin_used+0x4b81>
sub    $0x6e696c2d,%eax
gs
jae    8058ecd <_IO_stdin_used+0x4b69>
add    %al,(%eax)
add    %dh,0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x69(%ebx)
and    %dh,%fs:0x69(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
sub    %dh,0x29(%bp,%di)
and    %ch,0x75(%ebp)
jae    8058f5a <_IO_stdin_used+0x4bf6>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058f0e <_IO_stdin_used+0x4baa>
sub    $0x6469732d,%eax
add    %ch,0x6e(%edi,%ebp,2)
and    %dh,0x6f(%bp,%di)
jb     8058f71 <_IO_stdin_used+0x4c0d>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ch,0x75(%ebp)
jae    8058f84 <_IO_stdin_used+0x4c20>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058f38 <_IO_stdin_used+0x4bd4>
sub    $0x726f732d,%eax
je     8058f1f <_IO_stdin_used+0x4bbb>
add    %ch,0x73(%ecx,%ebp,2)
je     8058f45 <_IO_stdin_used+0x4be1>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x79(%esp,%esi,2)
jae    8058f4d <_IO_stdin_used+0x4be9>
insl   (%dx),%es:(%edi)
jne    8058fa3 <_IO_stdin_used+0x4c3f>
je     8058f52 <_IO_stdin_used+0x4bee>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058f59 <_IO_stdin_used+0x4bf5>
sub    $0x7974742d,%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x74(%ebx),%esi
gs
data16
data16
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %dh,%gs:0x73(%ebp)
gs
jb     8058fca <_IO_stdin_used+0x4c66>
and    %ch,0x75(%ebp)
jae    8058fd0 <_IO_stdin_used+0x4c6c>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058f84 <_IO_stdin_used+0x4c20>
sub    $0x6573752d,%eax
jb     8058f6b <_IO_stdin_used+0x4c07>
add    %dh,0x65(%eax,%ebp,2)
and    %ch,0x70(%edi)
je     8058fdd <_IO_stdin_used+0x4c79>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x78(%ebp)
arpl   %bp,0x73(%ebp,%esi,2)
imul   $0x2d2d203a,0x65(%esi),%esi
jbe    8058fee <_IO_stdin_used+0x4c8a>
jb     8058ffe <_IO_stdin_used+0x4c9a>
imul   $0x696c0000,0x6e(%edi),%ebp
jae    8059008 <_IO_stdin_used+0x4ca4>
and    %ch,0x66(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    8058fc6 <_IO_stdin_used+0x4c62>
insl   (%dx),%es:(%edi)
jne    805901c <_IO_stdin_used+0x4cb8>
je     8058fcb <_IO_stdin_used+0x4c67>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058fd2 <_IO_stdin_used+0x4c6e>
sub    $0x43,%eax
add    %ch,0x73(%ecx,%ebp,2)
je     8058fdd <_IO_stdin_used+0x4c79>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    805903a <_IO_stdin_used+0x4cd6>
jae    8058fec <_IO_stdin_used+0x4c88>
insl   (%dx),%es:(%edi)
jne    8059042 <_IO_stdin_used+0x4cde>
je     8058ff1 <_IO_stdin_used+0x4c8d>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8058ff8 <_IO_stdin_used+0x4c94>
sub    $0x66000047,%eax
outsl  %ds:(%esi),(%dx)
jb     805904d <_IO_stdin_used+0x4ce9>
popa
je     8059003 <_IO_stdin_used+0x4c9f>
outsl  %ds:(%esi),(%dx)
jb     8059006 <_IO_stdin_used+0x4ca2>
jae    8059057 <_IO_stdin_used+0x4cf3>
jb     805905e <_IO_stdin_used+0x4cfa>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ch,0x75(%ebp)
jae    8059071 <_IO_stdin_used+0x4d0d>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059025 <_IO_stdin_used+0x4cc1>
sub    $0x696c004f,%eax
jae    8059080 <_IO_stdin_used+0x4d1c>
and    %ch,0x66(%edi)
and    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
and    %dh,0x73(%ebp)
gs
jb     805908d <_IO_stdin_used+0x4d29>
and    %ch,0x75(%ebp)
jae    8059093 <_IO_stdin_used+0x4d2f>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059047 <_IO_stdin_used+0x4ce3>
sub    $0x55,%eax
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x74(%ebx),%esi
jae    805909b <_IO_stdin_used+0x4d37>
jae    80590ab <_IO_stdin_used+0x4d47>
imul   $0x61656c20,0x6e(%edi),%ebp
fs
gs
jb     80590b6 <_IO_stdin_used+0x4d52>
and    %cl,0x52(%edi)
and    %ah,0x66(%ebp)
data16
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %ah,%gs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    80590c6 <_IO_stdin_used+0x4d62>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    805907d <_IO_stdin_used+0x4d19>
insl   (%dx),%es:(%edi)
jne    80590d3 <_IO_stdin_used+0x4d6f>
je     8059082 <_IO_stdin_used+0x4d1e>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059089 <_IO_stdin_used+0x4d25>
sub    $0x696c0067,%eax
jae    80590e4 <_IO_stdin_used+0x4d80>
and    %ch,0x66(%edi)
and    %dh,0x65(%ebx)
jae    80590eb <_IO_stdin_used+0x4d87>
imul   $0x61656c20,0x6e(%edi),%ebp
fs
gs
jb     80590f6 <_IO_stdin_used+0x4d92>
and    %cl,0x52(%edi)
and    %ah,0x66(%ebp)
data16
arpl   %si,%gs:0x76(%ecx,%ebp,2)
and    %ah,%gs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8059106 <_IO_stdin_used+0x4da2>
and    %cl,0x44(%ecx)
jae    80590bb <_IO_stdin_used+0x4d57>
ja     80590fe <_IO_stdin_used+0x4d9a>
jae    80590bf <_IO_stdin_used+0x4d5b>
imul   $0x64696c61,0x76(%esi),%ebp
add    %al,(%eax)
popa
insb   (%dx),%es:(%edi)
je     8059111 <_IO_stdin_used+0x4dad>
jb     805911c <_IO_stdin_used+0x4db8>
popa
je     8059116 <_IO_stdin_used+0x4db2>
and    %dl,0x79(%ebx)
jae    805912a <_IO_stdin_used+0x4dc6>
gs
insl   (%dx),%es:(%edi)
cs
insl   (%dx),%es:(%edi)
popa
jo     80590dd <_IO_stdin_used+0x4d79>
imul   $0x756d,0x20(%ebp,%eiz,2),%bp
jae    805913a <_IO_stdin_used+0x4dd6>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80590ee <_IO_stdin_used+0x4d8a>
sub    $0x6e,%eax
add    %ah,0x6f(%esi)
jb     8059145 <_IO_stdin_used+0x4de1>
popa
je     80590fb <_IO_stdin_used+0x4d97>
jae    805914d <_IO_stdin_used+0x4de9>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ch,0x75(%ebp)
jae    8059161 <_IO_stdin_used+0x4dfd>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059115 <_IO_stdin_used+0x4db1>
sub    $0x696c006f,%eax
jae    8059170 <_IO_stdin_used+0x4e0c>
and    %ch,0x66(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8059128 <_IO_stdin_used+0x4dc4>
dec    %ecx
inc    %esp
jae    805912c <_IO_stdin_used+0x4dc8>
insl   (%dx),%es:(%edi)
jne    8059182 <_IO_stdin_used+0x4e1e>
je     8059131 <_IO_stdin_used+0x4dcd>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059138 <_IO_stdin_used+0x4dd4>
sub    $0x6c000070,%eax
imul   $0x20666f20,0x74(%ebx),%esi
jae    805918b <_IO_stdin_used+0x4e27>
jae    805919b <_IO_stdin_used+0x4e37>
imul   $0x73444920,0x6e(%edi),%ebp
and    %ch,0x75(%ebp)
jae    80591a8 <_IO_stdin_used+0x4e44>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805915c <_IO_stdin_used+0x4df8>
sub    $0x6c000073,%eax
imul   $0x20666f20,0x74(%ebx),%esi
je     80591af <_IO_stdin_used+0x4e4b>
jb     80591b9 <_IO_stdin_used+0x4e55>
imul   $0x2820736c,0x61(%esi),%ebp
jo     80591c9 <_IO_stdin_used+0x4e65>
jns    8059183 <_IO_stdin_used+0x4e1f>
and    %dh,0x79(%esp,%esi,2)
cs cs sub %esp,%cs:(%eax)
insl   (%dx),%es:(%edi)
jne    80591d6 <_IO_stdin_used+0x4e72>
je     8059185 <_IO_stdin_used+0x4e21>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805918c <_IO_stdin_used+0x4e28>
sub    $0x6d000074,%eax
jne    80591e6 <_IO_stdin_used+0x4e82>
je     8059195 <_IO_stdin_used+0x4e31>
jae    80591dc <_IO_stdin_used+0x4e78>
je     8059199 <_IO_stdin_used+0x4e35>
jo     80591e0 <_IO_stdin_used+0x4e7c>
jb     80591f0 <_IO_stdin_used+0x4e8c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
imul   $0x67206f74,0x20(%ecx,%edi,2),%esi
gs
je     80591ac <_IO_stdin_used+0x4e48>
sub    $0x706f2078,%eax
je     80591fc <_IO_stdin_used+0x4e98>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ah,0x6d(%ebp)
bound  %esp,0x64(%ebp)
fs gs and %ah,%fs:%gs:(%edi)
sub    $0x6d612027,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x79(%bp,%di)
jae    8059205 <_IO_stdin_used+0x4ea1>
and    %ch,0x70(%edi)
je     805921d <_IO_stdin_used+0x4eb9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80591d8 <_IO_stdin_used+0x4e74>
insl   (%dx),%es:(%edi)
popa
imul   $0x20,0x73(%ebp),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jae    805922b <_IO_stdin_used+0x4ec7>
add    %al,(%eax)
jae    805922f <_IO_stdin_used+0x4ecb>
arpl   %bp,0x6e(%edi)
and    %ah,%fs:0x68(%ebx)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
jo     8059239 <_IO_stdin_used+0x4ed5>
jb     805924d <_IO_stdin_used+0x4ee9>
and    %ah,%gs:0x61(%esi)
imul   $0x6f6e202c,0x64(%ebp,%eiz,2),%ebp
je     8059208 <_IO_stdin_used+0x4ea4>
inc    %edx
push   %ebx
inc    %esp
and    %ch,0x72(%edi)
and    %dl,0x79(%ebx)
jae    8059249 <_IO_stdin_used+0x4ee5>
add    %ah,0x6c(%ecx)
je     805925d <_IO_stdin_used+0x4ef9>
jb     8059268 <_IO_stdin_used+0x4f04>
popa
je     8059262 <_IO_stdin_used+0x4efe>
and    %dl,0x79(%ebx)
jae    8059276 <_IO_stdin_used+0x4f12>
gs
insl   (%dx),%es:(%edi)
cs
insl   (%dx),%es:(%edi)
popa
jo     8059229 <_IO_stdin_used+0x4ec5>
imul   $0x756d,0x20(%ebp,%eiz,2),%bp
jae    8059286 <_IO_stdin_used+0x4f22>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805923a <_IO_stdin_used+0x4ed6>
dec    %esi
add    %ah,0x6f(%esi)
jb     805928d <_IO_stdin_used+0x4f29>
popa
je     8059243 <_IO_stdin_used+0x4edf>
outsl  %ds:(%esi),(%dx)
jb     8059246 <_IO_stdin_used+0x4ee2>
jae    8059297 <_IO_stdin_used+0x4f33>
jb     805929e <_IO_stdin_used+0x4f3a>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ch,0x75(%ebp)
jae    80592b1 <_IO_stdin_used+0x4f4d>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059265 <_IO_stdin_used+0x4f01>
dec    %edi
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
bound  %esi,0x6f(%ebx)
insb   (%dx),%es:(%edi)
gs
je     80592b5 <_IO_stdin_used+0x4f51>
and    %dl,0x20(%edi)
outsl  %ds:(%esi),(%dx)
jo     80592ca <_IO_stdin_used+0x4f66>
imul   $0x746f6e20,0x6e(%edi),%ebp
and    %dh,0x75(%ebx)
jo     80592d2 <_IO_stdin_used+0x4f6e>
outsl  %ds:(%esi),(%dx)
jb     80592d9 <_IO_stdin_used+0x4f75>
gs and %ch,%fs:%gs:(%eax)
jns    80592da <_IO_stdin_used+0x4f76>
jne    805928d <_IO_stdin_used+0x4f29>
push   $0x20657661
popa
and    %ch,(%edi)
fs
gs
jbe    80592a8 <_IO_stdin_used+0x4f44>
fs
jb     80592f1 <_IO_stdin_used+0x4f8d>
insl   (%dx),%es:(%edi)
aas
sub    %eax,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%bp,%di)
jb     80592fd <_IO_stdin_used+0x4f99>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ch,0x75(%ebp)
jae    8059310 <_IO_stdin_used+0x4fac>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80592c4 <_IO_stdin_used+0x4f60>
daa
imul   $0x0,(%edi),%esp
outsw  %ds:(%esi),(%dx)
jb     8059319 <_IO_stdin_used+0x4fb5>
popa
je     80592cf <_IO_stdin_used+0x4f6b>
jae    8059321 <_IO_stdin_used+0x4fbd>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ch,0x75(%ebp)
jae    8059335 <_IO_stdin_used+0x4fd1>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80592e9 <_IO_stdin_used+0x4f85>
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x74(%ebx),%esi
jo     8059348 <_IO_stdin_used+0x4fe4>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80592fc <_IO_stdin_used+0x4f98>
dec    %ecx
inc    %esp
jae    8059300 <_IO_stdin_used+0x4f9c>
insl   (%dx),%es:(%edi)
jne    8059356 <_IO_stdin_used+0x4ff2>
je     8059305 <_IO_stdin_used+0x4fa1>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     805930c <_IO_stdin_used+0x4fa8>
jo     80592ee <_IO_stdin_used+0x4f8a>
add    %al,(%eax)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x64(%ebp)
fs gs and %ah,%fs:%gs:(%edi)
sub    $0x6d612027,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %al,0x53(%bp,%si)
inc    %esp
and    %ch,0x70(%edi)
je     8059374 <_IO_stdin_used+0x5010>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805932f <_IO_stdin_used+0x4fcb>
insl   (%dx),%es:(%edi)
popa
imul   $0x20,0x73(%ebp),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8059382 <_IO_stdin_used+0x501e>
add    %al,(%eax)
add    %dh,0x6e(%ebp)
jae    8059399 <_IO_stdin_used+0x5035>
jo     8059396 <_IO_stdin_used+0x5032>
outsl  %ds:(%esi),(%dx)
jb     805939d <_IO_stdin_used+0x5039>
gs and %ch,%fs:%gs:0x70(%edi)
je     8059399 <_IO_stdin_used+0x5035>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
inc    %edx
push   %ebx
inc    %esp
and    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     805939e <_IO_stdin_used+0x503a>
js     8059368 <_IO_stdin_used+0x5004>
add    %dl,0x59(%esp,%edx,2)
and    %ah,0x6f(%ebx)
jne    80593b4 <_IO_stdin_used+0x5050>
and    %ch,%fs:0x6f(%esi)
je     805936e <_IO_stdin_used+0x500a>
bound  %esp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
jne    80593c3 <_IO_stdin_used+0x505f>
add    %ch,%fs:(%edi)
fs
gs
jbe    805938b <_IO_stdin_used+0x5027>
jo     80593d2 <_IO_stdin_used+0x506e>
jae    805938f <_IO_stdin_used+0x502b>
and    $0x642f0073,%eax
gs
jbe    8059397 <_IO_stdin_used+0x5033>
and    $0x642f0073,%eax
gs
jbe    805939f <_IO_stdin_used+0x503b>
je     80593e6 <_IO_stdin_used+0x5082>
jns    8059399 <_IO_stdin_used+0x5035>
jae    8059376 <_IO_stdin_used+0x5012>
das
fs
gs
jbe    80593aa <_IO_stdin_used+0x5046>
jo     80593f1 <_IO_stdin_used+0x508d>
jns    80593a4 <_IO_stdin_used+0x5040>
jae    8059381 <_IO_stdin_used+0x501d>
das
fs
gs
jbe    80593b5 <_IO_stdin_used+0x5051>
and    $0x6f736e73,%eax
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x73(%ecx,%ebp,2)
je     80593b3 <_IO_stdin_used+0x504f>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dh,0x61(%edi)
jae    80593be <_IO_stdin_used+0x505a>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80593c2 <_IO_stdin_used+0x505e>
popa
and    %dl,0x59(%esp,%edx,2)
add    %ch,0x6d(%ecx)
jo     805941e <_IO_stdin_used+0x50ba>
outsl  %ds:(%esi),(%dx)
jo     8059414 <_IO_stdin_used+0x50b0>
jb     80593d1 <_IO_stdin_used+0x506d>
insb   (%dx),%es:(%edi)
imul   $0x6b6e7500,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     805942b <_IO_stdin_used+0x50c7>
and    %ah,0x6e(%edi)
jne    80593e2 <_IO_stdin_used+0x507e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     8059434 <_IO_stdin_used+0x50d0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x666e692d
outsl  %ds:(%esi),(%dx)
add    %ch,0x7265762d
jae    8059445 <_IO_stdin_used+0x50e1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8059407 <_IO_stdin_used+0x50a3>
dec    %ecx
inc    %esp
and    %ch,0x73(%ecx,%ebp,2)
je     805940f <_IO_stdin_used+0x50ab>
jae    805946a <_IO_stdin_used+0x5106>
outsb  %ds:(%esi),(%dx)
je     8059455 <_IO_stdin_used+0x50f1>
js     8059416 <_IO_stdin_used+0x50b2>
gs
jb     805946b <_IO_stdin_used+0x5107>
outsl  %ds:(%esi),(%dx)
jb     80593fc <_IO_stdin_used+0x5098>
jo     8059470 <_IO_stdin_used+0x510c>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8059424 <_IO_stdin_used+0x50c0>
dec    %ecx
inc    %esp
and    %ch,0x75(%edi)
je     805942b <_IO_stdin_used+0x50c7>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x41(%bx,%di)
fs
gs
addr16 inc %di
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     8059494 <_IO_stdin_used+0x5130>
jne    8059477 <_IO_stdin_used+0x5113>
add    %dh,0x65(%eax,%ebp,2)
and    %ch,0x70(%edi)
je     8059494 <_IO_stdin_used+0x5130>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x78(%ebp)
arpl   %bp,0x73(%ebp,%esi,2)
imul   $0x562d203a,0x65(%esi),%esi
add    %ch,0x73(%ecx,%ebp,2)
je     8059464 <_IO_stdin_used+0x5100>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x73(%ebp)
gs
jb     80594bf <_IO_stdin_used+0x515b>
and    %ch,0x75(%ebp)
jae    80594c5 <_IO_stdin_used+0x5161>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059479 <_IO_stdin_used+0x5115>
sub    $0x6e750075,%eax
jae    80594d5 <_IO_stdin_used+0x5171>
jo     80594d2 <_IO_stdin_used+0x516e>
outsl  %ds:(%esi),(%dx)
jb     80594d9 <_IO_stdin_used+0x5175>
gs and %dl,%fs:%gs:0x79(%ebx)
jae    80594c2 <_IO_stdin_used+0x515e>
and    %ch,0x70(%edi)
je     80594da <_IO_stdin_used+0x5176>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%edi)
jns    8059498 <_IO_stdin_used+0x5134>
bound  %esp,0x64(%ecx)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80594a3 <_IO_stdin_used+0x513f>
push   $0x65707061
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f727020
bound  %ebp,0x6d(%ebp,%eiz,2)
and    %ah,(%ebx)
xor    %eax,(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80594be <_IO_stdin_used+0x515a>
push   $0x65707061
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f727020
bound  %ebp,0x6d(%ebp,%eiz,2)
and    %ah,(%ebx)
xor    (%eax),%al
je     805951c <_IO_stdin_used+0x51b8>
and    %ch,%gs:0x70(%edi)
je     8059523 <_IO_stdin_used+0x51bf>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x78(%ebp)
arpl   %bp,0x73(%ebp,%esi,2)
imul   $0x4c203a,0x65(%esi),%esi
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x74(%ebx),%esi
jne    805954a <_IO_stdin_used+0x51e6>
gs
jb     805954d <_IO_stdin_used+0x51e9>
and    %ch,0x75(%ebp)
jae    8059553 <_IO_stdin_used+0x51ef>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059507 <_IO_stdin_used+0x51a3>
push   %ebp
add    %dh,0x65(%eax,%ebp,2)
and    %ch,0x70(%edi)
je     805955a <_IO_stdin_used+0x51f6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x78(%ebp)
arpl   %bp,0x73(%ebp,%esi,2)
imul   $0x56203a,0x65(%esi),%esi
addr16 popa
jb     805956a <_IO_stdin_used+0x5206>
popa
and    %ch,%gs:0x70(%bx)
je     8059579 <_IO_stdin_used+0x5215>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x73(%ebp)
gs
jb     8059538 <_IO_stdin_used+0x51d4>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x65(%edi,%ebp,2)
jae    8059542 <_IO_stdin_used+0x51de>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8059546 <_IO_stdin_used+0x51e2>
gs
js     8059592 <_IO_stdin_used+0x522e>
jae    805959f <_IO_stdin_used+0x523b>
add    %dh,0x73(%ebp)
gs
jb     8059551 <_IO_stdin_used+0x51ed>
dec    %ecx
inc    %esp
and    %ch,0x75(%edi)
je     8059558 <_IO_stdin_used+0x51f4>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x72(%bx)
outsl  %ds:(%esi),(%dx)
jne    80595b6 <_IO_stdin_used+0x5252>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x65(%edi,%ebp,2)
jae    8059571 <_IO_stdin_used+0x520d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8059575 <_IO_stdin_used+0x5211>
gs
js     80595c1 <_IO_stdin_used+0x525d>
jae    80595ce <_IO_stdin_used+0x526a>
add    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    80595d0 <_IO_stdin_used+0x526c>
and    %cl,0x44(%ecx)
and    %ch,0x75(%edi)
je     8059588 <_IO_stdin_used+0x5224>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x72(%di)
jb     80595e4 <_IO_stdin_used+0x5280>
jb     80595b1 <_IO_stdin_used+0x524d>
and    %ah,0x47000a73
jb     80595ee <_IO_stdin_used+0x528a>
jne    80595f1 <_IO_stdin_used+0x528d>
add    %dl,0x73(%ebp)
gs
jb     8059587 <_IO_stdin_used+0x5223>
arpl   %bp,0x6c(%edi)
jae    805958c <_IO_stdin_used+0x5228>
arpl   %bp,0x6c(%edi)
jne    80595fe <_IO_stdin_used+0x529a>
outsb  %ds:(%esi),(%dx)
jae    8059594 <_IO_stdin_used+0x5230>
arpl   %si,0x6d(%ebp)
jne    8059605 <_IO_stdin_used+0x52a1>
popa
je     8059605 <_IO_stdin_used+0x52a1>
jbe    8059603 <_IO_stdin_used+0x529f>
add    %ah,0x73(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x66(%eax,%eax,1)
outsl  %ds:(%esi),(%dx)
jb     8059611 <_IO_stdin_used+0x52ad>
jae    8059622 <_IO_stdin_used+0x52be>
add    %ah,0x6f(%esi)
jb     8059620 <_IO_stdin_used+0x52bc>
popa
je     80595b6 <_IO_stdin_used+0x5252>
insb   (%dx),%es:(%edi)
imul   $0x6f6e0073,0x65(%esi),%ebp
sub    $0x64616568,%eax
gs
jb     80595c6 <_IO_stdin_used+0x5262>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x64616568,%eax
gs
jb     8059643 <_IO_stdin_used+0x52df>
add    %ch,0x6f(%esi)
sub    $0x64616568,%eax
imul   $0x2d6f6e00,0x67(%esi),%ebp
push   $0x69646165
outsb  %ds:(%esi),(%dx)
addr16 jae 80595e8 <_IO_stdin_used+0x5284>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
push   $0x65646165
jb     80595f1 <_IO_stdin_used+0x528d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
push   $0x65646165
jb     805966d <_IO_stdin_used+0x5309>
add    %ch,0x6f(%esi)
push   $0x69646165
outsb  %ds:(%esi),(%dx)
add    %ch,0x6f(%bp)
push   $0x69646165
outsb  %ds:(%esi),(%dx)
addr16 jae 8059610 <_IO_stdin_used+0x52ac>
jb     8059681 <_IO_stdin_used+0x531d>
ja     8059687 <_IO_stdin_used+0x5323>
add    %dh,0x6f(%ebx)
jb     805968d <_IO_stdin_used+0x5329>
add    %dh,0x69(%edi)
fs
je     8059687 <_IO_stdin_used+0x5323>
add    %al,(%esi,%ecx,1)
add    $0x5101708,%eax
or     %dl,(%edi)
adc    %al,0x50e2508
or     %ah,0x2508050e
push   %cs
add    $0x50e2508,%eax
or     %ah,0x2508050e
push   %cs
add    $0x50e2508,%eax
or     %ah,0x2508050e
push   %cs
add    $0x50e2508,%eax
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x5101708
or     %al,0xe(%eax)
add    $0x5101708,%eax
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,%dh
syscall
or     %ah,0xc(%eax)
add    $0x50f9108,%eax
or     %ch,0x1708050f(%eax)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x50ebf08
or     %cl,%dh
push   %cs
add    $0x50f1c08,%eax
or     %dl,0xf(%eax)
add    $0x50c7f08,%eax
or     %ah,0x1708050c(%eax)
adc    %al,0x50cac08
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x5101708
or     %dl,(%edi)
adc    %al,0x5101708
or     %dh,0x1708050c(%ebp)
adc    %al,0x50cbe08
or     %dl,(%edi)
adc    %al,0x50cca08
or     %dl,%dh
or     $0x5,%al
or     %ah,%dl
or     $0x5,%al
or     %ch,%dh
or     $0x5,%al
or     %dl,(%edi)
adc    %al,0x50d1808
or     %ah,0xd520805(,%ecx,1)
add    $0x50d5e08,%eax
or     %bh,0xd(%edx)
add    $0x50d9308,%eax
or     %al,%cl
or     $0x10170805,%eax
add    $0x50e4c08,%eax
or     %bl,0xe(%ebx)
add    $0x50e6708,%eax
or     %bl,-0x5bf7faf2(%eax)
push   %cs
add    $0x50eb308,%eax
or     %bh,%al
or     $0x12c20805,%eax
add    $0x514ab08,%eax
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %al,%bl
adc    %al,0x514ab08
or     %dh,(%edx)
adc    0x514ab08,%al
or     %ch,0x10080514(%ebx)
adc    0x511dc08,%al
or     %cl,%bl
adc    %eax,0x514ab08
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %dh,0x12(%esi)
add    $0x510d108,%eax
or     %bh,-0x73f7faef(%edx)
adc    %eax,0x5117e08
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,0x70080514(%ebx)
adc    %eax,0x5113f08
or     %bh,%ch
adc    %al,0x514ab08
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %dl,%cl
adc    %al,0x514ab08
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %ch,-0x7bf7faec(%ebx)
adc    0x514ab08,%al
or     %dh,%dl
adc    %al,0x510e708
or     %al,%bl
adc    %al,0x5146508
or     %dl,%dl
adc    0x514ab08,%eax
or     %ch,-0x43f7faec(%ebx)
adc    0x514ab08,%eax
or     %ch,0x57080513(%esi)
adc    $0x5,%al
or     %ch,(%eax)
adc    $0x5,%al
or     %bh,0x14(%ebp)
add    $0x5138008,%eax
or     %ch,-0x54f7faec(%ebx)
adc    $0x5,%al
or     %al,0x13(%edi)
add    $0x5131708,%eax
or     %ah,%bl
adc    0x514ab08,%al
or     %ch,0x12(%eax)
add    $0x5129208,%eax
or     %bl,%ah
adc    %al,0x8
add    %bh,0x5(%ebp,%edx,4)
or     %dl,0x3(%ebp)
add    $0x5958208,%eax
or     %bl,-0x78f7fafd(%eax)
xchg   %eax,%ebp
add    $0x503d008,%eax
or     %cl,0x21c0805(%ebp,%edx,4)
add    $0x557df08,%eax
or     %al,%bl
add    $0x5,%al
or     %dl,0x3d50805(%ebp,%edx,4)
add    $0x5959f08,%eax
or     %dl,(%esi)
add    0x595a808,%eax
or     %bh,-0x50f7fafb(%eax)
xchg   %eax,%ebp
add    $0x505e108,%eax
or     %ch,0x59(%ecx)
add    $0x504d408,%eax
or     %bh,-0x1f7fa6b(%edi)
add    0x595c908,%eax
or     %al,(%ebx)
add    $0x5,%al
or     %dl,%ah
xchg   %eax,%ebp
add    $0x501fa08,%eax
or     %bl,%bh
xchg   %eax,%ebp
add    $0x501fa08,%eax
or     %dl,%al
xchg   %eax,%ebx
add    $0x5050808,%eax
or     %dh,0x4f080595(%esi)
add    0x595bc08,%al
or     %bh,(%edi)
add    0x595c608,%eax
or     %al,0x5(%ebx,%eax,1)
or     %dl,%cl
xchg   %eax,%ebp
add    $0x5034908,%eax
or     %bl,%ah
xchg   %eax,%ebp
add    $0x5028708,%eax
or     %ch,%al
xchg   %eax,%ebp
add    $0x5029508,%eax
or     %dh,%cl
xchg   %eax,%ebp
add    $0x5028208,%eax
or     %bh,%bl
xchg   %eax,%ebp
add    $0x501c608,%eax
or     %al,0xc6080596
add    %eax,0x5440c08
or     %cl,0x5(%ebx)
add    $0x5440b08,%eax
or     %al,0x10080505(%eax)
xchg   %eax,%esi
add    $0x5024f08,%eax
or     %cl,0x5f(%ebx)
add    $0x502a508,%eax
or     %dl,0xe8080596
add    0x544ea08,%al
or     %cl,(%eax)
add    $0x5,%al
or     %bh,0x4808055a
add    $0x5,%al
or     %dl,%bh
xchg   %eax,%ebx
add    $0x5048008,%eax
or     %bl,(%edx)
xchg   %eax,%esi
add    $0x5021c08,%eax
or     %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80599d0 <_IO_stdin_used+0x566c>
jae    8059a17 <_IO_stdin_used+0x56b3>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     8059a27 <_IO_stdin_used+0x56c3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80599e2 <_IO_stdin_used+0x567e>
arpl   %bp,0x6e(%edi)
data16
insb   (%dx),%es:(%edi)
imul   $0x1bf00000,0x74(%ebx),%esp
add    $0x51c0008,%eax
or     %dl,(%eax)
sbb    $0x5,%al
or     %ah,(%eax)
sbb    $0x5,%al
or     %dl,0x4808051b(%eax)
sbb    $0x5,%al
or     %cl,0x1c(%eax)
add    $0x51c4808,%eax
or     %ch,0x4808051b(%eax)
sbb    $0x5,%al
or     %cl,0x1c(%eax)
add    $0x51c4808,%eax
or     %bh,0x4808051b(%eax)
sbb    $0x5,%al
or     %cl,0x1c(%eax)
add    $0x51c4808,%eax
or     %ch,-0x6ff7fae5(%eax)
sbb    0x51be008,%eax
or     %cl,%al
sbb    0x5208808,%eax
or     %dh,-0x1ff7fae3(%eax)
sbb    $0x1e100805,%eax
add    $0x51e4808,%eax
or     %al,-0x47f7fae2(%eax)
push   %ds
add    $0x51ef008,%eax
or     %ch,(%eax)
pop    %ds
add    $0x51f6008,%eax
or     %bl,-0x2ff7fae1(%eax)
pop    %ds
add    $0x5200808,%eax
or     %al,0x20(%eax)
add    $0x51d7008,%eax
or     %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x63(%esi,%ebp,1)
add    %ah,0x61(%edx)
and    %dh,%fs:0x6f(%ebx)
jb     8059add <_IO_stdin_used+0x5779>
imul   $0x646f6320,0x67(%esi),%ebp
add    %dh,%gs:0x6f(%ebx)
jb     8059aea <_IO_stdin_used+0x5786>
outsw  %ds:(%esi),(%dx)
jb     8059ae7 <_IO_stdin_used+0x5783>
popa
je     8059aab <_IO_stdin_used+0x5747>
arpl   %ax,(%eax)
imul   $0x65706f72,0x70(%ebp),%ebp
jb     8059aa8 <_IO_stdin_used+0x5744>
outsw  %ds:(%esi),(%dx)
jb     8059af9 <_IO_stdin_used+0x5795>
popa
je     8059aaf <_IO_stdin_used+0x574b>
insb   (%dx),%es:(%edi)
imul   $0x706d6500,0x74(%ebx),%esi
je     8059b12 <_IO_stdin_used+0x57ae>
and    %ah,0x6f(%esi)
jb     8059b0b <_IO_stdin_used+0x57a7>
popa
je     8059ac1 <_IO_stdin_used+0x575d>
insb   (%dx),%es:(%edi)
imul   $0x92c2000,0x74(%ebx),%esi
or     (%eax),%al
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
add    %ch,0x6d(%ecx)
jo     8059b2c <_IO_stdin_used+0x57c8>
outsl  %ds:(%esi),(%dx)
jo     8059b22 <_IO_stdin_used+0x57be>
jb     8059adf <_IO_stdin_used+0x577b>
inc    %ecx
dec    %ecx
pop    %eax
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     8059b45 <_IO_stdin_used+0x57e1>
outsl  %ds:(%esi),(%dx)
jb     8059ad4 <_IO_stdin_used+0x5770>
jne    8059b44 <_IO_stdin_used+0x57e0>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %al,0x49(%ecx)
pop    %eax
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     8059b62 <_IO_stdin_used+0x57fe>
outsl  %ds:(%esi),(%dx)
jb     8059af1 <_IO_stdin_used+0x578d>
insl   (%dx),%es:(%edi)
jne    8059b60 <_IO_stdin_used+0x57fc>
je     8059b5f <_IO_stdin_used+0x57fb>
jo     8059b64 <_IO_stdin_used+0x5800>
and    %dh,%gs:0x6f(%ebx)
jb     8059b72 <_IO_stdin_used+0x580e>
and    %ch,0x70(%edi)
je     8059b6c <_IO_stdin_used+0x5808>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    8059b07 <_IO_stdin_used+0x57a3>
jne    8059b77 <_IO_stdin_used+0x5813>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
jb     8059b87 <_IO_stdin_used+0x5823>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x706d6900,0x72(%ebp),%esp
jb     8059b92 <_IO_stdin_used+0x582e>
jo     8059b8a <_IO_stdin_used+0x5826>
jb     8059b47 <_IO_stdin_used+0x57e3>
jae    8059b98 <_IO_stdin_used+0x5834>
jb     8059b9f <_IO_stdin_used+0x583b>
and    %ch,0x73(%ecx,%ebp,2)
je     8059b31 <_IO_stdin_used+0x57cd>
gs
insl   (%dx),%es:(%edi)
jo     8059ba9 <_IO_stdin_used+0x5845>
jns    8059b57 <_IO_stdin_used+0x57f3>
jae    8059ba8 <_IO_stdin_used+0x5844>
jb     8059baf <_IO_stdin_used+0x584b>
and    %ch,0x73(%ecx,%ebp,2)
je     8059b41 <_IO_stdin_used+0x57dd>
push   %eax
push   %ebx
pop    %edi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
data16
insb   (%dx),%es:(%edi)
imul   $0x20676e69,0x74(%ebx),%esp
outsw  %ds:(%esi),(%dx)
jb     8059bc8 <_IO_stdin_used+0x5864>
popa
je     8059b7e <_IO_stdin_used+0x581a>
outsl  %ds:(%esi),(%dx)
jo     8059bd5 <_IO_stdin_used+0x5871>
imul   $0x6f6c0073,0x6e(%edi),%ebp
jae    8059bde <_IO_stdin_used+0x587a>
and    %ch,0x79(%ebp)
and    %dl,0x47(%eax)
dec    %ecx
inc    %esp
add    %ch,0x73(%edi,%ebp,2)
je     8059b98 <_IO_stdin_used+0x5834>
insl   (%dx),%es:(%edi)
jns    8059b9b <_IO_stdin_used+0x5837>
inc    %ebx
dec    %esp
push   %ebx
add    %al,(%eax)
push   %eax
push   %eax
dec    %ecx
inc    %esp
and    %dh,0x6f(%ebx)
jb     8059bfd <_IO_stdin_used+0x5899>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x6f(%esi)
jb     8059bf7 <_IO_stdin_used+0x5893>
jae    8059c08 <_IO_stdin_used+0x58a4>
and    %ch,0x75(%edi)
je     8059c09 <_IO_stdin_used+0x58a5>
jne    8059c0f <_IO_stdin_used+0x58ab>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
data16
insb   (%dx),%es:(%edi)
imul   $0x0,0x74(%ebx),%esp
jae    8059c0f <_IO_stdin_used+0x58ab>
jb     8059c15 <_IO_stdin_used+0x58b1>
outsl  %ds:(%esi),(%dx)
jne    8059c22 <_IO_stdin_used+0x58be>
insb   (%dx),%es:(%edi)
jns    8059bd2 <_IO_stdin_used+0x586e>
arpl   %si,0x61(%edx)
jae    8059c1f <_IO_stdin_used+0x58bb>
imul   $0x6f67203a,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
bound  %edi,%fs:0x65(%ecx)
and    %ah,0x72(%ebx)
jne    8059c2d <_IO_stdin_used+0x58c9>
insb   (%dx),%es:(%edi)
and    %dh,0x6f(%edi)
jb     8059c3a <_IO_stdin_used+0x58d6>
add    %ah,%fs:0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    8059c42 <_IO_stdin_used+0x58de>
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%edi)
fs
je     8059c44 <_IO_stdin_used+0x58e0>
jae    8059bfe <_IO_stdin_used+0x589a>
insl   (%dx),%es:(%edi)
jne    8059c54 <_IO_stdin_used+0x58f0>
je     8059c03 <_IO_stdin_used+0x589f>
bound  %esp,0x20(%ebp)
jne    8059c56 <_IO_stdin_used+0x58f2>
jae    8059c53 <_IO_stdin_used+0x58ef>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x63(%ebp,%eiz,2)
imul   $0x756e206c,0x61(%ebp),%ebp
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
jae    8059bff <_IO_stdin_used+0x589b>
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x73(%ebp)
gs
jb     8059c3a <_IO_stdin_used+0x58d6>
fs imul $0x2064,%fs:%gs:0x65(%esi),%bp
outsw  %ds:(%esi),(%dx)
jb     8059c86 <_IO_stdin_used+0x5922>
popa
je     8059c3c <_IO_stdin_used+0x58d8>
jae    8059c8e <_IO_stdin_used+0x592a>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x73252220,0x72(%ebp),%esp
and    (%eax),%al
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8059c54 <_IO_stdin_used+0x58f0>
jae    8059c9b <_IO_stdin_used+0x5937>
je     8059c58 <_IO_stdin_used+0x58f4>
ja     8059ca3 <_IO_stdin_used+0x593f>
fs
je     8059ca5 <_IO_stdin_used+0x5941>
and    %ah,0x6f(%esi)
jb     8059c62 <_IO_stdin_used+0x58fe>
popa
and    %ch,0x61(%ebp)
arpl   %si,0x6f(%edx)
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
jne    8059cba <_IO_stdin_used+0x5956>
je     8059cb9 <_IO_stdin_used+0x5955>
sub    $0x756c6f63,%eax
insl   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
sub    %esp,(%eax)
outsw  %ds:(%esi),(%dx)
jb     8059cca <_IO_stdin_used+0x5966>
popa
je     8059c80 <_IO_stdin_used+0x591c>
jae    8059cd2 <_IO_stdin_used+0x596e>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x41000000,0x72(%ebp),%esp
dec    %ecx
pop    %eax
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     8059cf2 <_IO_stdin_used+0x598e>
outsl  %ds:(%esi),(%dx)
jb     8059ca1 <_IO_stdin_used+0x593d>
jo     8059cf5 <_IO_stdin_used+0x5991>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8059cf2 <_IO_stdin_used+0x598e>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%bp,%si)
add    %ch,0x70(%bx)
je     8059cfd <_IO_stdin_used+0x5999>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6163204f
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8059cc2 <_IO_stdin_used+0x595e>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059cc9 <_IO_stdin_used+0x5965>
outsl  %ds:(%esi),(%dx)
je     8059d14 <_IO_stdin_used+0x59b0>
gs
jb     8059ccf <_IO_stdin_used+0x596b>
outsw  %ds:(%esi),(%dx)
jb     8059d20 <_IO_stdin_used+0x59bc>
popa
je     8059cd6 <_IO_stdin_used+0x5972>
outsl  %ds:(%esi),(%dx)
jo     8059d2d <_IO_stdin_used+0x59c9>
imul   $0x73,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jo     8059d37 <_IO_stdin_used+0x59d3>
imul   $0x69204f20,0x6e(%edi),%ebp
jae    8059cec <_IO_stdin_used+0x5988>
outsb  %ds:(%esi),(%dx)
imul   $0x69662072,%gs:0x65(%eax,%ebp,2),%esi
69
jb     8059d4b <_IO_stdin_used+0x59e7>
je     8059cfa <_IO_stdin_used+0x5996>
outsw  %ds:(%esi),(%dx)
jb     8059d4b <_IO_stdin_used+0x59e7>
popa
je     8059d01 <_IO_stdin_used+0x599d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8059d05 <_IO_stdin_used+0x59a1>
jae    8059d56 <_IO_stdin_used+0x59f2>
jb     8059d5d <_IO_stdin_used+0x59f9>
and    %ch,0x72(%edi)
fs
gs
jb     8059cf0 <_IO_stdin_used+0x598c>
bound  %esi,0x67(%ebp)
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
jne    8059d6b <_IO_stdin_used+0x5a07>
je     8059d1a <_IO_stdin_used+0x59b6>
jb     8059d61 <_IO_stdin_used+0x59fd>
jae    8059d63 <_IO_stdin_used+0x59ff>
je     8059d20 <_IO_stdin_used+0x59bc>
je     8059d6a <_IO_stdin_used+0x5a06>
and    %ch,%gs:0x73(%ecx,%ebp,2)
je     8059d29 <_IO_stdin_used+0x59c5>
imul   $0x74,0x73(%edx),%si
add    %dh,0x6c(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
and    %bh,(%eax,%esi,2)
jb     8059d88 <_IO_stdin_used+0x5a24>
arpl   %si,0x73(%eax)
inc    %eax
data16
jb     8059d85 <_IO_stdin_used+0x5a21>
gs
insb   (%dx),%es:(%edi)
imul   $0x726f2e73,0x74(%ebx),%esi
and    %dh,%ds:0x68(%bx)
popa
je     8059d51 <_IO_stdin_used+0x59ed>
jns    8059da2 <_IO_stdin_used+0x5a3e>
jne    8059d55 <_IO_stdin_used+0x59f1>
gs
js     8059da8 <_IO_stdin_used+0x5a44>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %al,(%eax)
add    %dh,0x6c(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
and    %bh,(%eax,%esi,2)
jb     8059db8 <_IO_stdin_used+0x5a54>
arpl   %si,0x73(%eax)
inc    %eax
data16
jb     8059db5 <_IO_stdin_used+0x5a51>
gs
insb   (%dx),%es:(%edi)
imul   $0x726f2e73,0x74(%ebx),%esi
and    %dh,%ds:0x68(%bx)
popa
je     8059d81 <_IO_stdin_used+0x5a1d>
jns    8059dd2 <_IO_stdin_used+0x5a6e>
jne    8059d85 <_IO_stdin_used+0x5a21>
ja     8059dc8 <_IO_stdin_used+0x5a64>
outsb  %ds:(%esi),(%dx)
je     8059d8a <_IO_stdin_used+0x5a26>
sub    %ch,0x542d2f4c
sub    $0x20,%al
sub    $0x2f6d2f6d,%eax
dec    %eax
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%eax,%edx,2)
push   %ebx
pop    %edi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
sub    %eax,(%eax)
add    %al,(%eax)
ja     8059def <_IO_stdin_used+0x5a8b>
jb     8059dfe <_IO_stdin_used+0x5a9a>
imul   $0x5024203a,0x67(%esi),%ebp
push   %ebx
pop    %edi
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8059e0b <_IO_stdin_used+0x5aa7>
fs and %ch,%cs:%fs:(%eax)
and    $0xa2973,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8059dd8 <_IO_stdin_used+0x5a74>
jne    8059e2d <_IO_stdin_used+0x5ac9>
and    %ch,%gs:0x75(%edi)
je     8059e30 <_IO_stdin_used+0x5acc>
jne    8059e36 <_IO_stdin_used+0x5ad2>
and    %ch,0x6f(%ebp)
imul   $0x20737265,%fs:0x69(%esi),%esp
ja     8059e38 <_IO_stdin_used+0x5ad4>
je     8059e39 <_IO_stdin_used+0x5ad5>
and    %dh,0x73(%ebp)
gs
jb     8059e04 <_IO_stdin_used+0x5aa0>
fs imul $0x2064,%fs:%gs:0x65(%esi),%bp
outsl  %ds:(%esi),(%dx)
jne    8059e56 <_IO_stdin_used+0x5af2>
jo     8059e59 <_IO_stdin_used+0x5af5>
je     8059de6 <_IO_stdin_used+0x5a82>
add    %al,(%eax)
sub    $0x542d2f4c,%eax
and    %dh,0x69(%edi)
je     8059e5a <_IO_stdin_used+0x5af6>
and    %cl,0x2f(%eax)
insl   (%dx),%es:(%edi)
das
sub    $0x6e61206d,%eax
and    %ch,%fs:0x4f2d2f6f
das
outsl  %ds:(%esi),(%dx)
das
dec    %edi
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
jae    8059e75 <_IO_stdin_used+0x5b11>
outsb  %ds:(%esi),(%dx)
jae    8059e78 <_IO_stdin_used+0x5b14>
add    %ch,0x6f(%ebp)
imul   $0x2d207265,%fs:0x69(%esi),%esp
jns    8059e40 <_IO_stdin_used+0x5adc>
ja     8059e8b <_IO_stdin_used+0x5b27>
je     8059e8c <_IO_stdin_used+0x5b28>
outsl  %ds:(%esi),(%dx)
jne    8059e9b <_IO_stdin_used+0x5b37>
and    %ah,0x6f(%esi)
jb     8059e99 <_IO_stdin_used+0x5b35>
popa
je     8059e4f <_IO_stdin_used+0x5aeb>
sub    $0x616d206c,%eax
imul   $0x20,0x73(%ebp),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
jae    8059ea5 <_IO_stdin_used+0x5b41>
add    %al,(%eax)
add    %al,(%eax)
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8059ec0 <_IO_stdin_used+0x5b5c>
jb     8059e8d <_IO_stdin_used+0x5b29>
and    %ch,0x6f(%esi)
and    %dl,0x49(%eax)
inc    %esp
and    %ch,0x72(%edi)
and    %dl,0x50(%eax)
dec    %ecx
inc    %esp
and    %ah,0x6f(%esi)
jb     8059e87 <_IO_stdin_used+0x5b23>
sub    $0x706f206a,%eax
je     8059ed7 <_IO_stdin_used+0x5b73>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     8059ef0 <_IO_stdin_used+0x5b8c>
jb     8059ebd <_IO_stdin_used+0x5b59>
and    %ch,0x6f(%esi)
and    %dl,0x52(%eax)
dec    %ecx
and    %ah,0x6f(%esi)
jb     8059eaf <_IO_stdin_used+0x5b4b>
sub    $0x706f2063,%eax
je     8059eff <_IO_stdin_used+0x5b9b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x69772054,%eax
je     8059f0b <_IO_stdin_used+0x5ba7>
and    %cl,0x2f(%eax)
sub    $0x206d2f6d,%eax
bound  %esi,0x74(%ebp)
and    %ch,0x6f(%esi)
and    %dl,0x49(%eax)
inc    %esp
and    %ah,0x6f(%esi)
jb     8059eda <_IO_stdin_used+0x5b76>
push   %ebx
push   %eax
dec    %ecx
inc    %esp
and    %dh,0x20(%edi,%ebp,2)
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059ec9 <_IO_stdin_used+0x5b65>
add    %al,(%eax)
add    %ch,0x6977204c
je     8059f3b <_IO_stdin_used+0x5bd7>
and    %cl,0x2f(%eax)
sub    $0x206d2f6d,%eax
bound  %esi,0x74(%ebp)
and    %ch,0x6f(%esi)
and    %dl,0x49(%eax)
inc    %esp
das
push   %eax
inc    %edi
dec    %ecx
inc    %esp
das
push   %ebx
dec    %ecx
inc    %esp
das
push   %ebx
inc    %ebp
push   %ebx
push   %ebx
and    %ah,0x6f(%esi)
jb     8059f18 <_IO_stdin_used+0x5bb4>
dec    %esi
dec    %esp
push   %edi
push   %eax
and    %dh,0x20(%edi,%ebp,2)
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8059f07 <_IO_stdin_used+0x5ba3>
add    %dl,0x5008052c(%eax)
sub    $0x5,%al
or     %dh,(%eax)
sub    $0x5,%al
or     %cl,%al
sub    0x52c3008,%eax
or     %dl,-0x6ff7fad5(%eax)
sub    0x52c3008,%eax
or     %dl,%al
sub    $0x5,%al
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dl,%al
sub    $0x5,%al
or     %dl,%al
sub    $0x5,%al
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52cd008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52d7008,%eax
or     %dh,0x2d(%eax)
add    $0x52cd008,%eax
or     %ah,0x6f(%ebx)
jne    805a04c <_IO_stdin_used+0x5ce8>
and    %ch,%fs:0x70(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,0x69(%eax)
jo     805a050 <_IO_stdin_used+0x5cec>
add    %ah,0x78(%ebp)
arpl   %sp,%gs:(%eax)
popaw
imul   $0x756f6300,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     805a022 <_IO_stdin_used+0x5cbe>
outsw  %ds:(%esi),(%dx)
jb     805a071 <_IO_stdin_used+0x5d0d>
add    %ah,0x61(%edx)
arpl   %bp,0x74(%ebx)
jb     805a06f <_IO_stdin_used+0x5d0b>
arpl   %sp,0xa(%ebp)
add    %dh,0x20(%eax)
js     805a036 <_IO_stdin_used+0x5cd2>
cmp    $0xa3020,%eax
jno    805a092 <_IO_stdin_used+0x5d2e>
imul   $0x626467,0x0(%edx,%ecx,1),%esi
fs bound %esi,%fs:%gs:0x67(%ebp)
pop    %edi
jae    805a0a1 <_IO_stdin_used+0x5d3d>
outsl  %ds:(%esi),(%dx)
jo     805a03a <_IO_stdin_used+0x5cd6>
add    %dh,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
je     805a0ab <_IO_stdin_used+0x5d47>
popa
arpl   %sp,0xa(%ebp)
add    %bh,0x6f(%ecx)
jne    805a062 <_IO_stdin_used+0x5cfe>
outsw  %ds:(%esi),(%dx)
jb     805a0ad <_IO_stdin_used+0x5d49>
outsl  %ds:(%esi),(%dx)
je     805a069 <_IO_stdin_used+0x5d05>
je     805a0ba <_IO_stdin_used+0x5d56>
and    %dh,0x65(%ebx)
je     805a070 <_IO_stdin_used+0x5d0c>
and    0x72(%eax),%dh
outsl  %ds:(%esi),(%dx)
addr16 jb 805a0b8 <_IO_stdin_used+0x5d54>
insl   (%dx),%es:(%edi)
and    (%eax),%al
ja     805a0ce <_IO_stdin_used+0x5d6a>
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     805a066 <_IO_stdin_used+0x5d02>
add    %ebx,(%ebx)
add    (%ebx),%edi
sbb    %al,(%edi)
add    %al,(%eax)
loop   805a072 <_IO_stdin_used+0x5d0e>
add    %al,(%eax)
test   $0xf0,%al
(bad)
pushl  (%edi,%eax,1)
add    %al,(%eax)
pop    %eax
idiv   %dh
call   *%eax
and    $0x0,%al
add    %bh,-0x7(%eax)
(bad)
ljmp   *0x0(%eax,%ecx,1)
add    %bh,%al
add    %bh,%bh
lcall  *0x7(%eax)
add    %al,(%eax)
pop    %eax
add    %edi,%edi
jmp    *-0x57fffff9(%eax)
add    $0xff,%al
push   %esp
pop    %es
add    %al,(%eax)
mov    $0x2cffff05,%eax
or     %al,(%eax)
add    %ch,-0x630000fa(%eax)
or     %al,(%eax)
add    %cl,(%eax)
or     %edi,%edi
(bad)
fmull  (%eax)
add    %al,(%eax)
sub    %cl,(%edi)
(bad)
decl   (%ecx,%ecx,1)
add    %al,(%eax)
fcoms  (%ecx)
(bad)
decl   0x0(%ecx,%ecx,1)
add    %ch,(%eax)
adc    %bh,%bh
jmp    *0x9(%eax)
add    %al,(%eax)
fcoms  (%edi)
(bad)
decl   0x17e80000(%ecx,%ecx,1)
(bad)
jmp    *0x18000009(%eax)
sbb    %bh,%bh
(bad)
mov    $0x38000009,%esp
sbb    %bh,%bh
call   *%eax
or     %eax,(%eax)
add    %bl,0x4ffff18(%eax)
or     (%eax),%al
add    %bh,0x18ffff18(%eax)
or     (%eax),%al
add    %bl,%al
sbb    %bh,%bh
ljmp   *(%edx,%ecx,1)
add    %al,(%eax)
clc
sbb    %bh,%bh
incl   0xa(%eax)
add    %al,(%eax)
sub    %bl,(%ecx)
(bad)
lcall  *0x0(%edx,%ecx,1)
add    %bl,0x19(%eax)
(bad)
(bad)
js     805a12c <_IO_stdin_used+0x5dc8>
add    %al,(%eax)
mov    %bl,(%ecx)
(bad)
call   *0x19b80000(%edx,%ecx,1)
(bad)
pushl  -0x17fffff6(%eax)
sbb    %edi,%edi
dec    %esp
or     (%eax),%al
add    %bl,(%eax)
sbb    %bh,%bh
(bad)
call   5005a14f <kb_main_total+0x47ffbebf>
sbb    %bh,%bh
incl   (%ebx,%ecx,1)
add    %al,(%eax)
js     805a168 <_IO_stdin_used+0x5e04>
(bad)
jmp    *(%eax)
or     (%eax),%eax
add    %ch,0x3cffff1a(%eax)
or     (%eax),%eax
add    %bl,%al
sbb    %bh,%bh
lcall  *0xb(%eax)
add    %al,(%eax)
or     %bl,(%ebx)
(bad)
pushl  0x0(%ebx,%ecx,1)
add    %bh,(%eax)
sbb    %edi,%edi
call   *0x6800000b(%eax)
sbb    %edi,%edi
ljmp   *0x1b980000(%ebx,%ecx,1)
(bad)
dec    %eax
or     (%eax),%eax
add    %cl,%al
sbb    %edi,%edi
jmp    *%esp
or     (%eax),%eax
add    %bh,%al
sbb    %edi,%edi
incl   (%eax)
or     $0x0,%al
add    %ch,(%eax)
sbb    $0xff,%al
lcall  *(%esp,%ecx,1)
add    %al,(%eax)
pop    %eax
sbb    $0xff,%al
(bad)
cmp    %cl,(%eax,%eax,1)
add    %bh,0x1c(%eax)
(bad)
decl   0x0(%esp,%ecx,1)
add    %ch,0x68ffff1c(%eax)
or     $0x0,%al
add    %bl,%al
sbb    $0xff,%al
incl   0x1d080000(%esp,%ecx,1)
(bad)
jmp    *0x3800000c(%eax)
sbb    $0xcbcffff,%eax
add    %al,(%eax)
cwtl
sbb    $0xcf0ffff,%eax
add    %al,(%eax)
clc
sbb    $0xd24ffff,%eax
add    %al,(%eax)
sub    %bl,(%esi)
(bad)
incl   0xd(%eax)
add    %al,(%eax)
pop    %eax
push   %ds
(bad)
lcall  *0x0(%ebp,%ecx,1)
add    %cl,0x78ffff1e(%eax)
or     $0x1eb80000,%eax
(bad)
call   *0x1ee80000(%ebp,%ecx,1)
(bad)
pushl  0x4800000d(%eax)
pop    %ds
(bad)
jmp    *%esp
or     $0x1f780000,%eax
(bad)
incl   (%eax)
push   %cs
add    %al,(%eax)
test   $0x1f,%al
(bad)
lcall  *(%esi,%ecx,1)
add    %al,(%eax)
fcomps (%edi)
(bad)
(bad)
cmp    %cl,(%esi)
add    %al,(%eax)
or     %ah,(%eax)
(bad)
call   *0x0(%esi,%ecx,1)
add    %bh,(%eax)
and    %bh,%bh
pushl  0xe(%eax)
add    %al,(%eax)
push   $0x8cffff20
push   %cs
add    %al,(%eax)
cwtl
and    %bh,%bh
ljmp   *-0x37fffff2(%eax)
and    %bh,%bh
inc    %esp
push   %cs
add    %al,(%eax)
clc
and    %bh,%bh
jmp    *%eax
push   %cs
add    %al,(%eax)
sbb    %ah,(%ecx)
(bad)
push   %esp
push   %cs
add    %al,(%eax)
sub    %ah,(%ecx)
(bad)
decl   (%eax)
sldt   (%eax)
cmp    %ah,(%ecx)
(bad)
lcall  *(%edi,%ecx,1)
add    %al,(%eax)
pop    %eax
and    %edi,%edi
pushl  (%eax)
sldt   (%eax)
js     805a297 <_IO_stdin_used+0x5f33>
(bad)
incl   0x0(%edi,%ecx,1)
add    %ch,0x60ffff21(%eax)
sldt   (%eax)
enter  $0xff21,$0xff
je     805a299 <_IO_stdin_used+0x5f35>
add    %al,(%eax)
fsubs  (%ecx)
(bad)
decl   -0x7fffff1(%eax)
and    %edi,%edi
lcall  *0x22780000(%edi,%ecx,1)
(bad)
(bad)
fmuls  (%edi)
add    %al,(%eax)
sub    %ah,(%ebx)
(bad)
lcall  *(%eax)
adc    %al,(%eax)
add    %bl,0x23(%eax)
(bad)
pushl  (%eax,%edx,1)
add    %al,(%eax)
mov    %ah,(%ebx)
(bad)
call   *0x10(%eax)
add    %al,(%eax)
mov    $0x6cffff23,%eax
adc    %al,(%eax)
add    %ch,%al
and    %edi,%edi
decl   0x18000010(%eax)
and    $0xff,%al
jmp    *0x24480000(%eax,%edx,1)
(bad)
inc    %eax
adc    %al,(%eax)
add    %cl,-0x230000dc(%eax)
adc    %al,(%eax)
add    %bh,(%eax)
and    $0x1104ffff,%eax
add    %al,(%eax)
pop    %eax
and    $0x1118ffff,%eax
add    %al,(%eax)
cwtl
and    $0x1130ffff,%eax
add    %al,(%eax)
or     %ah,(%edi)
(bad)
pushl  0x11(%eax)
add    %al,(%eax)
test   $0x27,%al
(bad)
ljmp   *-0x17ffffef(%eax)
sub    %bh,%bh
(bad)
call   9005a326 <kb_main_total+0x87ffc096>
sub    %bh,%bh
incl   0x12(%eax)
add    %al,(%eax)
fsubrs (%ebx)
(bad)
incl   0x28000012(%eax)
sub    $0xff,%al
lcall  *0x68000012(%eax)
sub    $0xff,%al
pushl  0x68000012(%eax)
sub    $0x12ecffff,%eax
add    %al,(%eax)
mov    $0x4ffff2d,%eax
adc    (%eax),%eax
add    %cl,(%eax)
cs
(bad)
lcall  *(%ebx,%edx,1)
add    %al,(%eax)
pop    %eax
cs
(bad)
pushl  (%ebx,%edx,1)
add    %al,(%eax)
test   $0x2e,%al
(bad)
decl   0x0(%ebx,%edx,1)
add    %bh,%al
cs
(bad)
jmp    *0x0(%ebx,%edx,1)
add    %cl,0x2f(%eax)
(bad)
(bad)
jl     805a37d <_IO_stdin_used+0x6019>
add    %al,(%eax)
cwtl
das
(bad)
call   *0x2fe80000(%ebx,%edx,1)
(bad)
ljmp   *0x31480000(%ebx,%edx,1)
(bad)
inc    %eax
adc    (%eax),%eax
add    %bl,-0x270000cf(%eax)
adc    (%eax),%eax
add    %ch,%al
xor    %edi,%edi
push   %eax
adc    (%eax),%eax
add    %bh,(%eax)
xor    %bh,%bh
decl   (%eax)
adc    $0x0,%al
add    %cl,0x20ffff32(%eax)
adc    $0x0,%al
add    %ch,(%eax)
xor    %edi,%edi
incl   0x0(%esp,%edx,1)
add    %cl,0x5cffff33(%eax)
adc    $0x0,%al
add    %ch,%al
xor    %edi,%edi
pushl  0x0(%esp,%edx,1)
add    %cl,0x34(%eax)
(bad)
decl   0x34a80000(%esp,%edx,1)
(bad)
jmp    *0x35080000(%esp,%edx,1)
(bad)
(bad)
mov    $0x58000014,%esp
xor    $0x14d4ffff,%eax
add    %al,(%eax)
test   $0x35,%al
(bad)
(bad)
in     (%dx),%al
adc    $0x0,%al
add    %cl,(%eax)
ss
(bad)
incl   0x36680000(,%edx,1)
(bad)
lcall  *0x36d80000(,%edx,1)
(bad)
(bad)
cmp    $0x15,%al
add    %al,(%eax)
sub    %dh,(%edi)
(bad)
call   *0x0(%ebp,%edx,1)
add    %bh,0x37(%eax)
(bad)
ljmp   *0x0(%ebp,%edx,1)
add    %cl,(%eax)
cmp    %bh,%bh
incl   0x38580000(%ebp,%edx,1)
(bad)
lcall  *0x38a80000(%ebp,%edx,1)
(bad)
pushl  0x38f80000(%ebp,%edx,1)
(bad)
dec    %esp
adc    $0x39480000,%eax
(bad)
jmp    *%esp
adc    $0x39980000,%eax
(bad)
(bad)
cld
adc    $0x39e80000,%eax
(bad)
call   *(%esi,%edx,1)
add    %al,(%eax)
cmp    %bh,(%edx)
(bad)
ljmp   *(%esi,%edx,1)
add    %al,(%eax)
mov    %bh,(%edx)
(bad)
incl   0x0(%esi,%edx,1)
add    %bl,%al
cmp    %bh,%bh
lcall  *0x0(%esi,%edx,1)
add    %bl,(%eax)
cmp    %edi,%edi
pushl  0x0(%esi,%edx,1)
add    %ch,0x3b(%eax)
(bad)
decl   0x3bb80000(%esi,%edx,1)
(bad)
jmp    *0x3c080000(%esi,%edx,1)
(bad)
(bad)
mov    $0x48000016,%esp
cmp    $0xff,%al
call   *%esp
push   %ss
add    %al,(%eax)
cwtl
cmp    $0xff,%al
(bad)
in     (%dx),%al
push   %ss
add    %al,(%eax)
call   d05a3cd <kb_main_total+0x4ffc13d>
pop    %ss
add    %al,(%eax)
sub    %bh,0x171cffff
add    %al,(%eax)
js     805a4db <_IO_stdin_used+0x6177>
(bad)
(bad)
cmp    $0x17,%al
add    %al,(%eax)
fdivrs 0x1760ffff
add    %al,(%eax)
mov    $0xacffff3e,%eax
pop    %ss
add    %al,(%eax)
fdivrs (%esi)
(bad)
inc    %eax
pop    %ss
add    %al,(%eax)
call   dd05a3ff <kb_main_total+0xd4ffc16f>
pop    %ss
add    %al,(%eax)
clc
ds
(bad)
(bad)
call   1005a4e4 <kb_main_total+0x7ffc254>
aas
(bad)
(bad)
cld
pop    %ss
add    %al,(%eax)
sbb    %bh,(%edi)
(bad)
call   *(%eax)
sbb    %al,(%eax)
add    %bl,0x3f(%eax)
(bad)
ljmp   *(%eax)
sbb    %al,(%eax)
add    %bl,0x40ffff3f(%eax)
sbb    %al,(%eax)
add    %bh,0x54ffff3f(%eax)
sbb    %al,(%eax)
add    %bl,%al
aas
(bad)
ljmp   *0x18(%eax)
add    %al,(%eax)
clc
aas
(bad)
(bad)
jl     805a51a <_IO_stdin_used+0x61b6>
add    %al,(%eax)
sbb    %al,-0x1(%eax)
call   *0x38000018(%eax)
inc    %eax
(bad)
jmp    *0x40580000(%eax,%ebx,1)
(bad)
(bad)
mov    $0x78000018,%eax
inc    %eax
(bad)
dec    %esp
sbb    %al,(%eax)
add    %bl,-0x1f0000c0(%eax)
sbb    %al,(%eax)
add    %bh,-0xb0000c0(%eax)
sbb    %al,(%eax)
add    %cl,(%eax)
inc    %ecx
(bad)
decl   (%ecx,%ebx,1)
add    %al,(%eax)
pop    %eax
inc    %ecx
(bad)
jmp    *(%ecx,%ebx,1)
add    %al,(%eax)
test   $0x41,%al
(bad)
(bad)
cmp    $0x19,%al
add    %al,(%eax)
dec    %eax
inc    %edx
(bad)
pushl  0x19(%eax)
add    %al,(%eax)
sbb    %al,-0x1(%ebx)
call   *0x43980000(%ecx,%ebx,1)
(bad)
(bad)
mov    $0x98000019,%eax
inc    %esp
(bad)
(bad)
call   1005a586 <kb_main_total+0x7ffc2f6>
inc    %ebp
(bad)
decl   (%edx,%ebx,1)
add    %al,(%eax)
mov    $0x44ffff45,%eax
sbb    (%eax),%al
add    %ch,0x7cffff46(%eax)
sbb    (%eax),%al
add    %bl,-0x4b0000b9(%eax)
sbb    (%eax),%al
add    %cl,-0x130000b8(%eax)
sbb    (%eax),%al
add    %bh,%al
dec    %eax
(bad)
decl   (%ebx,%ebx,1)
add    %al,(%eax)
push   $0x2cffff49
sbb    (%eax),%eax
add    %cl,%al
dec    %ecx
(bad)
decl   0x0(%ebx,%ebx,1)
add    %ch,(%eax)
dec    %edx
(bad)
ljmp   *0x0(%ebx,%ebx,1)
add    %bl,-0x730000b6(%eax)
sbb    (%eax),%eax
add    %bh,%al
dec    %edx
(bad)
ljmp   *0x4b580000(%ebx,%ebx,1)
(bad)
dec    %esp
sbb    (%eax),%eax
add    %bh,-0x130000b5(%eax)
sbb    (%eax),%eax
add    %bl,(%eax)
dec    %esp
(bad)
decl   (%esp,%ebx,1)
add    %al,(%eax)
js     805a62a <_IO_stdin_used+0x62c6>
(bad)
ljmp   *(%esp,%ebx,1)
add    %al,(%eax)
fmuls  -0x1(%edi,%edi,8)
dec    %esp
sbb    $0x0,%al
add    %bl,0x4d(%eax)
(bad)
call   *0x4e180000(%esp,%ebx,1)
(bad)
(bad)
in     (%dx),%al
sbb    $0x0,%al
add    %ch,0x18ffff4e(%eax)
sbb    $0x4ec80000,%eax
(bad)
ljmp   *0x4ee80000(,%ebx,1)
(bad)
incl   0x1d(%eax)
add    %al,(%eax)
or     %cl,-0x1(%edi)
call   *0x0(%ebp,%ebx,1)
add    %ch,(%eax)
dec    %edi
(bad)
ljmp   *0x1d(%eax)
add    %al,(%eax)
dec    %eax
dec    %edi
(bad)
(bad)
jl     805a647 <_IO_stdin_used+0x62e3>
add    %al,(%eax)
push   $0x90ffff4f
sbb    $0x4f880000,%eax
(bad)
jmp    *0x4fa80000(%ebp,%ebx,1)
(bad)
(bad)
mov    $0xe800001d,%eax
push   %eax
(bad)
call   *(%esi,%ebx,1)
add    %al,(%eax)
cmp    %dl,-0x1(%ecx)
pushl  (%esi,%ebx,1)
add    %al,(%eax)
push   $0x48ffff51
push   %ds
add    %al,(%eax)
cwtl
push   %ecx
(bad)
lcall  *0x0(%esi,%ebx,1)
add    %cl,(%eax)
push   %edx
(bad)
lcall  *0x52780000(%esi,%ebx,1)
(bad)
(bad)
fcompl (%esi)
add    %al,(%eax)
cwtl
push   %esi
(bad)
lcall  *(%edi,%ebx,1)
add    %al,(%eax)
mov    $0x54ffff59,%eax
pop    %ds
add    %al,(%eax)
clc
pop    %edx
(bad)
incl   0x5d980000(%edi,%ebx,1)
(bad)
inc    %esp
pop    %ds
add    %al,(%eax)
enter  $0xff5d,$0xff
in     $0x1f,%al
add    %al,(%eax)
dec    %eax
pop    %edi
(bad)
(bad)
cmp    $0x20,%al
add    %al,(%eax)
cwtl
pop    %edi
(bad)
call   *0x20(%eax)
add    %al,(%eax)
clc
pop    %edi
(bad)
jmp    *0x0(%eax,%eiz,1)
add    %ch,(%eax)
push   $0x20a4ffff
add    %al,(%eax)
test   $0x68,%al
(bad)
dec    %eax
and    %al,(%eax)
add    %bh,0x77(%eax)
(bad)
decl   (%eax)
and    %eax,(%eax)
add    %bh,(%eax)
js     805a6ce <_IO_stdin_used+0x636a>
(bad)
cmp    %ah,(%ecx)
add    %al,(%eax)
clc
js     805a6d6 <_IO_stdin_used+0x6372>
ljmp   *0x21(%eax)
add    %al,(%eax)
call   a905a65b <kb_main_total+0xa0ffc3cb>
and    %eax,(%eax)
add    %cl,(%eax)
jl     805a6e6 <_IO_stdin_used+0x6382>
inc    %esp
and    %eax,(%eax)
add    %ch,-0x80(%eax)
(bad)
incl   (%edx,%eiz,1)
add    %al,(%eax)
fadds  0x2234ffff(%eax)
add    %al,(%eax)
sbb    %al,0x2264ffff(%edx)
add    %al,(%eax)
test   $0x83,%al
(bad)
jmp    *-0x7bd80000(%edx,%eiz,1)
(bad)
decl   (%ebx,%eiz,1)
add    %al,(%eax)
mov    $0x64ffff84,%eax
and    (%eax),%eax
add    %bl,-0x6300007b(%eax)
and    (%eax),%eax
add    %ch,%al
mov    %bh,%bh
push   %esp
and    (%eax),%eax
add    %cl,%al
mov    %edi,%?
pushl  (%esp)
add    %al,(%eax)
js     805a6c6 <_IO_stdin_used+0x6362>
(bad)
ljmp   *0x0(%esp)
add    %bh,-0x7f000070(%eax)
and    $0x0,%al
add    %bh,-0x62(%eax)
(bad)
(bad)
mov    $0x88000024,%esp
sahf
(bad)
(bad)
cld
and    $0x0,%al
add    %bl,%al
lahf
(bad)
pushl  -0x5f980000(,%eiz,1)
(bad)
call   *-0x7ffffdb(%eax)
mov    0x25b4ffff,%al
add    %al,(%eax)
sub    %ah,0x2620ffff(%edx)
add    %al,(%eax)
cwtl
mov    %al,0x265cffff
add    %al,(%eax)
test   $0xa2,%al
(bad)
pushl  0x26(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     805a79b <_IO_stdin_used+0x6437>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jmp    db6a7a8 <kb_main_total+0x5b0c518>
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     805a7bb <_IO_stdin_used+0x6457>
js     805a7b9 <_IO_stdin_used+0x6455>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
inc    %esp
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
cwtl
sti
(bad)
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %cl,-0x50000000(%eax)
sti
(bad)
incl   0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x79,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    $0xe,%dh
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
faddl  (%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
cld
(bad)
decl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    %ah,%ch
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x1,%al
add    %al,(%eax)
test   %bh,%ch
(bad)
push   %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9b,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
push   %esp
add    %eax,(%eax)
add    %al,(%ecx,%esi,8)
(bad)
incl   0x8(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa049403,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
test   %al,(%ecx)
add    %al,(%eax)
add    $0xfe,%al
(bad)
call   *0x4(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
les    (%ecx),%eax
add    %al,(%eax)
and    $0x2,%al
(bad)
lcall  *(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    (%edx,%eax,1),%edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
hlt
add    %eax,(%eax)
add    %dl,(%esi,%eax,1)
(bad)
ljmp   *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff99,0x3600e43
add    (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xor    $0x2,%al
add    %al,(%eax)
test   %cl,(%eax)
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x2(%eax)
add    %al,(%eax)
rorb   $0xff,(%eax)
jmp    *0x5(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x1a00e46
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     805a9fc <_IO_stdin_used+0x6698>
add    %al,(%eax)
inc    %esp
push   %cs
(bad)
incl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,0x40000002(%eax)
push   %cs
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0xe540000(%edx,%eax,1)
(bad)
call   *0x0
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,0x60000002(%eax)
push   %cs
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x5f,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
add    (%eax),%al
add    %cl,0x15ffff(%esi,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
cwtl
push   %cs
(bad)
call   *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ebx,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   %cs
(bad)
call   *0x0
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    (%eax),%eax
add    %dh,0x24ffff0e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx,%eax,1)
add    %al,%ah
push   %cs
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,0x3(%eax)
add    %al,(%eax)
fmuls  (%esi)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,0x0(%ebx,%eax,1)
add    %ch,%ah
push   %cs
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,0x3(%eax)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,0xf140000(%ebx,%eax,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,%al
add    (%eax),%eax
add    %ch,(%eax)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,%ah
add    (%eax),%eax
add    %bh,(%edi,%ecx,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    $0x0,%al
add    %dl,0xf(%eax)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,(%esp,%eax,1)
add    %al,(%eax)
fs
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %al,0x4(%eax)
add    %al,(%eax)
js     805abd9 <_IO_stdin_used+0x6875>
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,0x0(%esp,%eax,1)
add    %cl,0x24ffff(%edi,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,0x4(%eax)
add    %al,(%eax)
mov    0x24ffff0f,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,0xfb40000(%esp,%eax,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,-0x37fffffc(%eax)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,%ah
add    $0x0,%al
add    %bl,%ah
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,%al
add    $0x0,%al
add    %dh,%al
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %al,0x10040000(,%eax,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    $0x10180000,%eax
(bad)
call   *0x0
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,0x10240000(,%eax,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,0x5(%eax)
add    %al,(%eax)
cmp    %dl,(%eax)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp,%eax,1)
add    %cl,-0x1(%eax,%edx,1)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,0x60000005(%eax)
adc    %bh,%bh
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,0x10740000(%ebp,%eax,1)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x5f,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
fadds  0x10a00000
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x5f,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
or     $0x6,%al
add    %al,(%eax)
int3
adc    %bh,%bh
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
push   %es
add    %al,(%eax)
loopne 805adc2 <_IO_stdin_used+0x6a5e>
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi,%eax,1)
add    %dh,%ah
adc    %bh,%bh
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,0x6(%eax)
add    %al,(%eax)
or     %dl,(%ecx)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,0x0(%esi,%eax,1)
add    %bl,(%ecx,%edx,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,0x30000006(%eax)
adc    %edi,%edi
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x5f,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
int3
push   %es
add    %al,(%eax)
pop    %esp
adc    %edi,%edi
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,%al
push   %es
add    %al,(%eax)
jo     805ae83 <_IO_stdin_used+0x6b1f>
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%edi,%eax,1)
add    %al,(%eax)
test   %dl,(%ecx)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
pop    %es
add    %al,(%eax)
cwtl
adc    %edi,%edi
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,(%edi,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
adc    %edi,%edi
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,0x7(%eax)
add    %al,(%eax)
rclb   $0xff,(%ecx)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi,%eax,1)
add    %dl,%ah
adc    %edi,%edi
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,-0x17fffff9(%eax)
adc    %edi,%edi
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,0x11fc0000(%edi,%eax,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
pop    %es
add    %al,(%eax)
adc    %dl,(%edx)
(bad)
call   *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
pop    %es
add    %al,(%eax)
sbb    $0x12,%al
(bad)
decl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
pop    %es
add    %al,(%eax)
sbb    %dl,(%edx)
(bad)
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax,%ecx,1)
add    %al,(%eax)
adc    $0x12,%al
(bad)
call   *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
or     %al,(%eax)
add    %ah,(%eax)
adc    %bh,%bh
call   *0x0
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%ecx,1)
add    %al,(%eax)
sub    $0x12,%al
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x8(%eax)
add    %al,(%eax)
inc    %eax
adc    %bh,%bh
call   *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x0(%eax,%ecx,1)
add    %cl,-0x1(%edx,%edx,1)
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x8(%eax)
add    %al,(%eax)
dec    %eax
adc    %bh,%bh
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %al,0x12540000(%eax,%ecx,1)
(bad)
pushl  0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x68,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %al,%al
or     %al,(%eax)
add    %bl,-0x500000ee(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff81,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
add    %cl,(%ecx)
add    %al,(%eax)
or     %dl,(%ebx)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%ecx,%ecx,1)
add    %al,(%eax)
sbb    $0x13,%al
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
or     %eax,(%eax)
add    %dh,(%eax)
adc    %edi,%edi
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ecx,%ecx,1)
add    %al,-0x1(%ebx,%edx,1)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,0x9(%eax)
add    %al,(%eax)
pop    %eax
adc    %edi,%edi
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,0x136c0000(%ecx,%ecx,1)
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec36202(%ebx)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,-0x7ffffff7(%eax)
adc    %edi,%edi
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec37002(%ebx)
add    $0x0,%al
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
les    (%ecx),%ecx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    %edi,%edi
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
jnp    805b16c <_IO_stdin_used+0x6e08>
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
or     %eax,(%eax)
add    %ch,(%esp,%edx,1)
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
cmp    %dl,(%edi,%edi,8)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edi)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
sbb    %cl,(%edx)
add    %al,(%eax)
pusha
adc    $0xff,%al
jmp    *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x40,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
pop    %eax
or     (%eax),%al
add    %dl,-0x6d0000eb(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%bh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
nop
or     (%eax),%al
add    %bh,%al
adc    $0x13cffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x21,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,%al
or     (%eax),%al
add    %bh,%al
push   %ss
(bad)
call   *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x33,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
sub    %cl,(%ebx)
add    %al,(%eax)
inc    %eax
sbb    %bh,%bh
incl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x26,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
push   $0x5000000b
sbb    %edi,%edi
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
orb    $0x0,(%ebx)
add    %cl,0x3effff19(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0xe(%edx)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
cwtl
or     (%eax),%eax
add    %dh,-0x40000e7(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffed,0x2400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dl,%ah
or     (%eax),%eax
add    %dh,-0x1(%edx,%ebx,1)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
or     (%eax),%eax
add    %ch,0x41ffff(%edx,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    $0xc,%al
add    %al,(%eax)
in     $0x1a,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %eax
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,(%esp,%ecx,1)
add    %al,(%eax)
sbb    $0x1b,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %eax
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dh,(%esp,%ecx,1)
add    %al,(%eax)
push   %esp
sbb    %edi,%edi
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %eax
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %cl,0x0(%esp,%ecx,1)
add    %cl,0x44ffff(%ebx,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %eax
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ah,0x0(%esp,%ecx,1)
add    %al,%ah
sbb    %edi,%edi
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %edx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bh,0x0(%esp,%ecx,1)
add    %bh,%ah
sbb    %edi,%edi
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
or     $0x0,%al
add    %dh,(%esp,%ebx,1)
(bad)
call   *0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
test   $0xc,%al
add    %al,(%eax)
sbbb   $0x0,0x47ffff
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
inc    %ebx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,%al
or     $0x0,%al
add    %bh,0x41ffff1d(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
fmuls  (%eax,%eax,1)
add    %dh,%al
sbb    $0x41ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
lock or $0x0,%al
add    %ch,(%eax)
push   %ds
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
or     %cl,0x1e600000
(bad)
call   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    -0x3cbef7f2(%edi),%cl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
sub    $0xd,%al
add    %al,(%eax)
fcompl (%esi)
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
push   %esp
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,0x0(%ebp,%ecx,1)
add    %ah,(%edi,%ebx,1)
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
push   %esp
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,0x0(%ebp,%ecx,1)
add    %ch,-0x1(%edi,%ebx,1)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
push   %edx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dh,0x0(%ebp,%ecx,1)
add    %dh,0x58ffff(%edi,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
push   %esp
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %cl,0x1ffc0000(%ebp,%ecx,1)
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
push   %edx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ah,0x20440000(%ebp,%ecx,1)
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %ebx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bh,0x207c0000(%ebp,%ecx,1)
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
aam    $0xd
add    %al,(%eax)
mov    $0x20,%ah
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
dec    %ebp
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ch,%ah
or     $0x20fc0000,%eax
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
dec    %ebp
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,(%esi,%ecx,1)
add    %al,(%eax)
inc    %esp
and    %edi,%edi
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%edx),%esi
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
and    $0xe,%al
add    %al,(%eax)
xchg   %eax,%esp
and    %edi,%edi
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cmp    $0xe,%al
add    %al,(%eax)
int3
and    %edi,%edi
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
push   %esp
push   %cs
add    %al,(%eax)
add    $0x22,%al
(bad)
decl   0x0(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
test   %cl,(%esi)
add    $0x14,%al
add    %al,(%eax)
add    %ch,0x0(%esi,%ecx,1)
add    %bh,-0x1(%edx,%eiz,1)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
test   %cl,(%esi)
add    %al,(%eax)
mov    $0x22,%ah
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pushf
push   %cs
add    %al,(%eax)
in     (%dx),%al
and    %bh,%bh
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0xe,%ah
add    %al,(%eax)
and    $0x23,%al
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
int3
push   %cs
add    %al,(%eax)
pop    %esp
and    %edi,%edi
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     $0xe,%al
add    %al,(%eax)
xchg   %eax,%esp
and    %edi,%edi
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
cld
push   %cs
add    %al,(%eax)
int3
and    %edi,%edi
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
adc    $0xf,%al
add    %al,(%eax)
add    $0x24,%al
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sub    $0xf,%al
add    %al,(%eax)
cmp    $0x24,%al
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
sldt   (%eax)
je     805b6f2 <_IO_stdin_used+0x738e>
(bad)
(bad)
cmp    $0x0,%eax
inc    %ebx
push   %cs
xor    %bh,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %esp
sldt   (%eax)
pushf
and    $0xff,%al
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
je     805b709 <_IO_stdin_used+0x73a5>
add    %al,(%eax)
aam    $0x24
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    %cs,(%edi)
add    %al,(%eax)
or     $0x25,%al
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sldt   (%eax)
inc    %esp
and    $0x36ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%edx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x6c00000f,%esp
and    $0x44ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
inc    %eax
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dl,%ah
sldt   (%eax)
movsb  %ds:(%esi),%es:(%edi)
and    $0x45ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
inc    %ecx
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ch,%ah
sldt   (%eax)
fsubl  0x36ffff
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%edx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
add    $0x10,%al
add    %al,(%eax)
add    $0x26,%al
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jp     805b7ad <_IO_stdin_used+0x7449>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ah,(%eax,%edx,1)
add    %al,(%eax)
xor    $0x26,%al
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4802(%ebx)
add    0xe(%ebx),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %cl,0x10(%eax)
add    %al,(%eax)
jo     805b7f8 <_IO_stdin_used+0x7494>
(bad)
call   *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%esi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
adc    %al,(%eax)
add    %al,(%edi,%eiz,1)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x10000010(%eax)
daa
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x270c0000(%eax,%edx,1)
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
adc    %al,(%eax)
add    %cl,(%eax)
daa
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%ah
adc    %al,(%eax)
add    %al,(%edi,%eiz,1)
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
clc
adc    %al,(%eax)
add    %al,(%eax)
daa
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0xe(%edx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
adc    %dl,(%ecx)
add    %al,(%eax)
sub    %ah,(%edi)
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0xe(%edx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sub    %dl,(%ecx)
add    %al,(%eax)
push   %eax
daa
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%ecx,%edx,1)
add    %al,(%eax)
pop    %esp
daa
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x11(%eax)
add    %al,(%eax)
push   $0x1affff27
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx,%edx,1)
add    %dh,-0x1(%edi,%eiz,1)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x11(%eax)
add    %al,(%eax)
andb   $0xff,(%edi)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x278c0000(%ecx,%edx,1)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x67ffffef(%eax)
daa
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x27a40000(%ecx,%edx,1)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
adc    %eax,(%eax)
add    %dh,0x1affff27(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
fcoml  (%ecx)
add    %al,(%eax)
mov    $0x43ffff27,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %bh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
hlt
adc    %eax,(%eax)
add    %dh,%ah
daa
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bh,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
or     $0x12,%al
add    %al,(%eax)
sub    $0x28,%al
(bad)
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %ecx
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %ah,(%edx,%edx,1)
add    %al,(%eax)
fs
sub    %bh,%bh
lcall  *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%esi),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pop    %eax
adc    (%eax),%al
add    %dl,%al
sub    %bh,%bh
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0x41080e0a(%esi),%dl
ret
push   %cs
add    $0x45,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bh,0x0(%edx,%edx,1)
add    %bh,-0x1(%ecx,%ebp,1)
(bad)
jnp    805ba0a <_IO_stdin_used+0x76a6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%ebx)
add    0xe(%ebp),%dh
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    0xd8000012,%al
sub    %edi,%edi
push   %edx
add    %al,(%eax)
add    %al,(%eax)
dec    %eax
push   %cs
or     %al,0xc0e4702(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa830204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,%al
adc    (%eax),%al
add    %ch,0x62ffff2a(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    0x8(%esi,%ecx,1),%bl
inc    %ecx
ret
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
hlt
adc    (%eax),%al
add    %dh,%ah
sub    %bh,%bh
jmp    *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jno    805ba9f <_IO_stdin_used+0x773b>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%eax),%esp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ch,(%ebx,%edx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sub    %edi,%edi
jmp    *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x700e4304(%ebx)
add    0x41100e0a(%ebp),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    %fs:(%eax),%eax
add    %ah,(%esp,%ebp,1)
(bad)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%eax),%dh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pushf
adc    (%eax),%eax
add    %bl,%ah
sub    $0xff,%al
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%eax),%dh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x13
add    %al,(%eax)
xchg   %eax,%esp
sub    $0x6dffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
push   %ecx
or     (%esi),%cl
add    $0x44,%al
or     0x4(%esi,%ecx,1),%edx
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
hlt
adc    (%eax),%eax
add    %ah,%ah
sub    $0x61ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
dec    %ebx
or     (%esi),%cl
add    $0x42,%al
or     0xe(%eax),%edx
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x14,%al
add    %al,(%eax)
xor    $0x2e,%al
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %edx
or     (%esi),%cl
add    $0x43,%al
or     0x4(%esi,%ecx,1),%edx
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
xor    $0x14,%al
add    %al,(%eax)
je     805bbec <_IO_stdin_used+0x7888>
(bad)
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esp
or     (%esi),%cl
add    $0x41,%al
or     0xe(%eax),%edx
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
adc    $0x0,%al
add    %dh,0x62ffff(%esi,%ebp,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %bl,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%ecx),%edi
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
je     805bc0e <_IO_stdin_used+0x78aa>
add    %al,(%eax)
add    $0x2f,%al
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%ebp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
adc    $0x0,%al
add    %al,-0x1(%edi,%ebp,1)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%ebp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x14,%ah
add    %al,(%eax)
test   %ch,(%edi)
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%ebp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
aam    $0x14
add    %al,(%eax)
les    (%edi),%ebp
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%ebp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
hlt
adc    $0x0,%al
add    %al,(%eax,%esi,1)
(bad)
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%ebp
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
adc    $0x15,%al
add    %al,(%eax)
inc    %esp
xor    %bh,%bh
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%ebp
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,0x30840000(,%edx,1)
(bad)
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%ecx
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x0(%ebp,%edx,1)
add    %bh,0xbcffff(%eax,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%ah
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
aam    $0x15
add    %al,(%eax)
and    $0x31,%al
(bad)
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0x400e4502(%ebx)
add    0xa(%esi),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    %dl,(%esi)
add    %al,(%eax)
mov    %dh,(%ecx)
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%esi,%edx,1)
add    %al,(%eax)
xchg   %eax,%esp
xor    %edi,%edi
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
push   %ss
add    %al,(%eax)
mov    0x19ffff31,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%esi,%edx,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
xor    %edi,%edi
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x16(%eax)
add    %al,(%eax)
mov    $0x19ffff31,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi,%edx,1)
add    %al,%ah
xor    %edi,%edi
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x16(%eax)
add    %al,(%eax)
(bad)
xor    %edi,%edi
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x31dc0000(%esi,%edx,1)
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x0(%eax)
add    %al,(%eax)
mov    0xe8000016,%al
xor    %edi,%edi
pushl  (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x41100e0a(%eax),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
push   %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
cld
push   %ss
add    %al,(%eax)
int3
xor    %bh,%bh
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4802(%ebx)
jl     805bea5 <_IO_stdin_used+0x7b41>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,(%edi,%edx,1)
add    %al,(%eax)
cld
xor    %bh,%bh
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
pop    %ss
add    %al,(%eax)
sbb    %dh,(%ebx)
(bad)
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
inc    %esp
pop    %ss
add    %al,(%eax)
xor    $0x33,%al
(bad)
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
test   %dl,(%edi)
add    %al,(%eax)
fs
xor    %edi,%edi
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
les    (%edi),%edx
add    %al,(%eax)
xchg   %eax,%esp
xor    %edi,%edi
call   *(%edi)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x59,0x3500e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
add    $0x18,%al
add    %al,(%eax)
je     805bfc5 <_IO_stdin_used+0x7c61>
(bad)
lcall  *(%esi)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    %edi,%ebx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
cmp    $0x18,%al
add    %al,(%eax)
pop    %esp
cmp    %bh,%bh
pushl  (%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%edx)
pop    %esi
or     (%esi),%cl
add    $0x47,%al
or     (%edx),%eax
inc    %ebp
or     (%esi),%cl
add    $0x43,%al
or     0xa(%edi),%ebx
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ecx
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sbb    %al,(%eax)
add    %ch,-0x1(%ebx,%edi,1)
lcall  *0x2(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x21a00e46
rorb   $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
lods   %ds:(%esi),%al
sbb    %al,(%eax)
add    %cl,%ah
cmp    $0x2bffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,%ah
sbb    %al,(%eax)
add    %bl,%ah
cmp    $0x17cffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x33,0x3400e45
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%ecx,%ebx,1)
add    %al,(%eax)
add    $0x3f,%al
(bad)
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cmp    %bl,(%ecx)
add    %al,(%eax)
inc    %eax
aas
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
dec    %esp
sbb    %eax,(%eax)
add    %cl,0x82dffff(%edi,%edi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3a,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,0x477c0000(%ecx,%ebx,1)
(bad)
incl   0x0(%eax)
inc    %ebx
push   %cs
xor    %al,(%edx)
dec    %edx
or     (%esi),%cl
add    $0x43,%al
or     0xa(%ebx),%ecx
push   %cs
add    $0x45,%al
or     0xe(%edi),%ebx
add    $0x3c,%al
add    %al,(%eax)
add    %dh,-0x27ffffe7(%eax)
inc    %edi
(bad)
dec    %esp
push   %cs
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
lock sbb %eax,(%eax)
add    %ch,0x56(%eax)
(bad)
pushl  0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    0xa(%ebx),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
and    %bl,(%edx)
add    %al,(%eax)
clc
push   %esi
(bad)
pushl  0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
add    0xa(%ebx),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
sbb    (%eax),%al
add    %cl,-0x1c0000a9(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    (%edx),%ebx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    %bl,(%edx)
add    %al,(%eax)
inc    %eax
pop    %ecx
(bad)
lcall  *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%edx)
push   %eax
or     (%esi),%cl
add    $0x45,%al
or     0xa(%edi),%ecx
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
sbb    (%eax),%al
add    %bh,(%edx,%ebx,2)
(bad)
call   *0x4(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcc,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
sbb    (%eax),%al
add    %bl,-0x1(%esi,%ebx,2)
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
sbb    $0x1b,%al
add    %al,(%eax)
pushf
pop    %esi
(bad)
pushl  (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x48,(%ebx)
push   %cs
rolb   (%edx)
add    (%edx),%eax
add    %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
dec    %esp
sbb    (%eax),%eax
add    %ch,0x184ffff(%edi,%ebx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff88,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,%fs:(%eax)
add    %cl,0x60fc0000(%ebx,%ebx,1)
(bad)
(bad)
jle    805c31a <_IO_stdin_used+0x7fb6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7b300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x14(%esi,%ecx,1),%ecx
inc    %esi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dh,%ah
sbb    (%eax),%eax
add    %dl,(%ecx,%eiz,2)
(bad)
incl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jle    805c3a3 <_IO_stdin_used+0x803f>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ecx
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%edx
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
sbb    $0x0,%al
add    %cl,-0x1(%ecx,%eiz,2)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %al,0x61f40000(%esp,%ebx,1)
(bad)
decl   0x5(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbf,0x3500e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
roll   %cl,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fcompl (%eax,%eax,1)
add    %ch,%ah
data16
(bad)
call   *%edi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x54300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x1d,%al
add    %al,(%eax)
mov    %gs,-0x1(%edx)
jmp    *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%ebx),%dl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebp,%ebx,1)
add    %al,(%esp,%ebp,2)
(bad)
(bad)
cmp    $0x0,%eax
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,0x1d(%eax)
add    %al,(%eax)
xor    %ch,-0x1(%edi,%edi,8)
mov    $0xd,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jne    805c512 <_IO_stdin_used+0x81ae>
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
cmp    (%ecx),%eax
or     (%esi),%cl
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,0x79b40000(%ebp,%ebx,1)
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,-0x7fffffe3(%eax)
sar    %esi
lcall  *(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x0,0x4e00e48
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
in     $0x1d,%al
add    %al,(%eax)
test   %bh,-0x1(%ecx)
decl   0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    (%edx),%edi
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
pop    %eax
add    %al,(%eax)
add    %bl,(%esi,%ebx,1)
add    %al,(%eax)
pushf
jp     805c5a6 <_IO_stdin_used+0x8242>
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jnp    805c5cb <_IO_stdin_used+0x8267>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx,%ecx,1),%ebx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
js     805c61c <_IO_stdin_used+0x82b8>
add    %al,(%eax)
sarb   -0x1(%edx)
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jno    805c61d <_IO_stdin_used+0x82b9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   $0x9c000000
push   %ds
add    %al,(%eax)
cmp    $0x7b,%al
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
pop    %ds
add    %al,(%eax)
add    %bh,-0x1(%edi,%edi,8)
popa
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,0x0(%edi,%ebx,1)
add    %dh,(%esp,%edi,2)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,0x1f(%eax)
add    %al,(%eax)
xor    %bh,-0x1(%edi,%edi,8)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0x30
.byte 0xa3
add    $0x8,%al
.byte 0x10
.byte 0xa3
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
add    %eax,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x90,%al
add    $0x8,%al
or     $0x4c000000,%eax
inc    %ebx
add    $0x1908,%eax
add    %al,(%eax)
fild   0x1b08
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0xdf,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
cmp    $0x88,%al
add    $0x8,%al
push   %es
add    %al,(%eax)
add    %ch,%ah
addl   $0xa,(%eax,%ecx,1)
ss
add    $0x0,%al
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
loopne 805df88 <_IO_stdin_used+0x9c24>
or     %al,(%edx)
add    %al,(%eax)
add    %dl,%al
add    (%eax),%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %dl,(%esi,%ecx,4)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
fmull  0x120804(%ebp)
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x3c(%edi)
lea    (%eax,%ecx,1),%eax
(bad)
(bad)
ljmp   *0x2(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x72(%edi)
mov    %es,(%eax,%ecx,1)
add    %al,(%eax)
or     $0xdf,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%esi)
xchg   %eax,%ecx
add    $0x8,%al
ss
xchg   %eax,%ecx
add    $0x8,%al
inc    %esi
xchg   %eax,%ecx
add    $0x8,%al
push   %esi
xchg   %eax,%ecx
add    $0x8,%al
xchg   %ax,%cx
add    $0x8,%al
jbe    805dfb3 <_IO_stdin_used+0x9c4f>
add    $0x8,%al
xchg   %dl,-0x6e69f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ecx
add    $0x8,%al
mov    $0x91,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
(bad)
xchg   %eax,%ecx
add    $0x8,%al
out    %al,$0x91
add    $0x8,%al
notb   -0x6df9f7fc(%ecx)
add    $0x8,%al
push   %ss
xchg   %eax,%edx
add    $0x8,%al
es
xchg   %eax,%edx
add    $0x8,%al
ss
xchg   %eax,%edx
add    $0x8,%al
inc    %esi
xchg   %eax,%edx
add    $0x8,%al
push   %esi
xchg   %eax,%edx
add    $0x8,%al
xchg   %ax,%dx
add    $0x8,%al
jbe    805dff4 <_IO_stdin_used+0x9c90>
add    $0x8,%al
xchg   %dl,-0x6d69f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edx
add    $0x8,%al
mov    $0x92,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
out    %al,$0x92
add    $0x8,%al
notb   -0x6cf9f7fc(%edx)
add    $0x8,%al
push   %ss
xchg   %eax,%ebx
add    $0x8,%al
es
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    805e035 <_IO_stdin_used+0x9cd1>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebx
add    $0x8,%al
mov    $0x93,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
out    %al,$0x93
add    $0x8,%al
notb   -0x6bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
xchg   %eax,%esp
add    $0x8,%al
es
xchg   %eax,%esp
add    $0x8,%al
ss
xchg   %eax,%esp
add    $0x8,%al
inc    %esi
xchg   %eax,%esp
add    $0x8,%al
push   %esi
xchg   %eax,%esp
add    $0x8,%al
xchg   %ax,%sp
add    $0x8,%al
jbe    805e076 <_IO_stdin_used+0x9d12>
add    $0x8,%al
xchg   %dl,0x4949608(%esp,%eax,1)
or     %ah,-0x49f7fb6c(%esi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
out    %al,$0x94
add    $0x8,%al
notb   0x4950608(%esp,%eax,1)
or     %dl,(%esi)
xchg   %eax,%ebp
add    $0x8,%al
es
xchg   %eax,%ebp
add    $0x8,%al
ss
xchg   %eax,%ebp
add    $0x8,%al
inc    %esi
xchg   %eax,%ebp
add    $0x8,%al
push   %esi
xchg   %eax,%ebp
add    $0x8,%al
xchg   %ax,%bp
add    $0x8,%al
jbe    805e0b7 <_IO_stdin_used+0x9d53>
add    $0x8,%al
xchg   %dl,-0x6a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebp
add    $0x8,%al
mov    $0x95,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
out    %al,$0x95
add    $0x8,%al
notb   -0x69f9f7fc(%ebp)
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    805e0f8 <_IO_stdin_used+0x9d94>
add    $0x8,%al
xchg   %dl,-0x6969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esi
add    $0x8,%al
mov    $0x96,%dh
add    $0x8,%al
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out    %eax,(%dx)
mov    $0xbeefdead,%esi
lods   %ds:(%esi),%eax
fsubrp %st,%st(7)
mov    $0xbeefdead,%esi
lods   %ds:(%esi),%eax
fsubrp %st,%st(7)
mov    $0xffffdead,%esi
(bad)
(bad)
out    %eax,(%dx)
mov    $0xffffdead,%esi
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out    %eax,(%dx)
mov    $0xffffdead,%esi
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out    %eax,(%dx)
mov    $0xffffdead,%esi
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out    %eax,(%dx)
mov    $0xbeefdead,%esi
lods   %ds:(%esi),%eax
fsubrp %st,%st(7)
mov    $0xbeefdead,%esi
lods   %ds:(%esi),%eax
fsubrp %st,%st(7)
mov    $0xffffdead,%esi
(bad)
(bad)
fiaddl 0x5(%ebp)
or     %bh,0x56(%eax)
xor    $0x12,%al
js     805e27c <linux_version_code+0x4>
xor    $0x12,%al
ds
.byte 0xa0
.byte 0x5
.byte 0x8
cmp    %esp,0x63(%esi)
xor    %bh,(%ecx)
data16
gs
popaw
bound  %edi,%gs:(%eax)
xor    %ah,0x63(%ebp)
xor    $0x65,%al
xor    %ah,0x39(%esi)
popaw
xor    0x36(%ecx),%ah
xor    $0x63,%al
xor    %ss:(%ecx),%dh
cmp    %esp,0x36(%edx)
xor    $0x64393165,%eax
cs fs bound %esi,%cs:%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
pusha
.byte 0x39
.byte 0x9a
xchg   %eax,%edx
