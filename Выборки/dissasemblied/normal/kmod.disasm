das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %cl,0xd7769e2a
push   %esp
add    0x3d262fc6(%ecx),%esp
mov    %al,0xd(%eax)
mov    %al,0x54(%eax,%ecx,4)
dec    %ecx
add    (%eax),%al
add    %al,(%eax)
imul   $0x0,(%eax),%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,0x0
and    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
lods   %ds:(%esi),%eax
dec    %ebx
jecxz  18c <unsetenv@plt-0x1594>
jg     1e1 <unsetenv@plt-0x153f>
add    %al,(%eax)
(bad)
jno    1e5 <unsetenv@plt-0x153b>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%ecx)
add    %dl,0x4000003(%edx)
jb     1f5 <unsetenv@plt-0x152b>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,-0x3ffffffd(%esi)
jno    205 <unsetenv@plt-0x151b>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%edx)
add    %cl,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lock add %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ebx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
add    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edi
add    (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bl
add    %eax,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebp
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fild   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ch,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%eax),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    3ee <unsetenv@plt-0x1332>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    (%eax),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
hlt
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%edx)
add    %al,(%eax)
add    %dl,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jns    4af <unsetenv@plt-0x1271>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loop   4bf <unsetenv@plt-0x1261>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%bl
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %al,%cs:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
incl   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cld
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ch
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebx)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
cwtl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    6a2 <unsetenv@plt-0x107e>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ebx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lds    (%ecx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int3
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ebp
add    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %bl,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %eax,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %bl,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%ecx),%es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %ah,-0x4d(%eax)
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
.byte 0xf
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    903 <unsetenv@plt-0xe1d>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    911 <unsetenv@plt-0xe0f>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    91e <unsetenv@plt-0xe02>
push   $0x705f5f00
jb     91b <unsetenv@plt-0xe05>
outsb  %ds:(%esi),(%dx)
je     91b <unsetenv@plt-0xe05>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x78(%ebp)
imul   $0x74616d6e,0x66(%eax,%eax,1),%esi
arpl   %bp,0x0(%eax)
pop    %edi
dec    %ecx
dec    %edi
pop    %edi
jo     942 <unsetenv@plt-0xdde>
je     932 <unsetenv@plt-0xdee>
add    %dh,0x74(%ebx)
jb     942 <unsetenv@plt-0xdde>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     945 <unsetenv@plt-0xddb>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     955 <unsetenv@plt-0xdcb>
arpl   %bp,0x72(%eax)
add    %dh,0x65(%edx)
addr16
gs
js     952 <unsetenv@plt-0xdce>
arpl   %ax,(%eax)
pop    %edi
pop    %edi
jae    967 <unsetenv@plt-0xdb9>
jb     959 <unsetenv@plt-0xdc7>
jne    967 <unsetenv@plt-0xdb9>
add    %ch,0x6d(%ebp)
popa
jo     933 <unsetenv@plt-0xded>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
js     977 <unsetenv@plt-0xda9>
je     967 <unsetenv@plt-0xdb9>
je     969 <unsetenv@plt-0xdb7>
je     940 <unsetenv@plt-0xde0>
xor    $0x0,%al
addr16
gs
je     96f <unsetenv@plt-0xdb1>
arpl   %si,0x72(%ebp)
jb     97a <unsetenv@plt-0xda6>
outsb  %ds:(%esi),(%dx)
je     977 <unsetenv@plt-0xda9>
imul   $0x656d616e,%fs:0x5f(%edx),%esi
add    %dh,0x6e(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x63007461,0x6b(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    994 <unsetenv@plt-0xd8c>
imul   $0x6c657466,%fs:0x0(%edx),%esi
insb   (%dx),%es:(%edi)
add    %dh,0x65(%edx)
addr16
data16
jb     9a4 <unsetenv@plt-0xd7c>
add    %ch,%gs:0x6b(%ebp)
imul   $0x6c616572,%fs:0x0(%edx),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
popa
jae    9c7 <unsetenv@plt-0xd59>
gs
jb     9cb <unsetenv@plt-0xd55>
pop    %edi
popaw
imul   $0x6f747274,0x73(%eax,%eax,1),%ebp
imul   $0x73,(%eax),%eax
je     9d9 <unsetenv@plt-0xd47>
je     9d8 <unsetenv@plt-0xd48>
insb   (%dx),%es:(%edi)
add    %ah,0x67(%esi)
gs
je     9e3 <unsetenv@plt-0xd3d>
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jb     9df <unsetenv@plt-0xd41>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
popa
je     981 <unsetenv@plt-0xd9f>
jae    9f7 <unsetenv@plt-0xd29>
jb     9f1 <unsetenv@plt-0xd2f>
outsb  %gs:(%esi),(%dx)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ch,0x65(%di)
insl   (%dx),%es:(%edi)
jae    9fa <unsetenv@plt-0xd26>
je     997 <unsetenv@plt-0xd89>
jae    a0d <unsetenv@plt-0xd13>
jb     a0e <unsetenv@plt-0xd12>
je     a0f <unsetenv@plt-0xd11>
add    %bl,0x5f(%edi)
gs
jb     a15 <unsetenv@plt-0xd0b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65736600,0x6e(%edi),%ebp
imul   $0x6d,%gs:(%eax),%eax
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
jae    a39 <unsetenv@plt-0xce7>
jae    a2e <unsetenv@plt-0xcf2>
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x6e(%ecx)
imul   $0x6c75646f,0x6d(%edi,%ebx,2),%esi
add    %dh,%gs:0x6e(%ebp)
jae    a3e <unsetenv@plt-0xce2>
je     a40 <unsetenv@plt-0xce0>
outsb  %ds:(%esi),(%dx)
jbe    9de <unsetenv@plt-0xd42>
pop    %edi
pop    %edi
data16
js     a56 <unsetenv@plt-0xcca>
je     a46 <unsetenv@plt-0xcda>
je     a1d <unsetenv@plt-0xd03>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     a60 <unsetenv@plt-0xcc0>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     a5e <unsetenv@plt-0xcc2>
outsl  %ds:(%esi),(%dx)
jne    a71 <unsetenv@plt-0xcaf>
add    %ah,0x70(%esi)
jne    a76 <unsetenv@plt-0xcaa>
arpl   %ax,(%eax)
data16
jo     a7c <unsetenv@plt-0xca4>
je     a7c <unsetenv@plt-0xca4>
add    %dh,0x74(%ebx)
jb     a7c <unsetenv@plt-0xca4>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    a84 <unsetenv@plt-0xc9c>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsw  %fs:(%esi),(%dx)
jo     a91 <unsetenv@plt-0xc8f>
outsb  %ds:(%esi),(%dx)
imul   $0x66755f5f,%fs:0x0(%edx),%esi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     a39 <unsetenv@plt-0xce7>
pop    %edi
pop    %edi
js     ab0 <unsetenv@plt-0xc70>
je     aa0 <unsetenv@plt-0xc80>
je     a77 <unsetenv@plt-0xca9>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    ac6 <unsetenv@plt-0xc5a>
arpl   %sp,0x6e(%ecx)
data16
add    %dh,0x65(%edx)
arpl   %bp,0x6d(%bx)
jo     a60 <unsetenv@plt-0xcc0>
outsl  %ds:(%esi),(%dx)
jo     ad7 <unsetenv@plt-0xc49>
popa
jb     acd <unsetenv@plt-0xc53>
add    %dh,0x74(%ebx)
fs
gs
jb     adf <unsetenv@plt-0xc41>
add    %dh,0x79(%ebx)
jae    ae6 <unsetenv@plt-0xc3a>
gs
insl   (%dx),%es:(%edi)
add    %ch,0x75(%ebp)
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
jo     a7c <unsetenv@plt-0xca4>
pop    %edi
pop    %edi
jae    aee <unsetenv@plt-0xc32>
jo     af4 <unsetenv@plt-0xc2c>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     afe <unsetenv@plt-0xc22>
jo     b05 <unsetenv@plt-0xc1b>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%bp,%di)
jb     b0f <unsetenv@plt-0xc11>
outsl  %ds:(%esi),(%dx)
jne    b0a <unsetenv@plt-0xc16>
insb   (%dx),%es:(%edi)
add    %ah,0x77(%esi)
jb     b0d <unsetenv@plt-0xc13>
je     b0b <unsetenv@plt-0xc15>
add    %ah,0x72(%esi)
gs
popa
add    %bl,%fs:0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x74(%ebx)
jb     b21 <unsetenv@plt-0xbff>
push   $0x65730072
arpl   %si,0x72(%ebp)
gs
pop    %edi
addr16
gs
je     b31 <unsetenv@plt-0xbef>
outsb  %ds:(%esi),(%dx)
jbe    acf <unsetenv@plt-0xc51>
pop    %edi
pop    %edi
jbe    b39 <unsetenv@plt-0xbe7>
jo     b47 <unsetenv@plt-0xbd9>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x5f,(%eax),%eax
pop    %edi
jae    b56 <unsetenv@plt-0xbca>
jb     b58 <unsetenv@plt-0xbc8>
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x72(%edi),%ebx
jo     b5d <unsetenv@plt-0xbc3>
outsl  %ds:(%esi),(%dx)
addr16 jb b50 <unsetenv@plt-0xbd0>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     b75 <unsetenv@plt-0xbab>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     b71 <unsetenv@plt-0xbaf>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     b91 <unsetenv@plt-0xb8f>
add    %dh,0x6c(%ebx)
gs
gs
jo     b24 <unsetenv@plt-0xbfc>
pop    %edi
pop    %edi
jae    b9c <unsetenv@plt-0xb84>
jb     b8d <unsetenv@plt-0xb93>
jo     ba5 <unsetenv@plt-0xb7b>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     ba4 <unsetenv@plt-0xb7c>
add    %dh,0x79(%ebx)
jae    ba7 <unsetenv@plt-0xb79>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
jbe    bad <unsetenv@plt-0xb73>
jae    bbe <unsetenv@plt-0xb62>
jb     bb9 <unsetenv@plt-0xb67>
outsb  %ds:(%esi),(%dx)
je     bb9 <unsetenv@plt-0xb67>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x65(%edx)
popa
fs imul $0x725f34,%fs:0x36(%edx),%esi
00
pop    %edi
pop    %edi
jae    bd8 <unsetenv@plt-0xb48>
jb     bd3 <unsetenv@plt-0xb4d>
outsb  %ds:(%esi),(%dx)
je     bd3 <unsetenv@plt-0xb4d>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    bde <unsetenv@plt-0xb42>
add    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%esi)
jo     be9 <unsetenv@plt-0xb37>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
outsl  %ds:(%esi),(%dx)
jo     bf0 <unsetenv@plt-0xb30>
outsb  %ds:(%esi),(%dx)
popa
je     bc5 <unsetenv@plt-0xb5b>
xor    $0x0,%al
jae    c07 <unsetenv@plt-0xb19>
jb     bf8 <unsetenv@plt-0xb28>
insl   (%dx),%es:(%edi)
jo     b98 <unsetenv@plt-0xb88>
jae    c0e <unsetenv@plt-0xb12>
jb     c01 <unsetenv@plt-0xb1f>
jb     c10 <unsetenv@plt-0xb10>
outsl  %ds:(%esi),(%dx)
jb     ba1 <unsetenv@plt-0xb7f>
pop    %edi
pop    %edi
popa
jae    c16 <unsetenv@plt-0xb0a>
jb     c11 <unsetenv@plt-0xb0f>
outsb  %ds:(%esi),(%dx)
je     c11 <unsetenv@plt-0xb0f>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     c30 <unsetenv@plt-0xaf0>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %ah,%fs:0x65(%esi)
jb     c3e <unsetenv@plt-0xae2>
outsl  %ds:(%esi),(%dx)
jb     bcf <unsetenv@plt-0xb51>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     c3a <unsetenv@plt-0xae6>
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    c47 <unsetenv@plt-0xad9>
add    %ah,%gs:0x61(%edx)
jae    c46 <unsetenv@plt-0xada>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    c50 <unsetenv@plt-0xad0>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %bl,0x5f(%bx)
jo     c65 <unsetenv@plt-0xabb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jae    c72 <unsetenv@plt-0xaae>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x74616465,0x5f(%eax,%eax,1),%ebp
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    c8e <unsetenv@plt-0xa92>
popa
jb     c91 <unsetenv@plt-0xa8f>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %bl,%fs:0x49(%edi)
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     c91 <unsetenv@plt-0xa8f>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    cbc <unsetenv@plt-0xa64>
popa
jb     cbf <unsetenv@plt-0xa61>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    cb1 <unsetenv@plt-0xa6f>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    cd2 <unsetenv@plt-0xa4e>
gs
jae    c62 <unsetenv@plt-0xabe>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     cce <unsetenv@plt-0xa52>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
cmp    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%edi)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    $0x2000200,%eax
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edi)
add    %al,(%eax,%eax,1)
or     %al,(%eax)
add    (%eax),%al
or     %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
or     (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
or     %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%esi)
add    %cl,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edx)
add    %cl,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %cl,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %eax,(%eax)
or     (%eax),%al
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0xb0000,%eax
lock add (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
imul   $0xa0000,0xd(%ecx),%ebp
cli
add    (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x90000,0xd(%ecx),%ebp
add    $0x4,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    e21 <unsetenv@plt-0x8ff>
imul   $0x80000,(%ecx),%ecx
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1a(%ebx)
imul   $0x70000,(%ecx),%ecx
sbb    (%eax,%eax,1),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x426,0x60000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%edi
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
add    $0x43000,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
imul   $0x40000,0xd(%ecx),%ebp
cmp    (%eax,%eax,1),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%ebx)
add    %al,0x4(%ebp)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x20000,%eax
push   %ecx
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
push   %eax
push   $0x80002
add    %al,(%eax)
push   %esp
push   $0x80002
add    %al,(%eax)
pusha
push   $0x80002
add    %al,(%eax)
fs
push   $0x80002
add    %al,(%eax)
push   $0x8000268
add    %al,(%eax)
add    %al,0x8000268(%eax)
add    %al,(%eax)
add    %dl,0x8000268(%eax)
add    %al,(%eax)
add    %dh,0x8000268(%eax)
add    %al,(%eax)
add    %dh,0x80002(%eax,%ebp,2)
add    %al,(%eax)
mov    $0x8000268,%eax
add    %al,(%eax)
add    %bh,0x80002(%eax,%ebp,2)
add    %al,(%eax)
shrb   $0x0,0x2(%eax)
or     %al,(%eax)
add    %al,(%eax)
les    0x2(%eax),%ebp
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,%al
push   $0x80002
add    %al,(%eax)
int3
push   $0x80002
add    %al,(%eax)
shrb   0x2(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%al
push   $0x80002
add    %al,(%eax)
lock push $0x80002
add    %al,(%eax)
add    %ch,0x2(%ecx)
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x800,(%edx),%eax
add    %ah,(%eax)
imul   $0x800,(%edx),%eax
add    %dh,(%eax)
imul   $0x800,(%edx),%eax
add    %dl,0x69(%eax)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
push   %esp
imul   $0x800,(%edx),%eax
add    %bl,0x69(%eax)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
pusha
imul   $0x800,(%edx),%eax
add    %dh,0x69(%eax)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
nop
imul   $0x800,(%edx),%eax
add    %dl,0x80002(%ecx,%ebp,2)
add    %al,(%eax)
cwtl
imul   $0x800,(%edx),%eax
add    %ah,0x8000269(%eax)
add    %al,(%eax)
add    %dh,0x8000269(%eax)
add    %al,(%eax)
add    %al,%al
imul   $0x800,(%edx),%eax
add    %dl,%al
imul   $0x800,(%edx),%eax
add    %ah,%al
imul   $0x800,(%edx),%eax
add    %dh,%al
imul   $0x800,(%edx),%eax
add    %al,(%eax)
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x6a(%eax)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
pusha
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,0x2(%edx,%ebp,2)
add    %cl,(%eax)
add    %al,(%eax)
add    %ch,0x6a(%eax)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
subb   $0x0,0x2(%edx)
or     %al,(%eax)
add    %al,(%eax)
nop
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,0x800026a(%eax)
add    %al,(%eax)
add    %dh,0x800026a(%eax)
add    %al,(%eax)
add    %al,%al
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%al
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%al
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,%al
push   $0x2
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
imul   $0x0,(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
adc    %ch,0x2(%ebx)
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
imul   $0x0,(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
xor    %ch,0x2(%ebx)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x6b(%eax)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
push   %eax
imul   $0x0,(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
pusha
imul   $0x0,(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
jo     10b5 <unsetenv@plt-0x66b>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
subb   $0x0,0x2(%ebx)
or     %al,(%eax)
add    %al,(%eax)
nop
imul   $0x0,(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
mov    0x800026b,%al
add    %al,(%eax)
add    %dh,0x800026b(%eax)
add    %al,(%eax)
add    %al,%al
imul   $0x0,(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
shrb   0x2(%ebx)
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%al
imul   $0x0,(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
lock imul $0x0,(%edx),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edx,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
adc    %ch,0x0(%edx,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
inc    %esp
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
dec    %eax
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
dec    %esp
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
push   %eax
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
push   %esp
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
pop    %eax
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
pop    %esp
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
pusha
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
fs
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
push   $0x800026c
add    %al,(%eax)
add    %ch,0x2(%esp,%ebp,2)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,0x6c(%eax)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
je     1176 <unsetenv@plt-0x5aa>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
js     117e <unsetenv@plt-0x5a2>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
jl     1186 <unsetenv@plt-0x59a>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
subb   $0x8,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,0x80002(%esp,%ebp,2)
add    %al,(%eax)
nop
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
cwtl
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
mov    0x800026c,%al
add    %al,(%eax)
add    %dh,0x800026c(%eax)
add    %al,(%eax)
add    %al,%al
insb   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
shrb   0x0(%edx,%eax,1)
or     %al,(%eax)
add    %al,(%eax)
loopne 11d6 <unsetenv@plt-0x54a>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
lock insb (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x2(%ebp)
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
insl   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
and    %ch,0x2(%ebp)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
insl   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
insl   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
push   %eax
insl   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
pusha
insl   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
jo     121f <unsetenv@plt-0x501>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
subb   $0x0,0x2(%ebp)
or     %al,(%eax)
add    %al,(%eax)
nop
insl   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
mov    0x800026d,%al
add    %al,(%eax)
add    %dh,0x800026d(%eax)
add    %al,(%eax)
add    %dl,%al
insl   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
aam    $0x6d
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
fsubrs 0x2(%ebp)
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,%al
insl   (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
lock insl (%dx),%es:(%edi)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x2(%esi)
add    %cl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
and    $0x6e,%al
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
sub    %ch,0x2(%esi)
add    %cl,(%eax)
add    %al,(%eax)
add    %ch,(%esi,%ebp,2)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
xor    %ch,0x2(%esi)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,(%esi,%ebp,2)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
cmp    %ch,0x2(%esi)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,(%esi,%ebp,2)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
inc    %eax
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
inc    %esp
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
dec    %eax
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
dec    %esp
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
push   %eax
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
pusha
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
outsb  %fs:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
push   $0x800026e
add    %al,(%eax)
add    %ch,0x2(%esi,%ebp,2)
add    %cl,(%eax)
add    %al,(%eax)
add    %dh,0x6e(%eax)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
je     1308 <unsetenv@plt-0x418>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
js     1310 <unsetenv@plt-0x410>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
jl     1318 <unsetenv@plt-0x408>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
subb   $0x0,0x2(%esi)
or     %al,(%eax)
add    %al,(%eax)
test   %ch,0x2(%esi)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,0x800026e(%eax)
add    %al,(%eax)
add    %cl,0x80002(%esi,%ebp,2)
add    %al,(%eax)
mov    0x800026e,%al
add    %al,(%eax)
add    %ah,0x80002(%esi,%ebp,2)
add    %al,(%eax)
test   $0x6e,%al
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
mov    $0x6e,%al
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
mov    $0x6e,%ah
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
mov    $0x800026e,%eax
add    %al,(%eax)
add    %bh,0x80002(%esi,%ebp,2)
add    %al,(%eax)
shrb   $0x0,0x2(%esi)
or     %al,(%eax)
add    %al,(%eax)
les    0x2(%esi),%ebp
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,%al
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
int3
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
shrb   0x2(%esi)
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%ah
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
fsubrs 0x2(%esi)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%ah
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
loopne 13c0 <unsetenv@plt-0x360>
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
in     $0x6e,%al
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
call   80015d3 <_end+0x7fda3cf>
add    %al,(%eax)
add    %ch,%ah
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
or     %al,(%eax)
add    %al,(%eax)
test   %dh,0x2(%ecx)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,0x8000271(%eax)
add    %al,(%eax)
add    %bl,0x80002(%ecx,%esi,2)
add    %al,(%eax)
mov    0x8000271,%al
add    %al,(%eax)
add    %dh,0x8000271(%eax)
add    %al,(%eax)
add    %dh,0x80002(%ecx,%esi,2)
add    %al,(%eax)
mov    $0x8000271,%eax
add    %al,(%eax)
add    %dl,%ah
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
push   %es
or     $0x0,%al
add    %bl,%al
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
push   %es
adc    %al,(%eax)
add    %bl,%ah
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
push   %es
sbb    $0x6fe00000,%eax
add    (%eax),%al
push   %es
and    $0x6fe40000,%eax
add    (%eax),%al
push   %es
xor    (%eax),%al
add    %ch,%al
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
push   %es
dec    %eax
add    %al,(%eax)
lock outsl %ds:(%esi),(%dx)
add    (%eax),%al
push   %es
push   %ebp
add    %al,(%eax)
hlt
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
push   %es
pop    %esp
add    %al,(%eax)
clc
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
push   %es
pop    %esi
add    %al,(%eax)
cld
outsl  %ds:(%esi),(%dx)
add    (%eax),%al
push   %es
popa
or     $0x70,%al
add    (%eax),%al
pop    %es
add    $0x0,%al
add    %dl,(%eax)
jo     1405 <unsetenv@plt-0x31b>
add    %al,(%edi)
add    $0x70140000,%eax
add    (%eax),%al
pop    %es
push   %es
add    %al,(%eax)
sbb    %dh,0x2(%eax)
add    %al,(%edi)
or     %al,(%eax)
add    %bl,(%eax,%esi,2)
add    (%eax),%al
pop    %es
or     %eax,(%eax)
add    %ah,(%eax)
jo     1425 <unsetenv@plt-0x2fb>
add    %al,(%edi)
or     (%eax),%al
add    %ah,(%eax,%esi,2)
add    (%eax),%al
pop    %es
or     (%eax),%eax
add    %ch,(%eax)
jo     1435 <unsetenv@plt-0x2eb>
add    %al,(%edi)
or     $0x702c0000,%eax
add    (%eax),%al
pop    %es
push   %cs
add    %al,(%eax)
xor    %dh,0x2(%eax)
add    %al,(%edi)
sldt   (%eax)
xor    $0x70,%al
add    (%eax),%al
pop    %es
adc    %eax,(%eax)
add    %bh,(%eax)
jo     1455 <unsetenv@plt-0x2cb>
add    %al,(%edi)
adc    (%eax),%al
add    %bh,(%eax,%esi,2)
add    (%eax),%al
pop    %es
adc    (%eax),%eax
add    %al,0x70(%eax)
add    (%eax),%al
pop    %es
adc    $0x0,%al
add    %al,0x2(%eax,%esi,2)
add    %al,(%edi)
adc    $0x70480000,%eax
add    (%eax),%al
pop    %es
push   %ss
add    %al,(%eax)
dec    %esp
jo     147d <unsetenv@plt-0x2a3>
add    %al,(%edi)
pop    %ss
add    %al,(%eax)
push   %eax
jo     1485 <unsetenv@plt-0x29b>
add    %al,(%edi)
sbb    %al,(%eax)
add    %dl,0x2(%eax,%esi,2)
add    %al,(%edi)
sbb    %eax,(%eax)
add    %bl,0x70(%eax)
add    (%eax),%al
pop    %es
sbb    (%eax),%al
add    %bl,0x2(%eax,%esi,2)
add    %al,(%edi)
sbb    (%eax),%eax
add    %ah,0x70(%eax)
add    (%eax),%al
pop    %es
sbb    $0x0,%al
add    %ah,0x2(%eax,%esi,2)
add    %al,(%edi)
push   %ds
add    %al,(%eax)
push   $0x7000270
pop    %ds
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jo     14bd <unsetenv@plt-0x263>
add    %al,(%edi)
and    %al,(%eax)
add    %dh,0x70(%eax)
add    (%eax),%al
pop    %es
and    %eax,(%eax)
add    %dh,0x2(%eax,%esi,2)
add    %al,(%edi)
and    (%eax),%al
add    %bh,0x70(%eax)
add    (%eax),%al
pop    %es
and    (%eax),%eax
add    %bh,0x2(%eax,%esi,2)
add    %al,(%edi)
and    $0x0,%al
add    %al,0x7000270(%eax)
and    $0x70840000,%eax
add    (%eax),%al
pop    %es
add    %al,%es:(%eax)
mov    %dh,0x2(%eax)
add    %al,(%edi)
daa
add    %al,(%eax)
mov    %?,0x2(%eax)
add    %al,(%edi)
sub    %al,(%eax)
add    %dl,0x7000270(%eax)
sub    %eax,(%eax)
add    %dl,0x2a070002(%eax,%esi,2)
add    %al,(%eax)
cwtl
jo     1515 <unsetenv@plt-0x20b>
add    %al,(%edi)
sub    (%eax),%eax
add    %bl,0x2c070002(%eax,%esi,2)
add    %al,(%eax)
mov    0x7000270,%al
sub    $0x70a40000,%eax
add    (%eax),%al
pop    %es
add    %al,%cs:(%eax)
test   $0x70,%al
add    (%eax),%al
pop    %es
das
add    %al,(%eax)
lods   %ds:(%esi),%al
jo     153d <unsetenv@plt-0x1e3>
add    %al,(%edi)
xor    %al,(%eax)
add    %dh,0x7000270(%eax)
xor    %eax,(%eax)
add    %dh,0x32070002(%eax,%esi,2)
add    %al,(%eax)
mov    $0x7000270,%eax
xor    (%eax),%eax
add    %bh,0x34070002(%eax,%esi,2)
add    %al,(%eax)
(bad)
jo     1565 <unsetenv@plt-0x1bb>
add    %al,(%edi)
xor    $0x70c40000,%eax
add    (%eax),%al
pop    %es
add    %al,%ss:(%eax)
enter  $0x270,$0x0
pop    %es
aaa
add    %al,(%eax)
int3
jo     157d <unsetenv@plt-0x1a3>
add    %al,(%edi)
cmp    %al,(%eax)
add    %dl,%al
jo     1585 <unsetenv@plt-0x19b>
add    %al,(%edi)
cmp    %eax,(%eax)
add    %dl,%ah
jo     158d <unsetenv@plt-0x193>
add    %al,(%edi)
cmp    (%eax),%al
add    %bl,%al
jo     1595 <unsetenv@plt-0x18b>
add    %al,(%edi)
cmp    (%eax),%eax
add    %bl,%ah
jo     159d <unsetenv@plt-0x183>
add    %al,(%edi)
cmp    $0x0,%al
add    %ah,%al
jo     15a5 <unsetenv@plt-0x17b>
add    %al,(%edi)
cmp    $0x70e40000,%eax
add    (%eax),%al
pop    %es
add    %al,%ds:(%eax)
call   7001825 <_end+0x6fda621>
aas
add    %al,(%eax)
in     (%dx),%al
jo     15bd <unsetenv@plt-0x163>
add    %al,(%edi)
inc    %eax
add    %al,(%eax)
lock jo 15c5 <unsetenv@plt-0x15b>
add    %al,(%edi)
inc    %ecx
add    %al,(%eax)
hlt
jo     15cd <unsetenv@plt-0x153>
add    %al,(%edi)
inc    %edx
add    %al,(%eax)
clc
jo     15d5 <unsetenv@plt-0x14b>
add    %al,(%edi)
inc    %ebx
add    %al,(%eax)
cld
jo     15dd <unsetenv@plt-0x143>
add    %al,(%edi)
inc    %esp
add    %al,(%eax)
add    %dh,0x2(%ecx)
add    %al,(%edi)
inc    %ebp
add    %al,(%eax)
add    $0x71,%al
add    (%eax),%al
pop    %es
inc    %esi
add    %al,(%eax)
or     %dh,0x2(%ecx)
add    %al,(%edi)
inc    %edi
add    %al,(%eax)
or     $0x71,%al
add    (%eax),%al
pop    %es
dec    %ecx
add    %al,(%eax)
adc    %dh,0x2(%ecx)
add    %al,(%edi)
dec    %edx
add    %al,(%eax)
adc    $0x71,%al
add    (%eax),%al
pop    %es
dec    %ebx
add    %al,(%eax)
sbb    %dh,0x2(%ecx)
add    %al,(%edi)
dec    %esp
add    %al,(%eax)
sbb    $0x71,%al
add    (%eax),%al
pop    %es
dec    %ebp
add    %al,(%eax)
and    %dh,0x2(%ecx)
add    %al,(%edi)
dec    %esi
add    %al,(%eax)
and    $0x71,%al
add    (%eax),%al
pop    %es
dec    %edi
add    %al,(%eax)
sub    %dh,0x2(%ecx)
add    %al,(%edi)
push   %eax
add    %al,(%eax)
sub    $0x71,%al
add    (%eax),%al
pop    %es
push   %ecx
add    %al,(%eax)
xor    %dh,0x2(%ecx)
add    %al,(%edi)
push   %edx
add    %al,(%eax)
xor    $0x71,%al
add    (%eax),%al
pop    %es
push   %ebx
add    %al,(%eax)
cmp    %dh,0x2(%ecx)
add    %al,(%edi)
push   %esp
add    %al,(%eax)
cmp    $0x71,%al
add    (%eax),%al
pop    %es
push   %esi
add    %al,(%eax)
inc    %eax
jno    1665 <unsetenv@plt-0xbb>
add    %al,(%edi)
push   %edi
add    %al,(%eax)
inc    %esp
jno    166d <unsetenv@plt-0xb3>
add    %al,(%edi)
pop    %eax
add    %al,(%eax)
dec    %eax
jno    1675 <unsetenv@plt-0xab>
add    %al,(%edi)
pop    %ecx
add    %al,(%eax)
dec    %esp
jno    167d <unsetenv@plt-0xa3>
add    %al,(%edi)
pop    %edx
add    %al,(%eax)
push   %eax
jno    1685 <unsetenv@plt-0x9b>
add    %al,(%edi)
pop    %ebx
add    %al,(%eax)
push   %esp
jno    168d <unsetenv@plt-0x93>
add    %al,(%edi)
pop    %ebp
add    %al,(%eax)
pop    %eax
jno    1695 <unsetenv@plt-0x8b>
add    %al,(%edi)
pop    %edi
add    %al,(%eax)
pop    %esp
jno    169d <unsetenv@plt-0x83>
add    %al,(%edi)
pusha
add    %al,(%eax)
pusha
jno    16a5 <unsetenv@plt-0x7b>
add    %al,(%edi)
bound  %eax,(%eax)
add    %ah,0x2(%ecx,%esi,2)
add    %al,(%edi)
arpl   %ax,(%eax)
add    %ch,0x71(%eax)
add    (%eax),%al
pop    %es
add    %al,%fs:(%eax)
insb   (%dx),%es:(%edi)
jno    16bd <unsetenv@plt-0x63>
add    %al,(%edi)
add    %al,%gs:(%eax)
jo     1733 <__snprintf_chk@plt+0x3>
add    (%eax),%al
pop    %es
data16
add    %al,(%eax)
je     173b <__snprintf_chk@plt+0xb>
add    (%eax),%al
pop    %es
add    %al,(%bx,%si)
js     1743 <strstr@plt+0x3>
add    (%eax),%al
pop    %es
push   $0x717c0000
add    (%eax),%al
pop    %es
imul   $0x2718000,(%eax),%eax
add    %al,(%edi)
push   $0x0
push   %ebx
sub    $0x8,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x2590f,%ebx
mov    -0x1c(%ebx),%eax
test   %eax,%eax
je     1706 <unsetenv@plt-0x1a>
call   19c0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x10(%ebx)
push   $0x8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x14(%ebx)
push   $0x10
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x18(%ebx)
push   $0x18
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x1c(%ebx)
push   $0x20
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x20(%ebx)
push   $0x28
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x24(%ebx)
push   $0x30
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x28(%ebx)
push   $0x38
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x2c(%ebx)
push   $0x40
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x30(%ebx)
push   $0x48
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x34(%ebx)
push   $0x50
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x38(%ebx)
push   $0x58
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x3c(%ebx)
push   $0x60
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x40(%ebx)
push   $0x68
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x44(%ebx)
push   $0x70
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x48(%ebx)
push   $0x78
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x4c(%ebx)
push   $0x80
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x50(%ebx)
push   $0x88
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x54(%ebx)
push   $0x90
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x58(%ebx)
push   $0x98
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x60(%ebx)
push   $0xa8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x64(%ebx)
push   $0xb0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x68(%ebx)
push   $0xb8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x70(%ebx)
push   $0xc8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x74(%ebx)
push   $0xd0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x78(%ebx)
push   $0xd8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x80(%ebx)
push   $0xe8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x84(%ebx)
push   $0xf0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x88(%ebx)
push   $0xf8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x8c(%ebx)
push   $0x100
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x90(%ebx)
push   $0x108
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x94(%ebx)
push   $0x110
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x98(%ebx)
push   $0x118
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x9c(%ebx)
push   $0x120
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xa0(%ebx)
push   $0x128
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xa4(%ebx)
push   $0x130
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xa8(%ebx)
push   $0x138
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xac(%ebx)
push   $0x140
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xb0(%ebx)
push   $0x148
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xb4(%ebx)
push   $0x150
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xb8(%ebx)
push   $0x158
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xbc(%ebx)
push   $0x160
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xc0(%ebx)
push   $0x168
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xc4(%ebx)
push   $0x170
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xc8(%ebx)
push   $0x178
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xcc(%ebx)
push   $0x180
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xd0(%ebx)
push   $0x188
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xd4(%ebx)
push   $0x190
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xd8(%ebx)
push   $0x198
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xdc(%ebx)
push   $0x1a0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xe0(%ebx)
push   $0x1a8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xe4(%ebx)
push   $0x1b0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xe8(%ebx)
push   $0x1b8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xec(%ebx)
push   $0x1c0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xf0(%ebx)
push   $0x1c8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xf4(%ebx)
push   $0x1d0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xf8(%ebx)
push   $0x1d8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0xfc(%ebx)
push   $0x1e0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x100(%ebx)
push   $0x1e8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x104(%ebx)
push   $0x1f0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x108(%ebx)
push   $0x1f8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x10c(%ebx)
push   $0x200
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x110(%ebx)
push   $0x208
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x114(%ebx)
push   $0x210
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x118(%ebx)
push   $0x218
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x11c(%ebx)
push   $0x220
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x120(%ebx)
push   $0x228
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x124(%ebx)
push   $0x230
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x128(%ebx)
push   $0x238
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x12c(%ebx)
push   $0x240
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x130(%ebx)
push   $0x248
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x134(%ebx)
push   $0x250
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x138(%ebx)
push   $0x258
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x13c(%ebx)
push   $0x260
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x140(%ebx)
push   $0x268
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x144(%ebx)
push   $0x270
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x148(%ebx)
push   $0x278
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x14c(%ebx)
push   $0x280
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x150(%ebx)
push   $0x288
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x154(%ebx)
push   $0x290
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x158(%ebx)
push   $0x298
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x15c(%ebx)
push   $0x2a0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x160(%ebx)
push   $0x2a8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x164(%ebx)
push   $0x2b0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x168(%ebx)
push   $0x2b8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x16c(%ebx)
push   $0x2c0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x170(%ebx)
push   $0x2c8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x174(%ebx)
push   $0x2d0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x178(%ebx)
push   $0x2d8
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x17c(%ebx)
push   $0x2e0
jmp    1710 <unsetenv@plt-0x10>
jmp    *0x180(%ebx)
push   $0x2e8
jmp    1710 <unsetenv@plt-0x10>
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x252fa,%ebx
sub    $0x18,%esp
movl   $0xfa,0x8(%esp)
lea    -0x68ce(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x69cc(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x69a3(%ebx),%eax
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x252c1,%ebx
sub    $0x18,%esp
movl   $0xda,0x8(%esp)
lea    -0x5e7a(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5ef9(%ebx),%eax
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    $0x5,%ecx
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x25270,%ebx
and    $0xfffffff0,%esp
sub    $0x20,%esp
mov    -0xc(%ebx),%eax
lea    -0xbb5f(%ebx),%edi
mov    (%eax),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     1e00 <__sprintf_chk@plt+0x110>
mov    0xc(%ebp),%eax
lea    -0x138(%ebx),%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   17c0 <basename@plt>
mov    %eax,0x1c(%esp)
lea    0x18(%esi),%eax
mov    %eax,0x18(%esp)
mov    (%esi),%edi
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
je     1e94 <__sprintf_chk@plt+0x1a4>
add    $0x4,%esi
cmp    0x18(%esp),%esi
jne    1dcc <__sprintf_chk@plt+0xdc>
mov    $0xfffffffe,%esi
lea    -0xc(%ebp),%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x780(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0xbb0c(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0xc(%ebp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   19f0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     1eab <__sprintf_chk@plt+0x1bb>
cmp    $0x56,%eax
je     1f48 <__sprintf_chk@plt+0x258>
cmp    $0x68,%eax
nop
je     1e7b <__sprintf_chk@plt+0x18b>
cmp    $0x3f,%eax
je     1f5d <__sprintf_chk@plt+0x26d>
mov    %eax,0xc(%esp)
lea    -0xbb98(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    1df6 <__sprintf_chk@plt+0x106>
mov    0xc(%ebp),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   2120 <__sprintf_chk@plt+0x430>
jmp    1df6 <__sprintf_chk@plt+0x106>
mov    0xc(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   *0x4(%edi)
mov    %eax,%esi
jmp    1df6 <__sprintf_chk@plt+0x106>
mov    -0x24(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x8(%ebp)
jle    1f86 <__sprintf_chk@plt+0x296>
mov    0xc(%ebp),%edx
xor    %edi,%edi
mov    $0xffffffea,%esi
mov    (%edx,%eax,4),%eax
mov    %eax,0x18(%esp)
mov    -0x120(%edi,%ebx,1),%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,0x4(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   1750 <strcmp@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     1f67 <__sprintf_chk@plt+0x277>
add    $0x4,%edi
cmp    $0xc,%edi
jne    1ecd <__sprintf_chk@plt+0x1dd>
test   %esi,%esi
jns    1df6 <__sprintf_chk@plt+0x106>
mov    0x18(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xbb39(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
mov    0xc(%ebp),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   2120 <__sprintf_chk@plt+0x430>
jmp    1df6 <__sprintf_chk@plt+0x106>
lea    -0xbb5a(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1980 <puts@plt>
jmp    1df6 <__sprintf_chk@plt+0x106>
mov    $0x1,%esi
jmp    1df6 <__sprintf_chk@plt+0x106>
addl   $0x4,0xc(%ebp)
mov    0xc(%ebp),%eax
subl   $0x1,0x8(%ebp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   *0x4(%ecx)
mov    %eax,%esi
jmp    1ef2 <__sprintf_chk@plt+0x202>
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
movl   $0x10,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xbb4a(%ebx),%eax
mov    %eax,(%esp)
call   1900 <fwrite@plt>
jmp    1f2c <__sprintf_chk@plt+0x23c>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   1fe7 <__sprintf_chk@plt+0x2f7>
add    $0x2503b,%ebx
lea    -0xbce0(%ebx),%eax
push   %eax
lea    -0xbd50(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  -0x14(%ebx)
call   1a60 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x24ff7,%ebx
sub    $0x14,%esp
lea    0x1c3(%ebx),%eax
lea    0x1c0(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     202b <__sprintf_chk@plt+0x33b>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    -0x2c(%ebx),%eax
test   %eax,%eax
je     2025 <__sprintf_chk@plt+0x335>
mov    %edx,(%esp)
call   *%eax
jmp    2025 <__sprintf_chk@plt+0x335>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x24fb7,%ebx
sub    $0x14,%esp
lea    0x1c0(%ebx),%eax
lea    0x1c0(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    2074 <__sprintf_chk@plt+0x384>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    -0x8(%ebx),%ecx
test   %ecx,%ecx
je     206e <__sprintf_chk@plt+0x37e>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    206e <__sprintf_chk@plt+0x37e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x24f67,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x1c0(%ebx)
jne    20cf <__sprintf_chk@plt+0x3df>
mov    -0x20(%ebx),%eax
test   %eax,%eax
je     20c3 <__sprintf_chk@plt+0x3d3>
mov    0x184(%ebx),%eax
mov    %eax,(%esp)
call   18f0 <__cxa_finalize@plt>
call   2000 <__sprintf_chk@plt+0x310>
movb   $0x1,0x1c0(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x24f17,%ebx
sub    $0x14,%esp
mov    -0x7a8(%ebx),%eax
test   %eax,%eax
je     2111 <__sprintf_chk@plt+0x421>
mov    -0x10(%ebx),%eax
test   %eax,%eax
je     2111 <__sprintf_chk@plt+0x421>
lea    -0x7a8(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    2040 <__sprintf_chk@plt+0x350>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x24ed0,%ebx
mov    (%eax),%eax
lea    -0x120(%ebx),%esi
mov    %eax,(%esp)
lea    0xc(%esi),%edi
call   17c0 <basename@plt>
lea    -0xbb6b(%ebx),%ebp
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0xbc9c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
mov    (%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     218c <__sprintf_chk@plt+0x49c>
mov    %edx,0xc(%esp)
mov    (%eax),%eax
mov    %ebp,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   1b30 <__printf_chk@plt>
add    $0x4,%esi
cmp    %edi,%esi
jne    2169 <__sprintf_chk@plt+0x479>
lea    -0xbbdc(%ebx),%eax
mov    %eax,(%esp)
lea    -0x138(%ebx),%esi
call   1980 <puts@plt>
lea    0x18(%esi),%edi
lea    -0xbb6b(%ebx),%ebp
mov    (%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     21d3 <__sprintf_chk@plt+0x4e3>
mov    %edx,0xc(%esp)
mov    (%eax),%eax
mov    %ebp,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   1b30 <__printf_chk@plt>
add    $0x4,%esi
cmp    %edi,%esi
jne    21b0 <__sprintf_chk@plt+0x4c0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x24e04,%ebx
cmpl   $0x1,0x60(%esp)
movl   $0x0,0x38(%esp)
je     2250 <__sprintf_chk@plt+0x560>
mov    0x64(%esp),%eax
mov    (%eax),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xbb08(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
mov    $0x1,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   cd60 <__sprintf_chk@plt+0xb070>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     2440 <__sprintf_chk@plt+0x750>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   145e0 <__sprintf_chk@plt+0x128f0>
test   %eax,%eax
js     23fa <__sprintf_chk@plt+0x70a>
lea    -0xba6c(%ebx),%eax
mov    %eax,(%esp)
call   1980 <puts@plt>
mov    0x3c(%esp),%eax
test   %eax,%eax
mov    %eax,0x20(%esp)
je     2474 <__sprintf_chk@plt+0x784>
lea    -0xbae2(%ebx),%eax
mov    %eax,0x28(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   136a0 <__sprintf_chk@plt+0x119b0>
mov    %eax,(%esp)
mov    %eax,%ebp
mov    %eax,0x24(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %ebp,(%esp)
mov    %eax,%esi
call   157d0 <__sprintf_chk@plt+0x13ae0>
mov    %ebp,(%esp)
mov    %eax,%edi
call   15450 <__sprintf_chk@plt+0x13760>
mov    %esi,0x8(%esp)
mov    %edi,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
mov    %ebp,(%esp)
mov    $0x1,%ebp
call   159b0 <__sprintf_chk@plt+0x13cc0>
test   %eax,%eax
mov    %eax,%esi
mov    %eax,0x1c(%esp)
jne    235c <__sprintf_chk@plt+0x66c>
jmp    2388 <__sprintf_chk@plt+0x698>
nop
mov    -0x18(%ebx),%eax
mov    (%eax),%ebp
mov    %edi,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1c80 <fputs@plt>
mov    %edi,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%esi
je     2388 <__sprintf_chk@plt+0x698>
xor    %ebp,%ebp
mov    %esi,(%esp)
call   136a0 <__sprintf_chk@plt+0x119b0>
test   %ebp,%ebp
mov    %eax,%edi
jne    2320 <__sprintf_chk@plt+0x630>
mov    -0x18(%ebx),%eax
mov    (%eax),%eax
movl   $0x2c,(%esp)
mov    %eax,0x4(%esp)
call   18a0 <_IO_putc@plt>
jmp    2320 <__sprintf_chk@plt+0x630>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x18(%ebx),%eax
mov    (%eax),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   18a0 <_IO_putc@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    22b8 <__sprintf_chk@plt+0x5c8>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xba98(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
mov    $0x1,%eax
jmp    2242 <__sprintf_chk@plt+0x552>
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
movl   $0x1a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0xbafd(%ebx),%eax
mov    %eax,(%esp)
call   1900 <fwrite@plt>
mov    $0x1,%eax
jmp    2242 <__sprintf_chk@plt+0x552>
xor    %eax,%eax
jmp    23dc <__sprintf_chk@plt+0x6ec>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x24b77,%ebx
sub    $0xac,%esp
movl   $0x0,0x38(%esp)
lea    0x40(%esp),%ebp
movl   $0x800,0x14(%esp)
lea    -0xba44(%ebx),%eax
lea    -0x720(%ebx),%edi
lea    -0xb668(%ebx),%esi
mov    %eax,0x18(%esp)
mov    0xc4(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
movl   $0x0,0x40(%esp)
mov    %eax,(%esp)
call   19f0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     2600 <__sprintf_chk@plt+0x910>
lea    -0x3f(%eax),%edx
cmp    $0x38,%edx
ja     25d0 <__sprintf_chk@plt+0x8e0>
mov    -0xb74c(%ebx,%edx,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
xchg   %ax,%ax
mov    $0x1,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
movl   $0xa,(%esp)
call   1870 <sleep@plt>
andl   $0xfffff7ff,0x14(%esp)
jmp    24bf <__sprintf_chk@plt+0x7cf>
lea    0x0(%esi),%esi
addl   $0x1,0x188(%ebx)
jmp    24bf <__sprintf_chk@plt+0x7cf>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x1c4(%ebx)
00
jmp    24bf <__sprintf_chk@plt+0x7cf>
nop
mov    -0xc(%ebx),%eax
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb9e0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
orl    $0x200,0x14(%esp)
jmp    24bf <__sprintf_chk@plt+0x7cf>
lea    0x0(%esi),%esi
lea    -0xbb5a(%ebx),%eax
mov    %eax,(%esp)
call   1980 <puts@plt>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
lea    -0xb864(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
add    $0xac,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c4(%ebx),%ecx
xor    %eax,%eax
test   %ecx,%ecx
setne  %al
mov    %eax,(%esp)
call   a960 <__sprintf_chk@plt+0x8c70>
mov    -0x24(%ebx),%esi
mov    (%esi),%eax
cmp    %eax,0xc0(%esp)
jg     2653 <__sprintf_chk@plt+0x963>
lea    -0xb7f8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    $0x1,%eax
mov    %eax,0x14(%esp)
call   a9b0 <__sprintf_chk@plt+0x8cc0>
mov    0x14(%esp),%eax
jmp    2515 <__sprintf_chk@plt+0x825>
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   cd60 <__sprintf_chk@plt+0xb070>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     28e5 <__sprintf_chk@plt+0xbf5>
mov    0x188(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   ab70 <__sprintf_chk@plt+0x8e80>
mov    (%esi),%esi
cmp    %esi,0xc0(%esp)
movl   $0x0,0x28(%esp)
jle    281a <__sprintf_chk@plt+0xb2a>
lea    0x3c(%esp),%eax
mov    %esi,%edi
mov    %eax,0x1c(%esp)
mov    %ebp,0x20(%esp)
jmp    2709 <__sprintf_chk@plt+0xa19>
call   126f0 <__sprintf_chk@plt+0x10a00>
test   %eax,%eax
js     27f2 <__sprintf_chk@plt+0xb02>
mov    0x14(%esp),%eax
and    $0xa00,%eax
cmp    $0x800,%eax
je     2750 <__sprintf_chk@plt+0xa60>
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   13830 <__sprintf_chk@plt+0x11b40>
test   %eax,%eax
js     27c8 <__sprintf_chk@plt+0xad8>
mov    0x3c(%esp),%eax
add    $0x1,%edi
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
cmp    0xc0(%esp),%edi
je     281a <__sprintf_chk@plt+0xb2a>
mov    0xc4(%esp),%eax
mov    (%eax,%edi,4),%esi
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
call   1c60 <__xstat64@plt>
mov    %esi,0x4(%esp)
test   %eax,%eax
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
je     26b0 <__sprintf_chk@plt+0x9c0>
call   12530 <__sprintf_chk@plt+0x10840>
jmp    26b5 <__sprintf_chk@plt+0x9c5>
mov    0x3c(%esp),%ebp
mov    %ebp,(%esp)
call   14870 <__sprintf_chk@plt+0x12b80>
mov    %ebp,(%esp)
test   %eax,%eax
je     2929 <__sprintf_chk@plt+0xc39>
js     2905 <__sprintf_chk@plt+0xc15>
lea    0x0(%esi),%esi
call   159b0 <__sprintf_chk@plt+0x13cc0>
mov    %ebp,(%esp)
test   %eax,%eax
mov    %eax,0x24(%esp)
jne    2836 <__sprintf_chk@plt+0xb46>
call   157d0 <__sprintf_chk@plt+0x13ae0>
test   %eax,%eax
je     26d1 <__sprintf_chk@plt+0x9e1>
mov    %ebp,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb796(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
nop
lea    0x0(%esi,%eiz,1),%esi
addl   $0x1,0x28(%esp)
jmp    26ed <__sprintf_chk@plt+0x9fd>
lea    0x0(%esi),%esi
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
lea    -0xb818(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    27b8 <__sprintf_chk@plt+0xac8>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
lea    -0xb7e2(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
mov    0x28(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
jmp    2641 <__sprintf_chk@plt+0x951>
call   136d0 <__sprintf_chk@plt+0x119e0>
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb7ae(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x24(%esp),%ebp
lea    -0x76de(%ebx),%eax
mov    %edi,0x2c(%esp)
mov    %ebp,%edi
mov    %eax,%ebp
nop
mov    %edi,(%esp)
call   136a0 <__sprintf_chk@plt+0x119b0>
mov    %eax,(%esp)
mov    %eax,%esi
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %ebp,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
mov    %esi,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x24(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%edi
jne    2868 <__sprintf_chk@plt+0xb78>
mov    -0x28(%ebx),%eax
mov    0x2c(%esp),%edi
mov    (%eax),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   1bb0 <fputc@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
jmp    27b8 <__sprintf_chk@plt+0xac8>
lea    -0xbaf6(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    $0x1,%eax
jmp    2641 <__sprintf_chk@plt+0x951>
call   136d0 <__sprintf_chk@plt+0x119e0>
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb83c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    27b8 <__sprintf_chk@plt+0xac8>
call   136d0 <__sprintf_chk@plt+0x119e0>
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb7c5(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    27b8 <__sprintf_chk@plt+0xac8>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x246a7,%ebx
sub    $0x4c,%esp
movl   $0x0,0x38(%esp)
lea    0x3c(%esp),%esi
lea    -0x6a0(%ebx),%ebp
lea    -0xb418(%ebx),%edi
mov    0x64(%esp),%eax
mov    %esi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
movl   $0x0,0x3c(%esp)
mov    %eax,(%esp)
call   19f0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     2a58 <__sprintf_chk@plt+0xd68>
lea    -0x3f(%eax),%edx
cmp    $0x34,%edx
ja     2a30 <__sprintf_chk@plt+0xd40>
mov    -0xb4ec(%ebx,%edx,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
lea    -0xb61f(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
lea    0x0(%esi),%esi
mov    $0x1,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    -0xc(%ebx),%eax
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb5b0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0xbb5a(%ebx),%eax
mov    %eax,(%esp)
call   1980 <puts@plt>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x8(%esp)
lea    -0xb864(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    -0x24(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x60(%esp)
jle    29bf <__sprintf_chk@plt+0xccf>
mov    0x64(%esp),%ecx
mov    (%ecx,%eax,4),%ecx
cmpb   $0x2d,(%ecx)
mov    %ecx,0x28(%esp)
jne    2a84 <__sprintf_chk@plt+0xd94>
cmpb   $0x0,0x1(%ecx)
je     2bff <__sprintf_chk@plt+0xf0f>
lea    0x1(%eax),%ebp
cmp    %ebp,0x60(%esp)
jle    2c7d <__sprintf_chk@plt+0xf8d>
xor    %edi,%edi
movl   $0x0,0x20(%esp)
mov    %esi,0x2c(%esp)
jmp    2ae8 <__sprintf_chk@plt+0xdf8>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     2aba <__sprintf_chk@plt+0xdca>
movb   $0x20,(%eax,%edi,1)
add    $0x1,%edi
lea    (%ecx,%edi,1),%eax
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
add    %esi,%edi
mov    (%eax,%ebp,4),%eax
add    $0x1,%ebp
mov    %edi,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x1c(%esp),%edi
cmp    0x60(%esp),%ebp
movb   $0x0,(%esi,%edi,1)
je     2b4d <__sprintf_chk@plt+0xe5d>
mov    %esi,0x20(%esp)
mov    0x64(%esp),%eax
mov    (%eax,%ebp,4),%eax
mov    %eax,(%esp)
call   1a30 <strlen@plt>
mov    %eax,%ecx
lea    (%eax,%edi,1),%eax
mov    %eax,0x1c(%esp)
add    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   1960 <realloc@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
jne    2aa8 <__sprintf_chk@plt+0xdb8>
lea    -0x9bcc(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    $0x1,%eax
jmp    29dd <__sprintf_chk@plt+0xced>
mov    %esi,%edx
mov    0x2c(%esp),%esi
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x1c(%esp)
call   cd60 <__sprintf_chk@plt+0xb070>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%edi
je     2c51 <__sprintf_chk@plt+0xf61>
mov    0x28(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x4(%esp)
call   126f0 <__sprintf_chk@plt+0x10a00>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%esi
js     2c1f <__sprintf_chk@plt+0xf2f>
mov    0x3c(%esp),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   138e0 <__sprintf_chk@plt+0x11bf0>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%esi
js     2c84 <__sprintf_chk@plt+0xf94>
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x1c(%esp),%edx
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   1800 <free@plt>
mov    %esi,%eax
shr    $0x1f,%eax
jmp    29dd <__sprintf_chk@plt+0xced>
lea    -0xb53c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    $0x1,%eax
jmp    29dd <__sprintf_chk@plt+0xced>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xb60c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x1c(%esp),%edx
jmp    2bdd <__sprintf_chk@plt+0xeed>
lea    -0xbaf6(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   1800 <free@plt>
mov    $0x1,%eax
jmp    29dd <__sprintf_chk@plt+0xced>
xor    %edx,%edx
jmp    2b53 <__sprintf_chk@plt+0xe63>
mov    %eax,%ecx
neg    %ecx
cmp    $0x3,%ecx
je     2ceb <__sprintf_chk@plt+0xffb>
jle    2cce <__sprintf_chk@plt+0xfde>
cmp    $0x8,%ecx
je     2cf3 <__sprintf_chk@plt+0x1003>
cmp    $0x16,%ecx
lea    -0xb632(%ebx),%eax
jne    2cd9 <__sprintf_chk@plt+0xfe9>
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
movl   $0x3,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x8(%esp)
lea    -0xb50c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x1c(%esp),%edx
jmp    2bc9 <__sprintf_chk@plt+0xed9>
cmp    $0x2,%ecx
lea    -0xb64b(%ebx),%eax
je     2c9f <__sprintf_chk@plt+0xfaf>
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
call   19a0 <strerror@plt>
mov    0x1c(%esp),%edx
jmp    2c9f <__sprintf_chk@plt+0xfaf>
lea    -0xb5d0(%ebx),%eax
jmp    2c9f <__sprintf_chk@plt+0xfaf>
lea    -0xb661(%ebx),%eax
jmp    2c9f <__sprintf_chk@plt+0xfaf>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x242f5,%ebx
sub    $0x3c,%esp
movl   $0x3a,0x4(%esp)
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   1a20 <strchr@plt>
test   %eax,%eax
je     2e4f <__sprintf_chk@plt+0x115f>
mov    $0x5,%ecx
mov    %eax,%ebp
lea    -0xb153(%ebx),%edi
sub    0x18(%esp),%ebp
repz cmpsb %es:(%edi),%ds:(%esi)
je     2dd8 <__sprintf_chk@plt+0x10e8>
lea    0x1(%eax),%edi
mov    %edi,(%esp)
call   1a30 <strlen@plt>
movl   $0x0,0x24(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    0x50(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     2e06 <__sprintf_chk@plt+0x1116>
mov    %edi,0x20(%esp)
mov    %eax,%esi
mov    %ebp,%edi
mov    0x18(%esp),%ebp
jmp    2d8e <__sprintf_chk@plt+0x109e>
mov    (%esi),%esi
test   %esi,%esi
je     2e00 <__sprintf_chk@plt+0x1110>
cmp    0x10(%esi),%edi
jne    2d88 <__sprintf_chk@plt+0x1098>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   1850 <memcmp@plt>
test   %eax,%eax
jne    2d88 <__sprintf_chk@plt+0x1098>
mov    0x20(%esp),%edi
mov    0x1c(%esp),%eax
test   %eax,%eax
je     2dc0 <__sprintf_chk@plt+0x10d0>
mov    %eax,0x8(%esi)
mov    0x24(%esp),%eax
mov    %eax,0x14(%esi)
test   %edi,%edi
je     2dce <__sprintf_chk@plt+0x10de>
mov    0x28(%esp),%eax
mov    %edi,0xc(%esi)
mov    %eax,0x18(%esi)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%eax
xor    %edi,%edi
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   1a30 <strlen@plt>
movl   $0x0,0x28(%esp)
mov    %eax,0x24(%esp)
jmp    2d68 <__sprintf_chk@plt+0x1078>
lea    0x0(%esi),%esi
mov    %edi,%ebp
mov    0x20(%esp),%edi
movl   $0x1c,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     2e78 <__sprintf_chk@plt+0x1188>
mov    0x2c(%esp),%eax
mov    %eax,(%esi)
mov    0x50(%esp),%eax
mov    %esi,(%eax)
mov    0x18(%esp),%eax
mov    %ebp,0x10(%esi)
movl   $0x0,0x8(%esi)
movl   $0x0,0xc(%esi)
mov    %eax,0x4(%esi)
movl   $0x0,0x14(%esi)
movl   $0x0,0x18(%esi)
jmp    2dae <__sprintf_chk@plt+0x10be>
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
lea    -0xb410(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
xor    %eax,%eax
jmp    2dd0 <__sprintf_chk@plt+0x10e0>
lea    -0xb14e(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    $0xfffffff4,%eax
jmp    2dd0 <__sprintf_chk@plt+0x10e0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x24155,%ebx
sub    $0x5c,%esp
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
mov    0x1c8(%ebx),%esi
test   %esi,%esi
je     33e0 <__sprintf_chk@plt+0x16f0>
mov    $0x9,%ecx
lea    -0xb13e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     3328 <__sprintf_chk@plt+0x1638>
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   15d40 <__sprintf_chk@plt+0x14050>
test   %eax,%eax
mov    %eax,0x34(%esp)
js     33a1 <__sprintf_chk@plt+0x16b1>
mov    0x1c8(%ebx),%eax
test   %eax,%eax
je     2f24 <__sprintf_chk@plt+0x1234>
lea    -0xb153(%ebx),%edi
mov    $0x5,%ecx
mov    %edi,0x30(%esp)
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     31a8 <__sprintf_chk@plt+0x14b8>
mov    0x44(%esp),%ebp
test   %ebp,%ebp
je     3086 <__sprintf_chk@plt+0x1396>
lea    -0x9ce9(%ebx),%eax
mov    %eax,0x38(%esp)
jmp    2f5a <__sprintf_chk@plt+0x126a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%ebp
je     3080 <__sprintf_chk@plt+0x1390>
mov    %ebp,(%esp)
call   15cc0 <__sprintf_chk@plt+0x13fd0>
mov    %ebp,(%esp)
mov    %eax,%edi
mov    %eax,0x2c(%esp)
call   15ce0 <__sprintf_chk@plt+0x13ff0>
mov    %eax,0x30(%esp)
mov    0x1c8(%ebx),%eax
test   %eax,%eax
je     2fc0 <__sprintf_chk@plt+0x12d0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    2f40 <__sprintf_chk@plt+0x1250>
movsbl 0x18c(%ebx),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xb106(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
jmp    2f40 <__sprintf_chk@plt+0x1250>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%esi
mov    $0x5,%ecx
lea    -0xb153(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     3028 <__sprintf_chk@plt+0x1338>
mov    0x2c(%esp),%esi
mov    $0x9,%ecx
lea    -0xb121(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     3028 <__sprintf_chk@plt+0x1338>
movzbl 0x18c(%ebx),%edx
test   %dl,%dl
jne    3150 <__sprintf_chk@plt+0x1460>
mov    0x30(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xb109(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
jmp    2f40 <__sprintf_chk@plt+0x1250>
lea    0x48(%esp),%eax
mov    0x30(%esp),%edx
mov    %eax,(%esp)
mov    0x2c(%esp),%eax
call   2d00 <__sprintf_chk@plt+0x1010>
test   %eax,%eax
mov    %eax,0x34(%esp)
jns    2f40 <__sprintf_chk@plt+0x1250>
jmp    305e <__sprintf_chk@plt+0x136e>
lea    0x0(%esi),%esi
mov    (%eax),%edx
mov    %eax,(%esp)
mov    %edx,0x48(%esp)
call   1800 <free@plt>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    3050 <__sprintf_chk@plt+0x1360>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   15d00 <__sprintf_chk@plt+0x14010>
mov    0x34(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x1c8(%ebx),%eax
test   %eax,%eax
jne    305e <__sprintf_chk@plt+0x136e>
mov    0x48(%esp),%esi
test   %esi,%esi
je     3066 <__sprintf_chk@plt+0x1376>
lea    -0xb0f5(%ebx),%edi
lea    -0xb0ef(%ebx),%ebp
jmp    30fd <__sprintf_chk@plt+0x140d>
movsbl 0x18c(%ebx),%ecx
mov    %edx,0x20(%esp)
mov    %ecx,0x24(%esp)
mov    0x18(%esi),%edx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    0x14(%esi),%eax
mov    %eax,0x14(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x10(%esp)
mov    0x10(%esi),%eax
mov    %edi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0xb0de(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
mov    0x48(%esp),%esi
test   %esi,%esi
je     3066 <__sprintf_chk@plt+0x1376>
mov    (%esi),%eax
mov    %eax,0x48(%esp)
mov    0x8(%esi),%eax
test   %eax,%eax
je     341c <__sprintf_chk@plt+0x172c>
mov    0xc(%esi),%edx
test   %edx,%edx
jne    30a0 <__sprintf_chk@plt+0x13b0>
movsbl 0x18c(%ebx),%edx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    0x14(%esi),%eax
mov    %eax,0x14(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x10(%esp)
mov    0x10(%esi),%eax
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
call   1b30 <__printf_chk@plt>
jmp    30e9 <__sprintf_chk@plt+0x13f9>
nop
mov    0x2c(%esp),%esi
mov    %edx,0x3c(%esp)
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    0x30(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x14(%esp)
mov    0x38(%esp),%ecx
movsbl %dl,%edx
mov    %edx,0x18(%esp)
mov    $0xf,%edx
sub    %eax,%edx
lea    -0xb101(%ebx),%eax
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
jmp    2f40 <__sprintf_chk@plt+0x1250>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
movl   $0x0,0x4c(%esp)
test   %eax,%eax
mov    %eax,0x38(%esp)
je     3436 <__sprintf_chk@plt+0x1746>
mov    %eax,%ebp
lea    0x4c(%esp),%eax
movl   $0x0,0x34(%esp)
mov    %eax,0x3c(%esp)
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   15cc0 <__sprintf_chk@plt+0x13fd0>
mov    %ebp,(%esp)
mov    %eax,%esi
mov    %eax,0x2c(%esp)
call   15ce0 <__sprintf_chk@plt+0x13ff0>
mov    0x30(%esp),%edi
mov    $0x5,%ecx
mov    %esi,0x2c(%esp)
repz cmpsb %es:(%edi),%ds:(%esi)
je     3212 <__sprintf_chk@plt+0x1522>
mov    0x2c(%esp),%esi
mov    $0x9,%ecx
lea    -0xb121(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    3230 <__sprintf_chk@plt+0x1540>
mov    0x3c(%esp),%ecx
mov    %eax,%edx
mov    0x2c(%esp),%eax
mov    %ecx,(%esp)
call   2d00 <__sprintf_chk@plt+0x1010>
test   %eax,%eax
mov    %eax,0x34(%esp)
js     3316 <__sprintf_chk@plt+0x1626>
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%ebp
jne    31d8 <__sprintf_chk@plt+0x14e8>
mov    0x4c(%esp),%esi
test   %esi,%esi
je     305e <__sprintf_chk@plt+0x136e>
lea    -0xb0ea(%ebx),%edi
jmp    32b9 <__sprintf_chk@plt+0x15c9>
lea    0x0(%esi),%esi
movsbl 0x18c(%ebx),%ecx
mov    %edx,0x1c(%esp)
mov    %ecx,0x20(%esp)
mov    0x18(%esi),%edx
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    0x14(%esi),%eax
mov    %eax,0x10(%esp)
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
mov    0x10(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb0d9(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
mov    0x4c(%esp),%esi
test   %esi,%esi
je     305e <__sprintf_chk@plt+0x136e>
mov    (%esi),%eax
mov    %eax,0x4c(%esp)
mov    0x8(%esi),%eax
test   %eax,%eax
je     335f <__sprintf_chk@plt+0x166f>
mov    0xc(%esi),%edx
test   %edx,%edx
jne    3260 <__sprintf_chk@plt+0x1570>
movsbl 0x18c(%ebx),%edx
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    0x14(%esi),%eax
mov    %eax,0x10(%esp)
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
mov    0x10(%esi),%eax
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   1b30 <__printf_chk@plt>
jmp    32a5 <__sprintf_chk@plt+0x15b5>
nop
mov    (%eax),%edx
mov    %eax,(%esp)
mov    %edx,0x4c(%esp)
call   1800 <free@plt>
mov    0x4c(%esp),%eax
test   %eax,%eax
jne    3308 <__sprintf_chk@plt+0x1618>
jmp    305e <__sprintf_chk@plt+0x136e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
movsbl 0x18c(%ebx),%esi
call   136f0 <__sprintf_chk@plt+0x11a00>
movl   $0x1,(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0xb106(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movsbl 0x18c(%ebx),%eax
mov    %eax,0x18(%esp)
mov    0xc(%esi),%eax
mov    %eax,0x14(%esp)
mov    0x18(%esi),%eax
mov    %eax,0x10(%esp)
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
mov    0x10(%esi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb118(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
jmp    32a5 <__sprintf_chk@plt+0x15b5>
mov    %eax,%edi
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %ebp,(%esp)
mov    %eax,%esi
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %esi,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb3ec(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %edi,%eax
jmp    3076 <__sprintf_chk@plt+0x1386>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
movsbl 0x18c(%ebx),%esi
call   136f0 <__sprintf_chk@plt+0x11a00>
movl   $0x1,(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0xc(%esp)
lea    -0xb135(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0xb12b(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
jmp    2ee5 <__sprintf_chk@plt+0x11f5>
movsbl 0x18c(%ebx),%eax
mov    %eax,0x1c(%esp)
mov    0xc(%esi),%eax
mov    %eax,0x18(%esp)
mov    0x18(%esi),%eax
jmp    3127 <__sprintf_chk@plt+0x1437>
movl   $0x0,0x34(%esp)
jmp    305e <__sprintf_chk@plt+0x136e>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x124c,%esp
mov    0x1264(%esp),%eax
lea    0x54(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x23b96,%ebx
movl   $0x0,0x4c(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,0x24(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x123c(%esp)
xor    %eax,%eax
movl   $0x0,0x28(%esp)
lea    -0x660(%ebx),%ebp
lea    -0xaec4(%ebx),%edi
mov    0x24(%esp),%eax
mov    %esi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1260(%esp),%eax
movl   $0x0,0x54(%esp)
mov    %eax,(%esp)
call   19f0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     34f0 <__sprintf_chk@plt+0x1800>
lea    -0x30(%eax),%edx
cmp    $0x40,%edx
ja     3660 <__sprintf_chk@plt+0x1970>
mov    -0xafc8(%ebx,%edx,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
nop
mov    -0x24(%ebx),%edi
mov    (%edi),%eax
cmp    %eax,0x1260(%esp)
jg     3688 <__sprintf_chk@plt+0x1998>
lea    -0xb0ab(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%esi
mov    0x123c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    39cf <__sprintf_chk@plt+0x1cdf>
add    $0x124c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movb   $0x0,0x18c(%ebx)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb153(%ebx),%eax
mov    %eax,0x1c8(%ebx)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb13e(%ebx),%eax
mov    %eax,0x1c8(%ebx)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb0b3(%ebx),%eax
mov    %eax,0x1c8(%ebx)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x28(%esp)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
lea    0x0(%esi,%eiz,1),%esi
mov    -0xc(%ebx),%eax
xor    %esi,%esi
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0xb3c4(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
jmp    3525 <__sprintf_chk@plt+0x1835>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb0bf(%ebx),%eax
mov    %eax,0x1c8(%ebx)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb0c6(%ebx),%eax
mov    %eax,0x1c8(%ebx)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xbb5a(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1980 <puts@plt>
jmp    3525 <__sprintf_chk@plt+0x1835>
lea    0x0(%esi),%esi
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x1c8(%ebx)
jmp    34a7 <__sprintf_chk@plt+0x17b7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
lea    -0xb864(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3525 <__sprintf_chk@plt+0x1835>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%ecx
test   %ecx,%ecx
je     3952 <__sprintf_chk@plt+0x1c62>
mov    0x2c(%esp),%ecx
lea    -0x9ce9(%ebx),%eax
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
test   %eax,%eax
je     3965 <__sprintf_chk@plt+0x1c75>
mov    0x28(%esp),%eax
lea    0x23c(%esp),%ebp
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x14(%esp)
lea    -0xb07a(%ebx),%eax
mov    %eax,0x10(%esp)
call   1730 <__snprintf_chk@plt>
lea    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   cd60 <__sprintf_chk@plt+0xb070>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     39af <__sprintf_chk@plt+0x1cbf>
mov    (%edi),%eax
cmp    %eax,0x1260(%esp)
mov    %eax,0x2c(%esp)
jle    39a8 <__sprintf_chk@plt+0x1cb8>
lea    -0xb031(%ebx),%eax
movl   $0x0,0x38(%esp)
mov    %eax,0x3c(%esp)
mov    %esi,0x30(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    0x2c(%esp),%ecx
mov    (%eax,%ecx,4),%ebp
mov    0x30(%esp),%eax
movl   $0x3,(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
call   1c60 <__xstat64@plt>
test   %eax,%eax
jne    377b <__sprintf_chk@plt+0x1a8b>
mov    0x64(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     38a0 <__sprintf_chk@plt+0x1bb0>
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
movl   $0x0,0x54(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   12fb0 <__sprintf_chk@plt+0x112c0>
test   %eax,%eax
mov    %eax,%esi
js     3918 <__sprintf_chk@plt+0x1c28>
mov    0x54(%esp),%eax
test   %eax,%eax
je     3874 <__sprintf_chk@plt+0x1b84>
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
lea    0x50(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   13c80 <__sprintf_chk@plt+0x11f90>
mov    %eax,%esi
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
test   %esi,%esi
js     3937 <__sprintf_chk@plt+0x1c47>
mov    0x50(%esp),%edi
test   %edi,%edi
je     3874 <__sprintf_chk@plt+0x1b84>
mov    %esi,0x28(%esp)
nop
mov    %edi,(%esp)
call   136a0 <__sprintf_chk@plt+0x119b0>
mov    %eax,%esi
call   2ea0 <__sprintf_chk@plt+0x11b0>
mov    %esi,(%esp)
mov    %eax,%ebp
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x50(%esp),%eax
test   %ebp,%ebp
cmovns 0x28(%esp),%ebp
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %ebp,0x28(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%edi
jne    37f8 <__sprintf_chk@plt+0x1b08>
mov    0x50(%esp),%eax
mov    0x28(%esp),%esi
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
test   %esi,%esi
js     3898 <__sprintf_chk@plt+0x1ba8>
addl   $0x1,0x2c(%esp)
mov    0x2c(%esp),%eax
cmp    0x1260(%esp),%eax
jne    3740 <__sprintf_chk@plt+0x1a50>
mov    0x38(%esp),%esi
shr    $0x1f,%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
jmp    3525 <__sprintf_chk@plt+0x1835>
mov    0x3c(%esp),%eax
mov    $0xfffffffe,%esi
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x38(%esp)
jmp    3846 <__sprintf_chk@plt+0x1b56>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   c650 <__sprintf_chk@plt+0xa960>
test   %al,%al
je     377b <__sprintf_chk@plt+0x1a8b>
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   126f0 <__sprintf_chk@plt+0x10a00>
test   %eax,%eax
mov    %eax,%esi
js     38f6 <__sprintf_chk@plt+0x1c06>
mov    0x54(%esp),%eax
call   2ea0 <__sprintf_chk@plt+0x11b0>
mov    %eax,%esi
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
jmp    3842 <__sprintf_chk@plt+0x1b52>
lea    -0xb068(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3842 <__sprintf_chk@plt+0x1b52>
lea    0x0(%esi),%esi
lea    -0xb04d(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3842 <__sprintf_chk@plt+0x1b52>
lea    -0xb01b(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3842 <__sprintf_chk@plt+0x1b52>
mov    0x2c(%esp),%edx
test   %edx,%edx
jne    3694 <__sprintf_chk@plt+0x19a4>
xor    %ebp,%ebp
jmp    36f4 <__sprintf_chk@plt+0x1a04>
lea    0xb6(%esp),%eax
mov    %eax,(%esp)
call   1880 <uname@plt>
lea    0x138(%esp),%ecx
mov    %ecx,0x28(%esp)
test   %eax,%eax
jns    36b3 <__sprintf_chk@plt+0x19c3>
lea    -0xb08e(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3525 <__sprintf_chk@plt+0x1835>
nop
xor    %esi,%esi
jmp    3863 <__sprintf_chk@plt+0x1b73>
lea    -0xbaf6(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3525 <__sprintf_chk@plt+0x1835>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x23616,%ebx
sub    $0x30,%esp
lea    -0xaeb5(%ebx),%esi
mov    %esi,(%esp)
call   1940 <getenv@plt>
test   %eax,%eax
je     3a80 <__sprintf_chk@plt+0x1d90>
mov    %eax,0xc(%esp)
lea    -0xaea4(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x2c(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1950 <__asprintf_chk@plt>
test   %eax,%eax
js     3a60 <__sprintf_chk@plt+0x1d70>
mov    0x2c(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1a40 <setenv@plt>
test   %eax,%eax
js     3aa0 <__sprintf_chk@plt+0x1db0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    -0xacd0(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
movl   $0x1,0x8(%esp)
call   1a40 <setenv@plt>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xaca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3a4b <__sprintf_chk@plt+0x1d5b>
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x23539,%ebx
sub    $0x14,%esp
mov    0x1f4(%ebx),%eax
test   %eax,%eax
jne    3af0 <__sprintf_chk@plt+0x1e00>
cmpl   $0x4,0x190(%ebx)
jg     3af0 <__sprintf_chk@plt+0x1e00>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    -0x18(%ebx),%esi
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   1760 <__vfprintf_chk@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   17b0 <fflush@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x234c5,%ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %esi,(%esp)
mov    %eax,%edi
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %eax,0x4(%esp)
lea    -0xae9e(%ebx),%eax
mov    %eax,(%esp)
call   3ac0 <__sprintf_chk@plt+0x1dd0>
mov    0x1f0(%ebx),%edx
xor    %eax,%eax
test   %edx,%edx
jne    3bfc <__sprintf_chk@plt+0x1f0c>
cmpl   $0x1,0x1d8(%ebx)
mov    %esi,(%esp)
sbb    %eax,%eax
not    %eax
and    $0x200,%eax
mov    %eax,0x4(%esp)
call   13830 <__sprintf_chk@plt+0x11b40>
cmp    $0xffffffef,%eax
mov    %eax,0xc(%esp)
je     3c08 <__sprintf_chk@plt+0x1f18>
mov    %esi,(%esp)
call   13590 <__sprintf_chk@plt+0x118a0>
test   %eax,%eax
mov    %eax,%edi
je     3c20 <__sprintf_chk@plt+0x1f30>
mov    %eax,%esi
jmp    3bca <__sprintf_chk@plt+0x1eda>
nop
mov    %ebp,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%esi
je     3bf0 <__sprintf_chk@plt+0x1f00>
mov    %esi,(%esp)
call   136a0 <__sprintf_chk@plt+0x119b0>
mov    %eax,(%esp)
mov    %eax,%ebp
call   157d0 <__sprintf_chk@plt+0x13ae0>
test   %eax,%eax
jne    3bb0 <__sprintf_chk@plt+0x1ec0>
mov    %ebp,%eax
call   3b30 <__sprintf_chk@plt+0x1e40>
jmp    3bb0 <__sprintf_chk@plt+0x1ec0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1e4(%ebx),%eax
test   %eax,%eax
jne    3c26 <__sprintf_chk@plt+0x1f36>
movl   $0x0,0xc(%esp)
jmp    3b9d <__sprintf_chk@plt+0x1ead>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
jmp    3bfc <__sprintf_chk@plt+0x1f0c>
lea    -0xae94(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3b9d <__sprintf_chk@plt+0x1ead>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x233a5,%ebx
sub    $0x4c,%esp
lea    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
movl   $0x0,0x38(%esp)
mov    %edx,0x20(%esp)
call   12fb0 <__sprintf_chk@plt+0x112c0>
test   %eax,%eax
mov    %eax,%edi
js     3e78 <__sprintf_chk@plt+0x2188>
mov    0x38(%esp),%esi
test   %esi,%esi
je     3dfb <__sprintf_chk@plt+0x210b>
mov    0x1d4(%ebx),%ebp
mov    $0x2,%eax
test   %ebp,%ebp
je     3f30 <__sprintf_chk@plt+0x2240>
mov    0x1d0(%ebx),%ecx
test   %ecx,%ecx
je     3f18 <__sprintf_chk@plt+0x2228>
or     $0x1,%eax
mov    0x1e0(%ebx),%ecx
mov    %eax,%edx
mov    0x1ec(%ebx),%ebp
or     $0x4,%edx
test   %ecx,%ecx
mov    0x1f0(%ebx),%ecx
cmovne %edx,%eax
mov    %eax,%edx
or     $0x8,%edx
test   %ebp,%ebp
mov    0x1f4(%ebx),%ebp
cmovne %edx,%eax
mov    %eax,%edx
or     $0x10,%edx
test   %ecx,%ecx
cmovne %edx,%eax
test   %ebp,%ebp
lea    -0x23080(%ebx),%ecx
mov    %ecx,0x20(%esp)
je     3f00 <__sprintf_chk@plt+0x2210>
mov    0x1dc(%ebx),%edx
mov    %eax,%ecx
or     $0x60000,%eax
mov    0x1e4(%ebx),%ebp
or     $0x40000,%ecx
test   %edx,%edx
cmove  %ecx,%eax
mov    %eax,%ecx
or     $0x20,%eax
test   %ebp,%ebp
cmove  %ecx,%eax
mov    %eax,0x24(%esp)
lea    -0xac18(%ebx),%eax
mov    %eax,0x28(%esp)
jmp    3d78 <__sprintf_chk@plt+0x2088>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %eax,(%esp)
call   1980 <puts@plt>
test   %edi,%edi
js     3dc2 <__sprintf_chk@plt+0x20d2>
xor    %edi,%edi
mov    %ebp,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x38(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%esi
je     3e80 <__sprintf_chk@plt+0x2190>
mov    %esi,(%esp)
call   136a0 <__sprintf_chk@plt+0x119b0>
mov    %eax,%ebp
mov    0x1e8(%ebx),%eax
test   %eax,%eax
jne    3d40 <__sprintf_chk@plt+0x2050>
mov    0x20(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x14(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   14bc0 <__sprintf_chk@plt+0x12ed0>
mov    %eax,%edi
test   %edi,%edi
jns    3d54 <__sprintf_chk@plt+0x2064>
cmp    $0xffffffef,%edi
je     3ed8 <__sprintf_chk@plt+0x21e8>
cmp    $0xfffffffe,%edi
jne    3e98 <__sprintf_chk@plt+0x21a8>
mov    %ebp,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xabe4(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3d56 <__sprintf_chk@plt+0x2066>
lea    -0xac74(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x20(%esp),%edx
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
call   12530 <__sprintf_chk@plt+0x10840>
test   %eax,%eax
js     3e78 <__sprintf_chk@plt+0x2188>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   14870 <__sprintf_chk@plt+0x12b80>
mov    %eax,%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
test   %esi,%esi
mov    0x20(%esp),%edx
jne    3f74 <__sprintf_chk@plt+0x2284>
mov    0x1e4(%ebx),%eax
test   %eax,%eax
jne    3f4e <__sprintf_chk@plt+0x225e>
lea    -0x6794(%ebx),%eax
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   3ac0 <__sprintf_chk@plt+0x1dd0>
xor    %eax,%eax
lea    0x0(%esi),%esi
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
add    $0x4c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %edi,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    0x2c(%esp),%ecx
movl   $0x3,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0xae77(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3d56 <__sprintf_chk@plt+0x2066>
nop
mov    %ebp,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    3d56 <__sprintf_chk@plt+0x2066>
lea    0x0(%esi),%esi
cmpl   $0x5,0x190(%ebx)
mov    $0x0,%edx
cmovge %ecx,%edx
mov    %edx,0x20(%esp)
jmp    3d06 <__sprintf_chk@plt+0x2016>
mov    0x1d8(%ebx),%edx
test   %edx,%edx
je     3cbe <__sprintf_chk@plt+0x1fce>
jmp    3cbb <__sprintf_chk@plt+0x1fcb>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x1d8(%ebx)
mov    0x1d0(%ebx),%ecx
sbb    %eax,%eax
not    %eax
and    $0x2,%eax
test   %ecx,%ecx
jne    3cbb <__sprintf_chk@plt+0x1fcb>
jmp    3f18 <__sprintf_chk@plt+0x2228>
mov    %edx,0x8(%esp)
lea    -0xac40(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    $0xfffffffe,%eax
jmp    3e78 <__sprintf_chk@plt+0x2188>
mov    %edx,0x8(%esp)
lea    -0xb031(%ebx),%eax
jmp    3f58 <__sprintf_chk@plt+0x2268>
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x23072,%ebx
cmpb   $0x0,0x24(%esp)
mov    %esi,(%esp)
jne    3fd8 <__sprintf_chk@plt+0x22e8>
call   136f0 <__sprintf_chk@plt+0x11a00>
mov    %esi,(%esp)
test   %eax,%eax
je     4008 <__sprintf_chk@plt+0x2318>
call   136f0 <__sprintf_chk@plt+0x11a00>
mov    0x28(%esp),%edx
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0xae4d(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
call   14000 <__sprintf_chk@plt+0x12310>
mov    0x28(%esp),%ecx
movl   $0x1,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0xae5c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   14870 <__sprintf_chk@plt+0x12b80>
test   %eax,%eax
nop
jne    3fd1 <__sprintf_chk@plt+0x22e1>
mov    %esi,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x6794(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
jmp    3fd1 <__sprintf_chk@plt+0x22e1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x22fb3,%ebx
sub    $0x4c,%esp
mov    %eax,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
mov    %eax,0x1c(%esp)
mov    0x1e0(%ebx),%eax
test   %eax,%eax
je     4240 <__sprintf_chk@plt+0x2550>
mov    0x1ec(%ebx),%eax
xor    %ebp,%ebp
test   %eax,%eax
je     42a8 <__sprintf_chk@plt+0x25b8>
mov    0x3c(%esp),%eax
xor    %edx,%edx
call   4410 <__sprintf_chk@plt+0x2720>
mov    %edi,%eax
test   %al,%al
je     40af <__sprintf_chk@plt+0x23bf>
mov    0x1cc(%ebx),%edx
test   %edx,%edx
jne    4280 <__sprintf_chk@plt+0x2590>
mov    0x1ec(%ebx),%ecx
test   %ecx,%ecx
je     41f0 <__sprintf_chk@plt+0x2500>
test   %ebp,%ebp
je     42e8 <__sprintf_chk@plt+0x25f8>
mov    %esi,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
call   1ac0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebp
je     43fa <__sprintf_chk@plt+0x270a>
mov    %eax,(%esp)
lea    -0xae29(%ebx),%esi
call   1a30 <strlen@plt>
mov    %esi,0x28(%esp)
mov    %eax,%edi
jmp    4172 <__sprintf_chk@plt+0x2482>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
mov    %edi,%edx
sub    %ebp,%ecx
add    $0xd,%eax
sub    $0xd,%edi
sub    %ecx,%edx
mov    %eax,0x24(%esp)
lea    0x1(%edi),%eax
sub    $0xd,%edx
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x20(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     4230 <__sprintf_chk@plt+0x2540>
mov    0x1c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   1810 <memcpy@plt>
mov    0x1c(%esp),%eax
mov    0x20(%esp),%ecx
mov    0x24(%esp),%edx
add    %esi,%eax
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
movb   $0x0,(%esi,%edi,1)
mov    %ebp,(%esp)
mov    %esi,%ebp
call   1800 <free@plt>
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   1740 <strstr@plt>
test   %eax,%eax
jne    4100 <__sprintf_chk@plt+0x2410>
lea    -0x9db4(%ebx),%eax
xor    %edi,%edi
lea    -0xad69(%ebx),%esi
mov    %eax,(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
call   3ac0 <__sprintf_chk@plt+0x1dd0>
mov    0x1f0(%ebx),%eax
test   %eax,%eax
je     42f8 <__sprintf_chk@plt+0x2608>
mov    %ebp,(%esp)
call   1800 <free@plt>
test   %edi,%edi
js     41cd <__sprintf_chk@plt+0x24dd>
mov    0x38(%esp),%eax
xor    %edx,%edx
call   4410 <__sprintf_chk@plt+0x2720>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    %edi,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
test   %ebp,%ebp
jne    40c5 <__sprintf_chk@plt+0x23d5>
mov    %esi,(%esp)
call   157d0 <__sprintf_chk@plt+0x13ae0>
test   %eax,%eax
jle    42e8 <__sprintf_chk@plt+0x25f8>
mov    0x1c(%esp),%eax
mov    $0xfffffff0,%edi
mov    %eax,0x8(%esp)
lea    -0xae3f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    41cd <__sprintf_chk@plt+0x24dd>
nop
mov    %ebp,(%esp)
mov    $0xfffffff4,%edi
call   1800 <free@plt>
jmp    41cd <__sprintf_chk@plt+0x24dd>
nop
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   140b0 <__sprintf_chk@plt+0x123c0>
test   %eax,%eax
mov    %eax,%ebp
js     437b <__sprintf_chk@plt+0x268b>
mov    %esi,(%esp)
call   14530 <__sprintf_chk@plt+0x12840>
test   %eax,%eax
mov    %eax,%ebp
jne    4090 <__sprintf_chk@plt+0x23a0>
jmp    4080 <__sprintf_chk@plt+0x2390>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   13590 <__sprintf_chk@plt+0x118a0>
mov    $0x1,%edx
call   4410 <__sprintf_chk@plt+0x2720>
test   %eax,%eax
mov    %eax,%edi
jns    40af <__sprintf_chk@plt+0x23bf>
jmp    41cd <__sprintf_chk@plt+0x24dd>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   14870 <__sprintf_chk@plt+0x12b80>
test   %eax,%eax
js     43ae <__sprintf_chk@plt+0x26be>
jne    4090 <__sprintf_chk@plt+0x23a0>
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xb7c5(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    $0xfffffffe,%edi
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    41cd <__sprintf_chk@plt+0x24dd>
mov    %esi,%eax
call   3b30 <__sprintf_chk@plt+0x1e40>
mov    %eax,%edi
jmp    41be <__sprintf_chk@plt+0x24ce>
xchg   %ax,%ax
mov    0x2c(%esp),%eax
lea    -0xae1b(%ebx),%edx
mov    %edx,(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x4(%esp)
call   1a40 <setenv@plt>
mov    %ebp,(%esp)
call   1990 <system@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%edi
call   1720 <unsetenv@plt>
cmp    $0xffffffff,%edi
je     43d1 <__sprintf_chk@plt+0x26e1>
mov    %edi,%eax
movzbl %ah,%edx
test   %edx,%edx
je     41b6 <__sprintf_chk@plt+0x24c6>
mov    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0xc(%esp)
lea    -0xab6c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x1c(%esp),%edx
mov    %edx,%edi
neg    %edi
jmp    41b6 <__sprintf_chk@plt+0x24c6>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xab90(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %ebp,%eax
jmp    41e7 <__sprintf_chk@plt+0x24f7>
mov    0x1e4(%ebx),%esi
xor    %edi,%edi
test   %esi,%esi
je     41cd <__sprintf_chk@plt+0x24dd>
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0xae94(%ebx),%eax
jmp    42cc <__sprintf_chk@plt+0x25dc>
mov    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
lea    -0xab6c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    41b6 <__sprintf_chk@plt+0x24c6>
mov    $0xfffffff4,%edi
jmp    41cd <__sprintf_chk@plt+0x24dd>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x22be7,%ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
mov    %eax,0x8(%esp)
mov    %dl,0xf(%esp)
call   e380 <__sprintf_chk@plt+0xc690>
test   %eax,%eax
mov    %eax,%esi
jne    4456 <__sprintf_chk@plt+0x2766>
jmp    4490 <__sprintf_chk@plt+0x27a0>
lea    0x0(%esi),%esi
mov    0x8(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e330 <__sprintf_chk@plt+0xc640>
test   %eax,%eax
mov    %eax,%esi
je     4490 <__sprintf_chk@plt+0x27a0>
mov    %esi,(%esp)
call   136a0 <__sprintf_chk@plt+0x119b0>
xor    %edx,%edx
mov    %eax,%ebp
call   4040 <__sprintf_chk@plt+0x2350>
mov    %ebp,(%esp)
mov    %eax,%edi
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    %edi,%eax
shr    $0x1f,%eax
test   %al,%al
je     4440 <__sprintf_chk@plt+0x2750>
cmpb   $0x0,0xf(%esp)
je     4440 <__sprintf_chk@plt+0x2750>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x22b57,%ebx
sub    $0x121c,%esp
mov    0x1234(%esp),%eax
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x120c(%esp)
xor    %eax,%eax
lea    -0xaeb5(%ebx),%eax
mov    %eax,(%esp)
call   1940 <getenv@plt>
test   %eax,%eax
mov    %eax,%edx
je     4cdc <__sprintf_chk@plt+0x2fec>
movzbl (%eax),%eax
test   %al,%al
je     4d08 <__sprintf_chk@plt+0x3018>
mov    %edx,%esi
xor    %ecx,%ecx
xchg   %ax,%ax
cmp    $0x20,%al
sete   %al
add    $0x1,%esi
movzbl %al,%eax
add    %eax,%ecx
movzbl (%esi),%eax
test   %al,%al
jne    44f8 <__sprintf_chk@plt+0x2808>
sub    %edx,%esi
mov    0x1230(%esp),%eax
mov    %edx,0x24(%esp)
lea    0x3(%ecx,%eax,1),%edi
lea    (%edi,%esi,1),%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     4ce8 <__sprintf_chk@plt+0x2ff8>
mov    0x28(%esp),%eax
lea    0x0(%ebp,%edi,4),%edi
mov    0x24(%esp),%edx
mov    (%eax),%eax
mov    %eax,0x0(%ebp)
lea    0x1(%esi),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   1810 <memcpy@plt>
movzbl (%edi),%edx
lea    (%edi,%esi,1),%eax
mov    %eax,%esi
test   %dl,%dl
je     4d11 <__sprintf_chk@plt+0x3021>
mov    %ebp,0x30(%esp)
mov    %edi,%ecx
xor    %eax,%eax
movl   $0x1,0x24(%esp)
mov    %esi,%ebp
jmp    458d <__sprintf_chk@plt+0x289d>
lea    0x0(%esi),%esi
mov    %ecx,%edx
add    $0x1,%ecx
movzbl 0x1(%edx),%edx
test   %dl,%dl
je     45ff <__sprintf_chk@plt+0x290f>
test   %eax,%eax
je     4700 <__sprintf_chk@plt+0x2a10>
cmp    (%eax),%dl
jne    4580 <__sprintf_chk@plt+0x2890>
cmp    %edi,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
je     4a68 <__sprintf_chk@plt+0x2d78>
lea    -0x1(%ecx),%esi
cmp    %eax,%esi
mov    %esi,%edx
jbe    45ca <__sprintf_chk@plt+0x28da>
mov    %esi,0x2c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%eax),%edx
add    $0x1,%eax
mov    %dl,-0x1(%eax)
cmp    %eax,%esi
jne    45b8 <__sprintf_chk@plt+0x28c8>
mov    0x2c(%esp),%edx
lea    -0x2(%ebp),%eax
cmp    %eax,%esi
jae    45ea <__sprintf_chk@plt+0x28fa>
mov    %ecx,0x2c(%esp)
lea    0x0(%esi),%esi
movzbl 0x2(%edx),%ecx
add    $0x1,%edx
mov    %cl,-0x1(%edx)
cmp    %edx,%eax
jne    45d8 <__sprintf_chk@plt+0x28e8>
mov    0x2c(%esp),%ecx
lea    -0x2(%ecx),%edx
mov    %esi,%ecx
movb   $0x0,-0x2(%ebp)
movzbl 0x1(%edx),%edx
mov    %eax,%ebp
xor    %eax,%eax
test   %dl,%dl
jne    458d <__sprintf_chk@plt+0x289d>
cmp    %ecx,%edi
mov    0x30(%esp),%ebp
jae    4728 <__sprintf_chk@plt+0x2a38>
mov    0x24(%esp),%esi
addl   $0x1,0x24(%esp)
mov    %esi,%eax
shl    $0x2,%eax
mov    %edi,0x0(%ebp,%esi,4)
add    $0x4,%eax
mov    0x1230(%esp),%edi
add    %ebp,%eax
mov    %eax,(%esp)
lea    -0x4(,%edi,4),%ecx
mov    0x28(%esp),%edi
mov    %ecx,0x8(%esp)
lea    0x4(%edi),%edx
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x24(%esp),%eax
add    0x1230(%esp),%eax
movl   $0x0,0x0(%ebp,%eax,4)
sub    $0x1,%eax
mov    %eax,0x1230(%esp)
lea    0x54(%esp),%eax
movl   $0x0,0x40(%esp)
lea    -0x580(%ebx),%edi
movl   $0x0,0x3c(%esp)
lea    -0xa0a4(%ebx),%esi
movl   $0x0,0x48(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,0x24(%esp)
mov    0x24(%esp),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x1230(%esp),%eax
movl   $0x0,0x54(%esp)
mov    %eax,(%esp)
call   19f0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     4734 <__sprintf_chk@plt+0x2a44>
cmp    $0x76,%eax
ja     4a20 <__sprintf_chk@plt+0x2d30>
mov    -0xa280(%ebx,%eax,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
lea    0x0(%esi),%esi
cmp    $0x20,%dl
je     4a48 <__sprintf_chk@plt+0x2d58>
cmp    $0x27,%dl
jne    4718 <__sprintf_chk@plt+0x2a28>
mov    %ecx,%eax
jmp    4580 <__sprintf_chk@plt+0x2890>
lea    0x0(%esi),%esi
cmp    $0x22,%dl
jne    4580 <__sprintf_chk@plt+0x2890>
mov    %ecx,%eax
jmp    4580 <__sprintf_chk@plt+0x2890>
mov    0x24(%esp),%eax
shl    $0x2,%eax
jmp    4620 <__sprintf_chk@plt+0x2930>
mov    -0x24(%ebx),%eax
mov    0x1f8(%ebx),%edx
mov    (%eax),%edi
mov    0x1230(%esp),%eax
sub    %edi,%eax
mov    %eax,0x34(%esp)
xor    %eax,%eax
test   %edx,%edx
setne  %al
mov    %eax,(%esp)
call   a960 <__sprintf_chk@plt+0x8c70>
mov    0x3c(%esp),%ecx
test   %ecx,%ecx
jne    4a8c <__sprintf_chk@plt+0x2d9c>
mov    0x34(%esp),%eax
test   %eax,%eax
jne    4a8c <__sprintf_chk@plt+0x2d9c>
lea    -0xadff(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%esi
call   a9b0 <__sprintf_chk@plt+0x8cc0>
cmp    %ebp,0x28(%esp)
je     47a8 <__sprintf_chk@plt+0x2ab8>
mov    %ebp,(%esp)
call   1800 <free@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x120c(%esp),%edi
xor    %gs:0x14,%edi
mov    %esi,%eax
jne    527e <__sprintf_chk@plt+0x358e>
add    $0x121c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x1,0x3c(%esp)
jmp    46b8 <__sprintf_chk@plt+0x29c8>
lea    0x0(%esi),%esi
movl   $0x1,0x48(%esp)
jmp    46b8 <__sprintf_chk@plt+0x29c8>
lea    0x0(%esi),%esi
lea    -0xae05(%ebx),%eax
call   39e0 <__sprintf_chk@plt+0x1cf0>
movl   $0x0,0x190(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
lea    0x0(%esi),%esi
movl   $0x1,0x1f0(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
movl   $0x1,0x1e0(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
mov    0x34(%esp),%eax
lea    0x8(,%eax,4),%ecx
mov    0x2c(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %ecx,0x4c(%esp)
mov    %eax,(%esp)
call   1960 <realloc@plt>
mov    0x4c(%esp),%ecx
test   %eax,%eax
mov    %eax,%edx
je     51f1 <__sprintf_chk@plt+0x3501>
mov    -0x4(%ebx),%eax
addl   $0x1,0x34(%esp)
mov    %edx,0x2c(%esp)
mov    (%eax),%eax
movl   $0x0,-0x4(%edx,%ecx,1)
mov    %eax,-0x8(%edx,%ecx,1)
lea    -0xae0b(%ebx),%eax
call   39e0 <__sprintf_chk@plt+0x1cf0>
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
call   39e0 <__sprintf_chk@plt+0x1cf0>
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x38(%esp)
jmp    46b8 <__sprintf_chk@plt+0x29c8>
lea    0x0(%esi,%eiz,1),%esi
mov    -0xc(%ebx),%eax
xor    %esi,%esi
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    %eax,0x14(%esp)
mov    %eax,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0xab18(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
jmp    4795 <__sprintf_chk@plt+0x2aa5>
lea    0x0(%esi),%esi
movl   $0x1,0x1d8(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
movl   $0x1,0x1dc(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
movl   $0x4,0x194(%ebx)
00
movl   $0x1,0x44(%esp)
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
lea    -0xbb5a(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1980 <puts@plt>
jmp    4795 <__sprintf_chk@plt+0x2aa5>
lea    0x0(%esi),%esi
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x30(%esp)
jmp    46b8 <__sprintf_chk@plt+0x29c8>
lea    0x0(%esi,%eiz,1),%esi
lea    -0xae02(%ebx),%eax
call   39e0 <__sprintf_chk@plt+0x1cf0>
addl   $0x1,0x190(%ebx)
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
lea    -0xae08(%ebx),%eax
call   39e0 <__sprintf_chk@plt+0x1cf0>
movl   $0x1,0x1f8(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
lea    0x0(%esi),%esi
movl   $0x1,0x1e8(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
movl   $0x1,0x1ec(%ebx)
00
movl   $0x1,0x1f0(%ebx)
00
movl   $0x1,0x1f4(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x1cc(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
movl   $0x1,0x40(%esp)
jmp    46b8 <__sprintf_chk@plt+0x29c8>
lea    0x0(%esi),%esi
movl   $0x1,0x1e4(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
movl   $0x1,0x1d4(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
movl   $0x1,0x1d0(%ebx)
00
jmp    46b8 <__sprintf_chk@plt+0x29c8>
nop
mov    %eax,0x8(%esp)
lea    -0xb864(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    4795 <__sprintf_chk@plt+0x2aa5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%edx
mov    0x30(%esp),%esi
addl   $0x1,0x24(%esp)
mov    %edi,(%esi,%edx,4)
lea    0x1(%ecx),%edi
mov    %ecx,%edx
movb   $0x0,(%ecx)
mov    %edi,%ecx
jmp    4585 <__sprintf_chk@plt+0x2895>
nop
mov    0x30(%esp),%edi
add    $0x1,%eax
mov    %ecx,%edx
mov    0x24(%esp),%esi
addl   $0x1,0x24(%esp)
mov    %eax,(%edi,%esi,4)
lea    0x1(%ecx),%edi
xor    %eax,%eax
movb   $0x0,(%ecx)
mov    %edi,%ecx
jmp    4585 <__sprintf_chk@plt+0x2895>
mov    0x30(%esp),%eax
test   %eax,%eax
je     4dfb <__sprintf_chk@plt+0x310b>
mov    0x38(%esp),%esi
lea    -0x9ce9(%ebx),%eax
test   %esi,%esi
cmovne %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
test   %eax,%eax
je     510f <__sprintf_chk@plt+0x341f>
mov    0x30(%esp),%eax
lea    0x20c(%esp),%esi
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x38(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
lea    -0xb07a(%ebx),%eax
mov    %eax,0x10(%esp)
call   1730 <__snprintf_chk@plt>
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   cd60 <__sprintf_chk@plt+0xb070>
test   %eax,%eax
mov    %eax,0x30(%esp)
je     5002 <__sprintf_chk@plt+0x3312>
mov    0x190(%ebx),%eax
mov    0x30(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   ab70 <__sprintf_chk@plt+0x8e80>
mov    %esi,(%esp)
call   de40 <__sprintf_chk@plt+0xc150>
mov    0x3c(%esp),%eax
test   %eax,%eax
jne    4e1d <__sprintf_chk@plt+0x312d>
lea    0x0(%ebp,%edi,4),%eax
mov    0x40(%esp),%edi
mov    %eax,0x38(%esp)
test   %edi,%edi
jne    4d23 <__sprintf_chk@plt+0x3033>
mov    0x48(%esp),%esi
test   %esi,%esi
jne    5022 <__sprintf_chk@plt+0x3332>
mov    0x44(%esp),%edx
test   %edx,%edx
jne    4fb9 <__sprintf_chk@plt+0x32c9>
xor    %eax,%eax
mov    $0x1,%edi
cmpl   $0x1,0x34(%esp)
movl   $0x0,0x3c(%esp)
jle    528c <__sprintf_chk@plt+0x359c>
mov    %ebp,0x48(%esp)
mov    %eax,%esi
mov    %edi,%ebp
jmp    4bc6 <__sprintf_chk@plt+0x2ed6>
lea    (%edx,%esi,1),%eax
add    %edi,%esi
mov    %edx,0x24(%esp)
mov    0x38(%esp),%edx
lea    0x1(%edi),%ecx
mov    (%edx,%ebp,4),%edx
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x24(%esp),%edx
add    $0x1,%ebp
cmp    0x34(%esp),%ebp
je     51cd <__sprintf_chk@plt+0x34dd>
mov    %edx,0x3c(%esp)
mov    0x38(%esp),%eax
mov    (%eax,%ebp,4),%edx
mov    %edx,(%esp)
mov    %edx,0x24(%esp)
call   1a30 <strlen@plt>
mov    0x24(%esp),%edx
movl   $0x3d,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,%edi
call   1a20 <strchr@plt>
test   %eax,%eax
je     4e0e <__sprintf_chk@plt+0x311e>
lea    0x1(%eax),%ecx
movzbl 0x1(%eax),%eax
mov    %ecx,0x24(%esp)
cmp    $0x27,%al
je     4df4 <__sprintf_chk@plt+0x3104>
cmp    $0x22,%al
je     4df4 <__sprintf_chk@plt+0x3104>
mov    %ecx,(%esp)
movl   $0x20,0x4(%esp)
call   1a20 <strchr@plt>
cmp    $0x1,%eax
sbb    %ecx,%ecx
not    %ecx
and    $0x2,%ecx
lea    0x2(%esi,%edi,1),%eax
add    %ecx,%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %ecx,0x40(%esp)
mov    %eax,(%esp)
call   1960 <realloc@plt>
mov    0x40(%esp),%ecx
test   %eax,%eax
mov    %eax,%edx
je     5190 <__sprintf_chk@plt+0x34a0>
test   %esi,%esi
je     4c5f <__sprintf_chk@plt+0x2f6f>
movb   $0x20,(%eax,%esi,1)
add    $0x1,%esi
test   %ecx,%ecx
je     4b8e <__sprintf_chk@plt+0x2e9e>
mov    0x38(%esp),%eax
mov    0x24(%esp),%ecx
mov    %edx,0x44(%esp)
mov    (%eax,%ebp,4),%eax
sub    %eax,%ecx
mov    %eax,0x3c(%esp)
lea    (%edx,%esi,1),%eax
mov    0x3c(%esp),%edx
mov    %ecx,0x8(%esp)
sub    %ecx,%edi
mov    %eax,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x40(%esp),%ecx
mov    0x44(%esp),%edx
add    %ecx,%esi
mov    0x24(%esp),%ecx
movb   $0x22,(%edx,%esi,1)
add    $0x1,%esi
lea    (%edx,%esi,1),%eax
mov    %edi,0x8(%esp)
add    %esi,%edi
mov    %ecx,0x4(%esp)
lea    0x1(%edi),%esi
mov    %eax,(%esp)
mov    %edx,0x3c(%esp)
call   1810 <memcpy@plt>
mov    0x3c(%esp),%edx
movb   $0x22,(%edx,%edi,1)
movb   $0x0,0x1(%edx,%edi,1)
jmp    4bb5 <__sprintf_chk@plt+0x2ec5>
mov    0x28(%esp),%ebp
test   %ebp,%ebp
jne    4664 <__sprintf_chk@plt+0x2974>
lea    -0xab48(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    47b4 <__sprintf_chk@plt+0x2ac4>
xor    %esi,%esi
xor    %ecx,%ecx
jmp    450e <__sprintf_chk@plt+0x281e>
mov    $0x4,%eax
movl   $0x1,0x24(%esp)
jmp    4620 <__sprintf_chk@plt+0x2930>
mov    (%eax),%esi
mov    0x24(%esp),%eax
movl   $0x0,0x50(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   126f0 <__sprintf_chk@plt+0x10a00>
test   %eax,%eax
js     5211 <__sprintf_chk@plt+0x3521>
lea    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   16070 <__sprintf_chk@plt+0x14380>
test   %eax,%eax
js     5237 <__sprintf_chk@plt+0x3547>
mov    0x50(%esp),%esi
test   %esi,%esi
je     5277 <__sprintf_chk@plt+0x3587>
lea    -0xadda(%ebx),%eax
mov    %ebp,0x24(%esp)
mov    %eax,%ebp
mov    %esi,(%esp)
call   15ff0 <__sprintf_chk@plt+0x14300>
mov    %esi,(%esp)
mov    %eax,%edi
call   16010 <__sprintf_chk@plt+0x14320>
mov    %edi,0x10(%esp)
mov    %ebp,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   1b30 <__printf_chk@plt>
mov    0x50(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%esi
jne    4d81 <__sprintf_chk@plt+0x3091>
mov    0x24(%esp),%ebp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
xor    %esi,%esi
call   16030 <__sprintf_chk@plt+0x14340>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
jmp    4795 <__sprintf_chk@plt+0x2aa5>
xor    %ecx,%ecx
jmp    4c2c <__sprintf_chk@plt+0x2f3c>
mov    0x38(%esp),%eax
test   %eax,%eax
jne    4a98 <__sprintf_chk@plt+0x2da8>
xor    %esi,%esi
jmp    4af8 <__sprintf_chk@plt+0x2e08>
movl   $0x0,0x24(%esp)
xor    %ecx,%ecx
jmp    4c2c <__sprintf_chk@plt+0x2f3c>
lea    -0xad5e(%ebx),%eax
lea    -0x16a10(%ebx),%edx
mov    %eax,0x54(%esp)
lea    -0xad78(%ebx),%eax
mov    0x24(%esp),%edi
mov    %eax,0x5c(%esp)
lea    -0x169f0(%ebx),%eax
lea    -0xaea4(%ebx),%esi
mov    %esi,0x24(%esp)
mov    %edx,0x58(%esp)
mov    %ebp,0x38(%esp)
mov    %eax,0x60(%esp)
lea    -0xad69(%ebx),%eax
mov    %eax,0x64(%esp)
lea    -0x169d0(%ebx),%eax
mov    %eax,0x68(%esp)
lea    -0xad90(%ebx),%eax
mov    %eax,0x6c(%esp)
lea    -0x169b0(%ebx),%eax
mov    %eax,0x70(%esp)
lea    -0xade2(%ebx),%eax
mov    %eax,0x74(%esp)
lea    -0x16990(%ebx),%eax
mov    %eax,0x78(%esp)
lea    -0x99f4(%ebx),%eax
mov    %eax,0x7c(%esp)
lea    -0x16970(%ebx),%eax
mov    %eax,0x80(%esp)
lea    0x84(%esp),%eax
mov    %eax,0x34(%esp)
mov    %edx,%eax
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   *%eax
test   %eax,%eax
mov    %eax,%esi
je     4f3a <__sprintf_chk@plt+0x324a>
mov    %esi,(%esp)
call   10740 <__sprintf_chk@plt+0xea50>
mov    %esi,(%esp)
test   %al,%al
je     4f35 <__sprintf_chk@plt+0x3245>
call   106b0 <__sprintf_chk@plt+0xe9c0>
mov    %eax,0xc(%esp)
mov    (%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
mov    %esi,(%esp)
call   106e0 <__sprintf_chk@plt+0xe9f0>
mov    %eax,%ebp
mov    -0x18(%ebx),%eax
test   %ebp,%ebp
mov    (%eax),%eax
mov    %eax,0x4(%esp)
je     4f4b <__sprintf_chk@plt+0x325b>
movl   $0x20,(%esp)
call   18a0 <_IO_putc@plt>
mov    %ebp,(%esp)
call   1980 <puts@plt>
mov    %esi,(%esp)
call   10740 <__sprintf_chk@plt+0xea50>
mov    %esi,(%esp)
test   %al,%al
jne    4ed5 <__sprintf_chk@plt+0x31e5>
call   107a0 <__sprintf_chk@plt+0xeab0>
add    $0x8,%edi
cmp    0x34(%esp),%edi
je     4f5c <__sprintf_chk@plt+0x326c>
mov    0x4(%edi),%eax
jmp    4eb7 <__sprintf_chk@plt+0x31c7>
movl   $0xa,(%esp)
call   18a0 <_IO_putc@plt>
jmp    4ec6 <__sprintf_chk@plt+0x31d6>
lea    -0xa310(%ebx),%eax
mov    0x38(%esp),%ebp
xor    %esi,%esi
mov    %eax,(%esp)
call   1980 <puts@plt>
mov    -0x18(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   17b0 <fflush@plt>
mov    0x30(%esp),%edi
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   dfa0 <__sprintf_chk@plt+0xc2b0>
movl   $0x1,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   dfa0 <__sprintf_chk@plt+0xc2b0>
jmp    4de3 <__sprintf_chk@plt+0x30f3>
mov    0x34(%esp),%eax
xor    %esi,%esi
test   %eax,%eax
jle    4de3 <__sprintf_chk@plt+0x30f3>
mov    %ebp,0x24(%esp)
mov    %esi,%ebp
mov    0x38(%esp),%esi
xor    %edi,%edi
mov    (%esi,%edi,4),%edx
mov    0x30(%esp),%eax
movl   $0x0,(%esp)
call   3c50 <__sprintf_chk@plt+0x1f60>
test   %eax,%eax
cmovs  %eax,%ebp
add    $0x1,%edi
cmp    0x34(%esp),%edi
jne    4fd3 <__sprintf_chk@plt+0x32e3>
mov    %ebp,%esi
mov    0x24(%esp),%ebp
shr    $0x1f,%esi
jmp    4de3 <__sprintf_chk@plt+0x30f3>
lea    -0xbaf6(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    4795 <__sprintf_chk@plt+0x2aa5>
mov    0x34(%esp),%ecx
test   %ecx,%ecx
jle    5285 <__sprintf_chk@plt+0x3595>
lea    -0xb031(%ebx),%eax
movl   $0x0,0x40(%esp)
movl   $0x0,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    %ebp,0x48(%esp)
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edi
movl   $0x0,0x54(%esp)
mov    (%eax,%edi,4),%edi
mov    0x24(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   12fb0 <__sprintf_chk@plt+0x112c0>
test   %eax,%eax
js     5109 <__sprintf_chk@plt+0x3419>
mov    0x54(%esp),%esi
test   %esi,%esi
jne    50a6 <__sprintf_chk@plt+0x33b6>
jmp    5151 <__sprintf_chk@plt+0x3461>
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%esi
je     50fb <__sprintf_chk@plt+0x340b>
mov    %esi,(%esp)
call   136a0 <__sprintf_chk@plt+0x119b0>
mov    $0x1,%edx
mov    %eax,%ebp
call   4040 <__sprintf_chk@plt+0x2350>
mov    %ebp,(%esp)
mov    %eax,%edi
call   12ec0 <__sprintf_chk@plt+0x111d0>
test   %edi,%edi
jns    5090 <__sprintf_chk@plt+0x33a0>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    %edi,0x40(%esp)
addl   $0x1,0x3c(%esp)
mov    0x34(%esp),%eax
cmp    %eax,0x3c(%esp)
jne    504c <__sprintf_chk@plt+0x335c>
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebp
shr    $0x1f,%esi
jmp    4de3 <__sprintf_chk@plt+0x30f3>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
jmp    50d8 <__sprintf_chk@plt+0x33e8>
mov    %eax,0x40(%esp)
jmp    50d8 <__sprintf_chk@plt+0x33e8>
lea    0x86(%esp),%eax
mov    %eax,(%esp)
lea    0x108(%esp),%esi
call   1880 <uname@plt>
mov    %esi,0x30(%esp)
test   %eax,%eax
jns    4ab7 <__sprintf_chk@plt+0x2dc7>
lea    -0xb08e(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    4795 <__sprintf_chk@plt+0x2aa5>
mov    0x44(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x54(%esp),%esi
test   %esi,%esi
jne    50a6 <__sprintf_chk@plt+0x33b6>
movl   $0x0,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
movl   $0xfffffffe,0x40(%esp)
jmp    50d8 <__sprintf_chk@plt+0x33e8>
mov    %eax,%edi
mov    0x48(%esp),%ebp
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x3c(%esp),%eax
neg    %esi
mov    %eax,(%esp)
call   1800 <free@plt>
lea    -0xa2b0(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
test   %esi,%esi
je     51d3 <__sprintf_chk@plt+0x34e3>
shr    $0x1f,%esi
jmp    4de3 <__sprintf_chk@plt+0x30f3>
mov    0x48(%esp),%ebp
mov    %edx,%edi
mov    0x38(%esp),%eax
mov    %edi,(%esp)
mov    (%eax),%edx
mov    0x30(%esp),%eax
call   3c50 <__sprintf_chk@plt+0x1f60>
mov    %edi,(%esp)
mov    %eax,%esi
call   1800 <free@plt>
jmp    51c5 <__sprintf_chk@plt+0x34d5>
lea    -0x9d70(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    4795 <__sprintf_chk@plt+0x2aa5>
lea    -0xb031(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    %esi,0x8(%esp)
mov    $0x1,%esi
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    4de3 <__sprintf_chk@plt+0x30f3>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %esi,0x8(%esp)
mov    $0x1,%esi
mov    %eax,0xc(%esp)
lea    -0xa2d8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x194(%ebx),%eax
mov    %eax,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
jmp    4de3 <__sprintf_chk@plt+0x30f3>
xor    %eax,%eax
jmp    4dcd <__sprintf_chk@plt+0x30dd>
xchg   %ax,%ax
call   1b330 <__sprintf_chk@plt+0x19640>
xor    %esi,%esi
jmp    4de3 <__sprintf_chk@plt+0x30f3>
xor    %di,%di
nop
jmp    51d3 <__sprintf_chk@plt+0x34e3>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
mov    0xc(%esp),%eax
mov    (%eax),%ecx
mov    0x10(%esp),%eax
movzbl 0x3c(%ecx),%esi
mov    (%eax),%edx
movzbl 0x3c(%edx),%edi
mov    %edi,%eax
xor    %esi,%eax
test   $0x1,%al
je     52cd <__sprintf_chk@plt+0x35dd>
and    $0x1,%esi
mov    $0x1,%eax
jne    52d3 <__sprintf_chk@plt+0x35e3>
and    $0x1,%edi
jne    52d8 <__sprintf_chk@plt+0x35e8>
mov    0x30(%ecx),%eax
sub    0x30(%edx),%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    $0xffffffff,%eax
jmp    52d3 <__sprintf_chk@plt+0x35e3>
nop
push   %edi
push   %esi
mov    0xc(%esp),%eax
mov    (%eax),%ecx
mov    0x10(%esp),%eax
movzbl 0x3c(%ecx),%esi
mov    (%eax),%edx
movzbl 0x3c(%edx),%edi
mov    %edi,%eax
xor    %esi,%eax
test   $0x1,%al
je     530d <__sprintf_chk@plt+0x361d>
and    $0x1,%esi
mov    $0x1,%eax
jne    5313 <__sprintf_chk@plt+0x3623>
and    $0x1,%edi
jne    5318 <__sprintf_chk@plt+0x3628>
mov    0x34(%ecx),%eax
sub    0x34(%edx),%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    $0xffffffff,%eax
jmp    5313 <__sprintf_chk@plt+0x3623>
nop
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x1c(%eax),%edx
test   %edx,%edx
mov    %edx,0xc(%esp)
je     5357 <__sprintf_chk@plt+0x3667>
mov    0x18(%eax),%ebp
xor    %edi,%edi
xor    %esi,%esi
mov    0x0(%ebp,%esi,4),%eax
add    $0x1,%esi
call   5320 <__sprintf_chk@plt+0x3630>
cmp    0xc(%esp),%esi
lea    0x1(%eax,%edi,1),%edi
jne    5338 <__sprintf_chk@plt+0x3648>
add    $0x10,%esp
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edi,%edi
jmp    534e <__sprintf_chk@plt+0x365e>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x1c(%eax),%eax
test   %eax,%eax
je     53ef <__sprintf_chk@plt+0x36ff>
mov    %edx,%esi
xor    %edi,%edi
movl   $0x0,0xc(%esp)
nop
mov    0x24(%esp),%edx
mov    0x18(%ebp),%eax
mov    (%edx),%edx
mov    (%eax,%edi,4),%eax
test   %edx,%edx
je     53a4 <__sprintf_chk@plt+0x36b4>
cmp    %eax,(%esi)
je     53d0 <__sprintf_chk@plt+0x36e0>
xor    %ecx,%ecx
jmp    539d <__sprintf_chk@plt+0x36ad>
cmp    %eax,(%esi,%ecx,4)
je     53d0 <__sprintf_chk@plt+0x36e0>
add    $0x1,%ecx
cmp    %edx,%ecx
jne    5398 <__sprintf_chk@plt+0x36a8>
cmp    %edx,0x20(%esp)
jbe    53e3 <__sprintf_chk@plt+0x36f3>
mov    0x24(%esp),%ecx
mov    %eax,(%esi,%edx,4)
add    $0x1,%edx
mov    %edx,(%ecx)
mov    0x20(%esp),%edx
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    %esi,%edx
call   5360 <__sprintf_chk@plt+0x3670>
test   %eax,%eax
mov    %eax,0xc(%esp)
js     53d8 <__sprintf_chk@plt+0x36e8>
add    $0x1,%edi
cmp    %edi,0x1c(%ebp)
ja     5380 <__sprintf_chk@plt+0x3690>
mov    0xc(%esp),%eax
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x10,%esp
mov    $0xffffffe4,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    53dc <__sprintf_chk@plt+0x36ec>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x21bf2,%ebx
mov    (%esi),%eax
test   %eax,%eax
je     5458 <__sprintf_chk@plt+0x3768>
mov    0x4(%eax),%edx
mov    %eax,0x10(%esp)
lea    0xc(%esi),%eax
mov    %eax,0xc(%esp)
lea    -0xa08f(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x9ce9(%ebx),%edx
jmp    541d <__sprintf_chk@plt+0x372d>
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
movzbl 0x8(%eax),%esi
movzbl 0x9(%eax),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x21b8b,%ebx
cmp    %eax,%esi
jg     549a <__sprintf_chk@plt+0x37aa>
nop
mov    0xc(%edi,%esi,4),%edx
test   %edx,%edx
je     5493 <__sprintf_chk@plt+0x37a3>
mov    %edx,%eax
call   5460 <__sprintf_chk@plt+0x3770>
movzbl 0x9(%edi),%eax
add    $0x1,%esi
cmp    %esi,%eax
jge    5480 <__sprintf_chk@plt+0x3790>
mov    0x4(%edi),%eax
test   %eax,%eax
jne    54aa <__sprintf_chk@plt+0x37ba>
jmp    54b8 <__sprintf_chk@plt+0x37c8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    (%eax),%esi
mov    %eax,(%esp)
call   1800 <free@plt>
test   %esi,%esi
jne    54a8 <__sprintf_chk@plt+0x37b8>
mov    (%edi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %edi,(%esp)
call   1800 <free@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x21b17,%ebx
sub    $0x9c,%esp
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,0x2c(%esp)
call   17e0 <dirfd@plt>
movl   $0x1,0x24(%esp)
mov    %eax,0x20(%esp)
lea    -0x9fec(%ebx),%eax
mov    %eax,0x28(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   1c20 <readdir64@plt>
test   %eax,%eax
je     55c8 <__sprintf_chk@plt+0x38d8>
cmpb   $0x2e,0x13(%eax)
lea    0x13(%eax),%ebp
je     55d8 <__sprintf_chk@plt+0x38e8>
mov    $0x6,%ecx
mov    %ebp,%esi
lea    -0xa072(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     5520 <__sprintf_chk@plt+0x3830>
mov    $0x7,%ecx
mov    %ebp,%esi
lea    -0xa06c(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     5520 <__sprintf_chk@plt+0x3830>
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
mov    0xb0(%esp),%edi
add    %eax,%edi
mov    %eax,%esi
lea    0x2(%edi),%eax
cmp    $0xfff,%eax
jbe    5600 <__sprintf_chk@plt+0x3910>
mov    0xb4(%esp),%eax
mov    0xb0(%esp),%ecx
movb   $0x0,(%eax,%ecx,1)
mov    %eax,0x8(%esp)
lea    -0xa065(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,0xc(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   1c20 <readdir64@plt>
test   %eax,%eax
jne    5534 <__sprintf_chk@plt+0x3844>
mov    0x24(%esp),%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movzbl 0x14(%eax),%edx
test   %dl,%dl
je     5520 <__sprintf_chk@plt+0x3830>
cmp    $0x2e,%dl
jne    5541 <__sprintf_chk@plt+0x3851>
cmpb   $0x0,0x15(%eax)
je     5520 <__sprintf_chk@plt+0x3830>
jmp    5541 <__sprintf_chk@plt+0x3851>
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   18c0 <__fxstatat64@plt>
test   %eax,%eax
js     56c8 <__sprintf_chk@plt+0x39d8>
mov    0x40(%esp),%edx
and    $0xf000,%edx
cmp    $0x4000,%edx
je     56f0 <__sprintf_chk@plt+0x3a00>
cmp    $0x8000,%edx
je     5678 <__sprintf_chk@plt+0x3988>
mov    0xb4(%esp),%eax
mov    %edx,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    5520 <__sprintf_chk@plt+0x3830>
xchg   %ax,%ax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   c650 <__sprintf_chk@plt+0xa960>
test   %al,%al
je     5520 <__sprintf_chk@plt+0x3830>
mov    0xb4(%esp),%eax
add    $0x1,%esi
add    0xb0(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x78(%esp),%eax
cmp    %eax,0x2c(%esp)
jl     5808 <__sprintf_chk@plt+0x3b18>
movl   $0x1,0x24(%esp)
jmp    5520 <__sprintf_chk@plt+0x3830>
mov    0x20(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xa04e(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    5520 <__sprintf_chk@plt+0x3830>
nop
mov    0xb4(%esp),%eax
add    $0x1,%esi
add    0xb0(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
lea    0x101(%edi),%eax
cmp    $0xfff,%eax
ja     57e2 <__sprintf_chk@plt+0x3af2>
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1a50 <openat64@plt>
test   %eax,%eax
mov    %eax,%esi
js     5852 <__sprintf_chk@plt+0x3b62>
mov    %eax,(%esp)
call   1bf0 <fdopendir@plt>
test   %eax,%eax
mov    %eax,%ebp
je     5879 <__sprintf_chk@plt+0x3b89>
mov    0xb4(%esp),%esi
lea    0x1(%edi),%eax
mov    0xb4(%esp),%ecx
mov    0x2c(%esp),%edx
add    %edi,%esi
movb   $0x2f,(%esi)
movb   $0x0,0x1(%ecx,%edi,1)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %ebp,%eax
call   54e0 <__sprintf_chk@plt+0x37f0>
mov    %ebp,(%esp)
mov    %eax,%edi
mov    %eax,0x24(%esp)
call   1ca0 <closedir@plt>
test   %edi,%edi
je     5845 <__sprintf_chk@plt+0x3b55>
jns    5520 <__sprintf_chk@plt+0x3830>
mov    0x24(%esp),%eax
movb   $0x0,(%esi)
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x9fce(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
movl   $0x1,0x24(%esp)
jmp    5520 <__sprintf_chk@plt+0x3830>
mov    0xb4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9910(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    5520 <__sprintf_chk@plt+0x3830>
mov    0x2c(%esp),%esi
mov    %eax,0xc(%esp)
sar    $0x1f,%eax
mov    %eax,0x10(%esp)
mov    0xb4(%esp),%eax
movl   $0x7,(%esp)
mov    %esi,%edi
sar    $0x1f,%edi
mov    %eax,0x8(%esp)
lea    -0xa008(%ebx),%eax
mov    %esi,0x14(%esp)
mov    %edi,0x18(%esp)
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
movl   $0x0,0x24(%esp)
jmp    55c8 <__sprintf_chk@plt+0x38d8>
mov    0x20(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xa039(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    5520 <__sprintf_chk@plt+0x3830>
lea    -0xa01b(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,(%esp)
call   1c90 <close@plt>
jmp    5520 <__sprintf_chk@plt+0x3830>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x21754,%ebx
mov    0x64(%esp),%edi
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x30(%esp)
mov    %eax,(%esp)
call   1a30 <strlen@plt>
test   %edi,%edi
mov    %eax,0x28(%esp)
je     5a60 <__sprintf_chk@plt+0x3d70>
mov    %edi,(%esp)
call   1a30 <strlen@plt>
mov    %eax,0x24(%esp)
mov    0x30(%esp),%eax
xor    %esi,%esi
mov    0x2c(%esp),%edx
mov    (%eax),%eax
mov    (%edx),%ebp
test   %eax,%eax
mov    %eax,0x20(%esp)
jne    590b <__sprintf_chk@plt+0x3c1b>
jmp    5960 <__sprintf_chk@plt+0x3c70>
lea    0x0(%esi),%esi
js     5960 <__sprintf_chk@plt+0x3c70>
add    $0x1,%esi
cmp    0x20(%esp),%esi
je     5960 <__sprintf_chk@plt+0x3c70>
mov    0x0(%ebp,%esi,4),%eax
mov    0x8(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    5900 <__sprintf_chk@plt+0x3c10>
mov    0x60(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x98f0(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
add    $0x4c,%esp
mov    $0xffffffef,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
add    0x24(%esp),%eax
mov    %eax,0x34(%esp)
add    $0xe,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
je     5a8e <__sprintf_chk@plt+0x3d9e>
mov    %eax,0x3c(%esp)
mov    0x20(%esp),%eax
mov    %ebp,(%esp)
add    $0x1,%eax
mov    %eax,0x38(%esp)
shl    $0x2,%eax
mov    %eax,0x4(%esp)
call   1960 <realloc@plt>
mov    0x3c(%esp),%ecx
test   %eax,%eax
je     5aae <__sprintf_chk@plt+0x3dbe>
mov    0x2c(%esp),%edx
cmp    %esi,0x20(%esp)
mov    %eax,(%edx)
ja     5a28 <__sprintf_chk@plt+0x3d38>
lea    (%eax,%esi,4),%eax
mov    0x28(%esp),%ebp
mov    0x24(%esp),%edx
mov    %ecx,(%eax)
lea    0xc(%ecx),%eax
mov    %ecx,0x20(%esp)
lea    0xd(%ecx,%ebp,1),%esi
mov    %edx,0x4(%ecx)
mov    %ebp,(%ecx)
mov    %esi,0x8(%ecx)
mov    0x60(%esp),%ecx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x20(%esp),%ecx
mov    0x24(%esp),%edx
movb   $0x2f,0xc(%ecx,%ebp,1)
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   1810 <memcpy@plt>
mov    0x34(%esp),%eax
mov    0x20(%esp),%ecx
mov    0x38(%esp),%edx
movb   $0x0,0xd(%ecx,%eax,1)
mov    0x30(%esp),%eax
mov    %edx,(%eax)
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%ebp
lea    0x0(,%esi,4),%edx
mov    %ecx,0x2c(%esp)
lea    (%eax,%edx,1),%ecx
lea    0x4(%eax,%edx,1),%eax
mov    %ecx,0x4(%esp)
sub    %esi,%ebp
mov    %ecx,%esi
shl    $0x2,%ebp
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   17f0 <memmove@plt>
mov    %esi,%eax
mov    0x2c(%esp),%ecx
jmp    59b8 <__sprintf_chk@plt+0x3cc8>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   17c0 <basename@plt>
mov    %eax,(%esp)
mov    %eax,%edi
call   1a30 <strlen@plt>
mov    %eax,%edx
mov    %eax,0x24(%esp)
mov    0x28(%esp),%eax
sub    %edx,%eax
sub    $0x1,%eax
mov    %eax,0x28(%esp)
jmp    58e2 <__sprintf_chk@plt+0x3bf2>
lea    -0x98c4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    $0xfffffff4,%eax
jmp    5a1f <__sprintf_chk@plt+0x3d2f>
lea    -0x98c4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %ecx,0x20(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x20(%esp),%ecx
mov    %ecx,(%esp)
call   1800 <free@plt>
mov    $0xfffffff4,%eax
jmp    5a1f <__sprintf_chk@plt+0x3d2f>
xchg   %ax,%ax
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x24,%esp
mov    0x4(%eax),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x21511,%ebx
mov    %esi,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x10(%esp)
mov    (%esi),%eax
mov    %eax,0xc(%esp)
lea    -0x9fbf(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   be00 <__sprintf_chk@plt+0xa110>
mov    (%esi),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   15d00 <__sprintf_chk@plt+0x14010>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   164f0 <__sprintf_chk@plt+0x14800>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %eax,%edi
push   %esi
xor    %esi,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x21484,%ebx
sub    $0x10,%esp
mov    0x20(%eax),%eax
mov    %eax,(%esp)
call   b2b0 <__sprintf_chk@plt+0x95c0>
mov    0x18(%edi),%eax
mov    %eax,(%esp)
call   b2b0 <__sprintf_chk@plt+0x95c0>
mov    0x1c(%edi),%eax
mov    %eax,(%esp)
call   b2b0 <__sprintf_chk@plt+0x95c0>
mov    0xc(%edi),%eax
test   %eax,%eax
je     5bc3 <__sprintf_chk@plt+0x3ed3>
lea    0x0(%esi),%esi
mov    0x8(%edi),%eax
mov    (%eax,%esi,4),%eax
add    $0x1,%esi
call   5ae0 <__sprintf_chk@plt+0x3df0>
cmp    %esi,0xc(%edi)
ja     5bb0 <__sprintf_chk@plt+0x3ec0>
lea    0x8(%edi),%eax
mov    %eax,(%esp)
call   be00 <__sprintf_chk@plt+0xa110>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x21419,%ebx
sub    $0x14,%esp
movl   $0x1,0x4(%esp)
movl   $0x20c,(%esp)
call   1ce0 <calloc@plt>
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,%esi
call   1ce0 <calloc@plt>
movb   $0x80,0x8(%esi)
mov    %eax,(%esi)
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    (%eax),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x213c0,%ebx
mov    %edx,0x14(%esp)
test   %eax,%eax
mov    %eax,0x18(%esp)
je     5d07 <__sprintf_chk@plt+0x4017>
mov    %edi,0x1c(%esp)
mov    %eax,%esi
xor    %ebp,%ebp
mov    %edx,%edi
lea    0x8(%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1750 <strcmp@plt>
mov    (%esi),%esi
test   %eax,%eax
mov    $0x1,%eax
cmove  %eax,%ebp
test   %esi,%esi
jne    5c60 <__sprintf_chk@plt+0x3f70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x4(%eax),%ecx
cmp    %ecx,0x40(%esp)
jbe    5d0d <__sprintf_chk@plt+0x401d>
mov    %eax,%esi
mov    0x40(%esp),%eax
jmp    5c9d <__sprintf_chk@plt+0x3fad>
cmp    %eax,0x4(%esi)
jae    5ca5 <__sprintf_chk@plt+0x3fb5>
mov    %esi,%edi
mov    (%esi),%esi
test   %esi,%esi
jne    5c98 <__sprintf_chk@plt+0x3fa8>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   1a30 <strlen@plt>
movl   $0x1,0x4(%esp)
mov    %eax,%edx
lea    0x9(%eax),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   1ce0 <calloc@plt>
mov    0x1c(%esp),%edx
mov    %esi,(%eax)
mov    0x40(%esp),%esi
mov    %eax,%ecx
lea    0x8(%eax),%eax
mov    %ecx,0x18(%esp)
mov    %esi,-0x4(%eax)
lea    0x1(%edx),%esi
mov    0x14(%esp),%edx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x18(%esp),%ecx
mov    %ebp,%eax
mov    %ecx,(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ebp,%ebp
xor    %esi,%esi
jmp    5ca5 <__sprintf_chk@plt+0x3fb5>
mov    0x18(%esp),%esi
jmp    5ca5 <__sprintf_chk@plt+0x3fb5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x212cc,%ebx
mov    %edx,0x18(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x38(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x3c(%esp)
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    (%eax),%eax
movzbl (%eax),%edx
mov    %eax,0x30(%esp)
test   %dl,%dl
je     5ef6 <__sprintf_chk@plt+0x4206>
mov    0x18(%esp),%edi
movsbl %dl,%eax
add    0x14(%esp),%edi
mov    %eax,0x20(%esp)
cmp    %dl,(%edi)
jne    5f2c <__sprintf_chk@plt+0x423c>
mov    0x30(%esp),%eax
mov    %edi,0x24(%esp)
lea    0x1(%eax),%ecx
mov    0x14(%esp),%eax
lea    0x1(%eax),%esi
xor    %eax,%eax
mov    %esi,0x10(%esp)
jmp    5dd1 <__sprintf_chk@plt+0x40e1>
xchg   %ax,%ax
mov    0x10(%esp),%esi
mov    0x18(%esp),%edi
mov    %esi,0x28(%esp)
lea    (%edi,%eax,1),%ecx
lea    0x1(%esi),%edi
mov    %edi,0x10(%esp)
movsbl %dl,%edi
mov    %edi,0x20(%esp)
mov    0x24(%esp),%edi
add    0x14(%esp),%ecx
cmp    %dl,(%edi,%eax,1)
mov    %ecx,0x1c(%esp)
lea    0x1(%ebp),%ecx
jne    5e30 <__sprintf_chk@plt+0x4140>
movzbl (%ecx),%edx
add    $0x1,%eax
mov    %ecx,%ebp
test   %dl,%dl
jne    5da0 <__sprintf_chk@plt+0x40b0>
mov    0x18(%esp),%esi
add    0x14(%esp),%eax
add    %eax,%esi
mov    %eax,0x10(%esp)
mov    %eax,0x28(%esp)
mov    %esi,0x1c(%esp)
mov    0x1c(%esp),%eax
movzbl (%eax),%edx
mov    0x2c(%esp),%eax
movsbl %dl,%esi
test   %esi,%esi
je     5f11 <__sprintf_chk@plt+0x4221>
mov    0xc(%eax,%esi,4),%eax
test   %eax,%eax
je     5f4d <__sprintf_chk@plt+0x425d>
mov    0x10(%esp),%esi
mov    %eax,0x2c(%esp)
add    $0x1,%esi
mov    %esi,0x14(%esp)
jmp    5d58 <__sprintf_chk@plt+0x4068>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    %esi,0x10(%esp)
mov    %eax,0x34(%esp)
movl   $0x1,0x4(%esp)
movl   $0x20c,(%esp)
mov    %edx,0x24(%esp)
call   1ce0 <calloc@plt>
mov    0x2c(%esp),%esi
mov    $0x83,%ecx
mov    %eax,%edi
rep movsl %ds:(%esi),%es:(%edi)
mov    $0x20c,%esi
mov    %eax,0x14(%esp)
mov    0x34(%esp),%eax
add    0x30(%esp),%eax
mov    %eax,(%esp)
call   1ac0 <__strdup@plt>
mov    0x14(%esp),%edi
mov    0x24(%esp),%edx
mov    %eax,(%edi)
mov    0x2c(%esp),%eax
test   $0x1,%al
mov    %eax,%edi
jne    5eea <__sprintf_chk@plt+0x41fa>
test   $0x2,%edi
jne    5edc <__sprintf_chk@plt+0x41ec>
mov    %esi,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%esi
rep stos %eax,%es:(%edi)
je     5eaf <__sprintf_chk@plt+0x41bf>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%esi
je     5eb7 <__sprintf_chk@plt+0x41c7>
movb   $0x0,(%edi)
mov    0x2c(%esp),%eax
mov    0x30(%esp),%esi
movb   $0x0,0x0(%ebp)
mov    %dl,0x8(%eax)
mov    %esi,(%eax)
mov    0x20(%esp),%esi
mov    %dl,0x9(%eax)
mov    0x14(%esp),%edx
mov    %edx,0xc(%eax,%esi,4)
jmp    5df3 <__sprintf_chk@plt+0x4103>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%esi
jmp    5e95 <__sprintf_chk@plt+0x41a5>
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x20b,%si
jmp    5e8d <__sprintf_chk@plt+0x419d>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    %eax,0x28(%esp)
add    %eax,%esi
mov    %esi,0x1c(%esp)
mov    %eax,0x10(%esp)
jmp    5df3 <__sprintf_chk@plt+0x4103>
mov    0x3c(%esp),%esi
add    $0x4,%eax
mov    0x38(%esp),%edx
mov    %esi,0x60(%esp)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    5c30 <__sprintf_chk@plt+0x3f40>
mov    0x14(%esp),%eax
mov    %edi,0x1c(%esp)
mov    0x30(%esp),%ebp
movl   $0x1,0x34(%esp)
mov    %eax,0x28(%esp)
mov    %eax,0x10(%esp)
jmp    5e3b <__sprintf_chk@plt+0x414b>
mov    0x2c(%esp),%eax
movzbl 0x8(%eax),%eax
cmp    %esi,%eax
jle    5f60 <__sprintf_chk@plt+0x4270>
mov    0x2c(%esp),%eax
mov    %dl,0x8(%eax)
mov    0x2c(%esp),%edi
movzbl 0x9(%edi),%eax
cmp    %esi,%eax
jge    5f6f <__sprintf_chk@plt+0x427f>
mov    %dl,0x9(%edi)
movl   $0x1,0x4(%esp)
movl   $0x20c,(%esp)
call   1ce0 <calloc@plt>
mov    %eax,%edi
mov    0x2c(%esp),%eax
mov    %edi,0xc(%eax,%esi,4)
mov    0x28(%esp),%esi
mov    0x18(%esp),%eax
lea    0x1(%eax,%esi,1),%eax
mov    %eax,(%esp)
call   1ac0 <__strdup@plt>
mov    0x3c(%esp),%esi
mov    0x38(%esp),%edx
movb   $0x80,0x8(%edi)
mov    %eax,(%edi)
lea    0x4(%edi),%eax
mov    %esi,(%esp)
call   5c30 <__sprintf_chk@plt+0x3f40>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x21025,%ebx
sub    $0x3c,%esp
mov    (%edi),%ebp
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   1a30 <strlen@plt>
movl   $0x1,(%esp)
lea    0x1(%eax),%ecx
add    $0x41,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   1ce0 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     6230 <__sprintf_chk@plt+0x4540>
mov    0x18(%esp),%eax
add    $0x4,%ebp
mov    0xc(%edi),%edx
mov    0x1c(%esp),%ecx
movl   $0x7fffffff,0x34(%esi)
mov    %eax,(%esi)
lea    0x1(%edx),%eax
lea    0x3d(%esi),%edx
mov    %eax,0x30(%esi)
mov    %edx,%eax
mov    %edx,0x20(%esp)
mov    0x24(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x1c(%esp),%ecx
lea    0x18(%esi),%eax
mov    %eax,(%esp)
movl   $0x4,0x4(%esp)
mov    %ecx,0x2c(%esi)
call   bcb0 <__sprintf_chk@plt+0x9fc0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   136f0 <__sprintf_chk@plt+0x11a00>
mov    %eax,(%esp)
call   1ac0 <__strdup@plt>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x4(%esi)
mov    %eax,0x24(%esp)
call   1ba0 <strrchr@plt>
mov    0x1000(%ebp),%ecx
mov    0x24(%esp),%edx
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x2c(%esp)
sub    %edx,%eax
mov    %ecx,0x28(%esp)
mov    %eax,0x28(%esi)
call   1c50 <strncmp@plt>
mov    0x24(%esp),%edx
mov    0x28(%esp),%ecx
test   %eax,%eax
je     6188 <__sprintf_chk@plt+0x4498>
movl   $0x0,0x8(%esi)
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%edi),%eax
mov    %eax,(%esp)
call   b580 <__sprintf_chk@plt+0x9890>
test   %eax,%eax
mov    %eax,%ebp
js     6200 <__sprintf_chk@plt+0x4510>
mov    0x8(%esi),%eax
test   %eax,%eax
je     614e <__sprintf_chk@plt+0x445e>
lea    -0x1b0(%ebx),%edx
mov    0x2c(%esp),%ebp
mov    0x1c(%esp),%ecx
mov    %eax,(%esp)
add    0x4(%edx),%ecx
sub    %eax,%ebp
add    %ecx,%ebp
lea    0x1(%ebp),%edx
mov    %edx,0x4(%esp)
call   c170 <__sprintf_chk@plt+0xa480>
mov    %eax,0xc(%esi)
movb   $0x0,(%eax,%ebp,1)
mov    0xc(%esi),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%edi),%eax
mov    %eax,(%esp)
call   b580 <__sprintf_chk@plt+0x9890>
test   %eax,%eax
mov    %eax,%ebp
js     61a0 <__sprintf_chk@plt+0x44b0>
mov    0x4(%esi),%eax
mov    %esi,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x9f8d(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x2f,(%edx,%ecx,1)
jne    60d8 <__sprintf_chk@plt+0x43e8>
lea    0x1(%edx,%ecx,1),%eax
mov    %eax,0x8(%esi)
jmp    60df <__sprintf_chk@plt+0x43ef>
xchg   %ax,%ax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0xc(%esi),%eax
mov    %eax,0x8(%esp)
lea    -0x9fa5(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%edi),%eax
mov    %eax,(%esp)
call   b950 <__sprintf_chk@plt+0x9c60>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x9fa5(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    61de <__sprintf_chk@plt+0x44ee>
xchg   %ax,%ax
mov    $0xfffffff4,%eax
jmp    6179 <__sprintf_chk@plt+0x4489>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x20db7,%ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
lea    0x24(%esp),%esi
movl   $0x31,0x8(%esp)
lea    0x20(%esp),%edi
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x98a0(%ebx),%eax
mov    %eax,(%esp)
lea    -0x9f74(%ebx),%ebp
call   1900 <fwrite@plt>
mov    0x50(%esp),%eax
mov    %esi,0x4(%esp)
mov    0x20(%eax),%eax
mov    %eax,(%esp)
call   bbe0 <__sprintf_chk@plt+0x9ef0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   bc00 <__sprintf_chk@plt+0x9f10>
test   %al,%al
je     62f0 <__sprintf_chk@plt+0x4600>
mov    0x20(%esp),%eax
mov    (%eax),%edx
test   %edx,%edx
je     62a0 <__sprintf_chk@plt+0x45b0>
add    $0xc,%eax
add    $0x3d,%edx
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %edx,0x10(%esp)
mov    %ebp,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    62a0 <__sprintf_chk@plt+0x45b0>
lea    0x0(%esi),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x20cf7,%ebx
sub    $0x6c,%esp
mov    0x84(%esp),%eax
movl   $0x34,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x986c(%ebx),%eax
mov    %eax,(%esp)
call   1900 <fwrite@plt>
lea    -0x9f57(%ebx),%eax
mov    %eax,0x4c(%esp)
mov    0x80(%esp),%eax
movl   $0x0,0x40(%esp)
mov    0xc(%eax),%ecx
test   %ecx,%ecx
je     64e6 <__sprintf_chk@plt+0x47f6>
nop
mov    0x80(%esp),%eax
mov    0x40(%esp),%edx
mov    0x8(%eax),%eax
mov    (%eax,%edx,4),%eax
mov    0x10(%eax),%ebp
mov    %eax,0x2c(%esp)
test   %ebp,%ebp
je     64cd <__sprintf_chk@plt+0x47dd>
lea    -0xad90(%ebx),%eax
movl   $0x0,0x48(%esp)
movl   $0x0,0x44(%esp)
movb   $0x0,0x3b(%esp)
movl   $0x0,0x34(%esp)
mov    %eax,0x30(%esp)
jmp    63e8 <__sprintf_chk@plt+0x46f8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x3b(%esp)
lea    0x8(%eax),%eax
mov    %eax,0x34(%esp)
setne  %al
mov    0x34(%esp),%edx
test   %edx,%edx
jne    6478 <__sprintf_chk@plt+0x4788>
mov    0x2c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%ebp
je     64cd <__sprintf_chk@plt+0x47dd>
mov    %ebp,(%esp)
call   15cc0 <__sprintf_chk@plt+0x13fd0>
mov    %ebp,(%esp)
mov    %eax,%esi
call   15ce0 <__sprintf_chk@plt+0x13ff0>
mov    0x30(%esp),%edi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
mov    %eax,%edx
jne    63cb <__sprintf_chk@plt+0x46db>
mov    $0x8,%ecx
mov    %eax,%esi
lea    -0x9f60(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     63b0 <__sprintf_chk@plt+0x46c0>
mov    0x4c(%esp),%eax
lea    0x5c(%esp),%edi
lea    0x58(%esp),%esi
mov    %edx,(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x3c(%esp)
call   1bc0 <sscanf@plt>
mov    0x3c(%esp),%edx
cmp    $0x2,%eax
jne    64f0 <__sprintf_chk@plt+0x4800>
mov    0x58(%esp),%eax
mov    0x34(%esp),%edx
movb   $0x63,0x3b(%esp)
mov    %eax,0x44(%esp)
mov    0x5c(%esp),%eax
test   %edx,%edx
mov    %eax,0x48(%esp)
mov    $0x1,%eax
je     63cb <__sprintf_chk@plt+0x46db>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     63cb <__sprintf_chk@plt+0x46db>
mov    0x48(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x18(%esp)
movsbl 0x3b(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
add    $0x3d,%eax
mov    %eax,0xc(%esp)
lea    -0x9f34(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
mov    0x80(%esp),%eax
addl   $0x1,0x40(%esp)
mov    0x40(%esp),%edx
cmp    %edx,0xc(%eax)
ja     6360 <__sprintf_chk@plt+0x4670>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x9f46(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   1bc0 <sscanf@plt>
cmp    $0x2,%eax
je     6520 <__sprintf_chk@plt+0x4830>
cmpb   $0x0,0x3b(%esp)
setne  %al
jmp    63bf <__sprintf_chk@plt+0x46cf>
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
movb   $0x62,0x3b(%esp)
mov    %eax,0x44(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x48(%esp)
mov    $0x1,%eax
jmp    63bf <__sprintf_chk@plt+0x46cf>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x20ab7,%ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x9834(%ebx),%eax
mov    %eax,(%esp)
call   1900 <fwrite@plt>
mov    0x54(%esp),%eax
movl   $0x4c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x97fc(%ebx),%eax
mov    %eax,(%esp)
call   1900 <fwrite@plt>
lea    -0x9f25(%ebx),%eax
mov    %eax,0x2c(%esp)
mov    0x50(%esp),%eax
movl   $0x0,0x28(%esp)
mov    0xc(%eax),%eax
test   %eax,%eax
je     6666 <__sprintf_chk@plt+0x4976>
nop
mov    0x50(%esp),%eax
mov    0x28(%esp),%edx
mov    0x8(%eax),%eax
mov    (%eax,%edx,4),%eax
mov    0x10(%eax),%ebp
mov    %eax,0x20(%esp)
lea    -0x99f4(%ebx),%eax
mov    %eax,0x24(%esp)
test   %ebp,%ebp
jne    6601 <__sprintf_chk@plt+0x4911>
jmp    6650 <__sprintf_chk@plt+0x4960>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %ebp,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%ebp
je     6650 <__sprintf_chk@plt+0x4960>
mov    %ebp,(%esp)
call   15cc0 <__sprintf_chk@plt+0x13fd0>
mov    %ebp,(%esp)
mov    %eax,%esi
call   15ce0 <__sprintf_chk@plt+0x13ff0>
mov    0x24(%esp),%edi
mov    $0x8,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    65e8 <__sprintf_chk@plt+0x48f8>
mov    %eax,0x10(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
add    $0x3d,%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    65e8 <__sprintf_chk@plt+0x48f8>
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
addl   $0x1,0x28(%esp)
mov    0x28(%esp),%edi
cmp    %edi,0xc(%eax)
ja     65c0 <__sprintf_chk@plt+0x48d0>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x20987,%ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
movl   $0x2d,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x97ac(%ebx),%eax
mov    %eax,(%esp)
call   1900 <fwrite@plt>
lea    -0x9f16(%ebx),%eax
mov    %eax,0x2c(%esp)
mov    0x50(%esp),%eax
movl   $0x0,0x28(%esp)
mov    0xc(%eax),%eax
test   %eax,%eax
je     6776 <__sprintf_chk@plt+0x4a86>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    0x28(%esp),%edx
mov    0x8(%eax),%eax
mov    (%eax,%edx,4),%eax
mov    0x10(%eax),%ebp
mov    %eax,0x20(%esp)
lea    -0xad90(%ebx),%eax
mov    %eax,0x24(%esp)
test   %ebp,%ebp
jne    6711 <__sprintf_chk@plt+0x4a21>
jmp    6760 <__sprintf_chk@plt+0x4a70>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %ebp,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%ebp
je     6760 <__sprintf_chk@plt+0x4a70>
mov    %ebp,(%esp)
call   15cc0 <__sprintf_chk@plt+0x13fd0>
mov    %ebp,(%esp)
mov    %eax,%esi
call   15ce0 <__sprintf_chk@plt+0x13ff0>
mov    0x24(%esp),%edi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    66f8 <__sprintf_chk@plt+0x4a08>
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    0x20(%esp),%edi
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
lea    0x3d(%edi),%edx
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    66f8 <__sprintf_chk@plt+0x4a08>
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
addl   $0x1,0x28(%esp)
mov    0x28(%esp),%edi
cmp    %edi,0xc(%eax)
ja     66d0 <__sprintf_chk@plt+0x49e0>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %eax,%eax
mov    %eax,%ecx
je     6990 <__sprintf_chk@plt+0x4ca0>
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x3c,%esp
movzbl 0x8(%eax),%edx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x20864,%ebx
test   %dl,%dl
js     68f0 <__sprintf_chk@plt+0x4c00>
movzbl 0x9(%eax),%edi
mov    %eax,0x18(%esp)
movzbl %dl,%eax
mov    %edx,0x1c(%esp)
sub    %eax,%edi
add    $0x1,%edi
lea    0x0(,%edi,4),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %edi,%edi
mov    0x18(%esp),%ecx
mov    %eax,0x14(%esp)
jle    6819 <__sprintf_chk@plt+0x4b29>
mov    0x1c(%esp),%edx
xor    %ebp,%ebp
mov    %esi,0x18(%esp)
mov    %ecx,%esi
movzbl %dl,%eax
jmp    67f4 <__sprintf_chk@plt+0x4b04>
lea    0x0(%esi),%esi
movzbl 0x8(%esi),%eax
add    %ebp,%eax
mov    0x18(%esp),%edx
mov    0xc(%esi,%eax,4),%eax
call   6780 <__sprintf_chk@plt+0x4a90>
mov    0x14(%esp),%ecx
bswap  %eax
mov    %eax,(%ecx,%ebp,4)
add    $0x1,%ebp
cmp    %ebp,%edi
jne    67f0 <__sprintf_chk@plt+0x4b00>
mov    %esi,%ecx
mov    0x18(%esp),%esi
mov    %esi,(%esp)
mov    %ecx,0x1c(%esp)
call   1a80 <ftell@plt>
mov    0x1c(%esp),%ecx
mov    %eax,0x18(%esp)
mov    (%ecx),%eax
cmpb   $0x0,(%eax)
jne    6960 <__sprintf_chk@plt+0x4c70>
test   %edi,%edi
jne    6900 <__sprintf_chk@plt+0x4c10>
mov    0x4(%ecx),%eax
test   %eax,%eax
je     68e3 <__sprintf_chk@plt+0x4bf3>
xor    %edx,%edx
lea    0x0(%esi),%esi
mov    (%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    6850 <__sprintf_chk@plt+0x4b60>
lea    0x2c(%esp),%edi
bswap  %edx
mov    %esi,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x2c(%esp)
call   1900 <fwrite@plt>
mov    0x14(%esp),%ecx
mov    0x4(%ecx),%ebp
test   %ebp,%ebp
je     68db <__sprintf_chk@plt+0x4beb>
xchg   %ax,%ax
mov    0x4(%ebp),%eax
mov    %esi,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
bswap  %eax
mov    %eax,0x2c(%esp)
call   1900 <fwrite@plt>
lea    0x8(%ebp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1c80 <fputs@plt>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   1bb0 <fputc@plt>
mov    0x0(%ebp),%ebp
test   %ebp,%ebp
jne    6890 <__sprintf_chk@plt+0x4ba0>
orl    $0x40000000,0x18(%esp)
mov    0x18(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
xor    %edi,%edi
movl   $0x0,0x14(%esp)
jmp    6819 <__sprintf_chk@plt+0x4b29>
nop
mov    %esi,0x4(%esp)
movzbl 0x8(%ecx),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,(%esp)
call   1bb0 <fputc@plt>
mov    0x1c(%esp),%ecx
mov    %esi,0x4(%esp)
movzbl 0x9(%ecx),%eax
mov    %eax,(%esp)
call   1bb0 <fputc@plt>
mov    %edi,0x8(%esp)
mov    0x14(%esp),%edi
mov    %esi,0xc(%esp)
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
call   1900 <fwrite@plt>
mov    %edi,(%esp)
call   1800 <free@plt>
mov    0x1c(%esp),%ecx
orl    $0x20000000,0x18(%esp)
jmp    6840 <__sprintf_chk@plt+0x4b50>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1c80 <fputs@plt>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   1bb0 <fputc@plt>
mov    0x1c(%esp),%ecx
orl    $0x80000000,0x18(%esp)
jmp    6838 <__sprintf_chk@plt+0x4b48>
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x20653,%ebx
sub    $0x3c,%esp
lea    0x2c(%esp),%edi
mov    %edx,0xc(%esp)
mov    %edi,(%esp)
movl   $0x1,0x8(%esp)
movl   $0x4,0x4(%esp)
movl   $0x57f407b0,0x2c(%esp)
call   1900 <fwrite@plt>
mov    %esi,0xc(%esp)
mov    %edi,(%esp)
movl   $0x1,0x8(%esp)
movl   $0x4,0x4(%esp)
movl   $0x1000200,0x2c(%esp)
call   1900 <fwrite@plt>
mov    %esi,(%esp)
call   1a80 <ftell@plt>
mov    %esi,0xc(%esp)
mov    %edi,(%esp)
movl   $0x1,0x8(%esp)
movl   $0x4,0x4(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,0x1c(%esp)
call   1900 <fwrite@plt>
mov    %esi,%edx
mov    %ebp,%eax
call   6780 <__sprintf_chk@plt+0x4a90>
mov    %esi,(%esp)
bswap  %eax
mov    %eax,0x2c(%esp)
call   1a80 <ftell@plt>
mov    0x1c(%esp),%ecx
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,%ebp
call   18b0 <fseek@plt>
mov    %esi,0xc(%esp)
mov    %edi,(%esp)
movl   $0x1,0x8(%esp)
movl   $0x4,0x4(%esp)
call   1900 <fwrite@plt>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
call   18b0 <fseek@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x20555,%ebx
sub    $0x3c,%esp
mov    %eax,0x1c(%esp)
movl   $0x0,0x2c(%esp)
call   5320 <__sprintf_chk@plt+0x3630>
test   %eax,%eax
mov    %eax,%esi
mov    %eax,0x0(%ebp)
je     6b38 <__sprintf_chk@plt+0x4e48>
lea    0x0(,%eax,4),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     6b38 <__sprintf_chk@plt+0x4e48>
lea    0x2c(%esp),%eax
mov    %edi,%edx
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %esi,(%esp)
call   5360 <__sprintf_chk@plt+0x3670>
test   %eax,%eax
js     6b30 <__sprintf_chk@plt+0x4e40>
lea    -0x21d20(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %edi,(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
call   1c30 <qsort@plt>
mov    0x2c(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   1800 <free@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x204a5,%ebx
sub    $0x4c,%esp
mov    -0x18(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x64(%esp)
je     6de8 <__sprintf_chk@plt+0x50f8>
call   5be0 <__sprintf_chk@plt+0x3ef0>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     6e80 <__sprintf_chk@plt+0x5190>
lea    -0x9f09(%ebx),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
movl   $0x0,0x20(%esp)
mov    0xc(%eax),%eax
test   %eax,%eax
jne    6be0 <__sprintf_chk@plt+0x4ef0>
jmp    6dd0 <__sprintf_chk@plt+0x50e0>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x977c(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x60(%esp),%eax
addl   $0x1,0x20(%esp)
mov    0x20(%esp),%ecx
cmp    %ecx,0xc(%eax)
jbe    6dd0 <__sprintf_chk@plt+0x50e0>
mov    0x60(%esp),%eax
mov    0x20(%esp),%ecx
mov    0x8(%eax),%eax
mov    (%eax,%ecx,4),%eax
mov    0x8(%eax),%ebp
mov    %eax,0x24(%esp)
test   %ebp,%ebp
je     6df0 <__sprintf_chk@plt+0x5100>
mov    0x24(%esp),%eax
testb  $0x1,0x3c(%eax)
jne    6bb0 <__sprintf_chk@plt+0x4ec0>
mov    0x24(%esp),%eax
lea    0x3c(%esp),%edx
call   6aa0 <__sprintf_chk@plt+0x4db0>
test   %eax,%eax
mov    %eax,0x10(%esp)
je     6df8 <__sprintf_chk@plt+0x5108>
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
mov    0x3c(%esp),%ecx
mov    %ecx,%edi
add    $0x1,%eax
test   %ecx,%ecx
mov    %eax,%edx
je     6cb4 <__sprintf_chk@plt+0x4fc4>
lea    -0x9728(%ebx),%edi
xor    %esi,%esi
mov    %edi,0x18(%esp)
mov    %ecx,%edi
mov    %ebp,0x14(%esp)
mov    %eax,%ebp
jmp    6c83 <__sprintf_chk@plt+0x4f93>
lea    0x0(%esi),%esi
test   %edx,%edx
je     6db0 <__sprintf_chk@plt+0x50c0>
mov    0x14(%esp),%eax
add    $0x1,%esi
mov    %edx,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x3c(%esp),%edi
cmp    %esi,%edi
jbe    6cae <__sprintf_chk@plt+0x4fbe>
mov    0x10(%esp),%eax
mov    (%eax,%esi,4),%eax
testb  $0x1,0x3c(%eax)
mov    0x8(%eax),%edx
jne    6c50 <__sprintf_chk@plt+0x4f60>
test   %edx,%edx
je     6db8 <__sprintf_chk@plt+0x50c8>
mov    %edx,(%esp)
add    $0x1,%esi
call   1a30 <strlen@plt>
cmp    %esi,%edi
lea    0x1(%ebp,%eax,1),%ebp
ja     6c83 <__sprintf_chk@plt+0x4f93>
mov    %ebp,%edx
mov    0x14(%esp),%ebp
mov    %edx,%esi
add    $0x1,%esi
mov    %esi,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     6e18 <__sprintf_chk@plt+0x5128>
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
mov    %ebp,0x4(%esp)
mov    0x14(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%esi
call   1810 <memcpy@plt>
test   %edi,%edi
movb   $0x3a,0x0(%ebp,%esi,1)
lea    0x1(%esi),%ebp
je     6d56 <__sprintf_chk@plt+0x5066>
xor    %esi,%esi
mov    %edi,0x18(%esp)
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    (%eax,%esi,4),%eax
testb  $0x1,0x3c(%eax)
jne    6d4d <__sprintf_chk@plt+0x505d>
mov    0x14(%esp),%ecx
movb   $0x20,(%ecx,%ebp,1)
mov    0x8(%eax),%edx
add    $0x1,%ebp
test   %edx,%edx
je     6dc8 <__sprintf_chk@plt+0x50d8>
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   1a30 <strlen@plt>
mov    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,%edi
mov    0x14(%esp),%eax
mov    %edi,0x8(%esp)
add    %ebp,%eax
add    %edi,%ebp
mov    %eax,(%esp)
call   1810 <memcpy@plt>
add    $0x1,%esi
cmp    0x18(%esp),%esi
jne    6d00 <__sprintf_chk@plt+0x5010>
mov    0x14(%esp),%ecx
mov    0x24(%esp),%eax
movb   $0x0,(%ecx,%ebp,1)
lea    0x3d(%eax),%edx
movzwl 0x38(%eax),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
call   5d20 <__sprintf_chk@plt+0x4030>
test   %eax,%eax
je     6d90 <__sprintf_chk@plt+0x50a0>
mov    0x60(%esp),%eax
mov    (%eax),%eax
cmpb   $0x0,0x100b(%eax)
jne    6e40 <__sprintf_chk@plt+0x5150>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    6bca <__sprintf_chk@plt+0x4eda>
lea    0x0(%esi),%esi
mov    0x4(%eax),%edx
jmp    6c58 <__sprintf_chk@plt+0x4f68>
mov    0x4(%eax),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    6c9b <__sprintf_chk@plt+0x4fab>
lea    0x0(%esi),%esi
mov    0x4(%eax),%edx
jmp    6d23 <__sprintf_chk@plt+0x5033>
mov    0x28(%esp),%edi
mov    0x64(%esp),%edx
mov    %edi,%eax
call   69a0 <__sprintf_chk@plt+0x4cb0>
mov    %edi,%eax
call   5460 <__sprintf_chk@plt+0x3770>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%eax),%ebp
jmp    6bfd <__sprintf_chk@plt+0x4f0d>
mov    0x3c(%esp),%edi
test   %edi,%edi
jne    6e61 <__sprintf_chk@plt+0x5171>
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
add    $0x1,%eax
mov    %eax,%edx
jmp    6cb4 <__sprintf_chk@plt+0x4fc4>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
lea    -0x96f4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    6bca <__sprintf_chk@plt+0x4eda>
nop
mov    0x14(%esp),%eax
movl   $0x4,(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    6d90 <__sprintf_chk@plt+0x50a0>
lea    -0x9758(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    6bca <__sprintf_chk@plt+0x4eda>
mov    $0xfffffff4,%eax
jmp    6de8 <__sprintf_chk@plt+0x50f8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x20165,%ebx
sub    $0x3c,%esp
lea    -0x9eee(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
mov    0xc(%eax),%ecx
test   %ecx,%ecx
je     6f48 <__sprintf_chk@plt+0x5258>
mov    %eax,%edi
jmp    6eea <__sprintf_chk@plt+0x51fa>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x977c(%ebx),%eax
add    $0x1,%ebp
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
cmp    %ebp,0xc(%edi)
jbe    6f48 <__sprintf_chk@plt+0x5258>
mov    0x8(%edi),%eax
mov    (%eax,%ebp,4),%ecx
mov    0x8(%ecx),%esi
test   %esi,%esi
je     6f58 <__sprintf_chk@plt+0x5268>
testb  $0x1,0x3c(%ecx)
jne    6ec8 <__sprintf_chk@plt+0x51d8>
mov    0x14(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
mov    0x10(%esp),%ecx
mov    0x1c(%ecx),%edx
test   %edx,%edx
jne    6f60 <__sprintf_chk@plt+0x5270>
mov    0x54(%esp),%eax
add    $0x1,%ebp
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   18a0 <_IO_putc@plt>
cmp    %ebp,0xc(%edi)
ja     6eea <__sprintf_chk@plt+0x51fa>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%ecx),%esi
jmp    6ef7 <__sprintf_chk@plt+0x5207>
lea    0x0(%esi),%esi
lea    0x2c(%esp),%edx
mov    %ecx,%eax
call   6aa0 <__sprintf_chk@plt+0x4db0>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     7038 <__sprintf_chk@plt+0x5348>
lea    -0x9728(%ebx),%eax
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
test   %eax,%eax
je     7011 <__sprintf_chk@plt+0x5321>
mov    %ebp,0x1c(%esp)
mov    0x18(%esp),%ebp
mov    %edi,0x50(%esp)
mov    %edx,%edi
jmp    6fcd <__sprintf_chk@plt+0x52dd>
nop
test   %ecx,%ecx
je     7030 <__sprintf_chk@plt+0x5340>
mov    0x10(%esp),%eax
add    $0x1,%edi
mov    %esi,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
cmp    %edi,0x2c(%esp)
jbe    7009 <__sprintf_chk@plt+0x5319>
mov    0x0(%ebp,%edi,4),%eax
testb  $0x1,0x3c(%eax)
mov    0x8(%eax),%ecx
jne    6fa0 <__sprintf_chk@plt+0x52b0>
test   %ecx,%ecx
je     7028 <__sprintf_chk@plt+0x5338>
lea    -0x76de(%ebx),%eax
add    $0x1,%edi
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %ecx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
cmp    %edi,0x2c(%esp)
ja     6fcd <__sprintf_chk@plt+0x52dd>
mov    0x1c(%esp),%ebp
mov    0x50(%esp),%edi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    6f2c <__sprintf_chk@plt+0x523c>
lea    0x0(%esi),%esi
mov    0x4(%eax),%ecx
jmp    6fde <__sprintf_chk@plt+0x52ee>
lea    0x0(%esi),%esi
mov    0x4(%eax),%ecx
jmp    6fa8 <__sprintf_chk@plt+0x52b8>
lea    -0x9758(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    6f2c <__sprintf_chk@plt+0x523c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x10,%esp
mov    (%eax),%ecx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ff8f,%ebx
test   %ecx,%ecx
je     70a4 <__sprintf_chk@plt+0x53b4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
mov    %ecx,(%esp)
mov    %eax,(%edi)
call   1800 <free@plt>
mov    (%edi),%ecx
test   %ecx,%ecx
jne    7080 <__sprintf_chk@plt+0x5390>
mov    (%esi),%eax
test   %eax,%eax
je     70aa <__sprintf_chk@plt+0x53ba>
mov    (%eax),%edx
mov    %eax,(%esp)
mov    %edx,(%esi)
call   1800 <free@plt>
mov    (%esi),%eax
test   %eax,%eax
jne    7098 <__sprintf_chk@plt+0x53a8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ff2c,%ebx
test   %cl,%cl
jne    7150 <__sprintf_chk@plt+0x5460>
mov    %edx,(%esp)
mov    %ecx,0x18(%esp)
call   1a30 <strlen@plt>
mov    0x18(%esp),%ecx
lea    0x1(%eax),%edx
add    $0xd,%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   1970 <malloc@plt>
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,%ebp
je     7189 <__sprintf_chk@plt+0x5499>
test   %cl,%cl
mov    %cl,0x4(%eax)
je     7160 <__sprintf_chk@plt+0x5470>
movl   $0x0,0x8(%eax)
lea    -0x9ecf(%ebx),%eax
movzbl %cl,%ecx
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x7,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    (%esi),%eax
mov    %eax,0x0(%ebp)
xor    %eax,%eax
mov    %ebp,(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0xc,%eax
movl   $0x0,0x1c(%esp)
jmp    70f8 <__sprintf_chk@plt+0x5408>
nop
mov    0x1c(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,%eax
sub    $0x1,%eax
mov    %eax,0x8(%ebp)
lea    0xc(%ebp),%eax
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x18(%esp),%ecx
jmp    711c <__sprintf_chk@plt+0x542c>
lea    -0x9eea(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    $0xfffffff4,%eax
jmp    7146 <__sprintf_chk@plt+0x5456>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1fe44,%ebx
mov    0x50(%esp),%ecx
cmpb   $0x0,0x54(%esp)
mov    %edx,0x28(%esp)
mov    0x58(%esp),%edi
mov    0x5c(%esp),%ebp
jne    71ec <__sprintf_chk@plt+0x54fc>
mov    (%eax),%eax
movzbl 0x1008(%eax),%eax
cmp    %al,(%ecx)
sete   %al
movzbl %al,%eax
add    %eax,%ecx
mov    %ecx,(%esp)
mov    %ecx,0x2c(%esp)
call   1a30 <strlen@plt>
lea    0x1(%eax),%edx
add    $0xd,%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     72b8 <__sprintf_chk@plt+0x55c8>
mov    0x24(%esp),%edx
mov    0x2c(%esp),%ecx
mov    0x60(%esp),%eax
mov    %edi,0x4(%esi)
lea    0xc(%esi),%edi
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,(%esi)
mov    %ebp,0x8(%esi)
call   1810 <memcpy@plt>
mov    0x28(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   b350 <__sprintf_chk@plt+0x9660>
test   %eax,%eax
js     72a0 <__sprintf_chk@plt+0x55b0>
mov    0x60(%esp),%eax
test   %eax,%eax
je     7298 <__sprintf_chk@plt+0x55a8>
mov    0x60(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x14(%esp)
mov    0x60(%esp),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x10(%esp)
lea    -0x9eb1(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x9ce9(%ebx),%eax
jmp    7264 <__sprintf_chk@plt+0x5574>
mov    %esi,(%esp)
mov    %eax,0x24(%esp)
call   1800 <free@plt>
mov    0x24(%esp),%eax
jmp    7290 <__sprintf_chk@plt+0x55a0>
lea    0x0(%esi),%esi
mov    $0xfffffff4,%eax
jmp    7290 <__sprintf_chk@plt+0x55a0>
nop
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1fd36,%ebx
sub    $0x20,%esp
lea    0x20(%eax),%edi
mov    %edi,%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
lea    -0x9e95(%ebx),%eax
mov    %eax,(%esp)
mov    %esi,%eax
movl   $0x1,0x4(%esp)
call   71b0 <__sprintf_chk@plt+0x54c0>
lea    -0x9e87(%ebx),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x4(%esp)
call   71b0 <__sprintf_chk@plt+0x54c0>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x106c,%esp
mov    %eax,0x30(%esp)
mov    0x1084(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1fc94,%ebx
mov    %eax,%edx
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x105c(%esp)
xor    %eax,%eax
mov    0x1080(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edx,%eax
add    %edi,%eax
mov    %eax,(%esp)
call   c650 <__sprintf_chk@plt+0xa960>
test   %al,%al
jne    73d0 <__sprintf_chk@plt+0x56e0>
movl   $0x0,0x2c(%esp)
mov    0x105c(%esp),%edx
xor    %gs:0x14,%edx
mov    0x2c(%esp),%eax
jne    78b6 <__sprintf_chk@plt+0x5bc6>
add    $0x106c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
lea    0x5c(%esp),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   c0e0 <__sprintf_chk@plt+0xa3f0>
test   %eax,%eax
je     788b <__sprintf_chk@plt+0x5b9b>
mov    0x30(%esp),%ebp
mov    0x20(%esp),%edx
mov    0x0(%ebp),%eax
mov    0x1004(%eax),%eax
mov    %esi,0xc(%esp)
movl   $0x7,(%esp)
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x4c(%esp)
mov    %eax,0x8(%esp)
lea    -0x9e68(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,0x4(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   b7a0 <__sprintf_chk@plt+0x9ab0>
test   %eax,%eax
mov    %eax,0x44(%esp)
je     760b <__sprintf_chk@plt+0x591b>
mov    0x0(%ebp),%edx
mov    0x28(%eax),%esi
mov    0x58(%esp),%ecx
mov    0x1004(%edx),%ebp
mov    %edx,0x34(%esp)
mov    %ecx,0x14(%esp)
lea    0x4(%edx),%ecx
mov    0x20(%esp),%edx
mov    %esi,0x18(%esp)
mov    0x2c(%eax),%esi
mov    %ecx,0x24(%esp)
mov    %esi,0x1c(%esp)
mov    0x4(%eax),%esi
mov    %ecx,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %edx,(%esp)
call   1c50 <strncmp@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
jne    78e5 <__sprintf_chk@plt+0x5bf5>
mov    %ebp,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   1c50 <strncmp@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
jne    78bb <__sprintf_chk@plt+0x5bcb>
mov    0x20(%esp),%eax
lea    0x1(%ebp),%ecx
movl   $0x7,(%esp)
add    %ecx,%eax
mov    %eax,%edx
mov    %eax,0x24(%esp)
mov    0x14(%esp),%eax
mov    %edx,0xc(%esp)
sub    $0x1,%eax
sub    %ebp,%eax
add    %edi,%eax
mov    0x1c(%esp),%edi
mov    %eax,0x14(%esp)
lea    (%esi,%ecx,1),%eax
mov    %eax,%esi
mov    %eax,0x28(%esp)
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
lea    -0x1(%eax,%edi,1),%edi
lea    -0x8234(%ebx),%eax
sub    %ebp,%edi
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x34(%esp),%eax
mov    0x100c(%eax),%ebp
lea    -0x9e49(%ebx),%eax
mov    %eax,0x18(%esp)
test   %ebp,%ebp
jne    7536 <__sprintf_chk@plt+0x5846>
jmp    76e0 <__sprintf_chk@plt+0x59f0>
nop
cmp    %ecx,%edi
je     7690 <__sprintf_chk@plt+0x59a0>
mov    0x0(%ebp),%ebp
test   %ebp,%ebp
lea    0x0(%esi),%esi
je     76e0 <__sprintf_chk@plt+0x59f0>
mov    0x18(%esp),%eax
lea    0x8(%ebp),%esi
mov    %esi,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x4(%ebp),%ecx
cmp    %ecx,0x14(%esp)
jne    7520 <__sprintf_chk@plt+0x5830>
mov    0x14(%esp),%eax
mov    %esi,(%esp)
mov    %ecx,0x1c(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   1850 <memcmp@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    7520 <__sprintf_chk@plt+0x5830>
mov    0x44(%esp),%edi
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x8(%edi),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x81bc(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x4(%edi),%eax
mov    %eax,0x10(%esp)
mov    (%edi),%eax
mov    %edi,0x8(%esp)
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
lea    -0x9e31(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0xc(%edi),%eax
test   %eax,%eax
je     75e8 <__sprintf_chk@plt+0x58f8>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   b950 <__sprintf_chk@plt+0x9c60>
mov    0x44(%esp),%edi
mov    %edi,%eax
add    $0x3d,%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   b950 <__sprintf_chk@plt+0x9c60>
mov    %edi,%eax
call   5ae0 <__sprintf_chk@plt+0x3df0>
lea    0x54(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   126f0 <__sprintf_chk@plt+0x10a00>
test   %eax,%eax
mov    %eax,%esi
js     7823 <__sprintf_chk@plt+0x5b33>
mov    0x54(%esp),%edx
mov    0x30(%esp),%eax
call   5fd0 <__sprintf_chk@plt+0x42e0>
test   %eax,%eax
mov    %eax,%esi
jns    73a2 <__sprintf_chk@plt+0x56b2>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x9e18(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    %esi,0x2c(%esp)
jmp    73aa <__sprintf_chk@plt+0x56ba>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1850 <memcmp@plt>
test   %eax,%eax
jne    7528 <__sprintf_chk@plt+0x5838>
mov    0x44(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x8210(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    73aa <__sprintf_chk@plt+0x56ba>
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
mov    0x1010(%eax),%ebp
test   %ebp,%ebp
je     7858 <__sprintf_chk@plt+0x5b68>
lea    -0x9e3c(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x9e71(%ebx),%eax
movl   $0xffffffff,0x34(%esp)
movl   $0xffffffff,0x38(%esp)
movl   $0xffffffff,0x48(%esp)
mov    %eax,0x1c(%esp)
mov    %edi,0x40(%esp)
jmp    7767 <__sprintf_chk@plt+0x5a77>
xchg   %ax,%ax
mov    0x8(%ebp),%ecx
cmp    %ecx,0x14(%esp)
jb     77f0 <__sprintf_chk@plt+0x5b00>
mov    0x24(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %edi,(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,0x4(%esp)
call   1850 <memcmp@plt>
mov    0x3c(%esp),%ecx
test   %eax,%eax
jne    77f0 <__sprintf_chk@plt+0x5b00>
mov    %esi,0x48(%esp)
mov    0x0(%ebp),%ebp
add    $0x1,%esi
test   %ebp,%ebp
je     77a1 <__sprintf_chk@plt+0x5ab1>
mov    0x1c(%esp),%eax
lea    0xc(%ebp),%edi
cmpb   $0x0,0x4(%ebp)
movl   $0x7,(%esp)
cmove  %edi,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
cmpb   $0x0,0x4(%ebp)
je     7728 <__sprintf_chk@plt+0x5a38>
mov    0x0(%ebp),%ebp
mov    %esi,0x34(%esp)
add    $0x1,%esi
test   %ebp,%ebp
jne    7767 <__sprintf_chk@plt+0x5a77>
mov    0x48(%esp),%eax
mov    0x34(%esp),%ecx
mov    0x38(%esp),%edx
movl   $0x7,(%esp)
cmp    $0xffffffff,%eax
cmove  %ecx,%eax
cmp    $0xffffffff,%edx
mov    %eax,%edi
cmove  %ecx,%edx
mov    %eax,0xc(%esp)
lea    -0x81e8(%ebx),%eax
mov    %edx,%esi
mov    %edx,0x10(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
cmp    %esi,%edi
jg     757e <__sprintf_chk@plt+0x588e>
jmp    76ac <__sprintf_chk@plt+0x59bc>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ecx,0x40(%esp)
jb     775d <__sprintf_chk@plt+0x5a6d>
mov    0x28(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0xc(%ebp),%eax
mov    %eax,(%esp)
call   1850 <memcmp@plt>
test   %eax,%eax
mov    0x38(%esp),%eax
cmove  %esi,%eax
mov    %eax,0x38(%esp)
jmp    775d <__sprintf_chk@plt+0x5a6d>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x818c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,0x2c(%esp)
jmp    73aa <__sprintf_chk@plt+0x56ba>
lea    -0x81e8(%ebx),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    76ac <__sprintf_chk@plt+0x59bc>
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x96d0(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
movl   $0xffffffea,0x2c(%esp)
jmp    73aa <__sprintf_chk@plt+0x56ba>
call   1b330 <__sprintf_chk@plt+0x19640>
lea    -0x7760(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x9e5b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x8c70(%ebx),%eax
movl   $0x479,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
lea    -0x7760(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x9e5b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x96ac(%ebx),%eax
movl   $0x478,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1f6e7,%ebx
sub    $0x9c,%esp
mov    %edx,(%esp)
mov    %eax,0x28(%esp)
mov    %edx,0x18(%esp)
call   17e0 <dirfd@plt>
movl   $0x0,0x20(%esp)
mov    %eax,0x24(%esp)
lea    -0x9fce(%ebx),%eax
mov    %eax,0x2c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   1c20 <readdir64@plt>
test   %eax,%eax
mov    %eax,%ebp
je     7b50 <__sprintf_chk@plt+0x5e60>
cmpb   $0x2e,0x13(%ebp)
lea    0x13(%ebp),%edx
je     79f0 <__sprintf_chk@plt+0x5d00>
mov    $0x6,%ecx
mov    %edx,%esi
lea    -0xa072(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     7950 <__sprintf_chk@plt+0x5c60>
mov    $0x7,%ecx
mov    %edx,%esi
lea    -0xa06c(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     7950 <__sprintf_chk@plt+0x5c60>
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   1a30 <strlen@plt>
mov    0xb0(%esp),%edi
mov    0x1c(%esp),%edx
add    %eax,%edi
mov    %eax,%esi
lea    0x2(%edi),%eax
cmp    $0xfff,%eax
mov    0xb4(%esp),%eax
jbe    7a18 <__sprintf_chk@plt+0x5d28>
mov    0xb0(%esp),%esi
movb   $0x0,(%eax,%esi,1)
mov    %eax,0x8(%esp)
lea    -0xa065(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    7950 <__sprintf_chk@plt+0x5c60>
nop
movzbl 0x14(%ebp),%eax
test   %al,%al
je     7950 <__sprintf_chk@plt+0x5c60>
cmp    $0x2e,%al
xchg   %ax,%ax
jne    7973 <__sprintf_chk@plt+0x5c83>
cmpb   $0x0,0x15(%ebp)
je     7950 <__sprintf_chk@plt+0x5c60>
jmp    7973 <__sprintf_chk@plt+0x5c83>
lea    0x0(%esi),%esi
add    0xb0(%esp),%eax
lea    0x1(%esi),%ecx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   1810 <memcpy@plt>
movzbl 0x12(%ebp),%eax
cmp    $0x8,%al
je     7b88 <__sprintf_chk@plt+0x5e98>
cmp    $0x4,%al
mov    0x1c(%esp),%edx
je     7ac8 <__sprintf_chk@plt+0x5dd8>
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x10(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   18c0 <__fxstatat64@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
js     7c26 <__sprintf_chk@plt+0x5f36>
mov    0x40(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     7b88 <__sprintf_chk@plt+0x5e98>
cmp    $0x4000,%eax
je     7ac8 <__sprintf_chk@plt+0x5dd8>
mov    %eax,0xc(%esp)
mov    0xb4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9fec(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    7950 <__sprintf_chk@plt+0x5c60>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x101(%edi),%eax
cmp    $0xfff,%eax
ja     7b60 <__sprintf_chk@plt+0x5e70>
mov    0x24(%esp),%eax
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   1a50 <openat64@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%esi
js     7bff <__sprintf_chk@plt+0x5f0f>
mov    %eax,(%esp)
call   1bf0 <fdopendir@plt>
test   %eax,%eax
mov    %eax,%ebp
je     7c4d <__sprintf_chk@plt+0x5f5d>
mov    0xb4(%esp),%eax
mov    %ebp,%edx
mov    0xb4(%esp),%esi
movb   $0x2f,(%eax,%edi,1)
lea    0x1(%edi),%eax
movb   $0x0,0x1(%esi,%edi,1)
mov    %eax,(%esp)
mov    0x28(%esp),%eax
mov    %esi,0x4(%esp)
call   7910 <__sprintf_chk@plt+0x5c20>
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
call   1ca0 <closedir@plt>
jmp    7baa <__sprintf_chk@plt+0x5eba>
nop
mov    0x20(%esp),%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0xb4(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9910(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    7950 <__sprintf_chk@plt+0x5c60>
xchg   %ax,%ax
mov    0xb4(%esp),%eax
mov    0xb0(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
call   7350 <__sprintf_chk@plt+0x5660>
mov    %eax,0x20(%esp)
mov    0x20(%esp),%eax
test   %eax,%eax
jns    7950 <__sprintf_chk@plt+0x5c60>
mov    0xb4(%esp),%eax
movb   $0x0,(%eax,%edi,1)
mov    0x20(%esp),%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
movl   $0x0,0x20(%esp)
jmp    7950 <__sprintf_chk@plt+0x5c60>
mov    0x24(%esp),%eax
mov    %edx,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xa039(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    7950 <__sprintf_chk@plt+0x5c60>
mov    0x24(%esp),%eax
mov    %edx,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0xa04e(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    7950 <__sprintf_chk@plt+0x5c60>
lea    -0xa01b(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,(%esp)
call   1c90 <close@plt>
jmp    7950 <__sprintf_chk@plt+0x5c60>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1f377,%ebx
sub    $0x304c,%esp
mov    (%eax),%eax
lea    0x3c(%esp),%esi
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
add    $0x4,%eax
mov    %eax,0x14(%esp)
lea    -0x9dfb(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x1000,0x4(%esp)
mov    %esi,(%esp)
mov    %gs:0x14,%ecx
mov    %ecx,0x303c(%esp)
xor    %ecx,%ecx
mov    %edx,0x2c(%esp)
call   1730 <__snprintf_chk@plt>
lea    -0x9a2e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%edi
je     7de8 <__sprintf_chk@plt+0x60f8>
call   5be0 <__sprintf_chk@plt+0x3ef0>
test   %eax,%eax
mov    %eax,%ebp
je     7e06 <__sprintf_chk@plt+0x6116>
lea    -0x9ce9(%ebx),%eax
lea    0x103c(%esp),%esi
mov    %eax,0x28(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %esi,(%esp)
call   1830 <fgets@plt>
test   %eax,%eax
je     7db0 <__sprintf_chk@plt+0x60c0>
call   1cd0 <__ctype_b_loc@plt>
movsbl 0x103c(%esp),%edx
mov    (%eax),%eax
testb  $0x4,0x1(%eax,%edx,2)
jne    7d70 <__sprintf_chk@plt+0x6080>
lea    -0x816c(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    7d20 <__sprintf_chk@plt+0x6030>
lea    0x0(%esi),%esi
lea    0x203c(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,0x24(%esp)
call   c0e0 <__sprintf_chk@plt+0xa3f0>
mov    0x28(%esp),%eax
mov    0x24(%esp),%edx
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %ebp,%eax
call   5d20 <__sprintf_chk@plt+0x4030>
jmp    7d20 <__sprintf_chk@plt+0x6030>
xchg   %ax,%ax
mov    0x2c(%esp),%edx
mov    %ebp,%eax
call   69a0 <__sprintf_chk@plt+0x4cb0>
mov    %ebp,%eax
call   5460 <__sprintf_chk@plt+0x3770>
mov    %edi,(%esp)
call   1840 <fclose@plt>
xor    %eax,%eax
mov    0x303c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    7e15 <__sprintf_chk@plt+0x6125>
add    $0x304c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0x9de8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,0x8(%esp)
movl   $0x4,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
xor    %eax,%eax
jmp    7dcc <__sprintf_chk@plt+0x60dc>
mov    %edi,(%esp)
call   1840 <fclose@plt>
mov    $0xfffffff4,%eax
jmp    7dcc <__sprintf_chk@plt+0x60dc>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1f1d8,%ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
lea    0x1c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x18(%esp),%eax
mov    0x34(%esp),%edi
mov    %eax,0x8(%esp)
lea    -0x9dd1(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1bc0 <sscanf@plt>
cmp    $0x2,%eax
je     7e88 <__sprintf_chk@plt+0x6198>
mov    -0x18(%ebx),%eax
xor    %ecx,%ecx
cmp    (%eax),%edi
je     7e7b <__sprintf_chk@plt+0x618b>
mov    %edi,%edx
mov    %esi,%eax
call   7c80 <__sprintf_chk@plt+0x5f90>
mov    %eax,%ecx
add    $0x20,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
xor    %ecx,%ecx
shl    $0x8,%eax
add    0x1c(%esp),%eax
cmp    $0x205,%eax
ja     7e64 <__sprintf_chk@plt+0x6174>
add    $0x20,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1f147,%ebx
sub    $0x45c,%esp
mov    0x470(%esp),%eax
mov    %eax,%esi
mov    %eax,0x24(%esp)
mov    -0x18(%ebx),%edx
mov    0x474(%esp),%eax
mov    %eax,%ecx
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x44c(%esp)
xor    %eax,%eax
cmp    (%edx),%ecx
je     7ff8 <__sprintf_chk@plt+0x6308>
call   5be0 <__sprintf_chk@plt+0x3ef0>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     7fed <__sprintf_chk@plt+0x62fd>
lea    0x40(%esp),%edi
mov    $0x6c6f,%edx
mov    %edi,0x4(%esp)
mov    0x20(%esi),%eax
movl   $0x626d7973,0x4c(%esp)
mov    %dx,0x50(%esp)
movb   $0x3a,0x52(%esp)
mov    %eax,(%esp)
call   bbe0 <__sprintf_chk@plt+0x9ef0>
lea    0x3c(%esp),%eax
mov    %eax,0x1c(%esp)
lea    -0x9dcb(%ebx),%eax
mov    %eax,0x2c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   bc00 <__sprintf_chk@plt+0x9f10>
test   %al,%al
je     8018 <__sprintf_chk@plt+0x6328>
mov    0x3c(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     7f50 <__sprintf_chk@plt+0x6260>
lea    0xc(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x53(%esp),%eax
movl   $0x3f9,0x8(%esp)
lea    0x4c(%esp),%ebp
mov    %eax,(%esp)
call   1b20 <__strcpy_chk@plt>
mov    (%esi),%eax
movzwl 0x38(%eax),%edx
add    $0x3d,%eax
mov    %eax,(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ebp,%edx
call   5d20 <__sprintf_chk@plt+0x4030>
test   %eax,%eax
je     7f50 <__sprintf_chk@plt+0x6260>
mov    0x24(%esp),%eax
mov    (%eax),%eax
cmpb   $0x0,0x100b(%eax)
je     7f50 <__sprintf_chk@plt+0x6260>
mov    (%esi),%eax
mov    %ebp,0x8(%esp)
movl   $0x4,(%esp)
add    $0x3d,%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    7f50 <__sprintf_chk@plt+0x6260>
mov    $0xfffffff4,%eax
lea    0x0(%esi),%esi
mov    0x44c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8032 <__sprintf_chk@plt+0x6342>
add    $0x45c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%edi
mov    0x28(%esp),%edx
mov    %edi,%eax
call   69a0 <__sprintf_chk@plt+0x4cb0>
mov    %edi,%eax
call   5460 <__sprintf_chk@plt+0x3770>
xor    %eax,%eax
jmp    7ff8 <__sprintf_chk@plt+0x6308>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1efb7,%ebx
sub    $0x45c,%esp
mov    0x470(%esp),%eax
mov    %eax,%esi
mov    %eax,0x2c(%esp)
mov    -0x18(%ebx),%edx
mov    0x474(%esp),%eax
mov    %eax,%edi
mov    %eax,0x3c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x44c(%esp)
xor    %eax,%eax
cmp    (%edx),%edi
je     8296 <__sprintf_chk@plt+0x65a6>
call   5be0 <__sprintf_chk@plt+0x3ef0>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     82bc <__sprintf_chk@plt+0x65cc>
lea    -0x8148(%ebx),%eax
mov    %eax,0x38(%esp)
mov    0xc(%esi),%eax
movl   $0x0,0x30(%esp)
test   %eax,%eax
je     827e <__sprintf_chk@plt+0x658e>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    0x30(%esp),%edi
mov    0x8(%eax),%eax
mov    (%eax,%edi,4),%eax
mov    0x10(%eax),%ebp
mov    %eax,0x24(%esp)
lea    -0xad90(%ebx),%eax
mov    %eax,0x28(%esp)
test   %ebp,%ebp
jne    8105 <__sprintf_chk@plt+0x6415>
jmp    8268 <__sprintf_chk@plt+0x6578>
mov    0x24(%esp),%eax
mov    %ebp,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%ebp
je     8268 <__sprintf_chk@plt+0x6578>
mov    %ebp,(%esp)
call   15cc0 <__sprintf_chk@plt+0x13fd0>
mov    %ebp,(%esp)
mov    %eax,%esi
call   15ce0 <__sprintf_chk@plt+0x13ff0>
mov    0x28(%esp),%edi
mov    $0x6,%ecx
mov    %eax,0x1c(%esp)
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80e8 <__sprintf_chk@plt+0x63f8>
mov    0x1c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     82b1 <__sprintf_chk@plt+0x65c1>
xor    %ecx,%ecx
lea    0x4c(%esp),%edi
cmp    $0x5b,%al
je     8200 <__sprintf_chk@plt+0x6510>
cmp    $0x5d,%al
je     81d8 <__sprintf_chk@plt+0x64e8>
mov    $0x5f,%edx
cmp    $0x2d,%al
cmovne %eax,%edx
mov    %dl,0x4c(%esp,%ecx,1)
mov    0x1c(%esp),%eax
add    $0x1,%ecx
lea    (%eax,%ecx,1),%edx
movzbl (%edx),%eax
test   %al,%al
je     8174 <__sprintf_chk@plt+0x6484>
cmp    $0x3fe,%ecx
jbe    813d <__sprintf_chk@plt+0x644d>
lea    0x4c(%esp),%esi
add    %esi,%ecx
mov    0x24(%esp),%eax
mov    %esi,%edx
movb   $0x0,(%ecx)
lea    0x3d(%eax),%edi
movzwl 0x38(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
call   5d20 <__sprintf_chk@plt+0x4030>
test   %eax,%eax
je     80e8 <__sprintf_chk@plt+0x63f8>
mov    0x2c(%esp),%eax
mov    (%eax),%eax
cmpb   $0x0,0x100b(%eax)
je     80e8 <__sprintf_chk@plt+0x63f8>
mov    0x38(%esp),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    80e8 <__sprintf_chk@plt+0x63f8>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x9dad(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x4,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    80e8 <__sprintf_chk@plt+0x63f8>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edx),%esi
movl   $0x0,0x20(%esp)
mov    %esi,%eax
test   %al,%al
je     8236 <__sprintf_chk@plt+0x6546>
cmp    $0x5d,%al
je     8236 <__sprintf_chk@plt+0x6546>
mov    0x20(%esp),%eax
mov    %edx,%esi
jmp    8225 <__sprintf_chk@plt+0x6535>
lea    0x0(%esi),%esi
cmp    $0x5d,%dl
je     8230 <__sprintf_chk@plt+0x6540>
add    $0x1,%eax
movzbl (%esi,%eax,1),%edx
test   %dl,%dl
jne    8220 <__sprintf_chk@plt+0x6530>
mov    %eax,0x20(%esp)
mov    %esi,%edx
mov    0x20(%esp),%eax
lea    (%eax,%ecx,1),%esi
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
je     81dc <__sprintf_chk@plt+0x64ec>
mov    0x20(%esp),%eax
add    %edi,%ecx
mov    %ecx,(%esp)
mov    %edx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
call   1810 <memcpy@plt>
mov    %esi,%ecx
jmp    815b <__sprintf_chk@plt+0x646b>
nop
mov    0x2c(%esp),%eax
addl   $0x1,0x30(%esp)
mov    0x30(%esp),%edi
cmp    %edi,0xc(%eax)
ja     80c0 <__sprintf_chk@plt+0x63d0>
mov    0x34(%esp),%edi
mov    0x3c(%esp),%edx
mov    %edi,%eax
call   69a0 <__sprintf_chk@plt+0x4cb0>
mov    %edi,%eax
call   5460 <__sprintf_chk@plt+0x3770>
xor    %eax,%eax
mov    0x44c(%esp),%edi
xor    %gs:0x14,%edi
jne    82c3 <__sprintf_chk@plt+0x65d3>
add    $0x45c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x4c(%esp),%esi
mov    %esi,%ecx
jmp    817a <__sprintf_chk@plt+0x648a>
mov    $0xfffffff4,%eax
jmp    8296 <__sprintf_chk@plt+0x65a6>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ed29,%ebx
sub    $0x14,%esp
cmpl   $0x4,0x1a8(%ebx)
jg     82f0 <__sprintf_chk@plt+0x6600>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    -0x18(%ebx),%esi
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x9d94(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   1760 <__vfprintf_chk@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   17b0 <fflush@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    $0x405,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x4b1c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4b0c(%esp)
xor    %eax,%eax
lea    0x12f8(%esp),%edi
mov    0x4b34(%esp),%ebp
mov    %edi,0x50(%esp)
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ec9b,%ebx
movl   $0x0,0x78(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x4c(%esp)
rep stos %eax,%es:(%edi)
lea    0x88(%esp),%edi
mov    %edi,0x30(%esp)
movl   $0x0,0x2c(%esp)
lea    -0x360(%ebx),%esi
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x44(%esp)
mov    $0xa,%cl
rep stos %eax,%es:(%edi)
lea    0x110(%esp),%eax
movl   $0x0,0x3c(%esp)
lea    -0x773f(%ebx),%edi
movl   $0x0,0x48(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    %esi,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x4b30(%esp),%eax
movl   $0x0,0x110(%esp)
00
mov    %eax,(%esp)
call   19f0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     86c0 <__sprintf_chk@plt+0x69d0>
lea    -0x3f(%eax),%edx
cmp    $0x38,%edx
ja     8680 <__sprintf_chk@plt+0x6990>
mov    -0x7864(%ebx,%edx,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
test   %eax,%eax
jns    8962 <__sprintf_chk@plt+0x6c72>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9d24(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
nop
lea    0x2308(%esp),%edx
mov    $0x1,%esi
lea    0x2304(%esp),%eax
call   7060 <__sprintf_chk@plt+0x5370>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x4b0c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    a49e <__sprintf_chk@plt+0x87ae>
add    $0x4b1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x44(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi),%esi
movl   $0x1,0x3c(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi),%esi
lea    -0xbb5a(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1980 <puts@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    8498 <__sprintf_chk@plt+0x67a8>
xchg   %ax,%ax
movb   $0x1,0x2302(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi),%esi
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c3d0 <__sprintf_chk@plt+0xa6e0>
mov    %eax,0x34(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
cmpb   $0x0,0x1(%eax)
jne    a1f2 <__sprintf_chk@plt+0x8502>
movzbl (%eax),%eax
mov    %al,0x2300(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4c(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4(%ebx),%eax
movb   $0x1,0x2301(%esp)
mov    (%eax),%eax
mov    %eax,0x40(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
lea    0x8(,%eax,4),%edx
mov    0x2c(%esp),%eax
mov    %edx,0x4(%esp)
mov    %edx,0x54(%esp)
mov    %eax,(%esp)
call   1960 <realloc@plt>
mov    0x54(%esp),%edx
test   %eax,%eax
je     a1c3 <__sprintf_chk@plt+0x84d3>
mov    -0x4(%ebx),%ecx
addl   $0x1,0x38(%esp)
mov    %eax,0x2c(%esp)
mov    (%ecx),%ecx
movl   $0x0,-0x4(%eax,%edx,1)
mov    %ecx,-0x8(%eax,%edx,1)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi),%esi
movb   $0x1,0x2303(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi),%esi
addl   $0x1,0x1a8(%ebx)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x18(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x48(%esp)
jmp    83db <__sprintf_chk@plt+0x66eb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x110(%esp),%edx
test   %edx,%edx
jle    86a0 <__sprintf_chk@plt+0x69b0>
shl    $0x4,%edx
mov    (%esi,%edx,1),%eax
movl   $0x4,(%esp)
mov    %eax,0x8(%esp)
lea    -0x8128(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    83db <__sprintf_chk@plt+0x66eb>
mov    -0xc(%ebx),%eax
xor    %esi,%esi
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x80e8(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    8498 <__sprintf_chk@plt+0x67a8>
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
lea    -0xb864(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8468 <__sprintf_chk@plt+0x6778>
nop
mov    %eax,0x8(%esp)
lea    -0x8108(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x4,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    83db <__sprintf_chk@plt+0x66eb>
nop
mov    -0x24(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x4b30(%esp)
jg     8aaf <__sprintf_chk@plt+0x6dbf>
lea    0x172(%esp),%eax
mov    %eax,(%esp)
call   1880 <uname@plt>
test   %eax,%eax
js     9e6a <__sprintf_chk@plt+0x817a>
lea    0x1f4(%esp),%eax
mov    %eax,0x12f8(%esp)
mov    %eax,%edx
mov    0x34(%esp),%esi
lea    -0x9ce9(%ebx),%eax
lea    0x12fc(%esp),%edi
mov    %edx,0x18(%esp)
movl   $0x1000,0xc(%esp)
test   %esi,%esi
cmovne %esi,%eax
mov    %eax,0x14(%esp)
lea    -0xb07a(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edi,(%esp)
call   1730 <__snprintf_chk@plt>
mov    0x4b30(%esp),%esi
mov    %eax,0x22fc(%esp)
mov    -0x24(%ebx),%eax
cmp    %esi,(%eax)
mov    $0x1,%eax
cmovne 0x3c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x44(%esp),%eax
test   %eax,%eax
je     889e <__sprintf_chk@plt+0x6bae>
mov    -0x18(%ebx),%eax
mov    0x48(%esp),%esi
cmp    (%eax),%esi
je     9699 <__sprintf_chk@plt+0x79a9>
mov    %edi,(%esp)
call   1cb0 <opendir@plt>
test   %eax,%eax
je     a22e <__sprintf_chk@plt+0x853e>
mov    %eax,(%esp)
mov    %edi,%esi
mov    %eax,0x38(%esp)
call   17e0 <dirfd@plt>
mov    0x28(%esp),%ecx
lea    -0x9d30(%ebx),%edx
movl   $0x0,0x10(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   18c0 <__fxstatat64@plt>
mov    0x38(%esp),%ecx
test   %eax,%eax
jne    8c12 <__sprintf_chk@plt+0x6f22>
mov    (%esi),%edx
add    $0x4,%esi
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     87da <__sprintf_chk@plt+0x6aea>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%esi),%edx
cmove  %edx,%esi
add    %al,%al
sbb    $0x3,%esi
sub    %edi,%esi
lea    0x230c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x1000,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   19b0 <__memcpy_chk@plt>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%ecx
mov    0x158(%esp),%edx
movb   $0x2f,0x230c(%esp,%esi,1)
movb   $0x0,0x230d(%esp,%esi,1)
add    $0x1,%esi
mov    %eax,0x4(%esp)
mov    %ecx,%eax
mov    %esi,(%esp)
mov    %ecx,0x38(%esp)
call   54e0 <__sprintf_chk@plt+0x37f0>
mov    0x38(%esp),%ecx
mov    %ecx,(%esp)
mov    %eax,%esi
call   1ca0 <closedir@plt>
cmp    $0x1,%esi
mov    %edi,0x8(%esp)
je     9653 <__sprintf_chk@plt+0x7963>
lea    -0x7ca4(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
movl   $0x1,0x3c(%esp)
lea    0x78(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   cd60 <__sprintf_chk@plt+0xb070>
test   %eax,%eax
mov    %eax,%esi
je     9eb7 <__sprintf_chk@plt+0x81c7>
mov    0x1a8(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   ab70 <__sprintf_chk@plt+0x8e80>
mov    0x50(%esp),%eax
movl   $0x80,0x4(%esp)
mov    %esi,0x8c(%esp)
mov    %eax,0x88(%esp)
lea    0x90(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x64(%esp)
call   bcb0 <__sprintf_chk@plt+0x9fc0>
movl   $0x0,0x4(%esp)
movl   $0x200,(%esp)
call   b230 <__sprintf_chk@plt+0x9540>
test   %eax,%eax
mov    %eax,0xa0(%esp)
je     842a <__sprintf_chk@plt+0x673a>
movl   $0x0,0x4(%esp)
movl   $0x200,(%esp)
call   b230 <__sprintf_chk@plt+0x9540>
test   %eax,%eax
mov    %eax,0xa4(%esp)
je     9e98 <__sprintf_chk@plt+0x81a8>
lea    -0x21c00(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x800,(%esp)
call   b230 <__sprintf_chk@plt+0x9540>
test   %eax,%eax
mov    %eax,0xa8(%esp)
je     a322 <__sprintf_chk@plt+0x8632>
mov    0x40(%esp),%eax
test   %eax,%eax
je     969d <__sprintf_chk@plt+0x79ad>
lea    -0x9a2e(%ebx),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x4c(%esp)
je     a287 <__sprintf_chk@plt+0x8597>
mov    0x40(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9cfd(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
lea    0x230c(%esp),%eax
mov    %eax,0x38(%esp)
lea    -0x9ceb(%ebx),%eax
movl   $0x0,0x50(%esp)
mov    %eax,0x54(%esp)
mov    %ebp,0x58(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%eax
movl   $0x2800,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1830 <fgets@plt>
test   %eax,%eax
je     8b04 <__sprintf_chk@plt+0x6e14>
mov    0x54(%esp),%esi
mov    0x38(%esp),%eax
addl   $0x1,0x50(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1b50 <strtok@plt>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   1b50 <strtok@plt>
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x44(%esp)
call   1b50 <strtok@plt>
test   %ebp,%ebp
je     89d0 <__sprintf_chk@plt+0x6ce0>
mov    0x44(%esp),%edi
test   %edi,%edi
je     89d0 <__sprintf_chk@plt+0x6ce0>
test   %eax,%eax
je     89d0 <__sprintf_chk@plt+0x6ce0>
mov    $0x8,%ecx
mov    %eax,%esi
lea    -0x9ce8(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    89d0 <__sprintf_chk@plt+0x6ce0>
mov    0x28(%esp),%eax
movl   $0x10,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   1b00 <strtoull@plt>
mov    0x110(%esp),%ecx
cmpb   $0x0,(%ecx)
je     8bdc <__sprintf_chk@plt+0x6eec>
mov    0x50(%esp),%eax
mov    %ebp,0x10(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x7c5c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    89d0 <__sprintf_chk@plt+0x6ce0>
mov    0x28(%esp),%esi
lea    -0x9dd1(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %esi,0xc(%esp)
lea    0xb0(%esp),%esi
mov    %esi,0x8(%esp)
mov    0x0(%ebp,%eax,4),%eax
mov    %eax,(%esp)
call   1bc0 <sscanf@plt>
cmp    $0x2,%eax
jne    86d5 <__sprintf_chk@plt+0x69e5>
mov    -0x24(%ebx),%eax
mov    -0x24(%ebx),%ecx
mov    (%eax),%eax
mov    0x0(%ebp,%eax,4),%edx
add    $0x1,%eax
mov    %eax,(%ecx)
mov    %edx,0x12f8(%esp)
jmp    86fc <__sprintf_chk@plt+0x6a0c>
mov    0x30(%esp),%eax
mov    0x58(%esp),%ebp
call   72c0 <__sprintf_chk@plt+0x55d0>
mov    0x40(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9ce0(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
mov    0x3c(%esp),%ecx
test   %ecx,%ecx
jne    9842 <__sprintf_chk@plt+0x7b52>
mov    -0x24(%ebx),%eax
mov    (%eax),%esi
cmp    %esi,0x4b30(%esp)
jg     8bab <__sprintf_chk@plt+0x6ebb>
jmp    8c46 <__sprintf_chk@plt+0x6f56>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
call   126f0 <__sprintf_chk@plt+0x10a00>
test   %eax,%eax
js     9fbe <__sprintf_chk@plt+0x82ce>
mov    0x110(%esp),%edx
mov    0x30(%esp),%eax
call   5fd0 <__sprintf_chk@plt+0x42e0>
test   %eax,%eax
js     9f82 <__sprintf_chk@plt+0x8292>
add    $0x1,%esi
cmp    0x4b30(%esp),%esi
je     8c46 <__sprintf_chk@plt+0x6f56>
mov    0x0(%ebp,%esi,4),%edi
cmpb   $0x2f,(%edi)
je     8b60 <__sprintf_chk@plt+0x6e70>
lea    -0x9b6e(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x30(%esp),%eax
call   5b70 <__sprintf_chk@plt+0x3e80>
jmp    8468 <__sprintf_chk@plt+0x6778>
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
lea    0xa8(%esp),%ecx
mov    %edx,0xc(%esp)
mov    %ecx,%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   71b0 <__sprintf_chk@plt+0x54c0>
jmp    89d0 <__sprintf_chk@plt+0x6ce0>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
lea    -0x7cec(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x38(%esp),%ecx
neg    %esi
mov    %ecx,(%esp)
call   1ca0 <closedir@plt>
jmp    8873 <__sprintf_chk@plt+0x6b83>
mov    0xa4(%esp),%eax
mov    0x28(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   bbe0 <__sprintf_chk@plt+0x9ef0>
lea    0xb0(%esp),%eax
mov    0x64(%esp),%ebp
mov    %eax,%esi
jmp    8c96 <__sprintf_chk@plt+0x6fa6>
lea    0x0(%esi,%eiz,1),%esi
mov    0xb0(%esp),%eax
mov    0x94(%esp),%edx
mov    %dx,0x38(%eax)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   bd20 <__sprintf_chk@plt+0xa030>
test   %eax,%eax
js     a0c4 <__sprintf_chk@plt+0x83d4>
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   bc00 <__sprintf_chk@plt+0x9f10>
test   %al,%al
jne    8c70 <__sprintf_chk@plt+0x6f80>
mov    0x88(%esp),%eax
lea    0x2f8(%esp),%ebp
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
add    $0x4,%eax
mov    %eax,0x14(%esp)
lea    -0x9a3d(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %ebp,(%esp)
call   1730 <__snprintf_chk@plt>
lea    -0x9a2e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     a60b <__sprintf_chk@plt+0x891b>
lea    0x230c(%esp),%eax
xor    %edi,%edi
mov    %ebp,0x3c(%esp)
mov    %eax,%ebp
mov    %eax,0x38(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %ebp,(%esp)
call   1830 <fgets@plt>
test   %eax,%eax
je     a0ed <__sprintf_chk@plt+0x83fd>
mov    %ebp,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     8d3e <__sprintf_chk@plt+0x704e>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
add    $0x1,%edi
sub    %ebp,%edx
je     8d20 <__sprintf_chk@plt+0x7030>
cmpb   $0xa,0x230b(%esp,%edx,1)
je     8d20 <__sprintf_chk@plt+0x7030>
mov    0x3c(%esp),%ebp
lea    -0x7b0c(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %ebp,0x8(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,(%esp)
call   1840 <fclose@plt>
mov    0x94(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9b56(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x90(%esp),%eax
lea    -0x7a8c(%ebx),%ecx
mov    %ecx,0x44(%esp)
mov    %eax,%esi
mov    %eax,0x3c(%esp)
mov    0x94(%esp),%eax
lea    (%esi,%eax,4),%eax
cmp    %eax,%esi
mov    %eax,0x40(%esp)
jae    8ee3 <__sprintf_chk@plt+0x71f3>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    (%eax),%edi
mov    0x28(%esp),%eax
movl   $0x0,0x110(%esp)
00
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   162c0 <__sprintf_chk@plt+0x145d0>
test   %eax,%eax
js     961c <__sprintf_chk@plt+0x792c>
mov    0x110(%esp),%esi
test   %esi,%esi
je     9f7b <__sprintf_chk@plt+0x828b>
lea    0xa8(%esp),%eax
mov    %eax,0x38(%esp)
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   16240 <__sprintf_chk@plt+0x14550>
mov    %esi,(%esp)
mov    %eax,%ebp
call   16260 <__sprintf_chk@plt+0x14570>
mov    %edi,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x38(%esp),%edx
call   71b0 <__sprintf_chk@plt+0x54c0>
mov    0x110(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%esi
jne    8e40 <__sprintf_chk@plt+0x7150>
mov    0x110(%esp),%eax
mov    %eax,(%esp)
call   16280 <__sprintf_chk@plt+0x14590>
lea    0x10(%edi),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   15d40 <__sprintf_chk@plt+0x14050>
lea    0x14(%edi),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   16530 <__sprintf_chk@plt+0x14840>
mov    (%edi),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
addl   $0x4,0x3c(%esp)
mov    0x3c(%esp),%eax
cmp    %eax,0x40(%esp)
movl   $0x0,(%edi)
ja     8df8 <__sprintf_chk@plt+0x7108>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   bbd0 <__sprintf_chk@plt+0x9ee0>
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x7ae8(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   bbd0 <__sprintf_chk@plt+0x9ee0>
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x7abc(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x90(%esp),%eax
lea    -0x7a38(%ebx),%ecx
mov    %ecx,0x60(%esp)
mov    %eax,%esi
mov    %eax,0x58(%esp)
mov    0x94(%esp),%eax
lea    (%esi,%eax,4),%eax
cmp    %eax,%esi
mov    %eax,0x5c(%esp)
jae    916b <__sprintf_chk@plt+0x747b>
mov    0x58(%esp),%eax
mov    (%eax),%edi
mov    0x14(%edi),%eax
test   %eax,%eax
je     913b <__sprintf_chk@plt+0x744b>
mov    0x88(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x4(%edi),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9b21(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x14(%edi),%esi
lea    -0x9aee(%ebx),%eax
mov    %eax,0x4c(%esp)
test   %esi,%esi
je     9158 <__sprintf_chk@plt+0x7468>
mov    %edi,%ebp
mov    %esi,%edi
jmp    9094 <__sprintf_chk@plt+0x73a4>
nop
mov    0x4(%esi),%eax
mov    0x40(%esp),%edx
mov    %eax,0x50(%esp)
mov    0x8(%esi),%eax
xor    %eax,%edx
mov    %eax,0x54(%esp)
mov    0x3c(%esp),%eax
xor    0x50(%esp),%eax
or     %eax,%edx
je     9113 <__sprintf_chk@plt+0x7423>
lea    0xc(%esi),%eax
test   %cl,%cl
mov    %eax,0x38(%esp)
je     9528 <__sprintf_chk@plt+0x7838>
mov    (%esi),%eax
test   %eax,%eax
je     9130 <__sprintf_chk@plt+0x7440>
mov    0x4(%eax),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    0x4c(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0x4(%ebp),%eax
mov    %ecx,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    (%esi),%eax
test   %eax,%eax
je     907b <__sprintf_chk@plt+0x738b>
mov    %eax,0x4(%esp)
lea    0x18(%ebp),%eax
mov    %eax,(%esp)
call   bdc0 <__sprintf_chk@plt+0xa0d0>
test   %eax,%eax
js     907b <__sprintf_chk@plt+0x738b>
mov    (%esi),%eax
addw   $0x1,0x3a(%eax)
mov    0x4(%eax),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x9d94(%ebx),%eax
mov    %eax,(%esp)
call   82d0 <__sprintf_chk@plt+0x65e0>
mov    %edi,0x4(%esp)
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,%edi
je     9158 <__sprintf_chk@plt+0x7468>
mov    %edi,(%esp)
call   16490 <__sprintf_chk@plt+0x147a0>
mov    %edi,(%esp)
mov    %eax,0x28(%esp)
call   164b0 <__sprintf_chk@plt+0x147c0>
mov    %edi,(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x3c(%esp)
call   164d0 <__sprintf_chk@plt+0x147e0>
mov    0x88(%esp),%esi
mov    0xa8(%esp),%ecx
mov    %eax,0x38(%esp)
mov    0x28(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2e,%dl
je     9120 <__sprintf_chk@plt+0x7430>
cmp    %dl,0x1008(%esi)
mov    %ecx,(%esp)
sete   %dl
movzbl %dl,%edx
add    %edx,%eax
mov    %eax,0x4(%esp)
call   b7a0 <__sprintf_chk@plt+0x9ab0>
cmpl   $0x57,0x38(%esp)
sete   %cl
test   %eax,%eax
mov    %eax,%esi
je     95a4 <__sprintf_chk@plt+0x78b4>
mov    0x44(%esp),%eax
cmpb   $0x0,0x1009(%eax)
jne    8fd0 <__sprintf_chk@plt+0x72e0>
lea    0xc(%esi),%eax
mov    %eax,0x38(%esp)
jmp    9003 <__sprintf_chk@plt+0x7313>
nop
mov    %eax,%edx
add    $0x1,%eax
movzbl 0x1(%edx),%edx
jmp    90d6 <__sprintf_chk@plt+0x73e6>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x9d81(%ebx),%eax
jmp    9010 <__sprintf_chk@plt+0x7320>
mov    0x4(%edi),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
xchg   %ax,%ax
addl   $0x4,0x58(%esp)
mov    0x58(%esp),%eax
cmp    %eax,0x5c(%esp)
ja     8f78 <__sprintf_chk@plt+0x7288>
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   bbd0 <__sprintf_chk@plt+0x9ee0>
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x7a68(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x94(%esp),%eax
mov    %eax,0x44(%esp)
movzwl %ax,%eax
lea    (%eax,%eax,1),%esi
mov    %eax,0x4c(%esp)
add    %esi,%eax
add    %eax,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8bce <__sprintf_chk@plt+0x6ede>
lea    (%eax,%esi,1),%eax
add    %eax,%esi
mov    %eax,0x34(%esp)
mov    0x4c(%esp),%eax
movl   $0x7,(%esp)
mov    %esi,0x40(%esp)
mov    %eax,0x8(%esp)
lea    -0x799c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x94(%esp),%eax
cmp    $0xfffe,%eax
mov    %eax,0x50(%esp)
ja     a636 <__sprintf_chk@plt+0x8946>
mov    0x90(%esp),%eax
xor    %edi,%edi
mov    0x44(%esp),%esi
mov    %eax,0x3c(%esp)
xor    %eax,%eax
test   %si,%si
je     a62a <__sprintf_chk@plt+0x893a>
mov    %si,0x28(%esp)
mov    0x3c(%esp),%esi
mov    (%esi,%eax,4),%edx
movzwl 0x3a(%edx),%edx
test   %dx,%dx
mov    %dx,0x0(%ebp,%eax,2)
jne    924f <__sprintf_chk@plt+0x755f>
mov    0x34(%esp),%ecx
movzwl %di,%edx
add    $0x1,%edi
mov    %ax,(%ecx,%edx,2)
add    $0x1,%eax
cmp    %ax,0x28(%esp)
ja     9230 <__sprintf_chk@plt+0x7540>
test   %di,%di
je     a62a <__sprintf_chk@plt+0x893a>
xor    %eax,%eax
mov    %ax,0x38(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%esi
sub    $0x1,%edi
movzwl %di,%eax
movzwl (%esi,%eax,2),%ecx
mov    0x3c(%esp),%esi
movzwl %cx,%eax
mov    (%esi,%eax,4),%edx
movzwl 0x38(%esp),%eax
mov    0x40(%esp),%esi
addw   $0x1,0x38(%esp)
mov    %eax,0x34(%edx)
mov    %cx,(%esi,%eax,2)
mov    0x18(%edx),%eax
mov    0x1c(%edx),%edx
lea    (%eax,%edx,4),%ecx
cmp    %ecx,%eax
mov    %ecx,0x28(%esp)
jae    92eb <__sprintf_chk@plt+0x75fb>
nop
mov    (%eax),%edx
movzwl 0x38(%edx),%esi
movzwl %si,%edx
lea    0x0(%ebp,%edx,2),%ecx
movzwl (%ecx),%edx
test   %dx,%dx
je     a5a2 <__sprintf_chk@plt+0x88b2>
sub    $0x1,%edx
test   %dx,%dx
mov    %dx,(%ecx)
jne    92e2 <__sprintf_chk@plt+0x75f2>
mov    0x34(%esp),%ecx
movzwl %di,%edx
add    $0x1,%edi
mov    %si,(%ecx,%edx,2)
add    $0x4,%eax
cmp    %eax,0x28(%esp)
ja     92b0 <__sprintf_chk@plt+0x75c0>
test   %di,%di
jne    9270 <__sprintf_chk@plt+0x7580>
movzwl 0x44(%esp),%ecx
cmp    %cx,0x38(%esp)
mov    0x50(%esp),%eax
mov    0x3c(%esp),%esi
jb     a3b0 <__sprintf_chk@plt+0x86c0>
lea    (%esi,%eax,4),%edi
cmp    %edi,%esi
lea    -0x21d20(%ebx),%eax
mov    %eax,0x28(%esp)
jae    933b <__sprintf_chk@plt+0x764b>
mov    (%esi),%eax
cmpl   $0x1,0x1c(%eax)
jbe    9334 <__sprintf_chk@plt+0x7644>
mov    0x28(%esp),%ecx
add    $0x18,%eax
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   be40 <__sprintf_chk@plt+0xa150>
add    $0x4,%esi
cmp    %esi,%edi
ja     9319 <__sprintf_chk@plt+0x7629>
mov    0x4c(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0xc(%esp)
mov    0xac(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x7920(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %ebp,(%esp)
call   1800 <free@plt>
mov    0x88(%esp),%eax
mov    0x48(%esp),%esi
add    $0x4,%eax
test   %esi,%esi
mov    %eax,0x3c(%esp)
je     a573 <__sprintf_chk@plt+0x8883>
lea    -0x3c0(%ebx),%edx
mov    $0xffffffff,%ebp
mov    %edx,0x1fc(%ebx)
lea    0x2310(%esp),%eax
mov    0x48(%esp),%esi
mov    %eax,0x34(%esp)
lea    -0x9aad(%ebx),%eax
mov    %eax,0x40(%esp)
jmp    93e6 <__sprintf_chk@plt+0x76f6>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    0x1fc(%ebx),%eax
call   *0x4(%eax)
mov    0x1fc(%ebx),%eax
lea    0x8(%eax),%edx
mov    0x8(%eax),%eax
mov    %edx,0x1fc(%ebx)
test   %eax,%eax
je     a398 <__sprintf_chk@plt+0x86a8>
mov    0x34(%esp),%edi
xor    %eax,%eax
mov    $0x3e,%ecx
movl   $0x0,0x230c(%esp)
00
rep stos %eax,%es:(%edi)
xor    %ecx,%ecx
test   %esi,%esi
mov    %cx,(%edi)
movb   $0x0,0x2(%edi)
jne    93b8 <__sprintf_chk@plt+0x76c8>
mov    (%edx),%eax
movl   $0xff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xff,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x230c(%esp),%eax
mov    %eax,%edi
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   1730 <__snprintf_chk@plt>
movl   $0x1a4,0xc(%esp)
movl   $0x241,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   1a50 <openat64@plt>
test   %eax,%eax
mov    %eax,%edx
js     a2e7 <__sprintf_chk@plt+0x85f7>
lea    -0x9a8a(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x38(%esp)
call   19e0 <fdopen@plt>
mov    0x38(%esp),%edx
test   %eax,%eax
mov    %eax,%edi
je     a5cc <__sprintf_chk@plt+0x88dc>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
mov    0x1fc(%ebx),%eax
call   *0x4(%eax)
mov    %edi,(%esp)
mov    %eax,0x48(%esp)
call   1820 <ferror@plt>
mov    %edi,(%esp)
mov    %eax,0x44(%esp)
call   1840 <fclose@plt>
mov    0x48(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x44(%esp),%eax
or     %eax,0x38(%esp)
test   %edx,%edx
js     a660 <__sprintf_chk@plt+0x8970>
mov    0x1fc(%ebx),%edi
movl   $0x0,0x8(%esp)
mov    (%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   17d0 <unlinkat@plt>
mov    (%edi),%eax
mov    %ebp,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   1c10 <renameat@plt>
test   %eax,%eax
jne    a4d9 <__sprintf_chk@plt+0x87e9>
mov    0x38(%esp),%edx
test   %edx,%edx
jne    a4a3 <__sprintf_chk@plt+0x87b3>
mov    %edi,%eax
jmp    93d2 <__sprintf_chk@plt+0x76e2>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%ecx
mov    %ecx,0x18(%esp)
mov    0x40(%esp),%ecx
mov    %ecx,0x1c(%esp)
mov    0x4(%ebp),%ecx
mov    %eax,0x8(%esp)
lea    -0x79f0(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
mov    %ecx,0x14(%esp)
mov    0x50(%esp),%ecx
mov    %ecx,0xc(%esp)
mov    0x54(%esp),%ecx
mov    %ecx,0x10(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x44(%esp),%eax
cmpb   $0x0,0x100a(%eax)
je     9003 <__sprintf_chk@plt+0x7313>
mov    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebp),%eax
movl   $0x4,(%esp)
mov    %eax,0x8(%esp)
lea    -0x79c8(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9003 <__sprintf_chk@plt+0x7313>
mov    0x28(%esp),%eax
mov    %ecx,0x3c(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x7a14(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x44(%esp),%eax
mov    0x3c(%esp),%ecx
cmpb   $0x0,0x100a(%eax)
je     907b <__sprintf_chk@plt+0x738b>
test   %cl,%cl
jne    907b <__sprintf_chk@plt+0x738b>
mov    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebp),%eax
movl   $0x4,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9b0a(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    907b <__sprintf_chk@plt+0x738b>
cmp    $0xfffffffe,%eax
je     9f59 <__sprintf_chk@plt+0x8269>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %eax,0xc(%esp)
mov    0x4(%edi),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8e9e <__sprintf_chk@plt+0x71ae>
lea    -0x7cc4(%ebx),%eax
xor    %si,%si
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x30(%esp),%eax
call   5b70 <__sprintf_chk@plt+0x3e80>
lea    0x2304(%esp),%eax
lea    0x2308(%esp),%edx
call   7060 <__sprintf_chk@plt+0x5370>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    8498 <__sprintf_chk@plt+0x67a8>
xor    %esi,%esi
jmp    966c <__sprintf_chk@plt+0x797c>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     a256 <__sprintf_chk@plt+0x8566>
mov    $0x5f62,%esi
mov    %si,0x300(%esp)
lea    -0x9a2e(%ebx),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
movl   $0x736b5f5f,0x2f8(%esp)
73
movl   $0x61746d79,0x2fc(%esp)
61
movb   $0x0,0x302(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x40(%esp)
je     a458 <__sprintf_chk@plt+0x8768>
mov    0x4c(%esp),%eax
xor    %edi,%edi
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9c9c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
lea    0x230c(%esp),%eax
mov    %eax,0x38(%esp)
lea    -0x9c87(%ebx),%eax
mov    %eax,0x44(%esp)
nop
mov    0x40(%esp),%eax
movl   $0x2800,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1830 <fgets@plt>
test   %eax,%eax
je     9efa <__sprintf_chk@plt+0x820a>
mov    0x38(%esp),%eax
add    $0x1,%edi
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   1a20 <strchr@plt>
test   %eax,%eax
je     9815 <__sprintf_chk@plt+0x7b25>
add    $0x1,%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   1a20 <strchr@plt>
test   %eax,%eax
je     9815 <__sprintf_chk@plt+0x7b25>
mov    0x88(%esp),%ecx
lea    0x2(%eax),%edx
lea    0x1(%eax),%esi
movzbl 0x1008(%ecx),%ecx
cmp    %cl,0x1(%eax)
lea    0x2f8(%esp),%eax
movl   $0xa,0x8(%esp)
cmove  %edx,%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1c50 <strncmp@plt>
test   %eax,%eax
jne    9728 <__sprintf_chk@plt+0x7a38>
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   1a20 <strchr@plt>
test   %eax,%eax
je     97da <__sprintf_chk@plt+0x7aea>
movb   $0x0,(%eax)
mov    0x30(%esp),%eax
add    $0xa,%esi
lea    0xa8(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   71b0 <__sprintf_chk@plt+0x54c0>
jmp    9728 <__sprintf_chk@plt+0x7a38>
mov    0x38(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9728 <__sprintf_chk@plt+0x7a38>
mov    0x2c(%esp),%esi
lea    0x198(%ebx),%eax
movl   $0x0,0x80(%esp)
00
movl   $0x0,0x7c(%esp)
test   %esi,%esi
cmovne %esi,%eax
mov    (%eax),%ecx
test   %ecx,%ecx
mov    %ecx,0x40(%esp)
je     a56c <__sprintf_chk@plt+0x887c>
add    $0x4,%eax
mov    %eax,0x54(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0x38(%esp)
lea    -0x9c2b(%ebx),%eax
mov    %eax,0x58(%esp)
xchg   %ax,%ax
mov    0x38(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   1c60 <__xstat64@plt>
test   %eax,%eax
jne    9e47 <__sprintf_chk@plt+0x8157>
mov    0xc0(%esp),%edx
mov    %edx,%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     9ed6 <__sprintf_chk@plt+0x81e6>
cmp    $0x4000,%eax
jne    9f32 <__sprintf_chk@plt+0x8242>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   1cb0 <opendir@plt>
test   %eax,%eax
mov    %eax,0x3c(%esp)
je     a6e7 <__sprintf_chk@plt+0x89f7>
lea    0x230c(%esp),%eax
mov    %eax,0x4c(%esp)
lea    0x84(%esp),%eax
mov    %eax,0x44(%esp)
lea    -0x7c14(%ebx),%eax
mov    %eax,0x50(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1a10 <readdir64_r@plt>
test   %eax,%eax
jne    9a01 <__sprintf_chk@plt+0x7d11>
mov    0x84(%esp),%esi
test   %esi,%esi
je     9a25 <__sprintf_chk@plt+0x7d35>
lea    0x13(%esi),%ebp
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
cmpb   $0x2e,0x13(%esi)
je     9910 <__sprintf_chk@plt+0x7c20>
cmp    $0x5,%eax
jbe    996c <__sprintf_chk@plt+0x7c7c>
lea    -0x5(%ebp,%eax,1),%esi
mov    $0x6,%ecx
lea    -0x9c06(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     9990 <__sprintf_chk@plt+0x7ca0>
mov    0x40(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x6,(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9910 <__sprintf_chk@plt+0x7c20>
xchg   %ax,%ax
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   17e0 <dirfd@plt>
mov    0x28(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   18c0 <__fxstatat64@plt>
mov    0x120(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     9e20 <__sprintf_chk@plt+0x8130>
mov    0x84(%esp),%esi
lea    0x7c(%esp),%edx
lea    0x80(%esp),%eax
lea    0x13(%esi),%ecx
mov    %ecx,0x4(%esp)
mov    0x40(%esp),%ecx
mov    %ecx,(%esp)
call   58a0 <__sprintf_chk@plt+0x3bb0>
jmp    9910 <__sprintf_chk@plt+0x7c20>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9c18(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1ca0 <closedir@plt>
mov    0x40(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x7bb4(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
addl   $0x4,0x54(%esp)
mov    0x54(%esp),%eax
mov    -0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x40(%esp)
jne    9890 <__sprintf_chk@plt+0x7ba0>
mov    0x7c(%esp),%edx
mov    0x80(%esp),%eax
test   %edx,%edx
je     9c4a <__sprintf_chk@plt+0x7f5a>
lea    -0x9a2e(%ebx),%ecx
lea    -0x9c00(%ebx),%esi
movl   $0x0,0x50(%esp)
mov    %ecx,0x60(%esp)
mov    %esi,0x68(%esp)
xchg   %ax,%ax
mov    0x50(%esp),%ecx
mov    0x60(%esp),%esi
mov    (%eax,%ecx,4),%eax
mov    %esi,0x4(%esp)
movl   $0x0,0x84(%esp)
00
mov    %eax,0x5c(%esp)
add    $0xc,%eax
mov    %eax,(%esp)
mov    %eax,0x58(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x40(%esp)
je     a20d <__sprintf_chk@plt+0x851d>
lea    0x84(%esp),%eax
mov    %eax,0x44(%esp)
lea    -0x9bed(%ebx),%eax
mov    %eax,0x4c(%esp)
jmp    9af0 <__sprintf_chk@plt+0x7e00>
mov    %ebp,(%esp)
call   1800 <free@plt>
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   be80 <__sprintf_chk@plt+0xa190>
test   %eax,%eax
mov    %eax,%ebp
je     9c18 <__sprintf_chk@plt+0x7f28>
movzbl 0x0(%ebp),%eax
cmp    $0x23,%al
je     9ae8 <__sprintf_chk@plt+0x7df8>
test   %al,%al
je     9ae8 <__sprintf_chk@plt+0x7df8>
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
mov    %eax,%edx
je     9ae8 <__sprintf_chk@plt+0x7df8>
mov    $0x7,%ecx
mov    %eax,%esi
lea    -0x9bea(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    9ba8 <__sprintf_chk@plt+0x7eb8>
lea    0x2308(%esp),%eax
mov    %ebp,0x54(%esp)
mov    0x4c(%esp),%ebp
mov    %eax,0x3c(%esp)
jmp    9b83 <__sprintf_chk@plt+0x7e93>
xchg   %ax,%ax
mov    %eax,%esi
mov    $0x9,%ecx
lea    -0x7728(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %dl
movzbl %dl,%edx
mov    %edx,(%esp)
mov    %eax,%edx
mov    0x3c(%esp),%eax
call   70c0 <__sprintf_chk@plt+0x53d0>
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
jne    9b60 <__sprintf_chk@plt+0x7e70>
mov    0x54(%esp),%ebp
jmp    9ae8 <__sprintf_chk@plt+0x7df8>
mov    $0x9,%ecx
mov    %eax,%esi
lea    -0x9be3(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     9d42 <__sprintf_chk@plt+0x8052>
mov    $0x8,%ecx
mov    %eax,%esi
lea    -0x9bab(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     9be3 <__sprintf_chk@plt+0x7ef3>
mov    $0xf,%ecx
mov    %eax,%esi
lea    -0x9ba3(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    9d10 <__sprintf_chk@plt+0x8020>
mov    0x84(%esp),%eax
mov    %edx,0x10(%esp)
movl   $0x6,(%esp)
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x7b64(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9ae8 <__sprintf_chk@plt+0x7df8>
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
addl   $0x1,0x50(%esp)
mov    0x50(%esp),%eax
cmp    0x7c(%esp),%eax
mov    0x80(%esp),%eax
jb     9a98 <__sprintf_chk@plt+0x7da8>
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x2308(%esp),%eax
test   %eax,%eax
je     a54e <__sprintf_chk@plt+0x885e>
mov    0x88(%esp),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   1cb0 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     a51a <__sprintf_chk@plt+0x882a>
mov    0x88(%esp),%eax
mov    0x1004(%eax),%edi
add    $0x4,%eax
mov    %eax,0x4(%esp)
lea    0x230c(%esp),%eax
movl   $0x1000,0xc(%esp)
mov    %eax,%ebp
mov    %eax,(%esp)
mov    %edi,0x8(%esp)
call   19b0 <__memcpy_chk@plt>
mov    0x30(%esp),%eax
mov    %esi,%edx
movb   $0x2f,0x230c(%esp,%edi,1)
movb   $0x0,0x230d(%esp,%edi,1)
add    $0x1,%edi
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   7910 <__sprintf_chk@plt+0x5c20>
mov    %esi,(%esp)
mov    %eax,%edi
call   1ca0 <closedir@plt>
mov    %edi,%eax
test   %eax,%eax
jns    8c46 <__sprintf_chk@plt+0x6f56>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9b8c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8bce <__sprintf_chk@plt+0x6ede>
mov    0x84(%esp),%eax
mov    %edx,0x10(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x7b3c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9ae8 <__sprintf_chk@plt+0x7df8>
mov    0x38(%esp),%edi
mov    %eax,0x3c(%esp)
mov    0x4c(%esp),%eax
movl   $0x0,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
mov    0x4c(%esp),%ecx
mov    %edi,0x8(%esp)
movl   $0x0,(%esp)
mov    %edi,0x38(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,%esi
call   1860 <__strtok_r@plt>
mov    0x4c(%esp),%ecx
movl   $0x0,(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,%edi
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
call   1860 <__strtok_r@plt>
test   %esi,%esi
mov    0x3c(%esp),%edx
mov    %eax,%ecx
je     9d10 <__sprintf_chk@plt+0x8020>
test   %edi,%edi
je     9d10 <__sprintf_chk@plt+0x8020>
test   %eax,%eax
je     9d10 <__sprintf_chk@plt+0x8020>
cmpb   $0x2a,(%edi)
nop
je     9feb <__sprintf_chk@plt+0x82fb>
mov    0x28(%esp),%eax
movl   $0x9,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,(%esp)
call   1bd0 <regcomp@plt>
mov    0x3c(%esp),%ecx
test   %eax,%eax
je     a33f <__sprintf_chk@plt+0x864f>
mov    0x84(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x6,(%esp)
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x7b90(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9ae8 <__sprintf_chk@plt+0x7df8>
mov    0x40(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x7bf0(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9910 <__sprintf_chk@plt+0x7c20>
mov    0x40(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9c44(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9a4f <__sprintf_chk@plt+0x7d5f>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9d44(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8468 <__sprintf_chk@plt+0x6778>
call   1ad0 <__errno_location@plt>
mov    (%eax),%edi
neg    %edi
mov    0xa0(%esp),%eax
mov    %eax,(%esp)
call   b2b0 <__sprintf_chk@plt+0x95c0>
mov    %edi,%eax
jmp    8433 <__sprintf_chk@plt+0x6743>
lea    -0x7c80(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8468 <__sprintf_chk@plt+0x6778>
mov    0x40(%esp),%ecx
lea    0x7c(%esp),%edx
lea    0x80(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %ecx,(%esp)
call   58a0 <__sprintf_chk@plt+0x3bb0>
jmp    9a4f <__sprintf_chk@plt+0x7d5f>
mov    0x30(%esp),%eax
call   72c0 <__sprintf_chk@plt+0x55d0>
mov    0x4c(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9c6e(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
jmp    8b3b <__sprintf_chk@plt+0x6e4b>
mov    0x40(%esp),%eax
mov    %edx,0xc(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x7c34(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9a4f <__sprintf_chk@plt+0x7d5f>
mov    0x4(%edi),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9b3a(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8e9e <__sprintf_chk@plt+0x71ae>
xor    %eax,%eax
jmp    8e96 <__sprintf_chk@plt+0x71a6>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %edi,0x8(%esp)
movl   $0x2,(%esp)
mov    %eax,0xc(%esp)
lea    -0x9e18(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x110(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
jmp    8bce <__sprintf_chk@plt+0x6ede>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %edi,0x8(%esp)
movl   $0x2,(%esp)
mov    %eax,0xc(%esp)
lea    -0x818c(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8bce <__sprintf_chk@plt+0x6ede>
cmpb   $0x0,0x1(%edi)
jne    9dc6 <__sprintf_chk@plt+0x80d6>
mov    %esi,(%esp)
mov    %ecx,0x54(%esp)
call   1a30 <strlen@plt>
mov    0x54(%esp),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x6c(%esp)
mov    %eax,%edi
mov    %eax,0x3c(%esp)
call   1a30 <strlen@plt>
mov    %eax,%edx
lea    0xa(%edi,%edx,1),%eax
mov    %eax,(%esp)
mov    %edx,0x54(%esp)
call   1970 <malloc@plt>
mov    0x54(%esp),%edx
mov    0x6c(%esp),%ecx
test   %eax,%eax
mov    %eax,%edi
je     a708 <__sprintf_chk@plt+0x8a18>
lea    0x8(%eax),%eax
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x6c(%esp)
mov    %eax,0x54(%esp)
call   1810 <memcpy@plt>
mov    0x6c(%esp),%edx
mov    0x3c(%esp),%ecx
movb   $0x2f,0x8(%edi,%edx,1)
add    $0x1,%edx
lea    0x8(%edi,%edx,1),%eax
mov    %ecx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x6c(%esp)
call   1810 <memcpy@plt>
mov    0x3c(%esp),%ecx
mov    0x6c(%esp),%edx
lea    (%edx,%ecx,1),%eax
movb   $0x0,0x8(%edi,%eax,1)
mov    %eax,0x4(%edi)
mov    0x54(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9bbd(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x2304(%esp),%eax
mov    %edi,0x2304(%esp)
mov    %eax,(%edi)
jmp    9ae8 <__sprintf_chk@plt+0x7df8>
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
lea    -0x7888(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8bce <__sprintf_chk@plt+0x6ede>
movl   $0x0,0x8(%esp)
neg    %edi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   18b0 <fseek@plt>
mov    0x38(%esp),%ebp
jmp    a110 <__sprintf_chk@plt+0x8420>
add    $0x1,%edi
mov    %esi,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %ebp,(%esp)
call   1830 <fgets@plt>
test   %eax,%eax
je     a180 <__sprintf_chk@plt+0x8490>
mov    %ebp,%edx
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     a12a <__sprintf_chk@plt+0x843a>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
sub    %ebp,%edx
je     a10d <__sprintf_chk@plt+0x841d>
mov    0xa0(%esp),%eax
movb   $0x0,0x230b(%esp,%edx,1)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   b7a0 <__sprintf_chk@plt+0x9ab0>
test   %eax,%eax
je     a10d <__sprintf_chk@plt+0x841d>
mov    %edi,0x30(%eax)
jmp    a10d <__sprintf_chk@plt+0x841d>
lea    -0x21d60(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   be40 <__sprintf_chk@plt+0xa150>
mov    0x94(%esp),%ecx
xor    %eax,%eax
mov    0x90(%esp),%edi
test   %ecx,%ecx
je     8d9f <__sprintf_chk@plt+0x70af>
xchg   %ax,%ax
mov    (%edi,%eax,4),%edx
mov    %ax,0x38(%edx)
add    $0x1,%eax
cmp    %ecx,%eax
jne    a1b0 <__sprintf_chk@plt+0x84c0>
jmp    8d9f <__sprintf_chk@plt+0x70af>
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
movl   $0x15,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x9d77(%ebx),%eax
mov    %eax,(%esp)
call   1900 <fwrite@plt>
jmp    8468 <__sprintf_chk@plt+0x6778>
lea    -0x9d61(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8468 <__sprintf_chk@plt+0x6778>
mov    0x58(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9c24 <__sprintf_chk@plt+0x7f34>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
lea    -0x7d10(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
neg    %esi
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8873 <__sprintf_chk@plt+0x6b83>
cmpb   $0x0,0x2302(%esp)
je     8b3b <__sprintf_chk@plt+0x6e4b>
lea    -0x9c57(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x4,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
movb   $0x0,0x2302(%esp)
jmp    8b3b <__sprintf_chk@plt+0x6e4b>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x40(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9d13(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,%eax
neg    %eax
test   %eax,%eax
jns    8b3b <__sprintf_chk@plt+0x6e4b>
mov    %esi,(%esp)
call   19a0 <strerror@plt>
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x9ccc(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8468 <__sprintf_chk@plt+0x6778>
mov    0x28(%esp),%eax
movl   $0x1a4,0x14(%esp)
movl   $0x241,0x10(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x9aa6(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    93cc <__sprintf_chk@plt+0x76dc>
call   1ad0 <__errno_location@plt>
mov    (%eax),%edi
mov    0xa4(%esp),%eax
neg    %edi
mov    %eax,(%esp)
call   b2b0 <__sprintf_chk@plt+0x95c0>
jmp    9ea1 <__sprintf_chk@plt+0x81b1>
mov    0x12f8(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %ecx,0x54(%esp)
mov    %eax,(%esp)
call   1ae0 <regexec@plt>
mov    %eax,0x3c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1920 <regfree@plt>
mov    0x3c(%esp),%eax
mov    0x54(%esp),%ecx
test   %eax,%eax
jne    9dee <__sprintf_chk@plt+0x80fe>
jmp    9ff5 <__sprintf_chk@plt+0x8305>
nop
xor    %esi,%esi
cmp    $0xffffffff,%ebp
je     966c <__sprintf_chk@plt+0x797c>
mov    %ebp,(%esp)
call   1c90 <close@plt>
jmp    966c <__sprintf_chk@plt+0x797c>
movzwl 0x38(%esp),%eax
mov    0x4c(%esp),%esi
movl   $0x4,(%esp)
sub    %eax,%esi
lea    -0x7948(%ebx),%eax
mov    %esi,0x8(%esp)
xor    %esi,%esi
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
movzwl 0x44(%esp),%eax
lea    -0x9ac6(%ebx),%edx
sub    $0x1,%eax
movzwl %ax,%eax
lea    0x2(%eax,%eax,1),%eax
jmp    a3f7 <__sprintf_chk@plt+0x8707>
xchg   %ax,%ax
add    $0x2,%esi
cmp    %eax,%esi
je     a445 <__sprintf_chk@plt+0x8755>
cmpw   $0x0,0x0(%ebp,%esi,1)
je     a3f0 <__sprintf_chk@plt+0x8700>
mov    0x90(%esp),%ecx
mov    %eax,0x34(%esp)
mov    %edx,0x28(%esp)
mov    (%ecx,%esi,2),%edi
mov    0x4(%edi),%ecx
mov    %edx,0x4(%esp)
movl   $0x4,(%esp)
mov    %ecx,0x8(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x34(%esp),%eax
orb    $0x1,0x3c(%edi)
addl   $0x1,0xac(%esp)
mov    0x28(%esp),%edx
movl   $0x7fffffff,0x34(%edi)
jmp    a3f0 <__sprintf_chk@plt+0x8700>
mov    0x94(%esp),%eax
mov    0x90(%esp),%esi
jmp    9308 <__sprintf_chk@plt+0x7618>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x4c(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x8(%esp)
lea    -0x9cb5(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,%eax
neg    %eax
test   %eax,%eax
jns    8b3b <__sprintf_chk@plt+0x6e4b>
mov    %esi,(%esp)
call   19a0 <strerror@plt>
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
jmp    a2c8 <__sprintf_chk@plt+0x85d8>
call   1b330 <__sprintf_chk@plt+0x19640>
movl   $0x1c,(%esp)
mov    $0x1,%esi
call   19a0 <strerror@plt>
mov    %eax,0xc(%esp)
mov    (%edi),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x78c0(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    a39a <__sprintf_chk@plt+0x86aa>
call   1ad0 <__errno_location@plt>
mov    0x28(%esp),%ecx
mov    (%eax),%esi
mov    (%edi),%eax
mov    %ecx,0xc(%esp)
movl   $0x2,(%esp)
neg    %esi
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
shr    $0x1f,%esi
mov    %eax,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x9a5b(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    a39a <__sprintf_chk@plt+0x86aa>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x88(%esp),%eax
movl   $0x3,(%esp)
neg    %esi
add    $0x4,%eax
mov    %eax,0x8(%esp)
lea    -0x7d10(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %esi,%eax
jmp    9cdf <__sprintf_chk@plt+0x7fef>
lea    0x2308(%esp),%eax
movl   $0x0,(%esp)
lea    -0x9b94(%ebx),%edx
call   70c0 <__sprintf_chk@plt+0x53d0>
jmp    9c61 <__sprintf_chk@plt+0x7f71>
xor    %eax,%eax
jmp    9c4a <__sprintf_chk@plt+0x7f5a>
mov    0x3c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1770 <open64@plt>
test   %eax,%eax
mov    %eax,%ebp
js     a723 <__sprintf_chk@plt+0x8a33>
lea    -0x3c0(%ebx),%edx
mov    %edx,0x1fc(%ebx)
jmp    9397 <__sprintf_chk@plt+0x76a7>
lea    -0x7780(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x9e5b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x9ad9(%ebx),%eax
movl   $0x66c,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
mov    0x28(%esp),%eax
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x9a87(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    0x28(%esp),%edx
mov    %edx,(%esp)
call   1c90 <close@plt>
jmp    93cc <__sprintf_chk@plt+0x76dc>
lea    -0x9de8(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x4,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    8da7 <__sprintf_chk@plt+0x70b7>
movw   $0x0,0x38(%esp)
jmp    92f0 <__sprintf_chk@plt+0x7600>
lea    -0x7780(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x9e5b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x7968(%ebx),%eax
movl   $0x64f,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
mov    0x28(%esp),%eax
mov    %edx,%edi
movl   $0x0,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   17d0 <unlinkat@plt>
test   %eax,%eax
je     a6a4 <__sprintf_chk@plt+0x89b4>
mov    0x28(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x9a71(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
mov    %edi,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %eax,0xc(%esp)
mov    0x1fc(%ebx),%eax
mov    (%eax),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
lea    -0x78e0(%ebx),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
shr    $0x1f,%esi
jmp    a39a <__sprintf_chk@plt+0x86aa>
mov    0x40(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x4(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9a4f <__sprintf_chk@plt+0x7d5f>
lea    -0x9bda(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    9ae8 <__sprintf_chk@plt+0x7df8>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x3c(%esp),%eax
movl   $0x2,(%esp)
neg    %esi
mov    %eax,0x8(%esp)
lea    -0x7d10(%ebx),%eax
mov    %eax,0x4(%esp)
shr    $0x1f,%esi
call   a9e0 <__sprintf_chk@plt+0x8cf0>
jmp    966c <__sprintf_chk@plt+0x797c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c894,%ebx
mov    0x88(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x90(%esp),%ebp
cmpl   $0x7,0x84(%esp)
mov    0x94(%esp),%edx
mov    0x98(%esp),%ecx
ja     a8b0 <__sprintf_chk@plt+0x8bc0>
mov    0x84(%esp),%eax
mov    -0x76cc(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
lea    -0x7719(%ebx),%esi
xchg   %ax,%ax
lea    0x38(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1a90 <__vasprintf_chk@plt>
test   %eax,%eax
js     a841 <__sprintf_chk@plt+0x8b51>
cmpb   $0x0,0x200(%ebx)
mov    0x38(%esp),%eax
je     a900 <__sprintf_chk@plt+0x8c10>
mov    %eax,0x1c(%esp)
mov    0x8c(%esp),%eax
mov    %ebp,0x18(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x14(%esp)
lea    -0x76ec(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1b70 <__syslog_chk@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x5c(%esp),%eax
xor    %gs:0x14,%eax
jne    a94e <__sprintf_chk@plt+0x8c5e>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x7713(%ebx),%esi
jmp    a7c8 <__sprintf_chk@plt+0x8ad8>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x770b(%ebx),%esi
jmp    a7c8 <__sprintf_chk@plt+0x8ad8>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x7704(%ebx),%esi
jmp    a7c8 <__sprintf_chk@plt+0x8ad8>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x76ff(%ebx),%esi
jmp    a7c8 <__sprintf_chk@plt+0x8ad8>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x771f(%ebx),%esi
jmp    a7c8 <__sprintf_chk@plt+0x8ad8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
lea    0x3c(%esp),%esi
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x76f9(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
call   1730 <__snprintf_chk@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
jmp    a7c8 <__sprintf_chk@plt+0x8ad8>
xchg   %ax,%ax
mov    %eax,0x20(%esp)
mov    0x8c(%esp),%eax
mov    %ebp,0x1c(%esp)
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0x18(%esp)
mov    -0xc(%ebx),%eax
mov    (%eax),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x76f0(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    a835 <__sprintf_chk@plt+0x8b45>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c697,%ebx
mov    0x20(%esp),%eax
test   %al,%al
mov    %al,0x200(%ebx)
je     a99d <__sprintf_chk@plt+0x8cad>
mov    -0xc(%ebx),%eax
movl   $0x18,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   1be0 <openlog@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c64a,%ebx
sub    $0x8,%esp
cmpb   $0x0,0x200(%ebx)
je     a9cd <__sprintf_chk@plt+0x8cdd>
call   1a00 <closelog@plt>
add    $0x8,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c618,%ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
mov    %gs:0x14,%ecx
mov    %ecx,0x4c(%esp)
xor    %ecx,%ecx
mov    0x64(%esp),%eax
cmp    %esi,0x1ac(%ebx)
jge    aa28 <__sprintf_chk@plt+0x8d38>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    ab6b <__sprintf_chk@plt+0x8e7b>
add    $0x50,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x68(%esp),%edx
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %edx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1a90 <__vasprintf_chk@plt>
test   %eax,%eax
js     aa0e <__sprintf_chk@plt+0x8d1e>
mov    0x28(%esp),%eax
test   %eax,%eax
je     aa0e <__sprintf_chk@plt+0x8d1e>
cmp    $0x7,%esi
ja     aaf0 <__sprintf_chk@plt+0x8e00>
mov    -0x76ac(%ebx,%esi,4),%edi
lea    (%edi,%ebx,1),%edx
jmp    *%edx
lea    0x0(%esi,%eiz,1),%esi
lea    -0x7719(%ebx),%edx
xchg   %ax,%ax
cmpb   $0x0,0x200(%ebx)
je     ab30 <__sprintf_chk@plt+0x8e40>
mov    %eax,0x10(%esp)
lea    -0x76d6(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   1b70 <__syslog_chk@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
cmp    $0x2,%esi
jg     aa0e <__sprintf_chk@plt+0x8d1e>
movl   $0x1,(%esp)
call   19d0 <exit@plt>
lea    -0x7713(%ebx),%edx
jmp    aa78 <__sprintf_chk@plt+0x8d88>
lea    -0x770b(%ebx),%edx
jmp    aa78 <__sprintf_chk@plt+0x8d88>
lea    -0x7704(%ebx),%edx
jmp    aa78 <__sprintf_chk@plt+0x8d88>
lea    -0x76ff(%ebx),%edx
jmp    aa78 <__sprintf_chk@plt+0x8d88>
lea    -0x771f(%ebx),%edx
jmp    aa78 <__sprintf_chk@plt+0x8d88>
lea    -0x76f9(%ebx),%eax
lea    0x2c(%esp),%edi
mov    %esi,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x20,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   1730 <__snprintf_chk@plt>
mov    0x28(%esp),%eax
mov    %edi,%edx
jmp    aa78 <__sprintf_chk@plt+0x8d88>
lea    0x0(%esi),%esi
mov    %eax,0x14(%esp)
mov    -0xc(%ebx),%eax
mov    %edx,0x10(%esp)
mov    (%eax),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x76da(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    aaa7 <__sprintf_chk@plt+0x8db7>
call   1b330 <__sprintf_chk@plt+0x19640>
push   %esi
push   %ebx
sub    $0x14,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c486,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x1ac(%ebx)
call   cd40 <__sprintf_chk@plt+0xb050>
lea    -0x1c8a0(%ebx),%eax
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
call   c9d0 <__sprintf_chk@plt+0xace0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c437,%ebx
sub    $0x1c,%esp
mov    -0xc(%ebx),%eax
lea    -0x1e0(%ebx),%esi
lea    0xc(%esi),%edi
lea    -0x732b(%ebx),%ebp
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x768c(%ebx),%eax
mov    %eax,0x4(%esp)
call   1b30 <__printf_chk@plt>
mov    (%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     ac26 <__sprintf_chk@plt+0x8f36>
mov    %edx,0xc(%esp)
mov    (%eax),%eax
mov    %ebp,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
call   1b30 <__printf_chk@plt>
add    $0x4,%esi
cmp    %edi,%esi
jne    ac03 <__sprintf_chk@plt+0x8f13>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c3ba,%ebx
sub    $0x28,%esp
cmpb   $0x63,0x3c(%esp)
movl   $0x1,0x4(%esp)
lea    -0x7316(%ebx),%edx
lea    -0x7320(%ebx),%eax
cmovne %edx,%eax
mov    0x44(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x1c(%esp)
mov    0x40(%esp),%edx
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %edx,0x18(%esp)
mov    %eax,0xc(%esp)
lea    -0x7570(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
add    $0x28,%esp
pop    %ebx
shr    $0x1f,%eax
ret
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
mov    0x44(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c343,%ebx
movl   $0x1,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x18(%esp)
movsbl 0x3c(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x9f34(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
add    $0x28,%esp
pop    %ebx
shr    $0x1f,%eax
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c2e4,%ebx
mov    0x48(%esp),%esi
movl   $0x2f,0x4(%esp)
mov    0x40(%esp),%edi
mov    0x4c(%esp),%ebp
mov    %esi,(%esp)
call   1ba0 <strrchr@plt>
test   %eax,%eax
je     ad6a <__sprintf_chk@plt+0x907a>
sub    %esi,%eax
mov    %eax,0xc(%esp)
lea    -0x72f3(%ebx),%eax
mov    %esi,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   1c40 <__fprintf_chk@plt>
test   %eax,%eax
js     adb0 <__sprintf_chk@plt+0x90c0>
mov    0x54(%esp),%eax
mov    %esi,0x10(%esp)
mov    %edi,(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x14(%esp)
mov    %ebp,%eax
movsbl %al,%ebp
lea    -0x7310(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
call   1c40 <__fprintf_chk@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
shr    $0x1f,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1c237,%ebx
sub    $0x41ec,%esp
mov    0x4204(%esp),%eax
lea    0x50(%esp),%ebp
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x41dc(%esp)
xor    %eax,%eax
lea    -0x72db(%ebx),%eax
mov    %eax,0x30(%esp)
lea    -0x220(%ebx),%eax
mov    %eax,0x24(%esp)
lea    -0x724f(%ebx),%eax
lea    -0x1bc(%ebx),%edi
mov    %eax,0x28(%esp)
mov    0x24(%esp),%eax
mov    %ebp,0x10(%esp)
movl   $0x0,0x50(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x4200(%esp),%eax
mov    %eax,(%esp)
call   19f0 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     af60 <__sprintf_chk@plt+0x9270>
cmp    $0x66,%eax
je     aee8 <__sprintf_chk@plt+0x91f8>
lea    0x0(%esi,%eiz,1),%esi
jle    aea8 <__sprintf_chk@plt+0x91b8>
cmp    $0x68,%eax
je     ae80 <__sprintf_chk@plt+0x9190>
cmp    $0x6f,%eax
jne    aeb2 <__sprintf_chk@plt+0x91c2>
mov    -0x4(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x30(%esp)
jmp    ae17 <__sprintf_chk@plt+0x9127>
lea    0x0(%esi),%esi
call   abc0 <__sprintf_chk@plt+0x8ed0>
xor    %esi,%esi
mov    0x41dc(%esp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    b213 <__sprintf_chk@plt+0x9523>
add    $0x41ec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x3f,%eax
mov    $0x1,%esi
je     ae87 <__sprintf_chk@plt+0x9197>
mov    %eax,0xc(%esp)
lea    -0x7524(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
mov    $0x1,%esi
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
call   abc0 <__sprintf_chk@plt+0x8ed0>
jmp    ae87 <__sprintf_chk@plt+0x9197>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4(%ebx),%eax
lea    -0x1e0(%ebx),%esi
xor    %ecx,%ecx
mov    %ebp,0x3c(%esp)
mov    %edi,%ebp
mov    (%eax),%eax
mov    %eax,0x34(%esp)
lea    0xc(%esi),%eax
mov    %eax,0x38(%esp)
mov    (%esi),%edi
mov    0x34(%esp),%eax
mov    %ecx,0x2c(%esp)
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   1750 <strcmp@plt>
mov    0x2c(%esp),%ecx
test   %eax,%eax
mov    $0x1,%eax
cmove  %edi,%ebp
cmove  %eax,%ecx
add    $0x4,%esi
cmp    0x38(%esp),%esi
jne    af09 <__sprintf_chk@plt+0x9219>
test   %ecx,%ecx
mov    %ebp,%edi
mov    0x3c(%esp),%ebp
jne    ae17 <__sprintf_chk@plt+0x9127>
mov    0x34(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x72cf(%ebx),%eax
jmp    aebc <__sprintf_chk@plt+0x91cc>
lea    0x0(%esi,%eiz,1),%esi
lea    0x56(%esp),%eax
mov    %eax,(%esp)
call   1880 <uname@plt>
test   %eax,%eax
js     b109 <__sprintf_chk@plt+0x9419>
lea    0x1dc(%esp),%edx
lea    -0x74fc(%ebx),%eax
lea    0xd8(%esp),%esi
mov    %edx,(%esp)
mov    %esi,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %edx,0x20(%esp)
call   1730 <__snprintf_chk@plt>
mov    0x20(%esp),%edx
lea    -0x72a2(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     b13d <__sprintf_chk@plt+0x944d>
mov    0x30(%esp),%eax
movl   $0x1ed,0x4(%esp)
mov    %eax,(%esp)
call   c600 <__sprintf_chk@plt+0xa910>
test   %eax,%eax
js     b17b <__sprintf_chk@plt+0x948b>
lea    -0x729f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     b218 <__sprintf_chk@plt+0x9528>
lea    0x11dc(%esp),%eax
xor    %esi,%esi
mov    %eax,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x1000,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1830 <fgets@plt>
test   %eax,%eax
je     b0ec <__sprintf_chk@plt+0x93fc>
cmpb   $0x23,0x11dc(%esp)
je     b028 <__sprintf_chk@plt+0x9338>
lea    0x4c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x4b(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x21dc(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x31dc(%esp),%edx
mov    %eax,0x8(%esp)
lea    -0x729c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %edx,0xc(%esp)
mov    %ebp,0x18(%esp)
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   1bc0 <sscanf@plt>
mov    0x28(%esp),%edx
cmp    $0x5,%eax
jne    b0b8 <__sprintf_chk@plt+0x93c8>
movsbl 0x4b(%esp),%eax
lea    -0x62(%eax),%ecx
cmp    $0x1,%cl
jbe    b1bb <__sprintf_chk@plt+0x94cb>
mov    0x20(%esp),%eax
mov    $0x1,%esi
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x7404(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    b028 <__sprintf_chk@plt+0x9338>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
jmp    ae87 <__sprintf_chk@plt+0x9197>
mov    -0x28(%ebx),%eax
mov    $0x1,%esi
mov    (%eax),%eax
movl   $0x15,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x72b8(%ebx),%eax
mov    %eax,(%esp)
call   1900 <fwrite@plt>
jmp    ae87 <__sprintf_chk@plt+0x9197>
call   1ad0 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %esi,0xc(%esp)
je     b1ea <__sprintf_chk@plt+0x94fa>
lea    -0x749c(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    ae87 <__sprintf_chk@plt+0x9197>
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x7460(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
mov    $0x1,%esi
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
jmp    ae87 <__sprintf_chk@plt+0x9197>
mov    0x50(%esp),%ecx
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    0x4c(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
call   *0x4(%edi)
jmp    b028 <__sprintf_chk@plt+0x9338>
lea    -0x74dc(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x8(%esp)
mov    -0x28(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c40 <__fprintf_chk@plt>
jmp    ae87 <__sprintf_chk@plt+0x9197>
call   1b330 <__sprintf_chk@plt+0x19640>
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x7428(%ebx),%eax
jmp    b189 <__sprintf_chk@plt+0x9499>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1bdc2,%ebx
movl   $0x1,(%esp)
lea    (%esi,%esi,2),%eax
lea    0x10(,%eax,4),%eax
mov    %eax,0x4(%esp)
call   1ce0 <calloc@plt>
test   %eax,%eax
je     b2a8 <__sprintf_chk@plt+0x95b8>
mov    0x24(%esp),%edx
mov    %esi,0x8(%eax)
shr    $0x5,%esi
test   %esi,%esi
mov    %edx,0xc(%eax)
je     b288 <__sprintf_chk@plt+0x9598>
cmp    $0x40,%esi
ja     b298 <__sprintf_chk@plt+0x95a8>
mov    %esi,0x4(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,0x4(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x40,0x4(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    b27b <__sprintf_chk@plt+0x958b>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1bd40,%ebx
test   %edi,%edi
je     b33f <__sprintf_chk@plt+0x964f>
lea    0x10(%edi),%eax
mov    %eax,%ecx
mov    %eax,0x8(%esp)
mov    0x8(%edi),%eax
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%eax
cmp    %eax,%ecx
mov    %eax,0xc(%esp)
jae    b337 <__sprintf_chk@plt+0x9647>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%edi),%edx
mov    0x8(%esp),%eax
test   %edx,%edx
je     b31e <__sprintf_chk@plt+0x962e>
mov    (%eax),%ebp
mov    0x4(%eax),%ecx
lea    0x0(%ebp,%ecx,8),%esi
cmp    %esi,%ebp
jb     b30b <__sprintf_chk@plt+0x961b>
jmp    b347 <__sprintf_chk@plt+0x9657>
lea    0x0(%esi),%esi
mov    0xc(%edi),%edx
mov    0x4(%ebp),%eax
add    $0x8,%ebp
mov    %eax,(%esp)
call   *%edx
cmp    %ebp,%esi
ja     b308 <__sprintf_chk@plt+0x9618>
mov    0x8(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
addl   $0xc,0x8(%esp)
mov    0x8(%esp),%eax
cmp    %eax,0xc(%esp)
ja     b2e8 <__sprintf_chk@plt+0x95f8>
mov    %edi,(%esp)
call   1800 <free@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%eax
jmp    b320 <__sprintf_chk@plt+0x9630>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1bca4,%ebx
mov    0x44(%esp),%esi
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    %eax,%edi
mov    %eax,%ecx
shr    $0x2,%edi
and    $0x3,%ecx
test   %edi,%edi
mov    %ecx,0x18(%esp)
mov    %esi,%ecx
mov    %edi,0x1c(%esp)
je     b3c0 <__sprintf_chk@plt+0x96d0>
lea    0x2(%esi),%ebp
lea    0x0(%esi,%eiz,1),%esi
movzwl (%ecx),%edx
add    %edx,%eax
mov    %eax,%edx
shl    $0x10,%edx
xor    %eax,%edx
mov    %ecx,%eax
sub    %esi,%eax
add    $0x4,%ecx
movzwl 0x0(%ebp,%eax,1),%eax
shl    $0xb,%eax
xor    %eax,%edx
mov    %edx,%eax
shr    $0xb,%eax
add    %edx,%eax
sub    $0x1,%edi
jne    b390 <__sprintf_chk@plt+0x96a0>
mov    0x1c(%esp),%edi
lea    (%esi,%edi,4),%ecx
mov    0x18(%esp),%edi
cmp    $0x2,%edi
je     b538 <__sprintf_chk@plt+0x9848>
cmp    $0x3,%edi
je     b550 <__sprintf_chk@plt+0x9860>
cmp    $0x1,%edi
je     b4e0 <__sprintf_chk@plt+0x97f0>
lea    0x0(,%eax,8),%edx
mov    0x40(%esp),%ecx
xor    %eax,%edx
mov    %edx,%eax
shr    $0x5,%eax
add    %eax,%edx
mov    %edx,%eax
shl    $0x4,%eax
xor    %edx,%eax
mov    %eax,%edx
shr    $0x11,%edx
add    %eax,%edx
mov    %edx,%eax
shl    $0x19,%eax
xor    %edx,%eax
mov    %eax,%edx
shr    $0x6,%edx
add    %edx,%eax
xor    %edx,%edx
divl   0x8(%ecx)
lea    (%edx,%edx,2),%eax
lea    0x10(%ecx,%eax,4),%eax
mov    0x4(%eax),%ecx
mov    %eax,0x1c(%esp)
mov    %ecx,%edi
mov    %ecx,0x18(%esp)
mov    %eax,%ecx
mov    0x8(%eax),%eax
lea    0x1(%edi),%edx
cmp    %eax,%edx
jae    b4f8 <__sprintf_chk@plt+0x9808>
mov    (%ecx),%ebp
mov    0x18(%esp),%eax
lea    0x0(%ebp,%eax,8),%edi
cmp    %ebp,%edi
ja     b452 <__sprintf_chk@plt+0x9762>
jmp    b4b0 <__sprintf_chk@plt+0x97c0>
js     b490 <__sprintf_chk@plt+0x97a0>
add    $0x8,%ebp
cmp    %ebp,%edi
nop
jbe    b4b0 <__sprintf_chk@plt+0x97c0>
mov    0x0(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    b448 <__sprintf_chk@plt+0x9758>
mov    0x40(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     b478 <__sprintf_chk@plt+0x9788>
mov    0x4(%ebp),%ecx
mov    %ecx,(%esp)
call   *%eax
mov    0x48(%esp),%eax
mov    %eax,0x4(%ebp)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x8(%ebp),%eax
sub    %ebp,%edi
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   17f0 <memmove@plt>
mov    0x1c(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x18(%esp)
mov    0x48(%esp),%eax
mov    %esi,0x0(%ebp)
mov    0x1c(%esp),%esi
mov    %eax,0x4(%ebp)
mov    0x18(%esp),%eax
add    $0x1,%eax
mov    %eax,0x4(%esi)
mov    0x40(%esp),%eax
addl   $0x1,(%eax)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movsbl (%ecx),%edx
add    %edx,%eax
mov    %eax,%ecx
shl    $0xa,%ecx
xor    %eax,%ecx
mov    %ecx,%eax
shr    %eax
add    %ecx,%eax
jmp    b3df <__sprintf_chk@plt+0x96ef>
nop
mov    0x40(%esp),%edi
add    0x4(%edi),%eax
mov    %eax,%edi
lea    0x0(,%eax,8),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1960 <realloc@plt>
test   %eax,%eax
je     b571 <__sprintf_chk@plt+0x9881>
mov    0x1c(%esp),%ecx
mov    %eax,%ebp
mov    %edi,0x8(%ecx)
mov    0x4(%ecx),%edi
mov    %eax,(%ecx)
mov    %edi,0x18(%esp)
jmp    b43a <__sprintf_chk@plt+0x974a>
lea    0x0(%esi),%esi
movzwl (%ecx),%edx
add    %edx,%eax
mov    %eax,%ecx
shl    $0xb,%ecx
xor    %eax,%ecx
mov    %ecx,%eax
shr    $0x11,%eax
add    %ecx,%eax
jmp    b3df <__sprintf_chk@plt+0x96ef>
movzwl (%ecx),%edx
add    %edx,%eax
mov    %eax,%edi
shl    $0x10,%edi
xor    %eax,%edi
movsbl 0x2(%ecx),%eax
shl    $0x12,%eax
xor    %eax,%edi
mov    %edi,%eax
shr    $0xb,%eax
add    %edi,%eax
jmp    b3df <__sprintf_chk@plt+0x96ef>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    b4d1 <__sprintf_chk@plt+0x97e1>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ba74,%ebx
mov    0x44(%esp),%esi
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    %eax,%edi
mov    %eax,%ecx
shr    $0x2,%edi
and    $0x3,%ecx
test   %edi,%edi
mov    %ecx,0x18(%esp)
mov    %esi,%ecx
mov    %edi,0x1c(%esp)
je     b5f0 <__sprintf_chk@plt+0x9900>
lea    0x2(%esi),%ebp
lea    0x0(%esi,%eiz,1),%esi
movzwl (%ecx),%edx
add    %edx,%eax
mov    %eax,%edx
shl    $0x10,%edx
xor    %eax,%edx
mov    %ecx,%eax
sub    %esi,%eax
add    $0x4,%ecx
movzwl 0x0(%ebp,%eax,1),%eax
shl    $0xb,%eax
xor    %eax,%edx
mov    %edx,%eax
shr    $0xb,%eax
add    %edx,%eax
sub    $0x1,%edi
jne    b5c0 <__sprintf_chk@plt+0x98d0>
mov    0x1c(%esp),%ecx
lea    (%esi,%ecx,4),%ecx
mov    0x18(%esp),%edi
cmp    $0x2,%edi
je     b750 <__sprintf_chk@plt+0x9a60>
cmp    $0x3,%edi
je     b768 <__sprintf_chk@plt+0x9a78>
cmp    $0x1,%edi
je     b6f8 <__sprintf_chk@plt+0x9a08>
lea    0x0(,%eax,8),%edx
mov    0x40(%esp),%ecx
xor    %eax,%edx
mov    %edx,%eax
shr    $0x5,%eax
add    %eax,%edx
mov    %edx,%eax
shl    $0x4,%eax
xor    %edx,%eax
mov    %eax,%edx
shr    $0x11,%edx
add    %eax,%edx
mov    %edx,%eax
shl    $0x19,%eax
xor    %edx,%eax
mov    %eax,%edx
shr    $0x6,%edx
add    %edx,%eax
xor    %edx,%edx
divl   0x8(%ecx)
lea    (%edx,%edx,2),%eax
lea    0x10(%ecx,%eax,4),%eax
mov    0x4(%eax),%ecx
mov    %eax,0x1c(%esp)
mov    %ecx,%edi
mov    %ecx,0x18(%esp)
mov    %eax,%ecx
mov    0x8(%eax),%eax
lea    0x1(%edi),%edx
cmp    %eax,%edx
jae    b710 <__sprintf_chk@plt+0x9a20>
mov    (%ecx),%ebp
mov    0x18(%esp),%eax
lea    0x0(%ebp,%eax,8),%edi
cmp    %ebp,%edi
ja     b682 <__sprintf_chk@plt+0x9992>
jmp    b6c8 <__sprintf_chk@plt+0x99d8>
js     b6a8 <__sprintf_chk@plt+0x99b8>
add    $0x8,%ebp
cmp    %ebp,%edi
nop
jbe    b6c8 <__sprintf_chk@plt+0x99d8>
mov    0x0(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    b678 <__sprintf_chk@plt+0x9988>
add    $0x2c,%esp
mov    $0xffffffef,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x8(%ebp),%eax
sub    %ebp,%edi
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   17f0 <memmove@plt>
mov    0x1c(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x18(%esp)
mov    0x48(%esp),%eax
mov    %esi,0x0(%ebp)
mov    0x1c(%esp),%esi
mov    %eax,0x4(%ebp)
mov    0x18(%esp),%eax
add    $0x1,%eax
mov    %eax,0x4(%esi)
mov    0x40(%esp),%eax
addl   $0x1,(%eax)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movsbl (%ecx),%edx
add    %edx,%eax
mov    %eax,%ecx
shl    $0xa,%ecx
xor    %eax,%ecx
mov    %ecx,%eax
shr    %eax
add    %ecx,%eax
jmp    b60f <__sprintf_chk@plt+0x991f>
nop
mov    0x40(%esp),%edi
add    0x4(%edi),%eax
mov    %eax,%edi
lea    0x0(,%eax,8),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   1960 <realloc@plt>
test   %eax,%eax
je     b789 <__sprintf_chk@plt+0x9a99>
mov    0x1c(%esp),%ecx
mov    %eax,%ebp
mov    %edi,0x8(%ecx)
mov    0x4(%ecx),%edi
mov    %eax,(%ecx)
mov    %edi,0x18(%esp)
jmp    b66a <__sprintf_chk@plt+0x997a>
lea    0x0(%esi),%esi
movzwl (%ecx),%edx
add    %edx,%eax
mov    %eax,%ecx
shl    $0xb,%ecx
xor    %eax,%ecx
mov    %ecx,%eax
shr    $0x11,%eax
add    %ecx,%eax
jmp    b60f <__sprintf_chk@plt+0x991f>
movzwl (%ecx),%edx
add    %edx,%eax
mov    %eax,%edi
shl    $0x10,%edi
xor    %eax,%edi
movsbl 0x2(%ecx),%eax
shl    $0x12,%eax
xor    %eax,%edi
mov    %edi,%eax
shr    $0xb,%eax
add    %edi,%eax
jmp    b60f <__sprintf_chk@plt+0x991f>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    b6e9 <__sprintf_chk@plt+0x99f9>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1b854,%ebx
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1a30 <strlen@plt>
mov    %eax,%ebp
mov    %eax,%ecx
shr    $0x2,%ebp
and    $0x3,%ecx
test   %ebp,%ebp
mov    %ecx,0x8(%esp)
je     b938 <__sprintf_chk@plt+0x9c48>
mov    0x34(%esp),%ecx
mov    %ebp,%esi
mov    %ebp,0xc(%esp)
mov    %ecx,%edi
mov    %ecx,%ebp
add    $0x2,%edi
lea    0x0(%esi),%esi
movzwl (%ecx),%edx
add    %edx,%eax
mov    %eax,%edx
shl    $0x10,%edx
xor    %eax,%edx
mov    %ecx,%eax
sub    %ebp,%eax
add    $0x4,%ecx
movzwl (%edi,%eax,1),%eax
shl    $0xb,%eax
xor    %eax,%edx
mov    %edx,%eax
shr    $0xb,%eax
add    %edx,%eax
sub    $0x1,%esi
jne    b7e8 <__sprintf_chk@plt+0x9af8>
mov    0xc(%esp),%ebp
mov    0x34(%esp),%ecx
lea    (%ecx,%ebp,4),%edx
mov    0x8(%esp),%ecx
cmp    $0x2,%ecx
je     b920 <__sprintf_chk@plt+0x9c30>
cmp    $0x3,%ecx
je     b8f8 <__sprintf_chk@plt+0x9c08>
cmp    $0x1,%ecx
je     b8da <__sprintf_chk@plt+0x9bea>
lea    0x0(,%eax,8),%edx
mov    0x30(%esp),%ecx
xor    %eax,%edx
mov    %edx,%eax
shr    $0x5,%eax
add    %eax,%edx
mov    %edx,%eax
shl    $0x4,%eax
xor    %edx,%eax
mov    %eax,%edx
shr    $0x11,%edx
add    %eax,%edx
mov    %edx,%eax
shl    $0x19,%eax
xor    %edx,%eax
mov    %eax,%edx
shr    $0x6,%edx
add    %edx,%eax
xor    %edx,%edx
divl   0x8(%ecx)
movl   $0x0,0x8(%esp)
lea    (%edx,%edx,2),%eax
lea    0x10(%ecx,%eax,4),%eax
mov    0x4(%eax),%edi
mov    (%eax),%eax
mov    %eax,0xc(%esp)
cmp    %edi,0x8(%esp)
jb     b898 <__sprintf_chk@plt+0x9ba8>
jmp    b8d0 <__sprintf_chk@plt+0x9be0>
nop
cmp    0x8(%esp),%esi
jbe    b8d0 <__sprintf_chk@plt+0x9be0>
mov    %esi,%edi
mov    0x8(%esp),%eax
lea    (%edi,%eax,1),%esi
mov    0xc(%esp),%eax
shr    %esi
lea    (%eax,%esi,8),%ebp
mov    0x0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
js     b890 <__sprintf_chk@plt+0x9ba0>
je     b941 <__sprintf_chk@plt+0x9c51>
lea    0x1(%esi),%eax
mov    %eax,0x8(%esp)
jmp    b887 <__sprintf_chk@plt+0x9b97>
xchg   %ax,%ax
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movsbl (%edx),%edx
add    %edx,%eax
mov    %eax,%edx
shl    $0xa,%edx
xor    %eax,%edx
mov    %edx,%eax
shr    %eax
add    %edx,%eax
jmp    b83a <__sprintf_chk@plt+0x9b4a>
lea    0x0(%esi,%eiz,1),%esi
movzwl (%edx),%ecx
add    %ecx,%eax
mov    %eax,%ecx
shl    $0x10,%ecx
xor    %eax,%ecx
movsbl 0x2(%edx),%eax
shl    $0x12,%eax
xor    %eax,%ecx
mov    %ecx,%eax
shr    $0xb,%eax
add    %ecx,%eax
jmp    b83a <__sprintf_chk@plt+0x9b4a>
lea    0x0(%esi,%eiz,1),%esi
movzwl (%edx),%edx
add    %edx,%eax
mov    %eax,%edx
shl    $0xb,%edx
xor    %eax,%edx
mov    %edx,%eax
shr    $0x11,%eax
add    %edx,%eax
jmp    b83a <__sprintf_chk@plt+0x9b4a>
mov    0x34(%esp),%edx
jmp    b81b <__sprintf_chk@plt+0x9b2b>
mov    0x4(%ebp),%eax
jmp    b8d2 <__sprintf_chk@plt+0x9be2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1b6a4,%ebx
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   1a30 <strlen@plt>
mov    %eax,%ebp
mov    %eax,%ecx
shr    $0x2,%ebp
and    $0x3,%ecx
test   %ebp,%ebp
mov    %ecx,0x10(%esp)
je     baf8 <__sprintf_chk@plt+0x9e08>
mov    0x44(%esp),%ecx
mov    %ebp,%esi
mov    %ebp,0x14(%esp)
mov    %ecx,%edi
mov    %ecx,%ebp
add    $0x2,%edi
lea    0x0(%esi),%esi
movzwl (%ecx),%edx
add    %edx,%eax
mov    %eax,%edx
shl    $0x10,%edx
xor    %eax,%edx
mov    %ecx,%eax
sub    %ebp,%eax
add    $0x4,%ecx
movzwl (%edi,%eax,1),%eax
shl    $0xb,%eax
xor    %eax,%edx
mov    %edx,%eax
shr    $0xb,%eax
add    %edx,%eax
sub    $0x1,%esi
jne    b998 <__sprintf_chk@plt+0x9ca8>
mov    0x14(%esp),%ebp
mov    0x44(%esp),%ecx
lea    (%ecx,%ebp,4),%edx
mov    0x10(%esp),%ecx
cmp    $0x2,%ecx
je     bae0 <__sprintf_chk@plt+0x9df0>
cmp    $0x3,%ecx
je     bab8 <__sprintf_chk@plt+0x9dc8>
cmp    $0x1,%ecx
je     ba9f <__sprintf_chk@plt+0x9daf>
lea    0x0(,%eax,8),%edx
mov    0x40(%esp),%edi
xor    %eax,%edx
mov    %edx,%eax
shr    $0x5,%eax
add    %eax,%edx
mov    %edx,%eax
shl    $0x4,%eax
xor    %edx,%eax
mov    %eax,%edx
shr    $0x11,%edx
add    %eax,%edx
mov    %edx,%eax
shl    $0x19,%eax
xor    %edx,%eax
mov    %eax,%edx
shr    $0x6,%edx
add    %edx,%eax
xor    %edx,%edx
divl   0x8(%edi)
movl   $0x0,0x10(%esp)
lea    (%edx,%edx,2),%eax
lea    0x10(%edi,%eax,4),%eax
mov    0x4(%eax),%ecx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %ecx,0x1c(%esp)
mov    %ecx,%ebp
mov    %eax,0x14(%esp)
cmp    %ebp,0x10(%esp)
jb     ba58 <__sprintf_chk@plt+0x9d68>
jmp    ba90 <__sprintf_chk@plt+0x9da0>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x10(%esp),%esi
jbe    ba90 <__sprintf_chk@plt+0x9da0>
mov    %esi,%ebp
mov    0x10(%esp),%eax
lea    0x0(%ebp,%eax,1),%esi
mov    0x14(%esp),%eax
shr    %esi
lea    (%eax,%esi,8),%edi
mov    (%edi),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
js     ba50 <__sprintf_chk@plt+0x9d60>
je     bb01 <__sprintf_chk@plt+0x9e11>
lea    0x1(%esi),%eax
mov    %eax,0x10(%esp)
jmp    ba41 <__sprintf_chk@plt+0x9d51>
xchg   %ax,%ax
mov    $0xfffffffe,%ecx
add    $0x2c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movsbl (%edx),%edx
add    %edx,%eax
mov    %eax,%edx
shl    $0xa,%edx
xor    %eax,%edx
mov    %edx,%eax
shr    %eax
add    %edx,%eax
jmp    b9ea <__sprintf_chk@plt+0x9cfa>
xchg   %ax,%ax
movzwl (%edx),%ecx
add    %ecx,%eax
mov    %eax,%ecx
shl    $0x10,%ecx
xor    %eax,%ecx
movsbl 0x2(%edx),%eax
shl    $0x12,%eax
xor    %eax,%ecx
mov    %ecx,%eax
shr    $0xb,%eax
add    %ecx,%eax
jmp    b9ea <__sprintf_chk@plt+0x9cfa>
lea    0x0(%esi,%eiz,1),%esi
movzwl (%edx),%edx
add    %edx,%eax
mov    %eax,%edx
shl    $0xb,%edx
xor    %eax,%edx
mov    %edx,%eax
shr    $0x11,%eax
add    %edx,%eax
jmp    b9ea <__sprintf_chk@plt+0x9cfa>
mov    0x44(%esp),%edx
jmp    b9cb <__sprintf_chk@plt+0x9cdb>
mov    %eax,%ecx
mov    0x40(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     bbc3 <__sprintf_chk@plt+0x9ed3>
mov    0x4(%edi),%edx
mov    %ecx,0x10(%esp)
mov    %edx,(%esp)
call   *%eax
mov    0x18(%esp),%eax
mov    (%eax),%ecx
mov    0x4(%eax),%eax
mov    %ecx,0x14(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,0x1c(%esp)
mov    0x14(%esp),%ecx
mov    %edi,(%esp)
lea    (%ecx,%eax,8),%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
lea    0x8(%edi),%eax
mov    %eax,0x4(%esp)
call   17f0 <memmove@plt>
mov    0x18(%esp),%ecx
xor    %edx,%edx
mov    0x40(%esp),%edi
mov    0x4(%ecx),%eax
mov    0x4(%edi),%esi
mov    %eax,0x10(%esp)
sub    $0x1,%eax
mov    %eax,0x4(%ecx)
div    %esi
xor    %edx,%edx
subl   $0x1,(%edi)
lea    0x1(%eax),%edi
mov    0x8(%ecx),%eax
mov    0x1c(%esp),%ecx
div    %esi
cmp    %edi,%eax
jbe    ba95 <__sprintf_chk@plt+0x9da5>
shl    $0x3,%esi
imul   %edi,%esi
mov    %ecx,0x10(%esp)
mov    %esi,0x4(%esp)
mov    0x18(%esp),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   1960 <realloc@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
je     ba95 <__sprintf_chk@plt+0x9da5>
mov    %eax,(%esi)
mov    0x40(%esp),%eax
imul   0x4(%eax),%edi
mov    %ecx,%eax
mov    %edi,0x8(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%esp),%eax
jmp    bb2f <__sprintf_chk@plt+0x9e3f>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
movl   $0x0,0x4(%eax)
mov    %edx,(%eax)
movl   $0xffffffff,0x8(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    0x10(%esp),%edi
mov    0x4(%edi),%edx
mov    (%edi),%ecx
mov    0x8(%edi),%ebp
lea    (%edx,%edx,2),%esi
shl    $0x2,%esi
lea    0x10(%ecx,%esi,1),%eax
add    $0x1,%ebp
cmp    0x4(%eax),%ebp
mov    %ebp,0x8(%edi)
jb     bc70 <__sprintf_chk@plt+0x9f80>
mov    0x8(%ecx),%ebp
lea    0x1(%edx),%eax
movl   $0x0,0x8(%edi)
mov    %eax,0x4(%edi)
cmp    %ebp,%eax
jae    bc67 <__sprintf_chk@plt+0x9f77>
lea    (%eax,%eax,2),%eax
lea    0x10(%ecx,%eax,4),%eax
cmpl   $0x0,0x4(%eax)
jne    bca3 <__sprintf_chk@plt+0x9fb3>
add    $0x2,%edx
lea    0x28(%ecx,%esi,1),%ecx
jmp    bc60 <__sprintf_chk@plt+0x9f70>
xchg   %ax,%ax
mov    %ecx,%eax
cmpl   $0x0,0x4(%eax)
lea    0x1(%edx),%esi
lea    0xc(%ecx),%ecx
jne    bca0 <__sprintf_chk@plt+0x9fb0>
mov    %esi,%edx
cmp    %ebp,%edx
jne    bc50 <__sprintf_chk@plt+0x9f60>
mov    %edx,0x4(%edi)
pop    %esi
xor    %eax,%eax
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
shl    $0x3,%ebp
mov    0x18(%esp),%edx
add    (%eax),%ebp
test   %edx,%edx
je     bc86 <__sprintf_chk@plt+0x9f96>
mov    0x4(%ebp),%eax
mov    0x18(%esp),%edi
mov    %eax,(%edi)
mov    0x14(%esp),%eax
test   %eax,%eax
je     bca8 <__sprintf_chk@plt+0x9fb8>
mov    0x0(%ebp),%eax
mov    0x14(%esp),%edi
mov    %eax,(%edi)
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,0x4(%edi)
xor    %ebp,%ebp
jmp    bc73 <__sprintf_chk@plt+0x9f83>
nop
mov    $0x1,%eax
jmp    bc9c <__sprintf_chk@plt+0x9fac>
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%edx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1b343,%ebx
mov    0x20(%esp),%eax
test   %edx,%edx
je     bce7 <__sprintf_chk@plt+0x9ff7>
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
mov    %edx,0xc(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    -0x7211(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x7249(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x7227(%ebx),%eax
movl   $0x21,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1b2d1,%ebx
mov    0x4(%esi),%ecx
mov    0x8(%esi),%eax
lea    0x1(%ecx),%edx
cmp    %eax,%edx
jae    bd58 <__sprintf_chk@plt+0xa068>
mov    (%esi),%eax
mov    0x24(%esp),%edi
mov    %edi,(%eax,%ecx,4)
mov    %ecx,%eax
mov    %edx,0x4(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    0xc(%esi),%eax
mov    %eax,%edi
lea    0x0(,%eax,4),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   1960 <realloc@plt>
mov    0xc(%esi),%edx
test   %edx,%edx
je     bd91 <__sprintf_chk@plt+0xa0a1>
test   %eax,%eax
je     bd8a <__sprintf_chk@plt+0xa09a>
mov    0x4(%esi),%ecx
mov    %eax,(%esi)
mov    %edi,0x8(%esi)
lea    0x1(%ecx),%edx
jmp    bd44 <__sprintf_chk@plt+0xa054>
mov    $0xfffffff4,%eax
jmp    bd50 <__sprintf_chk@plt+0xa060>
lea    -0x721e(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x7249(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x722e(%ebx),%eax
movl   $0x2f,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    0x8(%esp),%esi
mov    0xc(%esp),%edx
mov    (%esi),%eax
mov    0x4(%esi),%ecx
lea    (%eax,%ecx,4),%ecx
cmp    %ecx,%eax
jb     bddf <__sprintf_chk@plt+0xa0ef>
jmp    bdf0 <__sprintf_chk@plt+0xa100>
nop
add    $0x4,%eax
cmp    %eax,%ecx
jbe    bdf0 <__sprintf_chk@plt+0xa100>
cmp    %edx,(%eax)
jne    bdd8 <__sprintf_chk@plt+0xa0e8>
mov    $0xffffffef,%eax
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %edx,0xc(%esp)
mov    %esi,0x8(%esp)
pop    %esi
jmp    bd20 <__sprintf_chk@plt+0xa030>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1b1f2,%ebx
mov    (%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
movl   $0x0,0x4(%esi)
movl   $0x0,0x8(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
movl   $0x4,0x8(%esp)
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1b1a7,%ebx
mov    %edx,0xc(%esp)
mov    0x4(%eax),%edx
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   1c30 <qsort@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1b177,%ebx
sub    $0x1c,%esp
movl   $0x100,(%esp)
mov    0x30(%esp),%esi
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     bfa9 <__sprintf_chk@plt+0xa2b9>
xor    %edi,%edi
mov    $0x100,%ecx
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    bfb0 <__sprintf_chk@plt+0xa2c0>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
je     bef0 <__sprintf_chk@plt+0xa200>
cmp    $0x5c,%eax
je     bf18 <__sprintf_chk@plt+0xa228>
cmp    $0xffffffff,%eax
je     bee8 <__sprintf_chk@plt+0xa1f8>
lea    0x1(%edi),%edx
cmp    %ecx,%edx
mov    %al,0x0(%ebp,%edi,1)
je     bf50 <__sprintf_chk@plt+0xa260>
mov    %edx,%edi
jmp    beb3 <__sprintf_chk@plt+0xa1c3>
xchg   %ax,%ax
test   %edi,%edi
je     bf90 <__sprintf_chk@plt+0xa2a0>
mov    0x34(%esp),%edx
test   %edx,%edx
je     beff <__sprintf_chk@plt+0xa20f>
mov    0x34(%esp),%eax
addl   $0x1,(%eax)
cmp    %edi,%ecx
je     bf78 <__sprintf_chk@plt+0xa288>
movb   $0x0,0x0(%ebp,%edi,1)
mov    %ebp,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    bfc5 <__sprintf_chk@plt+0xa2d5>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    bed7 <__sprintf_chk@plt+0xa1e7>
mov    0x34(%esp),%eax
test   %eax,%eax
je     bfa0 <__sprintf_chk@plt+0xa2b0>
mov    0x34(%esp),%eax
mov    %edi,%edx
mov    %edx,%edi
addl   $0x1,(%eax)
jmp    beb3 <__sprintf_chk@plt+0xa1c3>
lea    0x0(%esi),%esi
add    %ecx,%ecx
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x8(%esp)
call   1960 <realloc@plt>
mov    0xc(%esp),%edx
mov    0x8(%esp),%ecx
mov    %edx,%edi
mov    %eax,%ebp
jmp    beb3 <__sprintf_chk@plt+0xa1c3>
nop
lea    0x1(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   1960 <realloc@plt>
mov    %eax,%ebp
jmp    bf03 <__sprintf_chk@plt+0xa213>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   1800 <free@plt>
xor    %eax,%eax
jmp    bf0a <__sprintf_chk@plt+0xa21a>
nop
mov    %edi,%edx
mov    %edx,%edi
jmp    beb3 <__sprintf_chk@plt+0xa1c3>
xor    %eax,%eax
jmp    bf0a <__sprintf_chk@plt+0xa21a>
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
call   1b80 <__uflow@plt>
mov    0x8(%esp),%ecx
jmp    bec8 <__sprintf_chk@plt+0xa1d8>
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
call   1b80 <__uflow@plt>
mov    0x8(%esp),%ecx
jmp    bf2d <__sprintf_chk@plt+0xa23d>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    0x8(%esp),%ecx
xor    %eax,%eax
mov    0xc(%esp),%esi
movzbl (%ecx,%eax,1),%edx
cmp    $0x2d,%dl
je     c046 <__sprintf_chk@plt+0xa356>
jle    c010 <__sprintf_chk@plt+0xa320>
cmp    $0x5b,%dl
je     c050 <__sprintf_chk@plt+0xa360>
cmp    $0x5d,%dl
xchg   %ax,%ax
jne    c030 <__sprintf_chk@plt+0xa340>
mov    $0xffffffea,%eax
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
jne    c030 <__sprintf_chk@plt+0xa340>
mov    0x10(%esp),%edx
movb   $0x0,(%esi,%eax,1)
test   %edx,%edx
je     c078 <__sprintf_chk@plt+0xa388>
mov    0x10(%esp),%esi
mov    %eax,(%esi)
xor    %eax,%eax
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %dl,(%esi,%eax,1)
add    $0x1,%eax
cmp    $0xffe,%eax
ja     c014 <__sprintf_chk@plt+0xa324>
movzbl (%ecx,%eax,1),%edx
cmp    $0x2d,%dl
jne    bff4 <__sprintf_chk@plt+0xa304>
movb   $0x5f,(%esi,%eax,1)
jmp    c033 <__sprintf_chk@plt+0xa343>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x5b,%edx
jmp    c05d <__sprintf_chk@plt+0xa36d>
nop
cmp    $0x5d,%dl
je     c06b <__sprintf_chk@plt+0xa37b>
mov    %dl,(%esi,%eax,1)
add    $0x1,%eax
movzbl (%ecx,%eax,1),%edx
test   %dl,%dl
jne    c058 <__sprintf_chk@plt+0xa368>
cmp    $0x5d,%dl
jne    c002 <__sprintf_chk@plt+0xa312>
movb   $0x5d,(%esi,%eax,1)
jmp    c033 <__sprintf_chk@plt+0xa343>
xchg   %ax,%ax
xor    %eax,%eax
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
xor    %edx,%edx
push   %esi
mov    0xc(%esp),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%edi
jmp    c0af <__sprintf_chk@plt+0xa3bf>
lea    0x0(%esi),%esi
cmp    $0x2e,%cl
je     c0c8 <__sprintf_chk@plt+0xa3d8>
test   %cl,%cl
je     c0c8 <__sprintf_chk@plt+0xa3d8>
mov    %cl,(%eax,%edx,1)
add    $0x1,%edx
cmp    $0xfff,%edx
je     c0c8 <__sprintf_chk@plt+0xa3d8>
movzbl (%esi,%edx,1),%ecx
cmp    $0x2d,%cl
jne    c098 <__sprintf_chk@plt+0xa3a8>
movb   $0x5f,(%eax,%edx,1)
add    $0x1,%edx
cmp    $0xfff,%edx
jne    c0af <__sprintf_chk@plt+0xa3bf>
nop
test   %edi,%edi
movb   $0x0,(%eax,%edx,1)
je     c0d2 <__sprintf_chk@plt+0xa3e2>
mov    %edx,(%edi)
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1af14,%ebx
mov    0x30(%esp),%eax
mov    0x34(%esp),%ebp
mov    0x38(%esp),%esi
mov    %eax,(%esp)
call   17c0 <basename@plt>
mov    %eax,%edi
xor    %eax,%eax
test   %edi,%edi
je     c15d <__sprintf_chk@plt+0xa46d>
cmpb   $0x0,(%edi)
je     c15d <__sprintf_chk@plt+0xa46d>
xor    %edx,%edx
jmp    c131 <__sprintf_chk@plt+0xa441>
nop
cmp    $0x2e,%cl
je     c150 <__sprintf_chk@plt+0xa460>
test   %cl,%cl
nop
je     c150 <__sprintf_chk@plt+0xa460>
mov    %cl,0x0(%ebp,%edx,1)
add    $0x1,%edx
cmp    $0xfff,%edx
je     c150 <__sprintf_chk@plt+0xa460>
movzbl (%edi,%edx,1),%ecx
cmp    $0x2d,%cl
jne    c118 <__sprintf_chk@plt+0xa428>
movb   $0x5f,0x0(%ebp,%edx,1)
add    $0x1,%edx
cmp    $0xfff,%edx
jne    c131 <__sprintf_chk@plt+0xa441>
lea    0x0(%esi),%esi
test   %esi,%esi
movb   $0x0,0x0(%ebp,%edx,1)
je     c15b <__sprintf_chk@plt+0xa46b>
mov    %edx,(%esi)
mov    %ebp,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ae86,%ebx
mov    0x24(%esp),%esi
mov    %esi,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
je     c1b0 <__sprintf_chk@plt+0xa4c0>
mov    0x20(%esp),%edx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    c1a4 <__sprintf_chk@plt+0xa4b4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ae2e,%ebx
mov    0x34(%esp),%edi
lea    -0x1(%eax),%ebp
jmp    c1f6 <__sprintf_chk@plt+0xa506>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edi
add    %eax,%esi
sub    %eax,%ebp
add    %esi,%edi
test   %ebp,%ebp
je     c230 <__sprintf_chk@plt+0xa540>
mov    0x30(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1780 <read@plt>
cmp    $0x0,%eax
je     c230 <__sprintf_chk@plt+0xa540>
jg     c1e8 <__sprintf_chk@plt+0xa4f8>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
je     c1f2 <__sprintf_chk@plt+0xa502>
cmp    $0xb,%eax
je     c1f2 <__sprintf_chk@plt+0xa502>
add    $0x1c,%esp
neg    %eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%edi)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x1c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1adb2,%ebx
mov    0x30(%esp),%ebp
mov    0x38(%esp),%edi
jmp    c268 <__sprintf_chk@plt+0xa578>
xchg   %ax,%ax
sub    %eax,%edi
add    %eax,%esi
test   %edi,%edi
je     c2a8 <__sprintf_chk@plt+0xa5b8>
mov    0x34(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebp,(%esp)
add    %esi,%eax
mov    %eax,0x4(%esp)
call   1a70 <write@plt>
cmp    $0x0,%eax
je     c2a8 <__sprintf_chk@plt+0xa5b8>
jg     c260 <__sprintf_chk@plt+0xa570>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
nop
je     c264 <__sprintf_chk@plt+0xa574>
cmp    $0xb,%eax
je     c264 <__sprintf_chk@plt+0xa574>
add    $0x1c,%esp
neg    %eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ad34,%ebx
mov    0x64(%esp),%edi
lea    0x1c(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x60(%esp),%eax
movl   $0x0,(%edi)
movl   $0x20,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   c1c0 <__sprintf_chk@plt+0xa4d0>
test   %eax,%eax
js     c351 <__sprintf_chk@plt+0xa661>
call   1ad0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    0x68(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   1c70 <strtol@plt>
mov    0x18(%esp),%ebp
cmp    %esi,%ebp
mov    %eax,0xc(%esp)
je     c368 <__sprintf_chk@plt+0xa678>
call   1cd0 <__ctype_b_loc@plt>
movsbl 0x0(%ebp),%edx
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%edx,2)
je     c368 <__sprintf_chk@plt+0xa678>
mov    0xc(%esp),%eax
mov    %eax,(%edi)
xor    %eax,%eax
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    c36f <__sprintf_chk@plt+0xa67f>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0xffffffea,%eax
jmp    c351 <__sprintf_chk@plt+0xa661>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
mov    0xc(%esp),%eax
mov    0x10(%esp),%esi
movzbl 0x14(%esp),%edi
movsbl (%eax),%ecx
mov    %eax,%edx
test   %cl,%cl
jne    c3aa <__sprintf_chk@plt+0xa6ba>
jmp    c3bd <__sprintf_chk@plt+0xa6cd>
lea    0x0(%esi),%esi
add    $0x1,%edx
movsbl (%edx),%ecx
test   %cl,%cl
je     c3bd <__sprintf_chk@plt+0xa6cd>
cmp    %esi,%ecx
jne    c3a0 <__sprintf_chk@plt+0xa6b0>
mov    %edi,%ecx
add    $0x1,%edx
mov    %cl,-0x1(%edx)
movsbl (%edx),%ecx
test   %cl,%cl
jne    c3aa <__sprintf_chk@plt+0xa6ba>
pop    %esi
pop    %edi
ret
mov    0x4(%esp),%eax
cmpb   $0x2f,(%eax)
sete   %al
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ac24,%ebx
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   c3c0 <__sprintf_chk@plt+0xa6d0>
test   %al,%al
jne    c460 <__sprintf_chk@plt+0xa770>
call   1790 <get_current_dir_name@plt>
test   %eax,%eax
mov    %eax,%edi
je     c470 <__sprintf_chk@plt+0xa780>
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%ebp
call   1a30 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%ecx
lea    0x2(%ebp,%eax,1),%eax
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
call   1960 <realloc@plt>
mov    0xc(%esp),%ecx
test   %eax,%eax
mov    %eax,%edx
je     c478 <__sprintf_chk@plt+0xa788>
movb   $0x2f,(%eax,%ecx,1)
add    $0x1,%ebp
lea    0x1(%eax,%ecx,1),%eax
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   1810 <memcpy@plt>
mov    0xc(%esp),%edx
mov    %edx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   1ac0 <__strdup@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    c454 <__sprintf_chk@plt+0xa764>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   1800 <free@plt>
xor    %eax,%eax
jmp    c454 <__sprintf_chk@plt+0xa764>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1ab65,%ebx
sub    $0x9c,%esp
mov    0x8(%ebp),%edi
mov    0xc(%ebp),%esi
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   1b40 <strnlen@plt>
lea    0x1f(%eax),%edx
and    $0xfffffff0,%edx
sub    %edx,%esp
lea    0x1b(%esp),%edx
and    $0xfffffff0,%edx
movb   $0x0,(%edx,%eax,1)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   1810 <memcpy@plt>
mov    %eax,%edi
lea    (%eax,%esi,1),%eax
mov    %eax,-0x90(%ebp)
mov    %eax,%esi
lea    -0x7c(%ebp),%eax
mov    %eax,-0x8c(%ebp)
lea    0x0(%esi),%esi
mov    -0x8c(%ebp),%eax
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
call   1c60 <__xstat64@plt>
test   %eax,%eax
js     c570 <__sprintf_chk@plt+0xa880>
mov    -0x6c(%ebp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
movzbl %al,%eax
cmp    $0x0,%eax
jg     c57e <__sprintf_chk@plt+0xa88e>
je     c5ee <__sprintf_chk@plt+0xa8fe>
cmp    %edi,%esi
je     c593 <__sprintf_chk@plt+0xa8a3>
movb   $0x0,(%esi)
jbe    c500 <__sprintf_chk@plt+0xa810>
lea    0x0(%esi),%esi
sub    $0x1,%esi
cmp    %edi,%esi
je     c500 <__sprintf_chk@plt+0xa810>
cmpb   $0x2f,(%esi)
jne    c548 <__sprintf_chk@plt+0xa858>
cmpb   $0x2f,-0x1(%esi)
jne    c500 <__sprintf_chk@plt+0xa810>
lea    0x0(%esi),%esi
sub    $0x1,%esi
cmp    %edi,%esi
jbe    c500 <__sprintf_chk@plt+0xa810>
cmpb   $0x2f,-0x1(%esi)
je     c560 <__sprintf_chk@plt+0xa870>
jmp    c500 <__sprintf_chk@plt+0xa810>
nop
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
cmp    $0x0,%eax
jle    c536 <__sprintf_chk@plt+0xa846>
mov    %esi,(%esp)
call   1a30 <strlen@plt>
add    %eax,%esi
cmp    %esi,-0x90(%ebp)
je     c5d8 <__sprintf_chk@plt+0xa8e8>
movb   $0x2f,(%esi)
cmp    %esi,-0x90(%ebp)
ja     c5b5 <__sprintf_chk@plt+0xa8c5>
jmp    c5d8 <__sprintf_chk@plt+0xa8e8>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   1a30 <strlen@plt>
add    %eax,%esi
movb   $0x2f,(%esi)
cmp    %esi,-0x90(%ebp)
jbe    c5d8 <__sprintf_chk@plt+0xa8e8>
mov    0x10(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1ab0 <mkdir@plt>
test   %eax,%eax
jns    c5a0 <__sprintf_chk@plt+0xa8b0>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x11,%eax
je     c5a0 <__sprintf_chk@plt+0xa8b0>
neg    %eax
jmp    c5da <__sprintf_chk@plt+0xa8ea>
xor    %eax,%eax
mov    -0x1c(%ebp),%ecx
xor    %gs:0x14,%ecx
jne    c5f5 <__sprintf_chk@plt+0xa905>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffec,%eax
jmp    c5da <__sprintf_chk@plt+0xa8ea>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1a9f6,%ebx
mov    0x20(%esp),%esi
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   1ba0 <strrchr@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     c642 <__sprintf_chk@plt+0xa952>
mov    0x24(%esp),%eax
sub    %esi,%edx
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   c490 <__sprintf_chk@plt+0xa7a0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1a9a7,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
lea    -0x7206(%ebx),%eax
lea    -0x1b0(%ebx),%esi
xchg   %ax,%ax
mov    0x4(%esi),%edx
cmp    %ebp,%edx
jae    c695 <__sprintf_chk@plt+0xa9a5>
mov    %eax,0x4(%esp)
mov    %ebp,%eax
sub    %edx,%eax
add    %edi,%eax
mov    %eax,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
je     c6a8 <__sprintf_chk@plt+0xa9b8>
add    $0x8,%esi
mov    (%esi),%eax
test   %eax,%eax
jne    c678 <__sprintf_chk@plt+0xa988>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1a930,%ebx
mov    0x4c(%edx),%eax
mov    0x48(%edx),%esi
movl   $0x3e8,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
sar    $0x1f,%eax
mov    %eax,0x4(%esp)
call   1b020 <__sprintf_chk@plt+0x19330>
mov    %eax,%edi
mov    $0xf4240,%eax
mov    %edx,%ebp
imul   %esi
add    %eax,%edi
adc    %edx,%ebp
add    $0x1c,%esp
pop    %ebx
mov    %edi,%eax
mov    %ebp,%edx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x84(%esp),%edi
mov    0x74(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1a8c9,%ebx
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    %edi,0x24(%esp)
mov    0x80(%esp),%ecx
mov    %gs:0x14,%edi
mov    %edi,0x4c(%esp)
xor    %edi,%edi
cmp    $0x7,%eax
mov    0x88(%esp),%ebp
ja     c840 <__sprintf_chk@plt+0xab50>
mov    -0x7064(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    -0x71f8(%ebx),%eax
xchg   %ax,%ax
mov    %ecx,0x18(%esp)
mov    0x7c(%esp),%ecx
mov    %eax,0xc(%esp)
lea    -0x71e4(%ebx),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   1c40 <__fprintf_chk@plt>
mov    0x24(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   1760 <__vfprintf_chk@plt>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    c88b <__sprintf_chk@plt+0xab9b>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x71f2(%ebx),%eax
jmp    c780 <__sprintf_chk@plt+0xaa90>
lea    -0x7719(%ebx),%eax
jmp    c780 <__sprintf_chk@plt+0xaa90>
lea    -0x7713(%ebx),%eax
jmp    c780 <__sprintf_chk@plt+0xaa90>
lea    -0x770b(%ebx),%eax
jmp    c780 <__sprintf_chk@plt+0xaa90>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x7704(%ebx),%eax
jmp    c780 <__sprintf_chk@plt+0xaa90>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x76ff(%ebx),%eax
jmp    c780 <__sprintf_chk@plt+0xaa90>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x7202(%ebx),%eax
jmp    c780 <__sprintf_chk@plt+0xaa90>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x14(%esp)
lea    -0x71e9(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x3c(%esp),%eax
mov    %eax,%edi
movl   $0x10,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
call   1730 <__snprintf_chk@plt>
mov    %edi,%eax
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
jmp    c780 <__sprintf_chk@plt+0xaa90>
call   1b330 <__sprintf_chk@plt+0x19640>
push   %ebx
sub    $0x1b8,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1a764,%ebx
mov    %gs:0x14,%edx
mov    %edx,0x1ac(%esp)
xor    %edx,%edx
test   %eax,%eax
je     c8d8 <__sprintf_chk@plt+0xabe8>
mov    %eax,(%esp)
call   c3d0 <__sprintf_chk@plt+0xa6e0>
mov    0x1ac(%esp),%ecx
xor    %gs:0x14,%ecx
jne    c92c <__sprintf_chk@plt+0xac3c>
add    $0x1b8,%esp
pop    %ebx
ret
xchg   %ax,%ax
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   1880 <uname@plt>
test   %eax,%eax
js     c928 <__sprintf_chk@plt+0xac38>
lea    0xa8(%esp),%eax
mov    %eax,0x10(%esp)
lea    -0x71cd(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x71c0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1950 <__asprintf_chk@plt>
test   %eax,%eax
js     c928 <__sprintf_chk@plt+0xac38>
mov    0x20(%esp),%eax
jmp    c8be <__sprintf_chk@plt+0xabce>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    c8be <__sprintf_chk@plt+0xabce>
lea    0x0(%esi,%eiz,1),%esi
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     c987 <__sprintf_chk@plt+0xac97>
lea    0x48(%esp),%edx
mov    %edx,0x18(%esp)
mov    0x44(%esp),%edx
mov    %edx,0x14(%esp)
mov    0x40(%esp),%edx
mov    %edx,0x10(%esp)
mov    0x3c(%esp),%edx
mov    %edx,0xc(%esp)
mov    0x38(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x34(%esp),%edx
mov    %edx,0x4(%esp)
mov    0xc(%eax),%edx
mov    %edx,(%esp)
call   *0x8(%eax)
add    $0x2c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x14(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     c9ab <__sprintf_chk@plt+0xacbb>
addl   $0x1,(%eax)
repz ret
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     c9bc <__sprintf_chk@plt+0xaccc>
mov    0x4(%eax),%eax
ret
mov    $0xffffffff,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1a621,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     ca04 <__sprintf_chk@plt+0xad14>
mov    0x38(%esp),%eax
mov    %edi,0x8(%esi)
mov    %eax,0xc(%esi)
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x5,%eax
jg     ca10 <__sprintf_chk@plt+0xad20>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x7044(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d20(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %edi,0x18(%esp)
mov    %esi,(%esp)
movl   $0x162,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x6,0x4(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%edx
lea    (%eax,%ebp,4),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1a585,%ebx
mov    0x1074(%esp),%edi
mov    %eax,0x30(%esp)
mov    %edx,0x2c(%esp)
mov    %gs:0x14,%edx
mov    %edx,0x104c(%esp)
xor    %edx,%edx
mov    0x20(%esi),%edx
test   %edx,%edx
je     cc60 <__sprintf_chk@plt+0xaf70>
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     cc08 <__sprintf_chk@plt+0xaf18>
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   11fe0 <__sprintf_chk@plt+0x102f0>
mov    %eax,0x3c(%esp)
mov    0x3c(%esp),%esi
movl   $0x0,0x34(%esp)
test   %esi,%esi
je     cbd8 <__sprintf_chk@plt+0xaee8>
lea    0x48(%esp),%eax
mov    %eax,0x38(%esp)
jmp    cb1b <__sprintf_chk@plt+0xae2b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
addl   $0x1,0x34(%esp)
mov    %eax,(%edi)
mov    (%esi),%esi
test   %esi,%esi
je     cbd8 <__sprintf_chk@plt+0xaee8>
mov    0x38(%esp),%eax
lea    0xc(%esi),%ebp
mov    %ebp,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   125e0 <__sprintf_chk@plt+0x108f0>
test   %eax,%eax
jns    caf8 <__sprintf_chk@plt+0xae08>
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x38(%esp),%ecx
cmp    $0x2,%eax
jle    cbb5 <__sprintf_chk@plt+0xaec5>
mov    %ecx,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %ebp,0x1c(%esp)
movl   $0x1c1,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6ff8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d80(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%eax
mov    %ecx,0x2c(%esp)
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   e3a0 <__sprintf_chk@plt+0xc6b0>
mov    0x2c(%esp),%ecx
mov    %eax,(%edi)
mov    %ecx,%eax
jmp    cbe8 <__sprintf_chk@plt+0xaef8>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   115a0 <__sprintf_chk@plt+0xf8b0>
mov    0x34(%esp),%eax
mov    0x104c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    cd32 <__sprintf_chk@plt+0xb042>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x2c(%esp),%eax
movl   $0x1a8,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    -0x1a0(%ebx,%ebp,8),%eax
mov    %eax,0x18(%esp)
lea    -0x701c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d80(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    cabc <__sprintf_chk@plt+0xadcc>
lea    0x0(%esi),%esi
mov    -0x1a0(%ebx,%ebp,8),%eax
lea    0x4c(%esp),%esi
mov    0x30(%esp),%ebp
mov    %eax,0x18(%esp)
mov    0x14(%ebp),%eax
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x71a5(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   1730 <__snprintf_chk@plt>
mov    %ebp,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     cce0 <__sprintf_chk@plt+0xaff0>
mov    %esi,(%esp)
call   115e0 <__sprintf_chk@plt+0xf8f0>
test   %eax,%eax
mov    %eax,%esi
je     cd28 <__sprintf_chk@plt+0xb038>
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   11820 <__sprintf_chk@plt+0xfb30>
mov    %esi,(%esp)
mov    %eax,0x3c(%esp)
call   11690 <__sprintf_chk@plt+0xf9a0>
jmp    cad3 <__sprintf_chk@plt+0xade3>
mov    0x2c(%esp),%eax
mov    %esi,0x18(%esp)
movl   $0x1b1,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x719b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d80(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    ccb1 <__sprintf_chk@plt+0xafc1>
mov    $0xffffffda,%eax
jmp    cbe8 <__sprintf_chk@plt+0xaef8>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     cd4f <__sprintf_chk@plt+0xb05f>
mov    0x8(%esp),%edx
mov    %edx,0x4(%eax)
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1a297,%ebx
sub    $0x4c,%esp
movl   $0x50,0x4(%esp)
movl   $0x1,(%esp)
call   1ce0 <calloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     cf88 <__sprintf_chk@plt+0xb298>
movl   $0x1,(%eax)
lea    -0x1a8e0(%ebx),%eax
mov    %eax,0x8(%ebp)
mov    -0x28(%ebx),%eax
movl   $0x3,0x4(%ebp)
mov    (%eax),%eax
mov    %eax,0xc(%ebp)
mov    0x60(%esp),%eax
call   c890 <__sprintf_chk@plt+0xaba0>
mov    %eax,0x14(%ebp)
lea    -0x718a(%ebx),%eax
mov    %eax,(%esp)
call   17a0 <secure_getenv@plt>
test   %eax,%eax
mov    %eax,%edx
je     ce45 <__sprintf_chk@plt+0xb155>
lea    0x3c(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   1c70 <strtol@plt>
mov    0x3c(%esp),%ecx
movzbl (%ecx),%ecx
mov    %eax,%esi
test   %cl,%cl
mov    %ecx,0x28(%esp)
je     ce39 <__sprintf_chk@plt+0xb149>
call   1cd0 <__ctype_b_loc@plt>
mov    0x28(%esp),%ecx
movsbl %cl,%ecx
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%ecx,2)
jne    ce39 <__sprintf_chk@plt+0xb149>
mov    0x2c(%esp),%edx
mov    $0x3,%ecx
lea    -0x7181(%ebx),%edi
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x3,%esi
seta   %cl
setb   %al
cmp    %al,%cl
jne    cf38 <__sprintf_chk@plt+0xb248>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   cd40 <__sprintf_chk@plt+0xb050>
mov    0x64(%esp),%eax
mov    %ebp,(%esp)
test   %eax,%eax
lea    0x1b0(%ebx),%eax
cmovne 0x64(%esp),%eax
mov    %eax,0x64(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%ebp),%eax
mov    %eax,0x4(%esp)
call   f160 <__sprintf_chk@plt+0xd470>
test   %eax,%eax
js     cf90 <__sprintf_chk@plt+0xb2a0>
movl   $0x0,0x4(%esp)
movl   $0x100,(%esp)
call   b230 <__sprintf_chk@plt+0x9540>
test   %eax,%eax
mov    %eax,0x1c(%ebp)
mov    %ebp,(%esp)
je     cfc8 <__sprintf_chk@plt+0xb2d8>
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x5,%eax
jg     cef8 <__sprintf_chk@plt+0xb208>
mov    %ebp,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    ceeb <__sprintf_chk@plt+0xb1fb>
mov    0x4(%ebp),%eax
movl   $0x115,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x18(%esp)
lea    -0x714e(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d05(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x715e(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d05(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %ebp,0x18(%esp)
movl   $0x114,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %ebp,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    cea1 <__sprintf_chk@plt+0xb1b1>
nop
mov    $0x4,%ecx
mov    %edx,%esi
lea    -0x65ab(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x6,%esi
seta   %cl
setb   %al
cmp    %al,%cl
je     ce39 <__sprintf_chk@plt+0xb149>
mov    %edx,%esi
mov    $0x5,%ecx
lea    -0x717d(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %al
setb   %dl
sub    %edx,%eax
movsbl %al,%eax
cmp    $0x1,%eax
sbb    %esi,%esi
and    $0x7,%esi
jmp    ce39 <__sprintf_chk@plt+0xb149>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebp,%ebp
jmp    ceeb <__sprintf_chk@plt+0xb1fb>
nop
mov    %ebp,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     d010 <__sprintf_chk@plt+0xb320>
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %ebp,(%esp)
xor    %ebp,%ebp
call   1800 <free@plt>
jmp    ceeb <__sprintf_chk@plt+0xb1fb>
lea    0x0(%esi),%esi
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    cf9d <__sprintf_chk@plt+0xb2ad>
lea    -0x6fc0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d05(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x110,0xc(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %ebp,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    cf9d <__sprintf_chk@plt+0xb2ad>
lea    0x0(%esi),%esi
lea    -0x7177(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d05(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x10a,0xc(%esp)
jmp    cfee <__sprintf_chk@plt+0xb2fe>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%ebp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19fbc,%ebx
mov    %ebp,0x4(%esp)
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   b7a0 <__sprintf_chk@plt+0x9ab0>
mov    %esi,(%esp)
mov    %eax,%edi
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    d0a6 <__sprintf_chk@plt+0xb3b6>
lea    -0x6fa0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d35(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %edi,0x1c(%esp)
mov    %ebp,0x18(%esp)
movl   $0x188,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19f44,%ebx
mov    0x40(%esp),%esi
mov    0x44(%esp),%ebp
mov    0x48(%esp),%edi
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    d119 <__sprintf_chk@plt+0xb429>
lea    -0x713d(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d4a(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %edi,0x1c(%esp)
mov    %ebp,0x18(%esp)
movl   $0x190,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   b350 <__sprintf_chk@plt+0x9660>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19eb5,%ebx
mov    0x30(%esp),%esi
mov    0x38(%esp),%edi
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    d1a8 <__sprintf_chk@plt+0xb4b8>
mov    0x34(%esp),%eax
mov    %edi,0x1c(%esp)
movl   $0x198,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x712c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d5f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    %edi,0x4(%esp)
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   b950 <__sprintf_chk@plt+0x9c60>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebp
mov    $0x7,%ecx
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19e32,%ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    0x24(%esp),%ebp
mov    %eax,%esi
lea    -0x711b(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    %edx,(%esp)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
je     d208 <__sprintf_chk@plt+0xb518>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%esp),%edi
mov    $0x2,%edx
mov    %eax,0x24(%esp)
mov    %ebp,%eax
mov    %edi,0x28(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    ca60 <__sprintf_chk@plt+0xad70>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    %edx,0x4(%esp)
mov    $0x1,%edx
mov    %ecx,0x8(%esp)
jmp    ca60 <__sprintf_chk@plt+0xad70>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x104c,%esp
mov    0x1068(%esp),%edi
mov    0x1064(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19d93,%ebx
mov    0x1060(%esp),%esi
mov    (%edi),%ecx
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x103c(%esp)
xor    %eax,%eax
test   %ecx,%ecx
jne    d53f <__sprintf_chk@plt+0xb84f>
mov    0x2c(%esi),%edx
test   %edx,%edx
je     d410 <__sprintf_chk@plt+0xb720>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     d358 <__sprintf_chk@plt+0xb668>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esi),%eax
mov    %eax,(%esp)
call   11f20 <__sprintf_chk@plt+0x10230>
mov    %eax,0x2c(%esp)
mov    0x2c(%esp),%eax
xor    %ebp,%ebp
test   %eax,%eax
je     d328 <__sprintf_chk@plt+0xb638>
lea    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   12530 <__sprintf_chk@plt+0x10840>
test   %eax,%eax
mov    %eax,%ebp
js     d3a8 <__sprintf_chk@plt+0xb6b8>
mov    0x38(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   123c0 <__sprintf_chk@plt+0x106d0>
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
mov    %eax,(%edi)
mov    $0xfffffff4,%eax
cmove  %eax,%ebp
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %ebp,%eax
mov    0x103c(%esp),%edx
xor    %gs:0x14,%edx
jne    d53a <__sprintf_chk@plt+0xb84a>
add    $0x104c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
movl   $0x1ee,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
lea    -0x9df8(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x6f80(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e00(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    d2b3 <__sprintf_chk@plt+0xb5c3>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    d328 <__sprintf_chk@plt+0xb638>
mov    %ebp,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x209,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6f38(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e00(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    d328 <__sprintf_chk@plt+0xb638>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x9df8(%ebx),%eax
mov    %eax,0x18(%esp)
mov    0x14(%esi),%eax
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x71a5(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   1730 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     d498 <__sprintf_chk@plt+0xb7a8>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   115e0 <__sprintf_chk@plt+0xf8f0>
test   %eax,%eax
mov    %eax,%ebp
je     d4e0 <__sprintf_chk@plt+0xb7f0>
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   11760 <__sprintf_chk@plt+0xfa70>
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
call   11690 <__sprintf_chk@plt+0xf9a0>
jmp    d2ca <__sprintf_chk@plt+0xb5da>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
movl   $0x1f7,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x70fe(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e00(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    d460 <__sprintf_chk@plt+0xb770>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    d52b <__sprintf_chk@plt+0xb83b>
mov    0x2c(%esp),%eax
movl   $0x1fb,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x6f5c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e00(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
xor    %ebp,%ebp
movl   $0x0,0x2c(%esp)
jmp    d328 <__sprintf_chk@plt+0xb638>
call   1b330 <__sprintf_chk@plt+0x19640>
lea    -0x6dc0(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x7113(%ebx),%eax
movl   $0x1e9,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x104c,%esp
mov    0x1060(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x103c(%esp)
xor    %eax,%eax
mov    0x1064(%esp),%edi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19a64,%ebx
mov    0x20(%esi),%eax
test   %eax,%eax
je     d628 <__sprintf_chk@plt+0xb938>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    d5fa <__sprintf_chk@plt+0xb90a>
lea    -0x9d30(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x6f80(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e1d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %edi,0x1c(%esp)
movl   $0x220,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    %edi,0x4(%esp)
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   11f20 <__sprintf_chk@plt+0x10230>
mov    0x103c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    d744 <__sprintf_chk@plt+0xba54>
add    $0x104c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x9d30(%ebx),%eax
mov    %eax,0x18(%esp)
mov    0x14(%esi),%eax
lea    0x3c(%esp),%ebp
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x71a5(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %ebp,(%esp)
call   1730 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     d6a8 <__sprintf_chk@plt+0xb9b8>
mov    %ebp,(%esp)
call   115e0 <__sprintf_chk@plt+0xf8f0>
test   %eax,%eax
je     d6e8 <__sprintf_chk@plt+0xb9f8>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   11760 <__sprintf_chk@plt+0xfa70>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%esi
call   11690 <__sprintf_chk@plt+0xf9a0>
mov    %esi,%eax
jmp    d609 <__sprintf_chk@plt+0xb919>
lea    0x0(%esi),%esi
lea    -0x70fe(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e1d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %edi,0x1c(%esp)
mov    %ebp,0x18(%esp)
movl   $0x228,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    d674 <__sprintf_chk@plt+0xb984>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %eax,%edx
xor    %eax,%eax
cmp    $0x2,%edx
jle    d609 <__sprintf_chk@plt+0xb919>
lea    -0x6f0c(%ebx),%edx
mov    %edx,0x14(%esp)
lea    -0x6e1d(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0x71ba(%ebx),%edx
mov    %ebp,0x18(%esp)
movl   $0x22c,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x2c(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x2c(%esp),%eax
jmp    d609 <__sprintf_chk@plt+0xb919>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x198a4,%ebx
mov    0x54(%esp),%esi
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   1a20 <strchr@plt>
xor    %edx,%edx
test   %eax,%eax
je     d788 <__sprintf_chk@plt+0xba98>
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x50(%esp),%eax
xor    %ebp,%ebp
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   d570 <__sprintf_chk@plt+0xb880>
test   %eax,%eax
mov    %eax,%edi
je     d7ea <__sprintf_chk@plt+0xbafa>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   12530 <__sprintf_chk@plt+0x10840>
test   %eax,%eax
mov    %eax,%ebp
js     d800 <__sprintf_chk@plt+0xbb10>
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
mov    0x58(%esp),%ecx
mov    %eax,(%ecx)
mov    0x2c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   12a70 <__sprintf_chk@plt+0x10d80>
mov    %edi,(%esp)
call   1800 <free@plt>
add    $0x3c,%esp
mov    %ebp,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    d7ea <__sprintf_chk@plt+0xbafa>
mov    %ebp,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %esi,0x18(%esp)
movl   $0x24a,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x6f38(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e40(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    d7ea <__sprintf_chk@plt+0xbafa>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19780,%ebx
mov    0x18(%eax),%eax
mov    0x4(%eax),%ebp
mov    %eax,0x24(%esp)
test   %ebp,%ebp
je     d9e9 <__sprintf_chk@plt+0xbcf9>
lea    0x3c(%esp),%eax
movl   $0x0,0x28(%esp)
mov    %eax,0x2c(%esp)
jmp    d8c8 <__sprintf_chk@plt+0xbbd8>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
mov    0x0(%ebp),%ebp
cmp    0x4(%eax),%ebp
je     d949 <__sprintf_chk@plt+0xbc59>
test   %ebp,%ebp
je     d949 <__sprintf_chk@plt+0xbc59>
mov    %ebp,(%esp)
call   e3f0 <__sprintf_chk@plt+0xc700>
mov    %ebp,(%esp)
mov    %eax,%esi
call   e400 <__sprintf_chk@plt+0xc710>
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,%edi
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
call   18d0 <fnmatch@plt>
test   %eax,%eax
jne    d8b0 <__sprintf_chk@plt+0xbbc0>
mov    0x2c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   125e0 <__sprintf_chk@plt+0x108f0>
test   %eax,%eax
js     d958 <__sprintf_chk@plt+0xbc68>
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
mov    0x68(%esp),%edx
addl   $0x1,0x28(%esp)
mov    %eax,(%edx)
mov    0x24(%esp),%eax
mov    0x0(%ebp),%ebp
cmp    0x4(%eax),%ebp
jne    d8c0 <__sprintf_chk@plt+0xbbd0>
mov    0x28(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,%esi
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     d991 <__sprintf_chk@plt+0xbca1>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e3a0 <__sprintf_chk@plt+0xc6b0>
mov    0x68(%esp),%ecx
mov    %eax,(%ecx)
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %edi,0x1c(%esp)
movl   $0x26a,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6ee8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e60(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    d96b <__sprintf_chk@plt+0xbc7b>
xor    %eax,%eax
jmp    d94d <__sprintf_chk@plt+0xbc5d>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19600,%ebx
mov    0x18(%eax),%edi
mov    0x14(%edi),%ebp
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     da3a <__sprintf_chk@plt+0xbd4a>
mov    %ebp,(%esp)
call   e440 <__sprintf_chk@plt+0xc750>
mov    %eax,%esi
mov    0x54(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
je     da88 <__sprintf_chk@plt+0xbd98>
mov    0x0(%ebp),%ebp
cmp    0x14(%edi),%ebp
jne    da10 <__sprintf_chk@plt+0xbd20>
mov    0x10(%edi),%edx
test   %edx,%edx
mov    %edx,%ebp
jne    da4c <__sprintf_chk@plt+0xbd5c>
jmp    da77 <__sprintf_chk@plt+0xbd87>
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     da77 <__sprintf_chk@plt+0xbd87>
mov    %ebp,(%esp)
nop
call   e440 <__sprintf_chk@plt+0xc750>
mov    %eax,%esi
mov    0x54(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
je     daf8 <__sprintf_chk@plt+0xbe08>
mov    0x0(%ebp),%ebp
cmp    0x10(%edi),%ebp
jne    da48 <__sprintf_chk@plt+0xbd58>
xor    %edi,%edi
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   e430 <__sprintf_chk@plt+0xc740>
mov    %esi,0x4(%esp)
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   12530 <__sprintf_chk@plt+0x10840>
test   %eax,%eax
mov    %eax,%ebp
js     dbb0 <__sprintf_chk@plt+0xbec0>
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     dc1a <__sprintf_chk@plt+0xbf2a>
mov    0x58(%esp),%ecx
mov    %eax,(%ecx)
mov    0x2c(%esp),%eax
mov    %edi,0x4(%esp)
mov    $0x1,%edi
mov    %eax,(%esp)
call   140a0 <__sprintf_chk@plt+0x123b0>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebp,(%esp)
call   e430 <__sprintf_chk@plt+0xc740>
mov    %esi,0x4(%esp)
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   12530 <__sprintf_chk@plt+0x10840>
test   %eax,%eax
mov    %eax,%ebp
js     db63 <__sprintf_chk@plt+0xbe73>
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     dc73 <__sprintf_chk@plt+0xbf83>
mov    0x58(%esp),%ecx
mov    %eax,(%ecx)
mov    0x2c(%esp),%eax
mov    %edi,0x4(%esp)
mov    $0x1,%edi
mov    %eax,(%esp)
call   145d0 <__sprintf_chk@plt+0x128e0>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x50(%esp),%eax
mov    %ebp,%edi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    da79 <__sprintf_chk@plt+0xbd89>
mov    %ebp,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %esi,0x18(%esp)
movl   $0x2af,0xc(%esp)
mov    %eax,0x1c(%esp)
lea    -0x6f38(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e80(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    dbf7 <__sprintf_chk@plt+0xbf07>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    %ebp,%edi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    da79 <__sprintf_chk@plt+0xbd89>
mov    %ebp,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %esi,0x18(%esp)
movl   $0x28b,0xc(%esp)
mov    %eax,0x1c(%esp)
lea    -0x6f38(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e80(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    da79 <__sprintf_chk@plt+0xbd89>
mov    0x50(%esp),%eax
mov    $0xfffffff4,%edi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    da79 <__sprintf_chk@plt+0xbd89>
lea    -0x9bcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e80(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x291,0xc(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    da79 <__sprintf_chk@plt+0xbd89>
mov    0x50(%esp),%eax
mov    $0xfffffff4,%edi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    da79 <__sprintf_chk@plt+0xbd89>
lea    -0x9bcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6e80(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x2b5,0xc(%esp)
jmp    dc50 <__sprintf_chk@plt+0xbf60>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
lea    0x14(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1933c,%ebx
movzbl 0x44(%esp),%ebp
lea    0x10(%esp),%edi
mov    %esi,0x4(%esp)
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   bbe0 <__sprintf_chk@plt+0x9ef0>
jmp    dcf8 <__sprintf_chk@plt+0xc008>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   123a0 <__sprintf_chk@plt+0x106b0>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   bc00 <__sprintf_chk@plt+0x9f10>
test   %al,%al
jne    dce8 <__sprintf_chk@plt+0xbff8>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x192cf,%ebx
test   %edi,%edi
je     dd6b <__sprintf_chk@plt+0xc07b>
mov    0x20(%edi,%esi,4),%eax
test   %eax,%eax
je     dd63 <__sprintf_chk@plt+0xc073>
mov    %eax,(%esp)
call   11e50 <__sprintf_chk@plt+0x10160>
movl   $0x0,0x20(%edi,%esi,4)
movl   $0x0,0x30(%edi,%esi,8)
movl   $0x0,0x34(%edi,%esi,8)
add    $0x1,%esi
cmp    $0x4,%esi
jne    dd3b <__sprintf_chk@plt+0xc04b>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x19272,%ebx
test   %esi,%esi
je     ddb0 <__sprintf_chk@plt+0xc0c0>
mov    (%esi),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%esi)
jle    ddb8 <__sprintf_chk@plt+0xc0c8>
mov    %esi,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    dda5 <__sprintf_chk@plt+0xc0b5>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x5,%eax
jg     ddfe <__sprintf_chk@plt+0xc10e>
mov    %esi,(%esp)
call   dd20 <__sprintf_chk@plt+0xc030>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   b2b0 <__sprintf_chk@plt+0x95c0>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x18(%esi),%eax
test   %eax,%eax
je     ddf2 <__sprintf_chk@plt+0xc102>
mov    %eax,(%esp)
call   f020 <__sprintf_chk@plt+0xd330>
mov    %esi,(%esp)
call   1800 <free@plt>
xor    %eax,%eax
jmp    dda5 <__sprintf_chk@plt+0xc0b5>
lea    -0x70ea(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6d10(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x141,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    ddc5 <__sprintf_chk@plt+0xc0d5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x104c,%esp
mov    0x1060(%esp),%ebp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x191aa,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x103c(%esp)
xor    %eax,%eax
test   %ebp,%ebp
je     df84 <__sprintf_chk@plt+0xc294>
lea    -0x71a5(%ebx),%eax
xor    %esi,%esi
lea    0x30(%ebp),%edi
mov    %eax,0x28(%esp)
mov    0x20(%ebp,%esi,4),%eax
test   %eax,%eax
je     df10 <__sprintf_chk@plt+0xc220>
mov    %ebp,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x5,%eax
jg     dec8 <__sprintf_chk@plt+0xc1d8>
add    $0x1,%esi
add    $0x8,%edi
cmp    $0x4,%esi
jne    de82 <__sprintf_chk@plt+0xc192>
xor    %eax,%eax
mov    0x103c(%esp),%edx
xor    %gs:0x14,%edx
jne    df8e <__sprintf_chk@plt+0xc29e>
add    $0x104c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    -0x1a0(%ebx,%esi,8),%eax
movl   $0x326,0xc(%esp)
movl   $0x6,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x18(%esp)
lea    -0x70d5(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6ea3(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    de9b <__sprintf_chk@plt+0xc1ab>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x1a0(%ebx,%esi,8),%eax
lea    0x3c(%esp),%ecx
mov    %ecx,0x2c(%esp)
mov    %eax,0x18(%esp)
mov    0x14(%ebp),%eax
mov    %ecx,(%esp)
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
movl   $0x1000,0x4(%esp)
mov    %eax,0x10(%esp)
call   1730 <__snprintf_chk@plt>
mov    0x2c(%esp),%ecx
mov    %edi,0x8(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x4(%esp)
call   11ab0 <__sprintf_chk@plt+0xfdc0>
test   %eax,%eax
mov    %eax,0x20(%ebp,%esi,4)
jne    de9b <__sprintf_chk@plt+0xc1ab>
mov    %ebp,(%esp)
call   dd20 <__sprintf_chk@plt+0xc030>
mov    $0xfffffff4,%eax
jmp    dea8 <__sprintf_chk@plt+0xc1b8>
mov    $0xfffffffe,%eax
jmp    dea8 <__sprintf_chk@plt+0xc1b8>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x103c,%esp
mov    0x1050(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1904a,%ebx
mov    0x1054(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x102c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     e15a <__sprintf_chk@plt+0xc46a>
cmp    $0x3,%edi
ja     e150 <__sprintf_chk@plt+0xc460>
lea    (%esi,%edi,4),%ebp
mov    0x20(%ebp),%eax
test   %eax,%eax
je     e088 <__sprintf_chk@plt+0xc398>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     e040 <__sprintf_chk@plt+0xc350>
mov    -0x19c(%ebx,%edi,8),%eax
mov    %eax,0x8(%esp)
mov    0x1058(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%ebp),%eax
mov    %eax,(%esp)
call   11e90 <__sprintf_chk@plt+0x101a0>
xor    %eax,%eax
mov    0x102c(%esp),%edx
xor    %gs:0x14,%edx
jne    e164 <__sprintf_chk@plt+0xc474>
add    $0x103c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    -0x1a0(%ebx,%edi,8),%eax
movl   $0x372,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x70bc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6eb3(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    dffe <__sprintf_chk@plt+0xc30e>
xchg   %ax,%ax
mov    -0x1a0(%ebx,%edi,8),%eax
lea    0x2c(%esp),%ebp
mov    %eax,0x18(%esp)
mov    0x14(%esi),%eax
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x71a5(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %ebp,(%esp)
call   1730 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     e110 <__sprintf_chk@plt+0xc420>
mov    %ebp,(%esp)
call   115e0 <__sprintf_chk@plt+0xf8f0>
test   %eax,%eax
mov    %eax,%esi
je     e15a <__sprintf_chk@plt+0xc46a>
mov    -0x19c(%ebx,%edi,8),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    0x1058(%esp),%eax
mov    %eax,0x4(%esp)
call   116c0 <__sprintf_chk@plt+0xf9d0>
mov    %esi,(%esp)
call   11690 <__sprintf_chk@plt+0xf9a0>
xor    %eax,%eax
jmp    e021 <__sprintf_chk@plt+0xc331>
lea    -0x70a5(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6eb3(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x71ba(%ebx),%eax
mov    %ebp,0x18(%esp)
movl   $0x37c,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    e0d5 <__sprintf_chk@plt+0xc3e5>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffffe,%eax
jmp    e021 <__sprintf_chk@plt+0xc331>
mov    $0xffffffda,%eax
jmp    e021 <__sprintf_chk@plt+0xc331>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x18(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18e79,%ebx
sub    $0x14,%esp
movl   $0xc,(%esp)
mov    0x20(%esp),%esi
call   1970 <malloc@plt>
test   %eax,%eax
je     e1d8 <__sprintf_chk@plt+0xc4e8>
mov    0x24(%esp),%edx
test   %esi,%esi
mov    %edx,0x8(%eax)
je     e1c8 <__sprintf_chk@plt+0xc4d8>
mov    0x4(%esi),%edx
mov    %edx,0x4(%eax)
mov    %eax,(%edx)
mov    %eax,0x4(%esi)
mov    %esi,(%eax)
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%eax)
mov    %eax,0x4(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    e1be <__sprintf_chk@plt+0xc4ce>
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18e11,%ebx
mov    0x24(%esp),%edi
test   %esi,%esi
je     e228 <__sprintf_chk@plt+0xc538>
movl   $0xc,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
je     e240 <__sprintf_chk@plt+0xc550>
mov    0x4(%esi),%edx
mov    %edi,0x8(%eax)
mov    %esi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,(%edx)
mov    %eax,0x4(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    e180 <__sprintf_chk@plt+0xc490>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    e21d <__sprintf_chk@plt+0xc52d>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
test   %eax,%eax
je     e278 <__sprintf_chk@plt+0xc588>
test   %edx,%edx
je     e271 <__sprintf_chk@plt+0xc581>
mov    0x4(%eax),%ecx
mov    0x4(%edx),%esi
mov    %edx,(%ecx)
mov    %eax,(%esi)
mov    %esi,0x4(%eax)
mov    %ecx,0x4(%edx)
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%eax
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18d79,%ebx
sub    $0x14,%esp
movl   $0xc,(%esp)
mov    0x20(%esp),%esi
call   1970 <malloc@plt>
test   %eax,%eax
je     e2d8 <__sprintf_chk@plt+0xc5e8>
mov    0x24(%esp),%edx
test   %esi,%esi
mov    %edx,0x8(%eax)
je     e2c8 <__sprintf_chk@plt+0xc5d8>
mov    0x4(%esi),%edx
mov    %edx,0x4(%eax)
mov    %eax,(%edx)
mov    %eax,0x4(%esi)
mov    %esi,(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %eax,(%eax)
mov    %eax,0x4(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    e2bc <__sprintf_chk@plt+0xc5cc>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%edx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18d12,%ebx
test   %edx,%edx
je     e328 <__sprintf_chk@plt+0xc638>
mov    0x4(%edx),%ecx
cmp    %ecx,%edx
je     e320 <__sprintf_chk@plt+0xc630>
mov    (%edx),%eax
cmp    %eax,%edx
je     e320 <__sprintf_chk@plt+0xc630>
mov    %eax,(%ecx)
mov    (%edx),%esi
mov    %ecx,0x4(%esi)
mov    %edx,(%esp)
call   1800 <free@plt>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   1800 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    0x4(%esp),%edx
mov    0x8(%esp),%eax
test   %edx,%edx
je     e348 <__sprintf_chk@plt+0xc658>
test   %eax,%eax
je     e348 <__sprintf_chk@plt+0xc658>
cmp    %eax,%edx
je     e348 <__sprintf_chk@plt+0xc658>
mov    0x4(%eax),%eax
ret
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
mov    0x8(%esp),%eax
test   %edx,%edx
je     e370 <__sprintf_chk@plt+0xc680>
test   %eax,%eax
je     e370 <__sprintf_chk@plt+0xc680>
mov    (%eax),%ecx
xor    %eax,%eax
cmp    %edx,%ecx
cmovne %ecx,%eax
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     e390 <__sprintf_chk@plt+0xc6a0>
mov    0x4(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%edi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18c51,%ebx
mov    0x20(%esp),%eax
test   %edi,%edi
je     e3d7 <__sprintf_chk@plt+0xc6e7>
xor    %esi,%esi
nop
mov    %eax,(%esp)
add    $0x1,%esi
call   e380 <__sprintf_chk@plt+0xc690>
mov    %eax,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
cmp    %edi,%esi
jne    e3c0 <__sprintf_chk@plt+0xc6d0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
add    $0x4,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
add    $0x4,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
add    $0x4,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18b92,%ebx
test   %edx,%edx
je     e572 <__sprintf_chk@plt+0xc882>
movzbl (%edx),%edx
xor    %edi,%edi
mov    %eax,%esi
lea    -0x9dad(%ebx),%ecx
mov    %ebp,%eax
mov    %ecx,0x1c(%esp)
test   %dl,%dl
jne    e4b7 <__sprintf_chk@plt+0xc7c7>
jmp    e568 <__sprintf_chk@plt+0xc878>
cmp    $0x5d,%dl
je     e510 <__sprintf_chk@plt+0xc820>
cmp    $0x2d,%dl
jne    e4a5 <__sprintf_chk@plt+0xc7b5>
movb   $0x5f,(%eax)
add    $0x1,%edi
lea    0x0(%ebp,%edi,1),%eax
movzbl (%eax),%edx
test   %dl,%dl
je     e568 <__sprintf_chk@plt+0xc878>
cmp    $0x5b,%dl
jne    e498 <__sprintf_chk@plt+0xc7a8>
movzbl (%eax),%ecx
xor    %edx,%edx
test   %cl,%cl
jne    e4d3 <__sprintf_chk@plt+0xc7e3>
jmp    e4d8 <__sprintf_chk@plt+0xc7e8>
nop
add    $0x1,%edx
movzbl (%eax,%edx,1),%ecx
test   %cl,%cl
je     e4d8 <__sprintf_chk@plt+0xc7e8>
cmp    $0x5d,%cl
jne    e4c8 <__sprintf_chk@plt+0xc7d8>
add    %edx,%edi
cmpb   $0x0,0x0(%ebp,%edi,1)
jne    e4a5 <__sprintf_chk@plt+0xc7b5>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x5,%eax
jle    e4a5 <__sprintf_chk@plt+0xc7b5>
mov    0x1c(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x87,0xc(%esp)
mov    %eax,0x14(%esp)
lea    -0x6a99(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    e53b <__sprintf_chk@plt+0xc84b>
xchg   %ax,%ax
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x5,%eax
jle    e4a5 <__sprintf_chk@plt+0xc7b5>
mov    0x1c(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x81,0xc(%esp)
mov    %eax,0x14(%esp)
lea    -0x6a99(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
add    $0x1,%edi
mov    %eax,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
lea    0x0(%ebp,%edi,1),%eax
movzbl (%eax),%edx
test   %dl,%dl
jne    e4b7 <__sprintf_chk@plt+0xc7c7>
nop
mov    %ebp,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    e56a <__sprintf_chk@plt+0xc87a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18a70,%ebx
mov    0x8(%eax),%ebp
mov    0xc(%ebp),%eax
test   %eax,%eax
je     e628 <__sprintf_chk@plt+0xc938>
mov    0x4(%ebp),%esi
mov    -0x4(%esi,%eax,4),%edi
mov    %edi,(%esp)
call   1a30 <strlen@plt>
lea    (%edi,%eax,1),%ecx
sub    (%esi),%ecx
lea    0x6(%ecx),%esi
mov    0x10(%ebp),%eax
xor    %edx,%edx
test   %eax,%eax
je     e5eb <__sprintf_chk@plt+0xc8fb>
mov    0x8(%ebp),%edi
mov    %ecx,0x1c(%esp)
mov    -0x4(%edi,%eax,4),%edx
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   1a30 <strlen@plt>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
add    %eax,%edx
sub    (%edi),%edx
lea    0x6(%edx,%esi,1),%esi
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     e6f1 <__sprintf_chk@plt+0xca01>
mov    0x18(%esp),%ecx
mov    %eax,%esi
mov    0x1c(%esp),%edx
test   %ecx,%ecx
jne    e638 <__sprintf_chk@plt+0xc948>
test   %edx,%edx
jne    e689 <__sprintf_chk@plt+0xc999>
movb   $0x0,(%esi)
mov    %edi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
mov    $0x1,%esi
jmp    e5bb <__sprintf_chk@plt+0xc8cb>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x3a657270,(%eax)
lea    0x5(%eax),%esi
movb   $0x20,0x4(%eax)
lea    0x1(%ecx),%eax
mov    0x4(%ebp),%ecx
mov    (%ecx),%edx
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
add    %esi,%ecx
cmp    %ecx,%esi
jae    e613 <__sprintf_chk@plt+0xc923>
mov    %esi,%eax
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
jne    e678 <__sprintf_chk@plt+0xc988>
movb   $0x20,(%eax)
add    $0x1,%eax
cmp    %ecx,%eax
jne    e670 <__sprintf_chk@plt+0xc980>
sub    %edi,%eax
test   %edx,%edx
lea    -0x5(%esi,%eax,1),%esi
je     e617 <__sprintf_chk@plt+0xc927>
mov    $0x203a,%eax
mov    %ax,0x4(%esi)
lea    0x6(%esi),%ecx
movl   $0x74736f70,(%esi)
mov    0x8(%ebp),%ebp
lea    0x1(%edx),%eax
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    0x0(%ebp),%ebp
mov    %ecx,(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
add    %ecx,%edx
cmp    %edx,%ecx
jae    e6ea <__sprintf_chk@plt+0xc9fa>
mov    %ecx,%eax
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%eax)
jne    e6d8 <__sprintf_chk@plt+0xc9e8>
movb   $0x20,(%eax)
add    $0x1,%eax
cmp    %edx,%eax
jne    e6d0 <__sprintf_chk@plt+0xc9e0>
sub    %esi,%eax
lea    -0x6(%ecx,%eax,1),%esi
jmp    e617 <__sprintf_chk@plt+0xc927>
mov    %ecx,%esi
jmp    e617 <__sprintf_chk@plt+0xc927>
xor    %eax,%eax
jmp    e61c <__sprintf_chk@plt+0xc92c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%edi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x188f0,%ebx
mov    %eax,0x24(%esp)
mov    %edx,0x20(%esp)
test   %edi,%edi
movb   $0x0,0x2b(%esp)
je     e8a8 <__sprintf_chk@plt+0xcbb8>
mov    0x20(%esp),%eax
mov    (%eax),%esi
test   %esi,%esi
je     e768 <__sprintf_chk@plt+0xca78>
mov    %esi,%ebp
jmp    e744 <__sprintf_chk@plt+0xca54>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     e766 <__sprintf_chk@plt+0xca76>
mov    0x8(%ebp),%eax
mov    %edi,(%esp)
add    $0x5,%eax
mov    %eax,0x4(%esp)
call   1750 <strcmp@plt>
cmp    $0x0,%eax
jle    e808 <__sprintf_chk@plt+0xcb18>
mov    0x0(%ebp),%ebp
cmp    %esi,%ebp
jne    e740 <__sprintf_chk@plt+0xca50>
xor    %esi,%esi
mov    %edi,(%esp)
call   1a30 <strlen@plt>
mov    %eax,%ecx
lea    0x9(%eax),%eax
mov    %eax,(%esp)
mov    %ecx,0x24(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
je     e8c0 <__sprintf_chk@plt+0xcbd0>
mov    0x24(%esp),%ecx
lea    0x5(%eax),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
add    $0x1,%ecx
mov    %ecx,0x8(%esp)
call   1810 <memcpy@plt>
mov    0x50(%esp),%eax
test   %esi,%esi
mov    0x2c(%esp),%edx
mov    %eax,(%edx)
movzbl 0x2b(%esp),%eax
mov    %al,0x4(%edx)
je     e8ca <__sprintf_chk@plt+0xcbda>
mov    0x20(%esp),%eax
mov    %edx,0x24(%esp)
cmp    %esi,(%eax)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
je     e892 <__sprintf_chk@plt+0xcba2>
call   e1e0 <__sprintf_chk@plt+0xc4f0>
mov    0x24(%esp),%edx
test   %eax,%eax
je     e8e8 <__sprintf_chk@plt+0xcbf8>
mov    0x20(%esp),%ecx
xor    %edx,%edx
cmp    %esi,(%ecx)
je     e880 <__sprintf_chk@plt+0xcb90>
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jne    e8fa <__sprintf_chk@plt+0xcc0a>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    $0xffffffef,%edx
cmp    $0x6,%eax
jle    e7f9 <__sprintf_chk@plt+0xcb09>
mov    0x50(%esp),%eax
mov    %edi,0x1c(%esp)
movl   $0x30f,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6c10(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a1b(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x20(%esp),%edx
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
mov    %edx,%eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
xor    %edx,%edx
mov    %eax,(%ecx)
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   e280 <__sprintf_chk@plt+0xc590>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    e7eb <__sprintf_chk@plt+0xcafb>
jmp    e8e8 <__sprintf_chk@plt+0xcbf8>
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   17c0 <basename@plt>
movb   $0x1,0x2b(%esp)
mov    %eax,%edi
jmp    e72b <__sprintf_chk@plt+0xca3b>
mov    $0xfffffff4,%edx
jmp    e7f9 <__sprintf_chk@plt+0xcb09>
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %edx,0x24(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    e880 <__sprintf_chk@plt+0xcb90>
mov    %edx,(%esp)
call   1800 <free@plt>
mov    $0xfffffff4,%edx
jmp    e7f9 <__sprintf_chk@plt+0xcb09>
mov    %ebp,%esi
jmp    e768 <__sprintf_chk@plt+0xca78>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x186e3,%ebx
sub    $0x1c,%esp
movl   $0x1c,0x4(%esp)
movl   $0x1,(%esp)
call   1ce0 <calloc@plt>
mov    %ebp,(%esp)
mov    %eax,%esi
call   e170 <__sprintf_chk@plt+0xc480>
test   %esi,%esi
je     ea30 <__sprintf_chk@plt+0xcd40>
cmp    $0x5,%edi
mov    %edi,(%esi)
ja     ea37 <__sprintf_chk@plt+0xcd47>
mov    -0x6afc(%ebx,%edi,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%eax),%eax
mov    %eax,0x8(%esi)
lea    -0x18be0(%ebx),%eax
mov    %eax,0x14(%esi)
lea    -0x18bf0(%ebx),%eax
mov    %eax,0x18(%esi)
mov    %esi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%eax),%eax
movb   $0x1,0x4(%esi)
mov    %eax,0x8(%esi)
lea    -0x18bb0(%ebx),%eax
mov    %eax,0x14(%esi)
lea    -0x18a80(%ebx),%eax
mov    %eax,0x18(%esi)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x8(%eax),%eax
mov    %eax,0x8(%esi)
lea    -0x18c20(%ebx),%eax
mov    %eax,0x14(%esi)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%eax),%eax
mov    %eax,0x8(%esi)
lea    -0x18bc0(%ebx),%eax
mov    %eax,0x14(%esi)
lea    -0x18bd0(%ebx),%eax
mov    %eax,0x18(%esi)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%eax),%eax
jmp    e9db <__sprintf_chk@plt+0xcceb>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
mov    %eax,0x8(%esi)
lea    -0x18c10(%ebx),%eax
mov    %eax,0x14(%esi)
lea    -0x18c00(%ebx),%eax
mov    %eax,0x18(%esi)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    e982 <__sprintf_chk@plt+0xcc92>
mov    %esi,%eax
jmp    e982 <__sprintf_chk@plt+0xcc92>
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x185b3,%ebx
sub    $0x3c,%esp
mov    %edx,(%esp)
call   1a30 <strlen@plt>
mov    %eax,0x2c(%esp)
add    $0x1,%eax
mov    %eax,0x24(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   1a30 <strlen@plt>
add    $0x1,%eax
mov    %eax,0x28(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     eb10 <__sprintf_chk@plt+0xce20>
mov    0x24(%esp),%eax
mov    0x28(%esp),%edx
lea    0x4(%eax,%edx,1),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     eb70 <__sprintf_chk@plt+0xce80>
mov    0x2c(%esp),%ecx
mov    %esi,0x4(%esp)
lea    0x5(%eax,%ecx,1),%eax
mov    0x24(%esp),%ecx
mov    %eax,(%edi)
lea    0x4(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   1810 <memcpy@plt>
mov    0x28(%esp),%edx
mov    (%edi),%eax
mov    0x50(%esp),%esi
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x58(%esp),%eax
mov    %edi,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     eb68 <__sprintf_chk@plt+0xce78>
mov    0x58(%esp),%ecx
mov    %eax,(%ecx)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x50(%esp),%eax
mov    %esi,0x18(%esp)
movl   $0x9a,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x1c(%esp)
lea    -0x6ce0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a8d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    ea90 <__sprintf_chk@plt+0xcda0>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   1800 <free@plt>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %eax,%edx
mov    $0xfffffff4,%eax
cmp    $0x2,%edx
jle    eb07 <__sprintf_chk@plt+0xce17>
lea    -0x9d70(%ebx),%edx
mov    %edx,0x14(%esp)
lea    -0x6a8d(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0x6cfc(%ebx),%edx
movl   $0xae,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    0x0(%ebp),%edx
mov    %eax,0x24(%esp)
mov    %edx,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x24(%esp),%eax
jmp    eb07 <__sprintf_chk@plt+0xce17>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18413,%ebx
sub    $0x2c,%esp
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     ec38 <__sprintf_chk@plt+0xcf48>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   1ac0 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebp
je     ec88 <__sprintf_chk@plt+0xcf98>
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     ec80 <__sprintf_chk@plt+0xcf90>
mov    %eax,(%esi)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
movl   $0x118,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x70f6(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a5d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    ec05 <__sprintf_chk@plt+0xcf15>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   1800 <free@plt>
mov    (%edi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %eax,%edx
mov    $0xfffffff4,%eax
cmp    $0x2,%edx
jle    ec2d <__sprintf_chk@plt+0xcf3d>
lea    -0x6cc6(%ebx),%edx
mov    %edx,0x14(%esp)
lea    -0x6a5d(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0x6cfc(%ebx),%edx
mov    %eax,0x1c(%esp)
mov    0x40(%esp),%eax
mov    %edx,0x8(%esp)
mov    (%edi),%edx
movl   $0x127,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
mov    %edx,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x1c(%esp),%eax
jmp    ec2d <__sprintf_chk@plt+0xcf3d>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18300,%ebx
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   1a30 <strlen@plt>
mov    %eax,0x2c(%esp)
add    $0x1,%eax
mov    %eax,0x24(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   1a30 <strlen@plt>
add    $0x1,%eax
mov    %eax,0x28(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     ede0 <__sprintf_chk@plt+0xd0f0>
mov    0x24(%esp),%eax
mov    0x28(%esp),%edx
lea    0x4(%eax,%edx,1),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     ee38 <__sprintf_chk@plt+0xd148>
mov    0x2c(%esp),%ecx
lea    0x5(%eax,%ecx,1),%eax
mov    0x24(%esp),%ecx
mov    %eax,(%esi)
lea    0x4(%esi),%eax
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
mov    0x50(%esp),%ecx
mov    %ecx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x28(%esp),%edx
mov    0x54(%esp),%ecx
mov    (%esi),%eax
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    (%esi),%eax
movl   $0x20,0x8(%esp)
movl   $0x9,0x4(%esp)
mov    %eax,(%esp)
call   c380 <__sprintf_chk@plt+0xa690>
mov    (%edi),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     ee30 <__sprintf_chk@plt+0xd140>
mov    %eax,(%edi)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
movl   $0xc4,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6cac(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a75(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    ed44 <__sprintf_chk@plt+0xd054>
xchg   %ax,%ax
mov    %esi,(%esp)
call   1800 <free@plt>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %eax,%edx
mov    $0xfffffff4,%eax
cmp    $0x2,%edx
jle    edd1 <__sprintf_chk@plt+0xd0e1>
lea    -0x9d70(%ebx),%edx
mov    %edx,0x14(%esp)
lea    -0x6a75(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0x6cfc(%ebx),%edx
movl   $0xda,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    0x0(%ebp),%edx
mov    %eax,0x24(%esp)
mov    %edx,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x24(%esp),%eax
jmp    edd1 <__sprintf_chk@plt+0xd0e1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x18154,%ebx
mov    0x50(%esp),%ecx
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %edx,0x2c(%esp)
mov    0x54(%esp),%ebp
mov    %ecx,0x28(%esp)
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x2c(%esp),%edx
cmp    $0x6,%eax
jg     ef80 <__sprintf_chk@plt+0xd290>
mov    $0x9,%ecx
mov    %edx,%esi
lea    -0xadcd(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    ef58 <__sprintf_chk@plt+0xd268>
mov    0x28(%esp),%esi
mov    $0xa,%ecx
lea    -0x6c91(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    ef58 <__sprintf_chk@plt+0xd268>
test   %ebp,%ebp
je     efd1 <__sprintf_chk@plt+0xd2e1>
mov    0x24(%esp),%eax
lea    0x8(%eax),%edi
jmp    ef2e <__sprintf_chk@plt+0xd23e>
lea    0x0(%esi),%esi
movb   $0x0,(%eax)
lea    0x1(%eax),%esi
mov    0x24(%esp),%eax
mov    %ebp,(%esp)
mov    %edi,%edx
mov    %esi,%ebp
call   ebe0 <__sprintf_chk@plt+0xcef0>
movl   $0x2c,0x4(%esp)
mov    %ebp,(%esp)
call   1a20 <strchr@plt>
test   %eax,%eax
jne    ef18 <__sprintf_chk@plt+0xd228>
mov    %ebp,0x50(%esp)
mov    0x24(%esp),%eax
add    $0x3c,%esp
pop    %ebx
mov    %edi,%edx
pop    %esi
pop    %edi
pop    %ebp
jmp    ebe0 <__sprintf_chk@plt+0xcef0>
mov    0x24(%esp),%esi
mov    (%esi),%eax
call   e460 <__sprintf_chk@plt+0xc770>
mov    0x28(%esp),%edi
lea    0xc(%esi),%edx
mov    %edi,0x54(%esp)
mov    %eax,0x50(%esp)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    ecf0 <__sprintf_chk@plt+0xd000>
mov    0x28(%esp),%eax
mov    %edx,0x18(%esp)
movl   $0x20c,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x9db4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6ae2(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x2c(%esp),%edx
jmp    eedd <__sprintf_chk@plt+0xd1ed>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x8(%eax),%eax
mov    0xc(%eax),%ecx
mov    0x4(%eax),%eax
mov    %ecx,(%edx)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x8(%eax),%eax
mov    0x10(%eax),%ecx
mov    0x8(%eax),%eax
mov    %ecx,(%edx)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x17fd1,%ebx
mov    0x4(%esi),%edi
test   %edi,%edi
je     f05c <__sprintf_chk@plt+0xd36c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %edi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x4(%esi)
jne    f040 <__sprintf_chk@plt+0xd350>
mov    0x8(%esi),%edi
test   %edi,%edi
je     f084 <__sprintf_chk@plt+0xd394>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %edi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x8(%esi)
jne    f068 <__sprintf_chk@plt+0xd378>
mov    0xc(%esi),%edi
test   %edi,%edi
je     f0ac <__sprintf_chk@plt+0xd3bc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %edi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0xc(%esi)
jne    f090 <__sprintf_chk@plt+0xd3a0>
mov    0x14(%esi),%edi
test   %edi,%edi
je     f0d4 <__sprintf_chk@plt+0xd3e4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %edi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x14(%esi)
jne    f0b8 <__sprintf_chk@plt+0xd3c8>
mov    0x10(%esi),%edi
test   %edi,%edi
je     f0fc <__sprintf_chk@plt+0xd40c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %edi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x10(%esi)
jne    f0e0 <__sprintf_chk@plt+0xd3f0>
mov    0x18(%esi),%edi
test   %edi,%edi
je     f124 <__sprintf_chk@plt+0xd434>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %edi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x18(%esi)
jne    f108 <__sprintf_chk@plt+0xd418>
mov    0x1c(%esi),%eax
test   %eax,%eax
je     f14d <__sprintf_chk@plt+0xd45d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,0x1c(%esi)
jne    f130 <__sprintf_chk@plt+0xd440>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x116c,%esp
mov    0x1180(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x17e8a,%ebx
mov    %gs:0x14,%ecx
mov    %ecx,0x115c(%esp)
xor    %ecx,%ecx
movl   $0x0,0x94(%esp)
00
mov    %eax,0x30(%esp)
mov    0x1184(%esp),%eax
mov    %eax,0x5c(%esp)
mov    0x1188(%esp),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     104d0 <__sprintf_chk@plt+0xe7e0>
add    $0x4,%eax
mov    %eax,0x38(%esp)
lea    0x9c(%esp),%eax
mov    %eax,0x3c(%esp)
lea    -0x6c86(%ebx),%eax
movl   $0x0,0x50(%esp)
mov    %eax,0x60(%esp)
jmp    f2bc <__sprintf_chk@plt+0xd5cc>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
mov    0x30(%esp),%eax
neg    %esi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
cmp    $0x6,%eax
jle    f248 <__sprintf_chk@plt+0xd558>
lea    -0x9c44(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x69ec(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x33b,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
test   %esi,%esi
js     f2a8 <__sprintf_chk@plt+0xd5b8>
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
lea    0x1(%eax),%edi
add    $0x9,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     f820 <__sprintf_chk@plt+0xdb30>
mov    0x40(%esp),%eax
mov    0x44(%esp),%edx
mov    %eax,(%esi)
lea    0x8(%esi),%eax
mov    %edx,0x4(%esi)
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x50(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     f820 <__sprintf_chk@plt+0xdb30>
mov    %eax,0x50(%esp)
addl   $0x4,0x38(%esp)
mov    0x38(%esp),%eax
mov    -0x4(%eax),%ebp
test   %ebp,%ebp
je     f380 <__sprintf_chk@plt+0xd690>
mov    0x3c(%esp),%eax
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
call   1c60 <__xstat64@plt>
test   %eax,%eax
jne    f1e0 <__sprintf_chk@plt+0xd4f0>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   c6c0 <__sprintf_chk@plt+0xa9d0>
mov    %eax,0x40(%esp)
mov    0xac(%esp),%eax
mov    %edx,0x44(%esp)
and    $0xf000,%eax
cmp    $0x8000,%eax
je     f800 <__sprintf_chk@plt+0xdb10>
cmp    $0x4000,%eax
je     f5f8 <__sprintf_chk@plt+0xd908>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f2a8 <__sprintf_chk@plt+0xd5b8>
mov    0xac(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x346,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x7c34(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x69ec(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
addl   $0x4,0x38(%esp)
mov    0x38(%esp),%eax
mov    -0x4(%eax),%ebp
test   %ebp,%ebp
jne    f2bc <__sprintf_chk@plt+0xd5cc>
mov    0x94(%esp),%esi
movl   $0x20,0x4(%esp)
movl   $0x1,(%esp)
call   1ce0 <calloc@plt>
mov    0x5c(%esp),%ecx
test   %eax,%eax
mov    %eax,0x58(%esp)
mov    %eax,(%ecx)
je     f827 <__sprintf_chk@plt+0xdb37>
mov    0x50(%esp),%ecx
test   %esi,%esi
mov    %ecx,0x1c(%eax)
mov    0x30(%esp),%ecx
mov    %ecx,(%eax)
lea    0x15c(%esp),%ecx
mov    %esi,%eax
mov    %ecx,0x4c(%esp)
lea    -0x71c0(%ebx),%ecx
mov    %ecx,0x5c(%esp)
je     f92a <__sprintf_chk@plt+0xdc3a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%eax
cmpb   $0x0,0x4(%eax)
mov    %eax,0x48(%esp)
je     fa98 <__sprintf_chk@plt+0xdda8>
movl   $0x1000,0x8(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   1b20 <__strcpy_chk@plt>
mov    0x4c(%esp),%eax
movl   $0x80000,0x4(%esp)
mov    %eax,(%esp)
call   1770 <open64@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     fbc8 <__sprintf_chk@plt+0xded8>
test   %esi,%esi
js     f900 <__sprintf_chk@plt+0xdc10>
mov    0x58(%esp),%eax
movl   $0x0,0x9c(%esp)
00
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x54(%esp)
lea    -0x9a2e(%ebx),%eax
mov    %eax,0x4(%esp)
call   19e0 <fdopen@plt>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     f8a5 <__sprintf_chk@plt+0xdbb5>
lea    0x9c(%esp),%eax
mov    %eax,0x38(%esp)
lea    -0x9bed(%ebx),%eax
mov    %eax,0x40(%esp)
jmp    f490 <__sprintf_chk@plt+0xd7a0>
mov    %ebp,(%esp)
call   1800 <free@plt>
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   be80 <__sprintf_chk@plt+0xa190>
test   %eax,%eax
mov    %eax,%ebp
je     fae0 <__sprintf_chk@plt+0xddf0>
movzbl 0x0(%ebp),%eax
cmp    $0x23,%al
je     f488 <__sprintf_chk@plt+0xd798>
test   %al,%al
je     f488 <__sprintf_chk@plt+0xd798>
lea    0xfc(%esp),%eax
mov    %eax,0x50(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
mov    %eax,%esi
mov    %eax,0x3c(%esp)
je     f488 <__sprintf_chk@plt+0xd798>
mov    $0x6,%ecx
lea    -0xad90(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     f9e0 <__sprintf_chk@plt+0xdcf0>
mov    0x3c(%esp),%esi
mov    $0xa,%ecx
lea    -0xad5e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     fc18 <__sprintf_chk@plt+0xdf28>
mov    0x3c(%esp),%esi
mov    $0x8,%ecx
lea    -0xade2(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     fc60 <__sprintf_chk@plt+0xdf70>
mov    0x3c(%esp),%esi
mov    $0x8,%ecx
lea    -0xad78(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     fd08 <__sprintf_chk@plt+0xe018>
mov    0x3c(%esp),%esi
mov    $0x7,%ecx
lea    -0xad69(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     fd88 <__sprintf_chk@plt+0xe098>
mov    0x3c(%esp),%esi
mov    $0x8,%ecx
lea    -0x99f4(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     fdf0 <__sprintf_chk@plt+0xe100>
mov    0x3c(%esp),%esi
mov    $0x8,%ecx
lea    -0x9bab(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     f593 <__sprintf_chk@plt+0xd8a3>
mov    0x3c(%esp),%esi
mov    $0x7,%ecx
lea    -0xad17(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    fa28 <__sprintf_chk@plt+0xdd38>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f488 <__sprintf_chk@plt+0xd798>
mov    0x3c(%esp),%eax
movl   $0x2aa,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6bc4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a2d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    f488 <__sprintf_chk@plt+0xd798>
nop
mov    %ebp,(%esp)
call   1cb0 <opendir@plt>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     1025d <__sprintf_chk@plt+0xe56d>
lea    0x98(%esp),%eax
mov    %eax,0x48(%esp)
lea    0x15c(%esp),%eax
mov    %eax,0x4c(%esp)
lea    -0x7bf0(%ebx),%eax
mov    %eax,0x58(%esp)
mov    %ebp,0x54(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1a10 <readdir64_r@plt>
test   %eax,%eax
jne    f770 <__sprintf_chk@plt+0xda80>
mov    0x98(%esp),%esi
test   %esi,%esi
je     f7e8 <__sprintf_chk@plt+0xdaf8>
lea    0x13(%esi),%ebp
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
cmpb   $0x2e,0x13(%esi)
je     f630 <__sprintf_chk@plt+0xd940>
cmp    $0x5,%eax
jbe    f630 <__sprintf_chk@plt+0xd940>
lea    -0x5(%ebp,%eax,1),%esi
mov    $0x6,%ecx
lea    -0x9c06(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     f69f <__sprintf_chk@plt+0xd9af>
lea    -0x6(%ebp,%eax,1),%esi
mov    $0x7,%ecx
lea    -0x9a15(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    f630 <__sprintf_chk@plt+0xd940>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   17e0 <dirfd@plt>
lea    0xfc(%esp),%edx
movl   $0x0,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   18c0 <__fxstatat64@plt>
mov    0x10c(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     f710 <__sprintf_chk@plt+0xda20>
mov    0x98(%esp),%eax
lea    0x94(%esp),%edx
add    $0x13,%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   e700 <__sprintf_chk@plt+0xca10>
jmp    f630 <__sprintf_chk@plt+0xd940>
nop
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f630 <__sprintf_chk@plt+0xd940>
mov    0x54(%esp),%eax
mov    %ebp,0x1c(%esp)
movl   $0x2ea,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x6a02(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    f630 <__sprintf_chk@plt+0xd940>
xchg   %ax,%ax
mov    %eax,%esi
mov    0x30(%esp),%eax
mov    0x54(%esp),%ebp
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f7d1 <__sprintf_chk@plt+0xdae1>
mov    %esi,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x355,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x9c18(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x69ec(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1ca0 <closedir@plt>
jmp    f248 <__sprintf_chk@plt+0xd558>
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
mov    0x54(%esp),%ebp
mov    %eax,(%esp)
call   1ca0 <closedir@plt>
jmp    f24c <__sprintf_chk@plt+0xd55c>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
lea    0x94(%esp),%edx
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   e700 <__sprintf_chk@plt+0xca10>
jmp    f24c <__sprintf_chk@plt+0xd55c>
mov    0x94(%esp),%esi
test   %esi,%esi
mov    %esi,%eax
je     f855 <__sprintf_chk@plt+0xdb65>
lea    0x0(%esi),%esi
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,0x94(%esp)
jne    f830 <__sprintf_chk@plt+0xdb40>
mov    0x50(%esp),%eax
mov    0x50(%esp),%esi
test   %eax,%eax
je     f881 <__sprintf_chk@plt+0xdb91>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%esi
jne    f868 <__sprintf_chk@plt+0xdb78>
mov    $0xfffffff4,%eax
mov    0x115c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    105d9 <__sprintf_chk@plt+0xe8e9>
add    $0x116c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f8f8 <__sprintf_chk@plt+0xdc08>
lea    -0x6c4e(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a2d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %esi,0x18(%esp)
movl   $0x25c,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    %esi,(%esp)
call   1c90 <close@plt>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,0x94(%esp)
jne    f3e0 <__sprintf_chk@plt+0xd6f0>
lea    -0x6c75(%ebx),%eax
movl   $0x80000,0x4(%esp)
mov    %eax,(%esp)
call   1770 <open64@plt>
test   %eax,%eax
mov    %eax,%ebp
js     10300 <__sprintf_chk@plt+0xe610>
lea    0x15c(%esp),%esi
movl   $0x1000,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   c1c0 <__sprintf_chk@plt+0xa4d0>
mov    %ebp,(%esp)
mov    %eax,%edi
call   1c90 <close@plt>
test   %edi,%edi
js     10468 <__sprintf_chk@plt+0xe778>
movzbl 0x15c(%esp),%eax
test   %al,%al
je     f9d3 <__sprintf_chk@plt+0xdce3>
cmp    $0xa,%al
je     f9d3 <__sprintf_chk@plt+0xdce3>
xor    %edi,%edi
xor    %ecx,%ecx
mov    %esi,%edx
jmp    f9ae <__sprintf_chk@plt+0xdcbe>
nop
cmp    $0x3d,%al
je     fcf0 <__sprintf_chk@plt+0xe000>
cmp    $0x20,%al
je     fcd0 <__sprintf_chk@plt+0xdfe0>
add    $0x1,%esi
movzbl (%esi),%eax
cmp    $0xa,%al
je     f9c8 <__sprintf_chk@plt+0xdcd8>
test   %al,%al
je     f9c8 <__sprintf_chk@plt+0xdcd8>
cmp    $0x2e,%al
jne    f990 <__sprintf_chk@plt+0xdca0>
test   %ecx,%ecx
jne    f9a0 <__sprintf_chk@plt+0xdcb0>
lea    0x1(%esi),%ecx
movb   $0x0,(%esi)
mov    %ecx,%esi
movzbl (%esi),%eax
cmp    $0xa,%al
jne    f9aa <__sprintf_chk@plt+0xdcba>
lea    0x0(%esi),%esi
test   %ecx,%ecx
movb   $0x0,(%esi)
jne    100d5 <__sprintf_chk@plt+0xe3e5>
xor    %eax,%eax
jmp    f886 <__sprintf_chk@plt+0xdb96>
lea    0x0(%esi),%esi
mov    0x50(%esp),%edi
mov    0x40(%esp),%eax
movl   $0x0,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
mov    %edi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
je     fa28 <__sprintf_chk@plt+0xdd38>
test   %esi,%esi
jne    faf1 <__sprintf_chk@plt+0xde01>
lea    0x0(%esi),%esi
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f488 <__sprintf_chk@plt+0xd798>
mov    0x3c(%esp),%eax
movl   $0x2ae,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x9c(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6b8c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a2d(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    f488 <__sprintf_chk@plt+0xd798>
nop
mov    0x48(%esp),%ecx
mov    %ecx,%eax
add    $0x5,%eax
mov    %eax,0x18(%esp)
mov    (%ecx),%eax
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   1730 <__snprintf_chk@plt>
jmp    f40b <__sprintf_chk@plt+0xd71b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
jmp    f900 <__sprintf_chk@plt+0xdc10>
mov    %eax,%edx
mov    0x54(%esp),%eax
call   e460 <__sprintf_chk@plt+0xc770>
mov    %esi,%edx
mov    %eax,%edi
mov    0x54(%esp),%eax
call   e460 <__sprintf_chk@plt+0xc770>
mov    %eax,(%esp)
mov    %eax,0x60(%esp)
call   1a30 <strlen@plt>
mov    %edi,(%esp)
add    $0x1,%eax
mov    %eax,0x3c(%esp)
call   1a30 <strlen@plt>
mov    %eax,0x64(%esp)
add    $0x1,%eax
mov    %eax,0x50(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     102b3 <__sprintf_chk@plt+0xe5c3>
mov    0x3c(%esp),%eax
mov    0x50(%esp),%edx
lea    0x4(%eax,%edx,1),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     10362 <__sprintf_chk@plt+0xe672>
mov    0x64(%esp),%ecx
mov    0x50(%esp),%edx
lea    0x5(%eax,%ecx,1),%eax
mov    %eax,(%esi)
lea    0x4(%esi),%eax
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x3c(%esp),%ecx
mov    (%esi),%eax
mov    %ecx,0x8(%esp)
mov    0x60(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x58(%esp),%eax
mov    %esi,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     1035a <__sprintf_chk@plt+0xe66a>
mov    0x58(%esp),%ecx
mov    %eax,0x4(%ecx)
jmp    f488 <__sprintf_chk@plt+0xd798>
xchg   %ax,%ax
mov    0x4c(%esp),%eax
mov    %esi,0x1c(%esp)
movl   $0x39d,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6c67(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x69dc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    f436 <__sprintf_chk@plt+0xd746>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
je     fa28 <__sprintf_chk@plt+0xdd38>
mov    %eax,%edx
mov    0x54(%esp),%eax
call   e460 <__sprintf_chk@plt+0xc770>
mov    0x58(%esp),%ecx
lea    0x8(%ecx),%edx
mov    %eax,(%esp)
mov    %ecx,%eax
call   ebe0 <__sprintf_chk@plt+0xcef0>
jmp    f488 <__sprintf_chk@plt+0xd798>
lea    0x0(%esi),%esi
mov    0x50(%esp),%esi
mov    0x40(%esp),%eax
movl   $0x0,(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
mov    %esi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
lea    -0x6ae4(%ebx),%eax
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
mov    %eax,%esi
je     fa28 <__sprintf_chk@plt+0xdd38>
test   %edi,%edi
je     fa28 <__sprintf_chk@plt+0xdd38>
mov    0x54(%esp),%eax
mov    %edi,%edx
call   e460 <__sprintf_chk@plt+0xc770>
mov    0x58(%esp),%ecx
mov    %esi,0x4(%esp)
lea    0xc(%ecx),%edx
mov    %eax,(%esp)
mov    %ecx,%eax
call   ecf0 <__sprintf_chk@plt+0xd000>
jmp    f488 <__sprintf_chk@plt+0xd798>
nop
test   %ecx,%ecx
movb   $0x0,(%esi)
jne    100b8 <__sprintf_chk@plt+0xe3c8>
lea    0x1(%esi),%edx
xor    %edi,%edi
mov    %edx,%esi
xor    %ecx,%ecx
jmp    f9a3 <__sprintf_chk@plt+0xdcb3>
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
je     f9a0 <__sprintf_chk@plt+0xdcb0>
lea    0x1(%esi),%edi
mov    %edi,%esi
jmp    f9a3 <__sprintf_chk@plt+0xdcb3>
lea    0x0(%esi),%esi
mov    0x50(%esp),%esi
mov    0x40(%esp),%eax
movl   $0x0,(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
mov    %esi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
lea    -0x6ae4(%ebx),%eax
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
mov    %eax,%esi
je     fa28 <__sprintf_chk@plt+0xdd38>
test   %edi,%edi
je     fa28 <__sprintf_chk@plt+0xdd38>
mov    0x54(%esp),%eax
mov    %edi,%edx
call   e460 <__sprintf_chk@plt+0xc770>
mov    0x58(%esp),%ecx
lea    0x14(%ecx),%edx
mov    0x3c(%esp),%edi
mov    %edx,0x8(%esp)
mov    %eax,%edx
mov    %ecx,%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   ea40 <__sprintf_chk@plt+0xcd50>
jmp    f488 <__sprintf_chk@plt+0xd798>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%esi
mov    0x40(%esp),%eax
movl   $0x0,(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
mov    %esi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
lea    -0x6ae4(%ebx),%eax
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
mov    %eax,%esi
je     fa28 <__sprintf_chk@plt+0xdd38>
test   %edi,%edi
je     fa28 <__sprintf_chk@plt+0xdd38>
mov    0x54(%esp),%eax
mov    %edi,%edx
call   e460 <__sprintf_chk@plt+0xc770>
mov    0x58(%esp),%ecx
lea    0x10(%ecx),%edx
jmp    fd64 <__sprintf_chk@plt+0xe074>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%edi
mov    0x40(%esp),%eax
movl   $0x0,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
mov    %edi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
lea    -0x6ae4(%ebx),%eax
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
mov    %eax,0x68(%esp)
je     fa28 <__sprintf_chk@plt+0xdd38>
test   %esi,%esi
je     fa28 <__sprintf_chk@plt+0xdd38>
mov    0x54(%esp),%eax
mov    %esi,%edx
call   e460 <__sprintf_chk@plt+0xc770>
mov    %eax,(%esp)
mov    %eax,0x7c(%esp)
call   1a30 <strlen@plt>
mov    %eax,0x80(%esp)
add    $0x1,%eax
mov    %eax,0x8c(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     10530 <__sprintf_chk@plt+0xe840>
mov    0x68(%esp),%ecx
mov    %ebp,0x84(%esp)
movl   $0x0,0x60(%esp)
movb   $0x0,0x3c(%esp)
mov    %ecx,%eax
add    $0x1,%eax
mov    %eax,0x88(%esp)
mov    %eax,%esi
mov    %ecx,%eax
lea    -0x6c2a(%ebx),%ecx
mov    %eax,%ebp
mov    %ecx,0x78(%esp)
lea    -0x6c2f(%ebx),%ecx
movl   $0x0,0x64(%esp)
movl   $0x0,0x70(%esp)
movl   $0x0,0x6c(%esp)
mov    %ecx,0x74(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x1(%esi),%edx
lea    -0x1(%esi),%edi
test   %dl,%dl
je     ff18 <__sprintf_chk@plt+0xe228>
mov    %edx,0x50(%esp)
call   1cd0 <__ctype_b_loc@plt>
mov    0x50(%esp),%edx
movsbl %dl,%ecx
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%ecx,2)
je     100f8 <__sprintf_chk@plt+0xe408>
cmpb   $0x0,0x3c(%esp)
jne    10136 <__sprintf_chk@plt+0xe446>
cmp    %ebp,%edi
movb   $0x1,0x3c(%esp)
jbe    100fd <__sprintf_chk@plt+0xe40d>
sub    %ebp,%edi
cmp    $0x4,%edi
je     10170 <__sprintf_chk@plt+0xe480>
cmp    $0x5,%edi
je     101a2 <__sprintf_chk@plt+0xe4b2>
test   %dl,%dl
jne    10118 <__sprintf_chk@plt+0xe428>
cmpb   $0x0,0x3c(%esp)
je     10118 <__sprintf_chk@plt+0xe428>
mov    0x58(%esp),%eax
mov    0x84(%esp),%ebp
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     104df <__sprintf_chk@plt+0xe7ef>
mov    0x6c(%esp),%eax
mov    0x80(%esp),%ecx
lea    0x0(,%eax,4),%esi
mov    0x70(%esp),%eax
lea    0x0(,%eax,4),%edi
mov    0x64(%esp),%eax
lea    0x15(%eax,%ecx,1),%eax
add    %esi,%eax
add    %edi,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,0x64(%esp)
je     10579 <__sprintf_chk@plt+0xe889>
mov    0x64(%esp),%ecx
mov    0x6c(%esp),%edx
mov    %ecx,%eax
mov    %edx,0xc(%ecx)
mov    0x70(%esp),%edx
add    $0x14,%eax
mov    %eax,0x4(%ecx)
add    %esi,%eax
mov    0x8c(%esp),%esi
mov    %eax,0x8(%ecx)
add    %edi,%eax
mov    %ecx,%edi
mov    %eax,(%ecx)
mov    %edx,0x10(%ecx)
mov    0x7c(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   1810 <memcpy@plt>
mov    (%edi),%eax
mov    %ebp,0x74(%esp)
mov    0x68(%esp),%ebp
movl   $0x0,0x60(%esp)
movl   $0x0,0x7c(%esp)
add    %esi,%eax
mov    0x88(%esp),%esi
mov    %eax,0x6c(%esp)
lea    -0x6c2a(%ebx),%eax
movl   $0x0,0x78(%esp)
mov    %eax,0x70(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x1(%esi),%edi
lea    -0x1(%esi),%edx
mov    %edi,%eax
test   %al,%al
je     10060 <__sprintf_chk@plt+0xe370>
mov    %edx,0x50(%esp)
call   1cd0 <__ctype_b_loc@plt>
mov    %edi,%ecx
mov    0x50(%esp),%edx
movsbl %cl,%ecx
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%ecx,2)
je     10108 <__sprintf_chk@plt+0xe418>
cmpb   $0x0,0x3c(%esp)
jne    10160 <__sprintf_chk@plt+0xe470>
cmp    %ebp,%edx
movb   $0x1,0x3c(%esp)
jbe    1010d <__sprintf_chk@plt+0xe41d>
lea    0x0(%esi,%eiz,1),%esi
sub    %ebp,%edx
cmp    $0x4,%edx
je     101d7 <__sprintf_chk@plt+0xe4e7>
cmp    $0x5,%edx
je     10210 <__sprintf_chk@plt+0xe520>
mov    %edi,%eax
test   %al,%al
jne    10140 <__sprintf_chk@plt+0xe450>
cmpb   $0x0,0x3c(%esp)
je     10140 <__sprintf_chk@plt+0xe450>
mov    0x64(%esp),%eax
mov    0x74(%esp),%ebp
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     105de <__sprintf_chk@plt+0xe8ee>
mov    0x58(%esp),%ecx
mov    %eax,0x18(%ecx)
jmp    f488 <__sprintf_chk@plt+0xd798>
test   %edx,%edx
je     fcdb <__sprintf_chk@plt+0xdfeb>
mov    0x58(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   eea0 <__sprintf_chk@plt+0xd1b0>
jmp    fcdb <__sprintf_chk@plt+0xdfeb>
test   %edx,%edx
je     f9d3 <__sprintf_chk@plt+0xdce3>
mov    0x58(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   eea0 <__sprintf_chk@plt+0xd1b0>
xor    %eax,%eax
jmp    f886 <__sprintf_chk@plt+0xdb96>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x3c(%esp)
add    $0x1,%esi
jmp    fed8 <__sprintf_chk@plt+0xe1e8>
lea    0x0(%esi),%esi
movb   $0x0,0x3c(%esp)
add    $0x1,%esi
jmp    10018 <__sprintf_chk@plt+0xe328>
lea    0x0(%esi),%esi
cmpl   $0x1,0x60(%esp)
je     10247 <__sprintf_chk@plt+0xe557>
cmpl   $0x2,0x60(%esp)
je     103c6 <__sprintf_chk@plt+0xe6d6>
test   %dl,%dl
je     ff3f <__sprintf_chk@plt+0xe24f>
mov    %esi,%ebp
add    $0x1,%esi
jmp    fed8 <__sprintf_chk@plt+0xe1e8>
cmpl   $0x1,0x60(%esp)
je     103dc <__sprintf_chk@plt+0xe6ec>
cmpl   $0x2,0x60(%esp)
mov    %edi,%eax
je     10422 <__sprintf_chk@plt+0xe732>
test   %al,%al
je     10089 <__sprintf_chk@plt+0xe399>
mov    %esi,%ebp
add    $0x1,%esi
jmp    10018 <__sprintf_chk@plt+0xe328>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
movl   $0x4,0x8(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
mov    %eax,0x4(%esp)
call   1850 <memcmp@plt>
mov    0x50(%esp),%edx
test   %eax,%eax
jne    ff2c <__sprintf_chk@plt+0xe23c>
movl   $0x1,0x60(%esp)
jmp    1012e <__sprintf_chk@plt+0xe43e>
mov    0x78(%esp),%eax
movl   $0x5,0x8(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
mov    %eax,0x4(%esp)
call   1850 <memcmp@plt>
mov    0x50(%esp),%edx
test   %eax,%eax
jne    ff2c <__sprintf_chk@plt+0xe23c>
movl   $0x2,0x60(%esp)
jmp    1012e <__sprintf_chk@plt+0xe43e>
lea    -0x6c2f(%ebx),%eax
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
call   1850 <memcmp@plt>
mov    0x50(%esp),%edx
test   %eax,%eax
jne    10074 <__sprintf_chk@plt+0xe384>
mov    %edi,%eax
movl   $0x1,0x60(%esp)
jmp    10158 <__sprintf_chk@plt+0xe468>
mov    0x70(%esp),%eax
movl   $0x5,0x8(%esp)
mov    %ebp,(%esp)
mov    %edx,0x50(%esp)
mov    %eax,0x4(%esp)
call   1850 <memcmp@plt>
mov    0x50(%esp),%edx
test   %eax,%eax
jne    10074 <__sprintf_chk@plt+0xe384>
mov    %edi,%eax
movl   $0x2,0x60(%esp)
jmp    10158 <__sprintf_chk@plt+0xe468>
mov    0x64(%esp),%eax
addl   $0x1,0x6c(%esp)
lea    0x1(%edi,%eax,1),%eax
mov    %eax,0x64(%esp)
jmp    1012e <__sprintf_chk@plt+0xe43e>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f2a8 <__sprintf_chk@plt+0xd5b8>
mov    0x60(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x34c,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x69ec(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    f2a8 <__sprintf_chk@plt+0xd5b8>
mov    0x60(%esp),%eax
mov    %edi,0x1c(%esp)
movl   $0xef,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6c43(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a43(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    fb46 <__sprintf_chk@plt+0xde56>
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    f9d3 <__sprintf_chk@plt+0xdce3>
lea    -0x6b58(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6acc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
movl   $0x225,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
xor    %eax,%eax
jmp    f886 <__sprintf_chk@plt+0xdb96>
mov    %esi,(%esp)
call   1800 <free@plt>
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f488 <__sprintf_chk@plt+0xd798>
mov    0x60(%esp),%eax
mov    %edi,0x1c(%esp)
movl   $0x104,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6be8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6a43(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    f488 <__sprintf_chk@plt+0xd798>
mov    0x64(%esp),%eax
addl   $0x1,0x70(%esp)
lea    0x1(%edi,%eax,1),%eax
mov    %eax,0x64(%esp)
jmp    1012e <__sprintf_chk@plt+0xe43e>
mov    0x64(%esp),%eax
mov    0x6c(%esp),%ecx
mov    0x78(%esp),%edi
mov    %edx,0x50(%esp)
mov    0x4(%eax),%eax
mov    %ecx,(%eax,%edi,4)
mov    %ecx,%edi
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ecx,(%esp)
call   1810 <memcpy@plt>
mov    0x50(%esp),%edx
addl   $0x1,0x78(%esp)
lea    0x1(%edi,%edx,1),%eax
movb   $0x0,(%edi,%edx,1)
mov    %eax,0x6c(%esp)
movzbl -0x1(%esi),%eax
jmp    10158 <__sprintf_chk@plt+0xe468>
mov    0x64(%esp),%eax
mov    0x6c(%esp),%ecx
mov    0x7c(%esp),%edi
mov    %edx,0x50(%esp)
mov    0x8(%eax),%eax
mov    %ecx,(%eax,%edi,4)
mov    %ecx,%edi
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ecx,(%esp)
call   1810 <memcpy@plt>
mov    0x50(%esp),%edx
addl   $0x1,0x7c(%esp)
lea    0x1(%edi,%edx,1),%eax
movb   $0x0,(%edi,%edx,1)
mov    %eax,0x6c(%esp)
movzbl -0x1(%esi),%eax
jmp    10158 <__sprintf_chk@plt+0xe468>
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f9d3 <__sprintf_chk@plt+0xdce3>
neg    %edi
mov    %edi,(%esp)
call   19a0 <strerror@plt>
movl   $0x22d,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6b28(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6acc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
xor    %eax,%eax
jmp    f886 <__sprintf_chk@plt+0xdb96>
xor    %esi,%esi
movl   $0x0,0x50(%esp)
jmp    f387 <__sprintf_chk@plt+0xd697>
mov    0x70(%esp),%eax
movl   $0x16b,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6c24(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6ab1(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    ff5d <__sprintf_chk@plt+0xe26d>
mov    0x7c(%esp),%eax
movl   $0x140,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x70f6(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6ab1(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    fe7b <__sprintf_chk@plt+0xe18b>
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    f488 <__sprintf_chk@plt+0xd798>
mov    0x7c(%esp),%eax
movl   $0x172,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6cc6(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6ab1(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x6cfc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    f488 <__sprintf_chk@plt+0xd798>
call   1b330 <__sprintf_chk@plt+0x19640>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    f488 <__sprintf_chk@plt+0xd798>
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     10600 <__sprintf_chk@plt+0xe910>
xor    %edx,%edx
jmp    e910 <__sprintf_chk@plt+0xcc20>
nop
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     10628 <__sprintf_chk@plt+0xe938>
mov    $0x1,%edx
jmp    e910 <__sprintf_chk@plt+0xcc20>
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     10648 <__sprintf_chk@plt+0xe958>
mov    $0x2,%edx
jmp    e910 <__sprintf_chk@plt+0xcc20>
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     10668 <__sprintf_chk@plt+0xe978>
mov    $0x3,%edx
jmp    e910 <__sprintf_chk@plt+0xcc20>
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     10688 <__sprintf_chk@plt+0xe998>
mov    $0x4,%edx
jmp    e910 <__sprintf_chk@plt+0xcc20>
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     106a8 <__sprintf_chk@plt+0xe9b8>
mov    $0x5,%edx
jmp    e910 <__sprintf_chk@plt+0xcc20>
lea    0x0(%esi),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     106d0 <__sprintf_chk@plt+0xe9e0>
mov    0xc(%eax),%edx
test   %edx,%edx
je     106d0 <__sprintf_chk@plt+0xe9e0>
mov    %edx,(%esp)
call   *0x14(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    106c8 <__sprintf_chk@plt+0xe9d8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x16912,%ebx
test   %esi,%esi
je     10738 <__sprintf_chk@plt+0xea48>
mov    0xc(%esi),%eax
test   %eax,%eax
je     10738 <__sprintf_chk@plt+0xea48>
mov    0x18(%esi),%edx
test   %edx,%edx
je     10738 <__sprintf_chk@plt+0xea48>
cmpb   $0x0,0x4(%esi)
jne    10718 <__sprintf_chk@plt+0xea28>
mov    %eax,(%esp)
call   *%edx
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   *0x18(%esi)
mov    %eax,0x10(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    10711 <__sprintf_chk@plt+0xea21>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x168b2,%ebx
test   %esi,%esi
je     10798 <__sprintf_chk@plt+0xeaa8>
mov    0xc(%esi),%eax
test   %eax,%eax
je     10780 <__sprintf_chk@plt+0xea90>
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   e350 <__sprintf_chk@plt+0xc660>
test   %eax,%eax
mov    %eax,0xc(%esi)
setne  %al
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
test   %eax,%eax
mov    %eax,0xc(%esi)
setne  %al
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x16852,%ebx
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
nop
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x16826,%ebx
sub    $0x10,%esp
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x8(%edi),%edx
test   %edx,%edx
jne    107fa <__sprintf_chk@plt+0xeb0a>
jmp    10808 <__sprintf_chk@plt+0xeb18>
nop
mov    %esi,%edx
mov    (%edx),%esi
mov    %edx,(%esp)
call   1800 <free@plt>
test   %esi,%esi
jne    107f8 <__sprintf_chk@plt+0xeb08>
mov    %edi,(%esp)
call   1800 <free@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    %eax,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x167d7,%ebx
sub    $0x24,%esp
call   1ad0 <__errno_location@plt>
movl   $0x0,(%eax)
lea    0x1c(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   1930 <fread@plt>
mov    0x1c(%esp),%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
bswap  %eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    (%eax),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x16780,%ebx
mov    0x40(%esp),%ebp
mov    %edx,0x18(%esp)
mov    0x44(%esp),%edx
test   %esi,%esi
je     108ad <__sprintf_chk@plt+0xebbd>
cmp    0x4(%esi),%edx
ja     108a5 <__sprintf_chk@plt+0xebb5>
jmp    108ad <__sprintf_chk@plt+0xebbd>
lea    0x0(%esi),%esi
cmp    %edx,0x4(%esi)
jae    108ad <__sprintf_chk@plt+0xebbd>
mov    %esi,%edi
mov    (%esi),%esi
test   %esi,%esi
jne    108a0 <__sprintf_chk@plt+0xebb0>
lea    0xd(%ebp),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
je     108ff <__sprintf_chk@plt+0xec0f>
mov    0x1c(%esp),%edx
lea    0xc(%eax),%eax
mov    %ecx,0x1c(%esp)
mov    0x18(%esp),%ecx
mov    %esi,-0xc(%eax)
mov    %ebp,-0x4(%eax)
mov    %edx,-0x8(%eax)
mov    %ecx,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x1c(%esp),%ecx
xor    %eax,%eax
movb   $0x0,0xc(%ecx,%ebp,1)
mov    %ecx,(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%eax
jmp    108f7 <__sprintf_chk@plt+0xec07>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8(%eax),%ebp
mov    %eax,0xc(%esp)
mov    0xc(%eax),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x166d8,%ebx
lea    (%eax,%eax,2),%eax
lea    0x0(%ebp,%eax,4),%esi
cmp    %esi,%ebp
jae    1095e <__sprintf_chk@plt+0xec6e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
add    $0xc,%ebp
mov    -0x4(%ebp),%edx
mov    %eax,0x4(%esp)
mov    -0x8(%ebp),%eax
mov    %eax,(%esp)
mov    %edi,%eax
call   10870 <__sprintf_chk@plt+0xeb80>
cmp    %ebp,%esi
ja     10940 <__sprintf_chk@plt+0xec50>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
sub    $0x10,%esp
mov    0x8(%eax),%esi
test   %esi,%esi
je     109b5 <__sprintf_chk@plt+0xecc5>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
lea    0xc(%esi),%edx
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
mov    %edi,%eax
call   10870 <__sprintf_chk@plt+0xeb80>
mov    (%esi),%esi
test   %esi,%esi
jne    10998 <__sprintf_chk@plt+0xeca8>
add    $0x10,%esp
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
jmp    107d0 <__sprintf_chk@plt+0xeae0>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %eax,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x16627,%ebx
sub    $0x14,%esp
call   1ad0 <__errno_location@plt>
movl   $0x0,(%eax)
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    10a04 <__sprintf_chk@plt+0xed14>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,(%esp)
call   1b80 <__uflow@plt>
jmp    109fe <__sprintf_chk@plt+0xed0e>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x23c,%esp
mov    0x4(%eax),%esi
mov    %eax,0x20(%esp)
mov    %edx,%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x165d8,%ebx
and    $0xfffffff,%eax
je     10bff <__sprintf_chk@plt+0xef0f>
add    %eax,%esi
test   %edx,%edx
lea    -0x68b5(%ebx),%eax
mov    %eax,0x1c(%esp)
js     10be2 <__sprintf_chk@plt+0xeef2>
mov    %edx,%ecx
and    $0x20000000,%ecx
jne    10b08 <__sprintf_chk@plt+0xee18>
mov    $0x5,%eax
movb   $0x0,0x2f(%esp)
movb   $0x80,0x2e(%esp)
and    $0x40000000,%edx
mov    %edx,%edi
je     10b56 <__sprintf_chk@plt+0xee66>
mov    (%esi),%edi
add    $0x4,%esi
bswap  %edi
mov    %edi,%edx
lea    (%edi,%edi,2),%ebp
add    %ebp,%eax
shl    $0x2,%eax
mov    %eax,(%esp)
mov    %ecx,0x28(%esp)
mov    %edx,0x24(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     10bff <__sprintf_chk@plt+0xef0f>
mov    0x20(%esp),%edx
mov    0x28(%esp),%ecx
mov    %edx,(%eax)
mov    0x1c(%esp),%edx
mov    %edx,0x4(%eax)
mov    0x24(%esp),%edx
test   %edx,%edx
jne    10b5f <__sprintf_chk@plt+0xee6f>
mov    %edi,0xc(%eax)
mov    %eax,%esi
movl   $0x0,0x8(%eax)
movzbl 0x2e(%esp),%eax
lea    0x30(%esp),%edx
shl    $0x2,%ecx
mov    %al,0x10(%esi)
movzbl 0x2f(%esp),%eax
mov    %al,0x11(%esi)
lea    0x14(%esi),%eax
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
add    $0x23c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl (%esi),%eax
add    $0x2,%esi
movsbl %al,%ecx
movsbl -0x1(%esi),%eax
mov    %cl,0x2e(%esp)
mov    %al,0x2f(%esp)
sub    %ecx,%eax
lea    0x1(%eax),%edi
test   %edi,%edi
jle    10c0c <__sprintf_chk@plt+0xef1c>
xor    %eax,%eax
lea    0x30(%esp),%ebp
mov    (%esi,%eax,4),%ecx
bswap  %ecx
mov    %ecx,0x0(%ebp,%eax,4)
add    $0x1,%eax
cmp    %eax,%edi
jne    10b30 <__sprintf_chk@plt+0xee40>
and    $0x40000000,%edx
mov    %edi,%ecx
lea    (%esi,%edi,4),%esi
lea    0x5(%edi),%eax
mov    %edx,%edi
jne    10a78 <__sprintf_chk@plt+0xed88>
xor    %ebp,%ebp
xor    %edx,%edx
jmp    10a84 <__sprintf_chk@plt+0xed94>
mov    0x18(%esp),%ebp
shl    $0x2,%ecx
mov    %edx,0x1c(%esp)
lea    0x14(%ebp,%ecx,1),%eax
mov    %eax,0x8(%ebp)
movzbl 0x2e(%esp),%eax
mov    %edi,0xc(%ebp)
lea    0x30(%esp),%edi
mov    %al,0x10(%ebp)
movzbl 0x2f(%esp),%eax
mov    %al,0x11(%ebp)
lea    0x14(%ebp),%eax
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x1c(%esp),%edx
test   %edx,%edx
jle    10bd3 <__sprintf_chk@plt+0xeee3>
mov    0x8(%ebp),%edi
lea    (%edx,%edx,2),%eax
mov    %esi,%edx
lea    (%edi,%eax,4),%eax
mov    %eax,%esi
mov    (%edx),%eax
lea    0x4(%edx),%ebp
add    $0xc,%edi
bswap  %eax
mov    %eax,-0xc(%edi)
mov    %ebp,(%esp)
call   1a30 <strlen@plt>
mov    %ebp,-0x4(%edi)
mov    %eax,-0x8(%edi)
cmp    %esi,%edi
lea    0x1(%ebp,%eax,1),%edx
jne    10bb0 <__sprintf_chk@plt+0xeec0>
mov    0x18(%esp),%eax
add    $0x23c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
mov    %edx,0x18(%esp)
call   1a30 <strlen@plt>
mov    0x18(%esp),%edx
mov    %esi,0x1c(%esp)
lea    0x1(%esi,%eax,1),%esi
jmp    10a4d <__sprintf_chk@plt+0xed5d>
add    $0x23c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%ecx
add    $0x6,%eax
jmp    10a6a <__sprintf_chk@plt+0xed7a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
movzbl 0x10(%eax),%ecx
cmp    %edx,%ecx
jg     10c48 <__sprintf_chk@plt+0xef58>
push   %esi
movzbl 0x11(%eax),%esi
cmp    %esi,%edx
jg     10c40 <__sprintf_chk@plt+0xef50>
sub    %ecx,%edx
mov    0x14(%eax,%edx,4),%edx
mov    (%eax),%eax
pop    %esi
jmp    10a10 <__sprintf_chk@plt+0xed20>
nop
xor    %eax,%eax
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1639c,%ebx
test   $0x7ff,%esi
je     10c7e <__sprintf_chk@plt+0xef8e>
and    $0xfffff800,%esi
add    $0x800,%esi
cmp    %esi,(%edi)
mov    $0x1,%ecx
je     10ca4 <__sprintf_chk@plt+0xefb4>
mov    %esi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   1960 <realloc@plt>
test   %eax,%eax
je     10cb0 <__sprintf_chk@plt+0xefc0>
mov    %eax,0x0(%ebp)
mov    $0x1,%ecx
mov    %esi,(%edi)
add    $0x1c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %ecx,%ecx
test   %esi,%esi
jne    10ca4 <__sprintf_chk@plt+0xefb4>
mov    %eax,0x0(%ebp)
mov    $0x1,%ecx
mov    %esi,(%edi)
jmp    10ca4 <__sprintf_chk@plt+0xefb4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %eax,%esi
sub    $0x18,%esp
lea    0x4(%eax),%edx
mov    0x8(%eax),%eax
add    $0x1,%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   10c50 <__sprintf_chk@plt+0xef60>
test   %al,%al
je     10d00 <__sprintf_chk@plt+0xf010>
mov    0x8(%esi),%eax
mov    (%esi),%edx
movb   $0x0,(%edx,%eax,1)
mov    (%esi),%eax
add    $0x18,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x18,%esp
xor    %eax,%eax
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
sub    $0x10,%esp
lea    0x4(%eax),%edx
mov    0x8(%eax),%eax
add    $0x1,%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   10c50 <__sprintf_chk@plt+0xef60>
test   %al,%al
mov    %eax,%ebp
je     10d41 <__sprintf_chk@plt+0xf051>
mov    0x8(%esi),%edx
mov    %edi,%eax
mov    (%esi),%ecx
mov    %al,(%ecx,%edx,1)
addl   $0x1,0x8(%esi)
add    $0x10,%esp
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
xor    %esi,%esi
jmp    10d71 <__sprintf_chk@plt+0xf081>
nop
lea    0x0(%esi,%eiz,1),%esi
movsbl %al,%edx
mov    %ebp,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
test   %al,%al
je     10d7c <__sprintf_chk@plt+0xf08c>
add    $0x1,%esi
mov    %edi,%eax
call   109d0 <__sprintf_chk@plt+0xece0>
test   %eax,%eax
jne    10d60 <__sprintf_chk@plt+0xf070>
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%eax
push   %ebx
mov    %edx,%esi
sub    $0x3c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1625e,%ebx
and    $0xfffffff,%eax
mov    %edx,0x14(%esp)
je     10f40 <__sprintf_chk@plt+0xf250>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   18b0 <fseek@plt>
test   %esi,%esi
js     10f50 <__sprintf_chk@plt+0xf260>
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   1ce0 <calloc@plt>
mov    %eax,0x18(%esp)
testl  $0x20000000,0x14(%esp)
jne    10e38 <__sprintf_chk@plt+0xf148>
movl   $0x10,(%esp)
call   1970 <malloc@plt>
mov    %eax,%esi
movb   $0x80,0xc(%eax)
movb   $0x0,0xd(%eax)
testl  $0x40000000,0x14(%esp)
movl   $0x0,0x8(%esi)
jne    10ea8 <__sprintf_chk@plt+0xf1b8>
mov    0x18(%esp),%eax
mov    %edi,(%esi)
mov    %eax,0x4(%esi)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   109d0 <__sprintf_chk@plt+0xece0>
mov    %eax,%esi
mov    %edi,%eax
call   109d0 <__sprintf_chk@plt+0xece0>
mov    %esi,0x1c(%esp)
mov    %eax,%ebp
movsbl %al,%edx
movsbl 0x1c(%esp),%eax
sub    %eax,%edx
lea    0x1(%edx),%eax
mov    %eax,0x10(%esp)
lea    0x14(,%edx,4),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
mov    %eax,%esi
movzbl 0x1c(%esp),%eax
mov    %al,0xc(%esi)
mov    %ebp,%eax
mov    %al,0xd(%esi)
mov    0x10(%esp),%eax
test   %eax,%eax
jle    10e0b <__sprintf_chk@plt+0xf11b>
xor    %ebp,%ebp
nop
mov    %edi,%eax
call   10820 <__sprintf_chk@plt+0xeb30>
mov    %eax,0x10(%esi,%ebp,4)
add    $0x1,%ebp
cmp    %ebp,0x10(%esp)
jne    10e88 <__sprintf_chk@plt+0xf198>
jmp    10e0b <__sprintf_chk@plt+0xf11b>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   10820 <__sprintf_chk@plt+0xeb30>
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
test   %eax,%eax
je     10fa3 <__sprintf_chk@plt+0xf2b3>
lea    0x8(%esi),%ecx
mov    %eax,0x10(%esp)
lea    0x24(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %eax,%ebp
mov    %esi,0x1c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   10820 <__sprintf_chk@plt+0xeb30>
mov    %edi,%edx
mov    %eax,%esi
mov    %ebp,%eax
call   10d50 <__sprintf_chk@plt+0xf060>
mov    %ebp,%eax
call   10cd0 <__sprintf_chk@plt+0xefe0>
mov    0x2c(%esp),%edx
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,%edx
mov    0x14(%esp),%eax
call   10870 <__sprintf_chk@plt+0xeb80>
subl   $0x1,0x10(%esp)
movl   $0x0,0x2c(%esp)
jne    10ee8 <__sprintf_chk@plt+0xf1f8>
mov    0x1c(%esp),%esi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    10e20 <__sprintf_chk@plt+0xf130>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,%edx
lea    0x24(%esp),%eax
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
call   10d50 <__sprintf_chk@plt+0xf060>
mov    0x2c(%esp),%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1960 <realloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     10fa7 <__sprintf_chk@plt+0xf2b7>
mov    0x2c(%esp),%eax
mov    0x18(%esp),%ecx
movb   $0x0,(%ecx,%eax,1)
jmp    10deb <__sprintf_chk@plt+0xf0fb>
xor    %eax,%eax
jmp    10f2e <__sprintf_chk@plt+0xf23e>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    10deb <__sprintf_chk@plt+0xf0fb>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %edx,%ecx
jg     10fe8 <__sprintf_chk@plt+0xf2f8>
push   %esi
movzbl 0xd(%eax),%esi
cmp    %esi,%edx
jg     10fe0 <__sprintf_chk@plt+0xf2f0>
sub    %ecx,%edx
mov    0x10(%eax,%edx,4),%edx
mov    (%eax),%eax
pop    %esi
jmp    10d90 <__sprintf_chk@plt+0xf0a0>
nop
xor    %eax,%eax
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1600a,%ebx
sub    $0x18,%esp
movl   $0xf4,0x8(%esp)
lea    -0x68c1(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x69cc(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x69b1(%ebx),%eax
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4(%eax),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15fbf,%ebx
mov    0x40(%esp),%ebp
mov    %eax,0x18(%esp)
movsbl (%esi),%edx
test   %dl,%dl
je     11195 <__sprintf_chk@plt+0xf4a5>
xor    %eax,%eax
mov    %eax,%ebp
xchg   %ax,%ax
add    $0x1,%ebp
mov    %edi,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
movsbl (%esi,%ebp,1),%edx
test   %dl,%dl
jne    11060 <__sprintf_chk@plt+0xf370>
mov    %ebp,0x1c(%esp)
mov    0x40(%esp),%ebp
mov    0x18(%esp),%eax
lea    -0x9bec(%ebx),%ecx
mov    %ecx,0x10(%esp)
lea    -0xbae4(%ebx),%ecx
mov    %ecx,0x14(%esp)
mov    0x8(%eax),%esi
mov    0xc(%eax),%eax
lea    (%eax,%eax,2),%eax
lea    (%esi,%eax,4),%eax
cmp    %eax,%esi
mov    %eax,0xc(%esp)
jae    1110c <__sprintf_chk@plt+0xf41c>
xchg   %ax,%ax
mov    0x8(%edi),%eax
add    $0xc,%esi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,0x4(%esp)
call   c240 <__sprintf_chk@plt+0xa550>
mov    0x10(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   c240 <__sprintf_chk@plt+0xa550>
mov    -0x8(%esi),%eax
mov    %eax,0x8(%esp)
mov    -0x4(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   c240 <__sprintf_chk@plt+0xa550>
mov    0x14(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   c240 <__sprintf_chk@plt+0xa550>
cmp    %esi,0xc(%esp)
ja     110a8 <__sprintf_chk@plt+0xf3b8>
mov    0x18(%esp),%eax
mov    %eax,%ecx
movzbl 0x10(%eax),%esi
movzbl 0x10(%eax),%eax
cmp    %al,0x11(%ecx)
jb     11171 <__sprintf_chk@plt+0xf481>
mov    %ebp,0x40(%esp)
mov    0x18(%esp),%ebp
nop
mov    %esi,%edx
mov    %ebp,%eax
call   10c20 <__sprintf_chk@plt+0xef30>
test   %eax,%eax
mov    %eax,0xc(%esp)
je     11166 <__sprintf_chk@plt+0xf476>
mov    %esi,%eax
movsbl %al,%edx
mov    %edi,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
mov    0x40(%esp),%eax
mov    %edi,%edx
mov    0xc(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,%eax
call   11030 <__sprintf_chk@plt+0xf340>
mov    0x8(%edi),%eax
test   %eax,%eax
je     111a2 <__sprintf_chk@plt+0xf4b2>
sub    $0x1,%eax
mov    %eax,0x8(%edi)
movzbl 0x11(%ebp),%eax
add    $0x1,%esi
cmp    %esi,%eax
jge    11128 <__sprintf_chk@plt+0xf438>
mov    0x8(%edi),%eax
cmp    0x1c(%esp),%eax
jb     111a7 <__sprintf_chk@plt+0xf4b7>
sub    0x1c(%esp),%eax
mov    %eax,0x8(%edi)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x1c(%esp)
jmp    1107a <__sprintf_chk@plt+0xf38a>
call   10ff0 <__sprintf_chk@plt+0xf300>
call   1d00 <__sprintf_chk@plt+0x10>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x4(%eax),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15e3d,%ebx
mov    0x40(%esp),%edi
movsbl (%eax,%edx,1),%edx
test   %dl,%dl
je     112c0 <__sprintf_chk@plt+0xf5d0>
xor    %eax,%eax
mov    %eax,%edi
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
add    $0x1,%edi
call   10d10 <__sprintf_chk@plt+0xf020>
mov    0x4(%ebp),%eax
add    %edi,%eax
movsbl (%eax,%esi,1),%edx
test   %dl,%dl
jne    111e0 <__sprintf_chk@plt+0xf4f0>
mov    %edi,0x1c(%esp)
mov    0x40(%esp),%edi
movzbl 0x10(%ebp),%eax
cmp    %al,0x11(%ebp)
movzbl 0x10(%ebp),%esi
jb     11265 <__sprintf_chk@plt+0xf575>
xchg   %ax,%ax
mov    %esi,%edx
mov    %ebp,%eax
call   10c20 <__sprintf_chk@plt+0xef30>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     1125a <__sprintf_chk@plt+0xf56a>
mov    %esi,%eax
movsbl %al,%edx
mov    %edi,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
mov    0x48(%esp),%eax
xor    %edx,%edx
mov    0x18(%esp),%ecx
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ecx,%eax
call   111b0 <__sprintf_chk@plt+0xf4c0>
mov    0x8(%edi),%eax
test   %eax,%eax
je     112cd <__sprintf_chk@plt+0xf5dd>
sub    $0x1,%eax
mov    %eax,0x8(%edi)
movzbl 0x11(%ebp),%eax
add    $0x1,%esi
cmp    %esi,%eax
jge    11210 <__sprintf_chk@plt+0xf520>
mov    0xc(%ebp),%eax
test   %eax,%eax
jne    11290 <__sprintf_chk@plt+0xf5a0>
mov    %ebp,(%esp)
call   1800 <free@plt>
mov    0x8(%edi),%eax
cmp    %eax,0x1c(%esp)
ja     112d2 <__sprintf_chk@plt+0xf5e2>
sub    0x1c(%esp),%eax
mov    %eax,0x8(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   10cd0 <__sprintf_chk@plt+0xefe0>
mov    0x44(%esp),%ecx
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   18d0 <fnmatch@plt>
test   %eax,%eax
jne    1126c <__sprintf_chk@plt+0xf57c>
mov    0x48(%esp),%edx
mov    %ebp,%eax
call   10910 <__sprintf_chk@plt+0xec20>
jmp    11274 <__sprintf_chk@plt+0xf584>
movl   $0x0,0x1c(%esp)
jmp    11201 <__sprintf_chk@plt+0xf511>
call   10ff0 <__sprintf_chk@plt+0xf300>
call   1d00 <__sprintf_chk@plt+0x10>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x4(%eax),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15d0f,%ebx
mov    0x40(%esp),%ebp
mov    %eax,0x18(%esp)
movsbl (%esi),%edx
test   %dl,%dl
je     11451 <__sprintf_chk@plt+0xf761>
xor    %eax,%eax
mov    %ebp,0xc(%esp)
mov    %eax,%ebp
lea    0x0(%esi),%esi
add    $0x1,%ebp
mov    %edi,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
movsbl (%esi,%ebp,1),%edx
test   %dl,%dl
jne    11318 <__sprintf_chk@plt+0xf628>
mov    %ebp,0x1c(%esp)
mov    0xc(%esp),%ebp
mov    0x18(%esp),%eax
mov    0x8(%eax),%esi
lea    -0x9bec(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0xbae4(%ebx),%eax
mov    %eax,0x14(%esp)
test   %esi,%esi
je     113c6 <__sprintf_chk@plt+0xf6d6>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,0x4(%esp)
call   c240 <__sprintf_chk@plt+0xa550>
mov    0x10(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   c240 <__sprintf_chk@plt+0xa550>
lea    0xc(%esi),%edx
mov    %edx,(%esp)
mov    %edx,0xc(%esp)
call   1a30 <strlen@plt>
mov    0xc(%esp),%edx
mov    %ebp,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
call   c240 <__sprintf_chk@plt+0xa550>
mov    0x14(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   c240 <__sprintf_chk@plt+0xa550>
mov    (%esi),%esi
test   %esi,%esi
jne    11358 <__sprintf_chk@plt+0xf668>
mov    0x18(%esp),%eax
mov    %eax,%ecx
movzbl 0xc(%eax),%esi
movzbl 0xc(%eax),%eax
cmp    %al,0xd(%ecx)
jb     11431 <__sprintf_chk@plt+0xf741>
mov    %ebp,0x10(%esp)
mov    0x18(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    %ebp,%eax
call   10fc0 <__sprintf_chk@plt+0xf2d0>
test   %eax,%eax
mov    %eax,0xc(%esp)
je     11426 <__sprintf_chk@plt+0xf736>
mov    %esi,%eax
movsbl %al,%edx
mov    %edi,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
mov    0x10(%esp),%eax
mov    %edi,%edx
mov    0xc(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,%eax
call   112e0 <__sprintf_chk@plt+0xf5f0>
mov    0x8(%edi),%eax
test   %eax,%eax
je     1145e <__sprintf_chk@plt+0xf76e>
sub    $0x1,%eax
mov    %eax,0x8(%edi)
movzbl 0xd(%ebp),%eax
add    $0x1,%esi
cmp    %esi,%eax
jge    113e8 <__sprintf_chk@plt+0xf6f8>
mov    0x8(%edi),%eax
cmp    0x1c(%esp),%eax
jb     11463 <__sprintf_chk@plt+0xf773>
sub    0x1c(%esp),%eax
mov    %eax,0x8(%edi)
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    107d0 <__sprintf_chk@plt+0xeae0>
movl   $0x0,0x1c(%esp)
jmp    11332 <__sprintf_chk@plt+0xf642>
call   10ff0 <__sprintf_chk@plt+0xf300>
call   1d00 <__sprintf_chk@plt+0x10>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x4(%eax),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15b7d,%ebx
mov    0x40(%esp),%edi
movsbl (%eax,%edx,1),%edx
test   %dl,%dl
je     1157d <__sprintf_chk@plt+0xf88d>
xor    %eax,%eax
mov    %eax,%edi
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
add    $0x1,%edi
call   10d10 <__sprintf_chk@plt+0xf020>
mov    0x4(%ebp),%eax
add    %edi,%eax
movsbl (%eax,%esi,1),%edx
test   %dl,%dl
jne    114a0 <__sprintf_chk@plt+0xf7b0>
mov    %edi,0x1c(%esp)
mov    0x40(%esp),%edi
movzbl 0xc(%ebp),%eax
cmp    %al,0xd(%ebp)
movzbl 0xc(%ebp),%esi
jb     11525 <__sprintf_chk@plt+0xf835>
xchg   %ax,%ax
mov    %esi,%edx
mov    %ebp,%eax
call   10fc0 <__sprintf_chk@plt+0xf2d0>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     1151a <__sprintf_chk@plt+0xf82a>
mov    %esi,%eax
movsbl %al,%edx
mov    %edi,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
mov    0x48(%esp),%eax
xor    %edx,%edx
mov    0x18(%esp),%ecx
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ecx,%eax
call   11470 <__sprintf_chk@plt+0xf780>
mov    0x8(%edi),%eax
test   %eax,%eax
je     1158a <__sprintf_chk@plt+0xf89a>
sub    $0x1,%eax
mov    %eax,0x8(%edi)
movzbl 0xd(%ebp),%eax
add    $0x1,%esi
cmp    %esi,%eax
jge    114d0 <__sprintf_chk@plt+0xf7e0>
mov    0x8(%ebp),%eax
test   %eax,%eax
je     1154f <__sprintf_chk@plt+0xf85f>
mov    %edi,%eax
call   10cd0 <__sprintf_chk@plt+0xefe0>
mov    0x44(%esp),%ecx
movl   $0x0,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   18d0 <fnmatch@plt>
test   %eax,%eax
je     11570 <__sprintf_chk@plt+0xf880>
mov    %ebp,%eax
call   107d0 <__sprintf_chk@plt+0xeae0>
mov    0x8(%edi),%eax
cmp    %eax,0x1c(%esp)
ja     1158f <__sprintf_chk@plt+0xf89f>
sub    0x1c(%esp),%eax
mov    %eax,0x8(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x48(%esp),%edx
mov    %ebp,%eax
call   10980 <__sprintf_chk@plt+0xec90>
jmp    11556 <__sprintf_chk@plt+0xf866>
movl   $0x0,0x1c(%esp)
jmp    114c1 <__sprintf_chk@plt+0xf7d1>
call   10ff0 <__sprintf_chk@plt+0xf300>
call   1d00 <__sprintf_chk@plt+0x10>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15a52,%ebx
test   %eax,%eax
jne    115c2 <__sprintf_chk@plt+0xf8d2>
jmp    115d0 <__sprintf_chk@plt+0xf8e0>
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    (%eax),%esi
mov    %eax,(%esp)
call   1800 <free@plt>
test   %esi,%esi
jne    115c0 <__sprintf_chk@plt+0xf8d0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15a17,%ebx
sub    $0x1c,%esp
lea    -0x72a2(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     11680 <__sprintf_chk@plt+0xf990>
call   1ad0 <__errno_location@plt>
movl   $0x16,(%eax)
mov    %eax,%edi
mov    %esi,%eax
call   10820 <__sprintf_chk@plt+0xeb30>
cmp    $0xb007f457,%eax
jne    11668 <__sprintf_chk@plt+0xf978>
mov    %esi,%eax
call   10820 <__sprintf_chk@plt+0xeb30>
shr    $0x10,%eax
cmp    $0x2,%eax
jne    11668 <__sprintf_chk@plt+0xf978>
movl   $0x8,(%esp)
call   1970 <malloc@plt>
mov    %eax,%ebp
mov    %esi,(%eax)
mov    %esi,%eax
call   10820 <__sprintf_chk@plt+0xeb30>
mov    %eax,0x4(%ebp)
mov    %ebp,%eax
movl   $0x0,(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   1840 <fclose@plt>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    1165a <__sprintf_chk@plt+0xf96a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15962,%ebx
mov    (%esi),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15930,%ebx
mov    0x48(%esp),%ebp
mov    0x4(%eax),%edx
mov    (%eax),%eax
call   10d90 <__sprintf_chk@plt+0xf0a0>
test   %eax,%eax
mov    %eax,%edi
je     11749 <__sprintf_chk@plt+0xfa59>
movzbl 0x0(%ebp),%ecx
add    $0x1,%ebp
movl   $0x0,0x14(%esp)
lea    0x14(%esp),%esi
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %cl,%cl
je     1172d <__sprintf_chk@plt+0xfa3d>
lea    0x0(%esi,%eiz,1),%esi
movsbl %cl,%edx
add    $0x1,%ebp
mov    %esi,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
movzbl -0x1(%ebp),%ecx
test   %cl,%cl
jne    11718 <__sprintf_chk@plt+0xfa28>
mov    0x44(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    %edi,%eax
call   112e0 <__sprintf_chk@plt+0xf5f0>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15890,%ebx
mov    0x4(%eax),%edx
mov    (%eax),%eax
call   10d90 <__sprintf_chk@plt+0xf0a0>
test   %eax,%eax
mov    %eax,%edi
je     117f5 <__sprintf_chk@plt+0xfb05>
xor    %ebp,%ebp
mov    0x4(%edi),%esi
movzbl (%esi),%edx
test   %dl,%dl
je     117f1 <__sprintf_chk@plt+0xfb01>
mov    0x34(%esp),%eax
add    %ebp,%eax
cmp    %dl,(%eax)
jne    117e0 <__sprintf_chk@plt+0xfaf0>
xor    %edx,%edx
jmp    117a5 <__sprintf_chk@plt+0xfab5>
cmp    %cl,(%eax,%edx,1)
jne    117e0 <__sprintf_chk@plt+0xfaf0>
add    $0x1,%edx
movzbl (%esi,%edx,1),%ecx
test   %cl,%cl
jne    117a0 <__sprintf_chk@plt+0xfab0>
mov    0x34(%esp),%eax
add    %edx,%ebp
movsbl (%eax,%ebp,1),%edx
test   %dl,%dl
je     117f9 <__sprintf_chk@plt+0xfb09>
mov    %edi,%eax
add    $0x1,%ebp
call   10fc0 <__sprintf_chk@plt+0xf2d0>
mov    %eax,%esi
mov    %edi,%eax
call   107d0 <__sprintf_chk@plt+0xeae0>
test   %esi,%esi
je     117f5 <__sprintf_chk@plt+0xfb05>
mov    %esi,%edi
jmp    11788 <__sprintf_chk@plt+0xfa98>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   107d0 <__sprintf_chk@plt+0xeae0>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edx,%edx
jmp    117b0 <__sprintf_chk@plt+0xfac0>
xor    %eax,%eax
jmp    117e9 <__sprintf_chk@plt+0xfaf9>
mov    0x8(%edi),%eax
xor    %esi,%esi
test   %eax,%eax
je     1180f <__sprintf_chk@plt+0xfb1f>
add    $0xc,%eax
mov    %eax,(%esp)
call   1ac0 <__strdup@plt>
mov    %eax,%esi
mov    %edi,%eax
call   107d0 <__sprintf_chk@plt+0xeae0>
mov    %esi,%eax
jmp    117e9 <__sprintf_chk@plt+0xfaf9>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x157d0,%ebx
mov    0x4(%eax),%edx
mov    (%eax),%eax
call   10d90 <__sprintf_chk@plt+0xf0a0>
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
test   %eax,%eax
mov    %eax,0x18(%esp)
je     11a81 <__sprintf_chk@plt+0xfd91>
lea    0x24(%esp),%eax
xor    %ebp,%ebp
mov    %eax,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x4(%eax),%esi
movsbl (%esi),%eax
test   %al,%al
je     11a7a <__sprintf_chk@plt+0xfd8a>
cmp    $0x2a,%eax
je     11a18 <__sprintf_chk@plt+0xfd28>
cmp    $0x3f,%eax
je     11a18 <__sprintf_chk@plt+0xfd28>
cmp    $0x5b,%eax
je     11a18 <__sprintf_chk@plt+0xfd28>
mov    0x54(%esp),%edi
add    %ebp,%edi
movsbl (%edi),%edx
cmp    %edx,%eax
jne    11a60 <__sprintf_chk@plt+0xfd70>
xor    %edx,%edx
jmp    118df <__sprintf_chk@plt+0xfbef>
cmp    $0x3f,%eax
je     11a20 <__sprintf_chk@plt+0xfd30>
cmp    $0x2a,%eax
je     11a20 <__sprintf_chk@plt+0xfd30>
cmp    $0x5b,%eax
je     11a20 <__sprintf_chk@plt+0xfd30>
movsbl (%edi,%edx,1),%ecx
cmp    %ecx,%eax
jne    11a60 <__sprintf_chk@plt+0xfd70>
add    $0x1,%edx
movsbl (%esi,%edx,1),%eax
test   %al,%al
jne    118b8 <__sprintf_chk@plt+0xfbc8>
mov    0x18(%esp),%eax
add    %edx,%ebp
mov    $0x2a,%edx
call   10fc0 <__sprintf_chk@plt+0xf2d0>
test   %eax,%eax
mov    %eax,%edi
je     11a6f <__sprintf_chk@plt+0xfd7f>
mov    0x1c(%esp),%eax
mov    $0x2a,%edx
call   10d10 <__sprintf_chk@plt+0xf020>
mov    0x54(%esp),%esi
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
xor    %edx,%edx
add    %ebp,%esi
mov    %eax,(%esp)
mov    %edi,%eax
mov    %esi,0x4(%esp)
call   11470 <__sprintf_chk@plt+0xf780>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     11a9e <__sprintf_chk@plt+0xfdae>
sub    $0x1,%eax
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
mov    $0x3f,%edx
call   10fc0 <__sprintf_chk@plt+0xf2d0>
test   %eax,%eax
mov    %eax,%edi
je     11998 <__sprintf_chk@plt+0xfca8>
mov    0x1c(%esp),%eax
mov    $0x3f,%edx
call   10d10 <__sprintf_chk@plt+0xf020>
lea    0x20(%esp),%eax
xor    %edx,%edx
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %edi,%eax
call   11470 <__sprintf_chk@plt+0xf780>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     11a9e <__sprintf_chk@plt+0xfdae>
sub    $0x1,%eax
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
mov    $0x5b,%edx
call   10fc0 <__sprintf_chk@plt+0xf2d0>
test   %eax,%eax
mov    %eax,%edi
je     119e9 <__sprintf_chk@plt+0xfcf9>
mov    0x1c(%esp),%eax
mov    $0x5b,%edx
call   10d10 <__sprintf_chk@plt+0xf020>
lea    0x20(%esp),%eax
xor    %edx,%edx
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %edi,%eax
call   11470 <__sprintf_chk@plt+0xf780>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     11a9e <__sprintf_chk@plt+0xfdae>
sub    $0x1,%eax
mov    %eax,0x2c(%esp)
movsbl (%esi),%edx
test   %dl,%dl
je     11a8b <__sprintf_chk@plt+0xfd9b>
mov    0x18(%esp),%edi
add    $0x1,%ebp
mov    %edi,%eax
call   10fc0 <__sprintf_chk@plt+0xf2d0>
mov    %eax,%esi
mov    %edi,%eax
call   107d0 <__sprintf_chk@plt+0xeae0>
test   %esi,%esi
je     11a85 <__sprintf_chk@plt+0xfd95>
mov    %esi,0x18(%esp)
jmp    11876 <__sprintf_chk@plt+0xfb86>
xor    %edx,%edx
lea    0x0(%esi),%esi
lea    0x20(%esp),%eax
add    %edx,%ebp
mov    %eax,0x8(%esp)
lea    0x24(%esp),%eax
add    0x54(%esp),%ebp
mov    %eax,(%esp)
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
call   11470 <__sprintf_chk@plt+0xf780>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
call   107d0 <__sprintf_chk@plt+0xeae0>
mov    0x24(%esp),%eax
jmp    11a46 <__sprintf_chk@plt+0xfd56>
mov    0x54(%esp),%esi
add    %ebp,%esi
jmp    11947 <__sprintf_chk@plt+0xfc57>
xor    %edx,%edx
jmp    118ea <__sprintf_chk@plt+0xfbfa>
xor    %eax,%eax
jmp    11a46 <__sprintf_chk@plt+0xfd56>
mov    0x24(%esp),%eax
jmp    11a46 <__sprintf_chk@plt+0xfd56>
mov    0x18(%esp),%eax
lea    0x20(%esp),%edx
call   10980 <__sprintf_chk@plt+0xec90>
mov    0x24(%esp),%eax
jmp    11a46 <__sprintf_chk@plt+0xfd56>
call   10ff0 <__sprintf_chk@plt+0xf300>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15541,%ebx
mov    0xb0(%esp),%eax
mov    0xb4(%esp),%ebp
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     11c30 <__sprintf_chk@plt+0xff40>
movl   $0x10,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     11c78 <__sprintf_chk@plt+0xff88>
movl   $0x80000,0x4(%esp)
mov    %ebp,(%esp)
call   1770 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     11d80 <__sprintf_chk@plt+0x10090>
lea    0x30(%esp),%ebp
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
call   1910 <__fxstat64@plt>
mov    0x5c(%esp),%eax
cmp    $0xb,%eax
jbe    11c13 <__sprintf_chk@plt+0xff23>
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
mov    %edi,0x10(%esp)
movl   $0x2,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   1b10 <mmap64@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x4(%esi)
je     11dde <__sprintf_chk@plt+0x100ee>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
mov    0x8(%eax),%eax
bswap  %edx
cmp    $0xb007f457,%edx
bswap  %ecx
bswap  %eax
jne    11ce0 <__sprintf_chk@plt+0xfff0>
mov    %ecx,%edx
shr    $0x10,%edx
cmp    $0x2,%edx
jne    11be0 <__sprintf_chk@plt+0xfef0>
mov    %eax,0x8(%esi)
mov    0x5c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0xc(%esi)
mov    0xb0(%esp),%eax
mov    %eax,(%esi)
call   1c90 <close@plt>
mov    %ebp,(%esp)
call   c6c0 <__sprintf_chk@plt+0xa9d0>
mov    0xb8(%esp),%ecx
mov    %eax,(%ecx)
mov    %esi,%eax
mov    %edx,0x4(%ecx)
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xb0(%esp),%eax
mov    %ecx,0x2c(%esp)
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x2c(%esp),%ecx
cmp    $0x2,%eax
jg     11d50 <__sprintf_chk@plt+0x10060>
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   1b60 <munmap@plt>
mov    %edi,(%esp)
call   1c90 <close@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x9c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x70a5(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x68dc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x69cc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x316,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    11ae4 <__sprintf_chk@plt+0xfdf4>
xchg   %ax,%ax
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %eax,%edx
xor    %eax,%eax
cmp    $0x2,%edx
jle    11bce <__sprintf_chk@plt+0xfede>
mov    %eax,0x2c(%esp)
mov    0xb0(%esp),%eax
lea    -0x6994(%ebx),%edx
mov    %edx,0x14(%esp)
lea    -0x68dc(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0x69cc(%ebx),%edx
movl   $0x31a,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,0x4(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x2c(%esp),%eax
jmp    11bce <__sprintf_chk@plt+0xfede>
xchg   %ax,%ax
mov    0xb0(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x2c(%esp),%edx
cmp    $0x2,%eax
jle    11c00 <__sprintf_chk@plt+0xff10>
lea    -0x692c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x68dc(%ebx),%eax
movl   $0xb007f457,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x10(%esp)
movl   $0x335,0xc(%esp)
lea    -0x69cc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    11c00 <__sprintf_chk@plt+0xff10>
xchg   %ax,%ax
lea    -0x6908(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x68dc(%ebx),%eax
movl   $0xb007f457,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x10(%esp)
movl   $0x33b,0xc(%esp)
jmp    11d28 <__sprintf_chk@plt+0x10038>
lea    0x0(%esi),%esi
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    11c1b <__sprintf_chk@plt+0xff2b>
lea    -0x6988(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x68dc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x69cc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x31f,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    11c1b <__sprintf_chk@plt+0xff2b>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    11c13 <__sprintf_chk@plt+0xff23>
mov    0x5c(%esp),%eax
mov    0x60(%esp),%edx
mov    %edi,0x20(%esp)
movl   $0x32a,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x6964(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x68dc(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x69cc(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x1c(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    11c13 <__sprintf_chk@plt+0xff23>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x151a2,%ebx
mov    0xc(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   1b60 <munmap@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15160,%ebx
mov    0x48(%esp),%ebp
mov    0x8(%eax),%edx
call   10a10 <__sprintf_chk@plt+0xed20>
test   %eax,%eax
mov    %eax,%edi
je     11f11 <__sprintf_chk@plt+0x10221>
movzbl 0x0(%ebp),%ecx
add    $0x1,%ebp
movl   $0x0,0x14(%esp)
lea    0x14(%esp),%esi
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %cl,%cl
je     11ef5 <__sprintf_chk@plt+0x10205>
nop
movsbl %cl,%edx
add    $0x1,%ebp
mov    %esi,%eax
call   10d10 <__sprintf_chk@plt+0xf020>
movzbl -0x1(%ebp),%ecx
test   %cl,%cl
jne    11ee0 <__sprintf_chk@plt+0x101f0>
mov    0x44(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    %edi,%eax
call   11030 <__sprintf_chk@plt+0xf340>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x150d0,%ebx
mov    0x8(%eax),%edx
call   10a10 <__sprintf_chk@plt+0xed20>
test   %eax,%eax
mov    %eax,%edi
je     11fb6 <__sprintf_chk@plt+0x102c6>
xor    %ebp,%ebp
mov    0x4(%edi),%esi
movzbl (%esi),%edx
test   %dl,%dl
je     11fb2 <__sprintf_chk@plt+0x102c2>
mov    0x34(%esp),%eax
add    %ebp,%eax
cmp    %dl,(%eax)
jne    11fa0 <__sprintf_chk@plt+0x102b0>
xor    %edx,%edx
jmp    11f65 <__sprintf_chk@plt+0x10275>
xchg   %ax,%ax
cmp    %cl,(%eax,%edx,1)
jne    11fa0 <__sprintf_chk@plt+0x102b0>
add    $0x1,%edx
movzbl (%esi,%edx,1),%ecx
test   %cl,%cl
jne    11f60 <__sprintf_chk@plt+0x10270>
mov    0x34(%esp),%eax
add    %edx,%ebp
movsbl (%eax,%ebp,1),%edx
test   %dl,%dl
je     11fba <__sprintf_chk@plt+0x102ca>
mov    %edi,%eax
add    $0x1,%ebp
call   10c20 <__sprintf_chk@plt+0xef30>
mov    %edi,(%esp)
mov    %eax,%esi
call   1800 <free@plt>
test   %esi,%esi
je     11fb6 <__sprintf_chk@plt+0x102c6>
mov    %esi,%edi
jmp    11f46 <__sprintf_chk@plt+0x10256>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   1800 <free@plt>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edx,%edx
jmp    11f70 <__sprintf_chk@plt+0x10280>
xor    %eax,%eax
jmp    11faa <__sprintf_chk@plt+0x102ba>
mov    0xc(%edi),%eax
xor    %esi,%esi
test   %eax,%eax
je     11fd3 <__sprintf_chk@plt+0x102e3>
mov    0x8(%edi),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   1ac0 <__strdup@plt>
mov    %eax,%esi
mov    %edi,(%esp)
call   1800 <free@plt>
mov    %esi,%eax
jmp    11faa <__sprintf_chk@plt+0x102ba>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x15010,%ebx
mov    0x8(%eax),%edx
call   10a10 <__sprintf_chk@plt+0xed20>
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
test   %eax,%eax
mov    %eax,%edi
je     12258 <__sprintf_chk@plt+0x10568>
lea    0x24(%esp),%eax
movl   $0x0,0x18(%esp)
mov    %eax,0x1c(%esp)
mov    0x4(%edi),%eax
movsbl (%eax),%edx
test   %dl,%dl
je     12251 <__sprintf_chk@plt+0x10561>
cmp    $0x2a,%edx
je     121f0 <__sprintf_chk@plt+0x10500>
cmp    $0x3f,%edx
je     121f0 <__sprintf_chk@plt+0x10500>
cmp    $0x5b,%edx
je     121f0 <__sprintf_chk@plt+0x10500>
mov    0x18(%esp),%ebp
add    0x54(%esp),%ebp
movsbl 0x0(%ebp),%ecx
cmp    %ecx,%edx
jne    12238 <__sprintf_chk@plt+0x10548>
xor    %edx,%edx
jmp    120a8 <__sprintf_chk@plt+0x103b8>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%ecx
je     121f8 <__sprintf_chk@plt+0x10508>
cmp    $0x2a,%ecx
je     121f8 <__sprintf_chk@plt+0x10508>
cmp    $0x5b,%ecx
je     121f8 <__sprintf_chk@plt+0x10508>
movsbl 0x0(%ebp,%edx,1),%esi
cmp    %esi,%ecx
jne    12238 <__sprintf_chk@plt+0x10548>
add    $0x1,%edx
movsbl (%eax,%edx,1),%ecx
test   %cl,%cl
jne    12080 <__sprintf_chk@plt+0x10390>
mov    0x18(%esp),%ebp
mov    %edi,%eax
add    %edx,%ebp
mov    $0x2a,%edx
call   10c20 <__sprintf_chk@plt+0xef30>
test   %eax,%eax
je     12246 <__sprintf_chk@plt+0x10556>
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
mov    $0x2a,%edx
call   10d10 <__sprintf_chk@plt+0xf020>
mov    0x54(%esp),%esi
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%ecx
xor    %edx,%edx
mov    0x1c(%esp),%eax
add    %ebp,%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,%eax
call   111b0 <__sprintf_chk@plt+0xf4c0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     12273 <__sprintf_chk@plt+0x10583>
sub    $0x1,%eax
mov    %eax,0x2c(%esp)
mov    $0x3f,%edx
mov    %edi,%eax
call   10c20 <__sprintf_chk@plt+0xef30>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     1216d <__sprintf_chk@plt+0x1047d>
mov    0x1c(%esp),%eax
mov    $0x3f,%edx
call   10d10 <__sprintf_chk@plt+0xf020>
lea    0x20(%esp),%eax
mov    0x18(%esp),%ecx
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
xor    %edx,%edx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,%eax
call   111b0 <__sprintf_chk@plt+0xf4c0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     12273 <__sprintf_chk@plt+0x10583>
sub    $0x1,%eax
mov    %eax,0x2c(%esp)
mov    $0x5b,%edx
mov    %edi,%eax
call   10c20 <__sprintf_chk@plt+0xef30>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     121c2 <__sprintf_chk@plt+0x104d2>
mov    0x1c(%esp),%eax
mov    $0x5b,%edx
call   10d10 <__sprintf_chk@plt+0xf020>
lea    0x20(%esp),%eax
mov    0x18(%esp),%ecx
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
xor    %edx,%edx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,%eax
call   111b0 <__sprintf_chk@plt+0xf4c0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     12273 <__sprintf_chk@plt+0x10583>
sub    $0x1,%eax
mov    %eax,0x2c(%esp)
movsbl (%esi),%edx
test   %dl,%dl
je     12262 <__sprintf_chk@plt+0x10572>
mov    %edi,%eax
call   10c20 <__sprintf_chk@plt+0xef30>
mov    %edi,(%esp)
mov    %eax,%esi
call   1800 <free@plt>
lea    0x1(%ebp),%eax
test   %esi,%esi
mov    %eax,0x18(%esp)
je     1225c <__sprintf_chk@plt+0x1056c>
mov    %esi,%edi
jmp    12038 <__sprintf_chk@plt+0x10348>
xor    %edx,%edx
lea    0x0(%esi),%esi
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
add    %edx,%eax
add    0x54(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
mov    %edi,%eax
call   111b0 <__sprintf_chk@plt+0xf4c0>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   1800 <free@plt>
mov    0x24(%esp),%eax
jmp    12220 <__sprintf_chk@plt+0x10530>
mov    0x54(%esp),%esi
add    %ebp,%esi
jmp    12118 <__sprintf_chk@plt+0x10428>
xor    %edx,%edx
jmp    120b3 <__sprintf_chk@plt+0x103c3>
xor    %eax,%eax
jmp    12220 <__sprintf_chk@plt+0x10530>
mov    0x24(%esp),%eax
jmp    12220 <__sprintf_chk@plt+0x10530>
mov    %edi,%eax
lea    0x20(%esp),%edx
call   10910 <__sprintf_chk@plt+0xec20>
mov    0x24(%esp),%eax
jmp    12220 <__sprintf_chk@plt+0x10530>
call   10ff0 <__sprintf_chk@plt+0xf300>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x14d72,%ebx
mov    0x38(%esp),%esi
mov    0x30(%esp),%eax
mov    %edx,0xc(%esp)
lea    0x6(%eax,%esi,1),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     12328 <__sprintf_chk@plt+0x10638>
mov    0x30(%esp),%ecx
lea    0x5(%eax,%esi,1),%eax
mov    0xc(%esp),%edx
mov    %eax,(%esp)
mov    %eax,(%edi)
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    (%edi),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%edx
movb   $0x0,(%eax,%ecx,1)
lea    0x4(%edi),%eax
mov    %edx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
movb   $0x0,0x4(%edi,%esi,1)
mov    %edi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     12318 <__sprintf_chk@plt+0x10628>
mov    %eax,0x0(%ebp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   1800 <free@plt>
xor    %eax,%eax
jmp    1230c <__sprintf_chk@plt+0x1061c>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    1230c <__sprintf_chk@plt+0x1061c>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x14cc5,%ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   e170 <__sprintf_chk@plt+0xc480>
mov    0x8(%eax),%edi
test   %edi,%edi
mov    %edi,%esi
jne    1235c <__sprintf_chk@plt+0x1066c>
jmp    1237e <__sprintf_chk@plt+0x1068e>
nop
test   %esi,%esi
je     1237e <__sprintf_chk@plt+0x1068e>
mov    %esi,(%esp)
nop
call   e3e0 <__sprintf_chk@plt+0xc6f0>
mov    0x0(%ebp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
je     12388 <__sprintf_chk@plt+0x10698>
mov    (%esi),%esi
cmp    %edi,%esi
jne    12358 <__sprintf_chk@plt+0x10668>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
movzbl 0x8(%esp),%ecx
movzbl 0x31(%edx),%eax
and    $0x1,%ecx
and    $0xfffffffe,%eax
or     %ecx,%eax
mov    %al,0x31(%edx)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
movzbl 0x8(%esp),%ecx
movzbl 0x31(%edx),%eax
and    $0x1,%ecx
shl    $0x2,%ecx
and    $0xfffffffb,%eax
or     %ecx,%eax
mov    %al,0x31(%edx)
ret
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     123ec <__sprintf_chk@plt+0x106fc>
addl   $0x1,0x2c(%eax)
repz ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x14c05,%ebx
sub    $0x2c,%esp
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   d030 <__sprintf_chk@plt+0xb340>
test   %eax,%eax
je     12430 <__sprintf_chk@plt+0x10740>
mov    %eax,(%esp)
call   123e0 <__sprintf_chk@plt+0x106f0>
mov    0x4c(%esp),%ecx
mov    %eax,(%ecx)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x44(%esp),%ecx
test   %ecx,%ecx
je     12518 <__sprintf_chk@plt+0x10828>
mov    0x48(%esp),%eax
mov    0x40(%esp),%edx
lea    0x1(%edx,%eax,1),%edx
mov    $0x2,%eax
lea    0x1(%edx),%edi
imul   %edi,%eax
mov    %edi,0x18(%esp)
add    $0x34,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     12526 <__sprintf_chk@plt+0x10836>
xor    %eax,%eax
mov    $0xd,%ecx
mov    %ebp,%edi
rep stos %eax,%es:(%edi)
mov    %esi,(%esp)
call   c9a0 <__sprintf_chk@plt+0xacb0>
mov    0x18(%esp),%edi
mov    0x1c(%esp),%ecx
mov    %eax,0x0(%ebp)
lea    0x34(%ebp),%eax
mov    %eax,0x8(%ebp)
mov    %edi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x44(%esp),%edx
mov    0x8(%ebp),%eax
test   %edx,%edx
je     12508 <__sprintf_chk@plt+0x10818>
mov    0x40(%esp),%ecx
mov    0x18(%esp),%edx
movb   $0x0,(%eax,%ecx,1)
mov    0x8(%ebp),%eax
lea    0x1(%eax,%ecx,1),%ecx
add    %edx,%eax
mov    %ecx,0x20(%ebp)
mov    %eax,0x4(%ebp)
mov    %edx,0x8(%esp)
mov    0x1c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x4(%ebp),%eax
movl   $0x1,0x2c(%ebp)
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   d0b0 <__sprintf_chk@plt+0xb3c0>
mov    0x4c(%esp),%eax
mov    %ebp,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%ebp)
movl   $0x0,0x20(%ebp)
jmp    124dd <__sprintf_chk@plt+0x107ed>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edx
mov    $0x1,%eax
jmp    1244d <__sprintf_chk@plt+0x1075d>
mov    $0xfffffff4,%eax
jmp    12428 <__sprintf_chk@plt+0x10738>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x102c,%esp
mov    0x1040(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x14aba,%ebx
mov    0x1044(%esp),%eax
mov    %gs:0x14,%ecx
mov    %ecx,0x101c(%esp)
xor    %ecx,%ecx
mov    0x1048(%esp),%edi
test   %esi,%esi
je     125d0 <__sprintf_chk@plt+0x108e0>
test   %eax,%eax
je     125d0 <__sprintf_chk@plt+0x108e0>
test   %edi,%edi
je     125d0 <__sprintf_chk@plt+0x108e0>
lea    0x18(%esp),%edx
lea    0x1c(%esp),%ebp
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   c080 <__sprintf_chk@plt+0xa390>
mov    0x18(%esp),%eax
mov    %ebp,%edx
mov    %edi,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
call   123f0 <__sprintf_chk@plt+0x10700>
mov    0x101c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    125d7 <__sprintf_chk@plt+0x108e7>
add    $0x102c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0xfffffffe,%eax
jmp    125b2 <__sprintf_chk@plt+0x108c2>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x103c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x14a11,%ebx
mov    0x1058(%esp),%edx
mov    0x105c(%esp),%ecx
mov    0x1050(%esp),%eax
mov    %gs:0x14,%esi
mov    %esi,0x102c(%esp)
xor    %esi,%esi
mov    0x1054(%esp),%edi
mov    %edx,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
call   1a30 <strlen@plt>
mov    %edi,(%esp)
mov    %eax,%esi
call   1a30 <strlen@plt>
mov    %eax,%ebp
lea    0x2(%esi,%eax,1),%eax
cmp    $0x1000,%eax
ja     126d8 <__sprintf_chk@plt+0x109e8>
mov    0x1c(%esp),%edx
movl   $0x1000,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
lea    0x2c(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   19b0 <__memcpy_chk@plt>
mov    0x1c(%esp),%edx
lea    0x1(%ebp),%ecx
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
lea    0x1(%edx,%esi,1),%eax
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
mov    0x14(%esp),%eax
movb   $0x5c,0x2c(%esp,%esi,1)
mov    %ecx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   123f0 <__sprintf_chk@plt+0x10700>
xor    %edx,%edx
test   %eax,%eax
cmovle %eax,%edx
mov    0x102c(%esp),%edi
xor    %gs:0x14,%edi
mov    %edx,%eax
jne    126df <__sprintf_chk@plt+0x109ef>
add    $0x103c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffdc,%edx
jmp    126bb <__sprintf_chk@plt+0x109cb>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x10ac,%esp
mov    0x10c0(%esp),%ebp
mov    0x10c8(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x148f3,%ebx
mov    0x10c4(%esp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,0x109c(%esp)
xor    %ecx,%ecx
test   %ebp,%ebp
mov    %eax,0x28(%esp)
je     12910 <__sprintf_chk@plt+0x10c20>
test   %edi,%edi
je     12910 <__sprintf_chk@plt+0x10c20>
test   %eax,%eax
je     12910 <__sprintf_chk@plt+0x10c20>
mov    %edi,(%esp)
call   c3d0 <__sprintf_chk@plt+0xa6e0>
test   %eax,%eax
mov    %eax,%esi
je     128a8 <__sprintf_chk@plt+0x10bb8>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   1c60 <__xstat64@plt>
test   %eax,%eax
js     12818 <__sprintf_chk@plt+0x10b28>
lea    0x38(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x9c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x2c(%esp)
call   c0e0 <__sprintf_chk@plt+0xa3f0>
test   %eax,%eax
je     129d2 <__sprintf_chk@plt+0x10ce2>
mov    0x2c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   d030 <__sprintf_chk@plt+0xb340>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     12920 <__sprintf_chk@plt+0x10c30>
mov    0xc(%eax),%edx
test   %edx,%edx
je     128a0 <__sprintf_chk@plt+0x10bb0>
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    12966 <__sprintf_chk@plt+0x10c76>
mov    %esi,(%esp)
call   1800 <free@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   123e0 <__sprintf_chk@plt+0x106f0>
mov    0x28(%esp),%ecx
mov    %eax,(%ecx)
xor    %eax,%eax
mov    0x109c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    12a2b <__sprintf_chk@plt+0x10d3b>
add    $0x10ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   1ad0 <__errno_location@plt>
mov    %eax,%edx
mov    (%eax),%eax
mov    %ebp,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
negl   0x28(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x2c(%esp),%edx
cmp    $0x6,%eax
jg     12850 <__sprintf_chk@plt+0x10b60>
mov    %esi,(%esp)
call   1800 <free@plt>
mov    0x28(%esp),%eax
jmp    127f6 <__sprintf_chk@plt+0x10b06>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %edi,0x18(%esp)
movl   $0x181,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
lea    -0x687f(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5f8c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    1283e <__sprintf_chk@plt+0x10b4e>
lea    0x0(%esi),%esi
mov    %esi,0xc(%eax)
jmp    127e6 <__sprintf_chk@plt+0x10af6>
mov    %ebp,(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %eax,%edx
mov    $0xfffffff4,%eax
cmp    $0x6,%edx
jle    127f6 <__sprintf_chk@plt+0x10b06>
lea    -0x68b4(%ebx),%edx
mov    %edx,0x14(%esp)
lea    -0x5f8c(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0x689b(%ebx),%edx
mov    %edi,0x18(%esp)
movl   $0x17a,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%eax
jmp    127f6 <__sprintf_chk@plt+0x10b06>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffffe,%eax
jmp    127f6 <__sprintf_chk@plt+0x10b06>
lea    0x0(%esi),%esi
lea    0x34(%esp),%eax
mov    0x2c(%esp),%edx
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %ebp,%eax
call   123f0 <__sprintf_chk@plt+0x10700>
test   %eax,%eax
js     127f6 <__sprintf_chk@plt+0x10b06>
mov    0x34(%esp),%eax
mov    0x28(%esp),%ecx
mov    %esi,0xc(%eax)
mov    %eax,(%ecx)
xor    %eax,%eax
jmp    127f6 <__sprintf_chk@plt+0x10b06>
mov    %ebp,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    129c0 <__sprintf_chk@plt+0x10cd0>
mov    0x34(%esp),%eax
mov    0xc(%eax),%eax
mov    %esi,0x1c(%esp)
movl   $0x194,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x18(%esp)
lea    -0x6584(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5f8c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    %esi,(%esp)
call   1800 <free@plt>
mov    $0xffffffef,%eax
jmp    127f6 <__sprintf_chk@plt+0x10b06>
mov    %ebp,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    12a19 <__sprintf_chk@plt+0x10d29>
lea    -0x96d0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5f8c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %edi,0x18(%esp)
movl   $0x187,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %ebp,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    %esi,(%esp)
call   1800 <free@plt>
mov    $0xfffffffe,%eax
jmp    127f6 <__sprintf_chk@plt+0x10b06>
call   1b330 <__sprintf_chk@plt+0x19640>
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x145c2,%ebx
test   %esi,%esi
je     12a61 <__sprintf_chk@plt+0x10d71>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    %esi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%esi
jne    12a48 <__sprintf_chk@plt+0x10d58>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x106c,%esp
mov    0x1080(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x105c(%esp)
xor    %eax,%eax
mov    0x1084(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x14564,%ebx
mov    0x0(%ebp),%eax
mov    %eax,0x3c(%esp)
movzbl 0x30(%ebp),%eax
test   $0x1,%al
jne    12b28 <__sprintf_chk@plt+0x10e38>
mov    0x10(%ebp),%edx
test   %edx,%edx
jne    12e87 <__sprintf_chk@plt+0x11197>
or     $0x1,%eax
mov    %al,0x30(%ebp)
movl   $0x3a,0x4(%esp)
mov    %esi,(%esp)
call   1a20 <strchr@plt>
test   %eax,%eax
mov    %eax,%edi
je     12b02 <__sprintf_chk@plt+0x10e12>
movb   $0x0,(%eax)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c990 <__sprintf_chk@plt+0xaca0>
mov    %eax,(%esp)
mov    %eax,0x48(%esp)
call   1a30 <strlen@plt>
mov    %eax,%edx
lea    0x2(%eax),%eax
cmp    $0xfff,%eax
mov    %eax,0x2c(%esp)
jbe    12b30 <__sprintf_chk@plt+0x10e40>
xor    %eax,%eax
mov    0x105c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    12e82 <__sprintf_chk@plt+0x11192>
add    $0x106c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%ebp),%eax
jmp    12b04 <__sprintf_chk@plt+0x10e14>
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
mov    %edx,0x8(%esp)
movl   $0x1000,0xc(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
lea    0x5c(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   19b0 <__memcpy_chk@plt>
mov    0x28(%esp),%edx
lea    0x1(%edx),%eax
mov    %eax,0x40(%esp)
mov    0xc(%ebp),%eax
movb   $0x2f,0x5c(%esp,%edx,1)
movb   $0x0,0x5d(%esp,%edx,1)
test   %eax,%eax
je     12dd8 <__sprintf_chk@plt+0x110e8>
lea    0x54(%esp),%eax
add    $0x1,%edi
mov    %eax,0x30(%esp)
mov    %eax,0x8(%esp)
lea    -0x9ceb(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x34(%esp)
call   1860 <__strtok_r@plt>
movl   $0x0,0x28(%esp)
test   %eax,%eax
mov    %eax,%edi
je     12e7b <__sprintf_chk@plt+0x1118b>
lea    -0x6841(%ebx),%eax
xor    %esi,%esi
mov    %ebp,0x4c(%esp)
mov    0x3c(%esp),%ebp
movl   $0x0,0x38(%esp)
mov    %eax,0x44(%esp)
jmp    12c0d <__sprintf_chk@plt+0x10f1d>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   e280 <__sprintf_chk@plt+0xc590>
movl   $0x0,(%esp)
addl   $0x1,0x28(%esp)
mov    %eax,%esi
mov    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
mov    %eax,%edi
je     12cf0 <__sprintf_chk@plt+0x11000>
cmpb   $0x2f,(%edi)
je     12c4c <__sprintf_chk@plt+0x10f5c>
mov    %edi,(%esp)
call   1a30 <strlen@plt>
mov    0x2c(%esp),%ecx
lea    (%eax,%ecx,1),%edx
cmp    $0xfff,%edx
ja     12cc0 <__sprintf_chk@plt+0x10fd0>
mov    0x24(%esp),%edx
add    $0x1,%eax
add    0x40(%esp),%edx
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   1810 <memcpy@plt>
mov    0x24(%esp),%edi
lea    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   126f0 <__sprintf_chk@plt+0x10a00>
test   %eax,%eax
mov    %eax,0x38(%esp)
js     12d60 <__sprintf_chk@plt+0x11070>
mov    %ebp,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    12bd0 <__sprintf_chk@plt+0x10ee0>
mov    0x44(%esp),%eax
mov    %edi,0x18(%esp)
movl   $0xb8,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x5f72(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    12bd0 <__sprintf_chk@plt+0x10ee0>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    0x4c(%esp),%ebp
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     12e30 <__sprintf_chk@plt+0x11140>
mov    %esi,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x38(%esp),%eax
andb   $0xfe,0x30(%ebp)
jmp    12b04 <__sprintf_chk@plt+0x10e14>
xchg   %ax,%ax
mov    0x4c(%esp),%ebp
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     12d14 <__sprintf_chk@plt+0x11024>
mov    0x28(%esp),%eax
mov    %esi,0x10(%ebp)
mov    %eax,0x28(%ebp)
jmp    12b04 <__sprintf_chk@plt+0x10e14>
mov    0x8(%ebp),%eax
movl   $0xbe,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6834(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5f72(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    12d05 <__sprintf_chk@plt+0x11015>
nop
mov    0x3c(%esp),%eax
mov    0x4c(%esp),%ebp
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    12cd9 <__sprintf_chk@plt+0x10fe9>
mov    0x38(%esp),%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    0x3c(%esp),%ecx
mov    %edi,0x1c(%esp)
movl   $0xb4,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %ecx,0x18(%esp)
mov    %ecx,(%esp)
mov    %eax,0x20(%esp)
lea    -0x685a(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5f72(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    12cd9 <__sprintf_chk@plt+0x10fe9>
lea    0x0(%esi),%esi
cmpb   $0x2f,(%esi)
je     12e17 <__sprintf_chk@plt+0x11127>
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    0x2c(%esp),%ecx
lea    (%eax,%ecx,1),%edx
cmp    $0xfff,%edx
ja     12b02 <__sprintf_chk@plt+0x10e12>
mov    0x24(%esp),%edx
add    $0x1,%eax
add    0x40(%esp),%edx
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   1810 <memcpy@plt>
mov    0x24(%esp),%esi
mov    %esi,(%esp)
call   1ac0 <__strdup@plt>
test   %eax,%eax
mov    %eax,0xc(%ebp)
jne    12b78 <__sprintf_chk@plt+0x10e88>
jmp    12b02 <__sprintf_chk@plt+0x10e12>
nop
mov    0x48(%esp),%eax
mov    %edi,0x1c(%esp)
movl   $0xad,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6530(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5f72(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    12cd9 <__sprintf_chk@plt+0x10fe9>
xor    %esi,%esi
jmp    12cf4 <__sprintf_chk@plt+0x11004>
call   1b330 <__sprintf_chk@plt+0x19640>
lea    -0x5f58(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x6872(%ebx),%eax
movl   $0x89,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x14132,%ebx
test   %esi,%esi
je     12ef0 <__sprintf_chk@plt+0x11200>
mov    0x2c(%esi),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x2c(%esi)
jle    12ef8 <__sprintf_chk@plt+0x11208>
mov    %esi,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    12ee7 <__sprintf_chk@plt+0x111f7>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     12f62 <__sprintf_chk@plt+0x11272>
mov    0x4(%esi),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   d140 <__sprintf_chk@plt+0xb450>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x24(%esi),%eax
test   %eax,%eax
je     12f36 <__sprintf_chk@plt+0x11246>
mov    %eax,(%esp)
call   16940 <__sprintf_chk@plt+0x14c50>
mov    (%esi),%eax
mov    %eax,(%esp)
call   dd80 <__sprintf_chk@plt+0xc090>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
xor    %eax,%eax
jmp    12ee7 <__sprintf_chk@plt+0x111f7>
lea    -0x681c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5f9e(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x1b9,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    12f07 <__sprintf_chk@plt+0x11217>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x104c,%esp
mov    0x1060(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1403a,%ebx
mov    0x1064(%esp),%edx
mov    %gs:0x14,%eax
mov    %eax,0x103c(%esp)
xor    %eax,%eax
mov    0x1068(%esp),%edi
test   %esi,%esi
je     13198 <__sprintf_chk@plt+0x114a8>
test   %edx,%edx
je     13198 <__sprintf_chk@plt+0x114a8>
test   %edi,%edi
je     13003 <__sprintf_chk@plt+0x11313>
mov    (%edi),%ecx
test   %ecx,%ecx
je     13070 <__sprintf_chk@plt+0x11380>
mov    %esi,(%esp)
mov    $0xffffffda,%ebp
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     13038 <__sprintf_chk@plt+0x11348>
mov    0x103c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    13482 <__sprintf_chk@plt+0x11792>
add    $0x104c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x650c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
movl   $0x208,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    13015 <__sprintf_chk@plt+0x11325>
lea    0x3c(%esp),%eax
mov    %edx,(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
call   bfe0 <__sprintf_chk@plt+0xa2f0>
mov    0x2c(%esp),%edx
test   %eax,%eax
js     1313b <__sprintf_chk@plt+0x1144b>
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x2c(%esp),%edx
cmp    $0x6,%eax
jg     131a2 <__sprintf_chk@plt+0x114b2>
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   d870 <__sprintf_chk@plt+0xbb80>
test   %eax,%eax
mov    %eax,%ebp
js     133dd <__sprintf_chk@plt+0x116ed>
mov    (%edi),%edx
test   %edx,%edx
je     131e9 <__sprintf_chk@plt+0x114f9>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    13015 <__sprintf_chk@plt+0x11325>
mov    (%edi),%eax
mov    %ebp,0x1c(%esp)
movl   $0x22c,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x6788(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    13015 <__sprintf_chk@plt+0x11325>
mov    %esi,(%esp)
mov    $0xffffffea,%ebp
mov    %edx,0x28(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x28(%esp),%edx
cmp    $0x6,%eax
jle    13015 <__sprintf_chk@plt+0x11325>
lea    -0x6803(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %edx,0x18(%esp)
movl   $0x20d,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    13015 <__sprintf_chk@plt+0x11325>
mov    $0xfffffffe,%ebp
jmp    13015 <__sprintf_chk@plt+0x11325>
mov    0x28(%esp),%eax
mov    %edx,0x18(%esp)
movl   $0x211,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x64e0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    130b5 <__sprintf_chk@plt+0x113c5>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     1343f <__sprintf_chk@plt+0x1174f>
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   d750 <__sprintf_chk@plt+0xba60>
test   %eax,%eax
mov    %eax,%ebp
js     133dd <__sprintf_chk@plt+0x116ed>
mov    (%edi),%eax
test   %eax,%eax
jne    130dd <__sprintf_chk@plt+0x113ed>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    1326d <__sprintf_chk@plt+0x1157d>
mov    0x28(%esp),%eax
movl   $0x21b,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x67d9(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   d1c0 <__sprintf_chk@plt+0xb4d0>
test   %eax,%eax
mov    %eax,%ebp
js     133dd <__sprintf_chk@plt+0x116ed>
cmpl   $0x0,(%edi)
jne    130dd <__sprintf_chk@plt+0x113ed>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    132df <__sprintf_chk@plt+0x115ef>
mov    0x28(%esp),%eax
movl   $0x21f,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x64c0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   d9f0 <__sprintf_chk@plt+0xbd00>
test   %eax,%eax
mov    %eax,%ebp
js     133dd <__sprintf_chk@plt+0x116ed>
cmpl   $0x0,(%edi)
jne    130dd <__sprintf_chk@plt+0x113ed>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    13351 <__sprintf_chk@plt+0x11661>
mov    0x28(%esp),%eax
movl   $0x223,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x67be(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   d230 <__sprintf_chk@plt+0xb540>
test   %eax,%eax
mov    %eax,%ebp
js     133dd <__sprintf_chk@plt+0x116ed>
cmpl   $0x0,(%edi)
jne    130dd <__sprintf_chk@plt+0x113ed>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    133bf <__sprintf_chk@plt+0x116cf>
mov    0x28(%esp),%eax
movl   $0x227,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x67a3(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   d250 <__sprintf_chk@plt+0xb560>
test   %eax,%eax
mov    %eax,%ebp
jns    130dd <__sprintf_chk@plt+0x113ed>
mov    %esi,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     133ff <__sprintf_chk@plt+0x1170f>
mov    (%edi),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
movl   $0x0,(%edi)
jmp    13015 <__sprintf_chk@plt+0x11325>
mov    0x28(%esp),%eax
movl   $0x22f,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x6771(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    133ea <__sprintf_chk@plt+0x116fa>
mov    0x28(%esp),%eax
movl   $0x217,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
lea    -0x67f0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fba(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    131fa <__sprintf_chk@plt+0x1150a>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %eax,0x20(%esp)
mov    0x60(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x13b5c,%ebx
mov    %edx,0x24(%esp)
test   %eax,%eax
je     13582 <__sprintf_chk@plt+0x11892>
lea    0x3c(%esp),%eax
xor    %esi,%esi
mov    %eax,0x28(%esp)
lea    -0x6498(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,0x2c(%esp)
jmp    134f3 <__sprintf_chk@plt+0x11803>
xchg   %ax,%ax
mov    0x3c(%esp),%eax
test   %eax,%eax
je     134e6 <__sprintf_chk@plt+0x117f6>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   e250 <__sprintf_chk@plt+0xc560>
mov    %eax,%ebp
add    $0x1,%esi
cmp    0x60(%esp),%esi
je     13578 <__sprintf_chk@plt+0x11888>
mov    0x24(%esp),%eax
movl   $0x0,0x3c(%esp)
mov    (%eax,%esi,4),%edi
mov    0x28(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   12fb0 <__sprintf_chk@plt+0x112c0>
test   %eax,%eax
jns    134d0 <__sprintf_chk@plt+0x117e0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    134e6 <__sprintf_chk@plt+0x117f6>
mov    0x2c(%esp),%eax
add    $0x1,%esi
mov    %edi,0x18(%esp)
movl   $0x5b5,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x60fd(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
cmp    0x60(%esp),%esi
jne    134f3 <__sprintf_chk@plt+0x11803>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ebp,%ebp
jmp    13578 <__sprintf_chk@plt+0x11888>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x13a60,%ebx
test   %ebp,%ebp
je     13613 <__sprintf_chk@plt+0x11923>
testb  $0x1,0x30(%ebp)
je     13620 <__sprintf_chk@plt+0x11930>
mov    0x10(%ebp),%esi
test   %esi,%esi
je     13613 <__sprintf_chk@plt+0x11923>
xor    %edi,%edi
jmp    135c6 <__sprintf_chk@plt+0x118d6>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     135e8 <__sprintf_chk@plt+0x118f8>
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   123e0 <__sprintf_chk@plt+0x106f0>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     135f0 <__sprintf_chk@plt+0x11900>
mov    (%esi),%esi
cmp    0x10(%ebp),%esi
jne    135c0 <__sprintf_chk@plt+0x118d0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     13658 <__sprintf_chk@plt+0x11968>
mov    %edi,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x8(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   d570 <__sprintf_chk@plt+0xb880>
test   %eax,%eax
mov    %eax,%esi
je     135b0 <__sprintf_chk@plt+0x118c0>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   12a70 <__sprintf_chk@plt+0x10d80>
mov    %esi,(%esp)
call   1800 <free@plt>
jmp    135b0 <__sprintf_chk@plt+0x118c0>
lea    0x0(%esi),%esi
lea    -0x9bcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fd7(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
movl   $0x290,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    1360b <__sprintf_chk@plt+0x1191b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x13953,%ebx
test   %eax,%eax
je     136c8 <__sprintf_chk@plt+0x119d8>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   123e0 <__sprintf_chk@plt+0x106f0>
add    $0x18,%esp
pop    %ebx
ret
nop
xor    %eax,%eax
jmp    136c2 <__sprintf_chk@plt+0x119d2>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     136e0 <__sprintf_chk@plt+0x119f0>
mov    0x8(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x13900,%ebx
test   %esi,%esi
je     137c0 <__sprintf_chk@plt+0x11ad0>
mov    (%esi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     13730 <__sprintf_chk@plt+0x11a40>
mov    0xc(%esi),%edi
test   %edi,%edi
je     1377d <__sprintf_chk@plt+0x11a8d>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0xc(%esi),%eax
mov    %eax,0x1c(%esp)
mov    0x8(%esi),%eax
movl   $0x2cd,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x675c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x5fec(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0xc(%esi),%edi
test   %edi,%edi
jne    13724 <__sprintf_chk@plt+0x11a34>
testb  $0x1,0x30(%esi)
jne    137c0 <__sprintf_chk@plt+0x11ad0>
mov    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   d570 <__sprintf_chk@plt+0xb880>
test   %eax,%eax
mov    %eax,%ebp
je     13724 <__sprintf_chk@plt+0x11a34>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   12a70 <__sprintf_chk@plt+0x10d80>
mov    %ebp,(%esp)
call   1800 <free@plt>
mov    0xc(%esi),%edi
add    $0x2c,%esp
pop    %ebx
pop    %esi
mov    %edi,%eax
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    13724 <__sprintf_chk@plt+0x11a34>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%eax),%edx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x13821,%ebx
test   %edx,%edx
je     137f8 <__sprintf_chk@plt+0x11b08>
mov    %edx,(%esp)
call   167f0 <__sprintf_chk@plt+0x14b00>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %eax,(%esp)
call   136f0 <__sprintf_chk@plt+0x11a00>
test   %eax,%eax
je     1381d <__sprintf_chk@plt+0x11b2d>
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   16840 <__sprintf_chk@plt+0x14b50>
test   %eax,%eax
mov    %eax,0x24(%esi)
je     1382c <__sprintf_chk@plt+0x11b3c>
mov    %eax,%edx
jmp    137e9 <__sprintf_chk@plt+0x11af9>
call   1ad0 <__errno_location@plt>
movl   $0x2,(%eax)
xor    %eax,%eax
jmp    137f1 <__sprintf_chk@plt+0x11b01>
xor    %eax,%eax
jmp    137f1 <__sprintf_chk@plt+0x11b01>
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x137c1,%ebx
test   %esi,%esi
je     138d8 <__sprintf_chk@plt+0x11be8>
mov    0x34(%esp),%eax
xor    %edi,%edi
and    $0xa00,%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1b90 <delete_module@plt>
test   %eax,%eax
jne    13878 <__sprintf_chk@plt+0x11b88>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   1ad0 <__errno_location@plt>
mov    (%eax),%edi
mov    (%esi),%eax
neg    %edi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    1386b <__sprintf_chk@plt+0x11b7b>
mov    0x8(%esi),%eax
movl   $0x301,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6747(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6006(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    1386b <__sprintf_chk@plt+0x11b7b>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffffe,%edi
jmp    1386b <__sprintf_chk@plt+0x11b7b>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x13717,%ebx
sub    $0x3c,%esp
mov    0x58(%esp),%eax
mov    0x50(%esp),%esi
test   %eax,%eax
lea    -0x9ce9(%ebx),%eax
cmovne 0x58(%esp),%eax
test   %esi,%esi
mov    %eax,0x58(%esp)
je     13c70 <__sprintf_chk@plt+0x11f80>
mov    %esi,(%esp)
call   136f0 <__sprintf_chk@plt+0x11a00>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     13a70 <__sprintf_chk@plt+0x11d80>
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   16840 <__sprintf_chk@plt+0x14b50>
test   %eax,%eax
mov    %eax,%edi
je     13a58 <__sprintf_chk@plt+0x11d68>
mov    %eax,(%esp)
call   16920 <__sprintf_chk@plt+0x14c30>
test   %al,%al
je     139c8 <__sprintf_chk@plt+0x11cd8>
mov    0x54(%esp),%ebp
mov    %edi,(%esp)
and    $0x1,%ebp
neg    %ebp
and    $0x2,%ebp
mov    %ebp,%eax
or     $0x1,%eax
testb  $0x2,0x54(%esp)
cmovne %eax,%ebp
call   16930 <__sprintf_chk@plt+0x14c40>
mov    0x58(%esp),%ecx
mov    %ebp,0xc(%esp)
movl   $0x15e,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   1af0 <syscall@plt>
test   %eax,%eax
mov    %eax,%ebp
je     139b2 <__sprintf_chk@plt+0x11cc2>
call   1ad0 <__errno_location@plt>
xor    %edx,%edx
cmpl   $0x26,(%eax)
je     139c8 <__sprintf_chk@plt+0x11cd8>
test   %ebp,%ebp
js     13ad8 <__sprintf_chk@plt+0x11de8>
test   %edx,%edx
je     139b2 <__sprintf_chk@plt+0x11cc2>
mov    %edx,(%esp)
call   17500 <__sprintf_chk@plt+0x15810>
mov    %edi,(%esp)
call   16940 <__sprintf_chk@plt+0x14c50>
mov    %ebp,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   16910 <__sprintf_chk@plt+0x14c20>
mov    %edi,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,%ebp
call   16900 <__sprintf_chk@plt+0x14c10>
mov    0x28(%esp),%edx
testb  $0x3,0x54(%esp)
je     13a30 <__sprintf_chk@plt+0x11d40>
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   16a10 <__sprintf_chk@plt+0x14d20>
test   %eax,%eax
mov    %eax,%edx
je     13c60 <__sprintf_chk@plt+0x11f70>
testb  $0x2,0x54(%esp)
jne    13bd0 <__sprintf_chk@plt+0x11ee0>
testb  $0x1,0x54(%esp)
jne    13b48 <__sprintf_chk@plt+0x11e58>
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
call   17530 <__sprintf_chk@plt+0x15840>
mov    0x28(%esp),%edx
jmp    13a32 <__sprintf_chk@plt+0x11d42>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    0x58(%esp),%ecx
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x8(%esp)
call   1c00 <init_module@plt>
mov    0x28(%esp),%edx
mov    %eax,%ebp
jmp    1399e <__sprintf_chk@plt+0x11cae>
lea    0x0(%esi),%esi
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %eax,%edx
mov    $0xffffffda,%eax
cmp    $0x2,%edx
jle    139bc <__sprintf_chk@plt+0x11ccc>
mov    0x8(%esi),%edx
movl   $0x329,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x24(%esp)
mov    %edx,0x18(%esp)
lea    -0x645c(%ebx),%edx
mov    %edx,0x14(%esp)
lea    -0x6020(%ebx),%edx
mov    %edx,0x10(%esp)
lea    -0x689b(%ebx),%edx
mov    %edx,0x8(%esp)
mov    (%esi),%edx
mov    %edx,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x24(%esp),%eax
jmp    139bc <__sprintf_chk@plt+0x11ccc>
xchg   %ax,%ax
mov    %edx,0x28(%esp)
call   1ad0 <__errno_location@plt>
mov    (%eax),%ebp
mov    (%esi),%eax
neg    %ebp
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x28(%esp),%edx
cmp    $0x5,%eax
jle    139a6 <__sprintf_chk@plt+0x11cb6>
mov    0x24(%esp),%eax
movl   $0x35d,0xc(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6418(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6020(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%edx
jmp    139a6 <__sprintf_chk@plt+0x11cb6>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
call   18be0 <__sprintf_chk@plt+0x16ef0>
mov    0x28(%esp),%edx
test   %eax,%eax
jns    13a19 <__sprintf_chk@plt+0x11d29>
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
cmp    $0x5,%eax
jle    13a19 <__sprintf_chk@plt+0x11d29>
neg    %ecx
mov    %ecx,(%esp)
call   19a0 <strerror@plt>
movl   $0x353,0xc(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6721(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6020(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%edx
jmp    13a19 <__sprintf_chk@plt+0x11d29>
xchg   %ax,%ax
lea    -0x672c(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x28(%esp)
call   18290 <__sprintf_chk@plt+0x165a0>
mov    0x28(%esp),%edx
test   %eax,%eax
jns    13a0e <__sprintf_chk@plt+0x11d1e>
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
cmp    $0x5,%eax
jle    13a0e <__sprintf_chk@plt+0x11d1e>
neg    %ecx
mov    %ecx,(%esp)
call   19a0 <strerror@plt>
movl   $0x34d,0xc(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6438(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6020(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%edx
jmp    13a0e <__sprintf_chk@plt+0x11d1e>
call   1ad0 <__errno_location@plt>
mov    (%eax),%ebp
neg    %ebp
jmp    139b2 <__sprintf_chk@plt+0x11cc2>
xchg   %ax,%ax
mov    $0xfffffffe,%eax
jmp    139bc <__sprintf_chk@plt+0x11ccc>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ecx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x13370,%ebx
mov    0x34(%esp),%eax
mov    0x3c(%esp),%edi
test   %ecx,%ecx
je     13d55 <__sprintf_chk@plt+0x12065>
test   %edi,%edi
je     13d55 <__sprintf_chk@plt+0x12065>
mov    %eax,%ecx
and    $0x2,%eax
mov    0x38(%esp),%esi
and    $0x1,%ecx
movl   $0x0,(%edi)
mov    %ecx,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    13d02 <__sprintf_chk@plt+0x12012>
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
test   %eax,%eax
je     13cde <__sprintf_chk@plt+0x11fee>
testb  $0x4,0x31(%ebp)
jne    13cfa <__sprintf_chk@plt+0x1200a>
mov    %ebp,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     13d38 <__sprintf_chk@plt+0x12048>
mov    %eax,(%edi)
mov    %ebp,(%esp)
call   123e0 <__sprintf_chk@plt+0x106f0>
mov    (%esi),%esi
cmp    0x38(%esp),%esi
je     13d28 <__sprintf_chk@plt+0x12038>
test   %esi,%esi
je     13d28 <__sprintf_chk@plt+0x12038>
mov    0x8(%esp),%edx
mov    0x8(%esi),%ebp
test   %edx,%edx
je     13cd0 <__sprintf_chk@plt+0x11fe0>
mov    0x0(%ebp),%eax
lea    0x8(%ebp),%edx
call   12330 <__sprintf_chk@plt+0x10640>
test   %al,%al
je     13cd0 <__sprintf_chk@plt+0x11fe0>
mov    (%esi),%esi
cmp    0x38(%esp),%esi
jne    13d02 <__sprintf_chk@plt+0x12012>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    $0xfffffff4,%eax
movl   $0x0,(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xfffffffe,%eax
jmp    13d2a <__sprintf_chk@plt+0x1203a>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%edi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x13290,%ebx
test   %edi,%edi
je     13fea <__sprintf_chk@plt+0x122fa>
testb  $0x2,0x30(%edi)
je     13d90 <__sprintf_chk@plt+0x120a0>
mov    0x14(%edi),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    (%edi),%eax
mov    %eax,(%esp)
call   e170 <__sprintf_chk@plt+0xc480>
mov    0xc(%eax),%esi
mov    %eax,0x2c(%esp)
test   %esi,%esi
je     13ff1 <__sprintf_chk@plt+0x12301>
lea    -0x63f4(%ebx),%eax
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
mov    %eax,0x38(%esp)
jmp    13e38 <__sprintf_chk@plt+0x12148>
lea    0x0(%esi),%esi
mov    0x8(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
je     13df2 <__sprintf_chk@plt+0x12102>
mov    0x20(%edi),%eax
test   %eax,%eax
je     13e21 <__sprintf_chk@plt+0x12131>
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    13e21 <__sprintf_chk@plt+0x12131>
mov    (%edi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     13f48 <__sprintf_chk@plt+0x12258>
mov    %esi,(%esp)
call   e410 <__sprintf_chk@plt+0xc720>
mov    %eax,(%esp)
mov    %eax,%ebp
call   1a30 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
jne    13ea8 <__sprintf_chk@plt+0x121b8>
mov    0x2c(%esp),%eax
mov    (%esi),%esi
cmp    0xc(%eax),%esi
je     13f30 <__sprintf_chk@plt+0x12240>
test   %esi,%esi
je     13f30 <__sprintf_chk@plt+0x12240>
mov    %esi,(%esp)
call   e420 <__sprintf_chk@plt+0xc730>
mov    %eax,%ebp
mov    (%edi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jle    13dc8 <__sprintf_chk@plt+0x120d8>
mov    0x20(%edi),%eax
mov    %eax,0x20(%esp)
mov    0x8(%edi),%eax
mov    %ebp,0x18(%esp)
movl   $0x54b,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x14(%esp)
lea    -0x60d5(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    13dc8 <__sprintf_chk@plt+0x120d8>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
mov    %edx,0x3c(%esp)
lea    0x2(%eax,%edx,1),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1960 <realloc@plt>
mov    0x3c(%esp),%edx
test   %eax,%eax
mov    %eax,%ecx
je     13f97 <__sprintf_chk@plt+0x122a7>
mov    0x30(%esp),%eax
test   %eax,%eax
je     13ee7 <__sprintf_chk@plt+0x121f7>
mov    0x30(%esp),%eax
addl   $0x1,0x30(%esp)
movb   $0x20,(%ecx,%eax,1)
mov    0x30(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ecx,0x3c(%esp)
add    %ecx,%eax
mov    %eax,(%esp)
mov    %edx,0x34(%esp)
call   1810 <memcpy@plt>
mov    0x34(%esp),%edx
add    %edx,0x30(%esp)
mov    0x30(%esp),%eax
mov    0x3c(%esp),%ecx
movb   $0x0,(%ecx,%eax,1)
mov    0x2c(%esp),%eax
mov    (%esi),%esi
mov    %ecx,0x34(%esp)
cmp    0xc(%eax),%esi
jne    13e30 <__sprintf_chk@plt+0x12140>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
orb    $0x2,0x30(%edi)
mov    %eax,0x14(%edi)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%edi),%eax
mov    %eax,0x20(%esp)
mov    0x8(%edi),%eax
mov    %ebp,0x18(%esp)
movl   $0x550,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x63cc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x60d5(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    13e05 <__sprintf_chk@plt+0x12115>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    (%edi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    13fea <__sprintf_chk@plt+0x122fa>
lea    -0x9bcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x60d5(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
movl   $0x56f,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
xor    %eax,%eax
jmp    13d87 <__sprintf_chk@plt+0x12097>
movl   $0x0,0x34(%esp)
jmp    13f30 <__sprintf_chk@plt+0x12240>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x12ff0,%ebx
test   %esi,%esi
je     14098 <__sprintf_chk@plt+0x123a8>
testb  $0x4,0x30(%esi)
je     14030 <__sprintf_chk@plt+0x12340>
mov    0x18(%esi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   e170 <__sprintf_chk@plt+0xc480>
mov    0x14(%eax),%edi
mov    %eax,%ebp
test   %edi,%edi
je     14078 <__sprintf_chk@plt+0x12388>
mov    %edi,(%esp)
call   e440 <__sprintf_chk@plt+0xc750>
movl   $0x0,0x8(%esp)
mov    0x8(%esi),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   18d0 <fnmatch@plt>
test   %eax,%eax
je     14080 <__sprintf_chk@plt+0x12390>
mov    (%edi),%edi
cmp    0x14(%ebp),%edi
je     14078 <__sprintf_chk@plt+0x12388>
test   %edi,%edi
nop
jne    14043 <__sprintf_chk@plt+0x12353>
lea    0x0(%esi),%esi
mov    0x18(%esi),%eax
jmp    1408b <__sprintf_chk@plt+0x1239b>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   e430 <__sprintf_chk@plt+0xc740>
mov    %eax,0x18(%esi)
orb    $0x4,0x30(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
xor    %eax,%eax
jmp    14023 <__sprintf_chk@plt+0x12333>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
orb    $0x4,0x30(%eax)
mov    %edx,0x18(%eax)
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x12f40,%ebx
test   %edi,%edi
je     141b0 <__sprintf_chk@plt+0x124c0>
mov    0x54(%esp),%esi
test   %esi,%esi
je     141b0 <__sprintf_chk@plt+0x124c0>
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     141b0 <__sprintf_chk@plt+0x124c0>
mov    0x54(%esp),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    141e1 <__sprintf_chk@plt+0x124f1>
mov    0x58(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    141b7 <__sprintf_chk@plt+0x124c7>
mov    (%edi),%eax
mov    %eax,(%esp)
call   e170 <__sprintf_chk@plt+0xc480>
mov    0x18(%eax),%esi
mov    %eax,%ebp
test   %esi,%esi
je     1413f <__sprintf_chk@plt+0x1244f>
mov    %esi,(%esp)
call   e450 <__sprintf_chk@plt+0xc760>
movl   $0x0,0x8(%esp)
mov    0x8(%edi),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   18d0 <fnmatch@plt>
test   %eax,%eax
je     14150 <__sprintf_chk@plt+0x12460>
mov    (%esi),%esi
cmp    0x18(%ebp),%esi
jne    14111 <__sprintf_chk@plt+0x12421>
add    $0x3c,%esp
xor    %ecx,%ecx
pop    %ebx
mov    %ecx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%ebp
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   efe0 <__sprintf_chk@plt+0xd2f0>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%edx
mov    (%edi),%eax
call   13490 <__sprintf_chk@plt+0x117a0>
mov    0x54(%esp),%ecx
mov    %eax,(%ecx)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   f000 <__sprintf_chk@plt+0xd310>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%edx
mov    (%edi),%eax
call   13490 <__sprintf_chk@plt+0x117a0>
mov    0x58(%esp),%ecx
mov    %eax,(%ecx)
mov    0x1c(%esp),%ecx
add    $0x3c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0xfffffffe,%ecx
jmp    141a0 <__sprintf_chk@plt+0x124b0>
lea    -0x60ee(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x66ef(%ebx),%eax
movl   $0x5d9,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
lea    -0x60ee(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x6703(%ebx),%eax
movl   $0x5d8,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %eax,%ecx
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x12de3,%ebx
sub    $0x3c,%esp
mov    %eax,0x1c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
call   140b0 <__sprintf_chk@plt+0x123c0>
test   %eax,%eax
mov    %eax,%esi
js     14330 <__sprintf_chk@plt+0x12640>
mov    0x28(%esp),%ebp
test   %ebp,%ebp
jne    1426c <__sprintf_chk@plt+0x1257c>
jmp    1428c <__sprintf_chk@plt+0x1259c>
xchg   %ax,%ax
test   %ebp,%ebp
je     1428a <__sprintf_chk@plt+0x1259a>
mov    0x8(%ebp),%eax
xor    %edx,%edx
mov    %edi,(%esp)
call   143d0 <__sprintf_chk@plt+0x126e0>
test   %eax,%eax
js     14306 <__sprintf_chk@plt+0x12616>
mov    0x0(%ebp),%ebp
cmp    0x28(%esp),%ebp
jne    14268 <__sprintf_chk@plt+0x12578>
mov    %eax,%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   123e0 <__sprintf_chk@plt+0x106f0>
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     143a8 <__sprintf_chk@plt+0x126b8>
mov    0x28(%esp),%edx
mov    %eax,(%edi)
test   %edx,%edx
je     14398 <__sprintf_chk@plt+0x126a8>
mov    0x2c(%esp),%ebp
mov    $0x1,%eax
lea    (%eax,%eax,1),%ecx
mov    0x1c(%esp),%eax
movzbl 0x31(%eax),%eax
and    $0xfffffffd,%eax
or     %ecx,%eax
mov    0x1c(%esp),%ecx
test   %ebp,%ebp
mov    %al,0x31(%ecx)
jne    142ec <__sprintf_chk@plt+0x125fc>
jmp    1430c <__sprintf_chk@plt+0x1261c>
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     14306 <__sprintf_chk@plt+0x12616>
mov    0x8(%ebp),%eax
xor    %edx,%edx
mov    %edi,(%esp)
call   143d0 <__sprintf_chk@plt+0x126e0>
test   %eax,%eax
js     14306 <__sprintf_chk@plt+0x12616>
mov    0x0(%ebp),%ebp
cmp    0x2c(%esp),%ebp
jne    142e8 <__sprintf_chk@plt+0x125f8>
mov    %eax,%esi
mov    0x28(%esp),%edx
mov    %edx,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    14308 <__sprintf_chk@plt+0x12618>
mov    %esi,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x428,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x66da(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6097(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x28(%esp),%edx
jmp    1430c <__sprintf_chk@plt+0x1261c>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
mov    %ecx,%ebp
setne  %al
jmp    142c5 <__sprintf_chk@plt+0x125d5>
mov    0x1c(%esp),%eax
mov    $0xfffffff4,%esi
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    0x28(%esp),%edx
jmp    1430c <__sprintf_chk@plt+0x1261c>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movzbl 0x31(%eax),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x12c1e,%ebx
mov    %edx,0x28(%esp)
test   $0x1,%al
je     14410 <__sprintf_chk@plt+0x12720>
mov    0x0(%ebp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     144b8 <__sprintf_chk@plt+0x127c8>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0x1,%eax
mov    %al,0x31(%ebp)
mov    %ebp,(%esp)
call   13590 <__sprintf_chk@plt+0x118a0>
test   %eax,%eax
mov    %eax,%esi
je     14517 <__sprintf_chk@plt+0x12827>
mov    %ebp,0x2c(%esp)
mov    0x50(%esp),%edi
mov    %eax,%ebp
jmp    1443c <__sprintf_chk@plt+0x1274c>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     14451 <__sprintf_chk@plt+0x12761>
mov    0x8(%ebp),%eax
mov    %edi,%edx
call   14210 <__sprintf_chk@plt+0x12520>
test   %eax,%eax
js     14498 <__sprintf_chk@plt+0x127a8>
mov    0x0(%ebp),%ebp
cmp    %esi,%ebp
jne    14438 <__sprintf_chk@plt+0x12748>
mov    0x2c(%esp),%ebp
mov    %eax,%edx
cmpb   $0x0,0x28(%esp)
je     14508 <__sprintf_chk@plt+0x12818>
mov    %ebp,(%esp)
mov    %edx,0x28(%esp)
call   123e0 <__sprintf_chk@plt+0x106f0>
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
mov    0x28(%esp),%edx
test   %eax,%eax
je     1451e <__sprintf_chk@plt+0x1282e>
mov    0x50(%esp),%ecx
mov    %eax,(%ecx)
orb    $0x2,0x31(%ebp)
jmp    1449a <__sprintf_chk@plt+0x127aa>
mov    %eax,%edx
mov    %esi,(%esp)
mov    %edx,0x28(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x28(%esp),%edx
add    $0x3c,%esp
pop    %ebx
mov    %edx,%esi
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x8(%ebp),%eax
movl   $0x454,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x639c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x607c(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x50(%esp),%edx
mov    %ebp,%eax
call   14210 <__sprintf_chk@plt+0x12520>
mov    %eax,%edx
jmp    1449a <__sprintf_chk@plt+0x127aa>
xor    %edx,%edx
jmp    14457 <__sprintf_chk@plt+0x12767>
mov    %ebp,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    $0xfffffff4,%edx
jmp    1449a <__sprintf_chk@plt+0x127aa>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x12ac0,%ebx
test   %esi,%esi
je     145c8 <__sprintf_chk@plt+0x128d8>
testb  $0x8,0x30(%esi)
je     14560 <__sprintf_chk@plt+0x12870>
mov    0x1c(%esi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   e170 <__sprintf_chk@plt+0xc480>
mov    0x10(%eax),%edi
mov    %eax,%ebp
test   %edi,%edi
je     145a8 <__sprintf_chk@plt+0x128b8>
mov    %edi,(%esp)
call   e440 <__sprintf_chk@plt+0xc750>
movl   $0x0,0x8(%esp)
mov    0x8(%esi),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   18d0 <fnmatch@plt>
test   %eax,%eax
je     145b0 <__sprintf_chk@plt+0x128c0>
mov    (%edi),%edi
cmp    0x10(%ebp),%edi
je     145a8 <__sprintf_chk@plt+0x128b8>
test   %edi,%edi
nop
jne    14573 <__sprintf_chk@plt+0x12883>
lea    0x0(%esi),%esi
mov    0x1c(%esi),%eax
jmp    145bb <__sprintf_chk@plt+0x128cb>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   e430 <__sprintf_chk@plt+0xc740>
mov    %eax,0x1c(%esi)
orb    $0x8,0x30(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
xor    %eax,%eax
jmp    14553 <__sprintf_chk@plt+0x12863>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
orb    $0x8,0x30(%eax)
mov    %edx,0x1c(%eax)
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%eax
mov    0x1074(%esp),%ecx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x12a03,%ebx
mov    %gs:0x14,%edi
mov    %edi,0x104c(%esp)
xor    %edi,%edi
test   %eax,%eax
mov    %eax,0x2c(%esp)
mov    %ecx,0x3c(%esp)
je     147e8 <__sprintf_chk@plt+0x12af8>
test   %ecx,%ecx
je     147e8 <__sprintf_chk@plt+0x12af8>
lea    -0x72a2(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x66bf(%ebx),%eax
mov    %eax,(%esp)
call   18e0 <fopen64@plt>
test   %eax,%eax
mov    %eax,0x30(%esp)
je     147f2 <__sprintf_chk@plt+0x12b02>
lea    -0x9ceb(%ebx),%eax
xor    %ebp,%ebp
lea    0x4c(%esp),%esi
mov    %eax,0x34(%esp)
nop
mov    0x30(%esp),%eax
movl   $0x1000,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   1830 <fgets@plt>
test   %eax,%eax
je     14748 <__sprintf_chk@plt+0x12a58>
lea    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
mov    %eax,%edi
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   12530 <__sprintf_chk@plt+0x10840>
test   %eax,%eax
js     146d8 <__sprintf_chk@plt+0x129e8>
mov    0x44(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     14780 <__sprintf_chk@plt+0x12a90>
mov    %eax,%ebp
jmp    14660 <__sprintf_chk@plt+0x12970>
lea    0x0(%esi),%esi
mov    %eax,0x38(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x38(%esp),%edx
cmp    $0x2,%eax
jle    14660 <__sprintf_chk@plt+0x12970>
neg    %edx
mov    %edx,(%esp)
call   19a0 <strerror@plt>
mov    %edi,0x18(%esp)
movl   $0x660,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x6350(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6119(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    14660 <__sprintf_chk@plt+0x12970>
xchg   %ax,%ax
mov    0x30(%esp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1840 <fclose@plt>
mov    0x3c(%esp),%eax
mov    %ebp,(%eax)
mov    0x104c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    1485f <__sprintf_chk@plt+0x12b6f>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     147a8 <__sprintf_chk@plt+0x12ab8>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
mov    %ebp,%eax
mov    %eax,%ebp
jmp    14660 <__sprintf_chk@plt+0x12970>
xchg   %ax,%ax
lea    -0x9bcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6119(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
movl   $0x668,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    14791 <__sprintf_chk@plt+0x12aa1>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffffe,%esi
jmp    1475c <__sprintf_chk@plt+0x12a6c>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%edi
mov    0x2c(%esp),%eax
neg    %esi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    1475c <__sprintf_chk@plt+0x12a6c>
mov    (%edi),%eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x653,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6374(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6119(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    1475c <__sprintf_chk@plt+0x12a6c>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x10cc,%esp
mov    0x10e0(%esp),%ebp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1277a,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x10bc(%esp)
xor    %eax,%eax
test   %ebp,%ebp
je     14ba2 <__sprintf_chk@plt+0x12eb2>
xor    %esi,%esi
testb  $0x4,0x31(%ebp)
je     148d0 <__sprintf_chk@plt+0x12be0>
mov    0x10bc(%esp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    14bac <__sprintf_chk@plt+0x12ebc>
add    $0x10cc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebp),%eax
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x669f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0xbc(%esp),%eax
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x2c(%esp)
call   1730 <__snprintf_chk@plt>
mov    %edi,(%esp)
movl   $0x80000,0x4(%esp)
mov    %eax,%esi
call   1770 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     14a30 <__sprintf_chk@plt+0x12d40>
lea    0x9c(%esp),%edx
mov    %edx,0x4(%esp)
movl   $0x20,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   c1c0 <__sprintf_chk@plt+0xa4d0>
mov    %edi,(%esp)
mov    %eax,%esi
call   1c90 <close@plt>
test   %esi,%esi
mov    0x28(%esp),%edx
js     14b00 <__sprintf_chk@plt+0x12e10>
mov    $0x6,%ecx
mov    %edx,%esi
lea    -0x664f(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x1,%esi
seta   %cl
setb   %al
cmp    %al,%cl
je     148ab <__sprintf_chk@plt+0x12bbb>
mov    $0x8,%ecx
mov    %edx,%esi
lea    -0x6649(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x2,%esi
seta   %cl
setb   %al
cmp    %al,%cl
je     148ab <__sprintf_chk@plt+0x12bbb>
mov    $0x7,%ecx
mov    %edx,%esi
lea    -0x6641(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x3,%esi
seta   %cl
setb   %al
cmp    %al,%cl
je     148ab <__sprintf_chk@plt+0x12bbb>
mov    0x0(%ebp),%eax
mov    $0xffffffea,%esi
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x28(%esp),%edx
cmp    $0x2,%eax
jle    148ab <__sprintf_chk@plt+0x12bbb>
mov    0x2c(%esp),%eax
mov    %edx,0x1c(%esp)
movl   $0x6c8,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x663a(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6133(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    148ab <__sprintf_chk@plt+0x12bbb>
call   1ad0 <__errno_location@plt>
mov    (%eax),%edi
mov    %edi,%eax
neg    %eax
mov    %eax,0x28(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     14b50 <__sprintf_chk@plt+0x12e60>
cmp    $0xa,%esi
jle    14a96 <__sprintf_chk@plt+0x12da6>
lea    0x3c(%esp),%eax
movb   $0x0,0xb2(%esp,%esi,1)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   1c60 <__xstat64@plt>
test   %eax,%eax
mov    %eax,%esi
jne    14a96 <__sprintf_chk@plt+0x12da6>
mov    0x4c(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
je     148ab <__sprintf_chk@plt+0x12bbb>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x28(%esp),%esi
cmp    $0x6,%eax
jle    148ab <__sprintf_chk@plt+0x12bbb>
mov    %edi,(%esp)
call   19a0 <strerror@plt>
movl   $0x6b5,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6686(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6133(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    148ab <__sprintf_chk@plt+0x12bbb>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    148ab <__sprintf_chk@plt+0x12bbb>
mov    %esi,%eax
neg    %eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x6bd,0xc(%esp)
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x666d(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6133(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    14a0e <__sprintf_chk@plt+0x12d1e>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   19a0 <strerror@plt>
movl   $0x6ab,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x18(%esp)
lea    -0x6686(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6133(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    14a53 <__sprintf_chk@plt+0x12d63>
mov    $0xfffffffe,%esi
jmp    148ab <__sprintf_chk@plt+0x12bbb>
lea    0x0(%esi,%eiz,1),%esi
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x90(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1242d,%ebx
movl   $0x0,0x68(%esp)
test   %eax,%eax
je     153dc <__sprintf_chk@plt+0x136ec>
mov    0x94(%esp),%eax
and    $0x8,%eax
mov    %eax,0x54(%esp)
je     15150 <__sprintf_chk@plt+0x13460>
mov    0x90(%esp),%eax
mov    0x20(%eax),%eax
test   %eax,%eax
je     14c1e <__sprintf_chk@plt+0x12f2e>
mov    0x94(%esp),%esi
and    $0x40000,%esi
jne    14ec8 <__sprintf_chk@plt+0x131d8>
mov    0x94(%esp),%esi
and    $0x10000,%esi
jne    14ec8 <__sprintf_chk@plt+0x131d8>
mov    0x94(%esp),%esi
and    $0x20000,%esi
jne    14ec8 <__sprintf_chk@plt+0x131d8>
mov    0x94(%esp),%esi
mov    0x68(%esp),%eax
shr    $0x2,%esi
and    $0x1,%esi
test   %eax,%eax
jne    15426 <__sprintf_chk@plt+0x13736>
mov    0x90(%esp),%eax
movl   $0x0,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   dcb0 <__sprintf_chk@plt+0xbfc0>
mov    %esi,%eax
movzbl %al,%edx
lea    0x68(%esp),%eax
mov    %eax,(%esp)
mov    0x90(%esp),%eax
call   143d0 <__sprintf_chk@plt+0x126e0>
test   %eax,%eax
mov    %eax,0x3c(%esp)
js     15180 <__sprintf_chk@plt+0x13490>
testl  $0x10000,0x94(%esp)
00
jne    151e8 <__sprintf_chk@plt+0x134f8>
mov    0x68(%esp),%eax
test   %eax,%eax
je     14f54 <__sprintf_chk@plt+0x13264>
mov    %eax,0x38(%esp)
lea    -0x9ce9(%ebx),%eax
mov    %eax,0x58(%esp)
jmp    14d2c <__sprintf_chk@plt+0x1303c>
nop
mov    0xa4(%esp),%esi
test   %esi,%esi
je     14cf6 <__sprintf_chk@plt+0x13006>
mov    0x58(%esp),%eax
test   %ebp,%ebp
movl   $0x1,0x4(%esp)
cmovne %ebp,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   *0xa4(%esp)
testb  $0x10,0x94(%esp)
je     14f78 <__sprintf_chk@plt+0x13288>
mov    %ebp,(%esp)
call   1800 <free@plt>
mov    0x38(%esp),%eax
mov    (%eax),%eax
mov    %eax,%edx
mov    %eax,0x38(%esp)
mov    0x68(%esp),%eax
cmp    %eax,%edx
je     14f50 <__sprintf_chk@plt+0x13260>
test   %edx,%edx
je     14f54 <__sprintf_chk@plt+0x13264>
mov    0x38(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x30(%esp)
call   13d60 <__sprintf_chk@plt+0x12070>
mov    %edi,(%esp)
mov    %eax,0x2c(%esp)
call   14000 <__sprintf_chk@plt+0x12310>
mov    0x54(%esp),%ebp
test   %ebp,%ebp
mov    %eax,0x34(%esp)
je     14f08 <__sprintf_chk@plt+0x13218>
mov    0x30(%esp),%eax
xor    %esi,%esi
cmp    0x90(%esp),%eax
mov    0x2c(%esp),%eax
cmove  0x98(%esp),%esi
test   %eax,%eax
je     14f70 <__sprintf_chk@plt+0x13280>
mov    %eax,(%esp)
call   1a30 <strlen@plt>
mov    %eax,%edi
test   %esi,%esi
je     14f68 <__sprintf_chk@plt+0x13278>
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    %eax,%ecx
mov    %ecx,%eax
xor    %ebp,%ebp
or     %edi,%eax
je     14e02 <__sprintf_chk@plt+0x13112>
lea    0x2(%edi,%ecx,1),%eax
mov    %eax,(%esp)
mov    %ecx,0x40(%esp)
call   1970 <malloc@plt>
mov    0x40(%esp),%ecx
mov    %eax,%ebp
mov    0x2c(%esp),%eax
test   %eax,%eax
je     14de0 <__sprintf_chk@plt+0x130f0>
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x2c(%esp)
call   1810 <memcpy@plt>
mov    0x2c(%esp),%ecx
movb   $0x20,0x0(%ebp,%edi,1)
add    $0x1,%edi
add    %ebp,%edi
test   %esi,%esi
je     14dfe <__sprintf_chk@plt+0x1310e>
mov    %ecx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x2c(%esp)
call   1810 <memcpy@plt>
mov    0x2c(%esp),%ecx
movb   $0x0,(%edi,%ecx,1)
mov    0x34(%esp),%edi
test   %edi,%edi
je     14e25 <__sprintf_chk@plt+0x13135>
mov    0x30(%esp),%eax
movzbl 0x31(%eax),%eax
mov    %al,0x34(%esp)
shrb   0x34(%esp)
andb   $0x1,0x34(%esp)
je     14cc8 <__sprintf_chk@plt+0x12fd8>
mov    0xa4(%esp),%edx
test   %edx,%edx
je     14e53 <__sprintf_chk@plt+0x13163>
mov    0x58(%esp),%eax
test   %ebp,%ebp
movl   $0x0,0x4(%esp)
cmovne %ebp,%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   *0xa4(%esp)
testb  $0x10,0x94(%esp)
jne    14d04 <__sprintf_chk@plt+0x13014>
mov    0x30(%esp),%edi
mov    0x94(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   138e0 <__sprintf_chk@plt+0x11bf0>
cmp    $0xffffffef,%eax
mov    %eax,0x3c(%esp)
sete   %al
cmp    %edi,0x90(%esp)
mov    %eax,%esi
mov    %esi,%eax
sete   0x34(%esp)
and    %al,0x34(%esp)
mov    %ebp,(%esp)
call   1800 <free@plt>
cmpb   $0x0,0x34(%esp)
je     14ef0 <__sprintf_chk@plt+0x13200>
testb  $0x20,0x94(%esp)
jne    15268 <__sprintf_chk@plt+0x13578>
movl   $0x0,0x3c(%esp)
jmp    14d0c <__sprintf_chk@plt+0x1301c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x90(%esp),%eax
lea    0x8(%eax),%edx
mov    (%eax),%eax
call   12330 <__sprintf_chk@plt+0x10640>
test   %al,%al
je     14c44 <__sprintf_chk@plt+0x12f54>
mov    %esi,%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
test   %al,%al
jne    14eb7 <__sprintf_chk@plt+0x131c7>
mov    0x3c(%esp),%eax
test   %eax,%eax
jns    14d0c <__sprintf_chk@plt+0x1301c>
mov    0x68(%esp),%eax
jmp    14f54 <__sprintf_chk@plt+0x13264>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   14870 <__sprintf_chk@plt+0x12b80>
cmp    $0x1,%eax
ja     14d5d <__sprintf_chk@plt+0x1306d>
mov    0x90(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     15198 <__sprintf_chk@plt+0x134a8>
mov    0x30(%esp),%eax
cmp    %eax,0x90(%esp)
je     14ea9 <__sprintf_chk@plt+0x131b9>
jmp    14eb7 <__sprintf_chk@plt+0x131c7>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x3c(%esp),%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ecx,%ecx
jmp    14d9a <__sprintf_chk@plt+0x130aa>
nop
xor    %edi,%edi
jmp    14d88 <__sprintf_chk@plt+0x13098>
nop
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   14000 <__sprintf_chk@plt+0x12310>
test   %eax,%eax
mov    %eax,%esi
je     153fc <__sprintf_chk@plt+0x1370c>
test   %ebp,%ebp
je     15250 <__sprintf_chk@plt+0x13560>
mov    %ebp,%ecx
mov    (%ecx),%eax
add    $0x4,%ecx
lea    -0x1010101(%eax),%edx
not    %eax
and    %eax,%edx
and    $0x80808080,%edx
je     14f98 <__sprintf_chk@plt+0x132a8>
mov    %edx,%eax
shr    $0x10,%eax
test   $0x8080,%edx
cmove  %eax,%edx
lea    0x2(%ecx),%eax
cmove  %eax,%ecx
add    %dl,%dl
mov    %ecx,0x3c(%esp)
sbbl   $0x3,0x3c(%esp)
sub    %ebp,0x3c(%esp)
mov    %ebp,0x50(%esp)
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,0x2c(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   c170 <__sprintf_chk@plt+0xa480>
test   %eax,%eax
mov    %eax,%edi
je     153ed <__sprintf_chk@plt+0x136fd>
lea    -0xae29(%ebx),%eax
mov    %eax,0x48(%esp)
mov    0x3c(%esp),%eax
mov    %ebp,0x5c(%esp)
sub    $0xd,%eax
mov    %eax,0x4c(%esp)
jmp    150b4 <__sprintf_chk@plt+0x133c4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%edx
mov    %eax,%ebp
add    $0xd,%eax
sub    %edi,%ebp
mov    %eax,0x44(%esp)
sub    %ebp,%edx
lea    -0xd(%edx),%ecx
mov    %ecx,0x40(%esp)
mov    0x4c(%esp),%ecx
add    %ecx,0x2c(%esp)
mov    0x2c(%esp),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     15130 <__sprintf_chk@plt+0x13440>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x3c(%esp),%ecx
lea    (%esi,%ebp,1),%eax
mov    0x50(%esp),%edx
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x40(%esp),%eax
add    0x3c(%esp),%ebp
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
add    %esi,%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x2c(%esp),%eax
movb   $0x0,(%esi,%eax,1)
mov    %edi,(%esp)
mov    %esi,%edi
call   1800 <free@plt>
mov    0x48(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   1740 <strstr@plt>
test   %eax,%eax
jne    15020 <__sprintf_chk@plt+0x13330>
mov    0x9c(%esp),%ecx
mov    0x5c(%esp),%ebp
mov    %edi,0x2c(%esp)
test   %ecx,%ecx
je     15279 <__sprintf_chk@plt+0x13589>
mov    0xa0(%esp),%eax
mov    %edi,0x4(%esp)
mov    0x30(%esp),%edi
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   *0x9c(%esp)
cmp    $0xffffffef,%eax
mov    %eax,0x3c(%esp)
sete   %al
cmp    %edi,0x90(%esp)
mov    %eax,%esi
mov    %esi,%eax
sete   0x34(%esp)
and    %al,0x34(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
jmp    14e9a <__sprintf_chk@plt+0x131aa>
nop
mov    %edi,(%esp)
mov    0x5c(%esp),%ebp
call   1800 <free@plt>
movl   $0xfffffff4,0x3c(%esp)
jmp    14e9a <__sprintf_chk@plt+0x131aa>
lea    0x0(%esi,%eiz,1),%esi
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   14870 <__sprintf_chk@plt+0x12b80>
cmp    $0x1,%eax
ja     14bfd <__sprintf_chk@plt+0x12f0d>
mov    0x94(%esp),%eax
shl    $0x1a,%eax
sar    $0x1f,%eax
and    $0xffffffef,%eax
jmp    14ee3 <__sprintf_chk@plt+0x131f3>
lea    0x0(%esi),%esi
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x3c(%esp),%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x30(%esp),%eax
mov    0x8(%eax),%eax
movl   $0x4f8,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x62f8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6040(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    14f37 <__sprintf_chk@plt+0x13247>
nop
lea    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
movl   $0x1,0x4(%esp)
movl   $0x0,0x6c(%esp)
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   13c80 <__sprintf_chk@plt+0x11f90>
test   %eax,%eax
mov    %eax,0x3c(%esp)
js     14f5c <__sprintf_chk@plt+0x1326c>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
mov    0x6c(%esp),%eax
test   %eax,%eax
je     153d2 <__sprintf_chk@plt+0x136e2>
mov    %eax,0x68(%esp)
mov    %eax,0x38(%esp)
jmp    14cbb <__sprintf_chk@plt+0x12fcb>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
movl   $0x0,0x3c(%esp)
mov    %eax,0x50(%esp)
jmp    14fd6 <__sprintf_chk@plt+0x132e6>
lea    0x0(%esi),%esi
mov    0x68(%esp),%eax
movl   $0xffffffef,0x3c(%esp)
jmp    14f54 <__sprintf_chk@plt+0x13264>
mov    0x30(%esp),%edi
mov    %edi,(%esp)
call   136d0 <__sprintf_chk@plt+0x119e0>
mov    %eax,%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x6,%eax
jg     15330 <__sprintf_chk@plt+0x13640>
lea    -0xae1b(%ebx),%edi
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   1a40 <setenv@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   1990 <system@plt>
mov    %edi,(%esp)
mov    %eax,0x3c(%esp)
call   1720 <unsetenv@plt>
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     152dc <__sprintf_chk@plt+0x135ec>
movzbl %ah,%eax
test   %eax,%eax
je     1530b <__sprintf_chk@plt+0x1361b>
mov    0x30(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     15383 <__sprintf_chk@plt+0x13693>
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     153e6 <__sprintf_chk@plt+0x136f6>
movzbl %ah,%eax
mov    %eax,0x3c(%esp)
negl   0x3c(%esp)
cmpl   $0xffffffef,0x3c(%esp)
sete   %al
mov    %eax,%esi
mov    0x30(%esp),%eax
cmp    %eax,0x90(%esp)
mov    %esi,%eax
sete   0x34(%esp)
and    %al,0x34(%esp)
jmp    1511e <__sprintf_chk@plt+0x1342e>
mov    0x2c(%esp),%eax
movl   $0x3b7,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0xad78(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x9db4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x60bd(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    1529a <__sprintf_chk@plt+0x135aa>
lea    -0xad78(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0xab6c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x60bd(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %esi,0x1c(%esp)
movl   $0x3bf,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    152f3 <__sprintf_chk@plt+0x13603>
mov    $0x10000,%eax
jmp    14ee3 <__sprintf_chk@plt+0x131f3>
mov    $0xfffffffe,%eax
jmp    14ee3 <__sprintf_chk@plt+0x131f3>
xor    %esi,%esi
jmp    1511e <__sprintf_chk@plt+0x1342e>
xor    %esi,%esi
movl   $0xfffffff4,0x3c(%esp)
jmp    14e9a <__sprintf_chk@plt+0x131aa>
lea    -0x60b2(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0xb76e(%ebx),%eax
movl   $0x3d5,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
lea    -0x605f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x6324(%ebx),%eax
movl   $0x479,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x104c,%esp
mov    0x1060(%esp),%edi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x11b9a,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x103c(%esp)
xor    %eax,%eax
movl   $0xfffffffe,0x30(%esp)
test   %edi,%edi
je     15752 <__sprintf_chk@plt+0x13a62>
mov    0x8(%edi),%eax
lea    0x3c(%esp),%esi
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x6628(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   1730 <__snprintf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   1770 <open64@plt>
test   %eax,%eax
mov    %eax,%ebp
js     15558 <__sprintf_chk@plt+0x13868>
lea    -0x6619(%ebx),%eax
movl   $0x80000,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   1a50 <openat64@plt>
test   %eax,%eax
mov    %eax,%edx
js     15568 <__sprintf_chk@plt+0x13878>
lea    0x30(%esp),%eax
mov    %edx,(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x20(%esp)
call   c2c0 <__sprintf_chk@plt+0xa5d0>
mov    0x20(%esp),%edx
test   %eax,%eax
js     15658 <__sprintf_chk@plt+0x13968>
mov    %edx,(%esp)
call   1c90 <close@plt>
mov    %ebp,(%esp)
call   1c90 <close@plt>
mov    0x30(%esp),%esi
mov    0x103c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %esi,%eax
jne    157c6 <__sprintf_chk@plt+0x13ad6>
add    $0x104c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
jmp    15536 <__sprintf_chk@plt+0x13846>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x72a2(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x66bf(%ebx),%eax
mov    %eax,(%esp)
call   18e0 <fopen64@plt>
lea    -0x9ceb(%ebx),%ecx
movl   $0x0,0x28(%esp)
mov    %ecx,0x24(%esp)
test   %eax,%eax
mov    %eax,0x20(%esp)
je     1575c <__sprintf_chk@plt+0x13a6c>
mov    %ebp,0x2c(%esp)
mov    0x20(%esp),%eax
movl   $0x1000,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   1830 <fgets@plt>
test   %eax,%eax
je     15710 <__sprintf_chk@plt+0x13a20>
mov    0x24(%esp),%eax
lea    0x34(%esp),%ebp
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
addl   $0x1,0x28(%esp)
test   %eax,%eax
je     155a2 <__sprintf_chk@plt+0x138b2>
mov    0x8(%edi),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    155a2 <__sprintf_chk@plt+0x138b2>
mov    %ebp,%eax
mov    0x2c(%esp),%ebp
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   1860 <__strtok_r@plt>
test   %eax,%eax
mov    %eax,%esi
je     15719 <__sprintf_chk@plt+0x13a29>
lea    0x38(%esp),%eax
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1c70 <strtol@plt>
mov    0x38(%esp),%edx
cmp    %edx,%esi
je     156b8 <__sprintf_chk@plt+0x139c8>
cmpb   $0x0,(%edx)
jne    156b8 <__sprintf_chk@plt+0x139c8>
mov    %eax,0x30(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1840 <fclose@plt>
jmp    1552a <__sprintf_chk@plt+0x1383a>
mov    (%edi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x20(%esp),%edx
cmp    $0x2,%eax
jle    15522 <__sprintf_chk@plt+0x13832>
lea    -0x62d0(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6148(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %esi,0x18(%esp)
movl   $0x6ef,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x20(%esp),%edx
jmp    15522 <__sprintf_chk@plt+0x13832>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    15647 <__sprintf_chk@plt+0x13957>
mov    0x28(%esp),%eax
movl   $0x70f,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x62ac(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6148(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    15647 <__sprintf_chk@plt+0x13957>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebp
jmp    15647 <__sprintf_chk@plt+0x13957>
mov    (%edi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    15647 <__sprintf_chk@plt+0x13957>
mov    0x28(%esp),%eax
movl   $0x708,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x62ac(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6148(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    156eb <__sprintf_chk@plt+0x139fb>
mov    $0xfffffffe,%esi
jmp    15536 <__sprintf_chk@plt+0x13846>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebp
mov    (%edi),%eax
neg    %esi
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    15536 <__sprintf_chk@plt+0x13846>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
movl   $0x6f9,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x18(%esp)
lea    -0x6374(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6148(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    15536 <__sprintf_chk@plt+0x13846>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x104c,%esp
mov    0x1060(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1181a,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x103c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     15996 <__sprintf_chk@plt+0x13ca6>
mov    0x8(%esi),%eax
lea    0x3c(%esp),%edi
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x6610(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   1730 <__snprintf_chk@plt>
movl   $0x80000,0x4(%esp)
mov    %edi,(%esp)
call   1770 <open64@plt>
test   %eax,%eax
mov    %eax,%edx
js     158a8 <__sprintf_chk@plt+0x13bb8>
lea    0x38(%esp),%eax
mov    %edx,(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x2c(%esp)
call   c2c0 <__sprintf_chk@plt+0xa5d0>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
call   1c90 <close@plt>
test   %ebp,%ebp
mov    0x38(%esp),%edx
js     15928 <__sprintf_chk@plt+0x13c38>
mov    0x103c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edx,%eax
jne    159a0 <__sprintf_chk@plt+0x13cb0>
add    $0x104c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   1ad0 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
neg    %ebp
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %ebp,%edx
mov    0x2c(%esp),%ecx
cmp    $0x6,%eax
jle    15884 <__sprintf_chk@plt+0x13b94>
mov    (%ecx),%eax
mov    %ebp,0x2c(%esp)
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %edi,0x18(%esp)
movl   $0x734,0xc(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x6686(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x615f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x2c(%esp),%edx
jmp    15884 <__sprintf_chk@plt+0x13b94>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    %ebp,%edx
cmp    $0x2,%eax
jle    15884 <__sprintf_chk@plt+0x13b94>
mov    %ebp,%eax
neg    %eax
mov    %eax,(%esp)
mov    %ebp,0x2c(%esp)
call   19a0 <strerror@plt>
mov    %edi,0x18(%esp)
movl   $0x73c,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x6280(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x615f(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
mov    0x2c(%esp),%edx
jmp    15884 <__sprintf_chk@plt+0x13b94>
mov    $0xfffffffe,%edx
jmp    15884 <__sprintf_chk@plt+0x13b94>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x115c,%esp
mov    0x1170(%esp),%ebp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1163a,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x114c(%esp)
xor    %eax,%eax
test   %ebp,%ebp
je     15c68 <__sprintf_chk@plt+0x13f78>
mov    0x0(%ebp),%edx
test   %edx,%edx
je     15c68 <__sprintf_chk@plt+0x13f78>
mov    0x8(%ebp),%eax
lea    0x14c(%esp),%esi
movl   $0x1000,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1000,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x65fa(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   1730 <__snprintf_chk@plt>
mov    %esi,(%esp)
call   1cb0 <opendir@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     15c01 <__sprintf_chk@plt+0x13f11>
lea    0x30(%esp),%eax
xor    %esi,%esi
mov    %eax,0x28(%esp)
lea    0x38(%esp),%eax
mov    %eax,0x24(%esp)
lea    0x34(%esp),%eax
mov    %eax,0x2c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1a10 <readdir64_r@plt>
test   %eax,%eax
jne    15ae0 <__sprintf_chk@plt+0x13df0>
mov    0x30(%esp),%eax
test   %eax,%eax
je     15b28 <__sprintf_chk@plt+0x13e38>
cmpb   $0x2e,0x4b(%esp)
jne    15a9a <__sprintf_chk@plt+0x13daa>
cmpb   $0x0,0x4c(%esp)
je     15a58 <__sprintf_chk@plt+0x13d68>
cmpw   $0x2e,0x4c(%esp)
je     15a58 <__sprintf_chk@plt+0x13d68>
mov    0x2c(%esp),%eax
lea    0x4b(%esp),%edi
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   12530 <__sprintf_chk@plt+0x10840>
test   %eax,%eax
js     15b90 <__sprintf_chk@plt+0x13ea0>
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     15be0 <__sprintf_chk@plt+0x13ef0>
mov    %eax,%esi
jmp    15a58 <__sprintf_chk@plt+0x13d68>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     15b38 <__sprintf_chk@plt+0x13e48>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1ca0 <closedir@plt>
mov    %esi,(%esp)
call   12a30 <__sprintf_chk@plt+0x10d40>
xor    %eax,%eax
mov    0x114c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    15cad <__sprintf_chk@plt+0x13fbd>
add    $0x115c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1ca0 <closedir@plt>
mov    %esi,%eax
jmp    15b08 <__sprintf_chk@plt+0x13e18>
neg    %edi
mov    %edi,(%esp)
call   19a0 <strerror@plt>
mov    %eax,0x1c(%esp)
mov    0x8(%ebp),%eax
movl   $0x767,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x6258(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6177(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    15af2 <__sprintf_chk@plt+0x13e02>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x24(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
mov    0x24(%esp),%edx
cmp    $0x2,%eax
jle    15af2 <__sprintf_chk@plt+0x13e02>
neg    %edx
mov    %edx,(%esp)
call   19a0 <strerror@plt>
mov    %edi,0x18(%esp)
movl   $0x777,0xc(%esp)
mov    %eax,0x1c(%esp)
lea    -0x6230(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6177(%ebx),%eax
mov    %eax,0x10(%esp)
jmp    15b69 <__sprintf_chk@plt+0x13e79>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jg     15c6f <__sprintf_chk@plt+0x13f7f>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   12ec0 <__sprintf_chk@plt+0x111d0>
jmp    15af2 <__sprintf_chk@plt+0x13e02>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c9b0 <__sprintf_chk@plt+0xacc0>
cmp    $0x2,%eax
jle    15c68 <__sprintf_chk@plt+0x13f78>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   19a0 <strerror@plt>
mov    %esi,0x18(%esp)
movl   $0x75a,0xc(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    -0x6686(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6177(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    15b08 <__sprintf_chk@plt+0x13e18>
lea    -0x9bcc(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x6177(%ebx),%eax
mov    %eax,0x10(%esp)
lea    -0x689b(%ebx),%eax
movl   $0x77f,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   c940 <__sprintf_chk@plt+0xac50>
jmp    15bf0 <__sprintf_chk@plt+0x13f00>
call   1b330 <__sprintf_chk@plt+0x19640>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
test   %eax,%eax
je     15cd0 <__sprintf_chk@plt+0x13fe0>
mov    0x8(%eax),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     15cf0 <__sprintf_chk@plt+0x14000>
mov    0x8(%eax),%eax
add    $0x4,%eax
ret
nop
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x112f2,%ebx
test   %esi,%esi
je     15d31 <__sprintf_chk@plt+0x14041>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%esi
jne    15d18 <__sprintf_chk@plt+0x14028>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ecx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x112b0,%ebx
test   %ecx,%ecx
je     15fb0 <__sprintf_chk@plt+0x142c0>
mov    0x64(%esp),%edx
test   %edx,%edx
je     15fb0 <__sprintf_chk@plt+0x142c0>
mov    0x64(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    15fb7 <__sprintf_chk@plt+0x142c7>
mov    0x60(%esp),%eax
call   137d0 <__sprintf_chk@plt+0x11ae0>
test   %eax,%eax
je     15f50 <__sprintf_chk@plt+0x14260>
lea    0x20(%esp),%edx
mov    %edx,0x8(%esp)
lea    -0x65af(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   17be0 <__sprintf_chk@plt+0x15ef0>
test   %eax,%eax
mov    %eax,0x1c(%esp)
js     15f68 <__sprintf_chk@plt+0x14278>
mov    $0x0,%edi
jne    15df6 <__sprintf_chk@plt+0x14106>
jmp    15e28 <__sprintf_chk@plt+0x14138>
lea    0x1(%eax),%edx
mov    %eax,%ebp
mov    %edx,(%esp)
sub    %esi,%ebp
mov    %edx,0x18(%esp)
call   1a30 <strlen@plt>
mov    0x18(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x4(%esp)
mov    %esi,%edx
mov    %ebp,(%esp)
call   12280 <__sprintf_chk@plt+0x10590>
test   %eax,%eax
je     15f18 <__sprintf_chk@plt+0x14228>
add    $0x1,%edi
cmp    0x1c(%esp),%edi
je     15e28 <__sprintf_chk@plt+0x14138>
mov    0x20(%esp),%eax
mov    (%eax,%edi,4),%esi
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   1a20 <strchr@plt>
test   %eax,%eax
jne    15db8 <__sprintf_chk@plt+0x140c8>
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    %esi,%edx
mov    %eax,%ebp
xor    %eax,%eax
jmp    15dcf <__sprintf_chk@plt+0x140df>
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    0x24(%eax),%eax
mov    %eax,(%esp)
call   1aec0 <__sprintf_chk@plt+0x191d0>
test   %al,%al
je     15f38 <__sprintf_chk@plt+0x14248>
mov    0x28(%esp),%eax
lea    -0x65a6(%ebx),%edx
movl   $0x6,(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
call   12280 <__sprintf_chk@plt+0x10590>
test   %eax,%eax
je     15f18 <__sprintf_chk@plt+0x14228>
mov    0x30(%esp),%esi
lea    (%esi,%esi,2),%edi
mov    %edi,(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     15f18 <__sprintf_chk@plt+0x14228>
test   %esi,%esi
jle    15ee4 <__sprintf_chk@plt+0x141f4>
mov    %eax,%edi
xor    %esi,%esi
lea    -0x659f(%ebx),%eax
mov    %eax,%ebp
mov    0x2c(%esp),%eax
movzbl (%eax,%esi,1),%eax
mov    %ebp,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   1cf0 <__sprintf_chk@plt>
mov    0x30(%esp),%eax
lea    -0x1(%eax),%edx
cmp    %esi,%edx
jle    15ed7 <__sprintf_chk@plt+0x141e7>
movb   $0x3a,0x2(%edi)
add    $0x1,%esi
add    $0x3,%edi
cmp    %esi,%eax
jg     15ea0 <__sprintf_chk@plt+0x141b0>
lea    (%eax,%eax,2),%edi
sub    $0x1,%edi
mov    0x64(%esp),%eax
mov    %edi,0x8(%esp)
mov    0x18(%esp),%edi
lea    -0x659a(%ebx),%edx
movl   $0x7,(%esp)
mov    %edi,0x4(%esp)
call   12280 <__sprintf_chk@plt+0x10590>
mov    %edi,(%esp)
mov    %eax,%esi
call   1800 <free@plt>
test   %esi,%esi
jne    15f74 <__sprintf_chk@plt+0x14284>
nop
mov    0x64(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   15d00 <__sprintf_chk@plt+0x14010>
mov    0x64(%esp),%eax
movl   $0xfffffff4,0x1c(%esp)
movl   $0x0,(%eax)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x1c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x38(%esp),%esi
mov    %esi,(%esp)
call   1a30 <strlen@plt>
lea    -0x6592(%ebx),%edx
mov    %esi,0x4(%esp)
movl   $0xc,(%esp)
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
call   12280 <__sprintf_chk@plt+0x10590>
test   %eax,%eax
je     15f18 <__sprintf_chk@plt+0x14228>
addl   $0x3,0x1c(%esp)
jmp    15f38 <__sprintf_chk@plt+0x14248>
lea    0x0(%esi),%esi
mov    $0xfffffffe,%eax
jmp    15f48 <__sprintf_chk@plt+0x14258>
lea    -0x618c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x7113(%ebx),%eax
movl   $0x890,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     16000 <__sprintf_chk@plt+0x14310>
mov    0x8(%eax),%eax
add    $0x8,%eax
ret
nop
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     16028 <__sprintf_chk@plt+0x14338>
mov    0x8(%eax),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
ret
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x10fc2,%ebx
test   %esi,%esi
je     16061 <__sprintf_chk@plt+0x14371>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%esi
jne    16048 <__sprintf_chk@plt+0x14358>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x10f80,%ebx
test   %eax,%eax
je     16208 <__sprintf_chk@plt+0x14518>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
je     16208 <__sprintf_chk@plt+0x14518>
mov    0x64(%esp),%esi
mov    (%esi),%edx
test   %edx,%edx
jne    1620f <__sprintf_chk@plt+0x1451f>
call   137d0 <__sprintf_chk@plt+0x11ae0>
test   %eax,%eax
je     161b0 <__sprintf_chk@plt+0x144c0>
lea    0x3c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   17e30 <__sprintf_chk@plt+0x16140>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     161f8 <__sprintf_chk@plt+0x14508>
je     16193 <__sprintf_chk@plt+0x144a3>
xor    %esi,%esi
mov    0x64(%esp),%ebp
jmp    1612b <__sprintf_chk@plt+0x1443b>
nop
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    0x28(%esp),%ecx
mov    %edx,0x4(%edi)
mov    0x24(%esp),%edx
mov    %eax,(%edi)
lea    0x8(%edi),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   1810 <memcpy@plt>
mov    %edi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     161c8 <__sprintf_chk@plt+0x144d8>
add    $0x1,%esi
cmp    0x2c(%esp),%esi
mov    %eax,0x0(%ebp)
je     16193 <__sprintf_chk@plt+0x144a3>
mov    %esi,%eax
shl    $0x4,%eax
add    0x3c(%esp),%eax
mov    0xc(%eax),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,0x18(%esp)
call   1a30 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x9,%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
jne    160e0 <__sprintf_chk@plt+0x143f0>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x64(%esp),%eax
negl   0x2c(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   16030 <__sprintf_chk@plt+0x14340>
mov    0x64(%esp),%eax
movl   $0x0,(%eax)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x2c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   1800 <free@plt>
mov    0x64(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   16030 <__sprintf_chk@plt+0x14340>
mov    0x64(%esp),%eax
movl   $0xfffffff4,0x2c(%esp)
movl   $0x0,(%eax)
jmp    16193 <__sprintf_chk@plt+0x144a3>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffffe,%eax
jmp    161a3 <__sprintf_chk@plt+0x144b3>
lea    -0x61a5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x7113(%ebx),%eax
movl   $0x947,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     16250 <__sprintf_chk@plt+0x14560>
mov    0x8(%eax),%eax
add    $0x8,%eax
ret
nop
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     16278 <__sprintf_chk@plt+0x14588>
mov    0x8(%eax),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
ret
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x10d72,%ebx
test   %esi,%esi
je     162b1 <__sprintf_chk@plt+0x145c1>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%esi
jne    16298 <__sprintf_chk@plt+0x145a8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x10d30,%ebx
test   %eax,%eax
je     16458 <__sprintf_chk@plt+0x14768>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
je     16458 <__sprintf_chk@plt+0x14768>
mov    0x64(%esp),%esi
mov    (%esi),%edx
test   %edx,%edx
jne    1645f <__sprintf_chk@plt+0x1476f>
call   137d0 <__sprintf_chk@plt+0x11ae0>
test   %eax,%eax
je     16400 <__sprintf_chk@plt+0x14710>
lea    0x3c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   18e40 <__sprintf_chk@plt+0x17150>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     16448 <__sprintf_chk@plt+0x14758>
je     163e3 <__sprintf_chk@plt+0x146f3>
xor    %esi,%esi
mov    0x64(%esp),%ebp
jmp    1637b <__sprintf_chk@plt+0x1468b>
nop
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    0x28(%esp),%ecx
mov    %edx,0x4(%edi)
mov    0x24(%esp),%edx
mov    %eax,(%edi)
lea    0x8(%edi),%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   1810 <memcpy@plt>
mov    %edi,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     16418 <__sprintf_chk@plt+0x14728>
add    $0x1,%esi
cmp    0x2c(%esp),%esi
mov    %eax,0x0(%ebp)
je     163e3 <__sprintf_chk@plt+0x146f3>
mov    %esi,%eax
shl    $0x4,%eax
add    0x3c(%esp),%eax
mov    0xc(%eax),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,0x18(%esp)
call   1a30 <strlen@plt>
lea    0x1(%eax),%edx
add    $0x9,%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
jne    16330 <__sprintf_chk@plt+0x14640>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x64(%esp),%eax
negl   0x2c(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   16280 <__sprintf_chk@plt+0x14590>
mov    0x64(%esp),%eax
movl   $0x0,(%eax)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x2c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   1800 <free@plt>
mov    0x64(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   16280 <__sprintf_chk@plt+0x14590>
mov    0x64(%esp),%eax
movl   $0xfffffff4,0x2c(%esp)
movl   $0x0,(%eax)
jmp    163e3 <__sprintf_chk@plt+0x146f3>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffffe,%eax
jmp    163f3 <__sprintf_chk@plt+0x14703>
lea    -0x61bd(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x7113(%ebx),%eax
movl   $0x9d4,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     164a0 <__sprintf_chk@plt+0x147b0>
mov    0x8(%eax),%eax
add    $0x9,%eax
ret
nop
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     164c8 <__sprintf_chk@plt+0x147d8>
mov    0x8(%eax),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
ret
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
test   %eax,%eax
je     164e0 <__sprintf_chk@plt+0x147f0>
mov    0x8(%eax),%eax
movzbl 0x8(%eax),%eax
ret
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x10b02,%ebx
test   %esi,%esi
je     16521 <__sprintf_chk@plt+0x14831>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   e2e0 <__sprintf_chk@plt+0xc5f0>
test   %eax,%eax
mov    %eax,%esi
jne    16508 <__sprintf_chk@plt+0x14818>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x10ac0,%ebx
test   %eax,%eax
je     166d8 <__sprintf_chk@plt+0x149e8>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
je     166d8 <__sprintf_chk@plt+0x149e8>
mov    0x64(%esp),%esi
mov    (%esi),%edx
test   %edx,%edx
jne    166df <__sprintf_chk@plt+0x149ef>
call   137d0 <__sprintf_chk@plt+0x11ae0>
test   %eax,%eax
je     16680 <__sprintf_chk@plt+0x14990>
lea    0x3c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   19aa0 <__sprintf_chk@plt+0x17db0>
test   %eax,%eax
mov    %eax,0x2c(%esp)
js     166c8 <__sprintf_chk@plt+0x149d8>
je     16664 <__sprintf_chk@plt+0x14974>
xor    %esi,%esi
jmp    165f6 <__sprintf_chk@plt+0x14906>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    0x28(%esp),%ecx
mov    %edx,0x4(%edi)
mov    0x24(%esp),%edx
mov    %eax,(%edi)
mov    %ebp,%eax
mov    %al,0x8(%edi)
lea    0x9(%edi),%eax
mov    %ecx,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
mov    0x64(%esp),%eax
mov    %edi,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   e180 <__sprintf_chk@plt+0xc490>
test   %eax,%eax
je     16698 <__sprintf_chk@plt+0x149a8>
mov    0x64(%esp),%ecx
add    $0x1,%esi
cmp    0x2c(%esp),%esi
mov    %eax,(%ecx)
je     16664 <__sprintf_chk@plt+0x14974>
mov    %esi,%eax
shl    $0x4,%eax
add    0x3c(%esp),%eax
mov    0xc(%eax),%ecx
mov    (%eax),%edi
mov    0x4(%eax),%ebp
movzbl 0x8(%eax),%edx
mov    %ecx,(%esp)
mov    %edi,0x18(%esp)
mov    %ebp,0x1c(%esp)
mov    %ecx,0x28(%esp)
mov    %edx,%ebp
call   1a30 <strlen@plt>
lea    0x1(%eax),%edx
add    $0xd,%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   1970 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
jne    165a0 <__sprintf_chk@plt+0x148b0>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x64(%esp),%eax
negl   0x2c(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   164f0 <__sprintf_chk@plt+0x14800>
mov    0x64(%esp),%eax
movl   $0x0,(%eax)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x2c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   1800 <free@plt>
mov    0x64(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   164f0 <__sprintf_chk@plt+0x14800>
mov    0x64(%esp),%eax
movl   $0xfffffff4,0x2c(%esp)
movl   $0x0,(%eax)
jmp    16664 <__sprintf_chk@plt+0x14974>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffffe,%eax
jmp    16674 <__sprintf_chk@plt+0x14984>
lea    -0x61e0(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x689b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x7113(%ebx),%eax
movl   $0xa64,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x108e3,%ebx
mov    0x8(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   1b60 <munmap@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x84,%esp
mov    0x90(%esp),%esi
lea    0x20(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x108a8,%ebx
mov    %eax,0x8(%esp)
mov    (%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   1910 <__fxstat64@plt>
test   %eax,%eax
js     167d8 <__sprintf_chk@plt+0x14ae8>
mov    0x4c(%esp),%eax
mov    0x50(%esp),%edx
mov    %eax,0x8(%esi)
mov    %edx,0xc(%esi)
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
mov    (%esi),%edx
movl   $0x2,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,(%esp)
call   1b10 <mmap64@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x10(%esi)
je     167d8 <__sprintf_chk@plt+0x14ae8>
movb   $0x1,0x4(%esi)
add    $0x84,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
add    $0x84,%esp
pop    %ebx
pop    %esi
neg    %eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x10802,%ebx
mov    0x1c(%esi),%eax
test   %eax,%eax
je     16818 <__sprintf_chk@plt+0x14b28>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
mov    0xc(%esi),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   16a10 <__sprintf_chk@plt+0x14d20>
mov    %eax,0x1c(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x107b8,%ebx
sub    $0x10,%esp
movl   $0x20,0x4(%esp)
movl   $0x1,(%esp)
call   1ce0 <calloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     168d0 <__sprintf_chk@plt+0x14be0>
mov    0x24(%esp),%eax
movl   $0x80000,0x4(%esp)
mov    %eax,(%esp)
call   1770 <open64@plt>
test   %eax,%eax
mov    %eax,(%esi)
js     168b0 <__sprintf_chk@plt+0x14bc0>
mov    0x14(%esi),%eax
movb   $0x0,0x4(%esi)
test   %eax,%eax
je     168c0 <__sprintf_chk@plt+0x14bd0>
mov    %esi,(%esp)
call   *(%eax)
mov    %eax,%edi
mov    0x20(%esp),%eax
mov    %eax,0x18(%esi)
test   %edi,%edi
mov    %esi,%eax
js     168d8 <__sprintf_chk@plt+0x14be8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1ad0 <__errno_location@plt>
mov    (%eax),%edi
neg    %edi
jmp    1689e <__sprintf_chk@plt+0x14bae>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x180(%ebx),%eax
mov    %eax,0x14(%esi)
jmp    16890 <__sprintf_chk@plt+0x14ba0>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    168a4 <__sprintf_chk@plt+0x14bb4>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
test   %eax,%eax
js     168e6 <__sprintf_chk@plt+0x14bf6>
mov    %eax,(%esp)
call   1c90 <close@plt>
mov    %esi,(%esp)
neg    %edi
call   1800 <free@plt>
call   1ad0 <__errno_location@plt>
mov    %edi,(%eax)
xor    %eax,%eax
jmp    168a4 <__sprintf_chk@plt+0x14bb4>
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
movzbl 0x4(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x106b2,%ebx
mov    0x1c(%esi),%eax
test   %eax,%eax
je     16963 <__sprintf_chk@plt+0x14c73>
mov    %eax,(%esp)
call   17500 <__sprintf_chk@plt+0x15810>
mov    0x14(%esi),%eax
mov    %esi,(%esp)
call   *0x4(%eax)
mov    (%esi),%eax
test   %eax,%eax
js     1697a <__sprintf_chk@plt+0x14c8a>
mov    %eax,(%esp)
call   1c90 <close@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x1066a,%ebx
sub    $0x18,%esp
movl   $0xcf,0x8(%esp)
lea    -0x5e56(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5f25(%ebx),%eax
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
sub    $0x4,%esp
mov    0x24(%eax),%esi
mov    0x28(%eax),%edi
mov    %esi,(%edx)
mov    %edi,0x4(%edx)
mov    0xc(%eax),%ecx
cmp    %ecx,0x30(%eax)
mov    0x2c(%eax),%edx
jb     16a02 <__sprintf_chk@plt+0x14d12>
jbe    169f8 <__sprintf_chk@plt+0x14d08>
call   16990 <__sprintf_chk@plt+0x14ca0>
lea    0x0(%esi),%esi
cmp    0x8(%eax),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
jae    169ed <__sprintf_chk@plt+0x14cfd>
add    (%eax),%edx
add    $0x4,%esp
pop    %esi
pop    %edi
mov    %edx,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%edi
mov    0x74(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0x105dc,%ebx
mov    0x70(%esp),%esi
cmp    $0x0,%edi
mov    %eax,0x18(%esp)
ja     16a40 <__sprintf_chk@plt+0x14d50>
cmp    $0x10,%eax
jbe    16c38 <__sprintf_chk@plt+0x14f48>
lea    -0x5ef0(%ebx),%eax
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1850 <memcmp@plt>
test   %eax,%eax
jne    16c38 <__sprintf_chk@plt+0x14f48>
movzbl 0x4(%esi),%eax
cmp    $0x1,%al
je     16bf8 <__sprintf_chk@plt+0x14f08>
cmp    $0x2,%al
je     16a88 <__sprintf_chk@plt+0x14d98>
mov    $0x16,%esi
call   1ad0 <__errno_location@plt>
mov    %esi,(%eax)
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x0,%edi
jbe    16c18 <__sprintf_chk@plt+0x14f28>
movzbl 0x5(%esi),%eax
mov    $0x4,%ebp
cmp    $0x1,%al
je     16c0e <__sprintf_chk@plt+0x14f1e>
cmp    $0x2,%al
jne    16a72 <__sprintf_chk@plt+0x14d82>
mov    %ebp,%edx
or     $0x10,%edx
movl   $0x3c,(%esp)
mov    %edx,0x10(%esp)
call   1970 <malloc@plt>
mov    0x10(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
je     16a7e <__sprintf_chk@plt+0x14d8e>
mov    0x18(%esp),%eax
test   $0x2,%dl
mov    %esi,0x0(%ebp)
movl   $0x0,0x4(%ebp)
mov    %edi,0xc(%ebp)
mov    %eax,0x8(%ebp)
mov    %edx,0x10(%ebp)
je     16c78 <__sprintf_chk@plt+0x14f88>
cmp    $0x0,%edi
jbe    17078 <__sprintf_chk@plt+0x15388>
and    $0x10,%edx
je     171f8 <__sprintf_chk@plt+0x15508>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x10(%esp)
xor    %ecx,%ecx
mov    %edx,%ebp
mov    %edi,0x1c(%esp)
mov    %eax,%edi
mov    %esi,0x70(%esp)
lea    0x0(%esi),%esi
mov    0x70(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl 0x20(%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    16b10 <__sprintf_chk@plt+0x14e20>
mov    0x1c(%esp),%edi
mov    %esi,%eax
mov    0x10(%esp),%ebp
mov    0x70(%esp),%esi
cmp    $0x0,%edi
mov    %eax,0x14(%ebp)
mov    %edx,0x18(%ebp)
jbe    17468 <__sprintf_chk@plt+0x15778>
movzbl 0x30(%esi),%eax
movzbl 0x31(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x1c(%ebp)
movzbl 0x2e(%esi),%eax
movzbl 0x2f(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
cmp    $0x0,%edi
movzwl %ax,%ecx
mov    %ax,0x1e(%ebp)
jbe    17458 <__sprintf_chk@plt+0x15768>
movzbl 0x32(%esi),%eax
movzbl 0x33(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x20(%ebp)
movzbl 0x12(%esi),%eax
movzbl 0x13(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x38(%ebp)
mov    $0x34,%edx
mov    $0x28,%eax
cmp    %eax,%ecx
jne    16bd8 <__sprintf_chk@plt+0x14ee8>
mov    0x8(%ebp),%edi
movzwl 0x1c(%ebp),%esi
mov    %edi,0x1c(%esp)
mov    0xc(%ebp),%edi
mov    %edi,0x18(%esp)
movzwl %si,%edi
imul   %eax,%edi
add    %edx,%edi
xor    %edx,%edx
cmp    0x18(%esp),%edx
ja     16bd8 <__sprintf_chk@plt+0x14ee8>
jb     16c48 <__sprintf_chk@plt+0x14f58>
cmp    0x1c(%esp),%edi
jb     16c48 <__sprintf_chk@plt+0x14f58>
nop
mov    %ebp,(%esp)
call   1800 <free@plt>
call   1ad0 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x0,%edi
jbe    16c28 <__sprintf_chk@plt+0x14f38>
movzbl 0x5(%esi),%eax
mov    $0x2,%ebp
cmp    $0x1,%al
jne    16aa2 <__sprintf_chk@plt+0x14db2>
mov    %ebp,%edx
or     $0x8,%edx
jmp    16aab <__sprintf_chk@plt+0x14dbb>
cmpl   $0x40,0x18(%esp)
jbe    16a72 <__sprintf_chk@plt+0x14d82>
jmp    16a91 <__sprintf_chk@plt+0x14da1>
cmpl   $0x34,0x18(%esp)
jbe    16a72 <__sprintf_chk@plt+0x14d82>
jmp    16bfd <__sprintf_chk@plt+0x14f0d>
lea    0x0(%esi),%esi
mov    $0x8,%esi
jmp    16a77 <__sprintf_chk@plt+0x14d87>
lea    0x0(%esi),%esi
movzwl 0x20(%ebp),%eax
test   %ax,%ax
je     174fa <__sprintf_chk@plt+0x1580a>
cmp    %ax,%si
jbe    174d0 <__sprintf_chk@plt+0x157e0>
imul   %ecx,%eax
cltd
add    0x14(%ebp),%eax
adc    0x18(%ebp),%edx
cmp    %edx,0x18(%esp)
jae    16cc0 <__sprintf_chk@plt+0x14fd0>
call   16990 <__sprintf_chk@plt+0x14ca0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x0,%edi
ja     17088 <__sprintf_chk@plt+0x15398>
cmpl   $0x2f,0x18(%esp)
ja     17088 <__sprintf_chk@plt+0x15398>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5e63(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5eeb(%ebx),%eax
movl   $0x8e,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
lea    0x0(%esi),%esi
ja     16cc8 <__sprintf_chk@plt+0x14fd8>
cmp    %eax,0x1c(%esp)
jbe    16c6e <__sprintf_chk@plt+0x14f7e>
mov    0x0(%ebp),%ecx
add    %ecx,%eax
mov    %eax,%edx
sub    %ecx,%edx
mov    %ecx,0x30(%esp)
mov    %edx,%ecx
sar    $0x1f,%ecx
test   %eax,%eax
mov    %edx,0x34(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
je     174a8 <__sprintf_chk@plt+0x157b8>
mov    0x10(%ebp),%ecx
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
test   $0x2,%cl
je     16ee8 <__sprintf_chk@plt+0x151f8>
add    $0x18,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
ja     16d1a <__sprintf_chk@plt+0x1502a>
cmp    %eax,0x1c(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x30(%esp),%esi
add    $0x14,%eax
adc    $0x0,%edx
add    %eax,%esi
and    $0x10,%ecx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
mov    %ecx,0x38(%esp)
je     17368 <__sprintf_chk@plt+0x15678>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x3c(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x20(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    16d58 <__sprintf_chk@plt+0x15068>
mov    %ebp,%edx
mov    0x3c(%esp),%ebp
mov    %edi,0x20(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x24(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x24(%ebp)
mov    0x2c(%esp),%eax
cmp    %eax,0x18(%esp)
mov    %edx,0x28(%ebp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
ja     16db3 <__sprintf_chk@plt+0x150c3>
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
mov    0x10(%esp),%esi
mov    0x38(%esp),%edi
add    $0x10,%esi
add    0x30(%esp),%esi
test   %edi,%edi
je     173e8 <__sprintf_chk@plt+0x156f8>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x3c(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x28(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    16de0 <__sprintf_chk@plt+0x150f0>
mov    %ebp,%edx
mov    0x3c(%esp),%ebp
mov    %edi,0x28(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x2c(%ebp)
mov    0x10(%esp),%eax
mov    %edx,0x30(%ebp)
mov    0x14(%esp),%edx
add    $0x4,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
ja     16e41 <__sprintf_chk@plt+0x15151>
cmp    %eax,0x1c(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
mov    0x38(%esp),%edi
mov    0x30(%esp),%esi
add    0x34(%esp),%esi
test   %edi,%edi
je     173a8 <__sprintf_chk@plt+0x156b8>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x30(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x10(%esp)
nop
mov    0x10(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    16e68 <__sprintf_chk@plt+0x15178>
mov    0x30(%esp),%ebp
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
add    0x20(%esp),%eax
adc    0x24(%esp),%edx
cmp    %edx,0x18(%esp)
mov    %edi,0x34(%ebp)
jb     16bd8 <__sprintf_chk@plt+0x14ee8>
ja     16eb6 <__sprintf_chk@plt+0x151c6>
cmp    %eax,0x1c(%esp)
jb     16bd8 <__sprintf_chk@plt+0x14ee8>
lea    0x48(%esp),%edx
mov    %ebp,%eax
call   169d0 <__sprintf_chk@plt+0x14ce0>
mov    0x48(%esp),%edx
mov    %edx,%ecx
or     0x4c(%esp),%ecx
je     16bd8 <__sprintf_chk@plt+0x14ee8>
cmpb   $0x0,-0x1(%eax,%edx,1)
jne    16bd8 <__sprintf_chk@plt+0x14ee8>
add    $0x5c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x28,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
ja     16f04 <__sprintf_chk@plt+0x15214>
cmp    %eax,0x1c(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x30(%esp),%esi
add    $0x20,%eax
adc    $0x0,%edx
add    %eax,%esi
and    $0x10,%ecx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
mov    %ecx,0x38(%esp)
je     17328 <__sprintf_chk@plt+0x15638>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x3c(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x20(%esp)
nop
mov    0x20(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x8,%ecx
mov    %esi,%edi
jne    16f40 <__sprintf_chk@plt+0x15250>
mov    %ebp,%edx
mov    0x3c(%esp),%ebp
mov    %edi,0x20(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x24(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x24(%ebp)
mov    0x2c(%esp),%eax
cmp    %eax,0x18(%esp)
mov    %edx,0x28(%ebp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
ja     16f9b <__sprintf_chk@plt+0x152ab>
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
mov    0x10(%esp),%esi
mov    0x38(%esp),%eax
add    $0x18,%esi
add    0x30(%esp),%esi
test   %eax,%eax
je     172e8 <__sprintf_chk@plt+0x155f8>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x3c(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x28(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x8,%ecx
mov    %esi,%edi
jne    16fc8 <__sprintf_chk@plt+0x152d8>
mov    %ebp,%edx
mov    0x3c(%esp),%ebp
mov    %edi,0x28(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x2c(%ebp)
mov    0x10(%esp),%eax
mov    %edx,0x30(%ebp)
mov    0x14(%esp),%edx
add    $0x4,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
ja     17029 <__sprintf_chk@plt+0x15339>
cmp    %eax,0x1c(%esp)
jb     16c90 <__sprintf_chk@plt+0x14fa0>
mov    0x38(%esp),%eax
mov    0x30(%esp),%esi
add    0x34(%esp),%esi
test   %eax,%eax
je     172a8 <__sprintf_chk@plt+0x155b8>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x30(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x10(%esp)
nop
mov    0x10(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    17050 <__sprintf_chk@plt+0x15360>
jmp    16e89 <__sprintf_chk@plt+0x15199>
xchg   %ax,%ax
cmpl   $0x23,0x18(%esp)
ja     16aee <__sprintf_chk@plt+0x14dfe>
jmp    16c90 <__sprintf_chk@plt+0x14fa0>
and    $0x10,%edx
lea    0x28(%esi),%ecx
je     17148 <__sprintf_chk@plt+0x15458>
lea    0x30(%esi),%eax
xor    %edx,%edx
mov    %eax,0x10(%esp)
xor    %eax,%eax
mov    %ebp,0x1c(%esp)
mov    %esi,0x70(%esp)
mov    %edi,0x20(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
add    $0x1,%ecx
shld   $0x8,%eax,%edi
mov    %edi,%edx
or     %esi,%ebp
cmp    0x10(%esp),%ecx
mov    %ebp,%eax
jne    170b0 <__sprintf_chk@plt+0x153c0>
mov    0x20(%esp),%edi
mov    0x1c(%esp),%ebp
mov    0x70(%esp),%esi
cmp    $0x0,%edi
mov    %eax,0x14(%ebp)
mov    %edx,0x18(%ebp)
jbe    17498 <__sprintf_chk@plt+0x157a8>
movzbl 0x3c(%esi),%eax
movzbl 0x3d(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x1c(%ebp)
movzbl 0x3a(%esi),%eax
movzbl 0x3b(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
cmp    $0x0,%edi
movzwl %ax,%ecx
mov    %ax,0x1e(%ebp)
jbe    17448 <__sprintf_chk@plt+0x15758>
movzbl 0x3e(%esi),%eax
movzbl 0x3f(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x20(%ebp)
movzbl 0x12(%esi),%eax
movzbl 0x13(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x38(%ebp)
mov    $0x40,%edx
mov    $0x40,%eax
jmp    16ba9 <__sprintf_chk@plt+0x14eb9>
nop
lea    0x27(%esi),%eax
xor    %edx,%edx
mov    %eax,0x10(%esp)
lea    0x2f(%esi),%ecx
xor    %eax,%eax
mov    %ebp,0x1c(%esp)
mov    %esi,0x70(%esp)
mov    %edi,0x20(%esp)
lea    0x0(%esi),%esi
movzbl (%ecx),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
sub    $0x1,%ecx
shld   $0x8,%eax,%edi
mov    %edi,%edx
or     %esi,%ebp
cmp    0x10(%esp),%ecx
mov    %ebp,%eax
jne    17168 <__sprintf_chk@plt+0x15478>
mov    0x20(%esp),%edi
mov    0x1c(%esp),%ebp
mov    0x70(%esp),%esi
cmp    $0x0,%edi
mov    %eax,0x14(%ebp)
mov    %edx,0x18(%ebp)
jbe    17488 <__sprintf_chk@plt+0x15798>
movzbl 0x3d(%esi),%eax
movzbl 0x3c(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x1c(%ebp)
movzbl 0x3b(%esi),%eax
movzbl 0x3a(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
cmp    $0x0,%edi
movzwl %ax,%ecx
mov    %ax,0x1e(%ebp)
jbe    17438 <__sprintf_chk@plt+0x15748>
movzbl 0x3f(%esi),%eax
movzbl 0x3e(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x20(%ebp)
movzbl 0x13(%esi),%eax
movzbl 0x12(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
jmp    17134 <__sprintf_chk@plt+0x15444>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1f(%esi),%eax
xor    %edx,%edx
mov    %eax,0x10(%esp)
lea    0x23(%esi),%ecx
xor    %eax,%eax
mov    %ebp,0x1c(%esp)
mov    %esi,0x70(%esp)
mov    %edi,0x20(%esp)
lea    0x0(%esi),%esi
movzbl (%ecx),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
sub    $0x1,%ecx
shld   $0x8,%eax,%edi
mov    %edi,%edx
or     %esi,%ebp
cmp    0x10(%esp),%ecx
mov    %ebp,%eax
jne    17218 <__sprintf_chk@plt+0x15528>
mov    0x20(%esp),%edi
mov    0x1c(%esp),%ebp
mov    0x70(%esp),%esi
cmp    $0x0,%edi
mov    %eax,0x14(%ebp)
mov    %edx,0x18(%ebp)
jbe    17478 <__sprintf_chk@plt+0x15788>
movzbl 0x31(%esi),%eax
movzbl 0x30(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x1c(%ebp)
movzbl 0x2f(%esi),%eax
movzbl 0x2e(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
cmp    $0x0,%edi
movzwl %ax,%ecx
mov    %ax,0x1e(%ebp)
jbe    17428 <__sprintf_chk@plt+0x15738>
movzbl 0x33(%esi),%eax
movzbl 0x32(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
mov    %ax,0x20(%ebp)
movzbl 0x13(%esi),%eax
movzbl 0x12(%esi),%edx
shl    $0x8,%eax
or     %edx,%eax
jmp    16b9b <__sprintf_chk@plt+0x14eab>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x30(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x10(%esp)
lea    0x0(%esi),%esi
mov    0x10(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    172c0 <__sprintf_chk@plt+0x155d0>
jmp    16e89 <__sprintf_chk@plt+0x15199>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x3c(%esp)
mov    $0x8,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x28(%esp)
lea    0x0(%esi),%esi
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17300 <__sprintf_chk@plt+0x15610>
jmp    16fe9 <__sprintf_chk@plt+0x152f9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x3c(%esp)
mov    $0x8,%ecx
mov    %eax,%edi
mov    %esi,0x20(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x20(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17340 <__sprintf_chk@plt+0x15650>
jmp    16f61 <__sprintf_chk@plt+0x15271>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x3c(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x20(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x20(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17380 <__sprintf_chk@plt+0x15690>
jmp    16d79 <__sprintf_chk@plt+0x15089>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x30(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %edx,%ebp
mov    %esi,0x10(%esp)
lea    0x0(%esi),%esi
mov    0x10(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    173c0 <__sprintf_chk@plt+0x156d0>
jmp    16e89 <__sprintf_chk@plt+0x15199>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x3c(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17400 <__sprintf_chk@plt+0x15710>
jmp    16e01 <__sprintf_chk@plt+0x15111>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x33,0x18(%esp)
jbe    16c90 <__sprintf_chk@plt+0x14fa0>
jmp    1727e <__sprintf_chk@plt+0x1558e>
cmpl   $0x3f,0x18(%esp)
jbe    16c90 <__sprintf_chk@plt+0x14fa0>
jmp    171ce <__sprintf_chk@plt+0x154de>
cmpl   $0x3f,0x18(%esp)
jbe    16c90 <__sprintf_chk@plt+0x14fa0>
jmp    17116 <__sprintf_chk@plt+0x15426>
cmpl   $0x33,0x18(%esp)
jbe    16c90 <__sprintf_chk@plt+0x14fa0>
jmp    16b7d <__sprintf_chk@plt+0x14e8d>
cmpl   $0x31,0x18(%esp)
jbe    16c90 <__sprintf_chk@plt+0x14fa0>
jmp    16b4f <__sprintf_chk@plt+0x14e5f>
cmpl   $0x31,0x18(%esp)
jbe    16c90 <__sprintf_chk@plt+0x14fa0>
jmp    17250 <__sprintf_chk@plt+0x15560>
cmpl   $0x3d,0x18(%esp)
jbe    16c90 <__sprintf_chk@plt+0x14fa0>
jmp    171a0 <__sprintf_chk@plt+0x154b0>
cmpl   $0x3d,0x18(%esp)
jbe    16c90 <__sprintf_chk@plt+0x14fa0>
jmp    170e8 <__sprintf_chk@plt+0x153f8>
movl   $0x0,0x2c(%ebp)
movl   $0x0,0x30(%ebp)
movl   $0x0,0x24(%ebp)
movl   $0x0,0x28(%ebp)
movl   $0x0,0x34(%ebp)
jmp    16bd8 <__sprintf_chk@plt+0x14ee8>
lea    -0x5e7a(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5ea4(%ebx),%eax
movl   $0xdb,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
call   1d39 <__sprintf_chk@plt+0x49>
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xfaf2,%ebx
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    %esi,(%esp)
call   1800 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    (%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xfab7,%ebx
sub    $0x7c,%esp
mov    0x90(%esp),%eax
lea    0x68(%esp),%edx
call   169d0 <__sprintf_chk@plt+0x14ce0>
mov    %eax,0x54(%esp)
mov    0x98(%esp),%eax
movl   $0x0,(%eax)
mov    0x9c(%esp),%eax
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
mov    0x90(%esp),%eax
movzwl 0x1c(%eax),%eax
cmp    $0x1,%ax
mov    %ax,0x3e(%esp)
jbe    17bb8 <__sprintf_chk@plt+0x15ec8>
mov    0x68(%esp),%eax
mov    0x90(%esp),%ebp
movl   $0x1,0x20(%esp)
mov    %eax,0x5c(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x40(%esp)
movzwl 0x3e(%esp),%eax
sub    $0x2,%eax
movzwl %ax,%eax
add    $0x1,%eax
mov    %eax,0x44(%esp)
mov    0x20(%esp),%edx
cmp    %dx,0x3e(%esp)
jbe    17608 <__sprintf_chk@plt+0x15918>
movzwl 0x1e(%ebp),%eax
mov    0xc(%ebp),%esi
mov    0x8(%ebp),%edi
imul   %edx,%eax
mov    %esi,0x14(%esp)
mov    %edi,0x24(%esp)
cltd
add    0x14(%ebp),%eax
adc    0x18(%ebp),%edx
cmp    %esi,%edx
jb     17624 <__sprintf_chk@plt+0x15934>
jbe    17620 <__sprintf_chk@plt+0x15930>
call   16990 <__sprintf_chk@plt+0x14ca0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
cmp    %eax,0x20(%esp)
je     17bb8 <__sprintf_chk@plt+0x15ec8>
addl   $0x1,0x20(%esp)
jmp    175d2 <__sprintf_chk@plt+0x158e2>
lea    0x0(%esi),%esi
cmp    %edi,%eax
jae    175ff <__sprintf_chk@plt+0x1590f>
mov    0x0(%ebp),%esi
add    %esi,%eax
mov    %eax,%ecx
sub    %esi,%ecx
mov    %ecx,%edi
sar    $0x1f,%edi
test   %eax,%eax
mov    %esi,0x38(%esp)
mov    %ecx,%esi
mov    %ecx,0x50(%esp)
mov    %ecx,0x18(%esp)
mov    %edi,0x1c(%esp)
je     17608 <__sprintf_chk@plt+0x15918>
mov    0x10(%ebp),%ecx
test   $0x2,%cl
je     17870 <__sprintf_chk@plt+0x15b80>
mov    %esi,%eax
mov    %edi,%edx
add    $0x18,%eax
adc    $0x0,%edx
cmp    %edx,0x14(%esp)
jbe    178b0 <__sprintf_chk@plt+0x15bc0>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    0x38(%esp),%esi
add    $0x14,%eax
adc    $0x0,%edx
add    %eax,%esi
and    $0x10,%ecx
mov    %eax,0x48(%esp)
mov    %edx,0x4c(%esp)
mov    %ecx,0x58(%esp)
je     17a78 <__sprintf_chk@plt+0x15d88>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
xchg   %ax,%ax
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    176a8 <__sprintf_chk@plt+0x159b8>
mov    0x14(%esp),%eax
cmp    %eax,0x4c(%esp)
mov    %ebp,0x34(%esp)
mov    0x90(%esp),%ebp
mov    %edi,0x30(%esp)
ja     17884 <__sprintf_chk@plt+0x15b94>
jb     176f6 <__sprintf_chk@plt+0x15a06>
mov    0x24(%esp),%eax
cmp    %eax,0x48(%esp)
ja     17884 <__sprintf_chk@plt+0x15b94>
mov    0x18(%esp),%esi
mov    0x58(%esp),%edi
add    $0x10,%esi
add    0x38(%esp),%esi
test   %edi,%edi
je     17af8 <__sprintf_chk@plt+0x15e08>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    17728 <__sprintf_chk@plt+0x15a38>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ebp,0x2c(%esp)
mov    0x90(%esp),%ebp
mov    %edi,0x28(%esp)
add    $0x4,%eax
adc    $0x0,%edx
cmp    %edx,0x14(%esp)
jb     17884 <__sprintf_chk@plt+0x15b94>
ja     1777c <__sprintf_chk@plt+0x15a8c>
cmp    %eax,0x24(%esp)
jb     17884 <__sprintf_chk@plt+0x15b94>
mov    0x58(%esp),%edi
mov    0x50(%esp),%esi
add    0x38(%esp),%esi
test   %edi,%edi
je     17ab8 <__sprintf_chk@plt+0x15dc8>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x18(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x18(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    177a8 <__sprintf_chk@plt+0x15ab8>
mov    0x28(%esp),%eax
mov    %edi,%ecx
mov    0x2c(%esp),%edx
add    0x30(%esp),%eax
adc    0x34(%esp),%edx
cmp    0x14(%esp),%edx
mov    0x90(%esp),%ebp
ja     17608 <__sprintf_chk@plt+0x15918>
jb     177f8 <__sprintf_chk@plt+0x15b08>
cmp    0x24(%esp),%eax
ja     17608 <__sprintf_chk@plt+0x15918>
xor    %edx,%edx
cmp    0x40(%esp),%edx
ja     17608 <__sprintf_chk@plt+0x15918>
jb     17810 <__sprintf_chk@plt+0x15b20>
cmp    0x5c(%esp),%ecx
jae    17608 <__sprintf_chk@plt+0x15918>
mov    0x94(%esp),%eax
add    0x54(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    17608 <__sprintf_chk@plt+0x15918>
mov    0x2c(%esp),%edi
cmp    %edi,0x14(%esp)
jb     175ff <__sprintf_chk@plt+0x1590f>
jbe    17bc8 <__sprintf_chk@plt+0x15ed8>
mov    0x98(%esp),%edi
mov    0x38(%esp),%edx
add    0x28(%esp),%edx
mov    0x9c(%esp),%ecx
mov    0x30(%esp),%esi
mov    %edx,(%edi)
mov    0x34(%esp),%edi
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
add    $0x28,%eax
adc    $0x0,%edx
cmp    %edx,0x14(%esp)
jae    178c8 <__sprintf_chk@plt+0x15bd8>
lea    -0x5e63(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5eeb(%ebx),%eax
movl   $0x8e,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
jb     17884 <__sprintf_chk@plt+0x15b94>
cmp    %eax,0x24(%esp)
jae    17668 <__sprintf_chk@plt+0x15978>
lea    0x0(%esi,%eiz,1),%esi
jmp    17884 <__sprintf_chk@plt+0x15b94>
lea    0x0(%esi),%esi
ja     178d2 <__sprintf_chk@plt+0x15be2>
cmp    %eax,0x24(%esp)
xchg   %ax,%ax
jb     17884 <__sprintf_chk@plt+0x15b94>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    0x38(%esp),%esi
add    $0x20,%eax
adc    $0x0,%edx
add    %eax,%esi
and    $0x10,%ecx
mov    %eax,0x48(%esp)
mov    %edx,0x4c(%esp)
mov    %ecx,0x58(%esp)
je     17a38 <__sprintf_chk@plt+0x15d48>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x8,%ecx
mov    %esi,%edi
jne    17910 <__sprintf_chk@plt+0x15c20>
mov    0x14(%esp),%eax
cmp    %eax,0x4c(%esp)
mov    %ebp,0x34(%esp)
mov    0x90(%esp),%ebp
mov    %edi,0x30(%esp)
ja     17884 <__sprintf_chk@plt+0x15b94>
jb     1795e <__sprintf_chk@plt+0x15c6e>
mov    0x24(%esp),%eax
cmp    %eax,0x48(%esp)
ja     17884 <__sprintf_chk@plt+0x15b94>
mov    0x18(%esp),%esi
mov    0x58(%esp),%eax
add    $0x18,%esi
add    0x38(%esp),%esi
test   %eax,%eax
je     17b78 <__sprintf_chk@plt+0x15e88>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x8,%ecx
mov    %esi,%edi
jne    17990 <__sprintf_chk@plt+0x15ca0>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ebp,0x2c(%esp)
mov    0x90(%esp),%ebp
mov    %edi,0x28(%esp)
add    $0x4,%eax
adc    $0x0,%edx
cmp    %edx,0x14(%esp)
jb     17884 <__sprintf_chk@plt+0x15b94>
ja     179e4 <__sprintf_chk@plt+0x15cf4>
cmp    %eax,0x24(%esp)
jb     17884 <__sprintf_chk@plt+0x15b94>
mov    0x58(%esp),%eax
mov    0x50(%esp),%esi
add    0x38(%esp),%esi
test   %eax,%eax
je     17b38 <__sprintf_chk@plt+0x15e48>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x18(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x18(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    17a10 <__sprintf_chk@plt+0x15d20>
jmp    177c9 <__sprintf_chk@plt+0x15ad9>
xchg   %ax,%ax
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
mov    $0x8,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17a50 <__sprintf_chk@plt+0x15d60>
jmp    17931 <__sprintf_chk@plt+0x15c41>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17a90 <__sprintf_chk@plt+0x15da0>
jmp    176c9 <__sprintf_chk@plt+0x159d9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x18(%esp)
mov    %edx,%ebp
mov    0x18(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17ad0 <__sprintf_chk@plt+0x15de0>
jmp    177c9 <__sprintf_chk@plt+0x15ad9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17b10 <__sprintf_chk@plt+0x15e20>
jmp    17749 <__sprintf_chk@plt+0x15a59>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x18(%esp)
mov    %edx,%ebp
mov    0x18(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17b50 <__sprintf_chk@plt+0x15e60>
jmp    177c9 <__sprintf_chk@plt+0x15ad9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x90(%esp)
mov    $0x8,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    17b90 <__sprintf_chk@plt+0x15ea0>
jmp    179b1 <__sprintf_chk@plt+0x15cc1>
lea    0x0(%esi,%eiz,1),%esi
add    $0x7c,%esp
mov    $0xfffffffe,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x28(%esp),%edi
cmp    %edi,0x24(%esp)
jbe    175ff <__sprintf_chk@plt+0x1590f>
jmp    17843 <__sprintf_chk@plt+0x15b53>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x68(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xf410,%ebx
movl   $0x0,(%eax)
lea    0x38(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     17c52 <__sprintf_chk@plt+0x15f62>
mov    0x34(%esp),%esi
test   %esi,%esi
je     17c50 <__sprintf_chk@plt+0x15f60>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
je     17c50 <__sprintf_chk@plt+0x15f60>
cmpb   $0x0,(%esi)
jne    17c7f <__sprintf_chk@plt+0x15f8f>
cmp    $0x0,%edx
ja     17c69 <__sprintf_chk@plt+0x15f79>
cmp    $0x1,%eax
ja     17c69 <__sprintf_chk@plt+0x15f79>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,%ecx
xor    $0x1,%ecx
or     %edx,%ecx
je     17c50 <__sprintf_chk@plt+0x15f60>
add    $0x1,%esi
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
cmpb   $0x0,(%esi)
je     17c60 <__sprintf_chk@plt+0x15f70>
cmp    $0x0,%edx
mov    %edx,%edi
mov    %eax,0x1c(%esp)
jbe    17e05 <__sprintf_chk@plt+0x16115>
movl   $0x0,0x20(%esp)
xor    %ecx,%ecx
xor    %eax,%eax
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%edx
jb     17daa <__sprintf_chk@plt+0x160ba>
jbe    17da0 <__sprintf_chk@plt+0x160b0>
cmpb   $0x1,-0x1(%esi,%ecx,1)
sbbl   $0xffffffff,0x20(%esp)
mov    0x20(%esp),%eax
lea    0x4(,%eax,4),%ebp
mov    0x1c(%esp),%eax
lea    0x1(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
mov    0x68(%esp),%edx
test   %eax,%eax
mov    %eax,0x2c(%esp)
mov    %eax,(%edx)
je     17e15 <__sprintf_chk@plt+0x16125>
mov    0x2c(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %esi,0x4(%esp)
add    %ebp,%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   1810 <memcpy@plt>
mov    0x28(%esp),%eax
mov    0x1c(%esp),%ecx
mov    0x2c(%esp),%edx
movl   $0x1,0x24(%esp)
movb   $0x0,(%eax,%ecx,1)
xor    %ecx,%ecx
cmpl   $0x1,0x20(%esp)
movl   $0x0,-0x4(%edx,%ebp,1)
mov    %eax,(%edx)
jbe    17d74 <__sprintf_chk@plt+0x16084>
mov    0x28(%esp),%eax
lea    (%eax,%ecx,1),%ebp
cmpb   $0x0,0x0(%ebp)
jne    17de8 <__sprintf_chk@plt+0x160f8>
cmpb   $0x0,(%esi,%ecx,1)
jne    17d50 <__sprintf_chk@plt+0x16060>
cmp    $0x0,%edi
ja     17d88 <__sprintf_chk@plt+0x16098>
cmp    %ecx,0x1c(%esp)
ja     17d88 <__sprintf_chk@plt+0x16098>
mov    0x24(%esp),%edx
mov    0x2c(%esp),%eax
addl   $0x1,0x24(%esp)
mov    %ebp,(%eax,%edx,4)
mov    0x24(%esp),%eax
cmp    %eax,0x20(%esp)
jbe    17d74 <__sprintf_chk@plt+0x16084>
xor    %edx,%edx
cmp    %edi,%edx
jbe    17df0 <__sprintf_chk@plt+0x16100>
mov    0x20(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jb     17d88 <__sprintf_chk@plt+0x16098>
cmp    0x1c(%esp),%ecx
jae    17d97 <__sprintf_chk@plt+0x160a7>
add    $0x1,%ecx
cmpb   $0x0,(%esi,%ecx,1)
jne    17d97 <__sprintf_chk@plt+0x160a7>
xor    %edx,%edx
cmp    %edi,%edx
jbe    17d80 <__sprintf_chk@plt+0x16090>
mov    0x28(%esp),%eax
lea    (%eax,%ecx,1),%ebp
jmp    17d50 <__sprintf_chk@plt+0x16060>
cmp    0x1c(%esp),%eax
jae    17cae <__sprintf_chk@plt+0x15fbe>
cmpb   $0x0,(%esi,%ecx,1)
je     17dc8 <__sprintf_chk@plt+0x160d8>
add    $0x1,%ecx
xor    %edx,%edx
mov    %ecx,%eax
jmp    17ca0 <__sprintf_chk@plt+0x15fb0>
lea    0x0(%esi,%eiz,1),%esi
jb     17dc8 <__sprintf_chk@plt+0x160d8>
cmp    0x1c(%esp),%ecx
jae    17dd9 <__sprintf_chk@plt+0x160e9>
add    $0x1,%ecx
xor    %edx,%edx
cmpb   $0x0,(%esi,%ecx,1)
mov    %ecx,%eax
jne    17dd9 <__sprintf_chk@plt+0x160e9>
cmp    %edi,%edx
jbe    17dc0 <__sprintf_chk@plt+0x160d0>
addl   $0x1,0x20(%esp)
jmp    17ca0 <__sprintf_chk@plt+0x15fb0>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
jmp    17d60 <__sprintf_chk@plt+0x16070>
jb     17d2e <__sprintf_chk@plt+0x1603e>
cmp    0x1c(%esp),%ecx
jae    17d74 <__sprintf_chk@plt+0x16084>
jmp    17d2e <__sprintf_chk@plt+0x1603e>
cmpl   $0x1,0x1c(%esp)
jbe    17c50 <__sprintf_chk@plt+0x15f60>
jmp    17c8e <__sprintf_chk@plt+0x15f9e>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
xchg   %ax,%ax
jmp    17c52 <__sprintf_chk@plt+0x15f62>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%eax
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xf1bd,%ebx
cmpl   $0x2,0x10(%eax)
setne  %al
movzbl %al,%eax
lea    0x4(,%eax,4),%eax
mov    %eax,0x1c(%esp)
mov    %eax,%ebp
mov    0x84(%esp),%eax
movl   $0x0,(%eax)
lea    0x58(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x54(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x672c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     17fc8 <__sprintf_chk@plt+0x162d8>
mov    0x54(%esp),%eax
test   %eax,%eax
mov    %eax,%ecx
mov    %eax,0x38(%esp)
je     17fd0 <__sprintf_chk@plt+0x162e0>
mov    0x5c(%esp),%edi
mov    0x58(%esp),%esi
mov    %edi,%eax
or     %esi,%eax
je     17fd0 <__sprintf_chk@plt+0x162e0>
mov    %esi,%eax
and    $0x3f,%eax
test   %eax,%eax
jne    1827d <__sprintf_chk@plt+0x1658d>
mov    0x80(%esp),%edx
shrd   $0x6,%edi,%esi
shr    $0x6,%edi
mov    %edi,0x34(%esp)
mov    %esi,0x30(%esp)
mov    (%edx),%edi
mov    %esi,0x4c(%esp)
sub    %edi,%ecx
test   %esi,%esi
mov    %edi,0x28(%esp)
jle    17ffd <__sprintf_chk@plt+0x1630d>
mov    0x80(%esp),%edi
mov    %ebp,%eax
xor    %edx,%edx
add    %ecx,%eax
mov    %eax,0x20(%esp)
mov    0x8(%edi),%edi
mov    %edi,0x2c(%esp)
mov    0x80(%esp),%edi
mov    0xc(%edi),%edi
cmp    $0x0,%edi
mov    %edi,0x10(%esp)
ja     17f2a <__sprintf_chk@plt+0x1623a>
cmp    %eax,0x2c(%esp)
jbe    17f92 <__sprintf_chk@plt+0x162a2>
mov    0x1c(%esp),%edi
xor    %ebp,%ebp
lea    0x40(%edi,%ecx,1),%esi
mov    0x30(%esp),%edi
mov    %edx,%ecx
mov    %eax,%edx
sub    $0x1,%edi
mov    %edi,0x24(%esp)
xor    %edi,%edi
lea    0x0(%esi),%esi
cmp    %ecx,0x10(%esp)
jb     17fe0 <__sprintf_chk@plt+0x162f0>
ja     17f5e <__sprintf_chk@plt+0x1626e>
cmp    %edx,0x2c(%esp)
jbe    17fe0 <__sprintf_chk@plt+0x162f0>
mov    0x20(%esp),%edx
add    0x28(%esp),%edx
xor    %eax,%eax
cmpb   $0x2e,(%edx)
sete   %al
add    %eax,%edx
mov    %edx,(%esp)
call   1a30 <strlen@plt>
cmp    0x24(%esp),%edi
lea    0x1(%ebp,%eax,1),%ebp
je     18000 <__sprintf_chk@plt+0x16310>
xor    %ecx,%ecx
add    $0x1,%edi
cmp    0x10(%esp),%ecx
mov    %esi,%edx
lea    0x40(%esi),%eax
jbe    17fe8 <__sprintf_chk@plt+0x162f8>
lea    -0x5e56(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5f25(%ebx),%eax
movl   $0xcf,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
lea    0x0(%esi),%esi
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %edx,%edx
jmp    17f66 <__sprintf_chk@plt+0x16276>
nop
jb     17ff2 <__sprintf_chk@plt+0x16302>
cmp    0x2c(%esp),%esi
xchg   %ax,%ax
jae    17f92 <__sprintf_chk@plt+0x162a2>
mov    %esi,0x20(%esp)
mov    %eax,%esi
jmp    17f48 <__sprintf_chk@plt+0x16258>
xor    %ebp,%ebp
nop
mov    0x30(%esp),%esi
shl    $0x4,%esi
lea    0x0(%ebp,%esi,1),%edx
mov    %edx,(%esp)
call   1970 <malloc@plt>
mov    0x84(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
je     17fbc <__sprintf_chk@plt+0x162cc>
lea    (%eax,%esi,1),%edx
mov    0x38(%esp),%edi
mov    %edx,0x30(%esp)
mov    0x80(%esp),%edx
mov    0x4c(%esp),%ebp
mov    (%edx),%ecx
sub    %ecx,%edi
test   %ebp,%ebp
mov    %edi,0x20(%esp)
jle    18258 <__sprintf_chk@plt+0x16568>
mov    0x1c(%esp),%edx
mov    %edi,%esi
xor    %edi,%edi
movl   $0x0,0x44(%esp)
mov    %edx,0x40(%esp)
mov    0x80(%esp),%edx
add    0x40(%esp),%esi
adc    0x44(%esp),%edi
mov    0x8(%edx),%edx
mov    %edx,0x3c(%esp)
mov    0x80(%esp),%edx
mov    0xc(%edx),%edx
cmp    %edx,%edi
mov    %edx,0x24(%esp)
jae    18268 <__sprintf_chk@plt+0x16578>
mov    0x80(%esp),%ebp
mov    %ecx,0x28(%esp)
mov    0x28(%esp),%ecx
add    0x20(%esp),%ecx
mov    %eax,0x38(%esp)
testb  $0x10,0x10(%ebp)
movl   $0x0,0x48(%esp)
je     181f1 <__sprintf_chk@plt+0x16501>
nop
mov    0x1c(%esp),%eax
xor    %esi,%esi
xor    %edi,%edi
mov    %ebp,0x80(%esp)
add    %ecx,%eax
mov    %eax,0x10(%esp)
lea    0x0(%esi),%esi
movzbl (%ecx),%ebp
mov    %esi,%eax
mov    %edi,%edx
shl    $0x8,%eax
add    $0x1,%ecx
shld   $0x8,%esi,%edx
mov    %edx,%edi
or     %eax,%ebp
cmp    0x10(%esp),%ecx
mov    %ebp,%esi
jne    180c8 <__sprintf_chk@plt+0x163d8>
mov    0x80(%esp),%ebp
mov    %esi,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x20(%esp),%ecx
xor    %edx,%edx
add    0x1c(%esp),%ecx
cmp    0x24(%esp),%edx
ja     17f92 <__sprintf_chk@plt+0x162a2>
jb     18114 <__sprintf_chk@plt+0x16424>
cmp    0x3c(%esp),%ecx
jae    17f92 <__sprintf_chk@plt+0x162a2>
mov    0x28(%esp),%esi
xor    %eax,%eax
mov    0x10(%esp),%edx
mov    0x30(%esp),%edi
add    %ecx,%esi
mov    0x14(%esp),%ecx
cmpb   $0x2e,(%esi)
sete   %al
add    %eax,%esi
mov    0x38(%esp),%eax
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
mov    %edi,0xc(%eax)
movl   $0x55,0x8(%eax)
mov    %esi,(%esp)
call   1a30 <strlen@plt>
mov    %esi,0x4(%esp)
lea    0x1(%eax),%edi
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   1810 <memcpy@plt>
addl   $0x1,0x48(%esp)
mov    0x48(%esp),%eax
add    %edi,0x30(%esp)
addl   $0x40,0x20(%esp)
cmp    %eax,0x4c(%esp)
jle    18258 <__sprintf_chk@plt+0x16568>
mov    0x8(%ebp),%eax
xor    %edx,%edx
mov    0xc(%ebp),%edi
addl   $0x10,0x38(%esp)
mov    %eax,0x3c(%esp)
mov    0x20(%esp),%eax
add    0x40(%esp),%eax
adc    0x44(%esp),%edx
mov    %edi,0x24(%esp)
cmp    %edi,%edx
jbe    181d0 <__sprintf_chk@plt+0x164e0>
lea    -0x5e63(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5eeb(%ebx),%eax
movl   $0x8e,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
lea    0x0(%esi),%esi
jb     181d8 <__sprintf_chk@plt+0x164e8>
cmp    0x3c(%esp),%eax
ja     181a3 <__sprintf_chk@plt+0x164b3>
mov    0x0(%ebp),%eax
mov    %eax,0x28(%esp)
mov    0x28(%esp),%ecx
add    0x20(%esp),%ecx
testb  $0x10,0x10(%ebp)
jne    180b0 <__sprintf_chk@plt+0x163c0>
mov    0x1c(%esp),%edi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x80(%esp)
mov    $0x1,%esi
mov    %edx,%ebp
add    %ecx,%edi
mov    %edi,0x2c(%esp)
mov    %eax,%edi
nop
mov    %edi,%eax
mov    %esi,%ecx
shl    $0x8,%eax
neg    %ecx
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %ebp,%edx
shld   $0x8,%edi,%edx
add    $0x1,%esi
mov    %edx,0x14(%esp)
mov    0x14(%esp),%ebp
movzbl (%eax,%ecx,1),%ecx
or     0x10(%esp),%ecx
cmp    %esi,0x1c(%esp)
mov    %ecx,%edi
jae    18210 <__sprintf_chk@plt+0x16520>
mov    %ebp,%edx
mov    0x80(%esp),%ebp
mov    %ecx,0x10(%esp)
mov    %edx,0x14(%esp)
jmp    180f4 <__sprintf_chk@plt+0x16404>
mov    0x4c(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
ja     181a3 <__sprintf_chk@plt+0x164b3>
cmp    0x3c(%esp),%esi
jbe    18086 <__sprintf_chk@plt+0x16396>
jmp    181a3 <__sprintf_chk@plt+0x164b3>
mov    $0xffffffea,%eax
jmp    17fc8 <__sprintf_chk@plt+0x162d8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xed67,%ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%eax
lea    0x78(%esp),%edx
call   169d0 <__sprintf_chk@plt+0x14ce0>
mov    %eax,0x64(%esp)
mov    0xa0(%esp),%eax
movzwl 0x1c(%eax),%eax
cmp    $0x1,%ax
mov    %ax,0x2c(%esp)
jbe    18a50 <__sprintf_chk@plt+0x16d60>
mov    0x78(%esp),%eax
mov    0xa0(%esp),%ebp
movl   $0x2,0x20(%esp)
movl   $0x1,0x24(%esp)
mov    %eax,0x6c(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %ax,0x30(%esp)
sub    $0x1,%eax
cmp    %ax,0x2c(%esp)
jbe    18358 <__sprintf_chk@plt+0x16668>
mov    0x14(%ebp),%eax
movzwl 0x1e(%ebp),%ecx
mov    0x18(%ebp),%edx
mov    %eax,%esi
mov    %eax,0x50(%esp)
mov    0x24(%esp),%eax
mov    %edx,%edi
mov    %edx,0x54(%esp)
mov    %ecx,0x5c(%esp)
imul   %ecx,%eax
mov    0xc(%ebp),%ecx
cltd
add    %esi,%eax
adc    %edi,%edx
mov    0x8(%ebp),%edi
cmp    %ecx,%edx
mov    %ecx,0x10(%esp)
mov    %edi,0x28(%esp)
jb     1837c <__sprintf_chk@plt+0x1668c>
jbe    18378 <__sprintf_chk@plt+0x16688>
call   16990 <__sprintf_chk@plt+0x14ca0>
lea    0x0(%esi),%esi
movzwl 0x30(%esp),%eax
cmp    %ax,0x2c(%esp)
jbe    18a50 <__sprintf_chk@plt+0x16d60>
mov    0x20(%esp),%eax
addl   $0x1,0x20(%esp)
mov    %eax,0x24(%esp)
jmp    18300 <__sprintf_chk@plt+0x16610>
nop
cmp    %edi,%eax
jae    1834d <__sprintf_chk@plt+0x1665d>
mov    0x0(%ebp),%esi
add    %esi,%eax
mov    %eax,%ecx
sub    %esi,%ecx
mov    %esi,0x34(%esp)
mov    %ecx,%esi
mov    %ecx,0x60(%esp)
sar    $0x1f,%ecx
test   %eax,%eax
mov    %esi,0x18(%esp)
mov    %ecx,0x1c(%esp)
je     18358 <__sprintf_chk@plt+0x16668>
mov    0x10(%ebp),%eax
mov    %eax,0x48(%esp)
and    $0x2,%eax
mov    %eax,0x58(%esp)
je     186e0 <__sprintf_chk@plt+0x169f0>
mov    %esi,%eax
mov    %ecx,%edx
add    $0x18,%eax
adc    $0x0,%edx
cmp    %edx,0x10(%esp)
jbe    18720 <__sprintf_chk@plt+0x16a30>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    0x34(%esp),%esi
add    $0x14,%eax
adc    $0x0,%edx
mov    %eax,0x40(%esp)
add    %eax,%esi
mov    0x48(%esp),%eax
mov    %edx,0x44(%esp)
and    $0x10,%eax
mov    %eax,0x68(%esp)
je     188f0 <__sprintf_chk@plt+0x16c00>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x38(%esp)
mov    %edx,%ebp
mov    0x38(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    18408 <__sprintf_chk@plt+0x16718>
mov    0x10(%esp),%eax
cmp    %eax,0x44(%esp)
mov    %ebp,0x3c(%esp)
mov    0xa0(%esp),%ebp
mov    %edi,0x38(%esp)
ja     186f4 <__sprintf_chk@plt+0x16a04>
jb     18456 <__sprintf_chk@plt+0x16766>
mov    0x28(%esp),%eax
cmp    %eax,0x40(%esp)
ja     186f4 <__sprintf_chk@plt+0x16a04>
mov    0x18(%esp),%esi
mov    0x68(%esp),%edi
add    $0x10,%esi
add    0x34(%esp),%esi
test   %edi,%edi
je     18990 <__sprintf_chk@plt+0x16ca0>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x40(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x40(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    18488 <__sprintf_chk@plt+0x16798>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ebp,0x44(%esp)
mov    0xa0(%esp),%ebp
mov    %edi,0x40(%esp)
add    $0x4,%eax
adc    $0x0,%edx
cmp    %edx,0x10(%esp)
jb     186f4 <__sprintf_chk@plt+0x16a04>
ja     184dc <__sprintf_chk@plt+0x167ec>
cmp    %eax,0x28(%esp)
jb     186f4 <__sprintf_chk@plt+0x16a04>
mov    0x68(%esp),%edi
mov    0x60(%esp),%esi
add    0x34(%esp),%esi
test   %edi,%edi
je     18950 <__sprintf_chk@plt+0x16c60>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x18(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x18(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    18508 <__sprintf_chk@plt+0x16818>
mov    %edi,%eax
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
add    0x38(%esp),%esi
adc    0x3c(%esp),%edi
cmp    0x10(%esp),%edi
mov    0xa0(%esp),%ebp
ja     18358 <__sprintf_chk@plt+0x16668>
jb     18558 <__sprintf_chk@plt+0x16868>
cmp    0x28(%esp),%esi
ja     18358 <__sprintf_chk@plt+0x16668>
xor    %edi,%edi
cmp    0x4c(%esp),%edi
ja     18358 <__sprintf_chk@plt+0x16668>
jb     18570 <__sprintf_chk@plt+0x16880>
cmp    0x6c(%esp),%eax
jae    18358 <__sprintf_chk@plt+0x16668>
add    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa4(%esp),%eax
mov    %eax,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
jne    18358 <__sprintf_chk@plt+0x16668>
cmpw   $0x0,0x24(%esp)
mov    %eax,0x20(%esp)
je     18ba5 <__sprintf_chk@plt+0x16eb5>
movzwl 0x24(%esp),%eax
cmp    %ax,0x2c(%esp)
jbe    18baa <__sprintf_chk@plt+0x16eba>
mov    0x24(%esp),%eax
imul   0x5c(%esp),%eax
cltd
add    0x50(%esp),%eax
adc    0x54(%esp),%edx
cmp    0x10(%esp),%edx
ja     1834d <__sprintf_chk@plt+0x1665d>
jae    18a78 <__sprintf_chk@plt+0x16d88>
mov    0x58(%esp),%ebp
cltd
add    $0x8,%eax
adc    $0x0,%edx
mov    %eax,%esi
mov    %edx,%edi
test   %ebp,%ebp
jne    18930 <__sprintf_chk@plt+0x16c40>
mov    $0x8,%ebp
movl   $0x8,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
add    %esi,%eax
adc    %edi,%edx
cmp    0x10(%esp),%edx
ja     186f4 <__sprintf_chk@plt+0x16a04>
jae    18a68 <__sprintf_chk@plt+0x16d78>
mov    0x34(%esp),%eax
mov    %esi,0x30(%esp)
add    %esi,%eax
mov    %eax,0x10(%esp)
mov    0x48(%esp),%eax
and    $0x10,%eax
mov    %eax,0x2c(%esp)
je     18a88 <__sprintf_chk@plt+0x16d98>
lea    0x1(%ebp),%eax
mov    $0x1,%ecx
mov    %eax,0x24(%esp)
xor    %edi,%edi
xor    %ebp,%ebp
mov    0x10(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    0x24(%esp),%ecx
mov    %esi,%edi
jne    18648 <__sprintf_chk@plt+0x16958>
mov    %edx,%eax
and    $0xfffffffd,%edi
mov    %eax,%ecx
mov    0xa0(%esp),%eax
mov    %edi,%edx
mov    0x4(%eax),%ebp
test   %ebp,%ebp
je     18b22 <__sprintf_chk@plt+0x16e32>
add    0x30(%esp),%ebp
cmpl   $0x0,0x2c(%esp)
je     18ae9 <__sprintf_chk@plt+0x16df9>
mov    0x18(%esp),%eax
mov    %ecx,%edi
sub    $0x1,%eax
add    %eax,%ebp
mov    $0x1,%eax
mov    %eax,%ecx
mov    %edx,%eax
mov    %edi,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %al,0x0(%ebp)
add    $0x1,%ecx
sub    $0x1,%ebp
shrd   $0x8,%edx,%eax
shr    $0x8,%edx
cmpl   $0x0,0x1c(%esp)
ja     186b0 <__sprintf_chk@plt+0x169c0>
cmp    %ecx,0x18(%esp)
jae    186b0 <__sprintf_chk@plt+0x169c0>
mov    0x20(%esp),%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
add    $0x28,%eax
adc    $0x0,%edx
cmp    %edx,0x10(%esp)
jae    18738 <__sprintf_chk@plt+0x16a48>
lea    -0x5e63(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5eeb(%ebx),%eax
movl   $0x8e,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
jb     186f4 <__sprintf_chk@plt+0x16a04>
cmp    %eax,0x28(%esp)
jae    183c6 <__sprintf_chk@plt+0x166d6>
lea    0x0(%esi,%eiz,1),%esi
jmp    186f4 <__sprintf_chk@plt+0x16a04>
lea    0x0(%esi),%esi
ja     18742 <__sprintf_chk@plt+0x16a52>
cmp    %eax,0x28(%esp)
xchg   %ax,%ax
jb     186f4 <__sprintf_chk@plt+0x16a04>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    0x34(%esp),%esi
add    $0x20,%eax
adc    $0x0,%edx
mov    %eax,0x40(%esp)
add    %eax,%esi
mov    0x48(%esp),%eax
mov    %edx,0x44(%esp)
and    $0x10,%eax
mov    %eax,0x68(%esp)
je     188b0 <__sprintf_chk@plt+0x16bc0>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x38(%esp)
mov    %edx,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x8,%ecx
mov    %esi,%edi
jne    18788 <__sprintf_chk@plt+0x16a98>
mov    0x10(%esp),%eax
cmp    %eax,0x44(%esp)
mov    %ebp,0x3c(%esp)
mov    0xa0(%esp),%ebp
mov    %edi,0x38(%esp)
ja     186f4 <__sprintf_chk@plt+0x16a04>
jb     187d6 <__sprintf_chk@plt+0x16ae6>
mov    0x28(%esp),%eax
cmp    %eax,0x40(%esp)
ja     186f4 <__sprintf_chk@plt+0x16a04>
mov    0x18(%esp),%esi
mov    0x68(%esp),%eax
add    $0x18,%esi
add    0x34(%esp),%esi
test   %eax,%eax
je     18a10 <__sprintf_chk@plt+0x16d20>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x40(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x40(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x8,%ecx
mov    %esi,%edi
jne    18808 <__sprintf_chk@plt+0x16b18>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ebp,0x44(%esp)
mov    0xa0(%esp),%ebp
mov    %edi,0x40(%esp)
add    $0x4,%eax
adc    $0x0,%edx
cmp    %edx,0x10(%esp)
jb     186f4 <__sprintf_chk@plt+0x16a04>
ja     1885c <__sprintf_chk@plt+0x16b6c>
cmp    %eax,0x28(%esp)
jb     186f4 <__sprintf_chk@plt+0x16a04>
mov    0x68(%esp),%eax
mov    0x60(%esp),%esi
add    0x34(%esp),%esi
test   %eax,%eax
je     189d0 <__sprintf_chk@plt+0x16ce0>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x18(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x18(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    18888 <__sprintf_chk@plt+0x16b98>
jmp    18529 <__sprintf_chk@plt+0x16839>
xchg   %ax,%ax
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
mov    $0x8,%ecx
mov    %eax,%edi
mov    %esi,0x38(%esp)
mov    %edx,%ebp
mov    0x38(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    188c8 <__sprintf_chk@plt+0x16bd8>
jmp    187a9 <__sprintf_chk@plt+0x16ab9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x38(%esp)
mov    %edx,%ebp
mov    0x38(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    18908 <__sprintf_chk@plt+0x16c18>
jmp    18429 <__sprintf_chk@plt+0x16739>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x4,%ebp
movl   $0x4,0x18(%esp)
movl   $0x0,0x1c(%esp)
jmp    185fd <__sprintf_chk@plt+0x1690d>
lea    0x0(%esi),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x18(%esp)
mov    %edx,%ebp
mov    0x18(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    18968 <__sprintf_chk@plt+0x16c78>
jmp    18529 <__sprintf_chk@plt+0x16839>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x40(%esp)
mov    %edx,%ebp
mov    0x40(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    189a8 <__sprintf_chk@plt+0x16cb8>
jmp    184a9 <__sprintf_chk@plt+0x167b9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x18(%esp)
mov    %edx,%ebp
mov    0x18(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    189e8 <__sprintf_chk@plt+0x16cf8>
jmp    18529 <__sprintf_chk@plt+0x16839>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0xa0(%esp)
mov    $0x8,%ecx
mov    %eax,%edi
mov    %esi,0x40(%esp)
mov    %edx,%ebp
mov    0x40(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    18a28 <__sprintf_chk@plt+0x16d38>
jmp    18829 <__sprintf_chk@plt+0x16b39>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xfffffffe,0x20(%esp)
mov    0x20(%esp),%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    0x28(%esp),%eax
ja     186f4 <__sprintf_chk@plt+0x16a04>
jmp    18619 <__sprintf_chk@plt+0x16929>
nop
cmp    0x28(%esp),%eax
jae    1834d <__sprintf_chk@plt+0x1665d>
jmp    185d1 <__sprintf_chk@plt+0x168e1>
nop
mov    0x10(%esp),%ecx
movzwl %bp,%eax
xor    %edi,%edi
xor    %ebp,%ebp
mov    %eax,0x24(%esp)
mov    %ebp,%edx
lea    -0x1(%ecx,%eax,1),%esi
mov    $0x1,%ecx
mov    %ecx,0x10(%esp)
mov    %edi,%eax
mov    %esi,%ecx
lea    0x0(%esi),%esi
movzbl (%ecx),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
sub    $0x1,%ecx
addl   $0x1,0x10(%esp)
shld   $0x8,%eax,%edi
or     %esi,%ebp
mov    %edi,%edx
mov    %ebp,%eax
mov    0x10(%esp),%ebp
cmp    %ebp,0x24(%esp)
jae    18ab0 <__sprintf_chk@plt+0x16dc0>
mov    %edi,0x14(%esp)
mov    %eax,%edi
mov    0x14(%esp),%edx
mov    %esi,0x10(%esp)
jmp    1866b <__sprintf_chk@plt+0x1697b>
xor    %eax,%eax
mov    %eax,%edi
mov    %edx,%eax
mov    %ecx,%edx
mov    %edi,%ecx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %al,0x0(%ebp,%ecx,1)
shrd   $0x8,%edx,%eax
add    $0x1,%ecx
shr    $0x8,%edx
cmpl   $0x0,0x1c(%esp)
ja     18af8 <__sprintf_chk@plt+0x16e08>
cmp    %ecx,0x18(%esp)
ja     18af8 <__sprintf_chk@plt+0x16e08>
mov    0x20(%esp),%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x28(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %eax,(%esp)
call   1970 <malloc@plt>
mov    0xa0(%esp),%ecx
mov    0x10(%esp),%edx
test   %eax,%eax
mov    %eax,0x4(%ecx)
mov    0x14(%esp),%ecx
je     18b91 <__sprintf_chk@plt+0x16ea1>
mov    %ecx,0x14(%esp)
mov    0x28(%esp),%ecx
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x8(%esp)
mov    0x34(%esp),%ecx
mov    %ecx,0x4(%esp)
call   1810 <memcpy@plt>
mov    0xa0(%esp),%eax
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
mov    0x4(%eax),%ebp
mov    %ebp,(%eax)
mov    0x10(%eax),%eax
mov    %eax,0x2c(%esp)
andl   $0x10,0x2c(%esp)
jmp    18686 <__sprintf_chk@plt+0x16996>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%esp)
negl   0x20(%esp)
jmp    18a58 <__sprintf_chk@plt+0x16d68>
call   1d39 <__sprintf_chk@plt+0x49>
lea    -0x5e7a(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5ea4(%ebx),%eax
movl   $0xdb,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xe417,%ebx
sub    $0x4c,%esp
lea    0x38(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x65af(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     18dd0 <__sprintf_chk@plt+0x170e0>
mov    0x34(%esp),%ebp
test   %ebp,%ebp
je     18c48 <__sprintf_chk@plt+0x16f58>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
je     18c48 <__sprintf_chk@plt+0x16f58>
cmpb   $0x0,0x0(%ebp)
jne    18c78 <__sprintf_chk@plt+0x16f88>
cmp    $0x0,%edx
ja     18c61 <__sprintf_chk@plt+0x16f71>
cmp    $0x1,%eax
ja     18c61 <__sprintf_chk@plt+0x16f71>
xchg   %ax,%ax
xor    %esi,%esi
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
xor    $0x1,%ecx
or     %edx,%ecx
je     18c48 <__sprintf_chk@plt+0x16f58>
add    $0x1,%ebp
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0x38(%esp)
mov    %edx,0x3c(%esp)
cmpb   $0x0,0x0(%ebp)
je     18c58 <__sprintf_chk@plt+0x16f68>
mov    %edx,0x28(%esp)
cmpl   $0x0,0x28(%esp)
mov    %eax,0x2c(%esp)
jbe    18dc0 <__sprintf_chk@plt+0x170d0>
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
lea    0x0(%ebp,%eax,1),%edx
cmpb   $0x0,(%edx)
je     18d30 <__sprintf_chk@plt+0x17040>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    0x28(%esp),%eax
add    $0x1,%esi
adc    $0x0,%edi
cmp    %eax,%edi
mov    %esi,0x20(%esp)
mov    %edi,0x24(%esp)
ja     18d58 <__sprintf_chk@plt+0x17068>
jb     18cdf <__sprintf_chk@plt+0x16fef>
mov    0x2c(%esp),%eax
cmp    %eax,0x20(%esp)
jae    18d58 <__sprintf_chk@plt+0x17068>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
add    $0x9,%esi
adc    $0x0,%edi
cmp    0x28(%esp),%edi
ja     18d68 <__sprintf_chk@plt+0x17078>
jb     18cfd <__sprintf_chk@plt+0x1700d>
mov    0x2c(%esp),%eax
cmp    %eax,%esi
jae    18d68 <__sprintf_chk@plt+0x17078>
mov    $0x9,%ecx
mov    %edx,%esi
lea    -0x5ed0(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %al
setb   %cl
sub    %ecx,%eax
movsbl %al,%eax
test   %eax,%eax
je     18d80 <__sprintf_chk@plt+0x17090>
mov    %edx,(%esp)
call   1a30 <strlen@plt>
xor    %edx,%edx
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
lea    0x0(%esi),%esi
addl   $0x1,0x18(%esp)
adcl   $0x0,0x1c(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jb     18ca0 <__sprintf_chk@plt+0x16fb0>
ja     18d58 <__sprintf_chk@plt+0x17068>
mov    0x2c(%esp),%eax
cmp    %eax,0x18(%esp)
jb     18ca0 <__sprintf_chk@plt+0x16fb0>
add    $0x4c,%esp
mov    $0xfffffffe,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
jmp    18ca0 <__sprintf_chk@plt+0x16fb0>
lea    0x0(%esi),%esi
mov    %eax,%esi
mov    0x60(%esp),%eax
mov    %edx,%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
sub    %ecx,%edi
test   %ebp,%ebp
je     18dd7 <__sprintf_chk@plt+0x170e7>
mov    %edx,(%esp)
add    %ebp,%edi
call   1a30 <strlen@plt>
mov    %edi,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
call   1aa0 <memset@plt>
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x2c(%esp)
jbe    18c48 <__sprintf_chk@plt+0x16f58>
jmp    18c8b <__sprintf_chk@plt+0x16f9b>
mov    %eax,%esi
jmp    18c4a <__sprintf_chk@plt+0x16f5a>
mov    0x8(%eax),%ebp
mov    %ecx,0x28(%esp)
mov    %edx,0x18(%esp)
mov    %ebp,(%esp)
call   1970 <malloc@plt>
mov    0x60(%esp),%edx
mov    0x28(%esp),%ecx
test   %eax,%eax
mov    %eax,0x4(%edx)
mov    0x18(%esp),%edx
je     18e23 <__sprintf_chk@plt+0x17133>
mov    %ebp,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   1810 <memcpy@plt>
mov    0x60(%esp),%eax
mov    0x18(%esp),%edx
mov    0x4(%eax),%ebp
mov    %ebp,(%eax)
jmp    18d93 <__sprintf_chk@plt+0x170a3>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
jmp    18c4a <__sprintf_chk@plt+0x16f5a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xe1b7,%ebx
sub    $0xcc,%esp
lea    0xa8(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x9c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x5ec6(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xe0(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     19108 <__sprintf_chk@plt+0x17418>
lea    0xb0(%esp),%eax
mov    %eax,0xc(%esp)
lea    0xa0(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x5ebe(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xe0(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     19108 <__sprintf_chk@plt+0x17418>
mov    0xe0(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,0x78(%esp)
and    $0x2,%eax
mov    %eax,0x40(%esp)
jne    193b0 <__sprintf_chk@plt+0x176c0>
movl   $0x18,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x18,0x70(%esp)
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    0xb0(%esp),%esi
mov    0xb4(%esp),%edi
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   1b150 <__sprintf_chk@plt+0x19460>
or     %eax,%edx
jne    19108 <__sprintf_chk@plt+0x17418>
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
call   1b020 <__sprintf_chk@plt+0x19330>
mov    0x9c(%esp),%edi
mov    %edi,%edx
mov    %edi,0x88(%esp)
mov    0xe0(%esp),%edi
mov    (%edi),%edi
sub    %edi,%edx
mov    %edi,%ecx
mov    %edi,0x68(%esp)
mov    0xa0(%esp),%edi
mov    %edx,0x48(%esp)
sar    $0x1f,%edx
mov    %edx,0x4c(%esp)
mov    %edi,%edx
sub    %ecx,%edx
add    0x70(%esp),%edx
mov    %edi,0x8c(%esp)
xor    %edi,%edi
cmp    $0x1,%eax
mov    %edx,%esi
jle    19108 <__sprintf_chk@plt+0x17418>
mov    0xe0(%esp),%ebp
add    %ecx,%edx
add    $0x4,%esi
adc    $0x0,%edi
sub    $0x1,%eax
mov    %eax,0x3c(%esp)
mov    0x78(%esp),%eax
mov    %edx,0x18(%esp)
mov    0x8(%ebp),%ebp
mov    %esi,0x20(%esp)
and    $0x10,%eax
mov    %edi,0x24(%esp)
mov    %ebp,0x54(%esp)
mov    0xe0(%esp),%ebp
movl   $0x0,0x2c(%esp)
movl   $0x0,0x58(%esp)
movl   $0x0,0x50(%esp)
mov    0xc(%ebp),%ebp
mov    %eax,0x60(%esp)
mov    %ebp,0x28(%esp)
mov    0xa8(%esp),%ebp
mov    %ebp,0x6c(%esp)
mov    0xac(%esp),%ebp
mov    %ebp,0x44(%esp)
mov    0x30(%esp),%ebp
mov    %ebp,0x38(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edx
mov    0x24(%esp),%eax
test   %edx,%edx
je     193d0 <__sprintf_chk@plt+0x176e0>
cmp    %eax,0x28(%esp)
jbe    19478 <__sprintf_chk@plt+0x17788>
mov    0x60(%esp),%eax
test   %eax,%eax
je     19498 <__sprintf_chk@plt+0x177a8>
xor    %ecx,%ecx
xor    %eax,%eax
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
shld   $0x8,%eax,%edi
mov    %edi,%edx
movzbl 0x0(%ebp,%ecx,1),%ebp
add    $0x1,%ecx
or     %esi,%ebp
cmp    $0x4,%ecx
mov    %ebp,%eax
jne    19040 <__sprintf_chk@plt+0x17350>
xor    %edx,%edx
cmp    0x44(%esp),%edx
ja     19108 <__sprintf_chk@plt+0x17418>
jb     1907a <__sprintf_chk@plt+0x1738a>
cmp    0x6c(%esp),%eax
jae    19108 <__sprintf_chk@plt+0x17418>
add    0x48(%esp),%eax
adc    0x4c(%esp),%edx
cmp    0x28(%esp),%edx
jb     19096 <__sprintf_chk@plt+0x173a6>
jbe    19090 <__sprintf_chk@plt+0x173a0>
call   16990 <__sprintf_chk@plt+0x14ca0>
nop
cmp    0x54(%esp),%eax
jae    1908a <__sprintf_chk@plt+0x1739a>
add    0x68(%esp),%eax
mov    $0x6,%ecx
lea    -0x5e81(%ebx),%ebp
mov    %ebp,%edi
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    190c9 <__sprintf_chk@plt+0x173d9>
add    $0x6,%eax
mov    %eax,(%esp)
call   1a30 <strlen@plt>
mov    0x50(%esp),%edi
addl   $0x1,0x58(%esp)
lea    0x1(%edi,%eax,1),%eax
mov    %eax,0x50(%esp)
mov    0x38(%esp),%eax
add    %eax,0x18(%esp)
mov    0x30(%esp),%eax
addl   $0x1,0x2c(%esp)
mov    0x34(%esp),%edx
add    %eax,0x20(%esp)
mov    0x3c(%esp),%eax
adc    %edx,0x24(%esp)
cmp    %eax,0x2c(%esp)
jne    19010 <__sprintf_chk@plt+0x17320>
mov    0x58(%esp),%edi
mov    %ebp,0x80(%esp)
test   %edi,%edi
jne    19547 <__sprintf_chk@plt+0x17857>
nop
mov    0xe4(%esp),%eax
movl   $0x0,(%eax)
lea    0xb8(%esp),%eax
mov    %eax,0xc(%esp)
lea    0xa4(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x5eb6(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xe0(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     19538 <__sprintf_chk@plt+0x17848>
mov    0xa4(%esp),%ebp
test   %ebp,%ebp
je     19180 <__sprintf_chk@plt+0x17490>
mov    0xbc(%esp),%edx
mov    0xb8(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
je     19180 <__sprintf_chk@plt+0x17490>
cmpb   $0x0,0x0(%ebp)
jne    191b6 <__sprintf_chk@plt+0x174c6>
cmp    $0x0,%edx
ja     19199 <__sprintf_chk@plt+0x174a9>
cmp    $0x1,%eax
ja     19199 <__sprintf_chk@plt+0x174a9>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
add    $0xcc,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,%ecx
xor    $0x1,%ecx
or     %edx,%ecx
je     19180 <__sprintf_chk@plt+0x17490>
add    $0x1,%ebp
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0xb8(%esp)
mov    %edx,0xbc(%esp)
cmpb   $0x0,0x0(%ebp)
je     19190 <__sprintf_chk@plt+0x174a0>
mov    %edx,0x20(%esp)
cmpl   $0x0,0x20(%esp)
mov    %eax,0x38(%esp)
jbe    19528 <__sprintf_chk@plt+0x17838>
mov    %ebp,%ecx
mov    $0x1,%esi
xor    %edi,%edi
movl   $0x0,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x28(%esp)
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    %edi,%edx
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmpb   $0x0,(%ecx)
jne    1921c <__sprintf_chk@plt+0x1752c>
xor    0x28(%esp),%edx
xor    0x18(%esp),%eax
or     %eax,%edx
je     194e0 <__sprintf_chk@plt+0x177f0>
addl   $0x1,0x2c(%esp)
mov    %esi,0x18(%esp)
mov    %edi,0x28(%esp)
mov    %esi,%eax
add    $0x1,%ecx
mov    %edi,%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    0x20(%esp),%edi
jbe    19400 <__sprintf_chk@plt+0x17710>
mov    0x38(%esp),%eax
mov    0x2c(%esp),%esi
lea    -0x1(%ebp,%eax,1),%edi
cmpb   $0x1,(%edi)
mov    %edi,0x50(%esp)
sbb    $0xffffffff,%esi
shl    $0x4,%esi
lea    0x1(%esi,%eax,1),%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
mov    0xe4(%esp),%edi
test   %eax,%eax
mov    %eax,0x44(%esp)
mov    %eax,(%edi)
je     19a7c <__sprintf_chk@plt+0x17d8c>
add    0x44(%esp),%esi
xor    %eax,%eax
xor    %ecx,%ecx
xor    %edi,%edi
movl   $0x0,0x3c(%esp)
mov    %esi,0x40(%esp)
mov    $0x1,%esi
movl   $0x0,0x2c(%esp)
mov    %ebp,0x28(%esp)
mov    %eax,0x18(%esp)
mov    %ecx,0x30(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%ecx
mov    %esi,%eax
mov    %edi,%edx
mov    0x18(%esp),%ebp
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
cmpb   $0x0,(%ecx,%ebp,1)
jne    19332 <__sprintf_chk@plt+0x17642>
mov    0x30(%esp),%ecx
mov    0x2c(%esp),%ebp
xor    %edx,%ecx
xor    %ebp,%eax
or     %eax,%ecx
je     194d0 <__sprintf_chk@plt+0x177e0>
mov    0x18(%esp),%edx
mov    %ebp,%ecx
mov    0x3c(%esp),%eax
sub    %ebp,%edx
mov    0x40(%esp),%ebp
shl    $0x4,%eax
add    0x44(%esp),%eax
mov    %edx,0x2c(%esp)
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x47,0x8(%eax)
mov    %ebp,0xc(%eax)
mov    0x28(%esp),%eax
mov    %edx,0x8(%esp)
mov    %ebp,(%esp)
add    %ecx,%eax
mov    %eax,0x4(%esp)
call   1810 <memcpy@plt>
mov    0x2c(%esp),%edx
addl   $0x1,0x3c(%esp)
mov    %esi,0x2c(%esp)
lea    0x1(%ebp,%edx,1),%eax
movb   $0x0,0x0(%ebp,%edx,1)
mov    %eax,0x40(%esp)
mov    %edi,0x30(%esp)
mov    %esi,%eax
mov    %edi,%edx
addl   $0x1,0x18(%esp)
add    $0x1,%eax
adc    $0x0,%edx
cmp    0x20(%esp),%edi
jbe    19418 <__sprintf_chk@plt+0x17728>
mov    0x50(%esp),%eax
mov    0x28(%esp),%ebp
mov    0x3c(%esp),%esi
cmpb   $0x0,(%eax)
je     19182 <__sprintf_chk@plt+0x17492>
mov    0x2c(%esp),%ecx
mov    %esi,%eax
add    $0x1,%esi
mov    0x38(%esp),%edi
shl    $0x4,%eax
mov    0x40(%esp),%edx
add    0x44(%esp),%eax
add    %ecx,%ebp
sub    %ecx,%edi
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x47,0x8(%eax)
mov    %edx,0xc(%eax)
mov    %ebp,0x4(%esp)
mov    %edx,%ebp
mov    %edi,0x8(%esp)
mov    %edx,(%esp)
call   1810 <memcpy@plt>
movb   $0x0,0x0(%ebp,%edi,1)
jmp    19182 <__sprintf_chk@plt+0x17492>
nop
movl   $0x10,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x10,0x70(%esp)
jmp    18ef6 <__sprintf_chk@plt+0x17206>
lea    0x0(%esi),%esi
cmp    %eax,0x28(%esp)
jae    19430 <__sprintf_chk@plt+0x17740>
lea    -0x5e63(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5eeb(%ebx),%eax
movl   $0x8e,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
jb     1940c <__sprintf_chk@plt+0x1771c>
cmp    0x38(%esp),%esi
jae    19233 <__sprintf_chk@plt+0x17543>
mov    %eax,%esi
mov    %edx,%edi
jmp    191f0 <__sprintf_chk@plt+0x17500>
lea    0x0(%esi),%esi
jb     19426 <__sprintf_chk@plt+0x17736>
cmp    0x38(%esp),%esi
xchg   %ax,%ax
jae    1934b <__sprintf_chk@plt+0x1765b>
mov    %eax,%esi
mov    %edx,%edi
jmp    192a0 <__sprintf_chk@plt+0x175b0>
nop
ja     1943c <__sprintf_chk@plt+0x1774c>
mov    0x20(%esp),%eax
cmp    %eax,0x54(%esp)
jb     193d6 <__sprintf_chk@plt+0x176e6>
mov    0x60(%esp),%eax
test   %eax,%eax
je     194f0 <__sprintf_chk@plt+0x17800>
xor    %ecx,%ecx
xor    %eax,%eax
xor    %edx,%edx
xchg   %ax,%ax
mov    0x18(%esp),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
shld   $0x8,%eax,%edi
mov    %edi,%edx
movzbl 0x0(%ebp,%ecx,1),%ebp
add    $0x1,%ecx
or     %esi,%ebp
cmp    $0x4,%ecx
mov    %ebp,%eax
jne    19450 <__sprintf_chk@plt+0x17760>
jmp    19062 <__sprintf_chk@plt+0x17372>
nop
jb     193d6 <__sprintf_chk@plt+0x176e6>
mov    0x20(%esp),%eax
cmp    %eax,0x54(%esp)
jb     193d6 <__sprintf_chk@plt+0x176e6>
mov    0x60(%esp),%eax
test   %eax,%eax
jne    19036 <__sprintf_chk@plt+0x17346>
mov    $0x4,%ecx
xor    %eax,%eax
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
shld   $0x8,%eax,%edi
mov    %edi,%edx
movzbl -0x1(%ebp,%ecx,1),%ebp
or     %esi,%ebp
sub    $0x1,%ecx
mov    %ebp,%eax
jne    194a8 <__sprintf_chk@plt+0x177b8>
jmp    19062 <__sprintf_chk@plt+0x17372>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x2c(%esp)
mov    %edi,0x30(%esp)
jmp    19332 <__sprintf_chk@plt+0x17642>
lea    0x0(%esi),%esi
mov    %esi,0x18(%esp)
mov    %edi,0x28(%esp)
jmp    1921c <__sprintf_chk@plt+0x1752c>
lea    0x0(%esi),%esi
mov    $0x4,%ecx
xor    %eax,%eax
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
shld   $0x8,%eax,%edi
mov    %edi,%edx
movzbl -0x1(%ebp,%ecx,1),%ebp
or     %esi,%ebp
sub    $0x1,%ecx
mov    %ebp,%eax
jne    19500 <__sprintf_chk@plt+0x17810>
jmp    19062 <__sprintf_chk@plt+0x17372>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x38(%esp)
jbe    19180 <__sprintf_chk@plt+0x17490>
jmp    191c9 <__sprintf_chk@plt+0x174d9>
add    $0xcc,%esp
mov    %eax,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x58(%esp),%esi
mov    0x50(%esp),%eax
shl    $0x4,%esi
add    %esi,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
mov    0xe4(%esp),%edi
test   %eax,%eax
mov    %eax,0x84(%esp)
mov    %eax,(%edi)
je     19a7c <__sprintf_chk@plt+0x17d8c>
mov    0xe0(%esp),%eax
mov    0x88(%esp),%edx
mov    0x8c(%esp),%edi
add    0x84(%esp),%esi
mov    (%eax),%eax
movl   $0x0,0x44(%esp)
mov    %esi,0x68(%esp)
movl   $0x0,0x20(%esp)
sub    %eax,%edx
sub    %eax,%edi
mov    0x70(%esp),%eax
mov    %edx,0x58(%esp)
sar    $0x1f,%edx
mov    %edx,0x5c(%esp)
movl   $0x0,0x48(%esp)
add    %edi,%eax
xor    %edi,%edi
mov    %eax,%esi
mov    %edi,%ecx
mov    %edi,0x1c(%esp)
mov    %esi,%edi
mov    %ecx,%ebp
add    $0x8,%edi
adc    $0x0,%ebp
mov    %edi,0x70(%esp)
mov    %esi,%edi
add    $0xc,%edi
mov    %ebp,0x74(%esp)
mov    %ecx,%ebp
adc    $0x0,%ebp
mov    %ebp,0x7c(%esp)
mov    0x28(%esp),%ebp
lea    0x4(%eax),%edx
mov    %eax,0x50(%esp)
mov    0x78(%esp),%eax
mov    %edx,0x40(%esp)
mov    %esi,0x18(%esp)
mov    %edi,0x78(%esp)
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
add    $0x4,%esi
adc    $0x0,%edi
test   $0x2,%al
je     19858 <__sprintf_chk@plt+0x17b68>
cmp    %edi,%ebp
jb     193d6 <__sprintf_chk@plt+0x176e6>
ja     19636 <__sprintf_chk@plt+0x17946>
cmp    %esi,0x54(%esp)
lea    0x0(%esi,%eiz,1),%esi
jb     193d6 <__sprintf_chk@plt+0x176e6>
mov    0xe0(%esp),%edi
mov    0x50(%esp),%esi
mov    (%edi),%edi
add    %edi,%esi
and    $0x10,%eax
mov    %edi,0x2c(%esp)
mov    %eax,0x60(%esp)
je     19a40 <__sprintf_chk@plt+0x17d50>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x6c(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    19668 <__sprintf_chk@plt+0x17978>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    0x6c(%esp),%ebp
mov    %edi,0x28(%esp)
add    $0x8,%eax
adc    $0x0,%edx
cmp    %edx,%ebp
jb     193d6 <__sprintf_chk@plt+0x176e6>
ja     196b3 <__sprintf_chk@plt+0x179c3>
cmp    %eax,0x54(%esp)
jb     193d6 <__sprintf_chk@plt+0x176e6>
mov    0x60(%esp),%edi
mov    0x2c(%esp),%esi
add    0x40(%esp),%esi
test   %edi,%edi
je     19a00 <__sprintf_chk@plt+0x17d10>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x6c(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x60(%esp)
mov    %edx,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    196e0 <__sprintf_chk@plt+0x179f0>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ebp,0x64(%esp)
mov    0x6c(%esp),%ebp
mov    %edi,0x60(%esp)
add    $0xd,%eax
adc    $0x0,%edx
cmp    %edx,%ebp
jb     193d6 <__sprintf_chk@plt+0x176e6>
ja     1972f <__sprintf_chk@plt+0x17a3f>
cmp    %eax,0x54(%esp)
jb     193d6 <__sprintf_chk@plt+0x176e6>
mov    0x2c(%esp),%eax
add    0x44(%esp),%eax
add    0x78(%esp),%eax
movzbl (%eax),%eax
mov    %al,0x6c(%esp)
mov    0x28(%esp),%esi
xor    %edi,%edi
add    0x58(%esp),%esi
adc    0x5c(%esp),%edi
cmp    %ebp,%edi
ja     1908a <__sprintf_chk@plt+0x1739a>
jb     19764 <__sprintf_chk@plt+0x17a74>
cmp    0x54(%esp),%esi
jae    1908a <__sprintf_chk@plt+0x1739a>
mov    0x2c(%esp),%eax
mov    $0x6,%ecx
mov    0x80(%esp),%edi
add    %esi,%eax
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    197fa <__sprintf_chk@plt+0x17b0a>
lea    0x6(%eax),%edi
movzbl 0x6c(%esp),%eax
mov    0x48(%esp),%ecx
mov    0x64(%esp),%edx
shr    $0x4,%al
mov    %eax,%esi
mov    0x60(%esp),%eax
shl    $0x4,%ecx
add    0x84(%esp),%ecx
mov    %edx,0x4(%ecx)
mov    %esi,%edx
mov    %eax,(%ecx)
xor    %eax,%eax
cmp    $0x2,%dl
ja     197c4 <__sprintf_chk@plt+0x17ad4>
movzbl %dl,%edx
movzbl -0x5e84(%ebx,%edx,1),%eax
mov    0x68(%esp),%ebp
mov    %eax,0x8(%ecx)
mov    %ebp,0xc(%ecx)
mov    %edi,(%esp)
call   1a30 <strlen@plt>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%esi
call   1810 <memcpy@plt>
lea    0x1(%ebp,%esi,1),%eax
addl   $0x1,0x48(%esp)
movb   $0x0,0x0(%ebp,%esi,1)
mov    %eax,0x68(%esp)
mov    0x30(%esp),%eax
add    %eax,0x18(%esp)
mov    0x34(%esp),%edx
mov    0x38(%esp),%eax
adc    %edx,0x1c(%esp)
add    %eax,0x44(%esp)
add    %eax,0x40(%esp)
add    %eax,0x50(%esp)
addl   $0x1,0x20(%esp)
mov    0x3c(%esp),%eax
cmp    %eax,0x20(%esp)
je     19a8a <__sprintf_chk@plt+0x17d9a>
mov    0xe0(%esp),%edi
mov    0xe0(%esp),%eax
mov    0x8(%edi),%edi
mov    0x10(%eax),%eax
mov    %edi,0x54(%esp)
mov    0xe0(%esp),%edi
mov    0xc(%edi),%ebp
jmp    19608 <__sprintf_chk@plt+0x17918>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
ja     193d6 <__sprintf_chk@plt+0x176e6>
jb     1986c <__sprintf_chk@plt+0x17b7c>
cmp    0x54(%esp),%esi
ja     193d6 <__sprintf_chk@plt+0x176e6>
mov    0xe0(%esp),%edi
mov    0x50(%esp),%esi
mov    (%edi),%edi
add    %edi,%esi
and    $0x10,%eax
mov    %edi,0x2c(%esp)
mov    %eax,0x60(%esp)
je     199c0 <__sprintf_chk@plt+0x17cd0>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x6c(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
xchg   %ax,%ax
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    198a0 <__sprintf_chk@plt+0x17bb0>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    0x6c(%esp),%ebp
mov    %edi,0x28(%esp)
add    $0x10,%eax
adc    $0x0,%edx
cmp    %ebp,%edx
ja     193d6 <__sprintf_chk@plt+0x176e6>
jb     198eb <__sprintf_chk@plt+0x17bfb>
cmp    0x54(%esp),%eax
ja     193d6 <__sprintf_chk@plt+0x176e6>
mov    0x60(%esp),%eax
mov    0x44(%esp),%esi
add    0x70(%esp),%esi
add    0x2c(%esp),%esi
test   %eax,%eax
je     19980 <__sprintf_chk@plt+0x17c90>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x6c(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x60(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x60(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x8,%ecx
mov    %esi,%edi
jne    19918 <__sprintf_chk@plt+0x17c28>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ebp,0x64(%esp)
mov    0x6c(%esp),%ebp
mov    %edi,0x60(%esp)
add    $0x5,%eax
adc    $0x0,%edx
cmp    %edx,%ebp
jb     193d6 <__sprintf_chk@plt+0x176e6>
ja     19967 <__sprintf_chk@plt+0x17c77>
cmp    %eax,0x54(%esp)
jb     193d6 <__sprintf_chk@plt+0x176e6>
mov    0x2c(%esp),%eax
mov    0x40(%esp),%edi
movzbl (%eax,%edi,1),%eax
mov    %al,0x6c(%esp)
jmp    19742 <__sprintf_chk@plt+0x17a52>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x6c(%esp)
mov    $0x8,%ecx
mov    %eax,%edi
mov    %esi,0x60(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x60(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    19998 <__sprintf_chk@plt+0x17ca8>
jmp    19939 <__sprintf_chk@plt+0x17c49>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x6c(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    199d8 <__sprintf_chk@plt+0x17ce8>
jmp    198c1 <__sprintf_chk@plt+0x17bd1>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x6c(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x60(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x60(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    19a18 <__sprintf_chk@plt+0x17d28>
jmp    19701 <__sprintf_chk@plt+0x17a11>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x6c(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x28(%esp)
mov    %edx,%ebp
lea    0x0(%esi),%esi
mov    0x28(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    19a58 <__sprintf_chk@plt+0x17d68>
jmp    19689 <__sprintf_chk@plt+0x17999>
call   1ad0 <__errno_location@plt>
mov    (%eax),%esi
neg    %esi
jmp    19182 <__sprintf_chk@plt+0x17492>
mov    0x48(%esp),%esi
jmp    19182 <__sprintf_chk@plt+0x17492>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xd557,%ebx
sub    $0x13c,%esp
lea    0x118(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x10c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x672c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x150(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     1ad80 <__sprintf_chk@plt+0x19090>
mov    0x150(%esp),%eax
movl   $0x40,0xa4(%esp)
00
mov    0x10(%eax),%eax
and    $0x2,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
mov    %eax,0x90(%esp)
andl   $0x4,0x90(%esp)
addl   $0x4,0x90(%esp)
testb  $0x3f,0x118(%esp)
jne    1a000 <__sprintf_chk@plt+0x18310>
lea    0x120(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x110(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x5ec6(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x150(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     19fcc <__sprintf_chk@plt+0x182dc>
lea    0x128(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x114(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x5ebe(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x150(%esp),%eax
mov    %eax,(%esp)
call   17540 <__sprintf_chk@plt+0x15850>
test   %eax,%eax
js     19fcc <__sprintf_chk@plt+0x182dc>
mov    0x150(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,0xa0(%esp)
and    $0x2,%eax
mov    %eax,0x40(%esp)
jne    19fe0 <__sprintf_chk@plt+0x182f0>
movl   $0x18,0x28(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x18,0xe8(%esp)
00
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
mov    0x128(%esp),%esi
mov    0x12c(%esp),%edi
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   1b150 <__sprintf_chk@plt+0x19460>
or     %eax,%edx
jne    19fcc <__sprintf_chk@plt+0x182dc>
mov    0x118(%esp),%eax
mov    0x11c(%esp),%edx
mov    %eax,0xbc(%esp)
mov    %edx,0x80(%esp)
or     %eax,%edx
je     1aab0 <__sprintf_chk@plt+0x18dc0>
mov    0xa4(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0xbc(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
mov    %eax,0x4(%esp)
call   1b020 <__sprintf_chk@plt+0x19330>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0xf0(%esp)
call   1ce0 <calloc@plt>
test   %eax,%eax
mov    %eax,0xc4(%esp)
je     1ae51 <__sprintf_chk@plt+0x19161>
mov    0x150(%esp),%eax
mov    0x2c(%esp),%edx
movzwl 0x38(%eax),%eax
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0xc(%esp)
cmp    $0x2b,%ax
sete   0x6b(%esp)
cmp    $0x2,%ax
sete   %al
or     %al,0x6b(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
call   1b020 <__sprintf_chk@plt+0x19330>
mov    0x150(%esp),%edx
mov    0x110(%esp),%edi
mov    (%edx),%ecx
mov    %edi,0xf4(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,%ebp
mov    %eax,(%esp)
sub    %ecx,%edi
mov    %edi,%edx
sar    $0x1f,%edx
mov    %edi,0x98(%esp)
mov    0x114(%esp),%edi
mov    %edx,0x9c(%esp)
mov    0xe8(%esp),%edx
mov    %eax,0xec(%esp)
mov    %ecx,0x6c(%esp)
mov    %edi,0xf8(%esp)
sub    %ecx,%edi
add    %edi,%edx
xor    %edi,%edi
mov    %edx,0xa8(%esp)
mov    %edx,%esi
mov    %eax,0xfc(%esp)
call   1ce0 <calloc@plt>
test   %eax,%eax
mov    %eax,0xc0(%esp)
je     1ae5b <__sprintf_chk@plt+0x1916b>
cmp    $0x1,%ebp
jle    1ae0a <__sprintf_chk@plt+0x1911a>
mov    0x120(%esp),%eax
cmpl   $0x1,0x40(%esp)
mov    0x6c(%esp),%ecx
movl   $0x0,0xd4(%esp)
00
mov    %eax,0xe4(%esp)
mov    0x124(%esp),%eax
mov    %eax,0x94(%esp)
sbb    %eax,%eax
xor    %edx,%edx
mov    %eax,0xac(%esp)
mov    0x10c(%esp),%eax
andl   $0x4,0xac(%esp)
addl   $0x4,0xac(%esp)
mov    0xac(%esp),%ebp
sub    %ecx,%eax
mov    %eax,0x78(%esp)
mov    %edx,0x7c(%esp)
mov    %ebp,0xd0(%esp)
add    0xd0(%esp),%eax
adc    0xd4(%esp),%edx
mov    %eax,0xb0(%esp)
mov    %esi,%eax
mov    %edx,0xb4(%esp)
mov    0x28(%esp),%edx
add    $0x6,%eax
mov    %edx,0x54(%esp)
mov    %eax,%edx
mov    %esi,%eax
add    %ecx,%edx
mov    %edx,0x50(%esp)
mov    0x28(%esp),%edx
mov    %edx,0x58(%esp)
mov    0xa8(%esp),%edx
add    %ecx,%edx
add    $0x4,%eax
mov    %edx,0x10(%esp)
mov    %edi,%edx
mov    %eax,0xc8(%esp)
mov    %esi,%eax
adc    $0x0,%edx
add    $0xe,%eax
mov    %eax,%ebp
add    %ecx,%ebp
mov    0xec(%esp),%ecx
mov    %edx,0xcc(%esp)
mov    %ebp,0x3c(%esp)
sub    $0x1,%ecx
mov    %ecx,0x48(%esp)
mov    0xc8(%esp),%edx
mov    0xd0(%esp),%edi
mov    0xd4(%esp),%ebp
mov    0x78(%esp),%eax
mov    %edx,0x20(%esp)
mov    0x150(%esp),%edx
add    $0x40,%edi
mov    0xcc(%esp),%ecx
adc    $0x0,%ebp
mov    %edi,0xd8(%esp)
mov    0x8(%edx),%edx
add    %eax,0xd8(%esp)
mov    %ebp,0xdc(%esp)
mov    %edx,0x5c(%esp)
mov    0x150(%esp),%edx
mov    %ecx,0x24(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0xb8(%esp)
00
mov    0xc(%edx),%edx
movl   $0x0,0x88(%esp)
00
mov    %edx,0x18(%esp)
lea    0xc(%esi),%edx
mov    %edx,0xe0(%esp)
mov    0x7c(%esp),%edx
adc    %edx,0xdc(%esp)
lea    0x0(%esi),%esi
mov    0x40(%esp),%edx
mov    0x18(%esp),%eax
test   %edx,%edx
je     1a028 <__sprintf_chk@plt+0x18338>
cmp    %eax,0x24(%esp)
jae    1a200 <__sprintf_chk@plt+0x18510>
testb  $0x10,0xa0(%esp)
je     1a222 <__sprintf_chk@plt+0x18532>
xor    %ecx,%ecx
xor    %eax,%eax
xor    %edx,%edx
xchg   %ax,%ax
mov    0x10(%esp),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
shld   $0x8,%eax,%edi
mov    %edi,%edx
movzbl 0x0(%ebp,%ecx,1),%ebp
add    $0x1,%ecx
or     %esi,%ebp
cmp    $0x4,%ecx
mov    %ebp,%eax
jne    19ef0 <__sprintf_chk@plt+0x18200>
mov    0x20(%esp),%eax
mov    %ebp,%esi
mov    0x24(%esp),%edx
add    $0xc,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
jbe    1ae74 <__sprintf_chk@plt+0x19184>
mov    0x3c(%esp),%eax
movzbl (%eax),%ecx
movzbl 0x1(%eax),%eax
shl    $0x8,%ecx
or     %eax,%ecx
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0x9,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
ja     19f66 <__sprintf_chk@plt+0x18276>
cmp    %eax,0x5c(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
mov    0x10(%esp),%eax
mov    0xe0(%esp),%edx
sub    0xa8(%esp),%eax
test   %cx,%cx
movzbl (%eax,%edx,1),%eax
jne    1a118 <__sprintf_chk@plt+0x18428>
cmpb   $0x0,0x6b(%esp)
je     19f97 <__sprintf_chk@plt+0x182a7>
and    $0xf,%eax
cmp    $0xd,%al
je     1a118 <__sprintf_chk@plt+0x18428>
xor    %edx,%edx
mov    %esi,%eax
cmp    0x94(%esp),%edx
jb     1a5cd <__sprintf_chk@plt+0x188dd>
jbe    1a5c0 <__sprintf_chk@plt+0x188d0>
mov    0xc4(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    $0xffffffea,%eax
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x10,0x28(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x10,0xe8(%esp)
00
jmp    19bd5 <__sprintf_chk@plt+0x17ee5>
movl   $0x0,0x10c(%esp)
00
movl   $0x0,0x118(%esp)
00
movl   $0x0,0x11c(%esp)
00
jmp    19b2e <__sprintf_chk@plt+0x17e3e>
xchg   %ax,%ax
cmp    %eax,0x24(%esp)
jbe    1a060 <__sprintf_chk@plt+0x18370>
xchg   %ax,%ax
lea    -0x5e63(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5eeb(%ebx),%eax
movl   $0x8e,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
lea    0x0(%esi),%esi
jb     1a06c <__sprintf_chk@plt+0x1837c>
mov    0x5c(%esp),%eax
cmp    %eax,0x20(%esp)
ja     1a030 <__sprintf_chk@plt+0x18340>
testb  $0x10,0xa0(%esp)
je     1a288 <__sprintf_chk@plt+0x18598>
xor    %ecx,%ecx
xor    %eax,%eax
xor    %edx,%edx
mov    0x10(%esp),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
shld   $0x8,%eax,%edi
mov    %edi,%edx
movzbl 0x0(%ebp,%ecx,1),%ebp
add    $0x1,%ecx
or     %esi,%ebp
cmp    $0x4,%ecx
mov    %ebp,%eax
jne    1a080 <__sprintf_chk@plt+0x18390>
mov    0x20(%esp),%eax
mov    %ebp,%esi
mov    0x24(%esp),%edx
add    $0x4,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
jbe    1ae95 <__sprintf_chk@plt+0x191a5>
mov    0x50(%esp),%eax
movzbl (%eax),%ecx
movzbl 0x1(%eax),%eax
shl    $0x8,%ecx
or     %eax,%ecx
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
ja     1a0f6 <__sprintf_chk@plt+0x18406>
cmp    %eax,0x5c(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
mov    0x10(%esp),%edx
mov    0xc8(%esp),%eax
sub    0xa8(%esp),%edx
test   %cx,%cx
movzbl (%edx,%eax,1),%eax
je     19f85 <__sprintf_chk@plt+0x18295>
lea    0x0(%esi),%esi
mov    0x54(%esp),%eax
mov    0x58(%esp),%edi
mov    0x28(%esp),%edx
addl   $0x1,0x38(%esp)
add    %eax,0x50(%esp)
add    %edi,0x10(%esp)
mov    0x2c(%esp),%ecx
add    %edx,0x20(%esp)
adc    %ecx,0x24(%esp)
add    %eax,0x3c(%esp)
mov    0x48(%esp),%eax
cmp    %eax,0x38(%esp)
jne    19ec0 <__sprintf_chk@plt+0x181d0>
mov    0xc4(%esp),%edi
test   %edi,%edi
je     1a338 <__sprintf_chk@plt+0x18648>
mov    0x10c(%esp),%eax
mov    0xf0(%esp),%ebp
sub    0x6c(%esp),%eax
cltd
test   %ebp,%ebp
jle    1a338 <__sprintf_chk@plt+0x18648>
mov    0x90(%esp),%ecx
add    %edi,%ebp
mov    %edi,%esi
xor    %edi,%edi
movl   $0x0,0x1c(%esp)
mov    %ebp,0x10(%esp)
mov    %ecx,0x18(%esp)
mov    0xa4(%esp),%ecx
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
lea    0x0(%esi),%esi
cmpb   $0x0,(%esi)
jne    1a329 <__sprintf_chk@plt+0x18639>
mov    0x150(%esp),%ebp
xor    %edx,%edx
mov    %edi,%eax
add    0x18(%esp),%eax
adc    0x1c(%esp),%edx
cmp    0xc(%ebp),%edx
jbe    1a2f0 <__sprintf_chk@plt+0x18600>
lea    0x0(%esi),%esi
lea    -0x5e56(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x5f3e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x5f25(%ebx),%eax
movl   $0xcf,0x8(%esp)
mov    %eax,(%esp)
call   1cc0 <__assert_fail@plt>
lea    0x0(%esi),%esi
ja     1a030 <__sprintf_chk@plt+0x18340>
mov    0x5c(%esp),%eax
cmp    %eax,0x20(%esp)
ja     1a030 <__sprintf_chk@plt+0x18340>
testb  $0x10,0xa0(%esp)
jne    19ee8 <__sprintf_chk@plt+0x181f8>
mov    $0x4,%ecx
xor    %eax,%eax
xor    %edx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
shld   $0x8,%eax,%edi
mov    %edi,%edx
movzbl -0x1(%ebp,%ecx,1),%ebp
or     %esi,%ebp
sub    $0x1,%ecx
mov    %ebp,%eax
jne    1a230 <__sprintf_chk@plt+0x18540>
mov    0x20(%esp),%eax
mov    %ebp,%esi
mov    0x24(%esp),%edx
add    $0xc,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
jbe    1ae85 <__sprintf_chk@plt+0x19195>
mov    0x3c(%esp),%eax
movzbl 0x1(%eax),%ecx
movzbl (%eax),%eax
shl    $0x8,%ecx
or     %eax,%ecx
jmp    19f42 <__sprintf_chk@plt+0x18252>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x4,%ecx
xor    %eax,%eax
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
shld   $0x8,%eax,%edi
mov    %edi,%edx
movzbl -0x1(%ebp,%ecx,1),%ebp
or     %esi,%ebp
sub    $0x1,%ecx
mov    %ebp,%eax
jne    1a298 <__sprintf_chk@plt+0x185a8>
mov    0x20(%esp),%eax
mov    %ebp,%esi
mov    0x24(%esp),%edx
add    $0x4,%eax
adc    $0x0,%edx
cmp    %edx,0x18(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
jbe    1aea5 <__sprintf_chk@plt+0x191b5>
mov    0x50(%esp),%eax
movzbl 0x1(%eax),%ecx
movzbl (%eax),%eax
shl    $0x8,%ecx
or     %eax,%ecx
jmp    1a0d2 <__sprintf_chk@plt+0x183e2>
lea    0x0(%esi,%eiz,1),%esi
jb     1a2fb <__sprintf_chk@plt+0x1860b>
cmp    0x8(%ebp),%eax
jae    1a1d0 <__sprintf_chk@plt+0x184e0>
add    0x6c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,(%esp)
call   1a30 <strlen@plt>
mov    0x88(%esp),%edx
addl   $0x1,0xb8(%esp)
mov    0x20(%esp),%ecx
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x88(%esp)
add    $0x1,%esi
add    %ecx,%edi
cmp    0x10(%esp),%esi
jne    1a1a8 <__sprintf_chk@plt+0x184b8>
mov    0xb8(%esp),%ebp
test   %ebp,%ebp
je     1adc0 <__sprintf_chk@plt+0x190d0>
mov    0xb8(%esp),%esi
mov    0x88(%esp),%eax
shl    $0x4,%esi
add    %esi,%eax
mov    %eax,(%esp)
call   1970 <malloc@plt>
mov    0x154(%esp),%edi
test   %eax,%eax
mov    %eax,0x5c(%esp)
mov    %eax,(%edi)
je     1ae25 <__sprintf_chk@plt+0x19135>
mov    0x150(%esp),%eax
mov    0xf4(%esp),%edx
mov    0xf8(%esp),%ecx
add    0x5c(%esp),%esi
mov    (%eax),%eax
mov    %esi,0x3c(%esp)
sub    %eax,%edx
sub    %eax,%ecx
mov    %edx,0x60(%esp)
sar    $0x1f,%edx
add    0xe8(%esp),%ecx
mov    %edx,0x64(%esp)
xor    %edx,%edx
cmpl   $0x1,0xec(%esp)
mov    %ecx,%eax
jle    1aacb <__sprintf_chk@plt+0x18ddb>
mov    0x28(%esp),%edi
mov    %edx,%ebp
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    %ecx,0x30(%esp)
mov    0xa0(%esp),%ecx
mov    %edi,0x40(%esp)
mov    0xfc(%esp),%edi
movl   $0x0,0x20(%esp)
movl   $0x1,0x18(%esp)
movl   $0x0,0x38(%esp)
sub    $0x1,%edi
mov    %edi,0x48(%esp)
mov    %eax,%edi
add    $0x6,%eax
adc    $0x0,%edx
mov    %eax,0x70(%esp)
mov    %edi,%eax
add    $0x4,%edi
mov    %edx,0x74(%esp)
mov    %eax,%esi
mov    %ebp,%edx
mov    %edi,0x78(%esp)
adc    $0x0,%ebp
mov    %edx,%edi
add    $0xe,%esi
adc    $0x0,%edi
mov    %esi,0x80(%esp)
mov    %eax,%esi
add    $0xc,%esi
mov    %edi,0x84(%esp)
mov    %edx,%edi
adc    $0x0,%edi
mov    %ebp,0x7c(%esp)
mov    %esi,0x88(%esp)
mov    %edi,0x8c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x150(%esp),%eax
mov    0x14(%esp),%edx
mov    0x8(%eax),%eax
mov    %eax,0x58(%esp)
mov    0x150(%esp),%eax
mov    0xc(%eax),%ebp
mov    0x10(%esp),%eax
add    $0x4,%eax
adc    $0x0,%edx
test   $0x2,%cl
je     1a858 <__sprintf_chk@plt+0x18b68>
cmp    %ebp,%edx
ja     1a030 <__sprintf_chk@plt+0x18340>
jb     1a49b <__sprintf_chk@plt+0x187ab>
cmp    0x58(%esp),%eax
ja     1a030 <__sprintf_chk@plt+0x18340>
mov    0x150(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x50(%esp)
add    0x30(%esp),%eax
and    $0x10,%ecx
mov    %ecx,0x6c(%esp)
mov    %eax,%esi
je     1aa40 <__sprintf_chk@plt+0x18d50>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x94(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x54(%esp)
mov    %edx,%ebp
mov    0x54(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    1a4d0 <__sprintf_chk@plt+0x187e0>
mov    0x10(%esp),%eax
mov    %edi,%esi
mov    0x14(%esp),%edx
mov    0x94(%esp),%ebp
add    $0x10,%eax
adc    $0x0,%edx
cmp    %ebp,%edx
ja     1a030 <__sprintf_chk@plt+0x18340>
jb     1a51c <__sprintf_chk@plt+0x1882c>
cmp    0x58(%esp),%eax
ja     1a030 <__sprintf_chk@plt+0x18340>
mov    0x6c(%esp),%edx
mov    0x20(%esp),%eax
add    0x80(%esp),%eax
add    0x50(%esp),%eax
test   %edx,%edx
jne    1aa80 <__sprintf_chk@plt+0x18d90>
movzbl 0x1(%eax),%ecx
movzbl (%eax),%eax
shl    $0x8,%ecx
or     %eax,%ecx
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
add    $0xd,%eax
adc    $0x0,%edx
cmp    %ebp,%edx
ja     1a030 <__sprintf_chk@plt+0x18340>
jb     1a565 <__sprintf_chk@plt+0x18875>
cmp    0x58(%esp),%eax
ja     1a030 <__sprintf_chk@plt+0x18340>
mov    0x50(%esp),%eax
add    0x20(%esp),%eax
add    0x88(%esp),%eax
movzbl (%eax),%eax
test   %cx,%cx
jne    1a815 <__sprintf_chk@plt+0x18b25>
cmpb   $0x0,0x6b(%esp)
jne    1a770 <__sprintf_chk@plt+0x18a80>
mov    0x150(%esp),%edx
xor    %edi,%edi
add    0x60(%esp),%esi
adc    0x64(%esp),%edi
cmp    %edi,0xc(%edx)
jb     1a1d0 <__sprintf_chk@plt+0x184e0>
ja     1a7a3 <__sprintf_chk@plt+0x18ab3>
cmp    %esi,0x8(%edx)
jbe    1a1d0 <__sprintf_chk@plt+0x184e0>
jmp    1a7a3 <__sprintf_chk@plt+0x18ab3>
lea    0x0(%esi,%eiz,1),%esi
cmp    0xe4(%esp),%esi
jae    19fae <__sprintf_chk@plt+0x182be>
add    0x98(%esp),%eax
adc    0x9c(%esp),%edx
cmp    0x18(%esp),%edx
jb     1a5f1 <__sprintf_chk@plt+0x18901>
ja     1a1d0 <__sprintf_chk@plt+0x184e0>
cmp    0x5c(%esp),%eax
jae    1a1d0 <__sprintf_chk@plt+0x184e0>
add    0x6c(%esp),%eax
cmpb   $0x0,(%eax)
mov    %eax,0x60(%esp)
je     1a118 <__sprintf_chk@plt+0x18428>
mov    %eax,(%esp)
call   1a30 <strlen@plt>
mov    0x88(%esp),%edi
addl   $0x1,0xb8(%esp)
lea    0x1(%edi,%eax,1),%eax
mov    %eax,0x88(%esp)
mov    0x80(%esp),%eax
or     0xbc(%esp),%eax
je     1a6ef <__sprintf_chk@plt+0x189ff>
mov    0xb4(%esp),%eax
cmp    %eax,0x18(%esp)
jb     1a1d0 <__sprintf_chk@plt+0x184e0>
ja     1a65c <__sprintf_chk@plt+0x1896c>
mov    0xb0(%esp),%eax
cmp    %eax,0x5c(%esp)
jbe    1a1d0 <__sprintf_chk@plt+0x184e0>
mov    0xb0(%esp),%eax
mov    0xb4(%esp),%edx
mov    0xd8(%esp),%edi
mov    0xdc(%esp),%ebp
mov    %eax,%esi
mov    0x78(%esp),%eax
mov    %edx,%ecx
mov    0x7c(%esp),%edx
cmp    %ecx,0x18(%esp)
movl   $0x0,0x30(%esp)
mov    %eax,0x70(%esp)
mov    %esi,%eax
mov    %edi,%esi
mov    %edx,0x74(%esp)
mov    %ebp,%edi
mov    %eax,%ebp
movl   $0x0,0x34(%esp)
jb     1a767 <__sprintf_chk@plt+0x18a77>
ja     1a6ba <__sprintf_chk@plt+0x189ca>
cmp    %ebp,0x5c(%esp)
jbe    1a767 <__sprintf_chk@plt+0x18a77>
add    0x6c(%esp),%ebp
mov    0x60(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1750 <strcmp@plt>
test   %eax,%eax
je     1a950 <__sprintf_chk@plt+0x18c60>
addl   $0x40,0x30(%esp)
adcl   $0x0,0x34(%esp)
mov    0x34(%esp),%eax
cmp    %eax,0x80(%esp)
ja     1a71d <__sprintf_chk@plt+0x18a2d>
jae    1a710 <__sprintf_chk@plt+0x18a20>
xor    %edi,%edi
xor    %ebp,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc0(%esp),%eax
mov    0x38(%esp),%edx
mov    %edi,0x8(%eax,%edx,8)
mov    %ebp,0xc(%eax,%edx,8)
jmp    1a118 <__sprintf_chk@plt+0x18428>
mov    0x30(%esp),%eax
cmp    %eax,0xbc(%esp)
jbe    1a6ef <__sprintf_chk@plt+0x189ff>
mov    0x30(%esp),%eax
add    0x78(%esp),%eax
mov    0x34(%esp),%edx
adc    0x7c(%esp),%edx
mov    %eax,0x70(%esp)
mov    %esi,%eax
add    $0x40,%eax
mov    %edx,0x74(%esp)
mov    %edi,%edx
adc    $0x0,%edx
cmp    %edi,0x18(%esp)
ja     1a755 <__sprintf_chk@plt+0x18a65>
jb     1a1d0 <__sprintf_chk@plt+0x184e0>
cmp    %esi,0x5c(%esp)
jbe    1a1d0 <__sprintf_chk@plt+0x184e0>
mov    %edi,%ecx
mov    %esi,%ebp
cmp    %ecx,0x18(%esp)
mov    %eax,%esi
mov    %edx,%edi
jae    1a6ae <__sprintf_chk@plt+0x189be>
xor    %ebp,%ebp
jmp    1a6be <__sprintf_chk@plt+0x189ce>
xchg   %ax,%ax
mov    %eax,%edx
and    $0xf,%edx
cmp    $0xd,%dl
je     1a815 <__sprintf_chk@plt+0x18b25>
mov    0x150(%esp),%edx
xor    %edi,%edi
add    0x60(%esp),%esi
adc    0x64(%esp),%edi
cmp    0xc(%edx),%edi
ja     1a1d0 <__sprintf_chk@plt+0x184e0>
jb     1a7a3 <__sprintf_chk@plt+0x18ab3>
cmp    0x8(%edx),%esi
jae    1a1d0 <__sprintf_chk@plt+0x184e0>
add    0x50(%esp),%esi
cmpb   $0x0,(%esi)
je     1a815 <__sprintf_chk@plt+0x18b25>
shr    $0x4,%al
cmp    $0x2,%al
sete   %al
movzbl %al,%eax
mov    %esi,(%esp)
lea    0x55(%eax,%eax,1),%ebp
call   1a30 <strlen@plt>
mov    0xc0(%esp),%edx
mov    0x18(%esp),%ecx
lea    (%edx,%ecx,8),%ecx
mov    %eax,%edi
mov    0x38(%esp),%eax
mov    (%ecx),%edx
mov    0x4(%ecx),%ecx
shl    $0x4,%eax
add    0x5c(%esp),%eax
mov    %edx,(%eax)
mov    0x3c(%esp),%edx
mov    %ecx,0x4(%eax)
mov    %ebp,0x8(%eax)
mov    %edx,0xc(%eax)
mov    %esi,0x4(%esp)
mov    %edx,%esi
mov    %edi,0x8(%esp)
mov    %edx,(%esp)
call   1810 <memcpy@plt>
lea    0x1(%esi,%edi,1),%eax
addl   $0x1,0x38(%esp)
movb   $0x0,(%esi,%edi,1)
mov    %eax,0x3c(%esp)
mov    0x28(%esp),%eax
add    %eax,0x10(%esp)
mov    0x2c(%esp),%edx
mov    0x40(%esp),%eax
adc    %edx,0x14(%esp)
add    %eax,0x20(%esp)
add    %eax,0x30(%esp)
mov    0x48(%esp),%eax
cmp    %eax,0x18(%esp)
je     1aad8 <__sprintf_chk@plt+0x18de8>
mov    0x150(%esp),%eax
addl   $0x1,0x18(%esp)
mov    0x10(%eax),%ecx
jmp    1a458 <__sprintf_chk@plt+0x18768>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edx
ja     1a030 <__sprintf_chk@plt+0x18340>
jb     1a86c <__sprintf_chk@plt+0x18b7c>
cmp    0x58(%esp),%eax
ja     1a030 <__sprintf_chk@plt+0x18340>
mov    0x150(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x50(%esp)
add    0x30(%esp),%eax
and    $0x10,%ecx
mov    %ecx,0x6c(%esp)
mov    %eax,%esi
je     1aa00 <__sprintf_chk@plt+0x18d10>
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x94(%esp)
xor    %ecx,%ecx
mov    %eax,%edi
mov    %esi,0x54(%esp)
mov    %edx,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl (%esi,%ecx,1),%esi
add    $0x1,%ecx
or     %eax,%esi
cmp    $0x4,%ecx
mov    %esi,%edi
jne    1a8a8 <__sprintf_chk@plt+0x18bb8>
mov    0x10(%esp),%eax
mov    %edi,%esi
mov    0x14(%esp),%edx
mov    0x94(%esp),%ebp
add    $0x8,%eax
adc    $0x0,%edx
cmp    %ebp,%edx
ja     1a030 <__sprintf_chk@plt+0x18340>
jb     1a8f4 <__sprintf_chk@plt+0x18c04>
cmp    0x58(%esp),%eax
ja     1a030 <__sprintf_chk@plt+0x18340>
mov    0x6c(%esp),%edx
mov    0x20(%esp),%eax
add    0x70(%esp),%eax
add    0x50(%esp),%eax
test   %edx,%edx
jne    1aa98 <__sprintf_chk@plt+0x18da8>
movzbl 0x1(%eax),%ecx
movzbl (%eax),%eax
shl    $0x8,%ecx
or     %eax,%ecx
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
add    $0x5,%eax
adc    $0x0,%edx
cmp    %ebp,%edx
ja     1a030 <__sprintf_chk@plt+0x18340>
jb     1a93a <__sprintf_chk@plt+0x18c4a>
cmp    0x58(%esp),%eax
ja     1a030 <__sprintf_chk@plt+0x18340>
mov    0x50(%esp),%eax
add    0x20(%esp),%eax
add    0x78(%esp),%eax
movzbl (%eax),%eax
jmp    1a577 <__sprintf_chk@plt+0x18887>
xchg   %ax,%ax
mov    0xd0(%esp),%eax
mov    0xd4(%esp),%edx
add    0x70(%esp),%eax
adc    0x74(%esp),%edx
cmp    %edx,0x18(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
ja     1a97c <__sprintf_chk@plt+0x18c8c>
cmp    %eax,0x5c(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
mov    0x70(%esp),%ecx
add    0x6c(%esp),%ecx
testb  $0x10,0xa0(%esp)
je     1ad28 <__sprintf_chk@plt+0x19038>
mov    0xac(%esp),%eax
xor    %edi,%edi
xor    %ebp,%ebp
mov    %ebp,%edx
add    %ecx,%eax
mov    %eax,0x60(%esp)
mov    %edi,%eax
nop
movzbl (%ecx),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
add    $0x1,%ecx
shld   $0x8,%eax,%edi
mov    %edi,%edx
or     %esi,%ebp
cmp    0x60(%esp),%ecx
mov    %ebp,%eax
jne    1a9a8 <__sprintf_chk@plt+0x18cb8>
mov    %ebp,%edi
mov    %edx,%ebp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
shrd   $0x6,%edx,%eax
test   %eax,%eax
js     1a6f8 <__sprintf_chk@plt+0x18a08>
mov    0xc4(%esp),%edx
test   %edx,%edx
je     1a6f8 <__sprintf_chk@plt+0x18a08>
mov    0xc4(%esp),%edx
movb   $0x1,(%edx,%eax,1)
jmp    1a6f8 <__sprintf_chk@plt+0x18a08>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x94(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x54(%esp)
mov    %edx,%ebp
mov    0x54(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    1aa18 <__sprintf_chk@plt+0x18d28>
jmp    1a8c9 <__sprintf_chk@plt+0x18bd9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,0x94(%esp)
mov    $0x4,%ecx
mov    %eax,%edi
mov    %esi,0x54(%esp)
mov    %edx,%ebp
mov    0x54(%esp),%esi
mov    %edi,%eax
mov    %ebp,%edx
shl    $0x8,%eax
shld   $0x8,%edi,%edx
mov    %edx,%ebp
movzbl -0x1(%esi,%ecx,1),%esi
or     %eax,%esi
sub    $0x1,%ecx
mov    %esi,%edi
jne    1aa58 <__sprintf_chk@plt+0x18d68>
jmp    1a4f1 <__sprintf_chk@plt+0x18801>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%ecx
movzbl 0x1(%eax),%eax
shl    $0x8,%ecx
or     %eax,%ecx
jmp    1a543 <__sprintf_chk@plt+0x18853>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%ecx
movzbl 0x1(%eax),%eax
shl    $0x8,%ecx
or     %eax,%ecx
jmp    1a918 <__sprintf_chk@plt+0x18c28>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xc4(%esp)
00
movl   $0x0,0xf0(%esp)
00
jmp    19c7e <__sprintf_chk@plt+0x17f8e>
movl   $0x0,0x38(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0xc4(%esp),%edi
test   %edi,%edi
je     1ae01 <__sprintf_chk@plt+0x19111>
mov    0x150(%esp),%edx
mov    0x10c(%esp),%eax
sub    (%edx),%eax
mov    0xf0(%esp),%edx
mov    %eax,0x40(%esp)
sar    $0x1f,%eax
mov    %eax,0x44(%esp)
test   %edx,%edx
jle    1acbe <__sprintf_chk@plt+0x18fce>
mov    %edi,%eax
mov    %edi,%ebp
mov    %edx,%edi
add    %eax,%edi
mov    0x90(%esp),%eax
mov    %edi,0x20(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x4c(%esp)
mov    %eax,0x48(%esp)
nop
cmpb   $0x0,0x0(%ebp)
jne    1aca6 <__sprintf_chk@plt+0x18fb6>
mov    0x150(%esp),%eax
xor    %ecx,%ecx
mov    0x18(%esp),%edx
mov    0x48(%esp),%esi
add    0x40(%esp),%edx
mov    0x4c(%esp),%edi
adc    0x44(%esp),%ecx
mov    0x8(%eax),%eax
add    %edx,%esi
mov    %esi,0x10(%esp)
adc    %ecx,%edi
mov    %edi,0x14(%esp)
mov    %eax,%edi
mov    0x150(%esp),%eax
mov    0xc(%eax),%esi
cmp    %esi,0x14(%esp)
ja     1a1d0 <__sprintf_chk@plt+0x184e0>
jb     1aba0 <__sprintf_chk@plt+0x18eb0>
cmp    %edi,0x10(%esp)
jae    1a1d0 <__sprintf_chk@plt+0x184e0>
mov    0x150(%esp),%eax
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
mov    (%eax),%eax
mov    %eax,0x54(%esp)
add    0x10(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   1a30 <strlen@plt>
mov    0x28(%esp),%edx
cmp    %esi,0x14(%esp)
mov    %eax,0x50(%esp)
ja     1a030 <__sprintf_chk@plt+0x18340>
jb     1abe3 <__sprintf_chk@plt+0x18ef3>
cmp    %edi,0x10(%esp)
ja     1a030 <__sprintf_chk@plt+0x18340>
mov    0x54(%esp),%eax
add    %edx,%eax
mov    %eax,%ecx
mov    0x150(%esp),%eax
testb  $0x10,0x10(%eax)
jne    1ace0 <__sprintf_chk@plt+0x18ff0>
mov    0x90(%esp),%edi
xor    %eax,%eax
xor    %edx,%edx
mov    $0x1,%esi
add    %edi,%ecx
test   %edi,%edi
mov    %ecx,0x28(%esp)
je     1ac5f <__sprintf_chk@plt+0x18f6f>
mov    %ebp,0x54(%esp)
mov    %eax,%edi
mov    %edx,%ebp
xchg   %ax,%ax
mov    %edi,%eax
mov    %esi,%ecx
shl    $0x8,%eax
neg    %ecx
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %ebp,%edx
shld   $0x8,%edi,%edx
add    $0x1,%esi
mov    %edx,0x14(%esp)
mov    0x14(%esp),%edx
movzbl (%eax,%ecx,1),%ecx
mov    0x10(%esp),%eax
mov    %edx,%ebp
or     %eax,%ecx
cmp    %esi,0x90(%esp)
mov    %ecx,%edi
jae    1ac20 <__sprintf_chk@plt+0x18f30>
mov    0x54(%esp),%ebp
mov    %ecx,%eax
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%esi
mov    0x50(%esp),%edi
shl    $0x4,%ecx
add    0x5c(%esp),%ecx
mov    %eax,(%ecx)
mov    0x30(%esp),%eax
mov    %edx,0x4(%ecx)
movl   $0x55,0x8(%ecx)
mov    %esi,0xc(%ecx)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1810 <memcpy@plt>
lea    0x1(%esi,%edi,1),%eax
addl   $0x1,0x38(%esp)
movb   $0x0,(%esi,%edi,1)
mov    %eax,0x3c(%esp)
mov    0xa4(%esp),%eax
add    $0x1,%ebp
add    %eax,0x18(%esp)
cmp    0x20(%esp),%ebp
jne    1ab48 <__sprintf_chk@plt+0x18e58>
mov    0xc4(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x38(%esp),%eax
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x90(%esp),%eax
test   %eax,%eax
je     1adf8 <__sprintf_chk@plt+0x19108>
add    %ecx,%eax
xor    %edx,%edx
mov    %eax,0x10(%esp)
xor    %eax,%eax
mov    %ebp,0x28(%esp)
lea    0x0(%esi),%esi
movzbl (%ecx),%ebp
mov    %eax,%esi
mov    %edx,%edi
shl    $0x8,%esi
add    $0x1,%ecx
shld   $0x8,%eax,%edi
mov    %edi,%edx
or     %esi,%ebp
cmp    0x10(%esp),%ecx
mov    %ebp,%eax
jne    1ad00 <__sprintf_chk@plt+0x19010>
mov    0x28(%esp),%ebp
jmp    1ac5f <__sprintf_chk@plt+0x18f6f>
xchg   %ax,%ax
mov    0xac(%esp),%eax
mov    $0x1,%esi
xor    %edi,%edi
xor    %ebp,%ebp
add    %ecx,%eax
mov    %eax,0x70(%esp)
xchg   %ax,%ax
mov    %edi,%eax
mov    %esi,%ecx
shl    $0x8,%eax
neg    %ecx
mov    %eax,0x60(%esp)
mov    0x70(%esp),%eax
mov    %ebp,%edx
shld   $0x8,%edi,%edx
add    $0x1,%esi
mov    %edx,0x64(%esp)
mov    0x64(%esp),%edx
movzbl (%eax,%ecx,1),%ecx
mov    0x60(%esp),%eax
mov    %edx,%ebp
or     %eax,%ecx
cmp    %esi,0xac(%esp)
mov    %ecx,%edi
jae    1ad40 <__sprintf_chk@plt+0x19050>
jmp    1a9c9 <__sprintf_chk@plt+0x18cd9>
xchg   %ax,%ax
movl   $0x0,0x10c(%esp)
00
movl   $0x0,0x118(%esp)
00
movl   $0x0,0x11c(%esp)
00
movl   $0x0,0x90(%esp)
00
movl   $0x0,0xa4(%esp)
00
jmp    19b2e <__sprintf_chk@plt+0x17e3e>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc4(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0x154(%esp),%eax
movl   $0x0,(%eax)
add    $0x13c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
xor    %edx,%edx
jmp    1ac5f <__sprintf_chk@plt+0x18f6f>
mov    0x38(%esp),%eax
jmp    19fd1 <__sprintf_chk@plt+0x182e1>
movl   $0x0,0xb8(%esp)
00
movl   $0x0,0x88(%esp)
00
jmp    1a14f <__sprintf_chk@plt+0x1845f>
mov    0xc4(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
call   1ad0 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    19fd1 <__sprintf_chk@plt+0x182e1>
mov    $0xfffffff4,%eax
jmp    19fd1 <__sprintf_chk@plt+0x182e1>
mov    0xc4(%esp),%eax
mov    %eax,(%esp)
call   1800 <free@plt>
mov    $0xfffffff4,%eax
jmp    19fd1 <__sprintf_chk@plt+0x182e1>
cmp    %eax,0x5c(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
xchg   %ax,%ax
jmp    19f32 <__sprintf_chk@plt+0x18242>
cmp    %eax,0x5c(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
nop
jmp    1a26f <__sprintf_chk@plt+0x1857f>
cmp    %eax,0x5c(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
nop
jmp    1a0c2 <__sprintf_chk@plt+0x183d2>
cmp    %eax,0x5c(%esp)
jb     1a030 <__sprintf_chk@plt+0x18340>
nop
jmp    1a2d7 <__sprintf_chk@plt+0x185e7>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xc134,%ebx
mov    0x40(%esp),%esi
mov    %esi,(%esp)
call   16910 <__sprintf_chk@plt+0x14c20>
mov    %esi,(%esp)
mov    %edx,%ebp
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
call   16900 <__sprintf_chk@plt+0x14c10>
cmp    $0x0,%ebp
mov    %eax,0x1c(%esp)
jl     1af68 <__sprintf_chk@plt+0x19278>
jle    1b000 <__sprintf_chk@plt+0x19310>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x1c(%esp),%eax
movl   $0x1c,0x8(%esp)
add    $0xffffffe4,%esi
adc    $0xffffffff,%edi
add    %esi,%eax
mov    %eax,0x4(%esp)
lea    -0x5e4a(%ebx),%eax
mov    %eax,(%esp)
call   1850 <memcmp@plt>
xor    %edx,%edx
test   %eax,%eax
jne    1af55 <__sprintf_chk@plt+0x19265>
cmp    $0x0,%edi
jl     1af68 <__sprintf_chk@plt+0x19278>
jle    1af60 <__sprintf_chk@plt+0x19270>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x1c(%esp),%eax
add    $0xffffffd8,%esi
adc    $0xffffffff,%edi
xor    %edx,%edx
add    %esi,%eax
cmpb   $0x1,(%eax)
jbe    1af78 <__sprintf_chk@plt+0x19288>
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    $0xb,%esi
ja     1af3a <__sprintf_chk@plt+0x1924a>
lea    0x0(%esi),%esi
xor    %edx,%edx
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x7,0x1(%eax)
ja     1af55 <__sprintf_chk@plt+0x19265>
cmpb   $0x1,0x2(%eax)
ja     1af55 <__sprintf_chk@plt+0x19265>
movzbl 0x3(%eax),%edx
movzbl 0x4(%eax),%ebp
mov    0x8(%eax),%ecx
add    %ebp,%edx
bswap  %ecx
add    %ecx,%edx
cmp    $0x0,%edi
jl     1af68 <__sprintf_chk@plt+0x19278>
jg     1afa0 <__sprintf_chk@plt+0x192b0>
cmp    %edx,%esi
jb     1af68 <__sprintf_chk@plt+0x19278>
mov    %ebp,%edx
mov    0x1c(%esp),%ebp
add    %ecx,%edx
mov    0x44(%esp),%ecx
sub    %edx,%esi
lea    0x0(%ebp,%esi,1),%edx
add    %ebp,%esi
mov    %edx,0x8(%ecx)
movzbl 0x4(%eax),%edx
mov    %edx,0xc(%ecx)
movzbl 0x3(%eax),%edx
sub    %edx,%esi
mov    %esi,(%ecx)
movzbl 0x3(%eax),%edx
mov    %edx,0x4(%ecx)
movzbl (%eax),%edx
mov    -0x140(%ebx,%edx,4),%edx
mov    %edx,0x10(%ecx)
movzbl 0x1(%eax),%edx
mov    -0x160(%ebx,%edx,4),%edx
mov    %edx,0x14(%ecx)
movzbl 0x2(%eax),%eax
mov    $0x1,%edx
mov    -0x178(%ebx,%eax,4),%eax
mov    %eax,0x18(%ecx)
jmp    1af55 <__sprintf_chk@plt+0x19265>
cmpl   $0x1b,0x10(%esp)
ja     1aeff <__sprintf_chk@plt+0x1920f>
xor    %edx,%edx
jmp    1af6a <__sprintf_chk@plt+0x1927a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    1b070 <__sprintf_chk@plt+0x19380>
cmp    %ebp,%ecx
ja     1b0a8 <__sprintf_chk@plt+0x193b8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    1b058 <__sprintf_chk@plt+0x19368>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     1b098 <__sprintf_chk@plt+0x193a8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    1b0b8 <__sprintf_chk@plt+0x193c8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    1b128 <__sprintf_chk@plt+0x19438>
cmp    %edx,%eax
jb     1b128 <__sprintf_chk@plt+0x19438>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     1b138 <__sprintf_chk@plt+0x19448>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    1b119 <__sprintf_chk@plt+0x19429>
cmp    (%esp),%esi
je     1b138 <__sprintf_chk@plt+0x19448>
mov    %edi,%eax
xor    %edx,%edx
jmp    1b09c <__sprintf_chk@plt+0x193ac>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    1b09c <__sprintf_chk@plt+0x193ac>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    1b198 <__sprintf_chk@plt+0x194a8>
cmp    %edi,%esi
jbe    1b1d0 <__sprintf_chk@plt+0x194e0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     1b1f0 <__sprintf_chk@plt+0x19500>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    1b200 <__sprintf_chk@plt+0x19510>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     1b298 <__sprintf_chk@plt+0x195a8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    1b1e1 <__sprintf_chk@plt+0x194f1>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    1b18b <__sprintf_chk@plt+0x1949b>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     1b284 <__sprintf_chk@plt+0x19594>
cmp    %eax,0xc(%esp)
jb     1b280 <__sprintf_chk@plt+0x19590>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    1b25e <__sprintf_chk@plt+0x1956e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    1b25e <__sprintf_chk@plt+0x1956e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     1b1b1 <__sprintf_chk@plt+0x194c1>
jmp    1b1c1 <__sprintf_chk@plt+0x194d1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xbd45,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x7ac(%ebx),%esi
call   16e8 <unsetenv@plt-0x38>
lea    -0x7b0(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     1b309 <__sprintf_chk@plt+0x19619>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x7b0(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    1b2e8 <__sprintf_chk@plt+0x195f8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    1b320 <__sprintf_chk@plt+0x19630>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xbcca,%ebx
sub    $0x8,%esp
call   1890 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   1ff0 <__sprintf_chk@plt+0x300>
add    $0xbcb3,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    %eax,(%eax)
add    (%eax),%al
imul   $0x64,0x6f(%ebp),%ebp
and    %ch,0x6e614d20
popa
and    %ch,%gs:0x65(%bp,%di)
jb     1b3e4 <_IO_stdin_used+0x84>
gs
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs
jne    1b3ea <_IO_stdin_used+0x8a>
gs
jae    1b3bb <_IO_stdin_used+0x5b>
and    %ch,0x73(%ecx,%ebp,2)
je     1b3b3 <_IO_stdin_used+0x53>
and    %ch,0x61(%edi,%ebp,2)
fs
sub    $0x20,%al
jne    1b3fe <_IO_stdin_used+0x9e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs
sub    $0x20,%al
gs
je     1b3fc <_IO_stdin_used+0x9c>
or     0x73(%ebp),%dl
popa
cmp    %gs:(%bp,%si),%cl
or     %esp,0x6f5b2073
jo     1b41d <_IO_stdin_used+0xbd>
imul   $0x63205d73,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %bl,%fs:0x63(%ebx)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     1b437 <_IO_stdin_used+0xd7>
imul   $0xa0a5d73,0x6e(%edi),%ebp
dec    %edi
jo     1b441 <_IO_stdin_used+0xe1>
imul   $0x90a3a73,0x6e(%edi),%ebp
sub    $0x2d202c56,%eax
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1b40b <_IO_stdin_used+0xab>
jbe    1b452 <_IO_stdin_used+0xf2>
jb     1b462 <_IO_stdin_used+0x102>
imul   $0x682d090a,0x6e(%edi),%ebp
sub    $0x20,%al
sub    $0x6c65682d,%eax
jo     1b41f <_IO_stdin_used+0xbf>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1b42b <_IO_stdin_used+0xcb>
je     1b475 <_IO_stdin_used+0x115>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%edx),%cl
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    1b459 <_IO_stdin_used+0xf9>
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
imul   $0x64,0x6f(%ebp),%ebp
and    %ah,0x6c(%ecx)
jae    1b49d <_IO_stdin_used+0x13d>
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
gs
jae    1b457 <_IO_stdin_used+0xf7>
addr16 jb 1b49b <_IO_stdin_used+0x13b>
arpl   %sp,0x66(%ebp)
jne    1b4ab <_IO_stdin_used+0x14b>
insb   (%dx),%es:(%edi)
jns    1b462 <_IO_stdin_used+0x102>
imul   $0x6c6c6163,0x20(%esi),%esp
gs and %ah,%fs:%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     1b4c1 <_IO_stdin_used+0x161>
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%bp,%di)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x3a73,0x6b(%esi),%ebp
add    %al,(%eax)
inc    %ebp
jb     1b4dd <_IO_stdin_used+0x17d>
outsl  %ds:(%esi),(%dx)
jb     1b4a8 <_IO_stdin_used+0x148>
and    %dh,0x6e(%ebp)
gs
js     1b4e4 <_IO_stdin_used+0x184>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x65(%edi)
je     1b4ed <_IO_stdin_used+0x18d>
jo     1b4f4 <_IO_stdin_used+0x194>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    %ch,(%bx,%di)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    1b4f2 <_IO_stdin_used+0x192>
and    %ah,(%edi)
and    $0xa2e2763,%eax
add    %ah,(%eax)
and    %ah,0x7332312d
and    %ah,0x6b000a73
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ch,%fs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%esi)
jb     1b522 <_IO_stdin_used+0x1c2>
imul   $0x353120,0x6e(%edi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
or     %fs:(%eax),%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%edi)
and    $0xa2773,%eax
push   $0x706c65
push   %ebx
push   $0x6820776f
gs
insb   (%dx),%es:(%edi)
jo     1b50c <_IO_stdin_used+0x1ac>
insl   (%dx),%es:(%edi)
gs
jae    1b563 <_IO_stdin_used+0x203>
popa
add    %ch,%gs:(%bp,%di)
push   $0x73550056
popa
cmp    %gs:(%bx,%si),%ah
and    $0x45000a73,%eax
jb     1b578 <_IO_stdin_used+0x218>
outsl  %ds:(%esi),(%dx)
jb     1b543 <_IO_stdin_used+0x1e3>
and    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     1b53b <_IO_stdin_used+0x1db>
sub    %esp,(%eax)
popaw
imul   $0x25000a21,0x64(%ebp,%eiz,2),%ebp
sub    $0x20733931,%eax
and    $0x20646c38,%eax
and    %ah,0x6c002064
imul   $0x72756320,0x74(%ebx),%esi
jb     1b59d <_IO_stdin_used+0x23d>
outsb  %ds:(%esi),(%dx)
je     1b5a7 <_IO_stdin_used+0x247>
jns    1b55d <_IO_stdin_used+0x1fd>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs and %ch,%fs:%gs:0x6f(%ebp)
fs
jne    1b5b5 <_IO_stdin_used+0x255>
gs
jae    1b54c <_IO_stdin_used+0x1ec>
insb   (%dx),%es:(%edi)
jae    1b5bc <_IO_stdin_used+0x25c>
outsl  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     1b5b8 <_IO_stdin_used+0x258>
je     1b579 <_IO_stdin_used+0x219>
insb   (%dx),%es:(%edi)
jae    1b5c9 <_IO_stdin_used+0x269>
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
inc    %ebp
jb     1b5dd <_IO_stdin_used+0x27d>
outsl  %ds:(%esi),(%dx)
jb     1b5a8 <_IO_stdin_used+0x248>
and    %ah,0x6f(%ebx)
jne    1b5df <_IO_stdin_used+0x27f>
and    %ch,%fs:0x6f(%esi)
je     1b599 <_IO_stdin_used+0x239>
addr16
gs
je     1b59d <_IO_stdin_used+0x23d>
insb   (%dx),%es:(%edi)
imul   $0x20666f20,0x74(%ebx),%esi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1b5f6 <_IO_stdin_used+0x296>
gs
jae    1b5c7 <_IO_stdin_used+0x267>
and    %ah,0xa73
add    %cl,0x6f(%ebp)
fs
jne    1b605 <_IO_stdin_used+0x2a5>
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
imul   $0x73552020,0x65(%edx),%edi
gs and %ah,%fs:%gs:0x79(%edx)
add    %al,(%eax)
add    %ah,(%edi)
push   %edi
popa
imul   $0x61686562,0x20(%edi,%eiz,1),%esi
jbe    1b632 <_IO_stdin_used+0x2d2>
outsl  %ds:(%esi),(%dx)
jb     1b5ec <_IO_stdin_used+0x28c>
imul   $0x67726174,0x20(%ebx),%esi
gs
je     1b63b <_IO_stdin_used+0x2db>
and    %ah,%fs:0x6f(%esi)
jb     1b5fc <_IO_stdin_used+0x29c>
jb     1b643 <_IO_stdin_used+0x2e3>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1b643 <_IO_stdin_used+0x2e3>
insb   (%dx),%es:(%edi)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x65(%ebx)
jb     1b65b <_IO_stdin_used+0x2fb>
gs
insb   (%dx),%es:(%edi)
or     %cs:0x65(%edi),%dl
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
ja     1b61d <_IO_stdin_used+0x2bd>
jae    1b66b <_IO_stdin_used+0x30b>
gs
gs
jo     1b623 <_IO_stdin_used+0x2c3>
outsw  %ds:(%esi),(%dx)
jb     1b627 <_IO_stdin_used+0x2c7>
xor    %esi,(%eax)
jae    1b637 <_IO_stdin_used+0x2d7>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     1b683 <_IO_stdin_used+0x323>
outsb  %ds:(%esi),(%dx)
jne    1b682 <_IO_stdin_used+0x322>
or     %cs:(%eax),%al
push   %ebp
jae    1b684 <_IO_stdin_used+0x324>
cmp    %gs:(%bp,%si),%cl
or     %esp,0x6f5b2073
jo     1b6a3 <_IO_stdin_used+0x343>
imul   $0x6d205d73,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1b6a6 <_IO_stdin_used+0x346>
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%esi)
cs or  %cs:0x70(%edi),%cl
je     1b6b1 <_IO_stdin_used+0x351>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1b686 <_IO_stdin_used+0x326>
or     (%ecx),%cl
sub    $0x2d202c66,%eax
sub    $0x63726f66,%eax
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     1b6c7 <_IO_stdin_used+0x367>
gs
jae    1b687 <_IO_stdin_used+0x327>
popa
and    %ch,0x6f(%ebp)
fs
jne    1b6da <_IO_stdin_used+0x37a>
and    %dh,%gs:0x6e(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:0x6e(%ecx)
and    %ch,%fs:0x61(%ebp)
jns    1b69f <_IO_stdin_used+0x33f>
arpl   %si,0x61(%edx)
jae    1b6ec <_IO_stdin_used+0x38c>
and    %bh,0x6f(%ecx)
jne    1b6fb <_IO_stdin_used+0x39b>
or     (%ecx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
gs and %dl,%cs:%gs:0x69(%eax,%ebp,2)
jae    1b6cb <_IO_stdin_used+0x36b>
jb     1b712 <_IO_stdin_used+0x3b2>
jno    1b724 <_IO_stdin_used+0x3c4>
imul   $0x6f462073,0x65(%edx),%esi
jb     1b71b <_IO_stdin_used+0x3bb>
gs and %cl,%fs:%gs:0x6f(%ebp)
fs
jne    1b72c <_IO_stdin_used+0x3cc>
and    %dl,%gs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1b729 <_IO_stdin_used+0x3c9>
insb   (%dx),%es:(%edi)
or     (%ecx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jo     1b754 <_IO_stdin_used+0x3f4>
imul   $0x206e6920,0x6e(%edi),%ebp
jns    1b758 <_IO_stdin_used+0x3f8>
jne    1b75d <_IO_stdin_used+0x3fd>
and    %ch,0x65(%ebx)
jb     1b75e <_IO_stdin_used+0x3fe>
gs
insb   (%dx),%es:(%edi)
and    %al,%cs:0x4e(%ecx,%eax,2)
inc    %edi
inc    %ebp
push   %edx
dec    %edi
push   %ebp
push   %ebx
or     (%ecx),%cl
sub    $0x2d202c73,%eax
sub    $0x6c737973,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,(%bx,%si)
and    %ah,(%eax)
and    %ah,(%eax)
jo     1b785 <_IO_stdin_used+0x425>
imul   $0x206f7420,0x74(%esi),%ebp
jae    1b795 <_IO_stdin_used+0x435>
jae    1b78a <_IO_stdin_used+0x42a>
outsl  %ds:(%esi),(%dx)
addr16 sub $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     1b746 <_IO_stdin_used+0x3e6>
jae    1b79c <_IO_stdin_used+0x43c>
fs
gs
jb     1b79e <_IO_stdin_used+0x43e>
or     (%ecx),%cl
sub    $0x2d202c76,%eax
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    1b7a0 <_IO_stdin_used+0x440>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%ebp)
popa
bound  %ebp,0x73(%ebp,%eiz,2)
and    %ch,0x6f(%ebp)
jb     1b7b1 <_IO_stdin_used+0x451>
and    %ch,0x65(%ebp)
jae    1b7c4 <_IO_stdin_used+0x464>
popa
addr16
gs
jae    1b760 <_IO_stdin_used+0x400>
or     %ebp,0x2d202c56
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1b78e <_IO_stdin_used+0x42e>
jbe    1b7d5 <_IO_stdin_used+0x475>
jb     1b7e5 <_IO_stdin_used+0x485>
imul   $0x682d090a,0x6e(%edi),%ebp
sub    $0x20,%al
sub    $0x6c65682d,%eax
jo     1b7a2 <_IO_stdin_used+0x442>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1b7ae <_IO_stdin_used+0x44e>
je     1b7f8 <_IO_stdin_used+0x498>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x6e(%ebp)
gs
js     1b811 <_IO_stdin_used+0x4b1>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x65(%edi)
je     1b81a <_IO_stdin_used+0x4ba>
jo     1b821 <_IO_stdin_used+0x4c1>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    %ch,(%bx,%di)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    1b81f <_IO_stdin_used+0x4bf>
and    %ah,(%edi)
and    $0xa2e2763,%eax
add    %al,(%eax)
add    %cl,0x6f(%ebp)
fs
jne    1b835 <_IO_stdin_used+0x4d5>
and    %ah,%gs:0x73692073
and    %ch,0x6f(%esi)
je     1b7f5 <_IO_stdin_used+0x495>
arpl   %si,0x72(%ebp)
jb     1b83f <_IO_stdin_used+0x4df>
outsb  %ds:(%esi),(%dx)
je     1b849 <_IO_stdin_used+0x4e9>
jns    1b7ff <_IO_stdin_used+0x49f>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs or %fs:%gs:(%eax),%al
add    %ah,0x6f(%ebx)
jne    1b858 <_IO_stdin_used+0x4f8>
and    %ch,%fs:0x6f(%esi)
je     1b812 <_IO_stdin_used+0x4b2>
jb     1b859 <_IO_stdin_used+0x4f9>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1b85d <_IO_stdin_used+0x4fd>
and    %ch,0x6f(%ebp)
fs
jne    1b86a <_IO_stdin_used+0x50a>
and    %ah,%gs:0x25203a73
jae    1b811 <_IO_stdin_used+0x4b1>
add    %ch,0x69(%ebp)
jae    1b87f <_IO_stdin_used+0x51f>
imul   $0x646f6d20,0x67(%esi),%ebp
jne    1b881 <_IO_stdin_used+0x521>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%al
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1b848 <_IO_stdin_used+0x4e8>
jne    1b89d <_IO_stdin_used+0x53d>
and    %ch,%gs:0x6f(%ebp)
fs
jne    1b89d <_IO_stdin_used+0x53d>
and    %ah,%gs:0x25203a73
jae    1b844 <_IO_stdin_used+0x4e4>
add    %cl,0x6f(%ebp)
fs
jne    1b8ac <_IO_stdin_used+0x54c>
and    %ah,%gs:0x73692073
and    %ah,0x75(%edx)
imul   $0xa2e6e,0x69(%esp,%esi,2),%ebp
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1b8c3 <_IO_stdin_used+0x563>
and    %ah,%gs:0x73692073
and    %ch,0x6e(%ecx)
and    %dh,0x73(%ebp)
and    %ah,%gs:0x79(%edx)
cmp    (%eax),%al
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1b8db <_IO_stdin_used+0x57b>
and    %ah,%gs:0x73692073
and    %ch,0x6e(%ecx)
and    %dh,0x73(%ebp)
or     %gs:(%eax),%al
jb     1b8ee <_IO_stdin_used+0x58e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     1b8eb <_IO_stdin_used+0x58b>
je     1b8ac <_IO_stdin_used+0x54c>
jb     1b8fb <_IO_stdin_used+0x59b>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%esi)
jb     1b901 <_IO_stdin_used+0x5a1>
add    %dh,%gs:0x79(%ebx)
jae    1b910 <_IO_stdin_used+0x5b0>
outsl  %ds:(%esi),(%dx)
add    %dh,0x65(%bp)
jb     1b90d <_IO_stdin_used+0x5ad>
outsl  %ds:(%esi),(%dx)
jae    1b913 <_IO_stdin_used+0x5b3>
add    %dh,0x61(%edi)
imul   $0xd0fffdb5,0x10(%eax,%eax,1),%esi
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
pushl  -0x2f00024b(%eax)
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
jmp    *-0x2f00024b(%eax)
mov    $0xfd,%ch
pushl  -0x4b(%eax)
std
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
jmp    *-0x4b(%eax)
std
call   *%eax
mov    $0xfd,%ch
call   *%eax
mov    $0xfd,%ch
call   *-0x4b(%eax)
std
jmp    *(%eax)
mov    $0xfd,%ch
jmp    *0x73(%esi)
jbe    1b9f2 <_IO_stdin_used+0x692>
ja     1ba06 <_IO_stdin_used+0x6a6>
add    %cl,0x6e(%ecx)
jbe    1ba04 <_IO_stdin_used+0x6a4>
insb   (%dx),%es:(%edi)
imul   $0x6c75646f,0x6d(%eax,%eiz,1),%esp
and    %ah,%gs:0x6f(%esi)
jb     1ba1f <_IO_stdin_used+0x6bf>
popa
je     1b9b5 <_IO_stdin_used+0x655>
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %ch,0x6e(%ecx)
and    %ch,0x6f(%ebp)
fs
jne    1ba38 <_IO_stdin_used+0x6d8>
add    %cl,%gs:0x6e(%ecx)
jbe    1ba33 <_IO_stdin_used+0x6d3>
insb   (%dx),%es:(%edi)
imul   $0x6d617261,0x70(%eax,%eiz,1),%esp
gs
je     1ba43 <_IO_stdin_used+0x6e3>
jb     1ba53 <_IO_stdin_used+0x6f3>
add    %ch,0x69(%ebp)
jae    1ba58 <_IO_stdin_used+0x6f8>
imul   $0x6c696620,0x67(%esi),%ebp
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%al
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1ba1e <_IO_stdin_used+0x6be>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ch,%fs:0x6f(%ebp)
fs
jne    1ba74 <_IO_stdin_used+0x714>
and    %ah,%gs:0x25203a73
jae    1ba1b <_IO_stdin_used+0x6bb>
add    %ch,0x6e(%ecx)
jae    1ba83 <_IO_stdin_used+0x723>
outsl  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     1ba7f <_IO_stdin_used+0x71f>
je     1ba40 <_IO_stdin_used+0x6e0>
imul   $0x20646f6d,0x73(%esi),%ebp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1baa1 <_IO_stdin_used+0x741>
and    %ch,%gs:0x61(%eax)
jae    1ba5b <_IO_stdin_used+0x6fb>
ja     1baaf <_IO_stdin_used+0x74f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%bp,%di)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %dh,0x65(%esi)
jb     1babf <_IO_stdin_used+0x75f>
imul   $0x61735500,0x6e(%edi),%ebp
cmp    %gs:(%bp,%si),%cl
or     %esp,0x6f5b2073
jo     1bad3 <_IO_stdin_used+0x773>
imul   $0x66205d73,0x6e(%edi),%ebp
imul   $0x20656d61,0x6e(%ebp,%eiz,2),%ebp
pop    %ebx
popa
jb     1bad9 <_IO_stdin_used+0x779>
jae    1bad1 <_IO_stdin_used+0x771>
or     0x70(%edi),%cl
je     1bae2 <_IO_stdin_used+0x782>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1bab7 <_IO_stdin_used+0x757>
or     (%ecx),%cl
sub    $0x2d202c56,%eax
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1bab6 <_IO_stdin_used+0x756>
jbe    1bafd <_IO_stdin_used+0x79d>
jb     1bb0d <_IO_stdin_used+0x7ad>
imul   $0x682d090a,0x6e(%edi),%ebp
sub    $0x20,%al
sub    $0x6c65682d,%eax
jo     1baca <_IO_stdin_used+0x76a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1bad6 <_IO_stdin_used+0x776>
je     1bb20 <_IO_stdin_used+0x7c0>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x69(%eax,%ebp,2)
jae    1bae9 <_IO_stdin_used+0x789>
je     1bb3a <_IO_stdin_used+0x7da>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edi,%ebp,2)
jae    1baf3 <_IO_stdin_used+0x793>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     1baf7 <_IO_stdin_used+0x797>
jae    1bb4e <_IO_stdin_used+0x7ee>
jo     1bb4b <_IO_stdin_used+0x7eb>
outsl  %ds:(%esi),(%dx)
jb     1bb52 <_IO_stdin_used+0x7f2>
and    %ch,0x61(%edi,%ebp,2)
imul   $0x6f726620,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
and    %dh,0x74(%ebx)
imul   $0x6f63000a,%fs:0x21(%esi),%ebp
jne    1bb64 <_IO_stdin_used+0x804>
and    %ch,%fs:0x6f(%esi)
je     1bb1e <_IO_stdin_used+0x7be>
imul   $0x20747265,0x73(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1bb76 <_IO_stdin_used+0x816>
and    %ah,%gs:0x25203a73
jae    1bb1d <_IO_stdin_used+0x7bd>
add    %bl,%al
mov    $0xba30fffd,%ecx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba18fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xb97afffd,%edx
std
pushl  (%eax)
mov    $0xb9e8fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
pushl  (%eax)
mov    $0xb97afffd,%edx
std
pushl  (%eax)
mov    $0xba30fffd,%edx
std
(bad)
jp     1bb9f <_IO_stdin_used+0x83f>
std
pushl  0x73(%eax)
push   %si
push   $0x46000000
outsl  %ds:(%esi),(%dx)
jne    1bc62 <_IO_stdin_used+0x902>
and    %ch,%fs:0x6e(%ecx)
jbe    1bc5b <_IO_stdin_used+0x8fb>
insb   (%dx),%es:(%edi)
imul   $0x253d7325,0x22(%eax,%eiz,1),%esp
jae    1bc27 <_IO_stdin_used+0x8c7>
cmp    (%eax),%ah
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
daa
cmp    (%edi),%ah
or     (%eax),%al
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1bc3e <_IO_stdin_used+0x8de>
addr16
gs
je     1bc42 <_IO_stdin_used+0x8e2>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x7266206f,%fs:0x66(%esi),%ebp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x203a2773,%eax
and    $0xa73,%eax
add    %al,(%eax)
push   %ebp
jae    1bca0 <_IO_stdin_used+0x940>
cmp    %gs:(%bp,%si),%cl
or     %esp,0x6f5b2073
jo     1bcbf <_IO_stdin_used+0x95f>
imul   $0x66205d73,0x6e(%edi),%ebp
imul   $0x20656d61,0x6e(%ebp,%eiz,2),%ebp
pop    %ebx
popa
jb     1bcc5 <_IO_stdin_used+0x965>
jae    1bcbd <_IO_stdin_used+0x95d>
or     0x70(%edi),%cl
je     1bcce <_IO_stdin_used+0x96e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1bca3 <_IO_stdin_used+0x943>
or     (%ecx),%cl
sub    $0x2d202c61,%eax
sub    $0x68747561,%eax
outsl  %ds:(%esi),(%dx)
jb     1bc98 <_IO_stdin_used+0x938>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    1bcb2 <_IO_stdin_used+0x952>
daa
popa
jne    1bd0a <_IO_stdin_used+0x9aa>
push   $0xa27726f
or     %ebp,0x2d202c64
sub    $0x63736564,%eax
jb     1bd11 <_IO_stdin_used+0x9b1>
jo     1bd1e <_IO_stdin_used+0x9be>
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    1bce3 <_IO_stdin_used+0x983>
daa
fs
gs
jae    1bd2b <_IO_stdin_used+0x9cb>
jb     1bd33 <_IO_stdin_used+0x9d3>
jo     1bd40 <_IO_stdin_used+0x9e0>
imul   $0x2d090a27,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
sub    $0x20,%al
sub    $0x63696c2d,%eax
outsb  %gs:(%esi),(%dx)
jae    1bd44 <_IO_stdin_used+0x9e4>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    1bd19 <_IO_stdin_used+0x9b9>
daa
insb   (%dx),%es:(%edi)
imul   $0x2765736e,0x65(%ebx),%esp
or     (%ecx),%cl
sub    $0x2d202c70,%eax
sub    $0x61726170,%eax
insl   (%dx),%es:(%edi)
gs
je     1bd77 <_IO_stdin_used+0xa17>
jb     1bd87 <_IO_stdin_used+0xa27>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
jb     1bd8c <_IO_stdin_used+0xa2c>
outsb  %ds:(%esi),(%dx)
je     1bd46 <_IO_stdin_used+0x9e6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    1bd4b <_IO_stdin_used+0x9eb>
daa
jo     1bd8f <_IO_stdin_used+0xa2f>
jb     1bd9d <_IO_stdin_used+0xa3d>
daa
or     (%ecx),%cl
sub    $0x2d202c6e,%eax
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
jb     1bdbb <_IO_stdin_used+0xa5b>
outsb  %ds:(%esi),(%dx)
je     1bd75 <_IO_stdin_used+0xa15>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    1bd7a <_IO_stdin_used+0xa1a>
daa
imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
gs
daa
or     (%ecx),%cl
sub    $0x2d202c30,%eax
sub    $0x6c6c756e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebp
jae    1bdea <_IO_stdin_used+0xa8a>
and    %bl,0x20(%eax,%esi,1)
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %bl,0xa(%esi,%ebp,2)
or     %ebp,0x2d202c46
sub    $0x6c656966,%eax
fs
cmp    $0x4c454946,%eax
inc    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    1bddf <_IO_stdin_used+0xa7f>
jo     1be33 <_IO_stdin_used+0xad3>
outsl  %ds:(%esi),(%dx)
jbe    1be2d <_IO_stdin_used+0xacd>
fs gs and %al,%fs:%gs:0x49(%esi)
inc    %ebp
dec    %esp
inc    %esp
or     (%ecx),%cl
sub    $0x2d202c6b,%eax
sub    $0x2d746573,%eax
jbe    1be40 <_IO_stdin_used+0xae0>
jb     1be50 <_IO_stdin_used+0xaf0>
imul   $0x5245563d,0x6e(%edi),%ebp
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %dl,%gs:0x45(%esi)
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x6e(%ecx)
jae    1be6f <_IO_stdin_used+0xb0f>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x75(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x90a6072
sub    $0x2d202c62,%eax
sub    $0x65736162,%eax
imul   $0x20524944,%fs:0x3d(%edx),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebp
jae    1be92 <_IO_stdin_used+0xb32>
and    %al,0x52(%ecx,%ecx,2)
and    %ah,0x73(%ecx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    1beb4 <_IO_stdin_used+0xb54>
jae    1beb1 <_IO_stdin_used+0xb51>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     1be65 <_IO_stdin_used+0xb05>
outsw  %ds:(%esi),(%dx)
jb     1be69 <_IO_stdin_used+0xb09>
das
insb   (%dx),%es:(%edi)
imul   $0x75646f6d,0x2f(%edx),%esp
insb   (%dx),%es:(%edi)
gs
jae    1be60 <_IO_stdin_used+0xb00>
or     %ebp,0x2d202c56
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1be98 <_IO_stdin_used+0xb38>
jbe    1bedf <_IO_stdin_used+0xb7f>
jb     1beef <_IO_stdin_used+0xb8f>
imul   $0x682d090a,0x6e(%edi),%ebp
sub    $0x20,%al
sub    $0x6c65682d,%eax
jo     1beac <_IO_stdin_used+0xb4c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1bec2 <_IO_stdin_used+0xb62>
je     1bf0c <_IO_stdin_used+0xbac>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%eax),%al
jo     1bf10 <_IO_stdin_used+0xbb0>
jb     1bf1e <_IO_stdin_used+0xbbe>
add    %cl,0x75(%edi)
je     1bed6 <_IO_stdin_used+0xb76>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     1bf38 <_IO_stdin_used+0xbd8>
and    %ecx,(%edx)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
cmp    %gs:(%eax),%al
and    $0x7336312d,%eax
and    $0x632573,%eax
jo     1bf42 <_IO_stdin_used+0xbe2>
jb     1bf50 <_IO_stdin_used+0xbf0>
je     1bf5e <_IO_stdin_used+0xbfe>
jo     1bf4c <_IO_stdin_used+0xbec>
add    %ah,0x3a732a2e
and    %ch,(%eax)
and    $0x29732a2e,%eax
and    $0x73250063,%eax
cmp    $0x63257325,%eax
add    %ah,0x2d253a73
sub    0x25(%ebx),%dh
jae    1bf2e <_IO_stdin_used+0xbce>
arpl   %ax,(%eax)
jo     1bf6e <_IO_stdin_used+0xc0e>
jb     1bf7c <_IO_stdin_used+0xc1c>
cmp    (%eax),%al
and    $0x7336312d,%eax
and    $0x3a732a2e,%eax
and    $0x25732a2e,%eax
arpl   %ax,(%eax)
and    $0x7336312d,%eax
and    $0x3a732a2e,%eax
and    $0x20732a2e,%eax
sub    %ah,0x29732a2e
and    $0x75610063,%eax
je     1bfa6 <_IO_stdin_used+0xc46>
outsl  %ds:(%esi),(%dx)
jb     1bf41 <_IO_stdin_used+0xbe1>
fs
gs
jae    1bfa8 <_IO_stdin_used+0xc48>
jb     1bfb0 <_IO_stdin_used+0xc50>
jo     1bfbd <_IO_stdin_used+0xc5d>
imul   $0x63696c00,0x6e(%edi),%ebp
outsb  %gs:(%esi),(%dx)
jae    1bfb9 <_IO_stdin_used+0xc59>
add    %ch,0x69(%ebp)
jae    1bfcc <_IO_stdin_used+0xc6c>
imul   $0x646f6d20,0x67(%esi),%ebp
jne    1bfce <_IO_stdin_used+0xc6e>
and    %ch,%gs:0x72(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%al
jne    1bfe2 <_IO_stdin_used+0xc82>
popa
insl   (%dx),%es:(%edi)
sub    %ch,%gs:(%ecx)
and    %ah,0x61(%esi)
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
and    $0x696c2f73,%eax
bound  %ebp,(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1bffe <_IO_stdin_used+0xc9e>
gs
jae    1bfc4 <_IO_stdin_used+0xc64>
and    $0x6f4d0073,%eax
fs
jne    1c009 <_IO_stdin_used+0xca9>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6f6e2073
je     1bfcb <_IO_stdin_used+0xc6b>
outsw  %ds:(%esi),(%dx)
jne    1c01d <_IO_stdin_used+0xcbd>
fs or  %cs:%fs:(%eax),%al
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1c024 <_IO_stdin_used+0xcc4>
and    %ah,%gs:0x6c(%ecx)
imul   $0x20732520,0x73(%ecx),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     1bfe7 <_IO_stdin_used+0xc87>
outsw  %ds:(%esi),(%dx)
jne    1c039 <_IO_stdin_used+0xcd9>
fs or  %cs:%fs:(%eax),%al
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1c040 <_IO_stdin_used+0xce0>
and    %ah,%gs:0x6f6e2073
je     1bffd <_IO_stdin_used+0xc9d>
outsw  %ds:(%esi),(%dx)
jne    1c04f <_IO_stdin_used+0xcef>
fs or  %cs:%fs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x2072,0x65(%esp,%esi,2),%bp
insb   (%dx),%es:(%edi)
imul   $0x6d25203a,0x74(%ebx),%esi
or     (%eax),%al
arpl   %bp,0x6d(%edi)
jo     1c066 <_IO_stdin_used+0xd06>
je     1c027 <_IO_stdin_used+0xcc7>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x6f63206f,%fs:0x66(%esi),%ebp
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
add    %dh,%fs:0x65(%ebx)
je     1c053 <_IO_stdin_used+0xcf3>
jbe    1c08d <_IO_stdin_used+0xd2d>
jb     1c09d <_IO_stdin_used+0xd3d>
imul   $0x73616200,0x6e(%edi),%ebp
gs imul $0xc5480000,%fs:%gs:0x0(%edx),%esi
c5
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *(%eax)
(bad)
pusha
(bad)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
decl   -0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
pushl  (%eax)
(bad)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
lcall  *(%eax)
(bad)
std
incl   (%eax)
(bad)
std
jmp    *-0x3a(%eax)
std
(bad)
call   6101bed2 <_end+0x60ff4cce>
(bad)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x3a(%eax)
std
(bad)
mov    $0x60fffdc5,%eax
(bad)
std
jmp    *-0x3a(%eax)
std
jmp    *-0x7700023b(%eax)
(bad)
pusha
(bad)
std
pushl  -0x3b(%eax)
std
jmp    *-0x3a(%eax)
std
lcall  *-0x3b(%eax)
std
jmp    *0x64(%ecx)
insb   (%dx),%es:(%edi)
jo     1c1af <_IO_stdin_used+0xe4f>
xor    %al,0x3a(%esi)
imul   $0x62,(%edx),%edi
cmp    0x68(%esi),%dl
add    %cl,0x4f(%ebp)
inc    %esp
push   %eax
push   %edx
dec    %edi
inc    %edx
inc    %ebp
pop    %edi
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
add    %ah,0x73252073
add    %dh,0x6d(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:0x4d000a73
outsl  %ds:(%esi),(%dx)
fs
jne    1c1dd <_IO_stdin_used+0xe7d>
and    %ah,%gs:0x73692073
and    %ch,0x6f(%esi)
je     1c19d <_IO_stdin_used+0xe3d>
imul   $0x6e72656b,0x20(%esi),%ebp
gs
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1c1b3 <_IO_stdin_used+0xe53>
imul   $0x20747265,0x73(%esi),%ebp
daa
and    $0x203a2773,%eax
and    $0x69000a73,%eax
outsb  %ds:(%esi),(%dx)
jae    1c21c <_IO_stdin_used+0xebc>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x73252073
or     (%eax),%al
imul   $0x20646f6d,0x73(%esi),%ebp
and    $0x73252073,%eax
or     (%eax),%al
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1c232 <_IO_stdin_used+0xed2>
and    %ah,%gs:0x73692073
and    %ch,0x6e(%ecx)
and    %dh,0x73(%ebp)
gs or  %cs:%gs:(%eax),%al
and    $0x43,%al
dec    %ebp
inc    %esp
dec    %esp
dec    %ecx
dec    %esi
inc    %ebp
pop    %edi
dec    %edi
push   %eax
push   %esp
push   %ebx
add    %cl,0x4f(%ebp)
inc    %esp
push   %eax
push   %edx
dec    %edi
inc    %edx
inc    %ebp
pop    %edi
dec    %ebp
dec    %edi
inc    %esp
push   %ebp
dec    %esp
inc    %ebp
add    %ch,0x732d0043
add    %ch,0x762d0071
add    %ch,0x69(%ebp)
jae    1c278 <_IO_stdin_used+0xf18>
imul   $0x72617020,0x67(%esi),%ebp
popa
insl   (%dx),%es:(%edi)
gs
je     1c276 <_IO_stdin_used+0xf16>
jb     1c286 <_IO_stdin_used+0xf26>
and    %dl,%cs:0x65(%ebx)
and    %ch,%gs:0xa2e68
outsl  %ds:(%esi),(%dx)
jo     1c295 <_IO_stdin_used+0xf35>
imul   $0x78300073,0x6e(%edi),%ebp
and    $0x6c6c3830,%eax
js     1c238 <_IO_stdin_used+0xed8>
and    $0x6d000a73,%eax
outsl  %ds:(%esi),(%dx)
fs
jo     1c2aa <_IO_stdin_used+0xf4a>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x0(%ebp)
arpl   %bp,0x6d(%edi)
jo     1c2a2 <_IO_stdin_used+0xf42>
je     1c263 <_IO_stdin_used+0xf03>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jo     1c2ba <_IO_stdin_used+0xf5a>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1c2bf <_IO_stdin_used+0xf5f>
sub    $0x65706564,%eax
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1c268 <_IO_stdin_used+0xf08>
jb     1c2cf <_IO_stdin_used+0xf6f>
jae    1c2db <_IO_stdin_used+0xf7b>
insb   (%dx),%es:(%edi)
jbe    1c2d4 <_IO_stdin_used+0xf74>
sub    $0x61696c61,%eax
jae    1c276 <_IO_stdin_used+0xf16>
imul   $0x2d74,0x73(%edx),%si
je     1c2e7 <_IO_stdin_used+0xf87>
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1c2ec <_IO_stdin_used+0xf8c>
sub    $0x74736e69,%eax
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1c2fb <_IO_stdin_used+0xf9b>
sub    $0x6f6d6572,%eax
jbe    1c302 <_IO_stdin_used+0xfa2>
add    %dh,0x73(%ebp)
gs
sub    $0x63616c62,%eax
imul   $0x74,0x73(%ecx,%ebp,2),%ebp
add    %ah,0x6f(%esi)
jb     1c313 <_IO_stdin_used+0xfb3>
gs
sub    $0x76646f6d,%eax
gs
jb     1c32c <_IO_stdin_used+0xfcc>
imul   $0x726f6600,0x6e(%edi),%ebp
arpl   %sp,0x2d(%ebp)
jbe    1c32a <_IO_stdin_used+0xfca>
jb     1c334 <_IO_stdin_used+0xfd4>
popa
imul   $0x776f6873,0x0(%bp,%di),%esp
sub    $0x65706564,%eax
outsb  %ds:(%esi),(%dx)
fs
jae    1c2d9 <_IO_stdin_used+0xf79>
jae    1c343 <_IO_stdin_used+0xfe3>
outsl  %ds:(%esi),(%dx)
ja     1c341 <_IO_stdin_used+0xfe1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6873,0x0(%edi),%sp
outsl  %ds:(%esi),(%dx)
ja     1c316 <_IO_stdin_used+0xfb6>
arpl   %bp,0x6e(%edi)
imul   $0x6873,0x0(%edi),%sp
outsl  %ds:(%esi),(%dx)
ja     1c322 <_IO_stdin_used+0xfc2>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    1c35f <_IO_stdin_used+0xfff>
jb     1c36f <_IO_stdin_used+0x100f>
imul   $0x75640073,0x6e(%edi),%ebp
insl   (%dx),%es:(%edi)
jo     1c333 <_IO_stdin_used+0xfd3>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    1c370 <_IO_stdin_used+0x1010>
jb     1c380 <_IO_stdin_used+0x1020>
imul   $0x72640073,0x6e(%edi),%ebp
jns    1c343 <_IO_stdin_used+0xfe3>
jb     1c38d <_IO_stdin_used+0x102d>
outsb  %ds:(%esi),(%dx)
add    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1c31f <_IO_stdin_used+0xfbf>
imul   $0x656d61,%fs:0x6e(%edx),%esi
jno    1c39e <_IO_stdin_used+0x103e>
imul   $0x0,0x74(%ebp),%esp
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1c35a <_IO_stdin_used+0xffa>
popa
jo     1c3ad <_IO_stdin_used+0x104d>
outsb  %gs:(%esi),(%dx)
and    %dh,%fs:0x61(%esi)
insb   (%dx),%es:(%edi)
jne    1c3ab <_IO_stdin_used+0x104b>
and    %dh,0x20(%edi,%ebp,2)
and    $0x4d,%al
dec    %edi
inc    %esp
push   %eax
push   %edx
dec    %edi
inc    %edx
inc    %ebp
pop    %edi
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    1c3d0 <_IO_stdin_used+0x1070>
and    %ch,%fs:0x6f(%esi)
je     1c38a <_IO_stdin_used+0x102a>
jae    1c3d1 <_IO_stdin_used+0x1071>
je     1c3d3 <_IO_stdin_used+0x1073>
outsb  %ds:(%esi),(%dx)
jbe    1c399 <_IO_stdin_used+0x1039>
dec    %ebp
dec    %edi
inc    %esp
push   %eax
push   %edx
dec    %edi
inc    %edx
inc    %ebp
pop    %edi
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
sub    $0x20,%al
and    0xa292273,%ah
add    %al,(%eax)
add    %ch,0x6f(%edi,%ebp,2)
imul   $0x20,0x70(%ebp),%esi
popaw
imul   $0x74202d20,0x64(%ebp,%eiz,2),%ebp
jb     1c418 <_IO_stdin_used+0x10b8>
imul   $0x206f7420,0x67(%esi),%ebp
arpl   %bp,0x65(%eax)
arpl   %bp,0x20(%ebx)
imul   $0x73277469,0x20(%esi),%esp
and    %ah,0x75(%edx)
imul   $0xa6e,0x69(%esp,%esi,2),%ebp
add    %al,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1c431 <_IO_stdin_used+0x10d1>
and    %ah,%gs:0x6c612073
jb     1c433 <_IO_stdin_used+0x10d3>
popa
fs
jns    1c3f2 <_IO_stdin_used+0x1092>
imul   $0x6e72656b,0x20(%esi),%ebp
gs
insb   (%dx),%es:(%edi)
and    %ch,(%eax)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1c44c <_IO_stdin_used+0x10ec>
outsb  %ds:(%esi),(%dx)
sub    %ebp,(%esi)
or     (%eax),%al
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1c412 <_IO_stdin_used+0x10b2>
imul   $0x20747265,0x73(%esi),%ebp
daa
and    $0x203a2773,%eax
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1c470 <_IO_stdin_used+0x1110>
and    %ah,%gs:0x6c(%ecx)
jb     1c46f <_IO_stdin_used+0x110f>
popa
fs
jns    1c42e <_IO_stdin_used+0x10ce>
imul   $0x6e72656b,0x20(%esi),%ebp
gs
insb   (%dx),%es:(%edi)
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    1c48c <_IO_stdin_used+0x112c>
and    %ch,%fs:0x6f(%esi)
je     1c446 <_IO_stdin_used+0x10e6>
imul   $0x20747265,0x73(%esi),%ebp
daa
and    $0x203a2773,%eax
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %ch,0x6e(%ecx)
and    %ch,0x6f(%ebp)
fs
jne    1c4b6 <_IO_stdin_used+0x1156>
gs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     1c470 <_IO_stdin_used+0x1110>
jne    1c4c0 <_IO_stdin_used+0x1160>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%eax)
jb     1c4bd <_IO_stdin_used+0x115d>
insl   (%dx),%es:(%edi)
gs
je     1c4c5 <_IO_stdin_used+0x1165>
jb     1c482 <_IO_stdin_used+0x1122>
sub    %dh,0x65(%ebx)
and    %ah,%gs:0x65(%ebp,%ebp,2)
jae    1c4d3 <_IO_stdin_used+0x1173>
sub    %ecx,(%edx)
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1c49a <_IO_stdin_used+0x113a>
addr16
gs
je     1c49e <_IO_stdin_used+0x113e>
jae    1c4ef <_IO_stdin_used+0x118f>
data16
je     1c4e7 <_IO_stdin_used+0x1187>
gs
jo     1c4f9 <_IO_stdin_used+0x1199>
and    %ch,0x66(%edi)
and    %ah,(%edi)
and    $0x203a2773,%eax
and    $0x45000a73,%eax
jb     1c509 <_IO_stdin_used+0x11a9>
outsl  %ds:(%esi),(%dx)
jb     1c4ba <_IO_stdin_used+0x115a>
jb     1c511 <_IO_stdin_used+0x11b1>
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x20732520,0x67(%esi),%ebp
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%esi)
jb     1c4d1 <_IO_stdin_used+0x1171>
and    $0xa73,%eax
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    1c528 <_IO_stdin_used+0x11c8>
and    %ch,%fs:0x6f(%esi)
je     1c4e2 <_IO_stdin_used+0x1182>
jo     1c536 <_IO_stdin_used+0x11d6>
gs
jo     1c52c <_IO_stdin_used+0x11cc>
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x70(%edi)
je     1c537 <_IO_stdin_used+0x11d7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1c4f2 <_IO_stdin_used+0x1192>
data16
jb     1c544 <_IO_stdin_used+0x11e4>
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bp,%si),%cl
or     %esp,0x6f5b2073
jo     1c56b <_IO_stdin_used+0x120b>
imul   $0x5b205d73,0x6e(%edi),%ebp
sub    $0x5b205d69,%eax
sub    $0x6d205d62,%eax
outsl  %ds:(%esi),(%dx)
fs
jne    1c578 <_IO_stdin_used+0x1218>
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
or     %gs:(%ecx),%cl
and    $0x6f5b2073,%eax
jo     1c58e <_IO_stdin_used+0x122e>
imul   $0x2d205d73,0x6e(%edi),%ebp
popa
and    %bl,0x2d(%ebx)
imul   $0x5d622d5b,0x20(%ebp),%ebx
and    %ch,0x6f(%ebp)
fs
jne    1c59e <_IO_stdin_used+0x123e>
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %bl,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
jne    1c5aa <_IO_stdin_used+0x124a>
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cs
cs
cs
pop    %ebp
or     (%ecx),%cl
and    $0x6f5b2073,%eax
jo     1c5c4 <_IO_stdin_used+0x1264>
imul   $0x2d205d73,0x6e(%edi),%ebp
jb     1c579 <_IO_stdin_used+0x1219>
pop    %ebx
sub    $0x6d205d69,%eax
outsl  %ds:(%esi),(%dx)
fs
jne    1c5cf <_IO_stdin_used+0x126f>
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
or     %gs:(%ecx),%cl
and    $0x6f5b2073,%eax
jo     1c5e5 <_IO_stdin_used+0x1285>
imul   $0x2d205d73,0x6e(%edi),%ebp
jb     1c59a <_IO_stdin_used+0x123a>
sub    $0x2d5b2061,%eax
imul   $0x75646f6d,0x20(%ebp),%ebx
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %bl,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
jne    1c5ff <_IO_stdin_used+0x129f>
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cs
cs
cs
pop    %ebp
or     (%ecx),%cl
and    $0x6f5b2073,%eax
jo     1c619 <_IO_stdin_used+0x12b9>
imul   $0x2d205d73,0x6e(%edi),%ebp
arpl   %cx,(%edx)
or     %esp,0x6f5b2073
jo     1c62a <_IO_stdin_used+0x12ca>
imul   $0x2d205d73,0x6e(%edi),%ebp
sub    $0x706d7564,%eax
sub    $0x76646f6d,%eax
gs
jb     1c63d <_IO_stdin_used+0x12dd>
imul   $0x69662073,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
or     %gs:0x61(%ebp),%cl
outsb  %ds:(%esi),(%dx)
popa
addr16
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     1c603 <_IO_stdin_used+0x12a3>
dec    %edi
jo     1c65a <_IO_stdin_used+0x12fa>
imul   $0x90a3a73,0x6e(%edi),%ebp
sub    $0x2d202c61,%eax
sub    $0x206c6c61,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1c677 <_IO_stdin_used+0x1317>
fs
gs
jb     1c632 <_IO_stdin_used+0x12d2>
gs
jbe    1c67a <_IO_stdin_used+0x131a>
jb     1c690 <_IO_stdin_used+0x1330>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    $0x75677261,%eax
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     1c645 <_IO_stdin_used+0x12e5>
je     1c696 <_IO_stdin_used+0x1336>
or     (%ecx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
bound  %esp,0x20(%ebp)
popa
and    %ch,0x6f(%ebp)
fs
jne    1c6bb <_IO_stdin_used+0x135b>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
bound  %esp,0x20(%ebp)
imul   $0x65747265,0x73(%esi),%ebp
or     %fs:(%ecx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jb     1c6a5 <_IO_stdin_used+0x1345>
jb     1c6ec <_IO_stdin_used+0x138c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1c6f0 <_IO_stdin_used+0x1390>
and    %ch,%fs:(%eax)
sub    $0x90a2972,%eax
sub    $0x2d202c72,%eax
sub    $0x6f6d6572,%eax
jbe    1c704 <_IO_stdin_used+0x13a4>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1c71a <_IO_stdin_used+0x13ba>
and    %ch,0x6f(%ebp)
fs
jne    1c727 <_IO_stdin_used+0x13c7>
gs
jae    1c6de <_IO_stdin_used+0x137e>
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %ch,0x6e(%ecx)
jae    1c732 <_IO_stdin_used+0x13d2>
jb     1c743 <_IO_stdin_used+0x13e3>
imul   $0x2020090a,0x67(%esi),%ebp
and    %ah,(%eax)
sub    $0x6d65722d,%eax
outsl  %ds:(%esi),(%dx)
jbe    1c745 <_IO_stdin_used+0x13e5>
sub    $0x65706564,%eax
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1c70e <_IO_stdin_used+0x13ae>
and    %ah,(%eax)
inc    %ecx
insb   (%dx),%es:(%edi)
jae    1c763 <_IO_stdin_used+0x1403>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1c760 <_IO_stdin_used+0x1400>
and    %ch,0x6f(%ebp)
fs
jne    1c76d <_IO_stdin_used+0x140d>
gs
jae    1c724 <_IO_stdin_used+0x13c4>
fs
gs
jo     1c76d <_IO_stdin_used+0x140d>
outsb  %ds:(%esi),(%dx)
imul   $0x206e6f20,%fs:0x67(%esi),%ebp
imul   $0x202c522d,0x9(%edx,%ecx,1),%esi
sub    $0x7365722d,%eax
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jbe    1c787 <_IO_stdin_used+0x1427>
sub    $0x61696c61,%eax
jae    1c749 <_IO_stdin_used+0x13e9>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %edi
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    1c756 <_IO_stdin_used+0x13f6>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x72(%eax)
imul   $0x696c6120,0x74(%esi),%ebp
popa
jae    1c76d <_IO_stdin_used+0x140d>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20202020,0x9(%edx,%ecx,1),%esi
sub    $0x7269662d,%eax
jae    1c7d6 <_IO_stdin_used+0x1476>
sub    $0x656d6974,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
popa
imul   $0x6f6d2066,0x69(%eax,%eiz,1),%ebp
fs
jne    1c7ec <_IO_stdin_used+0x148c>
and    %ah,%gs:0x6c(%ecx)
jb     1c7eb <_IO_stdin_used+0x148b>
popa
fs
jns    1c7aa <_IO_stdin_used+0x144a>
imul   $0x65747265,0x73(%esi),%ebp
and    %ch,%fs:0x72(%edi)
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1c801 <_IO_stdin_used+0x14a1>
or     %fs:(%ecx),%cl
sub    $0x2d202c69,%eax
sub    $0x6f6e6769,%eax
jb     1c810 <_IO_stdin_used+0x14b0>
sub    $0x74736e69,%eax
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1c826 <_IO_stdin_used+0x14c6>
and    %ch,0x6e(%ecx)
jae    1c83a <_IO_stdin_used+0x14da>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    1c7dd <_IO_stdin_used+0x147d>
or     %ebp,0x2d202c69
sub    $0x6f6e6769,%eax
jb     1c845 <_IO_stdin_used+0x14e5>
sub    $0x6f6d6572,%eax
jbe    1c84c <_IO_stdin_used+0x14ec>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1c85b <_IO_stdin_used+0x14fb>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1c862 <_IO_stdin_used+0x1502>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    1c811 <_IO_stdin_used+0x14b1>
or     %ebp,0x2d202c62
sub    $0x2d657375,%eax
bound  %ebp,0x63(%ecx,%eiz,2)
imul   $0x74,0x73(%ecx,%ebp,2),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x70(%ecx)
jo     1c894 <_IO_stdin_used+0x1534>
jns    1c84a <_IO_stdin_used+0x14ea>
bound  %ebp,0x63(%ecx,%eiz,2)
imul   $0x74,0x73(%ecx,%ebp,2),%ebp
and    %dh,0x20(%edi,%ebp,2)
jb     1c89e <_IO_stdin_used+0x153e>
jae    1c8aa <_IO_stdin_used+0x154a>
insb   (%dx),%es:(%edi)
jbe    1c8a3 <_IO_stdin_used+0x1543>
and    %ah,%fs:0x6c(%ecx)
imul   $0x2d090a2e,0x73(%ecx),%esp
data16
sub    $0x20,%al
sub    $0x726f662d,%eax
arpl   %sp,0x20(%ebp)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     1c8cb <_IO_stdin_used+0x156b>
and    %ch,%gs:0x6f(%ebp)
fs
jne    1c8db <_IO_stdin_used+0x157b>
and    %ch,%gs:0x6e(%ecx)
jae    1c8da <_IO_stdin_used+0x157a>
jb     1c8eb <_IO_stdin_used+0x158b>
imul   $0x20726f20,0x6e(%edi),%ebp
jb     1c8e5 <_IO_stdin_used+0x1585>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    1c8e5 <_IO_stdin_used+0x1585>
insb   (%dx),%es:(%edi)
or     %cs:(%ecx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x7365696c,0x70(%ebp),%ebp
and    %ch,0x726f662d
arpl   %sp,0x2d(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    1c91e <_IO_stdin_used+0x15be>
jb     1c92e <_IO_stdin_used+0x15ce>
imul   $0x6e612073,0x6e(%edi),%ebp
or     %fs:(%ecx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x726f662d,%eax
arpl   %sp,0x2d(%ebp)
jbe    1c950 <_IO_stdin_used+0x15f0>
jb     1c95a <_IO_stdin_used+0x15fa>
popa
imul   $0x20202009,0xa(%bp,%di),%esp
and    %ch,0x726f662d
arpl   %sp,0x2d(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    1c969 <_IO_stdin_used+0x1609>
jb     1c979 <_IO_stdin_used+0x1619>
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1c97a <_IO_stdin_used+0x161a>
and    %ch,0x6f(%ebp)
fs
jne    1c987 <_IO_stdin_used+0x1627>
gs
daa
jae    1c93f <_IO_stdin_used+0x15df>
jbe    1c986 <_IO_stdin_used+0x1626>
jb     1c996 <_IO_stdin_used+0x1636>
imul   $0x2020090a,0x6e(%edi),%ebp
and    %ah,(%eax)
sub    $0x726f662d,%eax
arpl   %sp,0x2d(%ebp)
jbe    1c99b <_IO_stdin_used+0x163b>
jb     1c9a5 <_IO_stdin_used+0x1645>
popa
imul   $0x20202020,0x20(%bp,%di),%esp
and    %ah,(%eax)
and    %cl,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1c9af <_IO_stdin_used+0x164f>
and    %ch,0x6f(%ebp)
fs
jne    1c9bc <_IO_stdin_used+0x165c>
gs
daa
jae    1c974 <_IO_stdin_used+0x1614>
jbe    1c9bb <_IO_stdin_used+0x165b>
jb     1c9cb <_IO_stdin_used+0x166b>
imul   $0x67616d20,0x6e(%edi),%ebp
imul   $0x6575510a,0xa(%ebx),%esp
jb     1c9e1 <_IO_stdin_used+0x1681>
and    %cl,0x70(%edi)
je     1c9d6 <_IO_stdin_used+0x1676>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1c9ab <_IO_stdin_used+0x164b>
or     (%ecx),%cl
sub    $0x2d202c44,%eax
sub    $0x776f6873,%eax
sub    $0x65706564,%eax
outsb  %ds:(%esi),(%dx)
fs
jae    1c9a6 <_IO_stdin_used+0x1646>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %cl,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    1c9b4 <_IO_stdin_used+0x1654>
jo     1ca08 <_IO_stdin_used+0x16a8>
imul   $0x646f6d20,0x74(%esi),%ebp
jne    1ca0b <_IO_stdin_used+0x16ab>
and    %ah,%gs:0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1c9ce <_IO_stdin_used+0x166e>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x78(%ebp)
imul   $0x202c632d,0x9(%edx,%ecx,1),%esi
sub    $0x6f68732d,%eax
ja     1ca26 <_IO_stdin_used+0x16c6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x2020,0x20(%edi),%sp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
imul   $0x74756f20,0x74(%esi),%ebp
and    %ch,0x6e(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1ca51 <_IO_stdin_used+0x16f1>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     1ca58 <_IO_stdin_used+0x16f8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x202c632d,0x9(%edx,%ecx,1),%esi
sub    $0x6f68732d,%eax
ja     1ca34 <_IO_stdin_used+0x16d4>
arpl   %bp,0x6e(%edi)
imul   $0x2020,0x20(%edi),%sp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6f68732d
ja     1ca8a <_IO_stdin_used+0x172a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x2009,0xa(%edi),%sp
and    %ah,(%eax)
and    %ch,0x6f68732d
ja     1ca66 <_IO_stdin_used+0x1706>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    1caa3 <_IO_stdin_used+0x1743>
jb     1cab3 <_IO_stdin_used+0x1753>
imul   $0x20202073,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %al,0x6d(%ebp,%esi,2)
jo     1ca6f <_IO_stdin_used+0x170f>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1cac0 <_IO_stdin_used+0x1760>
and    %dh,%gs:0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %dh,0x65(%esi)
jb     1cad4 <_IO_stdin_used+0x1774>
imul   $0x646e6120,0x6e(%edi),%ebp
and    %ah,0x78(%ebp)
imul   $0x20202020,0x9(%edx,%ecx,1),%esi
sub    $0x6d75642d,%eax
jo     1caa7 <_IO_stdin_used+0x1747>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    1cae4 <_IO_stdin_used+0x1784>
jb     1caf4 <_IO_stdin_used+0x1794>
imul   $0x20202073,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %dl,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6f68732d
ja     1cac7 <_IO_stdin_used+0x1767>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    1cb04 <_IO_stdin_used+0x17a4>
jb     1cb14 <_IO_stdin_used+0x17b4>
imul   $0x470a0a73,0x6e(%edi),%ebp
outsb  %gs:(%esi),(%dx)
gs
jb     1cb0e <_IO_stdin_used+0x17ae>
insb   (%dx),%es:(%edi)
and    %cl,0x70(%edi)
je     1cb1c <_IO_stdin_used+0x17bc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1caf1 <_IO_stdin_used+0x1791>
or     (%ecx),%cl
sub    $0x2d202c6e,%eax
sub    $0x2d797264,%eax
jb     1cb3a <_IO_stdin_used+0x17da>
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     1cafc <_IO_stdin_used+0x179c>
gs
js     1cb44 <_IO_stdin_used+0x17e4>
arpl   %si,0x74(%ebp)
and    %ch,%gs:0x70(%edi)
gs
jb     1cb4a <_IO_stdin_used+0x17ea>
je     1cb54 <_IO_stdin_used+0x17f4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1cb1b <_IO_stdin_used+0x17bb>
and    %ch,0x75(%edx)
jae    1cb68 <_IO_stdin_used+0x1808>
and    %dh,0x72(%eax)
imul   $0x74756f20,0x74(%esi),%ebp
or     (%ecx),%cl
sub    $0x2d202c6e,%eax
sub    $0x776f6873,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x7972642d
sub    $0xa6e7572,%eax
or     %ebp,0x2d202c43
sub    $0x666e6f63,%eax
imul   $0x454c4946,0x3d(%edi),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %al,%gs:0x49(%esi)
dec    %esp
inc    %ebp
and    %ch,0x6e(%ecx)
jae    1cbcc <_IO_stdin_used+0x186c>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    1cbd1 <_IO_stdin_used+0x1871>
je     1cb87 <_IO_stdin_used+0x1827>
jae    1cbce <_IO_stdin_used+0x186e>
popa
jb     1cbcf <_IO_stdin_used+0x186f>
push   $0x74617020
push   $0x2d090a73
fs
sub    $0x20,%al
sub    $0x7269642d,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x20524944,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebp
jae    1cbf9 <_IO_stdin_used+0x1899>
and    %al,0x52(%ecx,%ecx,2)
and    %ah,0x73(%ecx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    1cc1b <_IO_stdin_used+0x18bb>
jae    1cc18 <_IO_stdin_used+0x18b8>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     1cbcc <_IO_stdin_used+0x186c>
outsw  %ds:(%esi),(%dx)
jb     1cbd0 <_IO_stdin_used+0x1870>
das
insb   (%dx),%es:(%edi)
imul   $0x75646f6d,0x2f(%edx),%esp
insb   (%dx),%es:(%edi)
gs
jae    1cbc7 <_IO_stdin_used+0x1867>
or     %ebp,0x2d202c53
sub    $0x2d746573,%eax
jbe    1cc2f <_IO_stdin_used+0x18cf>
jb     1cc3f <_IO_stdin_used+0x18df>
imul   $0x5245563d,0x6e(%edi),%ebp
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %dl,%gs:0x45(%esi)
push   %edx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x6e(%ecx)
jae    1cc5e <_IO_stdin_used+0x18fe>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x75(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x90a6072
sub    $0x2d202c73,%eax
sub    $0x6c737973,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,(%bx,%si)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     1cc8d <_IO_stdin_used+0x192d>
imul   $0x206f7420,0x74(%esi),%ebp
jae    1cc9d <_IO_stdin_used+0x193d>
jae    1cc92 <_IO_stdin_used+0x1932>
outsl  %ds:(%esi),(%dx)
addr16 sub $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     1cc4e <_IO_stdin_used+0x18ee>
jae    1cca4 <_IO_stdin_used+0x1944>
fs
gs
jb     1cca6 <_IO_stdin_used+0x1946>
or     (%ecx),%cl
sub    $0x2d202c71,%eax
sub    $0x65697571,%eax
je     1cc62 <_IO_stdin_used+0x1902>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x20656c62,%fs:0x61(%ebx),%esi
insl   (%dx),%es:(%edi)
gs
jae    1ccd1 <_IO_stdin_used+0x1971>
popa
addr16
gs
jae    1cc6d <_IO_stdin_used+0x190d>
or     %ebp,0x2d202c76
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    1ccd6 <_IO_stdin_used+0x1976>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6e(%ebp)
popa
bound  %ebp,0x73(%ebp,%eiz,2)
and    %ch,0x6f(%ebp)
jb     1ccf1 <_IO_stdin_used+0x1991>
and    %ch,0x65(%ebp)
jae    1cd04 <_IO_stdin_used+0x19a4>
popa
addr16
gs
jae    1cca0 <_IO_stdin_used+0x1940>
or     %ebp,0x2d202c56
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1ccd8 <_IO_stdin_used+0x1978>
jbe    1cd1f <_IO_stdin_used+0x19bf>
jb     1cd2f <_IO_stdin_used+0x19cf>
imul   $0x682d090a,0x6e(%edi),%ebp
sub    $0x20,%al
sub    $0x6c65682d,%eax
jo     1ccec <_IO_stdin_used+0x198c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
ja     1cd02 <_IO_stdin_used+0x19a2>
je     1cd4c <_IO_stdin_used+0x19ec>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
and    (%eax),%esp
inc    %ebp
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x66(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     1cd6e <_IO_stdin_used+0x1a0e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    1cd3c <_IO_stdin_used+0x19dc>
and    %al,0x6d(%ebp,%esi,2)
jo     1cd7d <_IO_stdin_used+0x1a1d>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
fs
gs
js     1cd82 <_IO_stdin_used+0x1a22>
jae    1cd3f <_IO_stdin_used+0x19df>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     1cd5d <_IO_stdin_used+0x19fd>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    1cd98 <_IO_stdin_used+0x1a38>
and    %ch,%fs:0x6f(%esi)
je     1cd52 <_IO_stdin_used+0x19f2>
addr16
gs
je     1cd56 <_IO_stdin_used+0x19f6>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    1cda0 <_IO_stdin_used+0x1a40>
jb     1cdb0 <_IO_stdin_used+0x1a50>
imul   $0x666f2073,0x6e(%edi),%ebp
and    %ah,0x25203a73
jae    1cd56 <_IO_stdin_used+0x19f6>
add    %al,(%eax)
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1cd7a <_IO_stdin_used+0x1a1a>
addr16 popa
je     1cdc6 <_IO_stdin_used+0x1a66>
gs
jb     1cd81 <_IO_stdin_used+0x1a21>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1cdd2 <_IO_stdin_used+0x1a72>
and    %ch,%gs:0x70(%edi)
je     1cdd5 <_IO_stdin_used+0x1a75>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1cdaa <_IO_stdin_used+0x1a4a>
and    %ch,0x75(%edi)
je     1cda2 <_IO_stdin_used+0x1a42>
outsl  %ds:(%esi),(%dx)
sub    $0x656d,%ax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     1cdf7 <_IO_stdin_used+0x1a97>
or     (%eax),%al
and    %bl,%dl
std
call   *(%eax)
(bad)
incl   (%eax)
(bad)
push   %eax
fscale
jmp    *%eax
fscale
call   *%eax
fscale
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
call   *0x20fffdd7(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
(bad)
cmp    %bl,%al
std
ljmp   *0x20fffdd9(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
lcall  *0x48fffdd9(%eax)
fscale
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
pushl  (%eax)
fscale
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
lcall  *(%eax)
fscale
decl   (%eax)
fscale
(bad)
fcom   %st(7)
std
jmp    *0x20fffdd8(%eax)
(bad)
(bad)
clc
fdivr  %st(5),%st
jmp    *(%eax)
(bad)
(bad)
mov    $0x28fffdd8,%eax
fdivr  %st(5),%st
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
lcall  *(%eax)
fdivr  %st(5),%st
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
(bad)
clc
xlat   %ds:(%ebx)
std
(bad)
call   7901cd24 <_end+0x78ff5b20>
fscale
jmp    *(%eax)
(bad)
jmp    *(%eax)
(bad)
jmp    *-0x27(%eax)
std
jmp    *0x72(%ecx)
push   %edx
imul   $0x436e6344,0x66(%edx),%esp
cmp    0x53(%edx,%edi,1),%ah
cmp    0x71(%ebx),%dh
jbe    1cfc5 <_IO_stdin_used+0x1c65>
push   $0x65726600
and    %ah,%gs:0x79732070
insl   (%dx),%es:(%edi)
cmp    $0x202c7325,%eax
outsl  %ds:(%esi),(%dx)
ja     1cff2 <_IO_stdin_used+0x1c92>
gs
jb     1cfc4 <_IO_stdin_used+0x1c64>
and    $0x73252070,%eax
or     (%eax),%al
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
add    %dh,%fs:0x6f(%ebx)
jne    1d00a <_IO_stdin_used+0x1caa>
arpl   %sp,0x0(%ebp)
jo     1cffe <_IO_stdin_used+0x1c9e>
je     1d007 <_IO_stdin_used+0x1ca7>
and    %ch,0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %ah,(%di)
jae    1cfd4 <_IO_stdin_used+0x1c74>
jae    1cfbb <_IO_stdin_used+0x1c5b>
add    %ah,0x73(%esi)
je     1d017 <_IO_stdin_used+0x1cb7>
je     1d019 <_IO_stdin_used+0x1cb9>
je     1cfe2 <_IO_stdin_used+0x1c82>
and    $0x25202c64,%eax
jae    1cfea <_IO_stdin_used+0x1c8a>
cmp    (%eax),%ah
and    $0x6f000a6d,%eax
jo     1d02f <_IO_stdin_used+0x1ccf>
outsb  %ds:(%esi),(%dx)
popa
je     1cff6 <_IO_stdin_used+0x1c96>
and    $0x25202c64,%eax
jae    1d001 <_IO_stdin_used+0x1ca1>
and    %cl,0x5f(%edi)
push   %edx
inc    %esp
dec    %edi
dec    %esi
dec    %esp
pop    %ecx
sub    %edi,(%edx)
and    %ah,0x66000a6d
outsl  %fs:(%esi),(%dx)
jo     1d04f <_IO_stdin_used+0x1cef>
outsb  %ds:(%esi),(%dx)
imul   $0x3a296425,%fs:0x28(%edx),%esi
and    %ah,0x25000a6d
jae    1d01b <_IO_stdin_used+0x1cbb>
and    $0x20756c6c,%eax
imul   $0x6577656e,0x20(%ebx),%esi
jb     1d029 <_IO_stdin_used+0x1cc9>
je     1d073 <_IO_stdin_used+0x1d13>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0xa756c6c
add    %dh,0x6e(%ebp)
jae    1d08d <_IO_stdin_used+0x1d2d>
jo     1d08a <_IO_stdin_used+0x1d2a>
outsl  %ds:(%esi),(%dx)
jb     1d091 <_IO_stdin_used+0x1d31>
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %ah,%gs:0x25203a73
outsl  %ds:(%esi),(%dx)
or     (%eax),%al
popaw
imul   $0x3a732520,0x64(%ebp,%eiz,2),%ebp
and    %ah,0x66000a73
jb     1d0a9 <_IO_stdin_used+0x1d49>
and    %ah,%gs:0x6d6b2070
outsl  %ds:(%esi),(%dx)
fs
cmp    $0x202c7025,%eax
jo     1d0b5 <_IO_stdin_used+0x1d55>
je     1d0be <_IO_stdin_used+0x1d5e>
cmp    $0xa7325,%eax
push   $0x5f687361
popa
fs
fs
pop    %edi
jne    1d0d4 <_IO_stdin_used+0x1d74>
imul   $0x73252065,0x75(%ecx),%esi
cmp    (%eax),%ah
and    $0x61000a73,%eax
fs and %ah,%fs:0x6d6b2070
outsl  %ds:(%esi),(%dx)
fs
cmp    $0x202c7025,%eax
jo     1d0e6 <_IO_stdin_used+0x1d86>
je     1d0ef <_IO_stdin_used+0x1d8f>
cmp    $0xa7325,%eax
popa
insb   (%dx),%es:(%edi)
imul   $0x6d797320,0x73(%ecx),%esp
bound  %ebp,0x6c(%edi)
cmp    0x73252073,%ah
or     (%eax),%al
fs
gs
jbe    1d112 <_IO_stdin_used+0x1db2>
popa
insl   (%dx),%es:(%edi)
cmp    %gs:(%eax),%al
arpl   %bp,0x61(%eax)
jb     1d0db <_IO_stdin_used+0x1d7b>
insl   (%dx),%es:(%edi)
popa
push   $0x6f
jb     1d0e1 <_IO_stdin_used+0x1d81>
and    $0x75252d75,%eax
add    %ah,0x6c(%edx)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
push   $0x6f
jb     1d0f3 <_IO_stdin_used+0x1d93>
and    $0x75252d75,%eax
add    %ah,0x73252073
and    %ah,0x3a752563
and    $0x73000a75,%eax
outsl  %ds:(%esi),(%dx)
data16
je     1d144 <_IO_stdin_used+0x1de4>
gs
jo     1d103 <_IO_stdin_used+0x1da3>
and    $0x73252073,%eax
or     (%eax),%al
popa
insb   (%dx),%es:(%edi)
imul   $0x20732520,0x73(%ecx),%esp
and    $0x64000a73,%eax
jne    1d16a <_IO_stdin_used+0x1e0a>
insb   (%dx),%es:(%edi)
imul   $0x6d206574,0x61(%ebx),%esp
outsl  %ds:(%esi),(%dx)
fs
jne    1d172 <_IO_stdin_used+0x1e12>
and    %ah,%gs:0x70(%ebp,%eiz,2)
jae    1d147 <_IO_stdin_used+0x1de7>
or     0x25000a73,%ah
jae    1d14f <_IO_stdin_used+0x1def>
add    %dh,0x65(%ebx)
popa
jb     1d17e <_IO_stdin_used+0x1e1e>
push   $0x64646120
cmp    (%eax),%ah
outsl  %ds:(%esi),(%dx)
jne    1d199 <_IO_stdin_used+0x1e39>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     1d1a8 <_IO_stdin_used+0x1e48>
or     (%eax),%al
jae    1d198 <_IO_stdin_used+0x1e38>
popa
jb     1d199 <_IO_stdin_used+0x1e39>
push   $0x64646120
cmp    (%eax),%ah
and    $0x62202c73,%eax
jne    1d1ad <_IO_stdin_used+0x1e4d>
insb   (%dx),%es:(%edi)
je     1d1b0 <_IO_stdin_used+0x1e50>
outsb  %ds:(%esi),(%dx)
cmp    $0x75686825,%eax
or     (%eax),%al
popa
fs and %ah,%fs:0x79732070
insl   (%dx),%es:(%edi)
cmp    $0x202c7325,%eax
outsl  %ds:(%esi),(%dx)
ja     1d1cf <_IO_stdin_used+0x1e6f>
gs
jb     1d1a1 <_IO_stdin_used+0x1e41>
and    $0x73252070,%eax
or     (%eax),%al
pop    %edi
pop    %edi
je     1d1d7 <_IO_stdin_used+0x1e77>
imul   $0x75646f6d,0x5f(%ebx),%esi
insb   (%dx),%es:(%edi)
add    %bl,%gs:0x47(%edi)
dec    %esp
dec    %edi
inc    %edx
inc    %ecx
dec    %esp
pop    %edi
dec    %edi
inc    %esi
inc    %esi
push   %ebx
inc    %ebp
push   %esp
pop    %edi
push   %esp
inc    %ecx
inc    %edx
dec    %esp
inc    %ebp
pop    %edi
add    %ah,0x75(%edx)
imul   $0x74006e69,0x2d(%esp,%esi,2),%ebp
jb     1d214 <_IO_stdin_used+0x1eb4>
and    %ah,0x25282073
jae    1d1cc <_IO_stdin_used+0x1e6c>
or     (%eax),%al
cs
cs
das
je     1d219 <_IO_stdin_used+0x1eb9>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jae    1d1dd <_IO_stdin_used+0x1e7d>
fs
gs
jo     1d21f <_IO_stdin_used+0x1ebf>
outsl  %ds:(%esi),(%dx)
fs arpl %ax,%cs:%fs:(%eax)
outsl  %ds:(%esi),(%dx)
jbe    1d21f <_IO_stdin_used+0x1ebf>
jb     1d22e <_IO_stdin_used+0x1ece>
imul   $0xa7325,0x20(%ebp,%eiz,2),%esp
jae    1d22b <_IO_stdin_used+0x1ecb>
popa
jb     1d22c <_IO_stdin_used+0x1ecc>
push   $0xa732520
add    %ah,0x6c(%ebp,%eiz,2)
and    %ah,0x6d6b2070
outsl  %ds:(%esi),(%dx)
fs
cmp    $0x202c7025,%eax
jo     1d242 <_IO_stdin_used+0x1ee2>
je     1d24b <_IO_stdin_used+0x1eeb>
cmp    $0xa7325,%eax
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1d212 <_IO_stdin_used+0x1eb2>
popa
fs and %ch,%fs:0x6f(%ebp)
fs
jne    1d267 <_IO_stdin_used+0x1f07>
and    %ah,%gs:0x25203a73
jae    1d20e <_IO_stdin_used+0x1eae>
add    %ah,0x6f6d2f73
fs
jne    1d279 <_IO_stdin_used+0x1f19>
gs
jae    1d23e <_IO_stdin_used+0x1ede>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1d27f <_IO_stdin_used+0x1f1f>
outsb  %ds:(%esi),(%dx)
add    %ah,0x6f(%ebx)
jne    1d288 <_IO_stdin_used+0x1f28>
and    %ch,%fs:0x6f(%esi)
je     1d242 <_IO_stdin_used+0x1ee2>
outsl  %ds:(%esi),(%dx)
jo     1d28a <_IO_stdin_used+0x1f2a>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25203a73
insl   (%dx),%es:(%edi)
or     (%eax),%al
and    $0x75252e75,%eax
add    %ah,0x70(%ebp,%esi,2)
insb   (%dx),%es:(%edi)
imul   $0x6d206574,0x61(%ebx),%esp
outsl  %ds:(%esi),(%dx)
fs
jne    1d2b0 <_IO_stdin_used+0x1f50>
and    %dh,%gs:0x79(%ebx)
insl   (%dx),%es:(%edi)
jae    1d285 <_IO_stdin_used+0x1f25>
or     0x73252073,%ah
or     (%eax),%al
push   %ebp
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     1d2bc <_IO_stdin_used+0x1f5c>
push   $0x62206465
jb     1d2c1 <_IO_stdin_used+0x1f61>
arpl   %bp,0x65(%ebx)
je     1d285 <_IO_stdin_used+0x1f25>
imul   $0xa7325,0x20(%esi),%ebp
and    $0x656e2073,%eax
gs
fs
jae    1d295 <_IO_stdin_used+0x1f35>
and    0x203a2273,%ah
and    $0x28000a73,%eax
jne    1d2f0 <_IO_stdin_used+0x1f90>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
sub    %eax,(%eax)
inc    %ebp
jb     1d2fe <_IO_stdin_used+0x1f9e>
outsl  %ds:(%esi),(%dx)
jb     1d2c9 <_IO_stdin_used+0x1f69>
and    %ch,0x75(%edi)
je     1d2c1 <_IO_stdin_used+0x1f61>
outsl  %ds:(%esi),(%dx)
sub    $0x656d,%ax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     1d316 <_IO_stdin_used+0x1fb6>
or     (%eax),%al
sub    $0x6e6f2050,%eax
insb   (%dx),%es:(%edi)
jns    1d2c7 <_IO_stdin_used+0x1f67>
je     1d30a <_IO_stdin_used+0x1faa>
imul   $0x20,0x73(%ebp),%esp
popa
and    %dh,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
and    %ah,%gs:0x68(%ebx)
popa
jb     1d2c5 <_IO_stdin_used+0x1f65>
add    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
sub    %ch,%gs:(%ecx)
and    %ah,0x61(%esi)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1d341 <_IO_stdin_used+0x1fe1>
gs
jae    1d306 <_IO_stdin_used+0x1fa6>
fs
gs
jo     1d2dc <_IO_stdin_used+0x1f7c>
fs
gs
jo     1d34d <_IO_stdin_used+0x1fed>
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x25203a74,0x69(%esi),%ebp
jae    1d2f6 <_IO_stdin_used+0x1f96>
add    %ch,0x61(%edi,%ebp,2)
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
jbe    1d35c <_IO_stdin_used+0x1ffc>
jb     1d36c <_IO_stdin_used+0x200c>
cmp    (%eax),%ah
and    $0x25203a73,%eax
insl   (%dx),%es:(%edi)
or     (%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
jbe    1d372 <_IO_stdin_used+0x2012>
jb     1d382 <_IO_stdin_used+0x2022>
cmp    (%eax),%ah
and    $0x20000a73,%eax
or     %eax,(%eax)
jbe    1d387 <_IO_stdin_used+0x2027>
insb   (%dx),%es:(%edi)
imul   $0x6f6c0078,0x75(%esi),%ebp
popa
fs gs and %dh,%fs:%gs:0x79(%ebx)
insl   (%dx),%es:(%edi)
jbe    1d391 <_IO_stdin_used+0x2031>
jb     1d3a1 <_IO_stdin_used+0x2041>
cmp    (%eax),%ah
and    $0x63000a73,%eax
outsl  %ds:(%esi),(%dx)
jne    1d3a4 <_IO_stdin_used+0x2044>
and    %ch,%fs:0x6f(%esi)
je     1d35e <_IO_stdin_used+0x1ffe>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:0x25203a73
jae    1d354 <_IO_stdin_used+0x1ff4>
add    %ch,0x61(%edi,%ebp,2)
and    %dl,%fs:0x79(%ebx)
jae    1d3c8 <_IO_stdin_used+0x2068>
gs
insl   (%dx),%es:(%edi)
cs
insl   (%dx),%es:(%edi)
popa
jo     1d395 <_IO_stdin_used+0x2035>
and    %ah,0x25203a73
insl   (%dx),%es:(%edi)
or     (%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dl,%fs:0x79(%ebx)
jae    1d3e1 <_IO_stdin_used+0x2081>
gs
insl   (%dx),%es:(%edi)
cs
insl   (%dx),%es:(%edi)
popa
jo     1d3ae <_IO_stdin_used+0x204e>
and    %ah,0x25000a73
jae    1d3b6 <_IO_stdin_used+0x2056>
and    $0x69203a75,%eax
outsb  %ds:(%esi),(%dx)
jbe    1d3e5 <_IO_stdin_used+0x2085>
insb   (%dx),%es:(%edi)
imul   $0x3a656e69,0x6c(%eax,%eiz,1),%esp
and    %ah,0x6c000a73
outsl  %ds:(%esi),(%dx)
popa
fs gs and %dl,%fs:%gs:0x79(%ebx)
jae    1d411 <_IO_stdin_used+0x20b1>
gs
insl   (%dx),%es:(%edi)
cs
insl   (%dx),%es:(%edi)
popa
jo     1d3de <_IO_stdin_used+0x207e>
and    %ah,0x2d000a73
and    %ch,%gs:0x65(%esi)
gs
fs
jae    1d3d2 <_IO_stdin_used+0x2072>
sub    $0x726f2045,%eax
and    %ch,0x63000a46
outsl  %ds:(%esi),(%dx)
jne    1d42c <_IO_stdin_used+0x20cc>
and    %ch,%fs:0x6f(%esi)
je     1d3e6 <_IO_stdin_used+0x2086>
jae    1d43c <_IO_stdin_used+0x20dc>
popa
je     1d3eb <_IO_stdin_used+0x208b>
daa
and    $0x203a2773,%eax
and    $0x66000a6d,%eax
imul   $0x73696c20,0x73(%ebp,%eiz,2),%ebp
je     1d400 <_IO_stdin_used+0x20a0>
and    $0x25203a73,%eax
insl   (%dx),%es:(%edi)
or     (%eax),%al
jb     1d44f <_IO_stdin_used+0x20ef>
popa
imul   $0x746e6520,%fs:0x67(%esi),%ebp
jb     1d46e <_IO_stdin_used+0x210e>
and    %ah,0x2e000a73
arpl   %bp,0x6e(%edi)
data16
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
jb     1d47c <_IO_stdin_used+0x211c>
and    %ah,%gs:0x25203a73
insl   (%dx),%es:(%edi)
or     (%eax),%al
or     %esp,(%eax)
add    %dh,0x65(%ebx)
popa
jb     1d47e <_IO_stdin_used+0x211e>
push   $0x65766f00
jb     1d494 <_IO_stdin_used+0x2134>
imul   $0x7265766f,0x0(%ebp,%eiz,2),%esp
jb     1d495 <_IO_stdin_used+0x2135>
fs and %ah,%fs:%gs:0x64(%ecx)
cmp    %fs:(%eax),%ah
outsl  %ds:(%esi),(%dx)
jne    1d4ab <_IO_stdin_used+0x214b>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     1d4ba <_IO_stdin_used+0x215a>
or     (%eax),%al
outsl  %ds:(%esi),(%dx)
jbe    1d4ab <_IO_stdin_used+0x214b>
jb     1d4ba <_IO_stdin_used+0x215a>
imul   $0x3a646461,0x20(%ebp,%eiz,2),%esp
and    %ah,0x69000a73
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x64(%ebp,%esi,2)
add    %ch,%gs:0x61(%ebp)
imul   $0x6d,0x5f(%ebp),%esp
popa
jo     1d4c5 <_IO_stdin_used+0x2165>
imul   $0x7500,0x73(%ebp,%eiz,2),%bp
jo     1d4d3 <_IO_stdin_used+0x2173>
popa
je     1d4d7 <_IO_stdin_used+0x2177>
jae    1d474 <_IO_stdin_used+0x2114>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     1d49e <_IO_stdin_used+0x213e>
jae    1d4e5 <_IO_stdin_used+0x2185>
popa
jb     1d4e6 <_IO_stdin_used+0x2186>
push   $0x646f6d20
jne    1d4f6 <_IO_stdin_used+0x2196>
gs
jae    1d4c7 <_IO_stdin_used+0x2167>
and    %ah,0x25000a73
jae    1d4cf <_IO_stdin_used+0x216f>
and    %ch,0x6f(%esi)
je     1d4ba <_IO_stdin_used+0x215a>
popa
bound  %esi,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    1d515 <_IO_stdin_used+0x21b5>
and    %dh,%gs:0x61(%eax)
je     1d50f <_IO_stdin_used+0x21af>
or     %cs:(%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1d4d7 <_IO_stdin_used+0x2177>
sub    %ah,0x6d20647a
outsl  %ds:(%esi),(%dx)
fs
jne    1d52d <_IO_stdin_used+0x21cd>
gs
jae    1d4ed <_IO_stdin_used+0x218d>
or     (%eax),%al
imul   $0x6e69726f,0x6e(%edi),%esp
and    %ah,(%di)
jae    1d50c <_IO_stdin_used+0x21ac>
and    %ch,0x6f(%esi)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1d4e8 <_IO_stdin_used+0x2188>
add    %ah,0x20(%edi,%ebp,2)
fs
gs
jo     1d54b <_IO_stdin_used+0x21eb>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1d50f <_IO_stdin_used+0x21af>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x25000a73
jae    1d519 <_IO_stdin_used+0x21b9>
outsb  %ds:(%esi),(%dx)
gs
gs
fs
jae    1d51f <_IO_stdin_used+0x21bf>
jne    1d56f <_IO_stdin_used+0x220f>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %ah,0x25000a73
jae    1d535 <_IO_stdin_used+0x21d5>
fs
gs
jo     1d57e <_IO_stdin_used+0x221e>
outsb  %ds:(%esi),(%dx)
fs
jae    1d53d <_IO_stdin_used+0x21dd>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73252073
or     (%eax),%al
jne    1d59c <_IO_stdin_used+0x223c>
gs
jb     1d59f <_IO_stdin_used+0x223f>
pop    %ebx
fs
jae    1d5a4 <_IO_stdin_used+0x2244>
pop    %edi
imul   $0x30203e20,0x5d(%eax,%edi,2),%esp
add    %ah,0x6e692073
and    %ah,0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
and    %ecx,%gs:(%edx)
add    %ah,0x6d742e73
jo     1d55a <_IO_stdin_used+0x21fa>
outsl  %ds:(%esi),(%dx)
jo     1d5c2 <_IO_stdin_used+0x2262>
outsb  %ds:(%esi),(%dx)
popa
je     1d589 <_IO_stdin_used+0x2229>
and    $0x25202c73,%eax
jae    1d594 <_IO_stdin_used+0x2234>
and    %ah,0x25202c6f
outsl  %ds:(%esi),(%dx)
sub    %edi,(%edx)
and    %ah,0x77000a6d
bound  %eax,(%eax)
outsw  %fs:(%esi),(%dx)
jo     1d5e3 <_IO_stdin_used+0x2283>
outsb  %ds:(%esi),(%dx)
sub    %ah,0x73253d64
das
and    $0x203a2973,%eax
and    $0x75000a6d,%eax
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x25287461,0x6b(%esi),%ebp
jae    1d5c7 <_IO_stdin_used+0x2267>
and    %ah,0x203a2973
and    $0x72000a6d,%eax
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
popa
je     1d5d6 <_IO_stdin_used+0x2276>
and    $0x25202c73,%eax
jae    1d5e1 <_IO_stdin_used+0x2281>
and    %ah,0x25202c73
jae    1d5e6 <_IO_stdin_used+0x2286>
cmp    (%eax),%ah
and    $0x25000a6d,%eax
jae    1d5f5 <_IO_stdin_used+0x2295>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1d637 <_IO_stdin_used+0x22d7>
gs
jae    1d5fc <_IO_stdin_used+0x229c>
outsl  %ds:(%esi),(%dx)
jb     1d635 <_IO_stdin_used+0x22d5>
gs
jb     1d5d4 <_IO_stdin_used+0x2274>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1d645 <_IO_stdin_used+0x22e5>
gs
jae    1d60a <_IO_stdin_used+0x22aa>
fs
gs
jo     1d60e <_IO_stdin_used+0x22ae>
bound  %ebp,0x6e(%ecx)
add    %ch,0x6f(%ebp)
fs
jne    1d655 <_IO_stdin_used+0x22f5>
gs
jae    1d61a <_IO_stdin_used+0x22ba>
popa
insb   (%dx),%es:(%edi)
imul   $0x646f6d00,0x73(%ecx),%esp
jne    1d663 <_IO_stdin_used+0x2303>
gs
jae    1d628 <_IO_stdin_used+0x22c8>
popa
insb   (%dx),%es:(%edi)
imul   $0x6e69622e,0x73(%ecx),%esp
add    %ch,0x6f(%ebp)
fs
jne    1d675 <_IO_stdin_used+0x2315>
gs
jae    1d63a <_IO_stdin_used+0x22da>
jae    1d67d <_IO_stdin_used+0x231d>
data16
je     1d675 <_IO_stdin_used+0x2315>
gs
jo     1d614 <_IO_stdin_used+0x22b4>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1d685 <_IO_stdin_used+0x2325>
gs
jae    1d64a <_IO_stdin_used+0x22ea>
jae    1d697 <_IO_stdin_used+0x2337>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1d624 <_IO_stdin_used+0x22c4>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1d695 <_IO_stdin_used+0x2335>
gs
jae    1d65a <_IO_stdin_used+0x22fa>
jae    1d6a7 <_IO_stdin_used+0x2347>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1d662 <_IO_stdin_used+0x2302>
bound  %ebp,0x6e(%ecx)
add    %ch,0x6f(%ebp)
fs
jne    1d6a9 <_IO_stdin_used+0x2349>
gs
jae    1d66e <_IO_stdin_used+0x230e>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1d6af <_IO_stdin_used+0x234f>
outsb  %ds:(%esi),(%dx)
bound  %ebp,%cs:0x6e(%ecx)
add    %ch,0x6f(%ebp)
fs
jne    1d6bd <_IO_stdin_used+0x235d>
gs
jae    1d682 <_IO_stdin_used+0x2322>
fs
gs
jbe    1d6c6 <_IO_stdin_used+0x2366>
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x70(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     1d6c9 <_IO_stdin_used+0x2369>
je     1d68a <_IO_stdin_used+0x232a>
fs
gs
jo     1d6db <_IO_stdin_used+0x237b>
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x75(%ecx)
imul   $0x6d797300,0x6b(%ebx),%esp
jbe    1d6e9 <_IO_stdin_used+0x2389>
jb     1d6f9 <_IO_stdin_used+0x2399>
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    1d706 <_IO_stdin_used+0x23a6>
insl   (%dx),%es:(%edi)
jae    1d690 <_IO_stdin_used+0x2330>
gs
jb     1d705 <_IO_stdin_used+0x23a5>
jae    1d70e <_IO_stdin_used+0x23ae>
insl   (%dx),%es:(%edi)
jae    1d698 <_IO_stdin_used+0x2338>
jne    1d708 <_IO_stdin_used+0x23a8>
jb     1d701 <_IO_stdin_used+0x23a1>
jae    1d70d <_IO_stdin_used+0x23ad>
insb   (%dx),%es:(%edi)
jbe    1d706 <_IO_stdin_used+0x23a6>
fs
sub    $0x6f727265,%eax
jb     1d6a9 <_IO_stdin_used+0x2349>
jb     1d71a <_IO_stdin_used+0x23ba>
outsl  %ds:(%esi),(%dx)
je     1d6ae <_IO_stdin_used+0x234e>
jae    1d729 <_IO_stdin_used+0x23c9>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
sub    $0x66657270,%eax
imul   $0x6e726177,0x0(%eax),%edi
add    %ch,0x61(%ebp)
jo     1d6c5 <_IO_stdin_used+0x2365>
das
jb     1d73d <_IO_stdin_used+0x23dd>
outsb  %ds:(%esi),(%dx)
das
fs
gs
jo     1d73b <_IO_stdin_used+0x23db>
outsl  %ds:(%esi),(%dx)
fs cs add %ch,%cs:%fs:(%edi)
gs
je     1d73a <_IO_stdin_used+0x23da>
das
fs
gs
jo     1d749 <_IO_stdin_used+0x23e9>
outsl  %ds:(%esi),(%dx)
fs cs add %ch,%cs:%fs:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x6d706564,0x2f(%edx),%esp
outsl  %ds:(%esi),(%dx)
fs cs add %al,%cs:%fs:(%eax)
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    1d71a <_IO_stdin_used+0x23ba>
jo     1d75d <_IO_stdin_used+0x23fd>
je     1d766 <_IO_stdin_used+0x2406>
and    %ch,0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
and    %ah,(%di)
jae    1d718 <_IO_stdin_used+0x23b8>
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1d77f <_IO_stdin_used+0x241f>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%si)
jo     1d789 <_IO_stdin_used+0x2429>
imul   $0x63206574,0x61(%ebx),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6966,0x20(%edi),%sp
insb   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
and    $0x2f732a2e,%eax
and    $0xa73,%eax
add    %al,(%eax)
imul   $0x6920,0x73(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
jae    1d7ab <_IO_stdin_used+0x244b>
jb     1d7bc <_IO_stdin_used+0x245c>
and    %dh,0x6f(%ebx)
jb     1d7c1 <_IO_stdin_used+0x2461>
gs cmp %fs:%gs:(%eax),%ah
outsl  %ds:(%esi),(%dx)
jne    1d7c8 <_IO_stdin_used+0x2468>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     1d7d7 <_IO_stdin_used+0x2477>
or     (%eax),%al
and    (%eax),%esp
inc    %ecx
insb   (%dx),%es:(%edi)
imul   $0x66207365,0x73(%ecx),%esp
outsl  %ds:(%esi),(%dx)
jb     1d78e <_IO_stdin_used+0x242e>
jae    1d7e9 <_IO_stdin_used+0x2489>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1d7a2 <_IO_stdin_used+0x2442>
and    %dh,0x73(%ebp)
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
pop    %edi
jb     1d7ed <_IO_stdin_used+0x248d>
jno    1d7ff <_IO_stdin_used+0x249f>
gs
jae    1d801 <_IO_stdin_used+0x24a1>
sub    %ch,(%ecx)
or     %cs:(%eax),%al
add    %al,(%eax)
and    (%eax),%esp
inc    %esp
gs
jbe    1d803 <_IO_stdin_used+0x24a3>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs
gs
jae    1d7c3 <_IO_stdin_used+0x2463>
je     1d814 <_IO_stdin_used+0x24b4>
and    %dh,0x69(%edx,%esi,2)
addr16
addr16
gs
jb     1d7ce <_IO_stdin_used+0x246e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x616d6564,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%ebp)
fs
jne    1d829 <_IO_stdin_used+0x24c9>
and    %ch,%gs:0x61(%edi,%ebp,2)
imul   $0xa2e,%fs:0x67(%esi),%ebp
add    %al,(%eax)
and    (%eax),%esp
push   %ebx
outsl  %ds:(%esi),(%dx)
data16
je     1d7f3 <_IO_stdin_used+0x2493>
fs
gs
jo     1d83c <_IO_stdin_used+0x24dc>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1d800 <_IO_stdin_used+0x24a0>
gs
js     1d857 <_IO_stdin_used+0x24f7>
jb     1d846 <_IO_stdin_used+0x24e6>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs
jne    1d860 <_IO_stdin_used+0x2500>
gs
jae    1d817 <_IO_stdin_used+0x24b7>
je     1d861 <_IO_stdin_used+0x2501>
gs
insl   (%dx),%es:(%edi)
jae    1d862 <_IO_stdin_used+0x2502>
insb   (%dx),%es:(%edi)
jbe    1d865 <_IO_stdin_used+0x2505>
jae    1d830 <_IO_stdin_used+0x24d0>
or     (%eax),%al
and    (%eax),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     1d883 <_IO_stdin_used+0x2523>
sub    $0x20,%al
ja     1d877 <_IO_stdin_used+0x2517>
je     1d878 <_IO_stdin_used+0x2518>
and    %ah,0x20(%ecx)
arpl   %bp,%cs:0x6e(%edi)
data16
and    %ah,0x78(%ebp)
je     1d882 <_IO_stdin_used+0x2522>
outsb  %ds:(%esi),(%dx)
jae    1d889 <_IO_stdin_used+0x2529>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
je     1d895 <_IO_stdin_used+0x2535>
and    %ch,(%edi)
gs
je     1d88e <_IO_stdin_used+0x252e>
das
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jo     1d8a3 <_IO_stdin_used+0x2543>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x2e(%ebp)
and    %dh,%fs:0x20(%edi,%ebp,2)
jne    1d8af <_IO_stdin_used+0x254f>
and    %ch,%gs:0x74(%ecx)
and    %dh,0x69(%edi)
je     1d8ad <_IO_stdin_used+0x254d>
and    %ch,0x6f(%ebp)
fs
jo     1d8bd <_IO_stdin_used+0x255d>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x2e(%ebp)
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%ebx)
and    %al,0x6c(%ecx)
imul   $0x65207365,0x73(%ecx),%esp
js     1d8d5 <_IO_stdin_used+0x2575>
jb     1d8c4 <_IO_stdin_used+0x2564>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs
jne    1d8de <_IO_stdin_used+0x257e>
gs
jae    1d895 <_IO_stdin_used+0x2535>
je     1d8df <_IO_stdin_used+0x257f>
gs
insl   (%dx),%es:(%edi)
jae    1d8e0 <_IO_stdin_used+0x2580>
insb   (%dx),%es:(%edi)
jbe    1d8e3 <_IO_stdin_used+0x2583>
jae    1d8ae <_IO_stdin_used+0x254e>
or     (%eax),%al
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1d8ef <_IO_stdin_used+0x258f>
and    %ah,%fs:0x75642073
and    %ah,%gs:0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     1d916 <_IO_stdin_used+0x25b6>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    1d918 <_IO_stdin_used+0x25b8>
and    %ch,%fs:0x6f(%esi)
je     1d8d2 <_IO_stdin_used+0x2572>
addr16
gs
je     1d8d6 <_IO_stdin_used+0x2576>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x6f(%ebx)
jb     1d932 <_IO_stdin_used+0x25d2>
gs and %ah,%fs:%gs:0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1d8ee <_IO_stdin_used+0x258e>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0xa73
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1d943 <_IO_stdin_used+0x25e3>
and    %ah,%fs:0x64282073
gs
jo     1d94d <_IO_stdin_used+0x25ed>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x64202973
jne    1d95e <_IO_stdin_used+0x25fe>
and    %ah,0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     1d97d <_IO_stdin_used+0x261d>
or     (%eax),%al
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1d97d <_IO_stdin_used+0x261d>
gs
jae    1d942 <_IO_stdin_used+0x25e2>
fs
gs
jo     1d98b <_IO_stdin_used+0x262b>
bound  %ebp,%cs:0x6e(%ecx)
cmp    (%eax),%ah
outsl  %ds:(%esi),(%dx)
jne    1d995 <_IO_stdin_used+0x2635>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     1d9a4 <_IO_stdin_used+0x2644>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    1d9a0 <_IO_stdin_used+0x2640>
and    %ch,%fs:0x6f(%esi)
je     1d95a <_IO_stdin_used+0x25fa>
addr16
gs
je     1d95e <_IO_stdin_used+0x25fe>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
je     1d9b7 <_IO_stdin_used+0x2657>
and    %ah,0x28000a73
pop    %edi
pop    %edi
gs
js     1d9ce <_IO_stdin_used+0x266e>
outsb  %gs:(%esi),(%dx)
jae    1d9c7 <_IO_stdin_used+0x2667>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
pop    %edi
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1d9d5 <_IO_stdin_used+0x2675>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1d9e7 <_IO_stdin_used+0x2687>
popa
outsb  %ds:(%esi),(%dx)
je     1d9d6 <_IO_stdin_used+0x2676>
jo     1d999 <_IO_stdin_used+0x2639>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    %esp,(%eax)
es and %ch,%es:(%eax)
sub    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1da01 <_IO_stdin_used+0x26a1>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1da13 <_IO_stdin_used+0x26b3>
popa
outsb  %ds:(%esi),(%dx)
je     1da02 <_IO_stdin_used+0x26a2>
jo     1d9c5 <_IO_stdin_used+0x2665>
sub    %ch,0x65(%esi)
ja     1da1a <_IO_stdin_used+0x26ba>
popa
je     1da15 <_IO_stdin_used+0x26b5>
sub    %esp,(%eax)
es and %dh,%es:0x74(%ebx)
jb     1da22 <_IO_stdin_used+0x26c2>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1da2e <_IO_stdin_used+0x26ce>
popa
je     1da29 <_IO_stdin_used+0x26c9>
sub    %esp,(%eax)
cmp    $0x20,%al
sub    %ch,(%eax)
jae    1da32 <_IO_stdin_used+0x26d2>
jp     1da30 <_IO_stdin_used+0x26d0>
pop    %edi
je     1d9f7 <_IO_stdin_used+0x2697>
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    %ebp,(%ecx)
sub    %esp,(%eax)
jl     1da61 <_IO_stdin_used+0x2701>
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1da58 <_IO_stdin_used+0x26f8>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1da6a <_IO_stdin_used+0x270a>
popa
outsb  %ds:(%esi),(%dx)
je     1da59 <_IO_stdin_used+0x26f9>
jo     1da1c <_IO_stdin_used+0x26bc>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
es and %dh,%es:0x74(%ebx)
jb     1da7e <_IO_stdin_used+0x271e>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    $0x20,%al
sub    %ch,(%eax)
jae    1da93 <_IO_stdin_used+0x2733>
jp     1da91 <_IO_stdin_used+0x2731>
pop    %edi
je     1da58 <_IO_stdin_used+0x26f8>
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    %ebp,(%ecx)
sub    %ebp,(%ecx)
and    %bh,(%edi)
and    %bl,0x5f(%edi)
gs
js     1dac0 <_IO_stdin_used+0x2760>
outsb  %gs:(%esi),(%dx)
jae    1dab9 <_IO_stdin_used+0x2759>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
pop    %edi
and    %ch,(%eax)
jnp    1da78 <_IO_stdin_used+0x2718>
jae    1dac3 <_IO_stdin_used+0x2763>
jp     1dac1 <_IO_stdin_used+0x2761>
pop    %edi
je     1da7f <_IO_stdin_used+0x271f>
pop    %edi
pop    %edi
jae    1da94 <_IO_stdin_used+0x2734>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    $0x20,%al
pop    %edi
pop    %edi
jae    1da9f <_IO_stdin_used+0x273f>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
cmp    (%eax),%esp
sub    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1dae5 <_IO_stdin_used+0x2785>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1daf7 <_IO_stdin_used+0x2797>
popa
outsb  %ds:(%esi),(%dx)
je     1dae6 <_IO_stdin_used+0x2786>
jo     1daa9 <_IO_stdin_used+0x2749>
sub    %ch,0x65(%esi)
ja     1dafe <_IO_stdin_used+0x279e>
popa
je     1daf9 <_IO_stdin_used+0x2799>
sub    %esp,(%eax)
es and %bl,%es:0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1db07 <_IO_stdin_used+0x27a7>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1db19 <_IO_stdin_used+0x27b9>
popa
outsb  %ds:(%esi),(%dx)
je     1db08 <_IO_stdin_used+0x27a8>
jo     1dacb <_IO_stdin_used+0x276b>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
es and %ch,%es:(%eax)
pop    %edi
pop    %edi
jae    1daf3 <_IO_stdin_used+0x2793>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x625f5f20
jne    1db37 <_IO_stdin_used+0x27d7>
insb   (%dx),%es:(%edi)
je     1db3a <_IO_stdin_used+0x27da>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1db49 <_IO_stdin_used+0x27e9>
jb     1db43 <_IO_stdin_used+0x27e3>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1db4f <_IO_stdin_used+0x27ef>
popa
je     1db4a <_IO_stdin_used+0x27ea>
sub    %ebp,(%eax,%eiz,1)
pop    %edi
pop    %edi
jae    1db1b <_IO_stdin_used+0x27bb>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x625f5f20
jne    1db5e <_IO_stdin_used+0x27fe>
insb   (%dx),%es:(%edi)
je     1db61 <_IO_stdin_used+0x2801>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1db70 <_IO_stdin_used+0x2810>
jb     1db6a <_IO_stdin_used+0x280a>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%eax,%eiz,1)
sub    %ah,(%ecx)
sub    %ch,(%eax)
jae    1db80 <_IO_stdin_used+0x2820>
jp     1db7e <_IO_stdin_used+0x281e>
pop    %edi
je     1db45 <_IO_stdin_used+0x27e5>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1db96 <_IO_stdin_used+0x2836>
and    %dh,0x6f(%esi)
imul   $0x6e282829,0x2a(%eax,%eiz,1),%esp
gs
ja     1dba0 <_IO_stdin_used+0x2840>
popa
je     1db9b <_IO_stdin_used+0x283b>
sub    %esp,(%eax)
sub    (%eax),%esp
xor    %ebp,(%ecx)
and    %ch,0x69732820
jp     1dba6 <_IO_stdin_used+0x2846>
pop    %edi
je     1db6d <_IO_stdin_used+0x280d>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1dbbe <_IO_stdin_used+0x285e>
and    %dh,0x6f(%esi)
imul   $0x656e2829,0x2a(%eax,%eiz,1),%esp
ja     1dbc7 <_IO_stdin_used+0x2867>
popa
je     1dbc2 <_IO_stdin_used+0x2862>
sub    %esp,(%eax)
cmp    $0x2931203d,%eax
and    %bh,0x20(%esp,%edi,2)
pop    %edi
pop    %edi
jae    1db9a <_IO_stdin_used+0x283a>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
cmp    $0x20293420,%eax
es and %ch,%es:(%eax)
and    %ebp,(%eax)
sub    %dh,0x69(%ebx)
jp     1dbe4 <_IO_stdin_used+0x2884>
pop    %edi
je     1dbab <_IO_stdin_used+0x284b>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1dbfc <_IO_stdin_used+0x289c>
and    %dh,0x6f(%esi)
imul   $0x63282829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x643e,%ax
imul   $0x29656d61,0x6e(%edx),%esi
and    %ch,(%ebx)
and    %dh,(%ecx)
sub    %esp,(%eax)
sub    $0x69732820,%eax
jp     1dc11 <_IO_stdin_used+0x28b1>
pop    %edi
je     1dbd8 <_IO_stdin_used+0x2878>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1dc29 <_IO_stdin_used+0x28c9>
and    %dh,0x6f(%esi)
imul   $0x66632829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    $0x2931203d,%eax
and    %bh,0x20(%esp,%edi,2)
pop    %edi
pop    %edi
jae    1dc0b <_IO_stdin_used+0x28ab>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
cmp    $0x29293420,%eax
and    %bh,(%edi)
and    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1dc58 <_IO_stdin_used+0x28f8>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1dc67 <_IO_stdin_used+0x2907>
jb     1dc58 <_IO_stdin_used+0x28f8>
insl   (%dx),%es:(%edi)
jo     1dc18 <_IO_stdin_used+0x28b8>
sub    %ch,0x65(%esi)
ja     1dc6d <_IO_stdin_used+0x290d>
popa
je     1dc68 <_IO_stdin_used+0x2908>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    (%eax),%ah
sub    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1dc84 <_IO_stdin_used+0x2924>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1dc96 <_IO_stdin_used+0x2936>
popa
outsb  %ds:(%esi),(%dx)
je     1dc85 <_IO_stdin_used+0x2925>
jo     1dc48 <_IO_stdin_used+0x28e8>
sub    %ch,0x65(%esi)
ja     1dc9d <_IO_stdin_used+0x293d>
popa
je     1dc98 <_IO_stdin_used+0x2938>
sub    %esp,(%eax)
es and %ch,%es:(%eax)
sub    %dh,0x69(%ebx)
jp     1dca0 <_IO_stdin_used+0x2940>
pop    %edi
je     1dc67 <_IO_stdin_used+0x2907>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1dcb8 <_IO_stdin_used+0x2958>
and    %dh,0x6f(%esi)
imul   $0x6e282829,0x2a(%eax,%eiz,1),%esp
gs
ja     1dcc2 <_IO_stdin_used+0x2962>
popa
je     1dcbd <_IO_stdin_used+0x295d>
sub    %esp,(%eax)
sub    (%eax),%esp
xor    %ebp,(%ecx)
and    %ch,0x69732820
jp     1dcc8 <_IO_stdin_used+0x2968>
pop    %edi
je     1dc8f <_IO_stdin_used+0x292f>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1dce0 <_IO_stdin_used+0x2980>
and    %dh,0x6f(%esi)
imul   $0x656e2829,0x2a(%eax,%eiz,1),%esp
ja     1dce9 <_IO_stdin_used+0x2989>
popa
je     1dce4 <_IO_stdin_used+0x2984>
sub    %esp,(%eax)
cmp    $0x2931203d,%eax
and    %ah,(%esi)
and    %ch,%es:(%eax)
pop    %edi
pop    %edi
jae    1dcbd <_IO_stdin_used+0x295d>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x625f5f20
jne    1dd01 <_IO_stdin_used+0x29a1>
insb   (%dx),%es:(%edi)
je     1dd04 <_IO_stdin_used+0x29a4>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1dd13 <_IO_stdin_used+0x29b3>
jb     1dd0d <_IO_stdin_used+0x29ad>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1dd19 <_IO_stdin_used+0x29b9>
popa
je     1dd14 <_IO_stdin_used+0x29b4>
sub    %ebp,(%eax,%eiz,1)
pop    %edi
pop    %edi
jae    1dce4 <_IO_stdin_used+0x2984>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%eax,%eiz,1)
xor    $0x29,%al
and    %bh,(%edi)
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1dd31 <_IO_stdin_used+0x29d1>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1dd43 <_IO_stdin_used+0x29e3>
popa
outsb  %ds:(%esi),(%dx)
je     1dd32 <_IO_stdin_used+0x29d2>
jo     1dcf5 <_IO_stdin_used+0x2995>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
es and %ch,%es:(%eax)
sub    %dh,0x69(%ebx)
jp     1dd52 <_IO_stdin_used+0x29f2>
pop    %edi
je     1dd19 <_IO_stdin_used+0x29b9>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1dd6a <_IO_stdin_used+0x2a0a>
and    %dh,0x6f(%esi)
imul   $0x63282829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x643e,%ax
imul   $0x29656d61,0x6e(%edx),%esi
and    %ch,(%ebx)
and    %dh,(%ecx)
sub    %esp,(%eax)
sub    $0x69732820,%eax
jp     1dd7f <_IO_stdin_used+0x2a1f>
pop    %edi
je     1dd46 <_IO_stdin_used+0x29e6>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1dd97 <_IO_stdin_used+0x2a37>
and    %dh,0x6f(%esi)
imul   $0x66632829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    $0x2931203d,%eax
and    %bh,(%edi)
and    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1ddb3 <_IO_stdin_used+0x2a53>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1ddc2 <_IO_stdin_used+0x2a62>
jb     1ddb3 <_IO_stdin_used+0x2a53>
insl   (%dx),%es:(%edi)
jo     1dd73 <_IO_stdin_used+0x2a13>
sub    %ch,0x65(%esi)
ja     1ddc8 <_IO_stdin_used+0x2a68>
popa
je     1ddc3 <_IO_stdin_used+0x2a63>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    (%eax),%ah
sub    %bl,0x5f(%edi)
gs
js     1dde7 <_IO_stdin_used+0x2a87>
outsb  %gs:(%esi),(%dx)
jae    1dde0 <_IO_stdin_used+0x2a80>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
pop    %edi
and    %ch,(%eax)
jnp    1dd9f <_IO_stdin_used+0x2a3f>
arpl   %bp,0x6e(%edi)
jae    1ddf8 <_IO_stdin_used+0x2a98>
and    %dh,0x6e(%ebp)
jae    1ddf2 <_IO_stdin_used+0x2a92>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1ddb3 <_IO_stdin_used+0x2a53>
sub    0x5f(%edi),%bl
jae    1ddca <_IO_stdin_used+0x2a6a>
and    %bh,0x6f632820
outsb  %ds:(%esi),(%dx)
jae    1de15 <_IO_stdin_used+0x2ab5>
and    %dh,0x6e(%ebp)
jae    1de0f <_IO_stdin_used+0x2aaf>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1ddd0 <_IO_stdin_used+0x2a70>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1de2d <_IO_stdin_used+0x2acd>
and    %ah,0x68(%ebx)
popa
jb     1dddf <_IO_stdin_used+0x2a7f>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %edi,%gs:(%ebx)
and    %ch,0x6e(%ecx)
je     1ddf6 <_IO_stdin_used+0x2a96>
pop    %edi
pop    %edi
jb     1de3f <_IO_stdin_used+0x2adf>
jae    1de51 <_IO_stdin_used+0x2af1>
insb   (%dx),%es:(%edi)
je     1ddff <_IO_stdin_used+0x2a9f>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1de5d <_IO_stdin_used+0x2afd>
and    %dh,0x6e(%ebp)
jae    1de57 <_IO_stdin_used+0x2af7>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1de18 <_IO_stdin_used+0x2ab8>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1de75 <_IO_stdin_used+0x2b15>
and    %ah,0x68(%ebx)
popa
jb     1de27 <_IO_stdin_used+0x2ac7>
sub    (%ecx),%ch
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1de7f <_IO_stdin_used+0x2b1f>
popa
je     1de7a <_IO_stdin_used+0x2b1a>
sub    %ebp,(%ecx)
pop    %ebx
xor    %bl,0x20(%ebp)
sub    $0x735f5f20,%eax
xor    0x30(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1de5d <_IO_stdin_used+0x2afd>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%eax)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1dea1 <_IO_stdin_used+0x2b41>
jae    1deb3 <_IO_stdin_used+0x2b53>
insb   (%dx),%es:(%edi)
je     1de61 <_IO_stdin_used+0x2b01>
cmp    $0x2930203d,%eax
and    %bh,0x20(%ebx)
pop    %edi
pop    %edi
jb     1deb2 <_IO_stdin_used+0x2b52>
jae    1dec4 <_IO_stdin_used+0x2b64>
insb   (%dx),%es:(%edi)
je     1de72 <_IO_stdin_used+0x2b12>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1ded0 <_IO_stdin_used+0x2b70>
and    %dh,0x6e(%ebp)
jae    1deca <_IO_stdin_used+0x2b6a>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1de8b <_IO_stdin_used+0x2b2b>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1dee8 <_IO_stdin_used+0x2b88>
and    %ah,0x68(%ebx)
popa
jb     1de9a <_IO_stdin_used+0x2b3a>
sub    (%ecx),%ch
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1def2 <_IO_stdin_used+0x2b92>
popa
je     1deed <_IO_stdin_used+0x2b8d>
sub    %ebp,(%ecx)
pop    %ebx
xor    %ebx,0x20(%ebp)
sub    $0x735f5f20,%eax
xor    0x31(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1ded0 <_IO_stdin_used+0x2b70>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%ecx)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1df14 <_IO_stdin_used+0x2bb4>
jae    1df26 <_IO_stdin_used+0x2bc6>
insb   (%dx),%es:(%edi)
je     1ded4 <_IO_stdin_used+0x2b74>
cmp    $0x2930203d,%eax
and    %bh,0x20(%ebx)
pop    %edi
pop    %edi
jb     1df25 <_IO_stdin_used+0x2bc5>
jae    1df37 <_IO_stdin_used+0x2bd7>
insb   (%dx),%es:(%edi)
je     1dee5 <_IO_stdin_used+0x2b85>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1df43 <_IO_stdin_used+0x2be3>
and    %dh,0x6e(%ebp)
jae    1df3d <_IO_stdin_used+0x2bdd>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1defe <_IO_stdin_used+0x2b9e>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1df5b <_IO_stdin_used+0x2bfb>
and    %ah,0x68(%ebx)
popa
jb     1df0d <_IO_stdin_used+0x2bad>
sub    (%ecx),%ch
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1df65 <_IO_stdin_used+0x2c05>
popa
je     1df60 <_IO_stdin_used+0x2c00>
sub    %ebp,(%ecx)
pop    %ebx
xor    0x20(%ebp),%bl
sub    $0x735f5f20,%eax
xor    0x32(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1df43 <_IO_stdin_used+0x2be3>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%edx)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1df87 <_IO_stdin_used+0x2c27>
jae    1df99 <_IO_stdin_used+0x2c39>
insb   (%dx),%es:(%edi)
je     1df47 <_IO_stdin_used+0x2be7>
cmp    $0x2930203d,%eax
and    %bl,0x5f(%edi)
jb     1df96 <_IO_stdin_used+0x2c36>
jae    1dfa8 <_IO_stdin_used+0x2c48>
insb   (%dx),%es:(%edi)
je     1df56 <_IO_stdin_used+0x2bf6>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1dfb4 <_IO_stdin_used+0x2c54>
and    %dh,0x6e(%ebp)
jae    1dfae <_IO_stdin_used+0x2c4e>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1df6f <_IO_stdin_used+0x2c0f>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1dfcc <_IO_stdin_used+0x2c6c>
and    %ah,0x68(%ebx)
popa
jb     1df7e <_IO_stdin_used+0x2c1e>
sub    (%ecx),%ch
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1dfd6 <_IO_stdin_used+0x2c76>
popa
je     1dfd1 <_IO_stdin_used+0x2c71>
sub    %ebp,(%ecx)
pop    %ebx
xor    0x20(%ebp),%ebx
sub    $0x735f5f20,%eax
xor    0x33(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %bh,0x20(%ebp)
jge    1df9f <_IO_stdin_used+0x2c3f>
pop    %edi
pop    %edi
jb     1dfe8 <_IO_stdin_used+0x2c88>
jae    1dffa <_IO_stdin_used+0x2c9a>
insb   (%dx),%es:(%edi)
je     1dfc3 <_IO_stdin_used+0x2c63>
and    %bh,0x29(%ebp)
sub    %ebp,(%ecx)
and    %bh,(%edx)
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e002 <_IO_stdin_used+0x2ca2>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e014 <_IO_stdin_used+0x2cb4>
popa
outsb  %ds:(%esi),(%dx)
je     1e003 <_IO_stdin_used+0x2ca3>
jo     1dfc6 <_IO_stdin_used+0x2c66>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
es and %ch,%es:(%eax)
sub    %dh,0x69(%ebx)
jp     1e023 <_IO_stdin_used+0x2cc3>
pop    %edi
je     1dfea <_IO_stdin_used+0x2c8a>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e03b <_IO_stdin_used+0x2cdb>
and    %dh,0x6f(%esi)
imul   $0x63282829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x643e,%ax
imul   $0x29656d61,0x6e(%edx),%esi
and    %ch,(%ebx)
and    %dh,(%ecx)
sub    %esp,(%eax)
sub    $0x69732820,%eax
jp     1e050 <_IO_stdin_used+0x2cf0>
pop    %edi
je     1e017 <_IO_stdin_used+0x2cb7>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e068 <_IO_stdin_used+0x2d08>
and    %dh,0x6f(%esi)
imul   $0x66632829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    $0x2931203d,%eax
and    %ah,(%esi)
and    %ch,%es:(%eax)
pop    %edi
pop    %edi
jae    1e04b <_IO_stdin_used+0x2ceb>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x625f5f20
jne    1e08e <_IO_stdin_used+0x2d2e>
insb   (%dx),%es:(%edi)
je     1e091 <_IO_stdin_used+0x2d31>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1e0a0 <_IO_stdin_used+0x2d40>
jb     1e09a <_IO_stdin_used+0x2d3a>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%eax,%eiz,1)
pop    %edi
pop    %edi
jae    1e077 <_IO_stdin_used+0x2d17>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%eax,%eiz,1)
xor    $0x29,%al
and    %bh,(%edi)
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e0c3 <_IO_stdin_used+0x2d63>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e0d5 <_IO_stdin_used+0x2d75>
popa
outsb  %ds:(%esi),(%dx)
je     1e0c4 <_IO_stdin_used+0x2d64>
jo     1e087 <_IO_stdin_used+0x2d27>
sub    %ch,0x65(%esi)
ja     1e0dc <_IO_stdin_used+0x2d7c>
popa
je     1e0d7 <_IO_stdin_used+0x2d77>
sub    %esp,(%eax)
es and %ch,%es:(%eax)
sub    %dh,0x69(%ebx)
jp     1e0df <_IO_stdin_used+0x2d7f>
pop    %edi
je     1e0a6 <_IO_stdin_used+0x2d46>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e0f7 <_IO_stdin_used+0x2d97>
and    %dh,0x6f(%esi)
imul   $0x6e282829,0x2a(%eax,%eiz,1),%esp
gs
ja     1e101 <_IO_stdin_used+0x2da1>
popa
je     1e0fc <_IO_stdin_used+0x2d9c>
sub    %esp,(%eax)
sub    (%eax),%esp
xor    %ebp,(%ecx)
and    %ch,0x69732820
jp     1e107 <_IO_stdin_used+0x2da7>
pop    %edi
je     1e0ce <_IO_stdin_used+0x2d6e>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e11f <_IO_stdin_used+0x2dbf>
and    %dh,0x6f(%esi)
imul   $0x656e2829,0x2a(%eax,%eiz,1),%esp
ja     1e128 <_IO_stdin_used+0x2dc8>
popa
je     1e123 <_IO_stdin_used+0x2dc3>
sub    %esp,(%eax)
cmp    $0x2931203d,%eax
and    %bh,(%edi)
and    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e136 <_IO_stdin_used+0x2dd6>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1e145 <_IO_stdin_used+0x2de5>
jb     1e136 <_IO_stdin_used+0x2dd6>
insl   (%dx),%es:(%edi)
jo     1e0f6 <_IO_stdin_used+0x2d96>
sub    %ch,0x65(%esi)
ja     1e14b <_IO_stdin_used+0x2deb>
popa
je     1e146 <_IO_stdin_used+0x2de6>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    (%eax),%ah
sub    %ch,0x5f5f2820
gs
js     1e16d <_IO_stdin_used+0x2e0d>
outsb  %gs:(%esi),(%dx)
jae    1e166 <_IO_stdin_used+0x2e06>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
pop    %edi
and    %ch,(%eax)
jnp    1e125 <_IO_stdin_used+0x2dc5>
arpl   %bp,0x6e(%edi)
jae    1e17e <_IO_stdin_used+0x2e1e>
and    %dh,0x6e(%ebp)
jae    1e178 <_IO_stdin_used+0x2e18>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e139 <_IO_stdin_used+0x2dd9>
sub    0x5f(%edi),%bl
jae    1e150 <_IO_stdin_used+0x2df0>
and    %bh,0x6f632820
outsb  %ds:(%esi),(%dx)
jae    1e19b <_IO_stdin_used+0x2e3b>
and    %dh,0x6e(%ebp)
jae    1e195 <_IO_stdin_used+0x2e35>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e156 <_IO_stdin_used+0x2df6>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e1b3 <_IO_stdin_used+0x2e53>
and    %ah,0x68(%ebx)
popa
jb     1e165 <_IO_stdin_used+0x2e05>
sub    (%ecx),%ch
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1e1bd <_IO_stdin_used+0x2e5d>
popa
je     1e1b8 <_IO_stdin_used+0x2e58>
sub    %edi,(%ebx)
and    %ch,0x6e(%ecx)
je     1e177 <_IO_stdin_used+0x2e17>
pop    %edi
pop    %edi
jb     1e1c0 <_IO_stdin_used+0x2e60>
jae    1e1d2 <_IO_stdin_used+0x2e72>
insb   (%dx),%es:(%edi)
je     1e180 <_IO_stdin_used+0x2e20>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1e1de <_IO_stdin_used+0x2e7e>
and    %dh,0x6e(%ebp)
jae    1e1d8 <_IO_stdin_used+0x2e78>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e199 <_IO_stdin_used+0x2e39>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e1f6 <_IO_stdin_used+0x2e96>
and    %ah,0x68(%ebx)
popa
jb     1e1a8 <_IO_stdin_used+0x2e48>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
pop    %ebx
xor    %bl,0x20(%ebp)
sub    $0x735f5f20,%eax
xor    0x30(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1e1e4 <_IO_stdin_used+0x2e84>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%eax)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1e227 <_IO_stdin_used+0x2ec7>
jae    1e239 <_IO_stdin_used+0x2ed9>
insb   (%dx),%es:(%edi)
je     1e1e7 <_IO_stdin_used+0x2e87>
cmp    $0x2930203d,%eax
and    %bh,0x20(%ebx)
pop    %edi
pop    %edi
jb     1e238 <_IO_stdin_used+0x2ed8>
jae    1e24a <_IO_stdin_used+0x2eea>
insb   (%dx),%es:(%edi)
je     1e1f8 <_IO_stdin_used+0x2e98>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1e256 <_IO_stdin_used+0x2ef6>
and    %dh,0x6e(%ebp)
jae    1e250 <_IO_stdin_used+0x2ef0>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e211 <_IO_stdin_used+0x2eb1>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e26e <_IO_stdin_used+0x2f0e>
and    %ah,0x68(%ebx)
popa
jb     1e220 <_IO_stdin_used+0x2ec0>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
pop    %ebx
xor    %ebx,0x20(%ebp)
sub    $0x735f5f20,%eax
xor    0x31(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1e25c <_IO_stdin_used+0x2efc>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%ecx)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1e29f <_IO_stdin_used+0x2f3f>
jae    1e2b1 <_IO_stdin_used+0x2f51>
insb   (%dx),%es:(%edi)
je     1e25f <_IO_stdin_used+0x2eff>
cmp    $0x2930203d,%eax
and    %bh,0x20(%ebx)
pop    %edi
pop    %edi
jb     1e2b0 <_IO_stdin_used+0x2f50>
jae    1e2c2 <_IO_stdin_used+0x2f62>
insb   (%dx),%es:(%edi)
je     1e270 <_IO_stdin_used+0x2f10>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1e2ce <_IO_stdin_used+0x2f6e>
and    %dh,0x6e(%ebp)
jae    1e2c8 <_IO_stdin_used+0x2f68>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e289 <_IO_stdin_used+0x2f29>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e2e6 <_IO_stdin_used+0x2f86>
and    %ah,0x68(%ebx)
popa
jb     1e298 <_IO_stdin_used+0x2f38>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
pop    %ebx
xor    0x20(%ebp),%bl
sub    $0x735f5f20,%eax
xor    0x32(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1e2d4 <_IO_stdin_used+0x2f74>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%edx)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1e317 <_IO_stdin_used+0x2fb7>
jae    1e329 <_IO_stdin_used+0x2fc9>
insb   (%dx),%es:(%edi)
je     1e2d7 <_IO_stdin_used+0x2f77>
cmp    $0x2930203d,%eax
and    %bl,0x5f(%edi)
jb     1e326 <_IO_stdin_used+0x2fc6>
jae    1e338 <_IO_stdin_used+0x2fd8>
insb   (%dx),%es:(%edi)
je     1e2e6 <_IO_stdin_used+0x2f86>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1e344 <_IO_stdin_used+0x2fe4>
and    %dh,0x6e(%ebp)
jae    1e33e <_IO_stdin_used+0x2fde>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e2ff <_IO_stdin_used+0x2f9f>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e35c <_IO_stdin_used+0x2ffc>
and    %ah,0x68(%ebx)
popa
jb     1e30e <_IO_stdin_used+0x2fae>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
pop    %ebx
xor    0x20(%ebp),%ebx
sub    $0x735f5f20,%eax
xor    0x33(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %bh,0x20(%ebp)
jge    1e334 <_IO_stdin_used+0x2fd4>
pop    %edi
pop    %edi
jb     1e37d <_IO_stdin_used+0x301d>
jae    1e38f <_IO_stdin_used+0x302f>
insb   (%dx),%es:(%edi)
je     1e358 <_IO_stdin_used+0x2ff8>
and    %bh,0x29(%ebp)
sub    %ebp,(%ecx)
sub    %esp,(%eax)
cmp    (%eax),%ah
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e397 <_IO_stdin_used+0x3037>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1e3a6 <_IO_stdin_used+0x3046>
jb     1e397 <_IO_stdin_used+0x3037>
insl   (%dx),%es:(%edi)
jo     1e357 <_IO_stdin_used+0x2ff7>
sub    %ch,0x65(%esi)
ja     1e3ac <_IO_stdin_used+0x304c>
popa
je     1e3a7 <_IO_stdin_used+0x3047>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
sub    %ebp,(%ecx)
cmp    (%eax),%esp
jge    1e37e <_IO_stdin_used+0x301e>
and    %bh,(%edx)
and    %dh,0x74(%ebx)
jb     1e3ca <_IO_stdin_used+0x306a>
arpl   %bp,0x70(%ebp)
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
gs
ja     1e3d5 <_IO_stdin_used+0x3075>
popa
je     1e3d0 <_IO_stdin_used+0x3070>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    %ebp,(%ecx)
sub    %esp,(%eax)
cmp    $0x30203d,%eax
sub    %bl,0x5f(%edi)
gs
js     1e40a <_IO_stdin_used+0x30aa>
outsb  %gs:(%esi),(%dx)
jae    1e403 <_IO_stdin_used+0x30a3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
pop    %edi
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e411 <_IO_stdin_used+0x30b1>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e423 <_IO_stdin_used+0x30c3>
popa
outsb  %ds:(%esi),(%dx)
je     1e412 <_IO_stdin_used+0x30b2>
jo     1e3d5 <_IO_stdin_used+0x3075>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    %esp,(%eax)
es and %ch,%es:(%eax)
sub    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e43d <_IO_stdin_used+0x30dd>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e44f <_IO_stdin_used+0x30ef>
popa
outsb  %ds:(%esi),(%dx)
je     1e43e <_IO_stdin_used+0x30de>
jo     1e401 <_IO_stdin_used+0x30a1>
sub    %ch,0x6c(%edi)
fs
jo     1e448 <_IO_stdin_used+0x30e8>
je     1e451 <_IO_stdin_used+0x30f1>
sub    %esp,(%eax)
es and %dh,%es:0x74(%ebx)
jb     1e45e <_IO_stdin_used+0x30fe>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1e45c <_IO_stdin_used+0x30fc>
je     1e465 <_IO_stdin_used+0x3105>
sub    %esp,(%eax)
cmp    $0x20,%al
sub    %ch,(%eax)
jae    1e46e <_IO_stdin_used+0x310e>
jp     1e46c <_IO_stdin_used+0x310c>
pop    %edi
je     1e433 <_IO_stdin_used+0x30d3>
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    %ebp,(%ecx)
sub    %esp,(%eax)
jl     1e49d <_IO_stdin_used+0x313d>
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e494 <_IO_stdin_used+0x3134>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e4a6 <_IO_stdin_used+0x3146>
popa
outsb  %ds:(%esi),(%dx)
je     1e495 <_IO_stdin_used+0x3135>
jo     1e458 <_IO_stdin_used+0x30f8>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
es and %dh,%es:0x74(%ebx)
jb     1e4ba <_IO_stdin_used+0x315a>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    $0x20,%al
sub    %ch,(%eax)
jae    1e4cf <_IO_stdin_used+0x316f>
jp     1e4cd <_IO_stdin_used+0x316d>
pop    %edi
je     1e494 <_IO_stdin_used+0x3134>
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    %ebp,(%ecx)
sub    %ebp,(%ecx)
and    %bh,(%edi)
and    %bl,0x5f(%edi)
gs
js     1e4fc <_IO_stdin_used+0x319c>
outsb  %gs:(%esi),(%dx)
jae    1e4f5 <_IO_stdin_used+0x3195>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
pop    %edi
and    %ch,(%eax)
jnp    1e4b4 <_IO_stdin_used+0x3154>
jae    1e4ff <_IO_stdin_used+0x319f>
jp     1e4fd <_IO_stdin_used+0x319d>
pop    %edi
je     1e4bb <_IO_stdin_used+0x315b>
pop    %edi
pop    %edi
jae    1e4d0 <_IO_stdin_used+0x3170>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    $0x20,%al
pop    %edi
pop    %edi
jae    1e4db <_IO_stdin_used+0x317b>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
cmp    (%eax),%esp
sub    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e521 <_IO_stdin_used+0x31c1>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e533 <_IO_stdin_used+0x31d3>
popa
outsb  %ds:(%esi),(%dx)
je     1e522 <_IO_stdin_used+0x31c2>
jo     1e4e5 <_IO_stdin_used+0x3185>
sub    %ch,0x6c(%edi)
fs
jo     1e52c <_IO_stdin_used+0x31cc>
je     1e535 <_IO_stdin_used+0x31d5>
sub    %esp,(%eax)
es and %bl,%es:0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e543 <_IO_stdin_used+0x31e3>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e555 <_IO_stdin_used+0x31f5>
popa
outsb  %ds:(%esi),(%dx)
je     1e544 <_IO_stdin_used+0x31e4>
jo     1e507 <_IO_stdin_used+0x31a7>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
es and %ch,%es:(%eax)
pop    %edi
pop    %edi
jae    1e52f <_IO_stdin_used+0x31cf>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x625f5f20
jne    1e573 <_IO_stdin_used+0x3213>
insb   (%dx),%es:(%edi)
je     1e576 <_IO_stdin_used+0x3216>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1e585 <_IO_stdin_used+0x3225>
jb     1e57f <_IO_stdin_used+0x321f>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1e57d <_IO_stdin_used+0x321d>
je     1e586 <_IO_stdin_used+0x3226>
sub    %ebp,(%eax,%eiz,1)
pop    %edi
pop    %edi
jae    1e557 <_IO_stdin_used+0x31f7>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x625f5f20
jne    1e59a <_IO_stdin_used+0x323a>
insb   (%dx),%es:(%edi)
je     1e59d <_IO_stdin_used+0x323d>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1e5ac <_IO_stdin_used+0x324c>
jb     1e5a6 <_IO_stdin_used+0x3246>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%eax,%eiz,1)
sub    %ah,(%ecx)
sub    %ch,(%eax)
jae    1e5bc <_IO_stdin_used+0x325c>
jp     1e5ba <_IO_stdin_used+0x325a>
pop    %edi
je     1e581 <_IO_stdin_used+0x3221>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e5d2 <_IO_stdin_used+0x3272>
and    %dh,0x6f(%esi)
imul   $0x6f282829,0x2a(%eax,%eiz,1),%esp
insb   (%dx),%es:(%edi)
fs
jo     1e5ce <_IO_stdin_used+0x326e>
je     1e5d7 <_IO_stdin_used+0x3277>
sub    %esp,(%eax)
sub    (%eax),%esp
xor    %ebp,(%ecx)
and    %ch,0x69732820
jp     1e5e2 <_IO_stdin_used+0x3282>
pop    %edi
je     1e5a9 <_IO_stdin_used+0x3249>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e5fa <_IO_stdin_used+0x329a>
and    %dh,0x6f(%esi)
imul   $0x6c6f2829,0x2a(%eax,%eiz,1),%esp
fs
jo     1e5f5 <_IO_stdin_used+0x3295>
je     1e5fe <_IO_stdin_used+0x329e>
sub    %esp,(%eax)
cmp    $0x2931203d,%eax
and    %bh,0x20(%esp,%edi,2)
pop    %edi
pop    %edi
jae    1e5d6 <_IO_stdin_used+0x3276>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
cmp    $0x20293420,%eax
es and %ch,%es:(%eax)
and    %ebp,(%eax)
sub    %dh,0x69(%ebx)
jp     1e620 <_IO_stdin_used+0x32c0>
pop    %edi
je     1e5e7 <_IO_stdin_used+0x3287>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e638 <_IO_stdin_used+0x32d8>
and    %dh,0x6f(%esi)
imul   $0x63282829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x643e,%ax
imul   $0x29656d61,0x6e(%edx),%esi
and    %ch,(%ebx)
and    %dh,(%ecx)
sub    %esp,(%eax)
sub    $0x69732820,%eax
jp     1e64d <_IO_stdin_used+0x32ed>
pop    %edi
je     1e614 <_IO_stdin_used+0x32b4>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e665 <_IO_stdin_used+0x3305>
and    %dh,0x6f(%esi)
imul   $0x66632829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    $0x2931203d,%eax
and    %bh,0x20(%esp,%edi,2)
pop    %edi
pop    %edi
jae    1e647 <_IO_stdin_used+0x32e7>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
cmp    $0x29293420,%eax
and    %bh,(%edi)
and    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e694 <_IO_stdin_used+0x3334>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1e6a3 <_IO_stdin_used+0x3343>
jb     1e694 <_IO_stdin_used+0x3334>
insl   (%dx),%es:(%edi)
jo     1e654 <_IO_stdin_used+0x32f4>
sub    %ch,0x6c(%edi)
fs
jo     1e69b <_IO_stdin_used+0x333b>
je     1e6a4 <_IO_stdin_used+0x3344>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    (%eax),%ah
sub    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e6c0 <_IO_stdin_used+0x3360>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e6d2 <_IO_stdin_used+0x3372>
popa
outsb  %ds:(%esi),(%dx)
je     1e6c1 <_IO_stdin_used+0x3361>
jo     1e684 <_IO_stdin_used+0x3324>
sub    %ch,0x6c(%edi)
fs
jo     1e6cb <_IO_stdin_used+0x336b>
je     1e6d4 <_IO_stdin_used+0x3374>
sub    %esp,(%eax)
es and %ch,%es:(%eax)
sub    %dh,0x69(%ebx)
jp     1e6dc <_IO_stdin_used+0x337c>
pop    %edi
je     1e6a3 <_IO_stdin_used+0x3343>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e6f4 <_IO_stdin_used+0x3394>
and    %dh,0x6f(%esi)
imul   $0x6f282829,0x2a(%eax,%eiz,1),%esp
insb   (%dx),%es:(%edi)
fs
jo     1e6f0 <_IO_stdin_used+0x3390>
je     1e6f9 <_IO_stdin_used+0x3399>
sub    %esp,(%eax)
sub    (%eax),%esp
xor    %ebp,(%ecx)
and    %ch,0x69732820
jp     1e704 <_IO_stdin_used+0x33a4>
pop    %edi
je     1e6cb <_IO_stdin_used+0x336b>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e71c <_IO_stdin_used+0x33bc>
and    %dh,0x6f(%esi)
imul   $0x6c6f2829,0x2a(%eax,%eiz,1),%esp
fs
jo     1e717 <_IO_stdin_used+0x33b7>
je     1e720 <_IO_stdin_used+0x33c0>
sub    %esp,(%eax)
cmp    $0x2931203d,%eax
and    %ah,(%esi)
and    %ch,%es:(%eax)
pop    %edi
pop    %edi
jae    1e6f9 <_IO_stdin_used+0x3399>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x625f5f20
jne    1e73d <_IO_stdin_used+0x33dd>
insb   (%dx),%es:(%edi)
je     1e740 <_IO_stdin_used+0x33e0>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1e74f <_IO_stdin_used+0x33ef>
jb     1e749 <_IO_stdin_used+0x33e9>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1e747 <_IO_stdin_used+0x33e7>
je     1e750 <_IO_stdin_used+0x33f0>
sub    %ebp,(%eax,%eiz,1)
pop    %edi
pop    %edi
jae    1e720 <_IO_stdin_used+0x33c0>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%eax,%eiz,1)
xor    $0x29,%al
and    %bh,(%edi)
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e76d <_IO_stdin_used+0x340d>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1e77f <_IO_stdin_used+0x341f>
popa
outsb  %ds:(%esi),(%dx)
je     1e76e <_IO_stdin_used+0x340e>
jo     1e731 <_IO_stdin_used+0x33d1>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
es and %ch,%es:(%eax)
sub    %dh,0x69(%ebx)
jp     1e78e <_IO_stdin_used+0x342e>
pop    %edi
je     1e755 <_IO_stdin_used+0x33f5>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e7a6 <_IO_stdin_used+0x3446>
and    %dh,0x6f(%esi)
imul   $0x63282829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x643e,%ax
imul   $0x29656d61,0x6e(%edx),%esi
and    %ch,(%ebx)
and    %dh,(%ecx)
sub    %esp,(%eax)
sub    $0x69732820,%eax
jp     1e7bb <_IO_stdin_used+0x345b>
pop    %edi
je     1e782 <_IO_stdin_used+0x3422>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1e7d3 <_IO_stdin_used+0x3473>
and    %dh,0x6f(%esi)
imul   $0x66632829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    $0x2931203d,%eax
and    %bh,(%edi)
and    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1e7ef <_IO_stdin_used+0x348f>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1e7fe <_IO_stdin_used+0x349e>
jb     1e7ef <_IO_stdin_used+0x348f>
insl   (%dx),%es:(%edi)
jo     1e7af <_IO_stdin_used+0x344f>
sub    %ch,0x6c(%edi)
fs
jo     1e7f6 <_IO_stdin_used+0x3496>
je     1e7ff <_IO_stdin_used+0x349f>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    (%eax),%ah
sub    %bl,0x5f(%edi)
gs
js     1e823 <_IO_stdin_used+0x34c3>
outsb  %gs:(%esi),(%dx)
jae    1e81c <_IO_stdin_used+0x34bc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
pop    %edi
and    %ch,(%eax)
jnp    1e7db <_IO_stdin_used+0x347b>
arpl   %bp,0x6e(%edi)
jae    1e834 <_IO_stdin_used+0x34d4>
and    %dh,0x6e(%ebp)
jae    1e82e <_IO_stdin_used+0x34ce>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e7ef <_IO_stdin_used+0x348f>
sub    0x5f(%edi),%bl
jae    1e806 <_IO_stdin_used+0x34a6>
and    %bh,0x6f632820
outsb  %ds:(%esi),(%dx)
jae    1e851 <_IO_stdin_used+0x34f1>
and    %dh,0x6e(%ebp)
jae    1e84b <_IO_stdin_used+0x34eb>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e80c <_IO_stdin_used+0x34ac>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e869 <_IO_stdin_used+0x3509>
and    %ah,0x68(%ebx)
popa
jb     1e81b <_IO_stdin_used+0x34bb>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %edi,%gs:(%ebx)
and    %ch,0x6e(%ecx)
je     1e832 <_IO_stdin_used+0x34d2>
pop    %edi
pop    %edi
jb     1e87b <_IO_stdin_used+0x351b>
jae    1e88d <_IO_stdin_used+0x352d>
insb   (%dx),%es:(%edi)
je     1e83b <_IO_stdin_used+0x34db>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1e899 <_IO_stdin_used+0x3539>
and    %dh,0x6e(%ebp)
jae    1e893 <_IO_stdin_used+0x3533>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e854 <_IO_stdin_used+0x34f4>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e8b1 <_IO_stdin_used+0x3551>
and    %ah,0x68(%ebx)
popa
jb     1e863 <_IO_stdin_used+0x3503>
sub    (%ecx),%ch
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1e8ad <_IO_stdin_used+0x354d>
je     1e8b6 <_IO_stdin_used+0x3556>
sub    %ebp,(%ecx)
pop    %ebx
xor    %bl,0x20(%ebp)
sub    $0x735f5f20,%eax
xor    0x30(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1e899 <_IO_stdin_used+0x3539>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%eax)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1e8dd <_IO_stdin_used+0x357d>
jae    1e8ef <_IO_stdin_used+0x358f>
insb   (%dx),%es:(%edi)
je     1e89d <_IO_stdin_used+0x353d>
cmp    $0x2930203d,%eax
and    %bh,0x20(%ebx)
pop    %edi
pop    %edi
jb     1e8ee <_IO_stdin_used+0x358e>
jae    1e900 <_IO_stdin_used+0x35a0>
insb   (%dx),%es:(%edi)
je     1e8ae <_IO_stdin_used+0x354e>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1e90c <_IO_stdin_used+0x35ac>
and    %dh,0x6e(%ebp)
jae    1e906 <_IO_stdin_used+0x35a6>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e8c7 <_IO_stdin_used+0x3567>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e924 <_IO_stdin_used+0x35c4>
and    %ah,0x68(%ebx)
popa
jb     1e8d6 <_IO_stdin_used+0x3576>
sub    (%ecx),%ch
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1e920 <_IO_stdin_used+0x35c0>
je     1e929 <_IO_stdin_used+0x35c9>
sub    %ebp,(%ecx)
pop    %ebx
xor    %ebx,0x20(%ebp)
sub    $0x735f5f20,%eax
xor    0x31(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1e90c <_IO_stdin_used+0x35ac>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%ecx)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1e950 <_IO_stdin_used+0x35f0>
jae    1e962 <_IO_stdin_used+0x3602>
insb   (%dx),%es:(%edi)
je     1e910 <_IO_stdin_used+0x35b0>
cmp    $0x2930203d,%eax
and    %bh,0x20(%ebx)
pop    %edi
pop    %edi
jb     1e961 <_IO_stdin_used+0x3601>
jae    1e973 <_IO_stdin_used+0x3613>
insb   (%dx),%es:(%edi)
je     1e921 <_IO_stdin_used+0x35c1>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1e97f <_IO_stdin_used+0x361f>
and    %dh,0x6e(%ebp)
jae    1e979 <_IO_stdin_used+0x3619>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e93a <_IO_stdin_used+0x35da>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1e997 <_IO_stdin_used+0x3637>
and    %ah,0x68(%ebx)
popa
jb     1e949 <_IO_stdin_used+0x35e9>
sub    (%ecx),%ch
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1e993 <_IO_stdin_used+0x3633>
je     1e99c <_IO_stdin_used+0x363c>
sub    %ebp,(%ecx)
pop    %ebx
xor    0x20(%ebp),%bl
sub    $0x735f5f20,%eax
xor    0x32(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1e97f <_IO_stdin_used+0x361f>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%edx)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1e9c3 <_IO_stdin_used+0x3663>
jae    1e9d5 <_IO_stdin_used+0x3675>
insb   (%dx),%es:(%edi)
je     1e983 <_IO_stdin_used+0x3623>
cmp    $0x2930203d,%eax
and    %bl,0x5f(%edi)
jb     1e9d2 <_IO_stdin_used+0x3672>
jae    1e9e4 <_IO_stdin_used+0x3684>
insb   (%dx),%es:(%edi)
je     1e992 <_IO_stdin_used+0x3632>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1e9f0 <_IO_stdin_used+0x3690>
and    %dh,0x6e(%ebp)
jae    1e9ea <_IO_stdin_used+0x368a>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1e9ab <_IO_stdin_used+0x364b>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1ea08 <_IO_stdin_used+0x36a8>
and    %ah,0x68(%ebx)
popa
jb     1e9ba <_IO_stdin_used+0x365a>
sub    (%ecx),%ch
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1ea04 <_IO_stdin_used+0x36a4>
je     1ea0d <_IO_stdin_used+0x36ad>
sub    %ebp,(%ecx)
pop    %ebx
xor    0x20(%ebp),%ebx
sub    $0x735f5f20,%eax
xor    0x33(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %bh,0x20(%ebp)
jge    1e9db <_IO_stdin_used+0x367b>
pop    %edi
pop    %edi
jb     1ea24 <_IO_stdin_used+0x36c4>
jae    1ea36 <_IO_stdin_used+0x36d6>
insb   (%dx),%es:(%edi)
je     1e9ff <_IO_stdin_used+0x369f>
and    %bh,0x29(%ebp)
sub    %ebp,(%ecx)
and    %bh,(%edx)
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1ea3e <_IO_stdin_used+0x36de>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1ea50 <_IO_stdin_used+0x36f0>
popa
outsb  %ds:(%esi),(%dx)
je     1ea3f <_IO_stdin_used+0x36df>
jo     1ea02 <_IO_stdin_used+0x36a2>
sub    %ah,0x66(%ebx)
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
es and %ch,%es:(%eax)
sub    %dh,0x69(%ebx)
jp     1ea5f <_IO_stdin_used+0x36ff>
pop    %edi
je     1ea26 <_IO_stdin_used+0x36c6>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1ea77 <_IO_stdin_used+0x3717>
and    %dh,0x6f(%esi)
imul   $0x63282829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x643e,%ax
imul   $0x29656d61,0x6e(%edx),%esi
and    %ch,(%ebx)
and    %dh,(%ecx)
sub    %esp,(%eax)
sub    $0x69732820,%eax
jp     1ea8c <_IO_stdin_used+0x372c>
pop    %edi
je     1ea53 <_IO_stdin_used+0x36f3>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1eaa4 <_IO_stdin_used+0x3744>
and    %dh,0x6f(%esi)
imul   $0x66632829,0x2a(%eax,%eiz,1),%esp
addr16 sub $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    $0x2931203d,%eax
and    %ah,(%esi)
and    %ch,%es:(%eax)
pop    %edi
pop    %edi
jae    1ea87 <_IO_stdin_used+0x3727>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x625f5f20
jne    1eaca <_IO_stdin_used+0x376a>
insb   (%dx),%es:(%edi)
je     1eacd <_IO_stdin_used+0x376d>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1eadc <_IO_stdin_used+0x377c>
jb     1ead6 <_IO_stdin_used+0x3776>
outsb  %gs:(%esi),(%dx)
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%eax,%eiz,1)
pop    %edi
pop    %edi
jae    1eab3 <_IO_stdin_used+0x3753>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%eax,%eiz,1)
xor    $0x29,%al
and    %bh,(%edi)
and    %ch,(%eax)
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1eaff <_IO_stdin_used+0x379f>
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    1eb11 <_IO_stdin_used+0x37b1>
popa
outsb  %ds:(%esi),(%dx)
je     1eb00 <_IO_stdin_used+0x37a0>
jo     1eac3 <_IO_stdin_used+0x3763>
sub    %ch,0x6c(%edi)
fs
jo     1eb0a <_IO_stdin_used+0x37aa>
je     1eb13 <_IO_stdin_used+0x37b3>
sub    %esp,(%eax)
es and %ch,%es:(%eax)
sub    %dh,0x69(%ebx)
jp     1eb1b <_IO_stdin_used+0x37bb>
pop    %edi
je     1eae2 <_IO_stdin_used+0x3782>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1eb33 <_IO_stdin_used+0x37d3>
and    %dh,0x6f(%esi)
imul   $0x6f282829,0x2a(%eax,%eiz,1),%esp
insb   (%dx),%es:(%edi)
fs
jo     1eb2f <_IO_stdin_used+0x37cf>
je     1eb38 <_IO_stdin_used+0x37d8>
sub    %esp,(%eax)
sub    (%eax),%esp
xor    %ebp,(%ecx)
and    %ch,0x69732820
jp     1eb43 <_IO_stdin_used+0x37e3>
pop    %edi
je     1eb0a <_IO_stdin_used+0x37aa>
sub    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jae    1eb5b <_IO_stdin_used+0x37fb>
and    %dh,0x6f(%esi)
imul   $0x6c6f2829,0x2a(%eax,%eiz,1),%esp
fs
jo     1eb56 <_IO_stdin_used+0x37f6>
je     1eb5f <_IO_stdin_used+0x37ff>
sub    %esp,(%eax)
cmp    $0x2931203d,%eax
and    %bh,(%edi)
and    %bl,0x5f(%edi)
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1eb72 <_IO_stdin_used+0x3812>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1eb81 <_IO_stdin_used+0x3821>
jb     1eb72 <_IO_stdin_used+0x3812>
insl   (%dx),%es:(%edi)
jo     1eb32 <_IO_stdin_used+0x37d2>
sub    %ch,0x6c(%edi)
fs
jo     1eb79 <_IO_stdin_used+0x3819>
je     1eb82 <_IO_stdin_used+0x3822>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
cmp    (%eax),%ah
sub    %ch,0x5f5f2820
gs
js     1eba9 <_IO_stdin_used+0x3849>
outsb  %gs:(%esi),(%dx)
jae    1eba2 <_IO_stdin_used+0x3842>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
pop    %edi
and    %ch,(%eax)
jnp    1eb61 <_IO_stdin_used+0x3801>
arpl   %bp,0x6e(%edi)
jae    1ebba <_IO_stdin_used+0x385a>
and    %dh,0x6e(%ebp)
jae    1ebb4 <_IO_stdin_used+0x3854>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1eb75 <_IO_stdin_used+0x3815>
sub    0x5f(%edi),%bl
jae    1eb8c <_IO_stdin_used+0x382c>
and    %bh,0x6f632820
outsb  %ds:(%esi),(%dx)
jae    1ebd7 <_IO_stdin_used+0x3877>
and    %dh,0x6e(%ebp)
jae    1ebd1 <_IO_stdin_used+0x3871>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1eb92 <_IO_stdin_used+0x3832>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1ebef <_IO_stdin_used+0x388f>
and    %ah,0x68(%ebx)
popa
jb     1eba1 <_IO_stdin_used+0x3841>
sub    (%ecx),%ch
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1ebeb <_IO_stdin_used+0x388b>
je     1ebf4 <_IO_stdin_used+0x3894>
sub    %edi,(%ebx)
and    %ch,0x6e(%ecx)
je     1ebb3 <_IO_stdin_used+0x3853>
pop    %edi
pop    %edi
jb     1ebfc <_IO_stdin_used+0x389c>
jae    1ec0e <_IO_stdin_used+0x38ae>
insb   (%dx),%es:(%edi)
je     1ebbc <_IO_stdin_used+0x385c>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1ec1a <_IO_stdin_used+0x38ba>
and    %dh,0x6e(%ebp)
jae    1ec14 <_IO_stdin_used+0x38b4>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1ebd5 <_IO_stdin_used+0x3875>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1ec32 <_IO_stdin_used+0x38d2>
and    %ah,0x68(%ebx)
popa
jb     1ebe4 <_IO_stdin_used+0x3884>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
pop    %ebx
xor    %bl,0x20(%ebp)
sub    $0x735f5f20,%eax
xor    0x30(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1ec20 <_IO_stdin_used+0x38c0>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%eax)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1ec63 <_IO_stdin_used+0x3903>
jae    1ec75 <_IO_stdin_used+0x3915>
insb   (%dx),%es:(%edi)
je     1ec23 <_IO_stdin_used+0x38c3>
cmp    $0x2930203d,%eax
and    %bh,0x20(%ebx)
pop    %edi
pop    %edi
jb     1ec74 <_IO_stdin_used+0x3914>
jae    1ec86 <_IO_stdin_used+0x3926>
insb   (%dx),%es:(%edi)
je     1ec34 <_IO_stdin_used+0x38d4>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1ec92 <_IO_stdin_used+0x3932>
and    %dh,0x6e(%ebp)
jae    1ec8c <_IO_stdin_used+0x392c>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1ec4d <_IO_stdin_used+0x38ed>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1ecaa <_IO_stdin_used+0x394a>
and    %ah,0x68(%ebx)
popa
jb     1ec5c <_IO_stdin_used+0x38fc>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
pop    %ebx
xor    %ebx,0x20(%ebp)
sub    $0x735f5f20,%eax
xor    0x31(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1ec98 <_IO_stdin_used+0x3938>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%ecx)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1ecdb <_IO_stdin_used+0x397b>
jae    1eced <_IO_stdin_used+0x398d>
insb   (%dx),%es:(%edi)
je     1ec9b <_IO_stdin_used+0x393b>
cmp    $0x2930203d,%eax
and    %bh,0x20(%ebx)
pop    %edi
pop    %edi
jb     1ecec <_IO_stdin_used+0x398c>
jae    1ecfe <_IO_stdin_used+0x399e>
insb   (%dx),%es:(%edi)
je     1ecac <_IO_stdin_used+0x394c>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1ed0a <_IO_stdin_used+0x39aa>
and    %dh,0x6e(%ebp)
jae    1ed04 <_IO_stdin_used+0x39a4>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1ecc5 <_IO_stdin_used+0x3965>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1ed22 <_IO_stdin_used+0x39c2>
and    %ah,0x68(%ebx)
popa
jb     1ecd4 <_IO_stdin_used+0x3974>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
pop    %ebx
xor    0x20(%ebp),%bl
sub    $0x735f5f20,%eax
xor    0x32(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %ch,0x66(%ecx)
and    %ch,(%eax)
pop    %edi
pop    %edi
jae    1ed10 <_IO_stdin_used+0x39b0>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%esi)
and    %dh,(%edx)
and    %ah,(%esi)
and    %bl,%es:0x5f(%edi)
jb     1ed53 <_IO_stdin_used+0x39f3>
jae    1ed65 <_IO_stdin_used+0x3a05>
insb   (%dx),%es:(%edi)
je     1ed13 <_IO_stdin_used+0x39b3>
cmp    $0x2930203d,%eax
and    %bl,0x5f(%edi)
jb     1ed62 <_IO_stdin_used+0x3a02>
jae    1ed74 <_IO_stdin_used+0x3a14>
insb   (%dx),%es:(%edi)
je     1ed22 <_IO_stdin_used+0x39c2>
cmp    $0x28282820,%eax
arpl   %bp,0x6e(%edi)
jae    1ed80 <_IO_stdin_used+0x3a20>
and    %dh,0x6e(%ebp)
jae    1ed7a <_IO_stdin_used+0x3a1a>
outsb  %ds:(%si),(%dx)
gs and %ah,%fs:%gs:0x68(%ebx)
popa
jb     1ed3b <_IO_stdin_used+0x39db>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
jae    1ed98 <_IO_stdin_used+0x3a38>
and    %ah,0x68(%ebx)
popa
jb     1ed4a <_IO_stdin_used+0x39ea>
sub    (%ecx),%ch
and    %ch,(%eax)
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
pop    %ebx
xor    0x20(%ebp),%ebx
sub    $0x735f5f20,%eax
xor    0x33(%ebx),%bl
pop    %ebp
sub    %edi,(%ebx)
and    %bh,0x20(%ebp)
jge    1ed70 <_IO_stdin_used+0x3a10>
pop    %edi
pop    %edi
jb     1edb9 <_IO_stdin_used+0x3a59>
jae    1edcb <_IO_stdin_used+0x3a6b>
insb   (%dx),%es:(%edi)
je     1ed94 <_IO_stdin_used+0x3a34>
and    %bh,0x29(%ebp)
sub    %ebp,(%ecx)
sub    %esp,(%eax)
cmp    (%eax),%ah
pop    %edi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1edd3 <_IO_stdin_used+0x3a73>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    1ede2 <_IO_stdin_used+0x3a82>
jb     1edd3 <_IO_stdin_used+0x3a73>
insl   (%dx),%es:(%edi)
jo     1ed93 <_IO_stdin_used+0x3a33>
sub    %ch,0x6c(%edi)
fs
jo     1edda <_IO_stdin_used+0x3a7a>
je     1ede3 <_IO_stdin_used+0x3a83>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %ebp,%gs:(%ecx)
sub    %ebp,(%ecx)
cmp    (%eax),%esp
jge    1edba <_IO_stdin_used+0x3a5a>
and    %bh,(%edx)
and    %dh,0x74(%ebx)
jb     1ee06 <_IO_stdin_used+0x3aa6>
arpl   %bp,0x70(%ebp)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
fs
jo     1ee03 <_IO_stdin_used+0x3aa3>
je     1ee0c <_IO_stdin_used+0x3aac>
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
sub    $0x20,%al
arpl   %sp,0x67(%esi)
sub    $0x7269643e,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
sub    %ebp,(%ecx)
sub    %esp,(%eax)
cmp    $0x30203d,%eax
arpl   %bp,0x6d(%edi)
jo     1ee32 <_IO_stdin_used+0x3ad2>
jb     1ee3c <_IO_stdin_used+0x3adc>
outsb  %ds:(%esi),(%dx)
and    %dh,0x72(%bx,%si)
imul   $0x65697469,0x72(%edi),%ebp
jae    1ee01 <_IO_stdin_used+0x3aa1>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6e612073
and    %ah,%fs:0xa73
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1ee5b <_IO_stdin_used+0x3afb>
and    %ch,%fs:0x77(%edi,%ebp,2)
gs
jb     1ee1e <_IO_stdin_used+0x3abe>
jo     1ee72 <_IO_stdin_used+0x3b12>
imul   $0x3a797469,0x72(%edi),%ebp
and    %ah,0x68202c73
imul   $0x203a7265,0x68(%edi),%esp
and    $0x70000a73,%eax
jb     1ee84 <_IO_stdin_used+0x3b24>
outsl  %ds:(%esi),(%dx)
jb     1ee87 <_IO_stdin_used+0x3b27>
je     1ee89 <_IO_stdin_used+0x3b29>
gs
jae    1ee5d <_IO_stdin_used+0x3afd>
and    %ah,0x75(%edx)
imul   $0x203a6e69,0x2d(%esp,%esi,2),%ebp
and    $0x6f202c64,%eax
insb   (%dx),%es:(%edi)
cmp    %fs:(%eax),%ah
and    $0x6e202c64,%eax
gs
ja     1ee79 <_IO_stdin_used+0x3b19>
and    %ah,0x52000a64
gs
jo     1eeb4 <_IO_stdin_used+0x3b54>
popa
arpl   %sp,0x20(%ebp)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     1eeb5 <_IO_stdin_used+0x3b55>
jb     1ee72 <_IO_stdin_used+0x3b12>
jo     1eec6 <_IO_stdin_used+0x3b66>
imul   $0x20797469,0x72(%edi),%ebp
and    $0x69772073,%eax
je     1eeca <_IO_stdin_used+0x3b6a>
and    %ch,0x65(%esi)
ja     1ee87 <_IO_stdin_used+0x3b27>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1eed8 <_IO_stdin_used+0x3b78>
and    %ah,%gs:0xa73
add    %ah,0x6f(%ebx)
jne    1eee4 <_IO_stdin_used+0x3b84>
and    %ch,%fs:0x6f(%esi)
je     1ee9e <_IO_stdin_used+0x3b3e>
arpl   %si,0x65(%edx)
popa
je     1eee9 <_IO_stdin_used+0x3b89>
and    %ch,0x6f(%ebp)
fs
jne    1eef6 <_IO_stdin_used+0x3b96>
and    %ah,%gs:0x25203a73
jae    1ee9d <_IO_stdin_used+0x3b3d>
add    %cl,0x6e(%ecx)
jbe    1eef9 <_IO_stdin_used+0x3b99>
insb   (%dx),%es:(%edi)
imul   $0x6c75646f,0x6d(%eax,%eiz,1),%esp
gs
jae    1eed2 <_IO_stdin_used+0x3b72>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     1ef13 <_IO_stdin_used+0x3bb3>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx,%ebp,2)
cmp    %gs:(%eax),%ah
and    $0xa73,%eax
add    %ah,0x70(%ebp,%esi,2)
insb   (%dx),%es:(%edi)
imul   $0x6d206574,0x61(%ebx),%esp
outsl  %ds:(%esi),(%dx)
fs
jne    1ef33 <_IO_stdin_used+0x3bd3>
and    %ah,%gs:0x6c(%ecx)
imul   $0x73250a3a,0x73(%ecx),%esp
and    %ah,0xa73
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1ef43 <_IO_stdin_used+0x3be3>
and    %ah,%fs:0x70(%ebp,%eiz,2)
jb     1ef4a <_IO_stdin_used+0x3bea>
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:0x70(%edi)
je     1ef58 <_IO_stdin_used+0x3bf8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0xa73252d
add    %cl,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1ef63 <_IO_stdin_used+0x3c03>
and    %ah,%fs:0x70(%ebp,%eiz,2)
jb     1ef6a <_IO_stdin_used+0x3c0a>
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:0x70(%edi)
je     1ef78 <_IO_stdin_used+0x3c18>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0xa6325
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bp,%si),%cl
or     %esp,0x5b2d2073
popa
inc    %ecx
pop    %ebp
and    %bl,0x6f(%ebx)
jo     1efa1 <_IO_stdin_used+0x3c41>
imul   $0x5b205d73,0x6e(%edi),%ebp
outsw  %ds:(%esi),(%dx)
jb     1ef9b <_IO_stdin_used+0x3c3b>
gs
fs
pop    %edi
jbe    1efa2 <_IO_stdin_used+0x3c42>
jb     1efb2 <_IO_stdin_used+0x3c52>
imul   $0x490a0a5d,0x6e(%edi),%ebp
data16
and    %ch,0x6f(%esi)
and    %ah,0x72(%ecx)
addr16 jne 1efbd <_IO_stdin_used+0x3c5d>
outsb  %gs:(%esi),(%dx)
je     1efc7 <_IO_stdin_used+0x3c67>
and    %ch,(%eax)
gs
js     1efbc <_IO_stdin_used+0x3c5c>
gs
jo     1efd0 <_IO_stdin_used+0x3c70>
and    %ch,0x70(%edi)
je     1efca <_IO_stdin_used+0x3c6a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1ef8e <_IO_stdin_used+0x3c2e>
and    %ah,0x72(%ecx)
and    %ah,%gs:0x69(%edi)
jbe    1efd3 <_IO_stdin_used+0x3c73>
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
and    0x70(%ebp,%eiz,2),%ah
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ch,%fs:0x69202261
jae    1efa0 <_IO_stdin_used+0x3c40>
popa
jae    1eff6 <_IO_stdin_used+0x3c96>
jne    1eff2 <_IO_stdin_used+0x3c92>
gs or  %fs:%gs:(%edx),%cl
fs
gs
jo     1effa <_IO_stdin_used+0x3c9a>
outsl  %ds:(%esi),(%dx)
and    %dh,%fs:0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x75(%edi)
je     1f009 <_IO_stdin_used+0x3ca9>
jne    1f00f <_IO_stdin_used+0x3caf>
and    %ah,0x20(%ecx)
fs
gs
jo     1f007 <_IO_stdin_used+0x3ca7>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x69757320,0x74(%ebx),%esi
je     1f014 <_IO_stdin_used+0x3cb4>
bound  %ebp,0x20(%ebp,%eiz,2)
outsw  %ds:(%esi),(%dx)
jb     1efdb <_IO_stdin_used+0x3c7b>
je     1f025 <_IO_stdin_used+0x3cc5>
and    %ch,%gs:0x6f(%ebp)
fs
jo     1f036 <_IO_stdin_used+0x3cd6>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
jne    1f03e <_IO_stdin_used+0x3cde>
imul   $0xa0a2e79,0x74(%ecx,%ebp,2),%ebp
dec    %edi
jo     1f049 <_IO_stdin_used+0x3ce9>
imul   $0x90a3a73,0x6e(%edi),%ebp
sub    $0x2d202c61,%eax
sub    $0x206c6c61,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%eax)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs
jne    1f06c <_IO_stdin_used+0x3d0c>
gs
jae    1f00d <_IO_stdin_used+0x3cad>
or     %ebp,0x2d202c41
sub    $0x63697571,%eax
imul   $0x20,(%eax),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %edi
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    1f03e <_IO_stdin_used+0x3cde>
outsl  %fs:(%esi),(%dx)
gs
jae    1f043 <_IO_stdin_used+0x3ce3>
je     1f08d <_IO_stdin_used+0x3d2d>
and    %dh,%gs:0x6f(%edi)
jb     1f096 <_IO_stdin_used+0x3d36>
and    %ch,0x66(%ecx)
and    %dh,0x65(%eax,%ebp,2)
jb     1f099 <_IO_stdin_used+0x3d39>
daa
jae    1f057 <_IO_stdin_used+0x3cf7>
popa
and    %ch,0x65(%esi)
ja     1f05d <_IO_stdin_used+0x3cfd>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1f0ae <_IO_stdin_used+0x3d4e>
or     %gs:(%ecx),%cl
sub    $0x2d202c65,%eax
sub    $0x73727265,%eax
jns    1f0be <_IO_stdin_used+0x3d5e>
jae    1f073 <_IO_stdin_used+0x3d13>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x65(%edx)
jo     1f0cd <_IO_stdin_used+0x3d6d>
jb     1f0d4 <_IO_stdin_used+0x3d74>
and    %ch,0x6f(%esi)
je     1f085 <_IO_stdin_used+0x3d25>
jae    1f0dc <_IO_stdin_used+0x3d7c>
jo     1f0d9 <_IO_stdin_used+0x3d79>
insb   (%dx),%es:(%edi)
imul   $0x6d797320,0x64(%ebp),%esp
bound  %ebp,0x6c(%edi)
jae    1f080 <_IO_stdin_used+0x3d20>
or     %ebp,0x2d202c6e
sub    $0x776f6873,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x72(%edi)
imul   $0x20656874,0x20(%ebp,%eiz,2),%esi
fs
gs
jo     1f0ff <_IO_stdin_used+0x3d9f>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
imul   $0x6e6f,0x20(%ebp,%eiz,2),%bp
and    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    1f123 <_IO_stdin_used+0x3dc3>
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    1f0bf <_IO_stdin_used+0x3d5f>
or     %ebp,0x2d202c50
sub    $0x626d7973,%eax
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
sub    $0x66657270,%eax
imul   $0x63724120,0x20(%eax),%edi
push   $0x63657469
je     1f14a <_IO_stdin_used+0x3dea>
jb     1f13c <_IO_stdin_used+0x3ddc>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %dh,0x72(%eax)
imul   $0x2d09,%gs:0xa(%eax),%di
inc    %ebx
sub    $0x20,%al
sub    $0x6e6f632d,%eax
imul   $0x4150,0x3d(%edi),%sp
push   %esp
dec    %eax
and    %ah,(%eax)
and    %ah,(%eax)
push   %edx
gs
popa
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     1f175 <_IO_stdin_used+0x3e15>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dl,0x41(%eax)
push   %esp
dec    %eax
or     (%ecx),%cl
sub    $0x2d202c76,%eax
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    1f18c <_IO_stdin_used+0x3e2c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
jbe    1f19d <_IO_stdin_used+0x3e3d>
jb     1f19c <_IO_stdin_used+0x3e3c>
outsl  %ds:(%esi),(%dx)
jae    1f1a2 <_IO_stdin_used+0x3e42>
and    %ch,0x6f(%ebp)
fs or  %fs:%gs:(%ecx),%cl
sub    $0x2d202c77,%eax
sub    $0x6e726177,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x61(%edi)
jb     1f1cb <_IO_stdin_used+0x3e6b>
and    %ch,0x6e(%edi)
and    %ah,0x70(%ebp,%esi,2)
insb   (%dx),%es:(%edi)
imul   $0xa736574,0x61(%ebx),%esp
or     %ebp,0x2d202c56
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
jae    1f1ec <_IO_stdin_used+0x3e8c>
outsl  %ds:(%esi),(%dx)
ja     1f1a7 <_IO_stdin_used+0x3e47>
jbe    1f1ee <_IO_stdin_used+0x3e8e>
jb     1f1fe <_IO_stdin_used+0x3e9e>
imul   $0x682d090a,0x6e(%edi),%ebp
sub    $0x20,%al
sub    $0x6c65682d,%eax
jo     1f1bb <_IO_stdin_used+0x3e5b>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    1f20f <_IO_stdin_used+0x3eaf>
outsl  %ds:(%esi),(%dx)
ja     1f1ca <_IO_stdin_used+0x3e6a>
je     1f214 <_IO_stdin_used+0x3eb4>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%edx),%cl
push   %esp
push   $0x6f662065
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     1f229 <_IO_stdin_used+0x3ec9>
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%bx)
je     1f230 <_IO_stdin_used+0x3ed0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    1f1eb <_IO_stdin_used+0x3e8b>
popa
jb     1f233 <_IO_stdin_used+0x3ed3>
and    %dh,0x73(%ebp)
gs
data16
jne    1f241 <_IO_stdin_used+0x3ee1>
and    %ah,0x6f(%esi)
jb     1f1fa <_IO_stdin_used+0x3e9a>
jo     1f241 <_IO_stdin_used+0x3ee1>
outsl  %ds:(%esi),(%dx)
jo     1f24b <_IO_stdin_used+0x3eeb>
and    %ch,%gs:0x61(%ebp)
outsb  %ds:(%esi),(%dx)
popa
imul   $0x73696420,0x67(%bp),%ebp
je     1f261 <_IO_stdin_used+0x3f01>
imul   $0x6e6f6974,0x75(%edx),%esp
jae    1f232 <_IO_stdin_used+0x3ed2>
or     (%ecx),%cl
sub    $0x2d202c62,%eax
sub    $0x65736162,%eax
imul   $0x20524944,%fs:0x3d(%edx),%esi
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %ah,%gs:0x6e(%ecx)
and    %ch,0x6d(%ecx)
popa
and    %ch,%gs:0x66(%bx)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1f292 <_IO_stdin_used+0x3f32>
and    %dh,%gs:0x65(%edx,%esi,2)
gs or  %cs:%gs:(%ecx),%cl
sub    $0x2d202c46,%eax
sub    $0x656c6966,%eax
jae    1f2b4 <_IO_stdin_used+0x3f54>
insl   (%dx),%es:(%edi)
jae    1f27b <_IO_stdin_used+0x3f1b>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %ah,(%eax)
push   %ebp
jae    1f2ac <_IO_stdin_used+0x3f4c>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx)
jae    1f2c9 <_IO_stdin_used+0x3f69>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
or     (%ecx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x75(%ebx)
jb     1f2ec <_IO_stdin_used+0x3f8c>
outsb  %gs:(%esi),(%dx)
je     1f29e <_IO_stdin_used+0x3f3e>
imul   $0x6e,0x72(%ebp),%esp
gs
insb   (%dx),%es:(%edi)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1f2bb <_IO_stdin_used+0x3f5b>
or     (%ecx),%cl
sub    $0x2d202c45,%eax
sub    $0x766d7973,%eax
gs
jb     1f30f <_IO_stdin_used+0x3faf>
cmp    $0x454c4946,%eax
and    %ah,(%eax)
and    %dl,0x73(%ebp)
and    %cl,%gs:0x6f(%ebp)
fs
jne    1f319 <_IO_stdin_used+0x3fb9>
gs
jae,pn 1f32a <_IO_stdin_used+0x3fca>
insl   (%dx),%es:(%edi)
jbe    1f319 <_IO_stdin_used+0x3fb9>
jb     1f329 <_IO_stdin_used+0x3fc9>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x65(%eax)
arpl   %bp,0xa(%ebx)
or     %esp,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    1f356 <_IO_stdin_used+0x3ff6>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %dh,0x65(%esi)
jb     1f359 <_IO_stdin_used+0x3ff9>
imul   $0xa2e73,0x6e(%edi),%ebp
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    1f360 <_IO_stdin_used+0x4000>
and    %ch,%fs:0x6f(%esi)
je     1f31a <_IO_stdin_used+0x3fba>
outsl  %ds:(%esi),(%dx)
jo     1f362 <_IO_stdin_used+0x4002>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    1f329 <_IO_stdin_used+0x3fc9>
and    $0x25203a73,%eax
insl   (%dx),%es:(%edi)
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    1f384 <_IO_stdin_used+0x4024>
and    %ch,%fs:0x6f(%esi)
je     1f33e <_IO_stdin_used+0x3fde>
data16
jae    1f395 <_IO_stdin_used+0x4035>
popa
je     1f385 <_IO_stdin_used+0x4025>
je     1f34e <_IO_stdin_used+0x3fee>
and    $0x6d202c73,%eax
outsl  %ds:(%esi),(%dx)
fs
jne    1f39b <_IO_stdin_used+0x403b>
gs
jae    1f360 <_IO_stdin_used+0x4000>
fs
gs
jo     1f35f <_IO_stdin_used+0x3fff>
cmp    (%eax),%ah
and    $0x25000a6d,%eax
jae    1f36e <_IO_stdin_used+0x400e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1f3b0 <_IO_stdin_used+0x4050>
gs
jae    1f375 <_IO_stdin_used+0x4015>
fs
gs
jo     1f36b <_IO_stdin_used+0x400b>
imul   $0x74207075,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx,%eiz,2)
and    %ecx,%gs:(%edx)
add    %al,(%eax)
and    $0x6f6d2f73,%eax
fs
jne    1f3d0 <_IO_stdin_used+0x4070>
gs
jae    1f395 <_IO_stdin_used+0x4035>
fs
gs
jo     1f38b <_IO_stdin_used+0x402b>
imul   $0x6474756f,0x20(%ebx),%esi
popa
je     1f3da <_IO_stdin_used+0x407a>
fs
sub    $0x20,%al
outsl  %fs:(%esi),(%dx)
and    %ch,0xa61
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     1f3b1 <_IO_stdin_used+0x4051>
and    0x202c2273,%ah
jnp    1f3df <_IO_stdin_used+0x407f>
push   %ebp
dec    %esp
dec    %esp
jge    1f3bf <_IO_stdin_used+0x405f>
and    %ah,0x61(%esi)
imul   $0x6d25203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
add    %ah,0x75253a73
and    %cl,0x6e(%ecx)
jbe    1f40f <_IO_stdin_used+0x40af>
insb   (%dx),%es:(%edi)
imul   $0x6f626d79,0x73(%eax,%eiz,1),%esp
insb   (%dx),%es:(%edi)
and    %dh,0x65(%esi)
jb     1f430 <_IO_stdin_used+0x40d0>
imul   $0x3a732520,0x6e(%edi),%ebp
and    %ah,0xa6d
add    %al,(%eax)
jne    1f43c <_IO_stdin_used+0x40dc>
jae    1f445 <_IO_stdin_used+0x40e5>
jo     1f442 <_IO_stdin_used+0x40e2>
outsl  %ds:(%esi),(%dx)
jb     1f449 <_IO_stdin_used+0x40e9>
gs and %ah,%fs:%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%ebp)
fs and %ah,%fs:%gs:0x25203a73
and    0xa(%eax),%edi
add    %al,(%eax)
inc    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x66(%ebx)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
gs
jae    1f41a <_IO_stdin_used+0x40ba>
outsb  %ds:(%esi),(%dx)
gs gs and %ch,%fs:%gs:(%esi)
arpl   %bp,0x6e(%edi)
data16
cmp    (%eax),%ah
and    $0x73252f73,%eax
or     (%eax),%al
add    %al,(%eax)
add    %al,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x736e6920,0x73(%ebp),%esp
imul   $0x65726964,0x20(%ebp,%eiz,2),%esp
arpl   %si,0x72(%edi,%ebp,2)
imul   $0x65726120,0x73(%ebp),%esp
and    %ch,0x6f(%esi)
je     1f457 <_IO_stdin_used+0x40f7>
jae    1f4ae <_IO_stdin_used+0x414e>
jo     1f4ab <_IO_stdin_used+0x414b>
outsl  %ds:(%esi),(%dx)
jb     1f4b2 <_IO_stdin_used+0x4152>
gs cmp %fs:%gs:(%eax),%ah
and    $0x73252f73,%eax
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x61(%eax)
jb     1f4c3 <_IO_stdin_used+0x4163>
gs and %ah,%fs:%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     1f4c7 <_IO_stdin_used+0x4167>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    1f487 <_IO_stdin_used+0x4127>
data16
jb     1f4d9 <_IO_stdin_used+0x4179>
insl   (%dx),%es:(%edi)
and    %ah,0x25000a73
jae    1f4ad <_IO_stdin_used+0x414d>
and    $0x6f203a75,%eax
jbe    1f4df <_IO_stdin_used+0x417f>
jb     1f4ee <_IO_stdin_used+0x418e>
imul   $0x6e72656b,0x20(%ebp,%eiz,2),%esp
gs
insb   (%dx),%es:(%edi)
and    %ah,0x64(%ecx,%ebp,2)
and    %ch,0x6f(%esi)
je     1f4af <_IO_stdin_used+0x414f>
insl   (%dx),%es:(%edi)
popa
je     1f4f6 <_IO_stdin_used+0x4196>
push   $0xa732520
add    %al,(%eax)
add    %al,(%eax)
and    $0x75253a73,%eax
cmp    (%eax),%ah
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f6e2073
je     1f4d2 <_IO_stdin_used+0x4172>
imul   $0x656d656c,0x70(%ebp),%ebp
outsb  %ds:(%esi),(%dx)
je     1f521 <_IO_stdin_used+0x41c1>
and    %bh,%fs:0x65(%ecx)
je     1f4cc <_IO_stdin_used+0x416c>
add    %al,(%eax)
and    $0x75253a73,%eax
cmp    (%eax),%ah
imul   $0x6e69726f,0x6e(%edi),%esp
and    %ah,0x61(%bp,%si)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x74(%ebx)
popa
jb     1f556 <_IO_stdin_used+0x41f6>
imul   $0x74697720,0x67(%esi),%ebp
push   $0x73252720
daa
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x75253a73
and    %ah,0x6f(%ebx)
jb     1f570 <_IO_stdin_used+0x4210>
jne    1f570 <_IO_stdin_used+0x4210>
je     1f567 <_IO_stdin_used+0x4207>
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %ch,%gs:0x69(%ebp)
jae    1f580 <_IO_stdin_used+0x4220>
gs
jae    1f530 <_IO_stdin_used+0x41d0>
daa
pop    %esp
outsb  %ds:(%esi),(%dx)
daa
or     (%eax),%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs and %dh,%fs:%gs:0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1f547 <_IO_stdin_used+0x41e7>
sub    %ah,0x6d20647a
outsl  %ds:(%esi),(%dx)
fs
jne    1f59d <_IO_stdin_used+0x423d>
gs
jae    1f560 <_IO_stdin_used+0x4200>
and    %ah,0x79732075
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1f569 <_IO_stdin_used+0x4209>
or     (%eax),%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1f576 <_IO_stdin_used+0x4216>
sub    %ah,0x6d20647a
outsl  %ds:(%esi),(%dx)
fs
jne    1f5cc <_IO_stdin_used+0x426c>
gs
jae    1f58f <_IO_stdin_used+0x422f>
and    %ah,0x79732075
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1f598 <_IO_stdin_used+0x4238>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1f5ab <_IO_stdin_used+0x424b>
data16
jb     1f5fd <_IO_stdin_used+0x429d>
insl   (%dx),%es:(%edi)
and    %ah,0x25203a73
jae    1f5a1 <_IO_stdin_used+0x4241>
add    %ch,0x61(%edi,%ebp,2)
fs gs and %ah,%fs:%gs:0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1f5cc <_IO_stdin_used+0x426c>
sub    %ah,0x6d20647a
outsl  %ds:(%esi),(%dx)
fs
jne    1f622 <_IO_stdin_used+0x42c2>
gs
jae    1f5e5 <_IO_stdin_used+0x4285>
and    %ah,0x79732075
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1f5ee <_IO_stdin_used+0x428e>
or     (%eax),%al
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     1f637 <_IO_stdin_used+0x42d7>
outsb  %ds:(%esi),(%dx)
and    %ah,(%di)
jae    1f60e <_IO_stdin_used+0x42ae>
and    %ch,0x6f(%esi)
and    %ah,0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
jae    1f65e <_IO_stdin_used+0x42fe>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    1f5f5 <_IO_stdin_used+0x4295>
add    %ah,0x656e2073
gs
fs
jae    1f615 <_IO_stdin_used+0x42b5>
sub    %ah,0x75202963
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %ah,0xa73
add    %al,(%eax)
jae    1f68b <_IO_stdin_used+0x432b>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %ah,0x25282073
and    0x78(%esp,%ebp,2),%ebp
sub    %esp,(%eax)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1f693 <_IO_stdin_used+0x4333>
and    %ah,%gs:0x25282073
and    0x78(%esp,%ebp,2),%ebp
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
and    $0x69642073,%eax
jae    1f6a0 <_IO_stdin_used+0x4340>
addr16 jb 1f6a7 <_IO_stdin_used+0x4347>
gs
jae    1f665 <_IO_stdin_used+0x4305>
popa
bound  %ebp,0x75(%edi)
je     1f66b <_IO_stdin_used+0x430b>
jbe    1f6b2 <_IO_stdin_used+0x4352>
jb     1f6c2 <_IO_stdin_used+0x4362>
imul   $0x20666f20,0x6e(%edi),%ebp
jae    1f6d1 <_IO_stdin_used+0x4371>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
and    %ah,0xa73
add    %al,(%eax)
arpl   %sp,0x6c(%ecx)
arpl   %si,0x6c(%ebp)
popa
je     1f6d2 <_IO_stdin_used+0x4372>
and    %ah,0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1f69b <_IO_stdin_used+0x433b>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x72(%edi)
fs
gs
jb     1f6ee <_IO_stdin_used+0x438e>
outsb  %ds:(%esi),(%dx)
and    %ch,(%bx,%si)
and    $0x6d207568,%eax
outsl  %ds:(%esi),(%dx)
fs
jne    1f6fe <_IO_stdin_used+0x439e>
gs
jae    1f6be <_IO_stdin_used+0x435e>
or     (%eax),%al
add    %ah,0x70(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
sub    $0x646f6d3e,%eax
jne    1f711 <_IO_stdin_used+0x43b1>
gs
jae    1f6d6 <_IO_stdin_used+0x4376>
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     1f6ce <_IO_stdin_used+0x436e>
cmp    $0x20,%al
sub    %dh,(%esi)
xor    $0x29353335,%eax
add    %ah,0x6f(%esi)
jne    1f72a <_IO_stdin_used+0x43ca>
and    %ah,%fs:0x6f6d2075
fs
jne    1f732 <_IO_stdin_used+0x43d2>
gs
jae    1f6e9 <_IO_stdin_used+0x4389>
imul   $0x65706564,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
jae    1f6ff <_IO_stdin_used+0x439f>
or     (%eax),%al
arpl   %sp,0x6c(%ecx)
arpl   %si,0x6c(%ebp)
popa
je     1f74e <_IO_stdin_used+0x43ee>
and    %ah,%fs:0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1f718 <_IO_stdin_used+0x43b8>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x72(%edi)
fs
gs
jb     1f76b <_IO_stdin_used+0x440b>
outsb  %ds:(%esi),(%dx)
and    %ch,(%bx,%si)
and    $0x6f6c2075,%eax
outsl  %ds:(%esi),(%dx)
jo     1f781 <_IO_stdin_used+0x4421>
sub    $0x20,%al
and    $0x6d207568,%eax
outsl  %ds:(%esi),(%dx)
fs
jne    1f785 <_IO_stdin_used+0x4425>
gs
jae    1f745 <_IO_stdin_used+0x43e5>
or     (%eax),%al
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    1f790 <_IO_stdin_used+0x4430>
and    %ch,%fs:0x6f(%esi)
je     1f74a <_IO_stdin_used+0x43ea>
ja     1f79e <_IO_stdin_used+0x443e>
imul   $0x65646e69,0x20(%ebp,%eiz,2),%esi
js     1f756 <_IO_stdin_used+0x43f6>
daa
and    $0x203a2773,%eax
and    $0x43000a73,%eax
outsl  %ds:(%esi),(%dx)
jne    1f7b0 <_IO_stdin_used+0x4450>
and    %ch,%fs:0x6f(%esi)
je     1f76a <_IO_stdin_used+0x440a>
arpl   %si,0x65(%edx)
popa
je     1f7b5 <_IO_stdin_used+0x4455>
and    %ch,0x6e(%ecx)
fs
gs
js     1f777 <_IO_stdin_used+0x4417>
daa
and    $0x202e2773,%eax
dec    %edi
jne    1f7d4 <_IO_stdin_used+0x4474>
jo     1f7d7 <_IO_stdin_used+0x4477>
je     1f784 <_IO_stdin_used+0x4424>
imul   $0x6e757274,0x20(%ebx),%esi
arpl   %sp,0x74(%ecx)
gs cmp %fs:%gs:(%eax),%ah
and    $0xa73,%eax
add    %ah,0x6f(%ebx)
jne    1f7e8 <_IO_stdin_used+0x4488>
and    %ch,%fs:0x6f(%esi)
je     1f7a2 <_IO_stdin_used+0x4442>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%ebp)
fs
jne    1f7f9 <_IO_stdin_used+0x4499>
and    %ah,%gs:0x72(%ecx)
jb     1f7f4 <_IO_stdin_used+0x4494>
jns    1f7cf <_IO_stdin_used+0x446f>
and    %ah,0xa73
add    %ch,0x14(%eax)
(bad)
incl   -0x3f0001ea(%eax)
adc    $0xfe,%al
incl   -0x6f0001ea(%eax)
adc    $0x1680fffe,%eax
(bad)
pushl  0x15(%eax)
(bad)
lcall  *0x15(%eax)
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   0x30fffe16(%eax)
adc    $0x1680fffe,%eax
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
jmp    *%eax
adc    $0xfe,%al
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
call   *%eax
adc    $0xfe,%al
call   *(%eax)
adc    $0x1680fffe,%eax
(bad)
incl   0xfffe16(%eax)
adc    $0x1680fffe,%eax
(bad)
incl   0x48fffe16(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
lcall  *(%eax)
push   %ss
(bad)
incl   (%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
lcall  *(%eax)
push   %ss
(bad)
lcall  *(%eax)
push   %ss
(bad)
incl   -0x7f0001ea(%eax)
push   %ss
(bad)
lcall  *(%eax)
push   %ss
(bad)
push   %eax
adc    $0x15e0fffe,%eax
(bad)
jmp    *0x70(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %sp,0x6c(%ecx)
arpl   %si,0x6c(%ebp)
popa
je     1f8f5 <_IO_stdin_used+0x4595>
pop    %edi
fs
gs
jo     1f8fa <_IO_stdin_used+0x459a>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    1f89e <_IO_stdin_used+0x453e>
add    %al,(%eax)
fs
gs
jo     1f911 <_IO_stdin_used+0x45b1>
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    1f918 <_IO_stdin_used+0x45b8>
gs
pop    %edi
imul   $0x68676968,0x5f(%ebx),%esi
gs
jb     1f917 <_IO_stdin_used+0x45b7>
jo     1f92c <_IO_stdin_used+0x45cc>
imul   $0x797469,0x72(%edi),%ebp
popa
inc    %ecx
bound  %edi,(%edx)
inc    %ebx
cmp    0x3a(%ebp),%al
inc    %esi
cmp    0x75(%ebp),%ah
jno    1f941 <_IO_stdin_used+0x45e1>
jbe    1f93f <_IO_stdin_used+0x45df>
push   %eax
cmp    0x6d(%edi),%dh
push   %esi
push   $0x69756200
insb   (%dx),%es:(%edi)
je     1f90b <_IO_stdin_used+0x45ab>
imul   $0x41544146,0x0(%esi),%ebp
dec    %esp
add    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
add    %cl,0x4f(%esi)
push   %esp
dec    %ecx
inc    %ebx
inc    %ebp
add    %cl,0x4e(%ecx)
inc    %esi
dec    %edi
add    %al,0x42(%ebp,%eax,2)
push   %ebp
inc    %edi
add    %cl,0x47(%edi,%ecx,2)
sub    $0x64333025,%eax
add    %ah,0x25203a73
jae    1f951 <_IO_stdin_used+0x45f1>
and    %ah,0x64253a73
and    %ah,0x20292873
and    $0x73250073,%eax
cmp    (%eax),%ah
and    $0x25203a73,%eax
jae    1f931 <_IO_stdin_used+0x45d1>
add    %al,(%eax)
add    %dh,-0x4f0001c8(%eax)
cmp    %bh,%dh
jmp    *-0x3f0001c8(%eax)
aaa
(bad)
jmp    *0x38(%eax)
(bad)
pushl  0x38(%eax)
(bad)
incl   -0x6f0001c8(%eax)
cmp    %bh,%dh
push   %eax
cmp    %dh,%bh
push   %eax
cmp    %dh,%bh
(bad)
call   7101f79b <_end+0x70ff8597>
cmp    %dh,%bh
dec    %eax
cmp    %dh,%bh
call   *%eax
cmp    %dh,%bh
(bad)
fdivrs (%edx)
(bad)
jmp    *%eax
cmp    %dh,%bh
call   *0x73(%ebp)
popa
cmp    %gs:(%bp,%si),%cl
or     %esp,0x74732073
popa
je     1f9ed <_IO_stdin_used+0x468d>
arpl   %bp,0x65646f6e
jae    1f9ac <_IO_stdin_used+0x464c>
pop    %ebx
outsl  %ds:(%esi),(%dx)
jo     1fa04 <_IO_stdin_used+0x46a4>
imul   $0xa0a5d73,0x6e(%edi),%ebp
imul   $0x64,0x6f(%ebp),%ebp
and    %dh,0x74(%ebx)
popa
je     1fa0a <_IO_stdin_used+0x46aa>
arpl   %bp,0x65646f6e
jae    1f9c9 <_IO_stdin_used+0x4669>
outsl  %ds:(%esi),(%dx)
jne    1fa20 <_IO_stdin_used+0x46c0>
jo     1fa23 <_IO_stdin_used+0x46c3>
je     1fa23 <_IO_stdin_used+0x46c3>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x74(%ebx)
popa
je     1fa23 <_IO_stdin_used+0x46c3>
arpl   %bp,0x65646f6e
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     1fa34 <_IO_stdin_used+0x46d4>
popa
je     1fa33 <_IO_stdin_used+0x46d3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     1fa4a <_IO_stdin_used+0x46ea>
outsb  %gs:(%esi),(%dx)
je     1fa48 <_IO_stdin_used+0x46e8>
jns    1f9fe <_IO_stdin_used+0x469e>
jb     1fa55 <_IO_stdin_used+0x46f5>
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x72656b20,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
or     %cs:(%edx),%cl
dec    %edi
jo     1fa66 <_IO_stdin_used+0x4706>
imul   $0x90a3a73,0x6e(%edi),%ebp
sub    $0x2d202c66,%eax
sub    $0x6d726f66,%eax
popa
je     1fa43 <_IO_stdin_used+0x46e3>
inc    %esi
dec    %edi
push   %edx
dec    %ebp
inc    %ecx
push   %esp
and    %ah,(%eax)
arpl   %bp,0x6f(%eax)
outsl  %ds:(%esi),(%dx)
jae    1fa79 <_IO_stdin_used+0x4719>
and    %ah,0x6f(%esi)
jb     1fa86 <_IO_stdin_used+0x4726>
popa
je     1fa3c <_IO_stdin_used+0x46dc>
je     1fa8d <_IO_stdin_used+0x472d>
and    %dh,0x73(%ebp)
cmp    %gs:(%eax),%ah
jae    1fa8b <_IO_stdin_used+0x472b>
and    %ah,%gs:(%edx)
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     1fa9a <_IO_stdin_used+0x473a>
popa
je     1faa3 <_IO_stdin_used+0x4743>
and    (%edx),%cl
or     %ebp,0x2d202c6f
sub    $0x7074756f,%eax
jne    1fab3 <_IO_stdin_used+0x4753>
cmp    $0x454c4946,%eax
and    %ah,(%eax)
and    %ah,(%eax)
ja     1fabc <_IO_stdin_used+0x475c>
imul   $0x7074756f,0x20(%ebp,%eiz,2),%esi
jne    1fac8 <_IO_stdin_used+0x4768>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2d09,0xa(%ebp,%eiz,2),%bp
push   $0x2d2d202c
push   $0x20706c65
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    1fadd <_IO_stdin_used+0x477d>
outsl  %ds:(%esi),(%dx)
ja     1fa98 <_IO_stdin_used+0x4738>
je     1fae2 <_IO_stdin_used+0x4782>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%edx),%cl
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     1faf4 <_IO_stdin_used+0x4794>
popa
je     1fafd <_IO_stdin_used+0x479d>
cmp    (%edx),%cl
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs
jne    1fb01 <_IO_stdin_used+0x47a1>
cmp    %gs:(%eax),%ah
and    $0x44090a73,%eax
gs
jbe    1fb09 <_IO_stdin_used+0x47a9>
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs cmp %fs:%gs:(%eax),%ah
das
fs
gs
jbe    1fadd <_IO_stdin_used+0x477d>
and    $0x9090a73,%eax
push   %esp
jns    1fb26 <_IO_stdin_used+0x47c6>
cmp    %gs:(%eax),%ah
and    $0x65642073,%eax
jbe    1fb29 <_IO_stdin_used+0x47c9>
arpl   %sp,0xa(%ebp)
or     %ecx,(%ecx)
dec    %ebp
popa
push   $0x6f
jb     1fb05 <_IO_stdin_used+0x47a5>
and    %ah,0x9090a75
dec    %ebp
imul   $0x25203a72,0x6f(%esi),%ebp
jne    1fae5 <_IO_stdin_used+0x4785>
add    %dl,0x6e(%ebp)
gs
js     1fb51 <_IO_stdin_used+0x47f1>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
imul   $0x74706f20,0x65(%esi),%ebp
imul   $0x63252720,0x6e(%edi),%ebp
daa
or     %cs:(%eax),%al
add    %al,(%eax)
add    %ch,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x75646f6d,0x2f(%edx),%esp
insb   (%dx),%es:(%edi)
gs
jae    1fb40 <_IO_stdin_used+0x47e0>
and    $0x6f6d2f73,%eax
fs
jne    1fb85 <_IO_stdin_used+0x4825>
gs
jae    1fb4a <_IO_stdin_used+0x47ea>
fs
gs
jbe    1fb8e <_IO_stdin_used+0x482e>
popa
insl   (%dx),%es:(%edi)
add    %dl,%gs:0x61(%edi)
jb     1fb96 <_IO_stdin_used+0x4836>
imul   $0x6c2f203a,0x67(%esi),%ebp
imul   $0x75646f6d,0x2f(%edx),%esp
insb   (%dx),%es:(%edi)
gs
jae    1fb69 <_IO_stdin_used+0x4809>
and    $0x6f6d2f73,%eax
fs
jne    1fbae <_IO_stdin_used+0x484e>
gs
jae    1fb73 <_IO_stdin_used+0x4813>
fs
gs
jbe    1fbb7 <_IO_stdin_used+0x4857>
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%esi)
je     1fb71 <_IO_stdin_used+0x4811>
outsw  %ds:(%esi),(%dx)
jne    1fbc3 <_IO_stdin_used+0x4863>
and    %ch,%fs:0x6e676920
outsl  %ds:(%esi),(%dx)
jb     1fbc8 <_IO_stdin_used+0x4868>
outsb  %ds:(%esi),(%dx)
or     (%bx,%si),%al
add    %al,0x72(%ebp)
jb     1fbd7 <_IO_stdin_used+0x4877>
jb     1fba4 <_IO_stdin_used+0x4844>
and    %ah,0x6f(%ebx)
jne    1fbdb <_IO_stdin_used+0x487b>
and    %ch,%fs:0x6f(%esi)
je     1fb95 <_IO_stdin_used+0x4835>
outsl  %ds:(%esi),(%dx)
jo     1fbdd <_IO_stdin_used+0x487d>
outsb  %ds:(%esi),(%dx)
and    %ch,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x75646f6d,0x2f(%edx),%esp
insb   (%dx),%es:(%edi)
gs
jae    1fbb6 <_IO_stdin_used+0x4856>
and    $0x6f6d2f73,%eax
fs
jne    1fbfb <_IO_stdin_used+0x489b>
gs
jae    1fbc0 <_IO_stdin_used+0x4860>
fs
gs
jbe    1fc04 <_IO_stdin_used+0x48a4>
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0xa6d2520
add    %al,0x72(%ebp)
jb     1fc13 <_IO_stdin_used+0x48b3>
jb     1fbe0 <_IO_stdin_used+0x4880>
and    %ah,0x6f(%ebx)
jne    1fc17 <_IO_stdin_used+0x48b7>
and    %ch,%fs:0x6f(%esi)
je     1fbd1 <_IO_stdin_used+0x4871>
arpl   %si,0x65(%edx)
popa
je     1fc1c <_IO_stdin_used+0x48bc>
and    %dh,0x61(%eax)
jb     1fc21 <_IO_stdin_used+0x48c1>
outsb  %ds:(%esi),(%dx)
je     1fbdf <_IO_stdin_used+0x487f>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    1fbe9 <_IO_stdin_used+0x4889>
outsw  %ds:(%esi),(%dx)
jb     1fbed <_IO_stdin_used+0x488d>
and    $0x202d2073,%eax
and    $0xa2e6d,%eax
add    %al,0x72(%ebp)
jb     1fc4b <_IO_stdin_used+0x48eb>
jb     1fc18 <_IO_stdin_used+0x48b8>
and    %ah,0x6f(%ebx)
jne    1fc4f <_IO_stdin_used+0x48ef>
and    %ch,%fs:0x6f(%esi)
je     1fc09 <_IO_stdin_used+0x48a9>
arpl   %si,0x65(%edx)
popa
je     1fc54 <_IO_stdin_used+0x48f4>
and    %ah,0x202d2073
and    $0xa6d,%eax
add    %al,(%eax)
inc    %ebp
jb     1fc71 <_IO_stdin_used+0x4911>
outsl  %ds:(%esi),(%dx)
jb     1fc3c <_IO_stdin_used+0x48dc>
and    %ch,0x6e(%ecx)
jbe    1fc68 <_IO_stdin_used+0x4908>
insb   (%dx),%es:(%edi)
imul   $0x616e7665,0x64(%eax,%eiz,1),%esp
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6e(%ebp)
je     1fc89 <_IO_stdin_used+0x4929>
jns    1fc53 <_IO_stdin_used+0x48f3>
and    %ah,0x73
add    %ch,0x75(%edi)
je     1fc94 <_IO_stdin_used+0x4934>
jne    1fc9a <_IO_stdin_used+0x493a>
jae    1fc48 <_IO_stdin_used+0x48e8>
je     1fc92 <_IO_stdin_used+0x4932>
and    %dh,%gs:0x74(%ebx)
popa
je     1fc9a <_IO_stdin_used+0x493a>
arpl   %bp,0x65646f6e
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     1fcab <_IO_stdin_used+0x494b>
popa
je     1fcaa <_IO_stdin_used+0x494a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
jae    1fcbc <_IO_stdin_used+0x495c>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x69(%edi)
je     1fcba <_IO_stdin_used+0x495a>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%ebx)
jb     1fccd <_IO_stdin_used+0x496d>
outsb  %gs:(%esi),(%dx)
je     1fccb <_IO_stdin_used+0x496b>
jns    1fc81 <_IO_stdin_used+0x4921>
jb     1fcd8 <_IO_stdin_used+0x4978>
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x72656b20,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
gs
insb   (%dx),%es:(%edi)
add    %dh,0x65(%eax,%ebp,2)
and    %dh,0x70(%ebp,%ebp,2)
imul   $0x642e,0x73(%ebp,%eiz,2),%bp
sub    %dh,0x6f662029
jb     1fcf3 <_IO_stdin_used+0x4993>
popa
je     1fca9 <_IO_stdin_used+0x4949>
jne    1fcfe <_IO_stdin_used+0x499e>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x79(%ebx)
jae    1fd09 <_IO_stdin_used+0x49a9>
gs
insl   (%dx),%es:(%edi)
fs
sub    $0x66706d74,%eax
imul   $0x2800002e,0x73(%ebp,%eiz,2),%ebp
fs
gs
popaw
jne    1fd17 <_IO_stdin_used+0x49b7>
je     1fcd6 <_IO_stdin_used+0x4976>
and    %ah,0x20(%ecx)
push   $0x6e616d75
and    %dh,0x65(%edx)
popa
fs
popa
bound  %ebp,0x20(%ebp,%eiz,2)
outsw  %ds:(%esi),(%dx)
jb     1fd30 <_IO_stdin_used+0x49d0>
popa
je     1fcf4 <_IO_stdin_used+0x4994>
and    %al,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     1fcee <_IO_stdin_used+0x498e>
jo     1fd31 <_IO_stdin_used+0x49d1>
jb     1fd45 <_IO_stdin_used+0x49e5>
gs add %cl,%cs:%gs:(%ecx)
and    $0x7332312d,%eax
and    %ah,0x63000a73
push   $0x63617261
je     1fd4d <_IO_stdin_used+0x49ed>
jb     1fcea <_IO_stdin_used+0x498a>
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x25,(%eax),%eax
arpl   %sp,(%eax)
das
fs
gs
jbe    1fd27 <_IO_stdin_used+0x49c7>
and    $0x36302073,%eax
xor    %dh,(%eax)
and    %ch,0x2d202d20
and    %ah,0x75253a75
or     (%eax),%al
and    %ch,%fs:(%edi)
fs
gs
jbe    1fd43 <_IO_stdin_used+0x49e3>
and    $0x20732a2e,%eax
xor    %dh,(%edi)
xor    $0x202d2035,%eax
sub    $0xa2d20,%eax
das
fs
gs
jbe    1fd59 <_IO_stdin_used+0x49f9>
jae    1fda0 <_IO_stdin_used+0x4a40>
outsl  %fs:(%esi),(%dx)
jne    1fda4 <_IO_stdin_used+0x4a44>
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     1fdaa <_IO_stdin_used+0x4a4a>
popa
je     1fd7a <_IO_stdin_used+0x4a1a>
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %al,0x72(%ebp)
jb     1fdbb <_IO_stdin_used+0x4a5b>
jb     1fd88 <_IO_stdin_used+0x4a28>
and    %dh,0x6e(%ebp)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%esi)
imul   $0x72000a21,0x64(%ebp,%eiz,2),%ebp
add    %dh,%gs:0x65(%edi)
add    %ah,0x73252073
and    %ah,0x3a752563
and    $0x74730075,%eax
popa
je     1fde0 <_IO_stdin_used+0x4a80>
arpl   %bp,0x65646f6e
jae    1fd7f <_IO_stdin_used+0x4a1f>
outsl  %ds:(%esi),(%dx)
jne    1fdf6 <_IO_stdin_used+0x4a96>
jo     1fdf9 <_IO_stdin_used+0x4a99>
je     1fd86 <_IO_stdin_used+0x4a26>
je     1fdf0 <_IO_stdin_used+0x4a90>
and    %ch,%gs:0x6f(%ebp)
fs
jne    1fdfb <_IO_stdin_used+0x4a9b>
gs
jae    1fdc0 <_IO_stdin_used+0x4a60>
fs
gs
jbe    1fe04 <_IO_stdin_used+0x4aa4>
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     1fe0b <_IO_stdin_used+0x4aab>
popa
je     1fdcf <_IO_stdin_used+0x4a6f>
add    %dh,0x70(%ebp,%ebp,2)
imul   $0x6800,0x73(%ebp,%eiz,2),%bp
jne    1fe1b <_IO_stdin_used+0x4abb>
popa
outsb  %ds:(%esi),(%dx)
add    %ch,0x3a(%edi)
data16
cmp    0x0(%eax),%ch
cs
cs
das
insb   (%dx),%es:(%edi)
imul   $0x2f646f6d,0x6b(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d646f6d,0x6b(%edx),%esp
popa
jb     1fe3f <_IO_stdin_used+0x4adf>
popa
jns    1fdfe <_IO_stdin_used+0x4a9e>
arpl   %ax,(%eax)
popa
jb     1fe47 <_IO_stdin_used+0x4ae7>
popa
jns    1fe05 <_IO_stdin_used+0x4aa5>
jae,pt 1fe4f <_IO_stdin_used+0x4aef>
gs
jo     1fdfe <_IO_stdin_used+0x4a9e>
and    %dh,%ds:(%eax)
add    %ah,0x72(%ecx)
jb     1fe47 <_IO_stdin_used+0x4ae7>
jns    1fe47 <_IO_stdin_used+0x4ae7>
popa
jo     1fe5b <_IO_stdin_used+0x4afb>
outsb  %gs:(%esi),(%dx)
add    %ah,%fs:0x72(%ecx)
jb     1fe54 <_IO_stdin_used+0x4af4>
jns    1fe54 <_IO_stdin_used+0x4af4>
imul   $0x6b2e0074,0x69(%esi),%ebp
outsl  %ds:(%esi),(%dx)
add    %al,0x4d(%ebp)
inc    %ebp
push   %edx
inc    %edi
inc    %ebp
dec    %esi
inc    %ebx
pop    %ecx
add    %al,0x4c(%ecx)
inc    %ebp
push   %edx
push   %esp
add    %al,0x52(%ebx)
dec    %ecx
push   %esp
dec    %ecx
inc    %ebx
inc    %ecx
dec    %esp
add    %cl,0x25(%edx,%edi,1)
add    %ch,%fs:0x62(%ecx,%ebp,2)
imul   $0x64,0x6f(%ebp),%ebp
cmp    (%eax),%ah
and    $0x73252073,%eax
cmp    0x73252064,%ah
cmp    (%eax),%ah
add    %ch,(%edi)
insb   (%dx),%es:(%edi)
imul   $0x75646f6d,0x2f(%edx),%esp
insb   (%dx),%es:(%edi)
gs
jae    1fe40 <_IO_stdin_used+0x4ae0>
and    $0x73252f73,%eax
add    %ch,(%esi)
cs
das
insb   (%dx),%es:(%edi)
imul   $0x2f646f6d,0x6b(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2e646f6d,0x6b(%edx),%esp
arpl   %ax,(%eax)
and    $0x73252f73,%eax
bound  %ebp,%cs:0x6e(%ecx)
add    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
cmp    $0x6e207325,%eax
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0xa7325,%eax
dec    %ebx
dec    %ebp
dec    %edi
inc    %esp
pop    %edi
dec    %esp
dec    %edi
inc    %edi
add    %ah,0x72(%ebp)
jb     1fe83 <_IO_stdin_used+0x4b23>
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %ah,0x6f(%ebx)
jne    1fef9 <_IO_stdin_used+0x4b99>
and    %ch,%fs:0x6f(%esi)
je     1feb3 <_IO_stdin_used+0x4b53>
arpl   %si,0x65(%edx)
popa
je     1fefe <_IO_stdin_used+0x4b9e>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6300,0xa(%edi),%sp
je     1ff1d <_IO_stdin_used+0x4bbd>
and    %ah,0x72632070
gs
popa
je     1ff14 <_IO_stdin_used+0x4bb4>
or     %fs:(%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jo     1ff2a <_IO_stdin_used+0x4bca>
imul   $0x3d797469,0x72(%edi),%ebp
and    $0x61000a64,%eax
fs and %ah,%fs:0x656b2070
jns    1ff0b <_IO_stdin_used+0x4bab>
daa
and    $0xa2773,%eax
fs
gs
insb   (%dx),%es:(%edi)
and    %ah,0x656b2070
jns    1ff1c <_IO_stdin_used+0x4bbc>
daa
and    $0xa2773,%eax
jae    1ff60 <_IO_stdin_used+0x4c00>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
cmp    (%eax),%al
sub    0x73(%ecx,%ebp,2),%ch
je     1ff13 <_IO_stdin_used+0x4bb3>
cmp    $0x2828203d,%eax
jbe    1ff69 <_IO_stdin_used+0x4c09>
imul   $0x293029,0x2a(%eax,%eiz,1),%esp
imul   $0x7325,0x3d(%ebp,%eiz,2),%bp
and    %ch,0x6f(%ebp)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0xa7325,%eax
arpl   %bp,0x6e(%edi)
je     1ff80 <_IO_stdin_used+0x4c20>
js     1ff91 <_IO_stdin_used+0x4c31>
and    %ah,0x65722070
insb   (%dx),%es:(%edi)
gs
popa
jae    1ff8d <_IO_stdin_used+0x4c2d>
or     %fs:(%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
fs
gs
js     1ff51 <_IO_stdin_used+0x4bf1>
and    $0x6c612073,%eax
jb     1ff9d <_IO_stdin_used+0x4c3d>
popa
fs
jns    1ff5c <_IO_stdin_used+0x4bfc>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs or %fs:%gs:(%eax),%al
jne    1ffb9 <_IO_stdin_used+0x4c59>
and    %ch,%gs:0x6d(%ebp)
popa
jo     1ffb2 <_IO_stdin_used+0x4c52>
and    %ch,%fs:0x6e(%ecx)
fs
gs
js     1ff75 <_IO_stdin_used+0x4c15>
daa
and    $0xa2773,%eax
imul   $0x7325,0x3d(%ebp,%eiz,2),%bp
or     (%eax),%al
das
gs
je     1ffcb <_IO_stdin_used+0x4c6b>
das
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jo     1ffe0 <_IO_stdin_used+0x4c80>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x2e(%ebp)
add    %ch,%fs:(%edi)
jb     1ffec <_IO_stdin_used+0x4c8c>
outsb  %ds:(%esi),(%dx)
das
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jo     1fff0 <_IO_stdin_used+0x4c90>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x2e(%ebp)
add    %ch,%fs:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x70646f6d,0x2f(%edx),%esp
jb     1fffe <_IO_stdin_used+0x4c9e>
bound  %esp,0x2e(%ebp)
add    %ah,%fs:0x6c(%ecx)
imul   $0x30000020,0x73(%ecx),%esp
pop    %eax
(bad)
(bad)
js     1fff9 <_IO_stdin_used+0x4c99>
(bad)
(bad)
call   f101fe00 <_end+0xf0ff8bfc>
push   %edi
(bad)
(bad)
clc
push   %edi
(bad)
incl   (%eax)
pop    %eax
(bad)
call   *(%eax)
pop    %eax
(bad)
jmp    *(%eax)
pop    %eax
(bad)
jmp    *0x75(%ebx)
jae    20034 <_IO_stdin_used+0x4cd4>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x67(%edi,%ebp,2)
imul   $0x6e756620,0x67(%bp),%ebp
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65722070
imul   $0x64657265,0x74(%bp,%di),%esi
or     (%eax),%al
add    %dh,0x73(%ebp)
and    %ch,%gs:0x6d(%ebp)
popa
jo     20052 <_IO_stdin_used+0x4cf2>
and    %ch,%fs:0x6e(%ecx)
fs
gs
js     20015 <_IO_stdin_used+0x4cb5>
daa
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     2001e <_IO_stdin_used+0x4cbe>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0xa7325,%eax
add    %al,0x6f(%ebx)
jne    20078 <_IO_stdin_used+0x4d18>
and    %ch,%fs:0x6f(%esi)
je     20032 <_IO_stdin_used+0x4cd2>
arpl   %si,0x65(%edx)
popa
je     2007d <_IO_stdin_used+0x4d1d>
and    %ch,0x6f(%ebp)
fs
jne    2008a <_IO_stdin_used+0x4d2a>
and    %ah,%gs:0x6f(%esi)
jb     20044 <_IO_stdin_used+0x4ce4>
popa
insb   (%dx),%es:(%edi)
imul   $0x2073253d,0x73(%ecx),%esp
jb     20094 <_IO_stdin_used+0x4d34>
popa
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x203a7325,%eax
and    $0xa73,%eax
add    %ah,0x6f(%ebx)
jne    200b0 <_IO_stdin_used+0x4d50>
and    %ch,%fs:0x6f(%esi)
je     2006a <_IO_stdin_used+0x4d0a>
arpl   %si,0x65(%edx)
popa
je     200b5 <_IO_stdin_used+0x4d55>
and    %ah,0x79(%edx)
sub    $0x656d616e,%eax
and    %ch,0x61(%eax)
jae    200c5 <_IO_stdin_used+0x4d65>
or     (%eax),%al
add    %ah,0x65(%edi)
je     20084 <_IO_stdin_used+0x4d24>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    200d5 <_IO_stdin_used+0x4d75>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
cmp    $0x27732527,%eax
and    %ah,0x6f(%esi)
jne    200e7 <_IO_stdin_used+0x4d87>
fs
cmp    $0xa7025,%eax
add    %dh,0x73(%ebp)
and    %ch,%gs:0x6d(%ebp)
popa
jo     200ee <_IO_stdin_used+0x4d8e>
and    %ch,%fs:0x6e(%ecx)
fs
gs
js     200b1 <_IO_stdin_used+0x4d51>
daa
and    $0x6d202773,%eax
outsl  %ds:(%esi),(%dx)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0xa7325,%eax
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     200ce <_IO_stdin_used+0x4d6e>
outsl  %ds:(%esi),(%dx)
jo     20116 <_IO_stdin_used+0x4db6>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
imul   $0x6966206e,0x69(%esp,%esi,2),%ebp
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0xa2773,%eax
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    20138 <_IO_stdin_used+0x4dd8>
and    %ch,%fs:0x6f(%esi)
je     200f2 <_IO_stdin_used+0x4d92>
arpl   %si,0x65(%edx)
popa
je     2013d <_IO_stdin_used+0x4ddd>
and    %ch,0x6f(%ebp)
fs
jne    2014a <_IO_stdin_used+0x4dea>
and    %ah,%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    200fb <_IO_stdin_used+0x4d9b>
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    20164 <_IO_stdin_used+0x4e04>
and    %ch,%fs:0x6f(%esi)
je     2011e <_IO_stdin_used+0x4dbe>
outsl  %ds:(%esi),(%dx)
jo     20166 <_IO_stdin_used+0x4e06>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
fs
fs
gs
jo     2012a <_IO_stdin_used+0x4dca>
imul   $0x2527,0x20(%ebp,%eiz,2),%bp
jae    2013a <_IO_stdin_used+0x4dda>
or     (%eax),%al
add    %al,(%eax)
add    %al,0x6f(%ebx)
jne    20188 <_IO_stdin_used+0x4e28>
and    %ch,%fs:0x6f(%esi)
je     20142 <_IO_stdin_used+0x4de2>
arpl   %si,0x65(%edx)
popa
je     2018d <_IO_stdin_used+0x4e2d>
and    %ch,0x6f(%ebp)
fs
jne    2019a <_IO_stdin_used+0x4e3a>
and    %ah,%gs:0x6f(%esi)
jb     20154 <_IO_stdin_used+0x4df4>
popa
insb   (%dx),%es:(%edi)
imul   $0x2073253d,0x73(%ecx),%esp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x203a7325,%eax
and    $0x6b000a73,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
fs
jne    201c2 <_IO_stdin_used+0x4e62>
jo     201b6 <_IO_stdin_used+0x4e56>
imul   $0x6b007865,0x64(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs
pop    %edi
jb     201ce <_IO_stdin_used+0x4e6e>
jae    201da <_IO_stdin_used+0x4e7a>
jne    201df <_IO_stdin_used+0x4e7f>
arpl   %sp,0x73(%ebp)
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
popa
insb   (%dx),%es:(%edi)
imul   $0x6f72665f,0x73(%ecx),%esp
insl   (%dx),%es:(%edi)
pop    %edi
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    201a0 <_IO_stdin_used+0x4e40>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
popa
insb   (%dx),%es:(%edi)
imul   $0x6f72665f,0x73(%ecx),%esp
insl   (%dx),%es:(%edi)
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x0,0x0(%edi),%sp
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
popa
insb   (%dx),%es:(%edi)
imul   $0x6f72665f,0x73(%ecx),%esp
insl   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
fs
gs
jo     2023d <_IO_stdin_used+0x4edd>
imul   $0x6d6b,0x0(%ebp,%eiz,2),%bp
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jae    2024f <_IO_stdin_used+0x4eef>
popa
jb     20250 <_IO_stdin_used+0x4ef0>
push   $0x646f6d5f
fs
gs
jo     201f6 <_IO_stdin_used+0x4e96>
add    %al,(%eax)
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
popa
insb   (%dx),%es:(%edi)
imul   $0x6f72665f,0x73(%ecx),%esp
insl   (%dx),%es:(%edi)
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     20286 <_IO_stdin_used+0x4f26>
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x0,0x0(%ebp,%eiz,2),%bp
add    %al,(%eax)
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
popa
insb   (%dx),%es:(%edi)
imul   $0x6f72665f,0x73(%ecx),%esp
insl   (%dx),%es:(%edi)
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     202c6 <_IO_stdin_used+0x4f66>
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x0,0x0(%ebp,%eiz,2),%bp
add    %al,(%eax)
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x5f,0x70(%ebp),%esi
popa
insb   (%dx),%es:(%edi)
imul   $0x6f72665f,0x73(%ecx),%esp
insl   (%dx),%es:(%edi)
pop    %edi
popa
insb   (%dx),%es:(%edi)
imul   $0x6e69625f,0x73(%ecx),%esp
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jo     20317 <_IO_stdin_used+0x4fb7>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
fs
gs
insb   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20320 <_IO_stdin_used+0x4fc0>
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jo     2032c <_IO_stdin_used+0x4fcc>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
popa
fs
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20335 <_IO_stdin_used+0x4fd5>
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jo     20341 <_IO_stdin_used+0x4fe1>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     20338 <_IO_stdin_used+0x4fd8>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    2034a <_IO_stdin_used+0x4fea>
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jae    2034c <_IO_stdin_used+0x4fec>
je     20348 <_IO_stdin_used+0x4fe8>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
data16
outsb  %ds:(%esi),(%dx)
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jne    20365 <_IO_stdin_used+0x5005>
jb     2035e <_IO_stdin_used+0x4ffe>
data16
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     20304 <_IO_stdin_used+0x4fa4>
cs
cs
das
insb   (%dx),%es:(%edi)
imul   $0x2f646f6d,0x6b(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d646f6d,0x6b(%edx),%esp
arpl   %bp,0x6e(%edi)
imul   $0x63,0x2e(%edi),%sp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x27732527,%eax
and    %ah,0x6d(%ebx)
fs
cmp    $0x20732527,%eax
and    $0xa2773,%eax
outsl  %ds:(%esi),(%dx)
jne    203b1 <_IO_stdin_used+0x5051>
sub    $0x6d2d666f,%eax
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     203c0 <_IO_stdin_used+0x5060>
and    %ch,0x6f(%ebp)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0xa7325,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x27732527,%eax
and    %ch,0x70(%edi)
je     203ce <_IO_stdin_used+0x506e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    203a6 <_IO_stdin_used+0x5046>
daa
and    $0xa2773,%eax
bound  %ebp,0x63(%ecx,%eiz,2)
imul   $0x74,0x73(%ecx,%ebp,2),%ebp
cmp    $0x65706f00,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x3a297325,%fs:0x28(%edx),%esi
and    %ah,0x2f000a6d
jo     20400 <_IO_stdin_used+0x50a0>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
arpl   %bp,0x64(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x72617000,0x65(%esi),%ebp
jae    20407 <_IO_stdin_used+0x50a7>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x66202773,%eax
fs
cmp    $0xa6425,%eax
data16
and    %ah,%fs:0x25203a64
insl   (%dx),%es:(%edi)
or     (%eax),%al
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x6d207325,%eax
outsl  %ds:(%esi),(%dx)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0xa7325,%eax
jo     20445 <_IO_stdin_used+0x50e5>
cmp    %gs:(%eax),%al
jo     20447 <_IO_stdin_used+0x50e7>
jae    2044e <_IO_stdin_used+0x50ee>
cmp    (%eax),%al
and    $0x72702075,%eax
gs
sub    $0x20,%al
and    $0x6f702075,%eax
jae    2045f <_IO_stdin_used+0x50ff>
or     (%eax),%al
add    %al,(%eax)
add    %cl,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     2045f <_IO_stdin_used+0x50ff>
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%si)
jo     20469 <_IO_stdin_used+0x5109>
imul   $0x63206574,0x61(%ebx),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6966,0x20(%edi),%sp
insb   (%dx),%es:(%edi)
cmp    %gs:(%eax),%ah
and    $0x73252f73,%eax
or     (%eax),%al
add    %ch,0x75(%edi)
je     20449 <_IO_stdin_used+0x50e9>
outsl  %ds:(%esi),(%dx)
sub    $0x656d,%ax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     2049e <_IO_stdin_used+0x513e>
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
cmp    $0x6d207325,%eax
outsl  %ds:(%esi),(%dx)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0xa7325,%eax
add    %al,(%eax)
and    $0x63203a73,%eax
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x73692073
and    %ah,0x70(%ebp,%eiz,2)
jb     204b8 <_IO_stdin_used+0x5158>
arpl   %sp,0x74(%ecx)
gs and %ah,%fs:%gs:0x6e(%ecx)
and    %ch,%fs:0x6f(%esi)
je     20481 <_IO_stdin_used+0x5121>
jo     204c4 <_IO_stdin_used+0x5164>
jb     204d8 <_IO_stdin_used+0x5178>
gs and %ah,%fs:%gs:0x6e(%ecx)
jns    204d9 <_IO_stdin_used+0x5179>
outsl  %ds:(%esi),(%dx)
jb     204d4 <_IO_stdin_used+0x5174>
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x696c2073
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x69203a75
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     204ef <_IO_stdin_used+0x518f>
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%bp,%si)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
and    %dh,%gs:0x74(%ebx)
popa
jb     2050b <_IO_stdin_used+0x51ab>
imul   $0x74697720,0x67(%esi),%ebp
push   $0x73252720
daa
or     (%eax),%al
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     204d2 <_IO_stdin_used+0x5172>
outsl  %ds:(%esi),(%dx)
jo     2051a <_IO_stdin_used+0x51ba>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
das
jo     2052d <_IO_stdin_used+0x51cd>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
arpl   %bp,0x64(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x6f662027,0x65(%esi),%ebp
jb     204eb <_IO_stdin_used+0x518b>
jb     20532 <_IO_stdin_used+0x51d2>
popa
imul   $0x6d25203a,%fs:0x67(%esi),%ebp
or     (%eax),%al
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     20502 <_IO_stdin_used+0x51a2>
jb     20549 <_IO_stdin_used+0x51e9>
popa
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
das
jo     20562 <_IO_stdin_used+0x5202>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
arpl   %bp,0x64(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x25203a27,0x65(%esi),%ebp
jae    2050a <_IO_stdin_used+0x51aa>
add    %al,(%eax)
add    %al,(%eax)
mov    $0xd8fffe79,%eax
jns    20509 <_IO_stdin_used+0x51a9>
incl   (%eax)
jp     2050d <_IO_stdin_used+0x51ad>
decl   (%eax)
jp     20511 <_IO_stdin_used+0x51b1>
ljmp   *0x79(%eax)
(bad)
call   *0xfffe79(%eax)
add    %ch,0x63(%ebx)
insl   (%dx),%es:(%edi)
fs
insb   (%dx),%es:(%edi)
imul   $0x7261705f,0x65(%esi),%ebp
jae    20591 <_IO_stdin_used+0x5231>
pop    %edi
jb     20594 <_IO_stdin_used+0x5234>
jae    205a6 <_IO_stdin_used+0x5246>
insb   (%dx),%es:(%edi)
je     20534 <_IO_stdin_used+0x51d4>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x6170,0x5f(%edi),%sp
jb     205b7 <_IO_stdin_used+0x5257>
gs
pop    %edi
imul   $0x64,0x6d(%ebx),%esp
insb   (%dx),%es:(%edi)
imul   $0x6f6d6b00,0x65(%esi),%ebp
fs
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x6461,0x5f(%edi),%sp
fs
pop    %edi
jae    205d0 <_IO_stdin_used+0x5270>
data16
je     205c8 <_IO_stdin_used+0x5268>
gs
jo     20567 <_IO_stdin_used+0x5207>
jne    205d7 <_IO_stdin_used+0x5277>
fs
gs
jb     205e0 <_IO_stdin_used+0x5280>
arpl   %bp,0x72(%edi)
gs
jae    20573 <_IO_stdin_used+0x5213>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x6461,0x5f(%edi),%sp
fs
pop    %edi
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x6461,0x5f(%edi),%sp
fs
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     20612 <_IO_stdin_used+0x52b2>
imul   $0x6d6b0073,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x6461,0x5f(%edi),%sp
fs
pop    %edi
bound  %ebp,0x63(%ecx,%eiz,2)
imul   $0x74,0x73(%ecx,%ebp,2),%ebp
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x6461,0x5f(%edi),%sp
fs
pop    %edi
popa
insb   (%dx),%es:(%edi)
imul   $0x6f6d6b00,0x73(%ecx),%esp
fs
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x6170,0x5f(%edi),%sp
jb     20656 <_IO_stdin_used+0x52f6>
add    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
pop    %di
imul   $0x695f,0x73(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
jae    20659 <_IO_stdin_used+0x52f9>
jb     2066a <_IO_stdin_used+0x530a>
pop    %edi
jae    20668 <_IO_stdin_used+0x5308>
jb     2066f <_IO_stdin_used+0x530f>
gs add %ah,%fs:%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
pop    %di
imul   $0x665f,0x73(%ebp,%eiz,2),%bp
imul   $0x756f5f72,0x65(%esp,%esi,2),%ebp
je     20614 <_IO_stdin_used+0x52b4>
arpl   %bp,0x6e(%edi)
pop    %di
imul   $0x6c5f,0x73(%ebp,%eiz,2),%bp
imul   $0x6f6d6b00,0x74(%ebx),%esi
fs
pop    %edi
arpl   %bp,0x6e(%edi)
imul   $0x656e,0x5f(%edi),%sp
ja     20634 <_IO_stdin_used+0x52d4>
cs
cs
das
insb   (%dx),%es:(%edi)
imul   $0x2f646f6d,0x6b(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d646f6d,0x6b(%edx),%esp
imul   $0x632e7865,0x64(%esi),%ebp
add    %ah,0x75(%edx)
sub    $0x753e,%ax
jae    206bc <_IO_stdin_used+0x535c>
and    %bh,%fs:(%esi)
and    %dh,(%eax)
add    %ah,0x75(%edx)
sub    $0x753e,%ax
jae    206ca <_IO_stdin_used+0x536a>
and    %bh,%fs:(%esi)
cmp    $0x6d006e20,%eax
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %di,(%edx)
and    %ah,0x6f000a6d
jo     206e0 <_IO_stdin_used+0x5380>
outsb  %ds:(%esi),(%dx)
sub    %ah,0x4f202c73
pop    %edi
push   %edx
inc    %esp
dec    %edi
dec    %esi
dec    %esp
pop    %ecx
jl     206da <_IO_stdin_used+0x537a>
pop    %edi
inc    %ebx
dec    %esp
dec    %edi
inc    %ebp
pop    %eax
inc    %ebp
inc    %ebx
sub    %edi,(%edx)
and    %ah,0xa6d
add    %ch,0x6d(%ebp)
popa
jo     206c9 <_IO_stdin_used+0x5369>
dec    %esi
push   %ebp
dec    %esp
dec    %esp
sub    $0x20,%al
and    $0x2c756c6c,%eax
and    %dl,0x52(%eax)
dec    %edi
push   %esp
pop    %edi
push   %edx
inc    %ebp
inc    %ecx
inc    %esp
sub    $0x20,%al
and    $0x4d202c64,%eax
inc    %ecx
push   %eax
pop    %edi
push   %eax
push   %edx
dec    %ecx
push   %esi
inc    %ecx
push   %esp
inc    %ebp
sub    $0x20,%al
xor    %ch,(%ecx)
cmp    (%eax),%ah
and    $0xa6d,%eax
add    %al,(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x63656863,0x20(%bp,%di),%esp
imul   $0x66,(%eax),%esp
popa
imul   $0x69207825,0x20(%edx,%edi,1),%ebp
outsb  %ds:(%esi),(%dx)
jae    20761 <_IO_stdin_used+0x5401>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x6d000a78
popa
push   $0x6f
jb     2071e <_IO_stdin_used+0x53be>
jbe    20765 <_IO_stdin_used+0x5405>
jb     20775 <_IO_stdin_used+0x5415>
imul   $0x65686320,0x6e(%edi),%ebp
arpl   %bp,0x20(%ebx)
popaw
imul   $0x69207525,0x20(%edx,%edi,1),%ebp
outsb  %ds:(%esi),(%dx)
jae    2078d <_IO_stdin_used+0x542d>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x69000a75
outsb  %ds:(%esi),(%dx)
fs
gs
js     20789 <_IO_stdin_used+0x5429>
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     20795 <_IO_stdin_used+0x5435>
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx)
pop    %di
jo     207a7 <_IO_stdin_used+0x5447>
jo     2079d <_IO_stdin_used+0x543d>
push   $0x737261
bound  %esi,0x66(%ebp)
pop    %edi
jo     207b4 <_IO_stdin_used+0x5454>
jo     207aa <_IO_stdin_used+0x544a>
push   $0x7261
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
jae    207c2 <_IO_stdin_used+0x5462>
insb   (%dx),%es:(%edi)
jne    207ca <_IO_stdin_used+0x546a>
and    %dh,%gs:0x61(%eax)
je     207c4 <_IO_stdin_used+0x5464>
and    %ah,0x6f(%esi)
jb     20781 <_IO_stdin_used+0x5421>
and    $0x2e000a73,%eax
cs
das
insb   (%dx),%es:(%edi)
imul   $0x2f646f6d,0x6b(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d646f6d,0x6b(%edx),%esp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    207e9 <_IO_stdin_used+0x5489>
gs arpl %ax,%cs:%gs:(%eax)
jae    207f7 <_IO_stdin_used+0x5497>
popa
je     207a6 <_IO_stdin_used+0x5446>
and    $0x25203a73,%eax
jae    20797 <_IO_stdin_used+0x5437>
add    %ch,0x6f(%ebp)
fs
sub    $0x7065643e,%eax
and    %bh,0x2828203d
jbe    2080d <_IO_stdin_used+0x54ad>
imul   $0x293029,0x2a(%eax,%eiz,1),%esp
arpl   %si,0x3d(%eax,%edi,2)
and    $0x61702070,%eax
je     20819 <_IO_stdin_used+0x54b9>
cmp    $0x65207325,%eax
jb     2082a <_IO_stdin_used+0x54ca>
outsl  %ds:(%esi),(%dx)
jb     207f8 <_IO_stdin_used+0x5498>
and    $0x61000a73,%eax
fs and %ah,%fs:0x70(%ebp,%eiz,2)
cmp    (%eax),%ah
and    $0x25000a73,%eax
and    %ah,%fs:0x70(%ebp,%eiz,2)
outsb  %gs:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    207fc <_IO_stdin_used+0x549c>
outsw  %ds:(%esi),(%dx)
jb     20800 <_IO_stdin_used+0x54a0>
and    $0x6b000a73,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    2085a <_IO_stdin_used+0x54fa>
and    %ah,%gs:0x65722070
insb   (%dx),%es:(%edi)
gs
popa
jae    2085f <_IO_stdin_used+0x54ff>
or     %fs:(%eax),%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x6c(%ecx)
imul   $0x7325203a,0x73(%ecx),%esp
or     (%eax),%al
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20888 <_IO_stdin_used+0x5528>
gs
jae    2084d <_IO_stdin_used+0x54ed>
fs
gs
jo     20843 <_IO_stdin_used+0x54e3>
and    $0x6c000a73,%eax
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    2089f <_IO_stdin_used+0x553f>
gs
jae    20864 <_IO_stdin_used+0x5504>
jae    208b1 <_IO_stdin_used+0x5551>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    2085e <_IO_stdin_used+0x54fe>
and    $0x6c000a73,%eax
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    208ba <_IO_stdin_used+0x555a>
gs
jae    2087f <_IO_stdin_used+0x551f>
popa
insb   (%dx),%es:(%edi)
imul   $0x25207365,0x73(%ecx),%esp
jae    20866 <_IO_stdin_used+0x5506>
add    %ch,0x6f(%edi,%ebp,2)
imul   $0x20,0x70(%ebp),%esi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    208d5 <_IO_stdin_used+0x5575>
gs
jae    2089a <_IO_stdin_used+0x553a>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     208db <_IO_stdin_used+0x557b>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c000a73
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
and    $0x64253d73,%eax
sub    $0x20,%al
insb   (%dx),%es:(%edi)
imul   $0xa70253d,0x74(%ebx),%esi
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
and    $0x6e000a73,%eax
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x27732527,%eax
and    %dh,0x61(%eax)
je     2091a <_IO_stdin_used+0x55ba>
cmp    $0x27732527,%eax
or     (%eax),%al
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     208e3 <_IO_stdin_used+0x5583>
jb     2092a <_IO_stdin_used+0x55ca>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    2092e <_IO_stdin_used+0x55ce>
and    %ah,(%edi)
and    $0x203a2773,%eax
and    $0x5f000a6d,%eax
pop    %edi
jbe    2093d <_IO_stdin_used+0x55dd>
jb     2094d <_IO_stdin_used+0x55ed>
imul   $0x61460073,0x6e(%edi),%ebp
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    2095f <_IO_stdin_used+0x55ff>
jb     20956 <_IO_stdin_used+0x55f6>
jo     2090f <_IO_stdin_used+0x55af>
jbe    20956 <_IO_stdin_used+0x55f6>
jb     20960 <_IO_stdin_used+0x5600>
popa
imul   $0xa732520,0x3a(%bp,%di),%esp
add    %ch,(%edx)
jo     20972 <_IO_stdin_used+0x5612>
and    %bh,%gs:0x2828203d
jbe    20978 <_IO_stdin_used+0x5618>
imul   $0x293029,0x2a(%eax,%eiz,1),%esp
sub    0x6f(%eax),%dh
jae    2098a <_IO_stdin_used+0x562a>
and    %bh,0x2828203d
jbe    2098d <_IO_stdin_used+0x562d>
imul   $0x293029,0x2a(%eax,%eiz,1),%esp
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     20950 <_IO_stdin_used+0x55f0>
addr16
gs
je     20954 <_IO_stdin_used+0x55f4>
jae    209a5 <_IO_stdin_used+0x5645>
data16
je     2099d <_IO_stdin_used+0x563d>
gs
jo     20976 <_IO_stdin_used+0x5616>
and    %ah,0x2f000a73
jo     209b6 <_IO_stdin_used+0x5656>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    209b8 <_IO_stdin_used+0x5658>
gs
jae    2094f <_IO_stdin_used+0x55ef>
insb   (%dx),%es:(%edi)
imul   $0x6d6f6300,0x65(%esi),%esi
imul   $0x696f6700,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ch,(%bx)
jae    209dd <_IO_stdin_used+0x567d>
jae    20995 <_IO_stdin_used+0x5635>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    209d7 <_IO_stdin_used+0x5677>
gs
das
and    $0x6e692f73,%eax
imul   $0x657461,0x74(%ebx,%esi,2),%esi
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     209a4 <_IO_stdin_used+0x5644>
outsl  %ds:(%esi),(%dx)
jo     209ec <_IO_stdin_used+0x568c>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x203a2773,%eax
and    $0x63000a73,%eax
outsl  %ds:(%esi),(%dx)
jne    20a03 <_IO_stdin_used+0x56a3>
and    %ch,%fs:0x6f(%esi)
je     209bd <_IO_stdin_used+0x565d>
jb     20a04 <_IO_stdin_used+0x56a4>
popa
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x203a2773,%eax
and    $0x6c000a73,%eax
imul   $0x6f63000a,0x65(%esi),%esi
insl   (%dx),%es:(%edi)
imul   $0x6f67000a,0x67(%esi),%ebp
imul   $0x6e75000a,0x67(%esi),%ebp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x27203a73
and    $0xa2773,%eax
das
jae    20a54 <_IO_stdin_used+0x56f4>
jae    20a0c <_IO_stdin_used+0x56ac>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20a4e <_IO_stdin_used+0x56ee>
gs
das
and    $0x6f630073,%eax
jb     20a50 <_IO_stdin_used+0x56f0>
jae    20a56 <_IO_stdin_used+0x56f6>
jp     20a54 <_IO_stdin_used+0x56f4>
add    %ch,(%edi)
jae    20a6c <_IO_stdin_used+0x570c>
jae    20a24 <_IO_stdin_used+0x56c4>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20a66 <_IO_stdin_used+0x5706>
gs
das
and    $0x65722f73,%eax
data16
arpl   %bp,0x74(%esi)
add    %ch,(%edi)
jae    20a82 <_IO_stdin_used+0x5722>
jae    20a3a <_IO_stdin_used+0x56da>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20a7c <_IO_stdin_used+0x571c>
gs
das
and    $0x6f682f73,%eax
insb   (%dx),%es:(%edi)
fs
gs
jb     20a8f <_IO_stdin_used+0x572f>
add    %ch,(%edi)
jae    20a99 <_IO_stdin_used+0x5739>
jae    20a51 <_IO_stdin_used+0x56f1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20a93 <_IO_stdin_used+0x5733>
gs
das
and    $0x65732f73,%eax
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    20a35 <_IO_stdin_used+0x56d5>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     20a5f <_IO_stdin_used+0x56ff>
outsl  %ds:(%esi),(%dx)
jo     20aa7 <_IO_stdin_used+0x5747>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x73252f73,%eax
daa
cmp    (%eax),%ah
and    $0x2e000a6d,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x6973006f,%fs:0x66(%esi),%ebp
outsb  %ds:(%si),(%dx)
gs
jb     20a61 <_IO_stdin_used+0x5701>
and    $0x583230,%eax
jae    20ad1 <_IO_stdin_used+0x5771>
addr16 pop %edi
imul   $0x0,0x79(%ebp),%esp
jae    20ad9 <_IO_stdin_used+0x5779>
addr16 pop %edi
push   $0x61687361
insb   (%dx),%es:(%edi)
outsl  %ds:(%si),(%dx)
add    %al,(%eax)
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20af2 <_IO_stdin_used+0x5792>
and    %ah,%gs:(%edi)
and    $0x61202773,%eax
insb   (%dx),%es:(%edi)
jb     20af6 <_IO_stdin_used+0x5796>
popa
fs
jns    20ab5 <_IO_stdin_used+0x5755>
gs
js     20b01 <_IO_stdin_used+0x57a1>
jae    20b0e <_IO_stdin_used+0x57ae>
jae    20abc <_IO_stdin_used+0x575c>
ja     20b07 <_IO_stdin_used+0x57a7>
je     20b08 <_IO_stdin_used+0x57a8>
and    %ah,0x66(%ecx,%ebp,2)
data16
gs
jb     20b0d <_IO_stdin_used+0x57ad>
outsb  %ds:(%esi),(%dx)
je     20acb <_IO_stdin_used+0x576b>
jo     20b0e <_IO_stdin_used+0x57ae>
je     20b17 <_IO_stdin_used+0x57b7>
cmp    (%eax),%ah
outsb  %ds:(%esi),(%dx)
gs
ja     20ae2 <_IO_stdin_used+0x5782>
jo     20b18 <_IO_stdin_used+0x57b8>
je     20b21 <_IO_stdin_used+0x57c1>
cmp    $0x27732527,%eax
and    %ch,0x6c(%edi)
fs
sub    $0x68746170,%eax
cmp    $0x27732527,%eax
or     (%eax),%al
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     20afa <_IO_stdin_used+0x579a>
push   $0x6f
imul   $0x68746170,0x20(%esi),%ebp
and    %ah,(%edi)
and    $0x61202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%edi)
and    $0xa2e2773,%eax
add    %al,0x6e(%ecx)
and    %ah,0x6d(%ebp)
jo     20b6f <_IO_stdin_used+0x580f>
jns    20b1d <_IO_stdin_used+0x57bd>
insb   (%dx),%es:(%edi)
imul   $0x20736920,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
gs gs fs gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
20
arpl   %si,0x65(%edx)
popa
je     20b7a <_IO_stdin_used+0x581a>
and    %ch,0x6f(%edi,%ebp,2)
imul   $0xa,0x70(%ebp),%esi
add    %al,(%eax)
add    %ch,0x6e(%ecx)
jo     20b99 <_IO_stdin_used+0x5839>
je     20b46 <_IO_stdin_used+0x57e6>
popa
insb   (%dx),%es:(%edi)
imul   $0x2c73253d,0x73(%ecx),%esp
and    %ch,0x6f(%esi)
jb     20ba1 <_IO_stdin_used+0x5841>
popa
insb   (%dx),%es:(%edi)
imul   $0x73253d64,0x65(%edx),%edi
or     (%eax),%al
add    %ch,0x6f(%edi,%ebp,2)
imul   $0x20,0x70(%ebp),%esi
imul   $0x6c6c6174,0x73(%esi),%ebp
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    20bbe <_IO_stdin_used+0x585e>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    20b83 <_IO_stdin_used+0x5823>
and    $0xa73,%eax
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
jae    20bea <_IO_stdin_used+0x588a>
data16
je     20b9e <_IO_stdin_used+0x583e>
fs
gs
jo     20be7 <_IO_stdin_used+0x5887>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x20(%ecx)
daa
and    $0x202c2773,%eax
arpl   %bp,0x6e(%edi)
je     20bfd <_IO_stdin_used+0x589d>
outsb  %ds:(%esi),(%dx)
jne    20c00 <_IO_stdin_used+0x58a0>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%bx,%di)
jns    20c15 <_IO_stdin_used+0x58b5>
popa
jns    20bcf <_IO_stdin_used+0x586f>
or     (%eax),%al
add    %ah,0x6f(%ebx)
jne    20c14 <_IO_stdin_used+0x58b4>
and    %ch,%fs:0x6f(%esi)
je     20bce <_IO_stdin_used+0x586e>
imul   $0x6d20,0x64(%esi),%bp
outsl  %ds:(%esi),(%dx)
fs
jne    20c24 <_IO_stdin_used+0x58c4>
and    %ah,%gs:0x79(%edx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
cmp    $0x27732527,%eax
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    20c48 <_IO_stdin_used+0x58e8>
jb     20c3f <_IO_stdin_used+0x58df>
jo     20bf8 <_IO_stdin_used+0x5898>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jbe    20c42 <_IO_stdin_used+0x58e2>
jb     20c52 <_IO_stdin_used+0x58f2>
imul   $0x7325203a,0x6e(%edi),%ebp
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
imul   $0x20747265,0x73(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20c6a <_IO_stdin_used+0x590a>
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
and    $0xa6d,%eax
add    %ch,0x6f(%ebp)
outsb  %fs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x6d207325,%eax
outsl  %ds:(%esi),(%dx)
fs
sub    $0x6d616e3e,%eax
gs
cmp    $0x6d207325,%eax
outsl  %ds:(%esi),(%dx)
fs
sub    $0x696c613e,%eax
popa
jae    20c6c <_IO_stdin_used+0x590c>
and    $0xa73,%eax
jo     20c97 <_IO_stdin_used+0x5937>
jae    20cab <_IO_stdin_used+0x594b>
gs and %bh,%fs:%gs:0x646f6d20
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x6d207325,%eax
outsl  %ds:(%esi),(%dx)
fs
sub    $0x6d616e3e,%eax
gs
cmp    $0x6d207325,%eax
outsl  %ds:(%esi),(%dx)
fs
sub    $0x696c613e,%eax
popa
jae    20c9d <_IO_stdin_used+0x593d>
and    $0x49000a73,%eax
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     20ccf <_IO_stdin_used+0x596f>
and    %ch,0x6f(%ebp)
fs
jne    20cdc <_IO_stdin_used+0x597c>
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
popa
insb   (%dx),%es:(%edi)
jb     20ce1 <_IO_stdin_used+0x5981>
popa
fs
jns    20ca0 <_IO_stdin_used+0x5940>
jbe    20ceb <_IO_stdin_used+0x598b>
jae    20ced <_IO_stdin_used+0x598d>
je     20ceb <_IO_stdin_used+0x598b>
or     %fs:(%eax),%al
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    20cfc <_IO_stdin_used+0x599c>
and    %ch,%fs:0x6f(%esi)
je     20cb6 <_IO_stdin_used+0x5956>
outsl  %ds:(%esi),(%dx)
jo     20cfe <_IO_stdin_used+0x599e>
outsb  %ds:(%esi),(%dx)
and    %ch,(%edi)
jo     20d10 <_IO_stdin_used+0x59b0>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20d12 <_IO_stdin_used+0x59b2>
gs
jae    20ce3 <_IO_stdin_used+0x5983>
and    %ah,0xa73
add    %ah,0x6f(%ebx)
jne    20d20 <_IO_stdin_used+0x59c0>
and    %ch,%fs:0x6f(%esi)
je     20cda <_IO_stdin_used+0x597a>
addr16
gs
je     20cde <_IO_stdin_used+0x597e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20d2f <_IO_stdin_used+0x59cf>
and    %ah,%gs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
and    $0xa73,%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x203d2120,0x74(%ebx),%esi
sub    %ch,(%eax)
jbe    20d57 <_IO_stdin_used+0x59f7>
imul   $0x20293029,0x2a(%eax,%eiz,1),%esp
es and %ch,%es:(%edx)
insb   (%dx),%es:(%edi)
imul   $0x203d3d20,0x74(%ebx),%esi
sub    %ch,(%eax)
jbe    20d6f <_IO_stdin_used+0x5a0f>
imul   $0x293029,0x2a(%eax,%eiz,1),%esp
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     20d77 <_IO_stdin_used+0x5a17>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%di)
fs
jne    20d82 <_IO_stdin_used+0x5a22>
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
popa
insb   (%dx),%es:(%edi)
jb     20d87 <_IO_stdin_used+0x5a27>
popa
fs
jns    20d46 <_IO_stdin_used+0x59e6>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs or %fs:%gs:(%eax),%al
add    %al,(%eax)
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     20da1 <_IO_stdin_used+0x5a41>
popa
and    %ah,%fs:0x6f(%ebx)
jb     20da8 <_IO_stdin_used+0x5a48>
jae    20dae <_IO_stdin_used+0x5a4e>
jp     20dac <_IO_stdin_used+0x5a4c>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0xa73
add    %al,(%eax)
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6f(%esi)
jb     20dd2 <_IO_stdin_used+0x5a72>
popa
je     20d88 <_IO_stdin_used+0x5a28>
popa
je     20d8b <_IO_stdin_used+0x5a2b>
das
jo     20de0 <_IO_stdin_used+0x5a80>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20de2 <_IO_stdin_used+0x5a82>
gs
jae    20db3 <_IO_stdin_used+0x5a53>
and    $0xa64,%eax
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     20daa <_IO_stdin_used+0x5a4a>
jb     20df1 <_IO_stdin_used+0x5a91>
popa
and    %ch,%fs:0x6e(%ecx)
je     20df8 <_IO_stdin_used+0x5a98>
addr16
gs
jb     20db7 <_IO_stdin_used+0x5a57>
data16
jb     20e09 <_IO_stdin_used+0x5aa9>
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x203a2773,%eax
daa
and    $0xa2773,%eax
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     20dd2 <_IO_stdin_used+0x5a72>
imul   $0x20657461,0x72(%ebp,%eiz,2),%esi
outsw  %ds:(%esi),(%dx)
jb     20dde <_IO_stdin_used+0x5a7e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20e2f <_IO_stdin_used+0x5acf>
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
and    $0xa73,%eax
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     20dfa <_IO_stdin_used+0x5a9a>
arpl   %si,0x65(%edx)
popa
je     20e45 <_IO_stdin_used+0x5ae5>
and    %ch,0x6f(%ebp)
fs
jne    20e52 <_IO_stdin_used+0x5af2>
and    %ah,%gs:0x6f(%esi)
jb     20e0c <_IO_stdin_used+0x5aac>
daa
and    $0x203a2773,%eax
and    $0xa73,%eax
add    %ah,0x6f(%ebx)
jne    20e68 <_IO_stdin_used+0x5b08>
and    %ch,%fs:0x6f(%esi)
je     20e22 <_IO_stdin_used+0x5ac2>
jb     20e69 <_IO_stdin_used+0x5b09>
popa
and    %ch,%fs:0x6e(%edi,%ebp,2)
and    %ah,0x72(%bp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x73252f73,%eax
daa
cmp    (%eax),%ah
and    $0xa6d,%eax
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20e96 <_IO_stdin_used+0x5b36>
gs
pop    %edi
addr16
gs
je     20e8f <_IO_stdin_used+0x5b2f>
fs
gs
jo     20e99 <_IO_stdin_used+0x5b39>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %di,0x5f(%ecx)
jae    20eb6 <_IO_stdin_used+0x5b56>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    20e43 <_IO_stdin_used+0x5ae3>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20eb9 <_IO_stdin_used+0x5b59>
gs
pop    %edi
addr16
gs
je     20eb2 <_IO_stdin_used+0x5b52>
jae    20ece <_IO_stdin_used+0x5b6e>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
jae    20e5b <_IO_stdin_used+0x5afb>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20ed1 <_IO_stdin_used+0x5b71>
gs
pop    %edi
addr16
gs
je     20eca <_IO_stdin_used+0x5b6a>
jbe    20ed2 <_IO_stdin_used+0x5b72>
jb     20ee2 <_IO_stdin_used+0x5b82>
imul   $0x6d6b0073,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20eea <_IO_stdin_used+0x5b8a>
gs
pop    %edi
addr16
gs
je     20ee3 <_IO_stdin_used+0x5b83>
imul   $0x6d6b006f,0x66(%esi),%ebp
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20eff <_IO_stdin_used+0x5b9f>
gs
pop    %edi
addr16
gs
je     20ef8 <_IO_stdin_used+0x5b98>
push   $0x65646c6f
jb     20f13 <_IO_stdin_used+0x5bb3>
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20f17 <_IO_stdin_used+0x5bb7>
gs
pop    %edi
addr16
gs
je     20f10 <_IO_stdin_used+0x5bb0>
jb     20f18 <_IO_stdin_used+0x5bb8>
data16
arpl   %bp,0x74(%esi)
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20f2e <_IO_stdin_used+0x5bce>
gs
pop    %edi
addr16
gs
je     20f27 <_IO_stdin_used+0x5bc7>
jae    20f33 <_IO_stdin_used+0x5bd3>
jp     20f31 <_IO_stdin_used+0x5bd1>
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20f43 <_IO_stdin_used+0x5be3>
gs
pop    %edi
addr16
gs
je     20f3c <_IO_stdin_used+0x5bdc>
imul   $0x61747374,0x69(%esi),%ebp
je     20f4b <_IO_stdin_used+0x5beb>
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20f5d <_IO_stdin_used+0x5bfd>
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     20f56 <_IO_stdin_used+0x5bf6>
data16
jb     20f69 <_IO_stdin_used+0x5c09>
insl   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs add %ch,%fs:%gs:0x6f(%edi,%ebp,2)
imul   $0x5f,0x70(%ebp),%esi
jae    20f7b <_IO_stdin_used+0x5c1b>
data16
je     20f73 <_IO_stdin_used+0x5c13>
gs
jo     20f12 <_IO_stdin_used+0x5bb2>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20f88 <_IO_stdin_used+0x5c28>
gs
pop    %edi
addr16
gs
je     20f81 <_IO_stdin_used+0x5c21>
jae    20f93 <_IO_stdin_used+0x5c33>
data16
je     20f8b <_IO_stdin_used+0x5c2b>
gs
jo     20f9d <_IO_stdin_used+0x5c3d>
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20fa1 <_IO_stdin_used+0x5c41>
gs
pop    %edi
addr16
gs
je     20f9a <_IO_stdin_used+0x5c3a>
outsl  %ds:(%esi),(%dx)
jo     20fb2 <_IO_stdin_used+0x5c52>
imul   $0x6f630073,0x6e(%edi),%ebp
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
outsl  %fs:(%esi),(%dx)
add    %ch,0x6f(%ebp)
fs
jne    20fbf <_IO_stdin_used+0x5c5f>
gs
pop    %edi
outsl  %fs:(%esi),(%dx)
pop    %edi
imul   $0x6c6c6174,0x73(%esi),%ebp
pop    %edi
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    20f69 <_IO_stdin_used+0x5c09>
pop    %edi
pop    %edi
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20fe1 <_IO_stdin_used+0x5c81>
gs
pop    %edi
imul   $0x6f73,0x5f(%esp,%ebp,2),%bp
data16
je     20fe5 <_IO_stdin_used+0x5c85>
gs
jo     20f84 <_IO_stdin_used+0x5c24>
pop    %edi
pop    %edi
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    20ffc <_IO_stdin_used+0x5c9c>
gs
pop    %edi
addr16
gs
je     20ff5 <_IO_stdin_used+0x5c95>
jo     2100a <_IO_stdin_used+0x5caa>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x6f6d6b00,0x74(%ebx),%esi
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    21017 <_IO_stdin_used+0x5cb7>
gs
pop    %edi
addr16
gs
je     21010 <_IO_stdin_used+0x5cb0>
jo     21025 <_IO_stdin_used+0x5cc5>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x0,0x74(%ebx),%esi
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    21036 <_IO_stdin_used+0x5cd6>
gs
pop    %edi
jo     21040 <_IO_stdin_used+0x5ce0>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x5f(%ebp)
imul   $0x5f747265,0x73(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    2104a <_IO_stdin_used+0x5cea>
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    21056 <_IO_stdin_used+0x5cf6>
gs
pop    %edi
imul   $0x5f747265,0x73(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    21064 <_IO_stdin_used+0x5d04>
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    21070 <_IO_stdin_used+0x5d10>
gs
pop    %edi
jb     2106d <_IO_stdin_used+0x5d0d>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    21071 <_IO_stdin_used+0x5d11>
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    2107e <_IO_stdin_used+0x5d1e>
add    %ch,%gs:0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    2108a <_IO_stdin_used+0x5d2a>
gs
pop    %edi
addr16
gs
je     21083 <_IO_stdin_used+0x5d23>
jo     21087 <_IO_stdin_used+0x5d27>
je     21090 <_IO_stdin_used+0x5d30>
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    2109f <_IO_stdin_used+0x5d3f>
gs
pop    %edi
addr16
gs
je     21098 <_IO_stdin_used+0x5d38>
fs
gs
jo     210a2 <_IO_stdin_used+0x5d42>
outsb  %ds:(%esi),(%dx)
fs outsb %fs:%gs:(%esi),(%dx)
arpl   %bp,0x65(%ecx)
jae    21046 <_IO_stdin_used+0x5ce6>
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    210bc <_IO_stdin_used+0x5d5c>
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     210b5 <_IO_stdin_used+0x5d55>
data16
jb     210c8 <_IO_stdin_used+0x5d68>
insl   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
imul   $0x64,0x6f(%ebp),%ebp
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    210d8 <_IO_stdin_used+0x5d78>
gs
pop    %edi
jne    210de <_IO_stdin_used+0x5d7e>
jb     210d7 <_IO_stdin_used+0x5d77>
data16
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    210ea <_IO_stdin_used+0x5d8a>
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     210e3 <_IO_stdin_used+0x5d83>
data16
jb     210f6 <_IO_stdin_used+0x5d96>
insl   (%dx),%es:(%edi)
pop    %edi
jo     210ec <_IO_stdin_used+0x5d8c>
je     210f5 <_IO_stdin_used+0x5d95>
add    %ch,0x6d(%ebx)
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    21104 <_IO_stdin_used+0x5da4>
gs
pop    %edi
jo     210fd <_IO_stdin_used+0x5d9d>
jb     21111 <_IO_stdin_used+0x5db1>
gs
pop    %edi
fs
gs
jo     21110 <_IO_stdin_used+0x5db0>
imul   $0x6f6d6b00,0x65(%esi),%ebp
fs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
jne    2111e <_IO_stdin_used+0x5dbe>
gs
pop    %edi
jo     21117 <_IO_stdin_used+0x5db7>
jb     2112b <_IO_stdin_used+0x5dcb>
gs
pop    %edi
fs
gs
jo     2112a <_IO_stdin_used+0x5dca>
imul   $0x2f2e2e00,0x65(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x2f646f6d,0x6b(%edx),%esp
insb   (%dx),%es:(%edi)
imul   $0x2d646f6d,0x6b(%edx),%esp
gs
insb   (%dx),%es:(%edi)
data16
arpl   %ax,%cs:(%eax)
outsl  %ds:(%esi),(%dx)
data16
data16
jae    21145 <_IO_stdin_used+0x5de5>
je     21102 <_IO_stdin_used+0x5da2>
cmp    $0x20,%al
gs
insb   (%dx),%es:(%edi)
sub    $0x733e,%ax
imul   $0x7a697300,0x65(%edx),%edi
and    %bh,%gs:0x7a697320(,%edi,1)
outsl  %gs:(%esi),(%dx)
data16
sub    %dh,0x69(%ebp)
outsb  %ds:(%esi),(%dx)
je     21138 <_IO_stdin_used+0x5dd8>
xor    $0x5f,%al
je     2112f <_IO_stdin_used+0x5dcf>
add    %ch,0x64(%ecx)
js     2112b <_IO_stdin_used+0x5dcb>
and    %edi,0x7f003020
inc    %ebp
dec    %esp
inc    %esi
add    %ch,0x66(%edi)
data16
jae    2117f <_IO_stdin_used+0x5e1f>
je     2113c <_IO_stdin_used+0x5ddc>
sub    (%eax),%esp
jae    21189 <_IO_stdin_used+0x5e29>
jp     21187 <_IO_stdin_used+0x5e27>
and    %bh,0x666c6520(,%edi,1)
sub    $0x7a69733e,%eax
add    %dh,%gs:0x65(%esi)
jb     211a1 <_IO_stdin_used+0x5e41>
popa
imul   $0x74732e00,0x3d(%bp,%di),%esp
jb     211b3 <_IO_stdin_used+0x5e53>
popa
bound  %eax,(%eax)
jae,pn 211be <_IO_stdin_used+0x5e5e>
insl   (%dx),%es:(%edi)
je     211a9 <_IO_stdin_used+0x5e49>
bound  %eax,(%eax)
pop    %edi
pop    %edi
imul   $0x6d,0x79(%ebx),%esi
je     211b3 <_IO_stdin_used+0x5e53>
bound  %ebx,0x73(%edi)
je     211c9 <_IO_stdin_used+0x5e69>
imul   $0x64690073,0x67(%esi),%ebp
js     21180 <_IO_stdin_used+0x5e20>
cmp    $0x20,%al
gs
insb   (%dx),%es:(%edi)
sub    $0x683e,%ax
gs
popa
fs
gs
jb     2119c <_IO_stdin_used+0x5e3c>
jae    211d5 <_IO_stdin_used+0x5e75>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
arpl   %bp,%cs:0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     2117c <_IO_stdin_used+0x5e1c>
dec    %esp
inc    %edi
push   %edi
pop    %edi
pop    %edi
arpl   %si,0x63(%edx)
pop    %edi
add    %ah,0x6c(%ebp)
pop    %di
addr16
gs
je     211ed <_IO_stdin_used+0x5e8d>
jae    211f5 <_IO_stdin_used+0x5e95>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
push   $0x65646165
jb     2119d <_IO_stdin_used+0x5e3d>
gs
insb   (%dx),%es:(%edi)
pop    %di
addr16
gs
je     21204 <_IO_stdin_used+0x5ea4>
jne    21210 <_IO_stdin_used+0x5eb0>
outsb  %ds:(%esi),(%dx)
je     211aa <_IO_stdin_used+0x5e4a>
gs
insb   (%dx),%es:(%edi)
pop    %di
addr16
gs
je     21211 <_IO_stdin_used+0x5eb1>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
add    %bh,0x4d(%esi)
outsl  %ds:(%esi),(%dx)
fs
jne    21228 <_IO_stdin_used+0x5ec8>
and    %dh,%gs:0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     2123a <_IO_stdin_used+0x5eda>
jb     2122c <_IO_stdin_used+0x5ecc>
and    %ah,0x70(%ecx)
jo     21231 <_IO_stdin_used+0x5ed1>
outsb  %ds:(%esi),(%dx)
fs
gs
fs
jle    211dc <_IO_stdin_used+0x5e7c>
add    %dl,0x47(%eax)
push   %eax
add    %bl,0x35(%eax)
xor    %bh,(%ecx)
add    %ch,0x64(%ebp)
xor    $0x0,%al
insl   (%dx),%es:(%edi)
fs
xor    $0x61687300,%eax
xor    %eax,(%eax)
jb     21258 <_IO_stdin_used+0x5ef8>
xor    %esi,%fs:(%esi)
xor    %al,(%eax)
jae    2125a <_IO_stdin_used+0x5efa>
popa
xor    0x68730036,%dh
popa
xor    (%eax),%edi
xor    $0x0,%al
jae    21268 <_IO_stdin_used+0x5f08>
popa
xor    $0x73003231,%eax
push   $0x34323261
add    %al,0x41(%ebx,%edx,2)
add    %dl,0x53(%edx)
inc    %ecx
add    %ebx,(%ebx)
add    (%ebx),%edi
pusha
or     %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %ch,%ah
or     %dh,%bh
incl   (%esi,%ebp,1)
add    %al,(%eax)
and    $0x5cfffe0b,%eax
aas
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     %esi,%edi
(bad)
clc
or     %al,(%eax)
add    %cl,(%edi,%ecx,1)
(bad)
(bad)
mov    $0xdc000008,%esp
paddd  %mm7,%mm7
sub    %cl,(%ecx)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    %dh,%bh
incl   0x3c000009(%eax)
pop    %ss
(bad)
incl   (%edx,%ecx,1)
add    %al,(%eax)
in     (%dx),%al
sbb    %dh,%bh
decl   -0x73fffff6(%eax)
sbb    $0xfe,%al
dec    %eax
or     (%eax),%al
add    %bh,(%edx,%eiz,1)
(bad)
jmp    *(%eax)
or     (%eax),%eax
add    %cl,%ah
daa
(bad)
jmp    *0xb(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
sub    %bh,%dh
(bad)
mov    $0x1c00000b,%esp
sub    %edi,%esi
push   %esp
or     (%eax),%eax
add    %bh,(%edx,%ebp,1)
(bad)
pushl  (%esp,%ecx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sub    $0xc8cfffe,%eax
add    %al,(%eax)
sub    $0x2e,%al
(bad)
dec    %eax
or     $0x0,%al
add    %bh,%ah
xor    %edi,%esi
decl   (%eax)
or     $0x328c0000,%eax
(bad)
lcall  *0x0(%ebp,%ecx,1)
add    %cl,0xda0fffe(%eax,%eax,2)
add    %al,(%eax)
int3
inc    %eax
(bad)
dec    %eax
or     $0x410c0000,%eax
(bad)
push   %eax
or     $0x414c0000,%eax
(bad)
ljmp   *(%eax)
push   %cs
add    %al,(%eax)
in     (%dx),%al
inc    %ecx
(bad)
pushl  0xe(%eax)
add    %al,(%eax)
dec    %esp
inc    %edx
(bad)
jmp    *-0x33fffff2(%eax)
inc    %edx
(bad)
call   *%esp
push   %cs
add    %al,(%eax)
mov    %es,-0x2(%esi)
call   *(%edi,%ecx,1)
add    %al,(%eax)
int3
dec    %eax
(bad)
ljmp   *0x0(%edi,%ecx,1)
add    %bl,-0x2(%ecx,%ecx,2)
lcall  *-0x33fffff1(%eax)
dec    %ecx
(bad)
dec    %esp
sldt   (%eax)
sbb    $0x4a,%al
(bad)
(bad)
clc
sldt   (%eax)
or     $0x4b,%al
(bad)
(bad)
cmp    %dl,(%eax)
add    %al,(%eax)
mov    $0x8cfffe4d,%esp
adc    %al,(%eax)
add    %ch,(%eax,%edx,2)
(bad)
jmp    *%esp
adc    %al,(%eax)
add    %ch,%ah
push   %eax
(bad)
jmp    *(%eax)
adc    %eax,(%eax)
add    %ch,(%ebx,%edx,2)
(bad)
jmp    *0x0(%ecx,%edx,1)
add    %bl,-0x2(%esp,%edx,2)
jmp    *0x556c0000(%ecx,%edx,1)
(bad)
jmp    *%eax
adc    %eax,(%eax)
add    %cl,0x1228fffe(%edi,%edx,2)
add    %al,(%eax)
mov    %ds,-0x2(%eax)
jmp    *0x0(%edx,%edx,1)
add    %bh,(%ecx,%ebx,2)
(bad)
(bad)
mov    $0x7c000012,%eax
pop    %esp
(bad)
(bad)
clc
adc    (%eax),%al
add    %cl,-0x2(%esi,%ebx,2)
(bad)
cmp    %dl,(%ebx)
add    %al,(%eax)
lods   %ds:(%esi),%al
pop    %esi
(bad)
ljmp   *0x0(%ebx,%edx,1)
add    %bl,0x13acfffe(%edi,%ebx,2)
add    %al,(%eax)
lods   %ds:(%esi),%al
pusha
(bad)
(bad)
in     (%dx),%al
adc    (%eax),%eax
add    %bh,(%ecx,%eiz,2)
(bad)
jmp    *(%eax)
adc    $0x0,%al
add    %bh,%ah
data16
(bad)
jmp    *0x14(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   $0xfffffffe
jmp    *0x6c0c0000(%esp,%edx,1)
(bad)
(bad)
call   9c0213bd <_end+0x9bffa1b9>
insb   (%dx),%es:(%edi)
(bad)
pushl  (%eax)
adc    $0x6e2c0000,%eax
(bad)
pushl  0x0(%ebp,%edx,1)
add    %bh,0x15b8fffe(%eax,%esi,2)
add    %al,(%eax)
sbb    $0x71,%al
(bad)
push   %eax
adc    $0x954c0000,%eax
(bad)
pushl  (%esi,%edx,1)
add    %al,(%eax)
dec    %esp
xchg   %eax,%edi
(bad)
pushl  0x0(%esi,%edx,1)
add    %bl,0x1694fffe(%edi,%edx,4)
add    %al,(%eax)
int3
xchg   %eax,%edi
(bad)
pushl  -0x66a40000(%esi,%edx,1)
(bad)
(bad)
in     (%dx),%al
push   %ss
add    %al,(%eax)
lods   %ds:(%esi),%al
cltd
(bad)
lcall  *(%eax)
pop    %ss
add    %al,(%eax)
sub    $0x9a,%al
(bad)
call   *0x0(%edi,%edx,1)
add    %bl,0x1778fffe(%edx,%ebx,4)
add    %al,(%eax)
cld
lcall  $0x0,$0x179cfffe
lods   %ds:(%esi),%al
fwait
(bad)
push   %eax
pop    %ss
add    %al,(%eax)
sbb    $0xa0,%al
(bad)
pushl  (%eax,%ebx,1)
add    %al,(%eax)
pushf
mov    0x1880fffe,%al
add    %al,(%eax)
cmp    $0xa1,%al
(bad)
inc    %eax
sbb    %al,(%eax)
add    %ch,-0x2(%ebx,%eiz,4)
lcall  *(%eax)
sbb    %eax,(%eax)
add    %cl,0x1970fffe(%ebp,%eiz,4)
add    %al,(%eax)
cmp    $0xa7,%al
(bad)
pushl  -0x43ffffe7(%eax)
test   $0x1a08fffe,%eax
add    %al,(%eax)
int3
test   $0x1a1cfffe,%eax
add    %al,(%eax)
in     (%dx),%al
test   $0x1a30fffe,%eax
add    %al,(%eax)
pushf
stos   %al,%es:(%edi)
(bad)
pushl  0x1a(%eax)
add    %al,(%eax)
or     $0xab,%al
(bad)
call   *-0x54540000(%edx,%ebx,1)
(bad)
dec    %esp
sbb    (%eax),%al
add    %ch,%ah
stos   %eax,%es:(%edi)
(bad)
push   %eax
sbb    (%eax),%al
add    %ch,(%esp,%ebp,4)
(bad)
lcall  *(%ebx,%ebx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
lods   %ds:(%esi),%al
(bad)
(bad)
cmp    $0x1b,%al
add    %al,(%eax)
int3
lods   %ds:(%esi),%eax
(bad)
(bad)
jl     214b1 <_IO_stdin_used+0x6151>
add    %al,(%eax)
insb   (%dx),%es:(%edi)
scas   %es:(%edi),%al
(bad)
ljmp   *-0x33ffffe5(%eax)
scas   %es:(%edi),%al
(bad)
dec    %esp
sbb    (%eax),%eax
add    %bl,-0x2(%edi,%ebp,4)
decl   (%eax)
sbb    $0x0,%al
add    %ch,0x1c34fffe(%edi,%ebp,4)
add    %al,(%eax)
sub    $0xb0,%al
(bad)
decl   -0x53ffffe4(%eax)
mov    $0xfe,%al
(bad)
fcompl (%eax,%eax,1)
add    %ch,-0x2(%ecx,%esi,4)
lcall  *-0x4e540000(,%ebx,1)
(bad)
incl   0x1d(%eax)
add    %al,(%eax)
mov    $0x54fffeb1,%esp
sbb    $0xb27c0000,%eax
(bad)
ljmp   *-0x4c140000(%ebp,%ebx,1)
(bad)
(bad)
fcompl 0xb43c0000
(bad)
decl   (%eax)
push   %ds
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    $0xfe,%ah
lcall  *0x0(%esi,%ebx,1)
add    %cl,0x1e98fffe(,%esi,4)
add    %al,(%eax)
jl     214c0 <_IO_stdin_used+0x6160>
(bad)
(bad)
fcomps (%esi)
add    %al,(%eax)
sub    $0xb7,%al
(bad)
(bad)
cld
push   %ds
add    %al,(%eax)
jl     214d1 <_IO_stdin_used+0x6171>
(bad)
call   *(%edi,%ebx,1)
add    %al,(%eax)
mov    %?,0x1f28fffe(%edi)
add    %al,(%eax)
pushf
mov    $0xfe,%bh
(bad)
cmp    $0x1f,%al
add    %al,(%eax)
mov    $0x50fffeb7,%esp
pop    %ds
add    %al,(%eax)
dec    %esp
mov    $0x1f94fffe,%eax
add    %al,(%eax)
sub    $0xbb,%al
(bad)
(bad)
fcomps (%edi)
add    %al,(%eax)
dec    %esp
mov    $0x1fecfffe,%ebx
add    %al,(%eax)
sbb    $0xbe,%al
(bad)
ljmp   *(%eax,%eiz,1)
add    %al,(%eax)
pushf
mov    $0x2068fffe,%esi
add    %al,(%eax)
sub    $0xbf,%al
(bad)
jmp    *-0x40540000(%eax,%eiz,1)
(bad)
(bad)
fsubs  (%eax)
add    %al,(%eax)
sbb    $0xc0,%al
(bad)
ljmp   *(%ecx,%eiz,1)
add    %al,(%eax)
cmp    $0xc0,%al
(bad)
incl   0x21(%eax)
add    %al,(%eax)
pop    %esp
ret
(bad)
incl   0x3c000021(%eax)
(bad)
shlb   $0x0,(%ecx)
add    %bl,-0x2(%esi,%eax,8)
lcall  *(%eax)
and    (%eax),%al
add    %bl,%ah
(bad)
(bad)
pushl  0x22(%eax)
add    %al,(%eax)
pushf
lret   $0xfffe
loopne 215c8 <_IO_stdin_used+0x6268>
add    %al,(%eax)
or     $0xcb,%al
(bad)
lcall  *(%ebx,%eiz,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
lret
(bad)
call   *0x23(%eax)
add    %al,(%eax)
sub    $0xcc,%al
(bad)
(bad)
jl     215e1 <_IO_stdin_used+0x6281>
add    %al,(%eax)
mov    %cs,%ebp
(bad)
(bad)
mov    $0x5c000023,%esp
iret
(bad)
(bad)
cld
and    (%eax),%eax
add    %ch,-0x2(%edi,%ecx,8)
call   *(%eax)
and    $0x0,%al
add    %cl,%ah
iret
(bad)
decl   0x0(%esp)
add    %bh,(%eax,%edx,8)
(bad)
call   *-0x2f940000(%esp)
(bad)
(bad)
mov    $0xcc000024,%eax
sar    %dh
push   %esp
and    $0x0,%al
add    %bl,(%ecx,%edx,8)
(bad)
ljmp   *-0x2ec40000(,%eiz,1)
(bad)
incl   0x25(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sar    %esi
call   *0x0(%ebp,%eiz,1)
add    %cl,0x2568fffe(%ecx,%edx,8)
add    %al,(%eax)
int3
sar    %esi
lcall  *-0x2e240000(%ebp,%eiz,1)
(bad)
pushl  -0x13ffffdb(%eax)
sar    %esi
inc    %esp
and    $0xd1fc0000,%eax
(bad)
(bad)
fsubs  0xd20c0000
(bad)
(bad)
in     (%dx),%al
and    $0xd21c0000,%eax
(bad)
incl   (%eax)
add    %al,%es:(%eax)
sub    $0xd2,%al
(bad)
call   *(%esi,%eiz,1)
add    %al,(%eax)
cmp    $0xd2,%al
(bad)
ljmp   *(%eax)
add    %al,%es:(%eax)
dec    %esp
sar    %cl,%dh
(bad)
cmp    $0x26,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sar    %cl,%esi
(bad)
jl     2168c <_IO_stdin_used+0x632c>
add    %al,(%eax)
in     (%dx),%al
aam    $0xfe
(bad)
mov    $0xfc000026,%esp
(bad)
(bad)
ljmp   *(%eax)
daa
add    %al,(%eax)
sub    $0xd8,%al
(bad)
inc    %eax
daa
add    %al,(%eax)
int3
fsin
incl   (%eax)
sub    %al,(%eax)
add    %bl,%ah
(bad)
incl   0x28(%eax)
add    %al,(%eax)
mov    %ds,%esp
(bad)
incl   -0x33ffffd8(%eax)
(bad)
(bad)
in     (%dx),%al
sub    %al,(%eax)
add    %ch,%ah
(bad)
incl   (%eax)
sub    %eax,(%eax)
add    %cl,(%esi,%ebx,8)
(bad)
call   *(%ecx,%ebp,1)
add    %al,(%eax)
dec    %esp
(bad)
decl   0x29(%eax)
add    %al,(%eax)
fdiv   %st,%st(3)
(bad)
decl   -0xc040000(%ecx,%ebp,1)
(bad)
jmp    *0x1c000029(%eax)
hlt
(bad)
pushl  -0xbc40000(%ecx,%ebp,1)
(bad)
dec    %eax
sub    %eax,(%eax)
add    %bl,-0x2(%esp,%esi,8)
(bad)
fsubrl (%ecx)
add    %al,(%eax)
jl     216d6 <_IO_stdin_used+0x6376>
(bad)
push   %eax
sub    %eax,(%eax)
add    %bl,0x2a04fffe(%esp,%esi,8)
add    %al,(%eax)
int3
hlt
(bad)
jmp    *(%eax)
sub    (%eax),%al
add    %ch,0x2a5cfffe(,%esi,8)
add    %al,(%eax)
mov    %?,%ebp
(bad)
jmp    *-0xa440000(%edx,%ebp,1)
(bad)
call   *%eax
sub    (%eax),%al
add    %cl,(%esi,%esi,8)
(bad)
incl   (%ebx,%ebp,1)
add    %al,(%eax)
pop    %esp
idiv   %dh
pushl  (%eax)
sub    (%eax),%eax
add    %bh,%ah
idiv   %dh
pushl  0x2b(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
idiv   %esi
ljmp   *-0x8440000(%ebx,%ebp,1)
(bad)
jmp    *%eax
sub    (%eax),%eax
add    %bh,%ah
idiv   %esi
decl   (%esp,%ebp,1)
add    %al,(%eax)
or     $0xfa,%al
(bad)
(bad)
jl     21772 <_IO_stdin_used+0x6412>
add    %al,(%eax)
cmp    $0xfa,%al
(bad)
jmp    *-0x43ffffd4(%eax)
cli
(bad)
jmp    *%eax
sub    $0x0,%al
add    %bh,%ah
cli
(bad)
decl   -0x4c40000(,%ebp,1)
(bad)
incl   0x2d(%eax)
add    %al,(%eax)
jl     21765 <_IO_stdin_used+0x6405>
(bad)
ljmp   *0x0(%ebp,%ebp,1)
add    %ch,0x2dc4fffe(%ebp,%edi,8)
add    %al,(%eax)
fdivr  %st,%st(5)
(bad)
(bad)
call   1c0217ae <_end+0x1bffa5aa>
(bad)
(bad)
jmp    *(%eax)
add    %al,%cs:(%eax)
pushf
(bad)
(bad)
jmp    *0x2e(%eax)
add    %al,(%eax)
int3
add    %bh,%bh
jmp    *0x5c00002e(%eax)
add    %bh,%bh
jmp    *%eax
add    %al,%cs:(%eax)
mov    %es,(%ebx)
(bad)
jmp    *(%eax)
das
add    %al,(%eax)
int3
add    %edi,%edi
decl   0x0(%edi,%ebp,1)
add    %bh,-0x1(%esp,%eax,1)
jmp    *0x4ac0000(%edi,%ebp,1)
(bad)
call   *%eax
das
add    %al,(%eax)
dec    %esp
add    $0x300cffff,%eax
add    %al,(%eax)
or     $0x6,%al
(bad)
decl   0x0(%eax,%esi,1)
add    %bl,0x308cffff(%eax,%ecx,1)
add    %al,(%eax)
cmp    $0xc,%al
(bad)
jmp    *%esp
xor    %al,(%eax)
add    %bh,-0x1(%esp,%ecx,1)
call   *(%eax)
xor    %eax,(%eax)
add    %cl,0x314cffff(,%ecx,1)
add    %al,(%eax)
int3
or     $0x318cffff,%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    %bh,%bh
dec    %esp
xor    %eax,(%eax)
add    %bl,(%ecx,%edx,1)
(bad)
decl   (%edx,%esi,1)
add    %al,(%eax)
mov    %ss,(%ecx)
(bad)
jmp    *0x32(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
adc    %edi,%edi
pushl  0x0(%edx,%esi,1)
add    %cl,%ah
adc    %edi,%edi
decl   -0x23ffffce(%eax)
adc    %edi,%edi
lcall  *0x131c0000(%edx,%esi,1)
(bad)
push   %esp
xor    (%eax),%al
add    %cl,%ah
adc    %edi,%edi
pushl  (%ebx,%esi,1)
add    %al,(%eax)
fcoml  (%edi,%edi,8)
pushl  0x0(%ebx,%esi,1)
add    %bl,(%eax,%ebx,1)
(bad)
(bad)
mov    $0x5c000033,%eax
sbb    %bh,%bh
jmp    *%esp
xor    (%eax),%eax
add    %ch,0x3424ffff(%esp,%ebx,1)
add    %al,(%eax)
pushf
sbb    $0x3450ffff,%eax
add    %al,(%eax)
jl     21884 <_IO_stdin_used+0x6524>
(bad)
call   *0x7c000034(%eax)
and    %edi,%edi
call   *%eax
xor    $0x0,%al
add    %cl,0x3528ffff(%esp)
add    %al,(%eax)
mov    $0x4cffff24,%esp
xor    $0x24dc0000,%eax
(bad)
jmp    *0x35(%eax)
add    %al,(%eax)
mov    $0xb8ffff25,%esp
xor    $0x261c0000,%eax
(bad)
jmp    *%esp
xor    $0x26cc0000,%eax
(bad)
lcall  *(%esi,%esi,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sub    %bh,%bh
pushl  0x0(%esi,%esi,1)
add    %cl,-0x1(%ebx,%ebp,1)
dec    %esp
add    %al,%ss:(%eax)
in     (%dx),%al
sub    $0x3724ffff,%eax
add    %al,(%eax)
mov    %gs,(%esi)
(bad)
(bad)
jl     218f5 <_IO_stdin_used+0x6595>
add    %al,(%eax)
pushf
cs
(bad)
call   *-0x3ffffc9(%eax)
das
(bad)
(bad)
call   bc021908 <_end+0xbbffa704>
xor    %edi,%edi
ljmp   *(%eax)
cmp    %al,(%eax)
add    %bl,(%ebx,%esi,1)
(bad)
call   *0x33bc0000(%eax,%edi,1)
(bad)
(bad)
in     (%dx),%al
cmp    %al,(%eax)
add    %cl,%ah
xor    %edi,%edi
incl   (%eax)
cmp    %eax,(%eax)
add    %bl,-0x1(%esi,%esi,1)
incl   0x0(%ecx,%edi,1)
add    %ch,0x3984ffff(%ecx,%edi,1)
add    %al,(%eax)
cmp    $0x42,%al
(bad)
push   %esp
cmp    %eax,(%eax)
add    %bh,0x3a34ffff(%ebp,%eax,2)
add    %al,(%eax)
pushf
inc    %edi
(bad)
pushl  0x0(%edx,%edi,1)
add    %ch,0x3ab8ffff(%edx,%ecx,2)
add    %al,(%eax)
int3
dec    %edx
(bad)
dec    %esp
cmp    (%eax),%al
add    %ch,%ah
dec    %edx
(bad)
jmp    *%eax
cmp    (%eax),%al
add    %ch,(%ebx,%ecx,2)
(bad)
decl   (%ebx,%edi,1)
add    %al,(%eax)
fmull  -0x1(%ebp)
(bad)
js     21979 <_IO_stdin_used+0x6619>
add    %al,(%eax)
cld
dec    %ebp
(bad)
decl   0x4e1c0000(%ebx,%edi,1)
(bad)
jmp    *0x5c00003b(%eax)
dec    %esi
(bad)
dec    %esp
cmp    (%eax),%eax
add    %ch,(%eax,%edx,2)
(bad)
(bad)
cmp    %bh,(%eax,%eax,1)
add    %cl,-0x1(%eax,%edx,2)
decl   0x0(%esp,%edi,1)
add    %ch,-0x1(%eax,%edx,2)
jmp    *0x3c(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %eax
(bad)
decl   0x527c0000(%esp,%edi,1)
(bad)
(bad)
clc
cmp    $0x0,%al
add    %bl,0x3d0cffff(%edx,%edx,2)
add    %al,(%eax)
mov    $0x20ffff52,%esp
cmp    $0x52dc0000,%eax
(bad)
pushl  0x531c0000(,%edi,1)
(bad)
jmp    *0x3d(%eax)
add    %al,(%eax)
cld
push   %esp
(bad)
dec    %esp
cmp    $0x552c0000,%eax
(bad)
(bad)
in     (%dx),%al
cmp    $0x55dc0000,%eax
(bad)
ljmp   *(%eax)
add    %al,%ds:(%eax)
sub    $0x56,%al
(bad)
jmp    *0x3e(%eax)
add    %al,(%eax)
in     (%dx),%al
push   %esi
(bad)
lcall  *-0x3ffffc2(%eax)
push   %esi
(bad)
ljmp   *0x570c0000(%esi,%edi,1)
(bad)
inc    %eax
add    %al,%ds:(%eax)
sbb    $0x57,%al
(bad)
call   *%esp
add    %al,%ds:(%eax)
sub    $0x57,%al
(bad)
(bad)
call   7c021a27 <_end+0x7bffa823>
push   %edi
(bad)
call   *(%edi,%edi,1)
add    %al,(%eax)
mov    $0x30ffff57,%esp
aas
add    %al,(%eax)
cld
push   %edi
(bad)
(bad)
js     21a3d <_IO_stdin_used+0x66dd>
add    %al,(%eax)
in     (%dx),%al
(bad)
(bad)
(bad)
call   1c021a48 <_end+0x1bffa844>
arpl   %di,%di
call   *(%eax,%eax,2)
add    %al,(%eax)
sub    $0x63,%al
(bad)
ljmp   *(%eax)
inc    %eax
add    %al,(%eax)
int3
imul   $0x4084ff,%edi,%edi
add    %bl,(%esp,%ebp,2)
(bad)
(bad)
faddl  0x0(%eax)
add    %bh,-0x1(%eax,%esi,2)
decl   0x0(%ecx,%eax,2)
add    %cl,%ah
jns    21a32 <_IO_stdin_used+0x66d2>
(bad)
mov    $0x2c000041,%esp
jl     21a3a <_IO_stdin_used+0x66da>
ljmp   *(%edx,%eax,2)
add    %al,(%eax)
mov    %cs,0x4288ffff(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
pushf
(bad)
(bad)
cld
inc    %edx
add    %al,(%eax)
or     $0x9e,%al
(bad)
call   *0x0(%ebx,%eax,2)
add    %bh,(%edi,%ebx,4)
(bad)
inc    %eax
inc    %ebx
add    %al,(%eax)
pushf
mov    0x442cffff,%al
add    %al,(%eax)
or     $0xa1,%al
(bad)
ljmp   *0x44(%eax)
add    %al,(%eax)
sbb    $0xa1,%al
(bad)
(bad)
jl     21aba <_IO_stdin_used+0x675a>
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     21a8f <_IO_stdin_used+0x672f>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
js     21a96 <_IO_stdin_used+0x6736>
std
push   %eax
add    $0xe000000,%eax
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     21aaf <_IO_stdin_used+0x674f>
js     21aad <_IO_stdin_used+0x674d>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     21acf <_IO_stdin_used+0x676f>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
push   %es
(bad)
inc    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb6,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %bl,0x0(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %dh,%bh
pushl  0x2
inc    %ecx
push   %cs
or     %al,0x50d4702(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xc30a7102,%eax
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,-0x54000000(%eax)
push   %es
(bad)
decl   0x2(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
mov    %eax,0x140e0a01
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
addb   $0x0,(%eax)
add    %ah,%al
add    %al,(%eax)
add    %ah,%ah
or     %bh,%dh
dec    %ebp
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e51
xchg   %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
js     21be1 <_IO_stdin_used+0x6881>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx,%ecx,1),%esp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%esp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
addb   $0x0,(%eax)
add    %ah,0x0(%ecx,%eax,1)
add    %dh,(%eax)
or     $0x3abfffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
call   5c021ca6 <_end+0x5bffaaa2>
adc    %bh,%dh
lcall  *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbf,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,(%eax)
add    (%eax),%al
add    %bh,0x5a3fffe(%ecx,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc5,0x3700e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
fadds  (%edx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
addb   $0x0,(%edx)
add    %dl,(%edi,%edx,1)
(bad)
incl   0x41000000(%ebp,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x24e00e46
out    %eax,$0xa
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
rolb   $0x0,(%edx)
add    %ah,-0x2(%esp,%ebx,1)
jmp    *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
add    0xa(%edi),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x3,%al
add    %al,(%eax)
call   69021bf9 <_end+0x68ffa9f5>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dl,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%esi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
push   %esp
add    (%eax),%eax
add    %ah,(%eax)
sbb    $0x117fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbb,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,0x1e000000(%ebx,%eax,1)
(bad)
pushl  (%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x17,0x3600e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,%ah
add    (%eax),%eax
add    %bl,%al
and    %bh,%dh
pushl  0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax,%eax,1)
add    %bl,-0x2(%ecx,%eiz,1)
inc    %esp
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff94,0x3600e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%edx
add    %al,(%eax)
push   $0xec000004
and    $0xfe,%al
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
mov    $0x28000004,%esp
and    $0xdf5fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x24b00e51
sbb    (%ebx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
add    %al,0x32e40000
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
jb     21fdb <_IO_stdin_used+0x6c7b>
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
sub    %al,0x32fc0000
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
jb     22003 <_IO_stdin_used+0x6ca3>
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
add    $0x33140000,%eax
(bad)
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,0x1c000005(%eax)
xor    %esi,%edi
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xa(%edi),%dh
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
rolb   0x33740000
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    %esi,%edi
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebp),%ah
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
xor    $0x6,%al
add    %al,(%eax)
lock xor %esi,%edi
inc    %eax
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e51
fisttpll (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,0x0(%esi,%eax,1)
add    %dh,0x37(%eax)
(bad)
(bad)
add    %ds:(%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa8,0x2600e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
ret    $0xe0a
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,%ah
push   %es
add    %al,(%eax)
pop    %eax
cmp    %edi,%esi
decl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jle    221af <_IO_stdin_used+0x6e4f>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,%al
push   %es
add    %al,(%eax)
mov    $0x70fffe39,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%edi),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
sub    $0x7,%al
add    %al,(%eax)
clc
cmp    %edi,%esi
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dh,0xe(%ebx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pop    %eax
pop    %es
add    %al,(%eax)
sbb    $0x3a,%al
(bad)
jmp    *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %bl,-0x33fffff9(%eax)
cmp    %dh,%bh
jmp    *0x41000000(%edx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffc,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
xchg   %eax,%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ch,%ah
pop    %es
add    %al,(%eax)
sub    %bh,0x26afffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff98,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
inc    %esp
or     %al,(%eax)
add    %al,0x3f(%eax)
(bad)
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2500e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %al,-0x3bfffff8(%eax)
aas
(bad)
(bad)
aas
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e4e
xlat   %ds:(%ebx)
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
les    (%eax),%ecx
add    %al,(%eax)
rolb   $0xff,-0x2(%ecx)
xor    %al,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x17,0x3500e4e
add    %ecx,(%esi)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
add    $0x9,%al
add    %al,(%eax)
mov    $0x42,%al
(bad)
call   *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff7,0x2500e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %al,0x9(%eax)
add    %al,(%eax)
test   %al,-0x2(%ebx)
call   *(%ebx)
add    (%eax),%al
add    %al,(%eax)
dec    %ebx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x57,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0xc5c3040e,%al
mov    $0x38,%bh
add    %al,(%eax)
add    %cl,0x5c000009(%eax)
inc    %ebp
(bad)
(bad)
sti
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffe0,0x2500e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %al,%ah
or     %eax,(%eax)
add    %ah,(%eax)
inc    %esi
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbb    %cl,(%edx)
add    %al,(%eax)
jl     2251c <_IO_stdin_used+0x71bc>
(bad)
(bad)
cmp    (%ebx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x3600e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pop    %eax
or     (%eax),%al
add    %bh,-0x2(%ecx,%ecx,2)
inc    %edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa7,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
cwtl
or     (%eax),%al
add    %cl,(%ebx,%ecx,2)
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebx),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
int3
or     (%eax),%al
add    %bh,(%eax)
dec    %ebx
(bad)
jmp    *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
or     $0xb,%al
add    %al,(%eax)
call   10022418 <_end+0xfffb214>
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdc,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
dec    %esp
or     (%eax),%eax
add    %bh,-0x7e0001b4(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xe(%edx),%ch
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
orb    $0x0,(%ebx)
add    %dl,0x5bffffe(,%ecx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x21800e46
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%eax
add    %al,(%eax)
rorb   $0x0,(%ebx)
add    %dl,0x364fffe(%edx,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e51
xor    $0x140e0a02,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%esp,%ecx,1)
add    %al,(%eax)
rclb   $0xff,-0x2(%ebp)
lcall  $0xe41,$0x1
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x60e00e51
dec    %ebp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,0xc(%eax)
add    %al,(%eax)
sbb    $0x57,%al
(bad)
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xa(%ebp),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edi),%edx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,0x6400000c(%eax)
push   %edi
(bad)
incl   0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8f00e51
dec    %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,%ah
or     $0x0,%al
add    %dh,-0x770001a8(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8f00e51
push   %edi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
sbb    %cl,0x5afc0000
(bad)
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %cl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edi),%esi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %dl,0xd(%eax)
add    %al,(%eax)
and    $0x5b,%al
(bad)
jmp    *(%edx)
and    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x96b00e46
add    0x1(%ebp),%esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
or     $0x7f100000,%eax
(bad)
push   %ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e43
out    %al,(%dx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
aam    $0xd
add    %al,(%eax)
rolb   0x42fffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jl     228b1 <_IO_stdin_used+0x7551>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,%ah
or     $0x81000000,%eax
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
push   %ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dl,(%esi,%ecx,1)
add    %al,(%eax)
adc    %al,0x190fffe(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4e04(%ebx)
jno    228f7 <_IO_stdin_used+0x7597>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
dec    %esp
push   %cs
add    %al,(%eax)
push   $0x4afffe82
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,0xe(%eax)
add    %al,(%eax)
mov    %es,0x75fffe(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5e,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dh,-0x7d300000(%esi,%ecx,1)
(bad)
ljmp   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
add    0xe(%ecx),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
fmuls  (%esi)
add    %al,(%eax)
sbb    $0x83,%al
(bad)
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%ebp),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %bh,%ah
push   %cs
add    %al,(%eax)
pop    %eax
cmp    $0xffffffff,%esi
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8d,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
push   %eax
sldt   (%eax)
mov    $0x83,%ah
(bad)
ljmp   *0x4(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x84800e51
add    %dh,%cl
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %dl,-0x78200000(%edi,%ecx,1)
(bad)
(bad)
jl     22a56 <_IO_stdin_used+0x76f6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
loopne 22aa9 <_IO_stdin_used+0x7749>
add    %al,(%eax)
adc    $0x88,%al
(bad)
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8b,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,(%eax)
adc    %al,(%eax)
add    %dh,-0x2(%eax,%ecx,4)
ljmp   *(%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2b,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,0x10(%eax)
add    %al,(%eax)
dec    %esp
mov    %dh,%bh
call   *(%edi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x11,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
rclb   (%eax)
add    %al,(%eax)
adc    $0x8c,%al
(bad)
jmp    *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2e,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,(%eax)
adc    %eax,(%eax)
add    %al,0x27cfffe(%ebp,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
pop    %ds
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,0x11(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
(bad)
(bad)
incl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x0(%ecx,%edx,1)
add    %ch,0x19fffe8f(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
nop
adc    %eax,(%eax)
add    %dh,0xaffffe(%edi,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa650204(%esi)
(bad)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebp),%ebp
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
rclb   (%ecx)
add    %al,(%eax)
and    $0x90,%al
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jno    22ca9 <_IO_stdin_used+0x7949>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
hlt
adc    %eax,(%eax)
add    %dh,-0x70(%eax)
(bad)
lcall  *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sub    $0x12,%al
add    %al,(%eax)
fcoms  0x3efffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x39f597fe(%esi)
push   %cs
add    $0x47,%al
or     -0x3a(%ecx),%ecx
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
push   %eax
adc    (%eax),%al
add    %dh,%ah
nop
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
jl     22d48 <_IO_stdin_used+0x79e8>
add    %al,(%eax)
or     %dl,0x39fffe(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jae    22d59 <_IO_stdin_used+0x79f9>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,-0x6ed80000(%edx,%edx,1)
(bad)
lcall  *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7b,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
fcoml  (%edx)
add    %al,(%eax)
dec    %eax
xchg   %eax,%edx
(bad)
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,-0x39f598fe(%esi)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%ebx
(bad)
push   %cs
add    $0x47,%al
or     (%edx),%eax
dec    %ebx
(bad)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     %dl,(%ebx)
add    %al,(%eax)
mov    $0x55fffe92,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
add    -0x3a(%edi),%cl
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ch,(%ebx,%edx,1)
add    %al,(%eax)
clc
xchg   %eax,%edx
(bad)
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x79,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ch,0x13(%eax)
add    %al,(%eax)
dec    %esp
xchg   %eax,%ebx
(bad)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax),%edx
add    %al,(%eax)
xchg   %eax,%esp
adc    (%eax),%eax
add    %dh,-0x6d(%eax)
(bad)
(bad)
jge    22e56 <_IO_stdin_used+0x7af6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5c,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%esi),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
call   9c022eb8 <_end+0x9bffbcb4>
xchg   %eax,%ebx
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x51,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x14,%al
add    %al,(%eax)
enter  $0xfe93,$0xff
mov    $0x0,%ah
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9a,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
jl     22f4a <_IO_stdin_used+0x7bea>
add    %al,(%eax)
dec    %eax
xchg   %eax,%esp
(bad)
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
jl     22f13 <_IO_stdin_used+0x7bb3>
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    0x64000014,%al
xchg   %eax,%esp
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dh,-0x6ba00000(%esp,%edx,1)
(bad)
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff80,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
or     $0x15,%al
add    %al,(%eax)
enter  $0xfe94,$0xff
push   $0x1
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa015403,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bh,-0x69f80000(,%edx,1)
(bad)
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
push   $0x2c000015
xchg   %eax,%esi
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7f300e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0x48000015,%esp
xchg   %eax,%esi
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x46,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,%al
adc    $0x966c0000,%eax
(bad)
pushl  0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb7,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
cmp    %dl,(%esi)
add    %al,(%eax)
pushf
xchg   %eax,%edi
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,-0x3ff1b9fe(%ebx)
add    0xa(%ebp),%edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
pop    %esp
push   %ss
add    %al,(%eax)
sub    %bl,0x4bfffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %edi
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,0x0(%esi,%edx,1)
add    %ah,-0x68(%eax)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x5c000016(%eax)
cwtl
(bad)
decl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x67a80000(%esi,%edx,1)
(bad)
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
mov    $0x16,%al
add    %al,(%eax)
fs
cwtl
(bad)
incl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jno    23193 <_IO_stdin_used+0x7e33>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebp),%edi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dh,%ah
push   %ss
add    %al,(%eax)
mov    $0x98,%al
(bad)
call   *%edi
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
xchg   %eax,%esi
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cmp    %dl,(%edi)
add    %al,(%eax)
dec    %esp
fwait
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
pop    %ss
add    %al,(%eax)
pop    %eax
fwait
(bad)
dec    %esi
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7c,0x3600e4e
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,-0x62180000(%edi,%edx,1)
(bad)
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x72,0x2400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,%al
pop    %ss
add    %al,(%eax)
sub    $0x9e,%al
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x78,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %al,(%eax,%ebx,1)
add    %al,(%eax)
sbbb   $0x0,0x7efffe(%esi)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x10(%esi,%ecx,1),%dh
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %bh,(%eax)
sbb    %al,(%eax)
add    %cl,%ah
sahf
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6a240e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebp),%edx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    %ds,(%eax)
add    %al,(%eax)
call   1f0231eb <_end+0x1effbfe7>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    0xf4000018,%al
sahf
(bad)
lcall  *(%ecx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20e00e46
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
loopne 233b2 <_IO_stdin_used+0x8052>
add    %al,(%eax)
aam    $0xa1
(bad)
(bad)
flds   (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20e00e46
test   $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %ah,(%eax)
sbb    %eax,(%eax)
add    %dh,-0x2(%ebx,%eiz,4)
call   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x68500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x19(%eax)
add    %al,(%eax)
cmp    $0xa4,%al
(bad)
incl   0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd9,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,%al
sbb    %eax,(%eax)
add    %ah,-0x2(%ebp,%eiz,4)
(bad)
mov    $0x2,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   $0x43140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
or     %fs:(%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
inc    %eax
sbb    (%eax),%al
add    %dh,0x68fffe(%edi,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5c,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %bh,0x0(%edx,%ebx,1)
add    %ch,%al
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%esi),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x1a,%al
add    %al,(%eax)
adc    $0xa8,%al
(bad)
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fcompl (%edx)
add    %al,(%eax)
test   $0xa8,%al
(bad)
call   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20e00e46
js     235c6 <_IO_stdin_used+0x8266>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sbb    $0x1b,%al
add    %al,(%eax)
enter  $0xfea9,$0xff
leave
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20d00e46
xchg   %eax,%ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,0x0(%ebx,%ebx,1)
add    %bl,-0x55(%eax)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,0x1b(%eax)
add    %al,(%eax)
push   %esp
stos   %eax,%es:(%edi)
(bad)
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %ch,-0x54880000(%ebx,%ebx,1)
(bad)
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jp     2368f <_IO_stdin_used+0x832f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4a,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
hlt
sbb    (%eax),%eax
add    %ah,0x2cfffeab(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x39f59efe(%esi)
push   %cs
add    $0x46,%al
or     -0x3a(%ebx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
sbb    %bl,(%eax,%eax,1)
add    %ch,0x5cfffe(%ebx,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ch,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
sbb    $0x0,%al
add    %dl,%al
stos   %eax,%es:(%edi)
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    %ds,(%eax,%eax,1)
add    %ch,%al
stos   %eax,%es:(%edi)
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0xbffffe4(%eax)
stos   %eax,%es:(%edi)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x53f00000(%esp,%ebx,1)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %cl,%al
sbb    $0x0,%al
add    %bl,(%esp,%ebp,4)
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     237af <_IO_stdin_used+0x844f>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
sbb    $0x0,%al
add    %ch,(%eax)
lods   %ds:(%esi),%al
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
sbb    $0xac240000,%eax
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x53e00000(,%ebx,1)
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
sbb    $0xac1c0000,%eax
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ebp,%ebx,1)
add    %bl,(%eax)
lods   %ds:(%esi),%al
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x1d(%eax)
add    %al,(%eax)
adc    $0xac,%al
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp,%ebx,1)
add    %dl,(%eax)
lods   %ds:(%esi),%al
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0xc00001d(%eax)
lods   %ds:(%esi),%al
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pushf
sbb    $0xac080000,%eax
(bad)
call   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fcompl 0xace80000
(bad)
(bad)
js     2389f <_IO_stdin_used+0x853f>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff98,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   $0x1c000000
push   %ds
add    %al,(%eax)
sub    %ch,0x201fffe(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff5,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x1e880000(%eax,%eax,1),%edx
add    %al,(%eax)
int3
scas   %es:(%edi),%eax
(bad)
ljmp   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5f,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
and    %bl,(%edi)
add    %al,(%eax)
fs
mov    $0xfe,%al
call   *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb4,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
pusha
pop    %ds
add    %al,(%eax)
les    0x10bfffe(%ecx),%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7a400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    0x9400001f,%al
mov    $0xfe,%dl
jmp    *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd9,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   $0xe0000000
pop    %ds
add    %al,(%eax)
add    $0xb4,%al
(bad)
(bad)
cmp    %eax,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa6,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   %esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
and    %al,(%eax)
add    %bl,%al
mov    $0xfe,%ah
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pusha
and    %al,(%eax)
add    %ah,%ah
mov    $0xfe,%ah
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
je     23b4e <_IO_stdin_used+0x87ee>
add    %al,(%eax)
lock mov $0xfe,%ah
(bad)
cmp    $0x1,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    (%edx),%esi
add    %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %ch,-0x3ffffe0(%eax)
mov    $0xfe,%ch
decl   0x14(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x23800e46
ss
pop    %es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
and    %al,(%eax)
add    %cl,-0x36(%eax)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %eax,(%eax)
add    %dl,-0x2(%edx,%ecx,8)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%eiz,1)
add    %al,(%eax)
pusha
lret   $0xfffe
sbb    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sub    %ah,(%ecx)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
lret   $0xfffe
sbb    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cmp    $0x21,%al
add    %al,(%eax)
js     23bc4 <_IO_stdin_used+0x8864>
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x21(%eax)
add    %al,(%eax)
test   %cl,%dl
(bad)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx,%eiz,1)
add    %dl,0x24fffeca(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xa(%eax)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %al,-0x5bffffdf(%eax)
lret   $0xfffe
pop    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %bh,-0x35380000(%ecx,%eiz,1)
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
add    $0x22,%al
add    %al,(%eax)
loopne 23c8c <_IO_stdin_used+0x892c>
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
xor    %ah,(%edx)
add    %al,(%eax)
in     $0xca,%al
(bad)
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
jo     23d17 <_IO_stdin_used+0x89b7>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx,%eiz,1)
add    %al,(%eax)
lret
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
nop
and    (%eax),%al
add    %ah,(%ebx,%ecx,8)
(bad)
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff81,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
shlb   (%edx)
add    %al,(%eax)
test   %cl,%bl
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %cl,(%ebx,%eiz,1)
add    %al,(%eax)
mov    $0x42fffecb,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%esi)
outsb  %ds:(%esi),(%dx)
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %al,0x23(%eax)
add    %al,(%eax)
aam    $0xcb
(bad)
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%ebp
add    %ch,0x0(%ebx,%eiz,1)
add    %ch,%al
lret
(bad)
incl   (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x4d00e46
in     $0xa,%al
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
aad    $0xa
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
fsubl  (%ebx)
add    %al,(%eax)
mov    %cl,%ch
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
or     %al,-0x39f5aefe(%esi)
push   %cs
add    $0x46,%al
or     -0x3a(%ebx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    %ah,(%eax,%eax,1)
add    %dl,0x72fffe(%ebp,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
inc    %eax
and    $0x0,%al
add    %dl,%ah
int    $0xfe
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%esi)
or     %gs:(%esi),%cl
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
or     %al,-0x3a(%ebx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esp)
add    %ch,%al
int    $0xfe
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%esi)
push   $0xe
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,-0xbffffdc(%eax)
int    $0xfe
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0xec66804(%esi)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,%ah
and    $0x0,%al
add    %cl,(%eax)
into
(bad)
ljmp   *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff8f,0x2500e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
or     (%ecx),%eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
and    $0x25,%al
add    %al,(%eax)
loopne 23fb1 <_IO_stdin_used+0x8c51>
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
push   %cs
or     %al,-0x39f5aefe(%esi)
push   %cs
add    $0x46,%al
or     -0x3a(%ebx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
dec    %eax
and    $0xcfec0000,%eax
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp,%eiz,1)
add    %ah,%al
fdivr  %st,%st(5)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
andb   $0xfe,0xcff40000
(bad)
jl     24043 <_IO_stdin_used+0x8ce3>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
shlb   $0xfe,0xd1340000
jmp    *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffcc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
add    %ah,(%esi)
add    %al,(%eax)
and    $0xd2,%al
(bad)
decl   0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5f,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
inc    %eax
add    %al,%es:(%eax)
je     240d1 <_IO_stdin_used+0x8d71>
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffee,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
andb   $0x0,(%esi)
add    %ah,-0x2(%esp,%edx,8)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,-0x2b880000(%esi,%eiz,1)
(bad)
jmp    *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6b,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
add    $0x27,%al
add    %al,(%eax)
rcl    %ah
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
xor    %ah,(%edi)
add    %al,(%eax)
aam    $0xd4
(bad)
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ch,0x0(%edi,%eiz,1)
add    %bh,(%eax)
aad    $0xfe
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
daa
add    %al,(%eax)
mov    $0x83fffed5,%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2e,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax,%eax,1),%edx
add    %ch,%ah
daa
add    %al,(%eax)
or     %bl,%al
(bad)
lcall  *0x41000000(%ebx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
sbb    (%ecx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,0x0(%eax,%ebp,1)
add    %dl,-0x25(%eax)
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
jo     24352 <_IO_stdin_used+0x8ff2>
add    %al,(%eax)
fs
(bad)
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7d,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ch,-0x24480000(%eax,%ebp,1)
(bad)
(bad)
mov    $0x0,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff86,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
sub    %al,(%eax)
add    %bh,(%eax)
fdivr  %st,%st(6)
lcall  *0x2(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sub    $0x29,%al
add    %al,(%eax)
cwtl
fdivrp %st,%st(6)
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff86,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ch,0x0(%ecx,%ebp,1)
add    %cl,(%eax)
(bad)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7d300e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
shrb   $0x0,(%ecx)
add    %ah,(%edi,%ebx,8)
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%ah
sub    %eax,(%eax)
add    %dh,(%eax)
(bad)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
call   3c0244ce <_end+0x3bffd2ca>
(bad)
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,%ah
sub    %eax,(%eax)
add    %bh,(%eax)
(bad)
incl   0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x67400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
int    $0xa
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   %esp
sub    (%eax),%al
add    %ah,(%eax)
loopne 24511 <_IO_stdin_used+0x91b1>
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20c00e46
mov    (%edx),%cs
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
xchg   %eax,%esp
sub    (%eax),%al
add    %dl,0x4fffee0(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20d00e46
jmp    41165381 <_end+0x4113e17d>
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
aam    $0x2a
add    %al,(%eax)
pusha
loope  24591 <_IO_stdin_used+0x9231>
incl   0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x21c00e46
push   %ss
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sbb    %ch,(%ebx)
add    %al,(%eax)
pop    %esp
in     $0xfe,%al
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%edi)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %esp
sub    (%eax),%eax
add    %dh,-0x1c(%eax)
(bad)
incl   0x4(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x21800e46
movsb  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,-0x17800000(%ebx,%ebp,1)
(bad)
jmp    *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x2b,%al
add    %al,(%eax)
inc    %esp
jmp    4da4670 <_end+0x4d7d46c>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20e00e46
ja     2469a <_IO_stdin_used+0x933a>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
lock sub (%eax),%eax
add    %ah,%ah
in     (%dx),%eax
(bad)
push   %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe4,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,(%eax)
sub    $0x0,%al
add    %ah,0x106fffe(%esi,%ebp,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    %ch,(%eax,%eax,1)
add    %bl,-0x2(%edi,%ebp,8)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
sub    $0x0,%al
add    %ch,-0x11(%eax)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,%al
sub    $0x0,%al
add    %dh,-0x2(%edi,%ebp,8)
call   *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x70400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
test   %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sbb    %ch,0xeffc0000
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
inc    %esp
sub    $0xf0300000,%eax
(bad)
ljmp   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
js     24827 <_IO_stdin_used+0x94c7>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x0(%ebp,%ebp,1)
add    %ch,-0x65000110(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcd,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
lcall  $0xec3,$0x41140e0a
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dl,%ah
sub    $0xf3f00000,%eax
(bad)
(bad)
faddl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa6,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,(%esi,%ebp,1)
add    %al,(%eax)
js     248de <_IO_stdin_used+0x957e>
(bad)
lcall  *0x2(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x63600e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
scas   %es:(%edi),%al
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %al,-0x9400000(%esi,%ebp,1)
(bad)
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
bound  %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fsubrl (%esi)
add    %al,(%eax)
or     %dh,%bh
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dh,%al
add    %al,%cs:(%eax)
add    $0xf7,%al
(bad)
lcall  *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8b,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
das
add    %al,(%eax)
or     $0xf8,%al
(bad)
pushl  0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffd,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   $0x88000000
das
add    %al,(%eax)
mov    %?,%ecx
(bad)
jmp    *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x70500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
popf
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,%ah
das
add    %al,(%eax)
cmp    $0xfe,%dl
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
bound  %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
xor    %al,(%eax)
add    %cl,%al
cli
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
pusha
xor    %al,(%eax)
add    %al,%ah
cli
(bad)
incl   0x41000000(%edx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
mov    (%ecx),%es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    %al,(%eax)
add    %dl,(%eax)
std
(bad)
incl   0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x21e00e46
dec    %ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%ebp
add    %ah,%ah
xor    %al,(%eax)
add    %ah,(%eax)
add    %bh,%bh
call   *0x8(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
pop    %ds
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jae    24be6 <_IO_stdin_used+0x9886>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
sub    (%edx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   %esp
xor    %eax,(%eax)
add    %al,0x8(%eax)
(bad)
(bad)
jnp    24c19 <_IO_stdin_used+0x98b9>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20e00e46
clc
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
xchg   %eax,%esp
xor    %eax,(%eax)
add    %al,-0x2a0000f5(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x20e00e46
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax),%eax
add    %al,(%eax)
aam    $0x31
add    %al,(%eax)
and    %cl,0x302ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x22f00e46
push   $0x140e0a01
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sbb    %dh,(%edx)
add    %al,(%eax)
in     (%dx),%al
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%edx,%esi,1)
add    %al,(%eax)
clc
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,0x32(%eax)
add    %al,(%eax)
add    $0x10,%al
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x6c000000
xor    (%eax),%al
add    %bl,(%eax)
adc    %bh,%bh
jmp    *0x2(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,%al
xor    (%eax),%al
add    %bl,-0x1(%edx,%edx,1)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%ah
xor    (%eax),%al
add    %ch,0x12(%eax)
(bad)
lcall  *0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    (%eax),%eax
add    %dh,-0x1(%edx,%edx,1)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x2c000000
xor    (%eax),%eax
add    %cl,-0x360000ee(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2f,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,-0x13ffffcd(%eax)
adc    %edi,%edi
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x13f80000(%ebx,%esi,1)
(bad)
lcall  *0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,%al
xor    (%eax),%eax
add    %al,(%esp,%edx,1)
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0xec000000
xor    (%eax),%eax
add    %bl,(%eax)
adc    $0xff,%al
dec    %ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2f,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,0x34(%eax)
add    %al,(%eax)
jl     24f2b <_IO_stdin_used+0x9bcb>
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esp,%esi,1)
add    %cl,0x1dffff15(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,-0x6bffffcc(%eax)
adc    $0x13ffff,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
xor    $0x0,%al
add    %ah,0x37ffff15(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0xc0000000
xor    $0x0,%al
add    %dh,0x1d9ffff(%ebp,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x40,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
sub    $0x35,%al
add    %al,(%eax)
sub    %dl,(%edi)
(bad)
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
fs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,0x0(%ebp,%esi,1)
add    %bh,(%eax)
pop    %ss
(bad)
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x46,(%ebx)
push   %cs
nop
add    %eax,(%edx)
xchg   %cl,(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebp),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    %dh,0x17ac0000
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
(bad)
xor    $0x17c40000,%eax
(bad)
(bad)
mov    $0x0,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%esi),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%al
xor    $0x184c0000,%eax
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%esi,%esi,1)
add    %al,(%eax)
dec    %eax
sbb    %bh,%bh
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,%ss:(%eax)
inc    %esp
sbb    %bh,%bh
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%esi,%esi,1)
add    %al,(%eax)
inc    %eax
sbb    %bh,%bh
incl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x36(%eax)
add    %al,(%eax)
cmp    $0x18,%al
(bad)
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi,%esi,1)
add    %ah,0x18(%eax)
(bad)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,-0x7bffffca(%eax)
sbb    %bh,%bh
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %dh,0xe(%edx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
mov    $0xc1000036,%esp
lret
std
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %bl,%al
add    %al,%ss:(%eax)
jl     251ae <_IO_stdin_used+0x9e4e>
(bad)
(bad)
out    %eax,(%dx)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2700e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
add    %cx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
out    %eax,$0x2
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
dec    %eax
aaa
add    %al,(%eax)
cld
and    %bh,%bh
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     25265 <_IO_stdin_used+0x9f05>
add    %al,(%eax)
add    %ah,(%ebx)
(bad)
incl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x0(%eax)
add    %al,(%eax)
mov    %dh,(%edi)
add    %al,(%eax)
cld
and    %bh,%bh
lcall  *0x6(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e4e
sbb    %eax,(%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
dec    %ebx
add    (%edx),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,%ah
aaa
add    %al,(%eax)
inc    %eax
sub    %edi,%edi
incl   0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
sbb    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,(%eax,%edi,1)
add    %al,(%eax)
cmp    %ch,(%ebx)
(bad)
call   *0x4(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
xchg   %eax,%esp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
jg     2534c <_IO_stdin_used+0x9fec>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,0x2f280000(%eax,%edi,1)
(bad)
incl   0x0(%ecx,%ecx,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e51
xor    (%edx,%ecx,1),%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
(bad)
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    $0xa,%ch
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%ebp
add    %bl,(%ecx,%edi,1)
add    %al,(%eax)
or     %bh,(%eax)
(bad)
call   *0x2(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x2600e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
add    (%ecx),%eax
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
dec    %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
mov    %?,(%ecx)
add    %al,(%eax)
clc
cmp    %edi,%edi
call   *0xc(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e51
xor    (%ebx),%eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
scas   %es:(%edi),%al
add    (%edx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
jo     2549e <_IO_stdin_used+0xa13e>
add    %al,(%eax)
call   fc0254de <_end+0xfbffe2da>
inc    %ebp
(bad)
call   *0x14
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2d00e51
and    0x41140e0a,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
(bad)
or     $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
adc    %eax,(%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x0(%edx,%edi,1)
add    %ch,0x52ffff59(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0xb4000000
cmp    (%eax),%al
add    %dh,0x24ffff5a(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
and    %bh,(%ebx)
add    %al,(%eax)
je     25639 <_IO_stdin_used+0xa2d9>
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     25603 <_IO_stdin_used+0xa2a3>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    2563a <_IO_stdin_used+0xa2da>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,0x5c680000(%ebx,%edi,1)
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,%al
cmp    (%eax),%eax
add    %bl,0x2ffff(%esp,%ebx,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
fdivrl (%ebx)
add    %al,(%eax)
cwtl
pop    %esp
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
loopne 26872 <_IO_stdin_used+0xb512>
nop
and    %al,(%eax)
add    %al,(%eax)
fnsave 0x212000(%ecx,%eax,1)
add    %ah,%dl
mov    $0x1,%ah
add    %bl,%ch
mov    $0x1,%ah
add    %ch,0x0(%eax)
add    %al,(%eax)
rolb   $0x0,%es:(%ecx)
push   %esi
add    %al,(%eax)
add    %ah,-0xffffe3e(%edi)
and    %eax,(%eax)
add    %ch,(%esi)
mov    $0x1,%ch
add    %cl,0x1(%ebp,%esi,4)
add    %dh,%al
and    %eax,(%eax)
add    %dl,-0x4b(%edx)
add    %eax,(%eax)
jg     26882 <_IO_stdin_used+0xb522>
add    %eax,(%eax)
andb   $0x0,(%eax,%eax,1)
test   %edi,0x1(%eax)
add    %al,(%eax)
lcall  $0x0,$0x1b8
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
mov    0x1b8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
mov    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jbe    2690e <_IO_stdin_used+0xb5ae>
add    %al,(%eax)
rolb   $0x0,%es:(%ecx)
push   %esi
add    %al,(%eax)
add    %ch,0x1b8(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
fnsave 0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
adc    0x29500001(%edx),%bh
add    %al,(%eax)
sbb    %edi,0x1(%edx)
add    %al,(%eax)
rolb   $0x0,%es:(%ecx)
push   %esi
add    %al,(%eax)
add    %bl,%ch
mov    $0x1,%ah
add    %ch,0x0(%eax)
add    %al,(%eax)
push   %edx
or     (%edx),%al
add    %dl,0x34(%eax)
add    %al,(%eax)
add    %al,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    0x1(%edi),%bh
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
popa
add    %al,(%eax)
add    %al,-0x41(%ecx)
add    %eax,(%eax)
add    %al,%fs:(%eax)
add    %cl,-0x41(%ebp)
add    %eax,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,%dh
mov    $0x1,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jo     269de <_IO_stdin_used+0xb67e>
add    %al,(%eax)
ret    $0x1be
add    %ch,0x0(%esi)
add    %al,(%eax)
pop    %ss
rolb   $0x0,(%ecx)
xor    %al,(%eax)
add    %al,(%eax)
sbb    $0xc0,%al
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
add    %al,(%eax)
add    %ah,(%edx)
rolb   $0x0,(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
imul   $0x0,(%eax),%eax
add    %ch,(%esi)
rolb   $0x0,(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
rolb   $0x0,%es:(%ecx)
push   %esi
add    %al,(%eax)
add    %bl,%ch
mov    $0x1,%ah
add    %ch,0x0(%eax)
add    %al,(%eax)
xor    %edx,%eax
add    %eax,(%eax)
mov    0x3c000044,%al
ret    $0x1
mov    %es,%edx
add    %eax,(%eax)
popa
add    %al,(%eax)
add    %dl,0x1c2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
push   %esp
ret    $0x1
add    $0x68000000,%eax
ret    $0x1
push   %edx
add    %al,(%eax)
add    %dh,-0x3e(%esi)
add    %eax,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x1,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
imul   $0xc2900000,(%eax),%eax
add    %eax,(%eax)
imul   $0xc29e0000,(%eax),%eax
add    %eax,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
lcall  $0x0,$0x1b8
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
lods   %ds:(%esi),%al
ret    $0x1
add    (%eax),%al
add    %al,(%eax)
mov    $0x1c2,%ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %cl,%ah
ret    $0x1
inc    %esp
add    %al,(%eax)
add    %bl,%cl
ret    $0x1
arpl   %ax,(%eax)
add    %al,(%eax)
in     $0xc2,%al
add    %eax,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
lock ret $0x1
add    $0x0,%al
add    %al,(%eax)
add    %eax,%ebx
add    %eax,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %bl,%al
add    %eax,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %bl,(%edx)
ret
add    %eax,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ch,%cl
ret    $0x1
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
add    %al,(%eax)
add    %bl,(%edi)
ret
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %ah,(%edx)
rolb   $0x0,(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
add    %al,(%eax)
add    %ah,0x1b8(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
daa
ret
add    %eax,(%eax)
jno    26bee <_IO_stdin_used+0xb88e>
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
mov    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jbe    26bfe <_IO_stdin_used+0xb89e>
add    %al,(%eax)
rolb   $0x0,%es:(%ecx)
push   %esi
add    %al,(%eax)
add    %bl,%ch
mov    $0x1,%ah
add    %ch,0x0(%eax)
add    %al,(%eax)
rcl    %dl
add    %eax,(%eax)
nop
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
aam    $0xd5
add    %eax,(%eax)
push   %eax
imul   $0x0,(%eax),%eax
in     $0xd5,%al
add    %eax,(%eax)
jo     26cbc <_IO_stdin_used+0xb95c>
add    %al,(%eax)
repnz aad $0x1
add    %al,-0x80(%eax)
add    %al,(%eax)
add    $0xd6,%al
add    %eax,(%eax)
inc    %eax
add    %al,%gs:(%eax)
adc    $0xd6,%al
add    %eax,(%eax)
inc    %eax
bound  %eax,(%eax)
add    %ah,(%esi,%edx,8)
add    %eax,(%eax)
mov    $0x7e,%al
add    %al,(%eax)
cmp    %dl,%dh
add    %eax,(%eax)
and    %bh,0x0(%esi)
add    %cl,0x1(%esi,%edx,8)
add    %al,(%eax)
arpl   %ax,(%eax)
add    %bl,0x1(%esi,%edx,8)
add    %dh,(%eax)
addl   $0x0,(%eax)
arpl   %dx,%si
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    %es,%edx
add    %eax,(%eax)
popa
add    %al,(%eax)
add    %bh,-0x2a(%ecx)
add    %eax,(%eax)
inc    %ecx
add    %al,(%eax)
add    %ch,(%esi)
rolb   $0x0,(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
jmp    1026e97 <_end+0xfffc93>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
jg     26cb8 <_IO_stdin_used+0xb958>
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
add    %al,(%eax)
add    %al,0x10001d6(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
nop
(bad)
add    %eax,(%eax)
add    %al,%gs:(%eax)
add    %bl,0x1d6(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
daa
ret
add    %eax,(%eax)
jno    26d2e <_IO_stdin_used+0xb9ce>
add    %al,(%eax)
test   $0x1d6,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
mov    $0x1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jbe    26d4e <_IO_stdin_used+0xb9ee>
add    %al,(%eax)
sbb    %bl,%al
add    %eax,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,(%edx)
ret
add    %eax,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ch,0x10001d6(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    $0x1d6,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
rcl    $0x1,%esi
add    %ch,0x0(%ebp)
add    %al,(%eax)
rolb   $0x0,%es:(%ecx)
push   %esi
add    %al,(%eax)
add    %bl,%ch
mov    $0x1,%ah
add    %ch,0x0(%eax)
add    %al,(%eax)
jb     26dcf <_IO_stdin_used+0xba6f>
add    %eax,(%eax)
shrb   $0x1,-0x3e00000(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x3(%edi)
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ch,0x10001b9(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
fnsave 0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
inc    %esp
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
cmp    %ch,0x2(%esi)
add    %ch,(%esi,%ebp,2)
add    (%eax),%al
push   %esp
(bad)
add    %eax,(%eax)
mov    $0xac,%al
add    %al,(%eax)
xchg   %bh,%ch
add    %eax,(%eax)
mov    %al,0x100001fd
lods   %ds:(%esi),%eax
add    %al,(%eax)
jo     26e3e <_IO_stdin_used+0xbade>
add    %eax,(%eax)
stos   %eax,%es:(%edi)
std
add    %eax,(%eax)
inc    %eax
lods   %ds:(%esi),%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cld
add    %eax,(%eax)
cli
std
add    %eax,(%eax)
add    (%eax),%eax
add    %al,(%eax)
rcl    %dl
add    %eax,(%eax)
pop    %ss
roll   %cl,(%ecx)
add    %ah,%ah
aad    $0x1
add    %dl,-0x29ebffff(%edi,%edi,8)
add    %eax,(%eax)
xchg   %eax,%esp
incl   (%ecx)
add    %cl,(%eax)
rolb   %cl,(%ecx)
add    %dl,(%edi)
roll   %cl,(%ecx)
add    %al,0x67(%eax)
add    %eax,(%eax)
adc    %ah,0x1(%edi)
add    %dl,%bl
adc    %eax,(%edx)
add    %dl,%bh
adc    %eax,(%edx)
add    %bl,%ah
adc    %eax,(%edx)
add    %ah,%al
adc    %eax,(%edx)
add    %ah,%ah
adc    %eax,(%edx)
add    %ch,%cl
adc    %eax,(%edx)
add    %dh,%al
adc    %eax,(%edx)
add    %dh,%bh
adc    %eax,(%edx)
add    %bh,%dh
adc    %eax,(%edx)
add    %al,0xc000212
adc    (%edx),%al
add    %dl,(%eax)
adc    (%edx),%al
add    %bh,0x68c80002(%eax,%ebp,2)
add    (%eax),%al
push   %eax
imul   $0x2699000,(%edx),%eax
add    %ah,0x6a(%eax)
add    (%eax),%al
nop
insb   (%dx),%es:(%edi)
add    (%eax),%al
pusha
push   $0x68b00002
add    (%eax),%al
shrb   0x2(%ebp)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
call   d026f13 <_end+0xcfffd0f>
add    %al,(%eax)
add    %al,0x1(%ebx,%esi,4)
add    %bl,(%ecx)
add    %al,(%eax)
add    %dl,0x68(%eax)
add    (%eax),%al
sbb    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
push   %esp
push   $0x1c0002
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0x8c000000
or     %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %cl,%ah
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%ebx)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
jo     26f5d <_IO_stdin_used+0xbbfd>
add    %al,(%edx)
add    %al,(%eax)
add    %dh,%al
add    (%eax),%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bh,%al
adc    (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %dh,0xe(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,0x130000
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x40(%edi)
or     $0xffff0000,%eax
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x18(%edi)
or     $0x0,%al
add    %bh,%dl
(bad)
ljmp   *-0x59(%edi)
sbbb   $0x0,0x0
in     (%dx),%al
outsb  %ds:(%esi),(%dx)
add    (%eax),%al
es
pop    %ss
add    %al,(%eax)
ss
pop    %ss
add    %al,(%eax)
inc    %esi
pop    %ss
add    %al,(%eax)
push   %esi
pop    %ss
add    %al,(%eax)
popw   %ss
add    %al,(%eax)
jbe    27039 <_IO_stdin_used+0xbcd9>
add    %al,(%eax)
xchg   %dl,(%edi)
add    %al,(%eax)
xchg   %eax,%esi
pop    %ss
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
pop    %ss
add    %al,(%eax)
mov    $0x17,%dh
add    %al,(%eax)
(bad)
pop    %ss
add    %al,(%eax)
(bad)
pop    %ss
add    %al,(%eax)
out    %al,$0x17
add    %al,(%eax)
notb   (%edi)
add    %al,(%eax)
push   %es
sbb    %al,(%eax)
add    %dl,(%esi)
sbb    %al,(%eax)
add    %ah,(%esi)
sbb    %al,(%eax)
add    %dh,(%esi)
sbb    %al,(%eax)
add    %al,0x18(%esi)
add    %al,(%eax)
push   %esi
sbb    %al,(%eax)
add    %ah,0x18(%esi)
add    %al,(%eax)
jbe    2707a <_IO_stdin_used+0xbd1a>
add    %al,(%eax)
xchg   %bl,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
sbb    %al,(%eax)
add    %ah,-0x49ffffe8(%esi)
sbb    %al,(%eax)
add    %al,%dh
sbb    %al,(%eax)
add    %dl,%dh
sbb    %al,(%eax)
add    %ah,%dh
sbb    %al,(%eax)
add    %dh,%dh
sbb    %al,(%eax)
add    %al,(%esi)
sbb    %eax,(%eax)
add    %dl,(%esi)
sbb    %eax,(%eax)
add    %ah,(%esi)
sbb    %eax,(%eax)
add    %dh,(%esi)
sbb    %eax,(%eax)
add    %al,0x19(%esi)
add    %al,(%eax)
push   %esi
sbb    %eax,(%eax)
add    %ah,0x19(%esi)
add    %al,(%eax)
jbe    270bb <_IO_stdin_used+0xbd5b>
add    %al,(%eax)
xchg   %bl,(%ecx)
add    %al,(%eax)
xchg   %eax,%esi
sbb    %eax,(%eax)
add    %ah,-0x49ffffe7(%esi)
sbb    %eax,(%eax)
add    %al,%dh
sbb    %eax,(%eax)
add    %dl,%dh
sbb    %eax,(%eax)
add    %ah,%dh
sbb    %eax,(%eax)
add    %dh,%dh
sbb    %eax,(%eax)
add    %al,(%esi)
sbb    (%eax),%al
add    %dl,(%esi)
sbb    (%eax),%al
add    %ah,(%esi)
sbb    (%eax),%al
add    %dh,(%esi)
sbb    (%eax),%al
add    %al,0x1a(%esi)
add    %al,(%eax)
push   %esi
sbb    (%eax),%al
add    %ah,0x1a(%esi)
add    %al,(%eax)
jbe    270fc <_IO_stdin_used+0xbd9c>
add    %al,(%eax)
xchg   %bl,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
sbb    (%eax),%al
add    %ah,-0x49ffffe6(%esi)
sbb    (%eax),%al
add    %al,%dh
sbb    (%eax),%al
add    %dl,%dh
sbb    (%eax),%al
add    %ah,%dh
sbb    (%eax),%al
add    %dh,%dh
sbb    (%eax),%al
add    %al,(%esi)
sbb    (%eax),%eax
add    %dl,(%esi)
sbb    (%eax),%eax
add    %ah,(%esi)
sbb    (%eax),%eax
add    %dh,(%esi)
sbb    (%eax),%eax
add    %al,0x1b(%esi)
add    %al,(%eax)
push   %esi
sbb    (%eax),%eax
add    %ah,0x1b(%esi)
add    %al,(%eax)
jbe    2713d <_IO_stdin_used+0xbddd>
add    %al,(%eax)
xchg   %bl,(%ebx)
add    %al,(%eax)
xchg   %eax,%esi
sbb    (%eax),%eax
add    %ah,-0x49ffffe5(%esi)
sbb    (%eax),%eax
add    %al,%dh
sbb    (%eax),%eax
add    %dl,%dh
sbb    (%eax),%eax
add    %ah,%dh
sbb    (%eax),%eax
add    %dh,%dh
sbb    (%eax),%eax
add    %al,(%esi)
sbb    $0x0,%al
add    %dl,(%esi)
sbb    $0x0,%al
add    %ah,(%esi)
sbb    $0x0,%al
add    %dh,(%esi)
sbb    $0x0,%al
add    %al,0x1c(%esi)
add    %al,(%eax)
push   %esi
sbb    $0x0,%al
add    %ah,0x1c(%esi)
add    %al,(%eax)
jbe    2717e <_IO_stdin_used+0xbe1e>
add    %al,(%eax)
xchg   %bl,(%eax,%eax,1)
add    %dl,-0x59ffffe4(%esi)
sbb    $0x0,%al
add    %dh,-0x39ffffe4(%esi)
sbb    $0x0,%al
add    %dl,%dh
sbb    $0x0,%al
add    %ah,%dh
sbb    $0x0,%al
add    %dh,%dh
sbb    $0x0,%al
test   %dh,0x2(%ecx)
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
(bad)
add    %dl,%bl
(bad)
add    %eax,(%eax)
loope  27178 <_IO_stdin_used+0xbe18>
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
incl   %fs:(%ecx)
add    %dh,0x1(%edi,%edi,8)
add    %al,0x1(%edi,%edi,8)
imul   $0x64,0x6f(%ebp),%ebp
add    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%ebp
xor    %cl,%bl
repz
