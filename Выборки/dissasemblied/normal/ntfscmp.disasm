das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bh,-0x4(%ecx,%edx,1)
push   %ebx
lret
insb   (%dx),%es:(%edi)
sahf
inc    %ecx
adc    0x16(%esi),%eax
add    %cl,-0x5f(%ebp)
(bad)
(bad)
popa
gs
.byte 0x63
dec    %edx
add    (%eax),%eax
add    %al,(%eax)
add    %al,%ds:(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %ch,0x4012000(%esi)
in     $0x41,%al
sub    %edi,(%esi)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
inc    %edi
add    %al,(%eax)
add    %al,0x45(%edx)
aad    $0xec
mov    $0x427c92e3,%ebx
pop    %ecx
movsl  %ds:(%esi),%es:(%edi)
xlat   %ds:(%ebx)
lods   %ds:(%esi),%al
dec    %ebx
jecxz  1a0 <_init-0xbf8>
pop    %eax
call   71d8eed3 <_end+0x71d85a93>
pop    %eax
sbb    $0xb0,%al
fmuls  -0x34(%ebp)
push   $0x7f
lcall  $0xeb0e,$0xf18db97c
shr    %cl,%edi
push   %cs
out    %eax,$0x1
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
mov    %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jecxz  23a <_init-0xb5e>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %cs
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%al
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax,%eax,1)
add    %dl,(%ecx)
add    %al,(%eax)
add    %cl,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    (%eax),%al
add    %dl,(%ecx)
add    %al,(%eax)
add    %dh,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%edx),%eax
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
add    %ds:(%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %al,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
add    (%eax),%al
add    %ah,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loop   38c <_init-0xa0c>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
bound  %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jno    4ac <_init-0x8ec>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sgdtl  (%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
add    %eax,%es:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
imul   $0x0,(%ecx),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edi
add    (%eax),%eax
add    %ah,(%eax)
nop
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
bound  %eax,(%ebx)
add    %al,(%eax)
inc    %eax
xchg   %eax,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
add    (%bx,%si),%eax
add    %bl,(%eax)
nop
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
or     %eax,(%edx)
add    %al,(%eax)
fmull  0x0(%edi)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
jo     61d <_init-0x77b>
add    %al,(%eax)
fmuls  0x0(%edi)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
lldt   0x3(%esi)
add    %al,(%eax)
and    %dl,0x0(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
ja     63d <_init-0x75b>
add    %al,(%eax)
sbb    $0x90,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
sub    (%ebx),%eax
add    %al,(%eax)
and    %dl,(%edx)
add    %al,(%eax)
int    $0xd
add    %al,(%eax)
adc    (%eax),%al
or     $0x16500,%eax
add    %bl,0xd(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%ebx)
add    %dl,0x1(%edx)
add    %al,(%eax)
les    0x0(%edi),%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%esi)
add    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     6e5 <_init-0x6b3>
jae    6ae <_init-0x6ea>
xor    0x2e(%edi),%esp
jae    6f5 <_init-0x6a3>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %bl,0x49(%edi)
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     6f9 <_init-0x69f>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    724 <_init-0x674>
popa
jb     727 <_init-0x671>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    719 <_init-0x67f>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    73a <_init-0x65e>
gs
jae    6ca <_init-0x6ce>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     736 <_init-0x662>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
je     74d <_init-0x64b>
jae    748 <_init-0x650>
popa
je     760 <_init-0x638>
jb     74d <_init-0x64b>
arpl   %bp,0x73(%edi,%ebp,2)
add    %al,%gs:0x54(%ecx)
pop    %edi
push   %ebp
dec    %esi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
inc    %esp
add    %ch,0x74(%esi)
data16
jae    763 <_init-0x635>
imul   $0x6f5f6564,0x6f(%esi),%ebp
jo     772 <_init-0x626>
outsb  %ds:(%esi),(%dx)
add    %ch,0x74(%esi)
data16
jae    773 <_init-0x625>
insl   (%dx),%es:(%edi)
jae    78b <_init-0x60d>
pop    %edi
jo     789 <_init-0x60f>
jae    790 <_init-0x608>
pop    %edi
jb     784 <_init-0x614>
popa
fs
pop    %edi
imul   $0x70,0x75(%eax),%di
outsb  %ds:(%esi),(%dx)
je     791 <_init-0x607>
jae    78c <_init-0x60c>
popa
je     7a4 <_init-0x5f4>
jb     791 <_init-0x607>
jo     7a9 <_init-0x5ef>
je     795 <_init-0x603>
jae    79d <_init-0x5fb>
popa
jb     79e <_init-0x5fa>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    7a5 <_init-0x5f3>
popa
je     7bd <_init-0x5db>
jb     7aa <_init-0x5ee>
imul   $0x695f,0x64(%esi),%bp
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
je     7ca <_init-0x5ce>
jb     7bc <_init-0x5dc>
gs
data16
add    %ch,0x74(%esi)
data16
jae    7bf <_init-0x5d9>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
jb     7cb <_init-0x5cd>
imul   $0x6e007463,%fs:0x65(%edx),%esi
je     7d6 <_init-0x5c2>
jae    7d1 <_init-0x5c7>
insl   (%dx),%es:(%edi)
bound  %esi,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jne    7dc <_init-0x5bc>
jae    77b <_init-0x61d>
outsb  %ds:(%esi),(%dx)
je     7e4 <_init-0x5b4>
jae    7df <_init-0x5b9>
jne    7ef <_init-0x5a9>
outsl  %ds:(%esi),(%dx)
jne    7f3 <_init-0x5a5>
je     787 <_init-0x611>
outsb  %ds:(%esi),(%dx)
je     7f0 <_init-0x5a8>
jae    7eb <_init-0x5ad>
imul   $0x625f6564,0x6f(%esi),%ebp
popa
arpl   %bp,%fs:0x73(%ebp,%esi,2)
pop    %edi
bound  %esp,0x64(%ecx)
add    %ch,0x74(%esi)
data16
jae    802 <_init-0x596>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    813 <_init-0x585>
add    %ch,0x74(%esi)
data16
jae    813 <_init-0x585>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsb  %ds:(%esi),(%dx)
je     824 <_init-0x574>
jae    81f <_init-0x579>
popa
je     837 <_init-0x561>
jb     824 <_init-0x574>
outsl  %ds:(%esi),(%dx)
jo     82d <_init-0x56b>
outsb  %ds:(%esi),(%dx)
add    %bl,0x66(%edi)
imul   $0x66746e00,0x69(%esi),%ebp
jae    834 <_init-0x564>
jne    83a <_init-0x55e>
jae    847 <_init-0x551>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %bl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x5f736674,0x6e(%eax,%eax,1),%esi
popa
je     85f <_init-0x539>
jb     84c <_init-0x54c>
addr16
gs
je     850 <_init-0x548>
jae    858 <_init-0x540>
popa
jb     859 <_init-0x53f>
push   $0x7874635f
add    %ch,0x74(%esi)
data16
jae    860 <_init-0x538>
popa
je     878 <_init-0x520>
jb     865 <_init-0x533>
jb     86d <_init-0x52b>
popa
fs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ch,0x74(%esi)
data16
jae    872 <_init-0x526>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    885 <_init-0x513>
je     819 <_init-0x57f>
dec    %esi
push   %esp
inc    %esi
push   %ebx
pop    %edi
dec    %ecx
dec    %esi
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
dec    %ecx
xor    (%eax),%esi
add    %ch,0x74(%esi)
data16
jae    88c <_init-0x50c>
popa
je     8a4 <_init-0x4f4>
jb     891 <_init-0x507>
jo     8a6 <_init-0x4f2>
gs
popa
add    %ch,%fs:0x74(%esi)
data16
jae    89c <_init-0x4fc>
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x6e756f6d,0x5f(%esi),%esp
je     8b1 <_init-0x4e7>
add    %ch,%fs:0x74(%esi)
data16
jae    8b2 <_init-0x4e6>
popa
je     8ca <_init-0x4ce>
jb     8b7 <_init-0x4e1>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x0,0x70(%ebp),%esi
outsb  %ds:(%esi),(%dx)
je     8c8 <_init-0x4d0>
jae    8c3 <_init-0x4d5>
push   $0x656d6f
outsb  %ds:(%esi),(%dx)
je     8d2 <_init-0x4c6>
jae    8cd <_init-0x4cb>
jne    8d3 <_init-0x4c5>
jae    8e6 <_init-0x4b2>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8fb <_init-0x49d>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    908 <_init-0x490>
push   $0x705f5f00
jb     905 <_init-0x493>
outsb  %ds:(%esi),(%dx)
je     905 <_init-0x493>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x78(%ebp)
imul   $0x6f6c7465,0x73(%eax,%eax,1),%esi
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x70(%edi)
je     920 <_init-0x478>
outsb  %ds:(%esi),(%dx)
add    %bl,%fs:0x5f(%edi)
jae    932 <_init-0x466>
jb     924 <_init-0x474>
jne    932 <_init-0x466>
add    %dh,0x65(%eax)
jb     939 <_init-0x45f>
outsl  %ds:(%esi),(%dx)
jb     8ca <_init-0x4ce>
jo     941 <_init-0x457>
je     931 <_init-0x467>
push   $0x72007261
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    950 <_init-0x448>
jb     952 <_init-0x446>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
gs
jb     960 <_init-0x438>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %bp,0x70(%ebp)
add    %ah,0x70(%ebp,%esi,2)
xor    (%eax),%al
pop    %edi
pop    %edi
data16
jo     97d <_init-0x41b>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     97b <_init-0x41d>
outsl  %ds:(%esi),(%dx)
jne    98e <_init-0x40a>
add    %ah,0x70(%esi)
jne    993 <_init-0x405>
arpl   %ax,(%eax)
data16
jo     999 <_init-0x3ff>
je     999 <_init-0x3ff>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
js     9a5 <_init-0x3f3>
je     995 <_init-0x403>
je     96c <_init-0x42c>
xor    $0x0,%al
jae    9ae <_init-0x3ea>
fs
gs
jb     9b0 <_init-0x3e8>
add    %bl,0x5f(%edi)
jae    9b1 <_init-0x3e7>
jo     9b7 <_init-0x3e1>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     9c1 <_init-0x3d7>
jo     9c8 <_init-0x3d0>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x77(%bp)
jb     9c7 <_init-0x3d1>
je     9c5 <_init-0x3d3>
add    %dh,0x74(%ebx)
jb     9c8 <_init-0x3d0>
push   $0x5f5f0072
jbe    9d2 <_init-0x3c6>
jo     9e0 <_init-0x3b8>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x5f,(%eax),%eax
pop    %edi
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     9ea <_init-0x3ae>
add    %dh,0x74(%ebx)
jb     9ed <_init-0x3ab>
insl   (%dx),%es:(%edi)
jo     98d <_init-0x40b>
jae    a03 <_init-0x395>
jb     9f6 <_init-0x3a2>
jb     a05 <_init-0x393>
outsl  %ds:(%esi),(%dx)
jb     996 <_init-0x402>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     a16 <_init-0x382>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72706e73,0x0(%esi),%ebp
imul   $0x72660066,0x74(%esi),%ebp
gs add %bl,%gs:0x5f(%edi)
jae    a2e <_init-0x36a>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x74616465,0x5f(%eax,%eax,1),%ebp
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    a4a <_init-0x34e>
popa
jb     a4d <_init-0x34b>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x74(%esi)
data16
jae    a43 <_init-0x355>
addr16 jo a53 <_init-0x345>
add    %bl,0x66(%edi)
jo     a4b <_init-0x34d>
push   $0x746e0077
data16
jae    a53 <_init-0x345>
bound  %esi,0x67(%ebp)
jae    9f9 <_init-0x39f>
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    $0x2000200,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
add    $0x1ff00,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x60000,0xd(%ecx),%ebp
addl   $0x100000,(%ebx)
add    %al,(%eax)
jae    b01 <_init-0x297>
imul   $0x50000,(%ecx),%ecx
mov    (%ebx),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x397,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
je     b1b <_init-0x27d>
imul   $0x30000,(%ecx),%ecx
mov    0x10000003,%eax
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
lods   %ds:(%esi),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
pop    %eax
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebp,%ecx,4)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,0x800008d(%eax)
add    %al,(%eax)
add    %dl,0x800008d(%eax)
add    %al,(%eax)
add    %ah,0x800008d(%eax)
add    %al,(%eax)
add    %al,%al
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %al,%ah
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,%al
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,%ah
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%al
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %dl,%ah
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%al
lea    (%eax),%eax
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,%ah
popl   (%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax,%edx,4)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
sbb    %dl,0x80000(%eax)
add    %al,(%eax)
sbb    $0x90,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
mov    $0x600008f,%eax
add    %eax,(%eax)
add    %bh,0x9060000(%edi,%ecx,4)
add    %al,(%eax)
rorb   $0x0,0xa060000(%edi)
add    %al,%ah
popl   (%eax)
add    %al,(%esi)
or     $0x8fc80000,%eax
add    %al,(%eax)
push   %es
adc    (%eax),%eax
add    %cl,%ah
popl   (%eax)
add    %al,(%esi)
adc    $0x8fd00000,%eax
add    %al,(%eax)
push   %es
pop    %ss
add    %al,(%eax)
aam    $0x8f
add    %al,(%eax)
push   %es
and    %al,(%eax)
add    %bl,%al
popl   (%eax)
add    %al,(%esi)
add    %al,%cs:(%eax)
loopne b79 <_init-0x21f>
add    %al,(%eax)
push   %es
xor    $0x0,%al
add    %ah,%ah
popl   (%eax)
add    %al,(%esi)
cmp    %al,(%eax)
call   7000c8b <_end+0x6ff784b>
add    (%eax),%al
add    %ch,%ah
mov    (%eax),%es
add    %al,(%edi)
add    (%eax),%eax
add    %dh,%al
mov    (%eax),%es
add    %al,(%edi)
add    $0x0,%al
add    %dh,%ah
mov    (%eax),%es
add    %al,(%edi)
add    $0x8ef80000,%eax
add    %al,(%eax)
pop    %es
push   %es
add    %al,(%eax)
cld
mov    (%eax),%es
add    %al,(%edi)
pop    %es
add    %al,(%eax)
add    %cl,0x8070000(%edi)
add    %al,(%eax)
add    $0x8f,%al
add    %al,(%eax)
pop    %es
or     (%eax),%eax
add    %cl,(%eax)
popl   (%eax)
add    %al,(%edi)
or     $0x0,%al
add    %cl,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
adc    %cl,0xf070000(%edi)
add    %al,(%eax)
adc    $0x8f,%al
add    %al,(%eax)
pop    %es
adc    %al,(%eax)
add    %bl,(%eax)
popl   (%eax)
add    %al,(%edi)
adc    %eax,(%eax)
add    %bl,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
adc    (%eax),%al
add    %ah,(%eax)
popl   (%eax)
add    %al,(%edi)
adc    $0x0,%al
add    %ah,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
sub    %cl,0x17070000(%edi)
add    %al,(%eax)
sub    $0x8f,%al
add    %al,(%eax)
pop    %es
sbb    %al,(%eax)
add    %dh,(%eax)
popl   (%eax)
add    %al,(%edi)
sbb    %eax,(%eax)
add    %dh,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
sbb    (%eax),%al
add    %bh,(%eax)
popl   (%eax)
add    %al,(%edi)
sbb    (%eax),%eax
add    %bh,(%edi,%ecx,4)
add    %al,(%eax)
pop    %es
sbb    $0x0,%al
add    %al,-0x71(%eax)
add    %al,(%eax)
pop    %es
sbb    $0x8f440000,%eax
add    %al,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
dec    %eax
popl   (%eax)
add    %al,(%edi)
pop    %ds
add    %al,(%eax)
dec    %esp
popl   (%eax)
add    %al,(%edi)
and    %al,(%eax)
add    %dl,-0x71(%eax)
add    %al,(%eax)
pop    %es
and    %eax,(%eax)
add    %dl,0x0(%edi,%ecx,4)
add    %al,(%edi)
and    (%eax),%al
add    %bl,-0x71(%eax)
add    %al,(%eax)
pop    %es
and    (%eax),%eax
add    %bl,0x0(%edi,%ecx,4)
add    %al,(%edi)
and    $0x0,%al
add    %ah,-0x71(%eax)
add    %al,(%eax)
pop    %es
and    $0x8f640000,%eax
add    %al,(%eax)
pop    %es
add    %al,%es:(%eax)
push   $0x700008f
daa
add    %al,(%eax)
insb   (%dx),%es:(%edi)
popl   (%eax)
add    %al,(%edi)
sub    %al,(%eax)
add    %dh,-0x71(%eax)
add    %al,(%eax)
pop    %es
sub    %eax,(%eax)
add    %dh,0x0(%edi,%ecx,4)
add    %al,(%edi)
sub    (%eax),%al
add    %bh,-0x71(%eax)
add    %al,(%eax)
pop    %es
sub    (%eax),%eax
add    %bh,0x0(%edi,%ecx,4)
add    %al,(%edi)
sub    $0x0,%al
add    %al,0x700008f(%eax)
sub    $0x8f840000,%eax
add    %al,(%eax)
pop    %es
das
add    %al,(%eax)
mov    %cl,0x30070000(%edi)
add    %al,(%eax)
mov    %cs,0x31070000(%edi)
add    %al,(%eax)
nop
popl   (%eax)
add    %al,(%edi)
xor    (%eax),%al
add    %dl,0x33070000(%edi,%ecx,4)
add    %al,(%eax)
cwtl
popl   (%eax)
add    %al,(%edi)
xor    $0x8f9c0000,%eax
add    %al,(%eax)
pop    %es
add    %al,%ss:(%eax)
mov    0x700008f,%al
aaa
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
popl   (%eax)
add    %al,(%edi)
cmp    %eax,(%eax)
add    %ch,0x700008f(%eax)
cmp    (%eax),%al
add    %ch,0x3b070000(%edi,%ecx,4)
add    %al,(%eax)
mov    $0x8f,%al
add    %al,(%eax)
pop    %es
cmp    $0x0,%al
add    %dh,0x3d070000(%edi,%ecx,4)
push   %ebx
sub    $0x8,%esp
call   2030 <main+0xe10>
add    $0x813b,%ebx
mov    0xf8(%ebx),%eax
test   %eax,%eax
je     db6 <_init+0x1e>
call   f60 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    dc0 <_init+0x28>
jmp    *0x10(%ebx)
push   $0x8
jmp    dc0 <_init+0x28>
jmp    *0x14(%ebx)
push   $0x10
jmp    dc0 <_init+0x28>
jmp    *0x18(%ebx)
push   $0x18
jmp    dc0 <_init+0x28>
jmp    *0x1c(%ebx)
push   $0x20
jmp    dc0 <_init+0x28>
jmp    *0x20(%ebx)
push   $0x28
jmp    dc0 <_init+0x28>
jmp    *0x24(%ebx)
push   $0x30
jmp    dc0 <_init+0x28>
jmp    *0x28(%ebx)
push   $0x38
jmp    dc0 <_init+0x28>
jmp    *0x2c(%ebx)
push   $0x40
jmp    dc0 <_init+0x28>
jmp    *0x30(%ebx)
push   $0x48
jmp    dc0 <_init+0x28>
jmp    *0x34(%ebx)
push   $0x50
jmp    dc0 <_init+0x28>
jmp    *0x38(%ebx)
push   $0x58
jmp    dc0 <_init+0x28>
jmp    *0x3c(%ebx)
push   $0x60
jmp    dc0 <_init+0x28>
jmp    *0x40(%ebx)
push   $0x68
jmp    dc0 <_init+0x28>
jmp    *0x44(%ebx)
push   $0x70
jmp    dc0 <_init+0x28>
jmp    *0x48(%ebx)
push   $0x78
jmp    dc0 <_init+0x28>
jmp    *0x4c(%ebx)
push   $0x80
jmp    dc0 <_init+0x28>
jmp    *0x50(%ebx)
push   $0x88
jmp    dc0 <_init+0x28>
jmp    *0x54(%ebx)
push   $0x90
jmp    dc0 <_init+0x28>
jmp    *0x58(%ebx)
push   $0x98
jmp    dc0 <_init+0x28>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    dc0 <_init+0x28>
jmp    *0x60(%ebx)
push   $0xa8
jmp    dc0 <_init+0x28>
jmp    *0x64(%ebx)
push   $0xb0
jmp    dc0 <_init+0x28>
jmp    *0x68(%ebx)
push   $0xb8
jmp    dc0 <_init+0x28>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    dc0 <_init+0x28>
jmp    *0x70(%ebx)
push   $0xc8
jmp    dc0 <_init+0x28>
jmp    *0x74(%ebx)
push   $0xd0
jmp    dc0 <_init+0x28>
jmp    *0x78(%ebx)
push   $0xd8
jmp    dc0 <_init+0x28>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    dc0 <_init+0x28>
jmp    *0x80(%ebx)
push   $0xe8
jmp    dc0 <_init+0x28>
jmp    *0x84(%ebx)
push   $0xf0
jmp    dc0 <_init+0x28>
jmp    *0x88(%ebx)
push   $0xf8
jmp    dc0 <_init+0x28>
jmp    *0x8c(%ebx)
push   $0x100
jmp    dc0 <_init+0x28>
jmp    *0x90(%ebx)
push   $0x108
jmp    dc0 <_init+0x28>
jmp    *0x94(%ebx)
push   $0x110
jmp    dc0 <_init+0x28>
jmp    *0x98(%ebx)
push   $0x118
jmp    dc0 <_init+0x28>
jmp    *0x9c(%ebx)
push   $0x120
jmp    dc0 <_init+0x28>
jmp    *0xa0(%ebx)
push   $0x128
jmp    dc0 <_init+0x28>
jmp    *0xa4(%ebx)
push   $0x130
jmp    dc0 <_init+0x28>
jmp    *0xa8(%ebx)
push   $0x138
jmp    dc0 <_init+0x28>
jmp    *0xac(%ebx)
push   $0x140
jmp    dc0 <_init+0x28>
jmp    *0xb0(%ebx)
push   $0x148
jmp    dc0 <_init+0x28>
jmp    *0xb4(%ebx)
push   $0x150
jmp    dc0 <_init+0x28>
jmp    *0xb8(%ebx)
push   $0x158
jmp    dc0 <_init+0x28>
jmp    *0xbc(%ebx)
push   $0x160
jmp    dc0 <_init+0x28>
jmp    *0xc0(%ebx)
push   $0x168
jmp    dc0 <_init+0x28>
jmp    *0xc4(%ebx)
push   $0x170
jmp    dc0 <_init+0x28>
jmp    *0xc8(%ebx)
push   $0x178
jmp    dc0 <_init+0x28>
jmp    *0xcc(%ebx)
push   $0x180
jmp    dc0 <_init+0x28>
jmp    *0xd0(%ebx)
push   $0x188
jmp    dc0 <_init+0x28>
jmp    *0xd4(%ebx)
push   $0x190
jmp    dc0 <_init+0x28>
jmp    *0xd8(%ebx)
push   $0x198
jmp    dc0 <_init+0x28>
push   %esi
push   %ebx
call   2030 <main+0xe10>
add    $0x7dc5,%ebx
sub    $0x14,%esp
mov    0xfc(%ebx),%esi
mov    (%esi),%eax
mov    %eax,0x4(%esp)
lea    -0x3ed0(%ebx),%eax
mov    %eax,(%esp)
call   10f0 <fputs@plt>
mov    (%esi),%eax
lea    0x24(%esp),%edx
mov    %edx,0xc(%esp)
lea    -0x3ac0(%ebx),%edx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   e20 <__vfprintf_chk@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
mov    0xe8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
movl   $0x1,(%esp)
call   f70 <exit@plt>
push   %edi
push   %esi
push   %ebx
call   2030 <main+0xe10>
add    $0x7d50,%ebx
sub    $0x10,%esp
call   1010 <__errno_location@plt>
mov    0xfc(%ebx),%esi
lea    -0x3ec8(%ebx),%edx
mov    (%eax),%edi
mov    (%esi),%eax
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
call   10b0 <__fprintf_chk@plt>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
lea    -0x3d8c(%ebx),%eax
mov    %eax,(%esp)
call   10f0 <fputs@plt>
mov    %edi,(%esp)
call   f50 <strerror@plt>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d7f(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
mov    0xe8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
movl   $0x1,(%esp)
call   f70 <exit@plt>
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   2030 <main+0xe10>
add    $0x7cb1,%ebx
and    $0xfffffff0,%esp
sub    $0x110,%esp
movl   $0x1,(%esp)
lea    -0x3d6f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x3edd(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x3d61(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x15c(%ebx),%edi
call   1050 <__printf_chk@plt>
lea    -0x3d21(%ebx),%esi
movl   $0x0,0x148(%ebx)
00
movl   $0x0,0x150(%ebx)
00
movl   $0x0,0x154(%ebx)
00
movl   $0x0,0x158(%ebx)
00
movl   $0x1,0x14c(%ebx)
00
mov    0xc(%ebp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   f80 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     136f <main+0x14f>
cmp    $0x50,%eax
je     1346 <main+0x126>
jg     1308 <main+0xe8>
cmp    $0x1,%eax
jne    131b <main+0xfb>
cmpl   $0x0,0x154(%ebx)
je     1355 <main+0x135>
cmpl   $0x0,0x158(%ebx)
jne    1eb1 <main+0xc91>
mov    0xec(%ebx),%eax
mov    0xc(%ebp),%ecx
mov    (%eax),%eax
mov    -0x4(%ecx,%eax,4),%eax
mov    %eax,0x158(%ebx)
jmp    12a2 <main+0x82>
xchg   %ax,%ax
cmp    $0x68,%eax
je     1341 <main+0x121>
cmp    $0x76,%eax
jne    1320 <main+0x100>
addl   $0x1,0x150(%ebx)
jmp    12a2 <main+0x82>
cmp    $0x3f,%eax
je     1341 <main+0x121>
mov    0xec(%ebx),%eax
mov    0xc(%ebp),%ecx
mov    (%eax),%eax
mov    -0x4(%ecx,%eax,4),%eax
mov    %eax,0x4(%esp)
lea    -0x3d37(%ebx),%eax
mov    %eax,(%esp)
call   2280 <main+0x1060>
call   2210 <main+0xff0>
movl   $0x0,0x14c(%ebx)
00
jmp    12a2 <main+0x82>
mov    0xec(%ebx),%eax
mov    0xc(%ebp),%ecx
mov    (%eax),%eax
mov    -0x4(%ecx,%eax,4),%eax
mov    %eax,0x154(%ebx)
jmp    12a2 <main+0x82>
cmpl   $0x0,0x154(%ebx)
je     1fda <main+0xdba>
cmpl   $0x0,0x158(%ebx)
je     1fda <main+0xdba>
mov    0xfc(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
mov    0xe8(%ebx),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
movl   $0x2,0x4(%esp)
movl   $0x1,(%esp)
call   dd0 <dup2@plt>
add    $0x1,%eax
je     1fb6 <main+0xd96>
mov    (%edi),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
call   3020 <main+0x1e00>
mov    0x154(%ebx),%eax
call   2eb0 <main+0x1c90>
mov    %eax,%edi
mov    %eax,0x50(%esp)
mov    0x158(%ebx),%eax
call   2eb0 <main+0x1c90>
xor    %ecx,%ecx
cmpl   $0x0,0x14c(%ebx)
setne  %cl
mov    %ecx,0x70(%esp)
movzbl 0x25(%edi),%ecx
mov    %eax,%edx
mov    %eax,0x44(%esp)
mov    0x78(%edi),%eax
mov    0x30(%eax),%edi
mov    0x2c(%eax),%esi
shrd   %cl,%edi,%esi
sar    %cl,%edi
mov    %edi,%eax
sar    $0x1f,%eax
test   $0x20,%cl
movzbl 0x25(%edx),%ecx
cmovne %edi,%esi
cmovne %eax,%edi
mov    0x78(%edx),%eax
mov    %esi,0x48(%esp)
mov    %edi,0x4c(%esp)
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
test   $0x20,%cl
je     1455 <main+0x235>
mov    %edx,%eax
sar    $0x1f,%edx
cmp    %edx,%edi
mov    %edx,%ecx
mov    %eax,0x68(%esp)
je     18f9 <main+0x6d9>
mov    %eax,0x10(%esp)
lea    -0x37cc(%ebx),%eax
mov    %edx,0x14(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x80(%esp)
call   1050 <__printf_chk@plt>
mov    0x80(%esp),%ecx
cmp    %ecx,%edi
jb     14af <main+0x28f>
ja     14a3 <main+0x283>
cmp    0x68(%esp),%esi
jbe    14af <main+0x28f>
mov    0x68(%esp),%eax
mov    %ecx,0x4c(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0x0,0xf4(%esp)
00
movl   $0x0,0xf8(%esp)
00
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %eax,0x78(%esp)
test   %edx,%edx
mov    %edx,0x7c(%esp)
mov    %eax,0xfc(%esp)
mov    %edx,0x100(%esp)
fildll 0x78(%esp)
js     1c6d <main+0xa4d>
fstpl  0x88(%esp)
mov    0x70(%esp),%eax
fldl   0x88(%esp)
fdivrs -0x36fc(%ebx)
movl   $0x0,(%esp)
mov    %eax,0x108(%esp)
lea    0xf4(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x34(%esp)
movl   $0x64,0x104(%esp)
00
fstps  0x10c(%esp)
call   2520 <main+0x1300>
mov    0x4c(%esp),%edx
mov    0x48(%esp),%eax
mov    %edx,%ecx
or     %eax,%ecx
je     1af2 <main+0x8d2>
lea    0x9c(%esp),%eax
mov    %eax,0x40(%esp)
lea    0xa0(%esp),%eax
mov    %eax,0x3c(%esp)
lea    -0x37a0(%ebx),%eax
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
mov    %eax,0x2c(%esp)
jmp    1642 <main+0x422>
mov    0x70(%esp),%eax
mov    0x74(%esp),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3efc(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
lea    -0x11c(%ebx),%eax
mov    (%eax,%edi,4),%edx
mov    (%eax,%esi,4),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d1b(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
mov    0x9c(%esp),%eax
call   2a50 <main+0x1830>
test   %eax,%eax
jne    1ae6 <main+0x8c6>
mov    0xa0(%esp),%eax
call   2a50 <main+0x1830>
test   %eax,%eax
jne    1ae6 <main+0x8c6>
mov    0x70(%esp),%eax
mov    0x74(%esp),%edx
mov    %eax,(%esp)
mov    0x34(%esp),%eax
mov    %edx,0x4(%esp)
call   2520 <main+0x1300>
mov    0x48(%esp),%esi
addl   $0x1,0x70(%esp)
adcl   $0x0,0x74(%esp)
mov    0x74(%esp),%edx
mov    0x4c(%esp),%edi
mov    0x70(%esp),%eax
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
je     1af2 <main+0x8d2>
mov    0x40(%esp),%eax
mov    0x74(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x70(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    0x50(%esp),%eax
call   2ac0 <main+0x18a0>
mov    0x3c(%esp),%ecx
mov    0x74(%esp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%esi
mov    0x70(%esp),%eax
mov    %eax,(%esp)
mov    0x44(%esp),%eax
call   2ac0 <main+0x18a0>
cmp    %eax,%esi
mov    %eax,%edi
jne    158c <main+0x36c>
test   %esi,%esi
jne    15dc <main+0x3bc>
mov    0x9c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    0xa0(%esp),%esi
movl   $0x0,0xa4(%esp)
00
movl   $0x0,0xa8(%esp)
00
mov    %eax,(%esp)
mov    %eax,0x38(%esp)
movl   $0x0,0xac(%esp)
00
movl   $0x0,0xb0(%esp)
00
movl   $0x0,0xb4(%esp)
00
movl   $0x0,0xb8(%esp)
00
call   10c0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x60(%esp)
je     1ab8 <main+0x898>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   10c0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x30(%esp)
je     1c78 <main+0xa58>
lea    0xb0(%esp),%eax
xor    %esi,%esi
mov    %eax,0x28(%esp)
lea    0xbc(%esp),%edx
mov    %eax,(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x20(%esp)
call   27b0 <main+0x1590>
lea    0xb4(%esp),%eax
lea    0xc0(%esp),%edx
mov    %eax,0x24(%esp)
mov    %eax,(%esp)
mov    %edi,%eax
mov    %esi,%edi
mov    %edx,0x1c(%esp)
call   27b0 <main+0x1590>
lea    0x150,%eax
movl   $0x0,0x68(%esp)
mov    %eax,0x64(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%ecx
mov    0xbc(%esp),%esi
test   %ecx,%ecx
jne    196c <main+0x74c>
cmp    0xc0(%esp),%esi
jbe    198b <main+0x76b>
test   %edi,%edi
jne    198b <main+0x76b>
movl   $0x0,0x80(%esp)
00
lea    0xa8(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   2800 <main+0x15e0>
mov    %eax,%edi
mov    0x80(%esp),%eax
mov    %eax,0x68(%esp)
mov    0xb4(%esp),%eax
mov    0xbc(%esp),%esi
mov    %eax,0x5c(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x58(%esp)
mov    0xc0(%esp),%eax
mov    %eax,0x54(%esp)
mov    0x64(%esp),%eax
mov    (%eax,%ebx,1),%edx
test   %edx,%edx
je     185b <main+0x63b>
mov    0x38(%esp),%eax
cmpl   $0x0,0x20(%eax)
js     19f7 <main+0x7d7>
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
mov    0x64(%esp),%eax
cmpl   $0x0,(%eax,%ebx,1)
jne    19cc <main+0x7ac>
movl   $0xa,(%esp)
call   1000 <putchar@plt>
mov    0x80(%esp),%eax
test   %eax,%eax
setne  %cl
test   %edi,%edi
jne    1a03 <main+0x7e3>
mov    0xbc(%esp),%edx
mov    0xc0(%esp),%eax
cmp    %eax,%edx
jb     1906 <main+0x6e6>
test   %cl,%cl
jne    1891 <main+0x671>
cmp    %eax,%edx
jbe    1a8b <main+0x86b>
mov    0xac(%esp),%eax
xor    %edi,%edi
mov    0xb8(%esp),%edx
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   2910 <main+0x16f0>
test   %eax,%eax
je     1780 <main+0x560>
mov    0x30(%esp),%eax
call   28c0 <main+0x16a0>
lea    -0x3734(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
mov    0xc0(%esp),%ecx
lea    0xb8(%esp),%edx
lea    0xac(%esp),%eax
mov    %ecx,0x4(%esp)
mov    0xb4(%esp),%ecx
mov    %ecx,(%esp)
call   2fc0 <main+0x1da0>
jmp    1780 <main+0x560>
cmp    %eax,%esi
jne    1463 <main+0x243>
jmp    14af <main+0x28f>
mov    0xac(%esp),%eax
mov    0xb8(%esp),%edx
mov    %eax,(%esp)
mov    0x60(%esp),%eax
call   2910 <main+0x16f0>
test   %eax,%eax
je     1780 <main+0x560>
mov    0x60(%esp),%eax
call   28c0 <main+0x16a0>
lea    -0x3758(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
mov    0xbc(%esp),%ecx
lea    0xb8(%esp),%edx
lea    0xac(%esp),%eax
mov    %ecx,0x4(%esp)
mov    0xb0(%esp),%ecx
mov    %ecx,(%esp)
call   2fc0 <main+0x1da0>
jmp    1780 <main+0x560>
mov    0x68(%esp),%eax
mov    %eax,0x80(%esp)
test   %edi,%edi
je     19b3 <main+0x793>
mov    0x80(%esp),%eax
mov    %eax,0x68(%esp)
jmp    17df <main+0x5bf>
lea    0xa4(%esp),%eax
mov    0x20(%esp),%edx
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
mov    0x60(%esp),%eax
call   2800 <main+0x15e0>
mov    %eax,0x80(%esp)
jmp    1977 <main+0x757>
cmp    0xc0(%esp),%esi
jae    17b3 <main+0x593>
cmpl   $0x0,0x68(%esp)
je     197b <main+0x75b>
jmp    17b3 <main+0x593>
mov    0x58(%esp),%edx
mov    %esi,%eax
call   24c0 <main+0x12a0>
mov    0x64(%esp),%eax
cmpl   $0x0,(%eax,%ebx,1)
je     184f <main+0x62f>
mov    0x5c(%esp),%edx
mov    0x54(%esp),%eax
call   24c0 <main+0x12a0>
jmp    184f <main+0x62f>
mov    0x38(%esp),%eax
mov    0x24(%eax),%eax
jmp    1820 <main+0x600>
test   %cl,%cl
je     1906 <main+0x6e6>
mov    0xa8(%esp),%eax
cmp    %eax,0xa4(%esp)
je     1a50 <main+0x830>
mov    0x38(%esp),%eax
call   2160 <main+0xf40>
mov    0xa8(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x3780(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
mov    0xac(%esp),%eax
test   %eax,%eax
je     1a6e <main+0x84e>
mov    %eax,(%esp)
call   e70 <free@plt>
movl   $0x0,0xac(%esp)
00
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   fa0 <ntfs_attr_put_search_ctx@plt>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   fa0 <ntfs_attr_put_search_ctx@plt>
jmp    15dc <main+0x3bc>
mov    0xac(%esp),%eax
mov    0xb8(%esp),%edx
mov    %eax,(%esp)
mov    0x60(%esp),%eax
call   2910 <main+0x16f0>
test   %eax,%eax
jne    1b24 <main+0x904>
xor    %edi,%edi
movl   $0x0,0x68(%esp)
jmp    1780 <main+0x560>
lea    -0x3d07(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   2300 <main+0x10e0>
mov    0x9c(%esp),%eax
call   2a50 <main+0x1830>
mov    0xa0(%esp),%eax
call   2a50 <main+0x1830>
movl   $0x1,(%esp)
call   f70 <exit@plt>
mov    0x50(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   e10 <ntfs_umount@plt>
mov    0x44(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   e10 <ntfs_umount@plt>
lea    -0xc(%ebp),%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x60(%esp),%eax
mov    0x4(%eax),%esi
mov    0x30(%esp),%eax
mov    0x4(%eax),%edi
movzbl 0x8(%esi),%eax
cmp    0x8(%edi),%al
je     1c9f <main+0xa7f>
mov    0x60(%esp),%eax
call   28c0 <main+0x16a0>
lea    -0x3cee(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
movzwl 0xa(%esi),%edx
movzbl 0x9(%esi),%ecx
lea    (%edx,%esi,1),%eax
mov    0x60(%esp),%edx
mov    %eax,0x68(%esp)
mov    (%esi),%esi
mov    0x14(%edx),%eax
test   %eax,%eax
cmove  0xc(%edx),%eax
mov    %ecx,0xc(%esp)
mov    0x68(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   fd0 <ntfs_attr_open@plt>
movzwl 0xa(%edi),%edx
movzbl 0x9(%edi),%ecx
mov    %eax,%esi
lea    (%edx,%edi,1),%eax
mov    0x30(%esp),%edx
mov    %eax,0x68(%esp)
mov    (%edi),%edi
mov    0x14(%edx),%eax
test   %eax,%eax
cmove  0xc(%edx),%eax
mov    %ecx,0xc(%esp)
mov    0x68(%esp),%ecx
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   fd0 <ntfs_attr_open@plt>
test   %esi,%esi
sete   %dl
test   %eax,%eax
mov    %eax,%edi
jne    1d2f <main+0xb0f>
test   %edi,%edi
jne    1cc8 <main+0xaa8>
test   %esi,%esi
je     1cc8 <main+0xaa8>
mov    0x60(%esp),%eax
mov    %edx,0x68(%esp)
call   28c0 <main+0x16a0>
mov    0x68(%esp),%edx
test   %dl,%dl
jne    1f38 <main+0xd18>
lea    -0x3d79(%ebx),%eax
lea    -0x3d72(%ebx),%edx
mov    %eax,0xc(%esp)
lea    -0x3d1b(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1050 <__printf_chk@plt>
mov    %esi,(%esp)
call   f30 <ntfs_attr_close@plt>
mov    %edi,(%esp)
call   f30 <ntfs_attr_close@plt>
mov    0xbc(%esp),%ecx
lea    0xb8(%esp),%edx
xor    %edi,%edi
lea    0xac(%esp),%eax
mov    %ecx,0x4(%esp)
mov    0xb0(%esp),%ecx
mov    %ecx,(%esp)
call   2fc0 <main+0x1da0>
movl   $0x0,0x68(%esp)
jmp    1780 <main+0x560>
fadds  -0x3700(%ebx)
jmp    14f5 <main+0x2d5>
lea    -0x3d07(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   2300 <main+0x10e0>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   fa0 <ntfs_attr_put_search_ctx@plt>
jmp    1ace <main+0x8ae>
test   %al,%al
mov    $0x18,%edx
je     1cab <main+0xa8b>
mov    0x4(%esi),%edx
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   e90 <memcmp@plt>
test   %eax,%eax
je     1b56 <main+0x936>
jmp    1b3f <main+0x91f>
test   %dl,%dl
lea    0x0(%esi),%esi
jne    1c26 <main+0xa06>
mov    0x28(%edi),%ecx
cmp    %ecx,0x28(%esi)
mov    0x24(%esi),%eax
je     1d56 <main+0xb36>
mov    %esi,%eax
call   26f0 <main+0x14d0>
mov    0x24(%esi),%eax
mov    0x28(%esi),%edx
mov    %eax,0x68(%esp)
mov    0x24(%edi),%eax
mov    %edx,0x6c(%esp)
mov    0x28(%edi),%edx
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x68(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x6c(%esp),%edx
mov    %eax,0x8(%esp)
lea    -0x3cdc(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
jmp    1c26 <main+0xa06>
test   %dl,%dl
je     1bd3 <main+0x9b3>
mov    0x60(%esp),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
call   28c0 <main+0x16a0>
lea    -0x3d72(%ebx),%eax
lea    -0x3d79(%ebx),%edx
jmp    1c08 <main+0x9e8>
cmp    0x24(%edi),%eax
jne    1ce1 <main+0xac1>
mov    0x60(%esp),%eax
mov    0x4(%eax),%ecx
mov    0xc(%eax),%eax
cmpl   $0x0,0x20(%eax)
js     1da0 <main+0xb80>
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   1030 <ntfs_inode_badclus_bad@plt>
sub    $0x1,%eax
je     1c36 <main+0xa16>
cmpl   $0xa0,0x8(%esi)
je     1da5 <main+0xb85>
mov    %edi,%edx
mov    %esi,%eax
call   2b60 <main+0x1940>
jmp    1c26 <main+0xa06>
mov    0x24(%eax),%eax
jmp    1d6b <main+0xb4b>
lea    0xc4(%esp),%edx
mov    %esi,%eax
call   23d0 <main+0x11b0>
test   %eax,%eax
jne    1c26 <main+0xa06>
lea    0xdc(%esp),%edx
mov    %edi,%eax
call   23d0 <main+0x11b0>
test   %eax,%eax
jne    1c26 <main+0xa06>
mov    0xd4(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xe4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xcc(%esp),%eax
mov    %eax,(%esp)
call   e90 <memcmp@plt>
test   %eax,%eax
jne    1f60 <main+0xd40>
mov    0xc4(%esp),%edx
mov    0xdc(%esp),%eax
movl   $0x18,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x68(%esp)
call   e90 <memcmp@plt>
test   %eax,%eax
jne    1f60 <main+0xd40>
mov    0x68(%esp),%edx
movl   $0x0,0x80(%esp)
00
mov    %esi,0x68(%esp)
mov    %edi,0x5c(%esp)
mov    0x20(%edx),%eax
add    $0x18,%eax
mov    %eax,0x58(%esp)
mov    0x24(%esi),%eax
mov    0xc8(%esp),%edi
lea    (%edx,%eax,1),%ecx
cmp    %ecx,%edi
jae    1fd0 <main+0xdb0>
mov    0xd0(%esp),%ecx
mov    0x80(%esp),%esi
movzbl (%ecx),%ecx
bt     %esi,%ecx
jb     1ec4 <main+0xca4>
mov    0x58(%esp),%ecx
addl   $0x1,0x80(%esp)
add    %ecx,0xc8(%esp)
add    %ecx,0xe0(%esp)
cmpl   $0x7,0x80(%esp)
jle    1e50 <main+0xc30>
addl   $0x1,0xd0(%esp)
movl   $0x0,0x80(%esp)
00
jmp    1e50 <main+0xc30>
lea    -0x3d4c(%ebx),%eax
mov    %eax,(%esp)
call   2280 <main+0x1060>
call   2210 <main+0xff0>
mov    0x58(%esp),%esi
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   e30 <ntfs_mst_post_read_fixup@plt>
mov    %esi,0x4(%esp)
mov    %eax,%edi
mov    0xe0(%esp),%eax
mov    %eax,(%esp)
call   e30 <ntfs_mst_post_read_fixup@plt>
cmp    %eax,%edi
jne    1f58 <main+0xd38>
add    $0x1,%edi
je     1f45 <main+0xd25>
mov    0xc4(%esp),%edx
mov    0x1c(%edx),%eax
mov    %edx,0x54(%esp)
mov    %eax,0x8(%esp)
mov    0xe0(%esp),%eax
add    $0x18,%eax
mov    %eax,0x4(%esp)
mov    0xc8(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   e90 <memcmp@plt>
test   %eax,%eax
jne    1f58 <main+0xd38>
mov    0x68(%esp),%eax
mov    0x54(%esp),%edx
mov    0x24(%eax),%eax
jmp    1e78 <main+0xc58>
lea    -0x3d79(%ebx),%eax
mov    %eax,%edx
jmp    1c08 <main+0x9e8>
mov    0x68(%esp),%eax
mov    0xc4(%esp),%edx
mov    0x24(%eax),%eax
jmp    1e50 <main+0xc30>
mov    0x68(%esp),%esi
mov    0x5c(%esp),%edi
mov    %esi,%eax
call   26f0 <main+0x14d0>
lea    -0x3dcc(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
mov    0xc4(%esp),%edx
mov    %edx,(%esp)
call   e70 <free@plt>
mov    0xdc(%esp),%eax
mov    %eax,(%esp)
call   e70 <free@plt>
mov    0xcc(%esp),%eax
mov    %eax,(%esp)
call   e70 <free@plt>
mov    0xe4(%esp),%eax
mov    %eax,(%esp)
call   e70 <free@plt>
jmp    1c26 <main+0xa06>
lea    -0x37f0(%ebx),%eax
mov    %eax,(%esp)
call   ee0 <perror@plt>
movl   $0x1,(%esp)
call   f70 <exit@plt>
mov    0x68(%esp),%esi
mov    0x5c(%esp),%edi
jmp    1f7c <main+0xd5c>
lea    -0x3818(%ebx),%eax
mov    %eax,(%esp)
call   2280 <main+0x1060>
call   2210 <main+0xff0>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   201f <main+0xdff>
add    $0x6edf,%ebx
lea    -0x3f3c(%ebx),%eax
push   %eax
lea    -0x3fac(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0x100(%ebx)
call   fb0 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2030 <main+0xe10>
add    $0x6e93,%ebx
sub    $0x14,%esp
lea    0x147(%ebx),%eax
lea    0x144(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     206b <main+0xe4b>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0xe0(%ebx),%eax
test   %eax,%eax
je     2065 <main+0xe45>
mov    %edx,(%esp)
call   *%eax
jmp    2065 <main+0xe45>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2030 <main+0xe10>
add    $0x6e53,%ebx
sub    $0x14,%esp
lea    0x144(%ebx),%eax
lea    0x144(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    20b4 <main+0xe94>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x108(%ebx),%ecx
test   %ecx,%ecx
je     20ae <main+0xe8e>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    20ae <main+0xe8e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2030 <main+0xe10>
add    $0x6e03,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x144(%ebx)
jne    210f <main+0xeef>
mov    0xf4(%ebx),%eax
test   %eax,%eax
je     2103 <main+0xee3>
mov    0x128(%ebx),%eax
mov    %eax,(%esp)
call   ed0 <__cxa_finalize@plt>
call   2040 <main+0xe20>
movb   $0x1,0x144(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   2030 <main+0xe10>
add    $0x6db3,%ebx
sub    $0x14,%esp
mov    -0x17c(%ebx),%eax
test   %eax,%eax
je     2151 <main+0xf31>
mov    0x104(%ebx),%eax
test   %eax,%eax
je     2151 <main+0xf31>
lea    -0x17c(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    2080 <main+0xe60>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%eax),%edx
call   2030 <main+0xe10>
add    $0x6d70,%ebx
test   %edx,%edx
jns    2179 <main+0xf59>
mov    0x24(%eax),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x3efc(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
add    $0x18,%esp
pop    %ebx
ret
jmp    21b0 <main+0xf90>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    %edx,%esi
push   %ebx
call   2030 <main+0xe10>
add    $0x6d23,%ebx
sub    $0x14,%esp
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
lea    -0x3ef0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
test   %esi,%esi
je     21fa <main+0xfda>
lea    -0x3ee1(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1050 <__printf_chk@plt>
movl   $0x20,(%esp)
call   1000 <putchar@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   2030 <main+0xe10>
add    $0x6cc6,%ebx
sub    $0x18,%esp
movl   $0x1,(%esp)
lea    -0x3edd(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x3c44(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
mov    0xdc(%ebx),%eax
mov    (%eax),%edx
lea    0x140(%ebx),%eax
mov    (%eax),%eax
mov    %edx,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3ed5(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
movl   $0x1,(%esp)
call   f70 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
call   2030 <main+0xe10>
add    $0x6c55,%ebx
sub    $0x14,%esp
movl   $0x7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    0xfc(%ebx),%esi
mov    (%esi),%eax
mov    %eax,0xc(%esp)
lea    -0x3ed0(%ebx),%eax
mov    %eax,(%esp)
call   ef0 <fwrite@plt>
lea    0x24(%esp),%edx
mov    (%esi),%eax
mov    %edx,0xc(%esp)
mov    0x20(%esp),%edx
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   e20 <__vfprintf_chk@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
mov    0xe8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   2030 <main+0xe10>
add    $0x6bd4,%ebx
sub    $0x10,%esp
call   1010 <__errno_location@plt>
mov    0xfc(%ebx),%esi
lea    -0x3ec8(%ebx),%edx
mov    (%eax),%edi
mov    (%esi),%eax
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
call   10b0 <__fprintf_chk@plt>
lea    0x28(%esp),%edx
mov    (%esi),%eax
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   e20 <__vfprintf_chk@plt>
mov    %edi,(%esp)
call   f50 <strerror@plt>
mov    (%esi),%edx
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
lea    -0x3ebc(%ebx),%eax
mov    %eax,0x8(%esp)
call   10b0 <__fprintf_chk@plt>
mov    0x20(%esp),%eax
test   %eax,%eax
je     23a2 <main+0x1182>
mov    (%esi),%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   1080 <fputc@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
mov    0xe8(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   2030 <main+0xe10>
add    $0x6aff,%ebx
sub    $0x2c,%esp
mov    0x14(%eax),%ecx
mov    0x10(%eax),%edx
lea    0x10(%edi),%ebp
mov    0x4(%eax),%eax
mov    %ebp,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0xb0,0x4(%esp)
mov    %eax,(%esp)
call   1020 <ntfs_attr_readall@plt>
test   %eax,%eax
mov    %eax,0x8(%edi)
je     24a2 <main+0x1282>
mov    %eax,0xc(%edi)
mov    0x24(%esi),%eax
mov    %eax,(%esp)
call   e60 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,(%edi)
mov    %eax,0x4(%edi)
je     2490 <main+0x1270>
mov    %eax,0x14(%esp)
mov    0x28(%esi),%edx
mov    0x24(%esi),%eax
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %esi,(%esp)
call   fc0 <ntfs_attr_pread@plt>
xor    0x28(%esi),%edx
mov    %eax,%ecx
xor    %eax,%eax
xor    0x24(%esi),%ecx
or     %ecx,%edx
jne    2470 <main+0x1250>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3b5c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   2300 <main+0x10e0>
mov    (%edi),%eax
mov    %eax,(%esp)
call   e70 <free@plt>
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   e70 <free@plt>
mov    $0xffffffff,%eax
jmp    2468 <main+0x1248>
lea    -0x3eb7(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   2300 <main+0x10e0>
mov    $0xffffffff,%eax
jmp    2468 <main+0x1248>
nop
push   %esi
mov    %edx,%esi
push   %ebx
call   2030 <main+0xe10>
add    $0x6a13,%ebx
sub    $0x14,%esp
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
lea    -0x3ee6(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
test   %esi,%esi
je     250a <main+0x12ea>
lea    -0x3ee1(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1050 <__printf_chk@plt>
movl   $0x20,(%esp)
call   1000 <putchar@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x14(%eax),%edx
call   2030 <main+0xe10>
add    $0x69ad,%ebx
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
test   $0x1,%dl
je     2587 <main+0x1367>
and    $0x2,%edx
jne    2587 <main+0x1367>
mov    0xc(%eax),%ecx
mov    0x8(%eax),%edx
flds   0x18(%eax)
fstps  0x18(%esp)
xor    %edi,%ecx
xor    %esi,%edx
or     %edx,%ecx
je     25e0 <main+0x13c0>
mov    %esi,%edx
mov    %edi,%ecx
sub    (%eax),%edx
sbb    0x4(%eax),%ecx
mov    0x10(%eax),%eax
mov    %edx,(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
sar    $0x1f,%eax
mov    %eax,0xc(%esp)
call   4dd0 <main+0x3bb0>
or     %eax,%edx
je     2590 <main+0x1370>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,0x10(%esp)
test   %edi,%edi
mov    %edi,0x14(%esp)
fildll 0x10(%esp)
js     25f0 <main+0x13d0>
fstps  0x1c(%esp)
flds   0x1c(%esp)
lea    -0x3e9e(%ebx),%eax
fmuls  0x18(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
fstpl  0x8(%esp)
call   1050 <__printf_chk@plt>
mov    0xfc(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   e50 <fflush@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x3e85(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
jmp    25c6 <main+0x13a6>
fadds  -0x3700(%ebx)
jmp    25a0 <main+0x1380>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   2030 <main+0xe10>
add    $0x68d1,%ebx
cmpl   $0xffffffff,0x30(%esp)
movl   $0x0,0x1c(%esp)
je     266c <main+0x144c>
mov    %eax,%esi
mov    %edx,%edi
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   f20 <ntfs_ucstombs@plt>
test   %eax,%eax
js     2675 <main+0x1455>
mov    0x1c(%esp),%eax
je     2660 <main+0x1440>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     266c <main+0x144c>
mov    %eax,(%esp)
call   e70 <free@plt>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x3e6c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   2300 <main+0x10e0>
lea    -0x3efc(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1050 <__printf_chk@plt>
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3ef0(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
lea    -0x3d38(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
movl   $0x1,(%esp)
call   f70 <exit@plt>
jmp    26f0 <main+0x14d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x14(%eax),%ebp
mov    0x10(%eax),%edi
mov    0x8(%eax),%ecx
mov    0x4(%eax),%eax
call   2030 <main+0xe10>
add    $0x67d2,%ebx
mov    0x20(%eax),%edx
test   %edx,%edx
jns    271a <main+0x14fa>
mov    0x24(%eax),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,0x8(%esp)
call   2600 <main+0x13e0>
mov    %eax,%edi
mov    0x4(%esi),%eax
call   2160 <main+0xf40>
mov    0x8(%esi),%eax
mov    %edi,%edx
call   21b0 <main+0xf90>
test   %edi,%edi
je     274f <main+0x152f>
mov    %edi,(%esp)
call   e70 <free@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%ecx
push   %esi
sub    $0x14,%esp
mov    0x20(%edx),%eax
test   %eax,%eax
js     2798 <main+0x1578>
mov    (%edx),%eax
mov    0x4(%edx),%edx
mov    (%ecx),%esi
mov    %esi,%edi
movzbl 0x9(%ecx),%esi
mov    %esi,0x8(%esp)
movzwl 0xa(%ecx),%esi
mov    %edi,(%esp)
add    %esi,%ecx
mov    %ecx,0x4(%esp)
call   2600 <main+0x13e0>
add    $0x14,%esp
pop    %esi
pop    %edi
ret
nop
mov    0x24(%edx),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
jmp    2773 <main+0x1553>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x4(%eax),%ecx
mov    0x20(%esp),%esi
call   2030 <main+0xe10>
add    $0x6718,%ebx
mov    (%ecx),%eax
mov    %eax,(%edx)
mov    (%esi),%eax
test   %eax,%eax
je     27e5 <main+0x15c5>
mov    %eax,(%esp)
call   e70 <free@plt>
movl   $0x0,(%esi)
mov    0x4(%edi),%ecx
mov    0xc(%edi),%edx
mov    %ecx,%eax
call   2760 <main+0x1540>
mov    %eax,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   2030 <main+0xe10>
add    $0x66cf,%ebx
sub    $0x3c,%esp
mov    %eax,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   10a0 <ntfs_attr_lookup@plt>
mov    %eax,%esi
call   1010 <__errno_location@plt>
test   %esi,%esi
mov    (%eax),%ecx
mov    0x54(%esp),%eax
mov    %ecx,(%eax)
je     28a0 <main+0x1680>
mov    0x50(%esp),%eax
movl   $0xffffffff,(%edi)
mov    (%eax),%eax
test   %eax,%eax
je     2893 <main+0x1673>
mov    %eax,(%esp)
call   e70 <free@plt>
mov    0x50(%esp),%eax
movl   $0x0,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   27b0 <main+0x1590>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   2030 <main+0xe10>
add    $0x6612,%ebx
sub    $0x10,%esp
mov    0xc(%esi),%edx
mov    0x4(%eax),%eax
call   2760 <main+0x1540>
mov    %eax,%edi
mov    0x14(%esi),%eax
test   %eax,%eax
cmove  0xc(%esi),%eax
call   2160 <main+0xf40>
mov    0x4(%esi),%eax
mov    %edi,%edx
mov    (%eax),%eax
call   21b0 <main+0xf90>
test   %edi,%edi
je     2906 <main+0x16e6>
mov    %edi,(%esp)
call   e70 <free@plt>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   2030 <main+0xe10>
add    $0x65be,%ebx
test   %edx,%edx
je     2948 <main+0x1728>
mov    0x4(%ebp),%eax
cmpb   $0x0,0x8(%eax)
je     2935 <main+0x1715>
cmp    %edx,(%eax)
je     2958 <main+0x1738>
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%ecx
test   %ecx,%ecx
jne    2928 <main+0x1708>
jmp    2935 <main+0x1715>
lea    0x0(%esi),%esi
mov    0xc(%ebp),%edx
call   2760 <main+0x1540>
mov    %eax,%esi
mov    0x40(%esp),%eax
test   %eax,%eax
setne  %al
test   %esi,%esi
jne    2a10 <main+0x17f0>
test   %al,%al
jne    2935 <main+0x1715>
mov    0x150(%ebx),%eax
test   %eax,%eax
je     293a <main+0x171a>
mov    0x14(%ebp),%eax
test   %eax,%eax
cmove  0xc(%ebp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x3efc(%ebx),%eax
mov    %eax,0x4(%esp)
call   1050 <__printf_chk@plt>
mov    0xc(%ebp),%edx
mov    0x4(%ebp),%eax
call   2760 <main+0x1540>
mov    %eax,%esi
mov    0x4(%ebp),%eax
mov    %esi,%edx
mov    (%eax),%eax
call   21b0 <main+0xf90>
test   %esi,%esi
je     29d2 <main+0x17b2>
mov    %esi,(%esp)
call   e70 <free@plt>
mov    0x4(%ebp),%eax
mov    0x10(%eax),%esi
mov    0x14(%eax),%edi
mov    0xc(%ebp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %esi,0x10(%esp)
mov    %edi,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x3b38(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1050 <__printf_chk@plt>
xor    %eax,%eax
jmp    293a <main+0x171a>
test   %al,%al
jne    2a21 <main+0x1801>
mov    %esi,(%esp)
call   e70 <free@plt>
jmp    2935 <main+0x1715>
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   e00 <strcmp@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   e70 <free@plt>
test   %edi,%edi
je     2977 <main+0x1757>
jmp    2935 <main+0x1715>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
call   2030 <main+0xe10>
add    $0x6480,%ebx
test   %eax,%eax
je     2a72 <main+0x1852>
mov    %eax,(%esp)
call   1040 <ntfs_inode_close@plt>
test   %eax,%eax
jne    2a80 <main+0x1860>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x20(%esi),%eax
test   %eax,%eax
js     2ab1 <main+0x1891>
mov    (%esi),%eax
mov    0x4(%esi),%edx
mov    %eax,0x8(%esp)
lea    -0x3e5e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edx,0xc(%esp)
movl   $0x1,(%esp)
call   2300 <main+0x10e0>
mov    $0xffffffff,%eax
jmp    2a74 <main+0x1854>
mov    0x24(%esi),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
jmp    2a8c <main+0x186c>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   2030 <main+0xe10>
add    $0x6411,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
call   10d0 <ntfs_inode_open@plt>
mov    %eax,%edx
mov    0x28(%esp),%eax
test   %edx,%edx
mov    %edx,(%eax)
je     2b18 <main+0x18f8>
mov    0x8(%edx),%ecx
xor    %eax,%eax
mov    0x24(%ecx),%esi
or     0x20(%ecx),%esi
je     2b11 <main+0x18f1>
mov    %edx,%eax
call   2a50 <main+0x1830>
cmp    $0x1,%eax
sbb    %eax,%eax
add    $0x5,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   1010 <__errno_location@plt>
mov    (%eax),%edx
mov    $0x2,%eax
cmp    $0x5,%edx
je     2b11 <main+0x18f1>
cmp    $0x2,%edx
mov    $0x3,%al
je     2b11 <main+0x18f1>
lea    -0x3e41(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
call   2300 <main+0x10e0>
mov    $0x1,%eax
jmp    2b11 <main+0x18f1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x405c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x404c(%esp)
xor    %eax,%eax
mov    0x28(%ebp),%eax
call   2030 <main+0xe10>
add    $0x6359,%ebx
mov    %edx,0x3c(%esp)
test   %eax,%eax
js     2e87 <main+0x1c67>
lea    0x4c(%esp),%eax
xor    %esi,%esi
mov    %eax,0x38(%esp)
lea    0x204c(%esp),%eax
xor    %edi,%edi
mov    %eax,0x34(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
movl   $0x2000,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %edi,0x8(%esp)
mov    %ebp,(%esp)
call   fc0 <ntfs_attr_pread@plt>
mov    0x3c(%esp),%ecx
movl   $0x2000,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
mov    %edi,0x8(%esp)
mov    %edx,0x24(%esp)
mov    0x34(%esp),%edx
mov    %eax,0x20(%esp)
mov    %edx,0x14(%esp)
call   fc0 <ntfs_attr_pread@plt>
mov    0x24(%esp),%ecx
xor    %edx,%ecx
mov    %eax,0x28(%esp)
mov    %ecx,%eax
mov    0x20(%esp),%ecx
xor    0x28(%esp),%ecx
or     %ecx,%eax
jne    2d48 <main+0x1b28>
mov    0x20(%esp),%edx
mov    0x24(%esp),%ecx
mov    %edx,%eax
and    %ecx,%eax
cmp    $0xffffffff,%eax
je     2e30 <main+0x1c10>
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
mov    %edx,%ecx
or     %eax,%ecx
je     2de0 <main+0x1bc0>
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   e90 <memcmp@plt>
test   %eax,%eax
jne    2d08 <main+0x1ae8>
add    0x20(%esp),%esi
adc    0x24(%esp),%edi
cmp    %edi,0x28(%ebp)
jge    2cf0 <main+0x1ad0>
lea    -0x3713(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3dba(%ebx),%eax
mov    %eax,(%esp)
call   2280 <main+0x1060>
mov    %ebp,%eax
call   26f0 <main+0x14d0>
mov    0x24(%ebp),%eax
mov    0x28(%ebp),%edx
mov    %esi,0xc(%esp)
mov    %edi,0x10(%esp)
mov    %eax,0x28(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x18(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x4(%esp)
lea    -0x3ae8(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   2280 <main+0x1060>
movl   $0x1,(%esp)
call   f70 <exit@plt>
nop
jg     2bb0 <main+0x1990>
cmp    %esi,0x24(%ebp)
jb     2c80 <main+0x1a60>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    2bb0 <main+0x1990>
lea    0x0(%esi),%esi
mov    %ebp,%eax
lea    0x0(%esi),%esi
call   26f0 <main+0x14d0>
lea    -0x3dcc(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
mov    0x404c(%esp),%eax
xor    %gs:0x14,%eax
jne    2ea0 <main+0x1c80>
add    $0x405c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x28(%esp),%ecx
mov    %ebp,%eax
mov    %edx,0x28(%esp)
mov    %ecx,0x34(%esp)
call   26f0 <main+0x14d0>
mov    0x3c(%esp),%eax
mov    0x24(%ebp),%edi
mov    0x28(%ebp),%ebp
mov    0x28(%eax),%edx
mov    0x24(%eax),%eax
mov    %edi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
lea    -0x3b0c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1050 <__printf_chk@plt>
mov    0x28(%esp),%edx
mov    0x20(%esp),%eax
mov    0x34(%esp),%ecx
movl   $0x1,(%esp)
mov    %edx,0x14(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x8(%esp)
lea    -0x3e27(%ebx),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0xc(%esp)
call   1050 <__printf_chk@plt>
lea    -0x3d38(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
jmp    2d23 <main+0x1b03>
lea    0x0(%esi),%esi
mov    0x28(%ebp),%edx
mov    0x24(%ebp),%eax
xor    %edi,%edx
xor    %esi,%eax
or     %eax,%edx
je     2d23 <main+0x1b03>
lea    -0x3713(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3de7(%ebx),%eax
mov    %eax,(%esp)
call   2280 <main+0x1060>
mov    %ebp,%eax
call   26f0 <main+0x14d0>
mov    0x24(%ebp),%eax
mov    0x28(%ebp),%edx
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x3cd2(%ebx),%eax
mov    %edx,0x14(%esp)
jmp    2e6b <main+0x1c4b>
nop
lea    -0x3713(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x3e0f(%ebx),%eax
mov    %eax,(%esp)
call   2280 <main+0x1060>
mov    %ebp,%eax
call   26f0 <main+0x14d0>
mov    0x24(%ebp),%eax
mov    0x28(%ebp),%edx
mov    %esi,0x10(%esp)
mov    %edi,0x14(%esp)
mov    %eax,0x8(%esp)
lea    -0x3dff(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1050 <__printf_chk@plt>
movl   $0x1,(%esp)
call   f70 <exit@plt>
movl   $0x0,0x20(%esp)
xor    %esi,%esi
xor    %edi,%edi
movl   $0x0,0x24(%esp)
jmp    2c80 <main+0x1a60>
call   4fb0 <main+0x3d90>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   2030 <main+0xe10>
add    $0x6022,%ebx
sub    $0x20,%esp
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   ec0 <ntfs_check_if_mounted@plt>
test   %eax,%eax
jne    2f02 <main+0x1ce2>
mov    0x1c(%esp),%eax
test   $0x1,%al
je     2ee7 <main+0x1cc7>
test   $0x4,%al
je     2f72 <main+0x1d52>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   1060 <ntfs_mount@plt>
test   %eax,%eax
je     2f36 <main+0x1d16>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x3a80(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
call   2300 <main+0x10e0>
lea    -0x3a5c(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
movl   $0x1,(%esp)
call   f70 <exit@plt>
call   1010 <__errno_location@plt>
mov    (%eax),%edi
lea    -0x3da8(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   2300 <main+0x10e0>
cmp    $0x16,%edi
je     2f84 <main+0x1d64>
cmp    $0x5,%edi
je     2fb0 <main+0x1d90>
sub    $0x1,%edi
je     2fa0 <main+0x1d80>
movl   $0x1,(%esp)
call   f70 <exit@plt>
lea    -0x3ac0(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1110 <calloc@plt+0x10>
lea    -0x39f8(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   1050 <__printf_chk@plt>
jmp    2f66 <main+0x1d46>
lea    -0x3878(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
jmp    2f66 <main+0x1d46>
lea    -0x3954(%ebx),%eax
mov    %eax,(%esp)
call   f40 <puts@plt>
jmp    2f66 <main+0x1d46>
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%eax),%eax
call   2030 <main+0xe10>
add    $0x5f0a,%ebx
mov    0x30(%esp),%edi
test   %eax,%eax
je     2fee <main+0x1dce>
mov    %eax,(%esp)
call   e70 <free@plt>
movl   $0x0,(%esi)
test   %edi,%edi
je     3000 <main+0x1de0>
mov    %edi,(%esp)
call   ff0 <__strdup@plt>
test   %eax,%eax
mov    %eax,(%esi)
je     300f <main+0x1def>
mov    0x34(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3d8c(%ebx),%eax
mov    %eax,(%esp)
call   1184 <calloc@plt+0x84>
xchg   %ax,%ax
nop
push   %ebx
call   2030 <main+0xe10>
add    $0x5eb6,%ebx
sub    $0x28,%esp
movl   $0x6,(%esp)
lea    -0x3d38(%ebx),%eax
mov    %eax,0x4(%esp)
call   1070 <setlocale@plt>
xor    %edx,%edx
test   %eax,%eax
je     3058 <main+0x1e38>
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   1070 <setlocale@plt>
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x8c,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x355c(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2882(%ebx),%eax
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
mov    $0x1,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
call   2030 <main+0xe10>
add    $0x5e0c,%ebx
test   %esi,%esi
je     3177 <main+0x1f57>
mov    (%esi),%eax
test   %eax,%eax
je     3158 <main+0x1f38>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   1090 <ntfs_mbstoucs@plt>
test   %eax,%eax
mov    %eax,%edi
js     3132 <main+0x1f12>
cmp    0x48(%esp),%edi
lea    0x2(%eax,%eax,1),%ebp
mov    (%esi),%eax
jge    3140 <main+0x1f20>
mov    0x1c(%esp),%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   e80 <memcpy@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   e70 <free@plt>
mov    %edi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   f10 <realloc@plt>
test   %eax,%eax
je     3170 <main+0x1f50>
mov    %eax,(%esi)
jmp    3112 <main+0x1ef2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1090 <ntfs_mbstoucs@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%edi
jmp    3126 <main+0x1f06>
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    3134 <main+0x1f14>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%esi
call   2030 <main+0xe10>
add    $0x5d36,%ebx
movl   $0x0,0x2c(%esp)
test   %esi,%esi
je     32c0 <main+0x20a0>
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   10e0 <__xstat64@plt>
cmp    $0xffffffff,%eax
je     3260 <main+0x2040>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   ec0 <ntfs_check_if_mounted@plt>
test   %eax,%eax
mov    %eax,%edi
jne    32f8 <main+0x20d8>
testb  $0x1,0x2c(%esp)
je     32e0 <main+0x20c0>
mov    0xb4(%esp),%eax
test   %eax,%eax
je     33a8 <main+0x2188>
lea    -0x36d3(%ebx),%eax
mov    $0x1,%edi
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2895(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xf7,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   1010 <__errno_location@plt>
cmpl   $0x2,(%eax)
mov    %esi,0x18(%esp)
je     3380 <main+0x2160>
lea    -0x3530(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe1,0x8(%esp)
lea    -0x36f8(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    -0x2895(%ebx),%eax
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1010 <__errno_location@plt>
xor    %edi,%edi
movl   $0x16,(%eax)
add    $0x9c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x9c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x18(%esp)
lea    -0x350c(%ebx),%eax
lea    -0x36f8(%ebx),%edi
lea    -0x2895(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0xe8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   df0 <ntfs_log_redirect@plt>
mov    0xb4(%esp),%edx
test   %edx,%edx
jne    3420 <main+0x2200>
lea    -0x34e0(%ebx),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xeb,0x8(%esp)
mov    %esi,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    32ae <main+0x208e>
lea    0x0(%esi),%esi
lea    -0x36f0(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xde,0x8(%esp)
jmp    3294 <main+0x2074>
nop
lea    -0x34b4(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x36f8(%ebx),%ebp
lea    -0x3eba(%ebx),%eax
lea    -0x2895(%ebx),%esi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   df0 <ntfs_log_redirect@plt>
lea    -0x33dc(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0xf4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    32ae <main+0x208e>
nop
lea    -0x36d3(%ebx),%eax
mov    %edi,0x4(%esp)
mov    $0x1,%edi
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x40,0xc(%esp)
movl   $0xee,0x8(%esp)
mov    %esi,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    32ae <main+0x208e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   2030 <main+0xe10>
add    $0x5a6c,%ebx
mov    0x44(%esp),%ebp
test   %esi,%esi
je     3608 <main+0x23e8>
mov    %ebp,%edi
and    $0x10000000,%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   3190 <main+0x1f70>
test   %eax,%eax
je     3588 <main+0x2368>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   1060 <ntfs_mount@plt>
test   %eax,%eax
je     3508 <main+0x22e8>
testb  $0x1,0x12(%eax)
mov    %eax,%esi
je     34f8 <main+0x22d8>
test   %edi,%edi
je     3618 <main+0x23f8>
lea    -0x2d00(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28a8(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x138,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x36be(%ebx),%eax
lea    -0x36f8(%ebx),%ebp
lea    -0x28a8(%ebx),%edi
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x11d,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   df0 <ntfs_log_redirect@plt>
call   1010 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x16,%eax
jne    3598 <main+0x2378>
lea    -0x3370(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x11f,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   df0 <ntfs_log_redirect@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %esi,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5,%eax
je     3673 <main+0x2453>
cmp    $0x1,%eax
je     36b2 <main+0x2492>
cmp    $0x5f,%eax
je     3730 <main+0x2510>
cmp    $0x10,%eax
je     36f1 <main+0x24d1>
cmp    $0x6,%eax
nop
jne    3588 <main+0x2368>
lea    -0x2f74(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3eba(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x129,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    34f8 <main+0x22d8>
lea    0x0(%esi,%eiz,1),%esi
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
jmp    34f8 <main+0x22d8>
lea    -0x2ea0(%ebx),%eax
mov    %eax,0x18(%esp)
lea    -0x3eba(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28a8(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x133,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0x0,0x4(%esp)
call   e10 <ntfs_umount@plt>
jmp    34f8 <main+0x22d8>
lea    -0x32bc(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3eba(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x121,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    34f8 <main+0x22d8>
lea    -0x3210(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3eba(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x123,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    34f8 <main+0x22d8>
lea    -0x34b4(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3eba(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x127,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    34f8 <main+0x22d8>
lea    -0x3198(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
lea    -0x3eba(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x125,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    34f8 <main+0x22d8>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x50(%esp),%esi
call   2030 <main+0xe10>
add    $0x575d,%ebx
movl   $0x0,0x3c(%esp)
test   %esi,%esi
jne    37a8 <main+0x2588>
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%ecx
test   %ecx,%ecx
je     3791 <main+0x2571>
lea    0x3c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   f00 <strtoll@plt>
test   %edx,%edx
mov    %eax,0x28(%esp)
mov    %edx,0x2c(%esp)
js     38c0 <main+0x26a0>
call   1010 <__errno_location@plt>
cmpl   $0x22,(%eax)
je     38c0 <main+0x26a0>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     39f0 <main+0x27d0>
mov    0x58(%esp),%edx
test   %edx,%edx
je     3890 <main+0x2670>
movzbl (%eax),%esi
mov    %esi,%ecx
cmp    $0x4d,%cl
je     384e <main+0x262e>
jle    3908 <main+0x26e8>
mov    %esi,%ecx
cmp    $0x6b,%cl
je     386d <main+0x264d>
jg     3950 <main+0x2730>
cmp    $0x54,%cl
xchg   %ax,%ax
je     3960 <main+0x2740>
cmp    $0x67,%cl
jne    3927 <main+0x2707>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
add    %edi,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    389d <main+0x267d>
xchg   %ax,%ax
movzbl (%eax),%edi
mov    %edi,%ecx
test   %cl,%cl
jne    3988 <main+0x2768>
mov    0x54(%esp),%eax
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x40,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x36a9(%ebx),%eax
mov    %esi,0x18(%esp)
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x162,0x8(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28b9(%ebx),%eax
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
cmp    $0x2d,%cl
je     389d <main+0x267d>
jle    39e0 <main+0x27c0>
mov    %esi,%ecx
cmp    $0x47,%cl
je     382f <main+0x260f>
cmp    $0x4b,%cl
je     386d <main+0x264d>
mov    %eax,0x18(%esp)
lea    -0x2c84(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x174,0x8(%esp)
jmp    38e6 <main+0x26c6>
nop
mov    %esi,%ecx
cmp    $0x6d,%cl
je     384e <main+0x262e>
cmp    $0x74,%cl
jne    3927 <main+0x2707>
mov    0x28(%esp),%eax
mov    $0x3e8,%ecx
imul   $0x3e8,0x2c(%esp),%edi
mul    %ecx
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
add    %edi,0x2c(%esp)
jmp    382f <main+0x260f>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2d,%cl
je     389d <main+0x267d>
sub    %esi,%eax
add    $0x1,%eax
mov    %eax,0x18(%esp)
lea    -0x3695(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28b9(%ebx),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x179,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    379e <main+0x257e>
nop
test   %cl,%cl
je     389d <main+0x267d>
jmp    3927 <main+0x2707>
lea    0x0(%esi),%esi
lea    -0x2cb8(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28b9(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x167,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    379e <main+0x257e>
jmp    3a40 <main+0x2820>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   2030 <main+0xe10>
add    $0x548d,%ebx
test   %esi,%esi
je     3ad8 <main+0x28b8>
mov    0x34(%esp),%edx
test   %edx,%edx
je     3ad8 <main+0x28b8>
mov    0x38(%esp),%eax
test   %eax,%eax
je     3ad8 <main+0x28b8>
movl   $0x2d,0x4(%esp)
mov    %esi,(%esp)
call   f90 <strchr@plt>
cmp    %eax,%esi
mov    %eax,%edi
je     3af0 <main+0x28d0>
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   3770 <main+0x2550>
test   %eax,%eax
je     3b18 <main+0x28f8>
test   %edi,%edi
je     3b08 <main+0x28e8>
cmpb   $0x0,0x1(%edi)
jne    3b28 <main+0x2908>
mov    0x10(%esp),%esi
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0x14(%esp),%edi
mov    0x34(%esp),%ecx
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x38(%esp),%ecx
mov    %eax,(%ecx)
mov    $0x1,%eax
mov    %edx,0x4(%ecx)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
jmp    3a9f <main+0x287f>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,%esi
mov    %edx,%edi
jmp    3ab8 <main+0x2898>
xchg   %ax,%ax
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
add    $0x1,%edi
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
call   3770 <main+0x2550>
test   %eax,%eax
je     3b18 <main+0x28f8>
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
jmp    3ab8 <main+0x2898>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x44(%esp),%esi
call   2030 <main+0xe10>
add    $0x536e,%ebx
test   %esi,%esi
je     3bd8 <main+0x29b8>
mov    0x40(%esp),%eax
mov    %esi,0x20(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   10a0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    3bd0 <main+0x29b0>
mov    0x4(%esi),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    3bc7 <main+0x29a7>
lea    0x0(%esi,%eiz,1),%esi
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    3bc7 <main+0x29a7>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%eax
call   2030 <main+0xe10>
add    $0x52dd,%ebx
test   %eax,%eax
je     3c48 <main+0x2a28>
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   10c0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%esi
je     3c58 <main+0x2a38>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   3b60 <main+0x2940>
mov    %esi,(%esp)
mov    %eax,%edi
call   fa0 <ntfs_attr_put_search_ctx@plt>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    3c3b <main+0x2a1b>
nop
lea    -0x2c54(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28ce(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x1ee,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    3c3b <main+0x2a1b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%ecx
call   2030 <main+0xe10>
add    $0x5226,%ebx
test   %ecx,%ecx
jne    3cd8 <main+0x2ab8>
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc4(%esp),%edx
test   %edx,%edx
je     3cc0 <main+0x2aa0>
mov    0xc0(%esp),%eax
lea    0x4c(%esp),%edi
mov    $0x15,%ecx
mov    %edi,0x3c(%esp)
mov    0x3c(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x5,0x28(%esp)
mov    0xc(%eax),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,0x38(%esp)
xor    %eax,%eax
rep stos %eax,%es:(%edi)
lea    -0x2c30(%ebx),%eax
mov    %eax,0x34(%esp)
mov    0xc0(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   10c0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     4045 <main+0x2e25>
mov    $0x4,%ebp
mov    %ebp,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x30,(%esp)
mov    %eax,0x4(%esp)
call   3b60 <main+0x2940>
test   %eax,%eax
je     3e68 <main+0x2c48>
movzwl 0x14(%eax),%edi
add    %eax,%edi
movzbl 0x41(%edi),%ebp
cmp    0x20(%esp),%ebp
jg     3d58 <main+0x2b38>
mov    (%edi),%eax
mov    %eax,0x28(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x2c(%esp)
mov    (%esi),%eax
test   %eax,%eax
je     3da5 <main+0x2b85>
mov    %eax,(%esp)
call   e70 <free@plt>
movl   $0x0,(%esi)
movl   $0x0,0xc(%esp)
add    $0x42,%edi
mov    %esi,0x8(%esp)
movzbl -0x2(%edi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   f20 <ntfs_ucstombs@plt>
test   %eax,%eax
js     3dd0 <main+0x2bb0>
mov    %ebp,0x20(%esp)
jmp    3d58 <main+0x2b38>
xchg   %ax,%ax
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x23d,0x8(%esp)
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28e3(%ebx),%eax
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
movl   $0x1e,(%esp)
call   e60 <ntfs_malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     3f1b <main+0x2cfb>
mov    0xc0(%esp),%eax
mov    0x4(%eax),%edx
mov    (%eax),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    -0x367d(%ebx),%eax
mov    %eax,0x10(%esp)
movl   $0x1e,0x4(%esp)
mov    %edi,(%esp)
call   de0 <__snprintf_chk@plt>
mov    %edi,(%esi)
jmp    3dc8 <main+0x2ba8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
mov    0x28(%esp),%ebp
mov    %eax,%edi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   fa0 <ntfs_attr_put_search_ctx@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
je     3e95 <main+0x2c75>
mov    0xc0(%esp),%eax
mov    %eax,(%esp)
call   1040 <ntfs_inode_close@plt>
mov    %ebp,%eax
mov    %edi,%ecx
xor    $0x5,%eax
movzwl %di,%edi
or     %edi,%eax
je     3f6a <main+0x2d4a>
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   10d0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0xc0(%esp)
je     3f28 <main+0x2d08>
addl   $0x1,0x30(%esp)
add    $0x4,%esi
cmpl   $0x14,0x30(%esp)
jne    3d28 <main+0x2b08>
lea    -0x2c00(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28e3(%ebx),%eax
movl   $0x14,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x25e,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3673(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28e3(%ebx),%eax
mov    %ebp,0x18(%esp)
mov    %edi,0x1c(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x257,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
lea    0x48(%esp),%eax
xor    %ebp,%ebp
mov    %eax,0x20(%esp)
lea    -0x3658(%ebx),%eax
lea    0x9c(%esp),%esi
mov    %eax,0x24(%esp)
lea    0x0(%esi),%esi
mov    (%esi),%eax
test   %eax,%eax
je     3fd6 <main+0x2db6>
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    0xc8(%esp),%edi
movl   $0x2f,0x14(%esp)
movl   $0xffffffff,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0xc4(%esp),%eax
sub    %ebp,%edi
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
add    %ebp,%eax
mov    %eax,(%esp)
call   de0 <__snprintf_chk@plt>
cmp    %eax,%edi
jle    4009 <main+0x2de9>
add    %eax,%ebp
sub    $0x4,%esi
cmp    0x20(%esp),%esi
jne    3f88 <main+0x2d68>
mov    0x3c(%esp),%eax
lea    0x50(%eax),%edi
mov    %eax,%esi
mov    (%esi),%eax
add    $0x4,%esi
mov    %eax,(%esp)
call   e70 <free@plt>
cmp    %edi,%esi
jne    3fe8 <main+0x2dc8>
add    $0xac,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x3653(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28e3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x269,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    3fdf <main+0x2dbf>
lea    -0x2c54(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28e3(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x223,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
xor    %eax,%eax
jmp    3ccd <main+0x2aad>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   2030 <main+0xe10>
add    $0x4e3c,%ebx
test   %esi,%esi
jne    40c0 <main+0x2ea0>
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x58(%esp),%eax
test   %eax,%eax
je     40aa <main+0x2e8a>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   e40 <ntfs_attr_find_in_attrdef@plt>
test   %eax,%eax
mov    %eax,%edi
je     4278 <main+0x3058>
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   ea0 <ntfs_ucsnlen@plt>
lea    0x2c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   f20 <ntfs_ucstombs@plt>
test   %eax,%eax
js     4250 <main+0x3030>
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x3eba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   fe0 <snprintf@plt>
cmp    0x5c(%esp),%eax
jge    4208 <main+0x2fe8>
movzbl 0x9(%esi),%edx
test   %dl,%dl
je     40b5 <main+0x2e95>
mov    0x58(%esp),%edi
mov    0x5c(%esp),%ebp
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
add    %eax,%edi
sub    %eax,%ebp
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
movzwl 0xa(%esi),%eax
movl   $0x0,0x2c(%esp)
add    %eax,%esi
mov    %esi,(%esp)
call   f20 <ntfs_ucstombs@plt>
test   %eax,%eax
js     42e0 <main+0x30c0>
mov    0x2c(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
lea    -0x3630(%ebx),%eax
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   de0 <__snprintf_chk@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   e70 <free@plt>
cmp    %esi,%ebp
jg     40b5 <main+0x2e95>
lea    -0x2b0c(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2b4,0x8(%esp)
jmp    422a <main+0x300a>
lea    0x0(%esi),%esi
lea    -0x2b64(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x29a,0x8(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28f7(%ebx),%eax
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2bbc(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x28f,0x8(%esp)
jmp    422a <main+0x300a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x295,0x8(%esp)
mov    %eax,0x18(%esp)
lea    -0x2b84(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28f7(%ebx),%eax
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
lea    -0x363a(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   fe0 <snprintf@plt>
jmp    4146 <main+0x2f26>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2b44(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x28f7(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x2aa,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
lea    -0x363a(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   fe0 <snprintf@plt>
jmp    40b5 <main+0x2e95>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   2030 <main+0xe10>
add    $0x4b84,%ebx
test   %ecx,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     44be <main+0x329e>
mov    0x138(%ebx),%edx
cmp    0x1c(%esp),%edx
mov    0x134(%ebx),%eax
jle    4448 <main+0x3228>
mov    0x64(%ecx),%eax
mov    0xe4(%ebx),%edx
movl   $0x0,0xc(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   fd0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%esi
je     44d3 <main+0x32b3>
lea    0x364(%ebx),%edx
mov    $0xffffffff,%eax
mov    %edx,%edi
mov    $0x80,%ecx
rep stos %eax,%es:(%edi)
mov    0x18(%esp),%eax
xor    %ebp,%ebp
mov    %edx,0x14(%esp)
mov    %ebp,%edx
sar    $0x3,%edx
movl   $0x200,0xc(%esp)
and    $0xfffff000,%eax
mov    %eax,0x134(%ebx)
shrd   $0x3,%ebp,%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %ebp,0x138(%ebx)
call   fc0 <ntfs_attr_pread@plt>
test   %edx,%edx
js     4475 <main+0x3255>
mov    %esi,(%esp)
call   f30 <ntfs_attr_close@plt>
mov    0x18(%esp),%esi
mov    $0x1,%edx
mov    0x1c(%esp),%edi
mov    %esi,%eax
mov    %esi,%ecx
shrd   $0x3,%edi,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x364(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jl     4454 <main+0x3234>
cmp    0x18(%esp),%eax
ja     4384 <main+0x3164>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,0x1c(%esp)
jl     4417 <main+0x31f7>
jg     4384 <main+0x3164>
cmp    %eax,0x18(%esp)
jbe    4417 <main+0x31f7>
xchg   %ax,%ax
jmp    4384 <main+0x3164>
lea    -0x3615(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x290c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2eb,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
mov    %esi,(%esp)
call   f30 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    4440 <main+0x3220>
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    4440 <main+0x3220>
lea    -0x362b(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x290c(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x2e1,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    4440 <main+0x3220>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
mov    0x44(%esp),%eax
mov    0x48(%esp),%edx
call   2030 <main+0xe10>
add    $0x49a4,%ebx
test   %edi,%edi
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     4635 <main+0x3415>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%ecx
mov    0x130(%ebx),%edx
and    $0xffff,%ecx
mov    %eax,%esi
mov    0x12c(%ebx),%eax
cmp    %edx,%ecx
jge    4608 <main+0x33e8>
lea    0x164(%ebx),%ebp
xor    %eax,%eax
mov    $0x80,%ecx
mov    %ebp,%edi
rep stos %eax,%es:(%edi)
mov    0x40(%esp),%edi
and    $0xfffff000,%esi
xor    %edx,%edx
mov    %esi,%eax
shrd   $0x3,%edx,%eax
mov    %edx,0x130(%ebx)
sar    $0x3,%edx
mov    %esi,0x12c(%ebx)
mov    0x7c(%edi),%ecx
mov    %ebp,0x14(%esp)
movl   $0x200,0xc(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   fc0 <ntfs_attr_pread@plt>
test   %edx,%edx
js     4647 <main+0x3427>
mov    0x18(%esp),%edi
mov    $0x1,%edx
mov    0x1c(%esp),%ebp
mov    %edi,%eax
mov    %edi,%ecx
shrd   $0x3,%ebp,%eax
and    $0x7,%ecx
and    $0x1ff,%eax
movzbl 0x164(%ebx,%eax,1),%eax
shl    %cl,%edx
and    %edx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
jg     4612 <main+0x33f2>
cmp    %eax,%esi
jb     4574 <main+0x3354>
add    $0xfff,%eax
adc    $0x0,%edx
cmp    %edx,%ecx
jl     45d1 <main+0x33b1>
jg     4574 <main+0x3354>
cmp    %eax,%esi
jbe    45d1 <main+0x33b1>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    4574 <main+0x3354>
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    45fa <main+0x33da>
lea    -0x35ff(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2920(%ebx),%eax
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x325,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
mov    $0xffffffff,%eax
jmp    45fa <main+0x33da>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   2030 <main+0xe10>
add    $0x483c,%ebx
test   %eax,%eax
je     477f <main+0x355f>
mov    0xc(%eax),%esi
test   %esi,%esi
je     4778 <main+0x3558>
mov    0x4(%eax),%edx
mov    (%eax),%edi
cmp    $0x0,%edx
ja     46c8 <main+0x34a8>
cmp    $0xa,%edi
jbe    4738 <main+0x3518>
movzbl 0x10(%esi),%ecx
cmp    $0x3,%cl
je     4768 <main+0x3548>
mov    0x8(%eax),%eax
test   %eax,%eax
je     4700 <main+0x34e0>
mov    0x24(%eax),%edx
mov    0x20(%eax),%edi
mov    %edx,%ebp
or     %edi,%ebp
je     4700 <main+0x34e0>
and    $0xffff,%edx
je     4760 <main+0x3540>
cmp    $0x3,%cl
jne    4700 <main+0x34e0>
xor    $0xb,%edi
or     %edx,%edi
je     4738 <main+0x3518>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x30,(%esp)
call   3bf0 <main+0x29d0>
test   %eax,%eax
je     4778 <main+0x3558>
movzwl 0x14(%eax),%edx
mov    (%eax,%edx,1),%ecx
movzwl 0x4(%eax,%edx,1),%edx
xor    %eax,%eax
mov    %ecx,%edi
xor    $0x5,%edi
or     %edx,%edi
je     473d <main+0x351d>
cmp    $0x0,%edx
ja     4748 <main+0x3528>
cmp    $0xa,%ecx
ja     4748 <main+0x3528>
lea    0x0(%esi),%esi
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
cmpb   $0x3,0x10(%esi)
jne    473d <main+0x351d>
xor    $0xb,%ecx
xor    %eax,%eax
or     %edx,%ecx
sete   %al
jmp    473d <main+0x351d>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%edi
jbe    4738 <main+0x3518>
jmp    46f0 <main+0x34d0>
nop
xor    $0xb,%edi
or     %edx,%edi
lea    0x0(%esi),%esi
jne    46d5 <main+0x34b5>
jmp    4738 <main+0x3518>
mov    $0xffffffff,%eax
jmp    473d <main+0x351d>
nop
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    473d <main+0x351d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   2030 <main+0xe10>
add    $0x471e,%ebx
test   %esi,%esi
je     47f8 <main+0x35d8>
movl   $0x18,0x4(%esp)
movl   $0x1,(%esp)
call   1100 <calloc@plt>
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
mov    %esi,0xc(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
xor    %eax,%eax
jmp    47ed <main+0x35cd>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   2030 <main+0xe10>
add    $0x46be,%ebx
test   %esi,%esi
je     483f <main+0x361f>
mov    0x8(%esi),%eax
test   %eax,%eax
je     4837 <main+0x3617>
mov    %eax,(%esp)
call   1040 <ntfs_inode_close@plt>
mov    %esi,(%esp)
call   e70 <free@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   2030 <main+0xe10>
add    $0x467c,%ebx
test   %esi,%esi
je     4dba <main+0x3b9a>
mov    0x8(%esi),%eax
test   %eax,%eax
je     4884 <main+0x3664>
mov    %eax,(%esp)
call   1040 <ntfs_inode_close@plt>
movl   $0x0,0x8(%esi)
mov    0xc(%esi),%edi
mov    0x78(%edi),%eax
movzbl 0x25(%edi),%ecx
mov    0x30(%eax),%edx
mov    0x2c(%eax),%eax
shrd   %cl,%edx,%eax
sar    %cl,%edx
mov    %edx,%ebp
sar    $0x1f,%ebp
test   $0x20,%cl
cmovne %edx,%eax
cmovne %ebp,%edx
mov    %eax,0x28(%esp)
mov    0x10(%esi),%eax
mov    %edx,0x2c(%esp)
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jle    4c50 <main+0x3a30>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
call   4520 <main+0x3300>
cmp    $0xffffffff,%eax
je     4c68 <main+0x3a48>
test   %eax,%eax
je     4a70 <main+0x3850>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    0xc(%esi),%ecx
orl    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,(%esp)
call   10d0 <ntfs_inode_open@plt>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     4bf0 <main+0x39d0>
mov    0x8(%eax),%eax
movl   $0x10,(%esp)
mov    %eax,0x4(%esp)
call   3bf0 <main+0x29d0>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   3bf0 <main+0x29d0>
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
movl   $0x80,(%esp)
mov    %eax,0x4(%esp)
call   3bf0 <main+0x29d0>
test   %ebp,%ebp
je     4c40 <main+0x3a20>
orl    $0x40,0x4(%esi)
test   %edi,%edi
je     4977 <main+0x3757>
orl    $0x40,0x4(%esi)
test   %eax,%eax
je     497f <main+0x375f>
orl    $0x4,0x4(%esi)
testb  $0x8,(%esi)
je     49fb <main+0x37db>
mov    0x8(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   10c0 <ntfs_attr_get_search_ctx@plt>
test   %eax,%eax
mov    %eax,%edi
je     4d96 <main+0x3b76>
mov    %eax,0x20(%esp)
mov    0xf0(%ebx),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x90,(%esp)
call   10a0 <ntfs_attr_lookup@plt>
test   %eax,%eax
jne    49f3 <main+0x37d3>
orl    $0x8,0x4(%esi)
mov    %edi,(%esp)
call   fa0 <ntfs_attr_put_search_ctx@plt>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   4690 <main+0x3470>
test   %eax,%eax
je     4be0 <main+0x39c0>
cmp    $0x1,%eax
mov    0x4(%esi),%eax
jne    4bd0 <main+0x39b0>
or     $0x10,%eax
mov    %eax,0x4(%esi)
test   %eax,(%esi)
jne    4a5a <main+0x383a>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   1040 <ntfs_inode_close@plt>
test   %eax,%eax
jne    4cc0 <main+0x3aa0>
movl   $0x0,0x8(%esi)
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
add    $0x1,%eax
adc    $0x0,%edx
cmp    %edx,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    %edx,0x14(%esi)
jge    4bb8 <main+0x3998>
mov    0x8(%esi),%ecx
xor    %eax,%eax
test   %ecx,%ecx
sete   %al
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
orl    $0x2,0x4(%esi)
movl   $0x70,0x4(%esp)
movl   $0x1,(%esp)
call   1100 <calloc@plt>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x8(%esi)
je     4d19 <main+0x3af9>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
mov    %eax,(%edi)
mov    0xc(%esi),%eax
mov    %edx,0x4(%edi)
mov    %eax,0xc(%edi)
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   e60 <ntfs_malloc@plt>
mov    %eax,0x8(%edi)
mov    0x8(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     4d60 <main+0x3b40>
mov    0xc(%esi),%eax
mov    0xe4(%ebx),%ecx
mov    0x74(%eax),%eax
movl   $0x0,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0x80,0x4(%esp)
mov    %eax,(%esp)
call   fd0 <ntfs_attr_open@plt>
test   %eax,%eax
mov    %eax,%edi
je     4d72 <main+0x3b52>
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    0x1c(%edx),%ecx
mov    0x8(%eax),%eax
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x14(%esi),%eax
imul   %ecx,%eax
mov    %eax,%ebp
mov    %ecx,%eax
mull   0x10(%esi)
mov    %edi,(%esp)
mov    %edx,%ecx
add    %ebp,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   fc0 <ntfs_attr_pread@plt>
mov    %eax,%ecx
mov    0xc(%esi),%eax
cmp    $0x0,%edx
mov    0x1c(%eax),%eax
jg     4ba4 <main+0x3984>
jge    4ba0 <main+0x3980>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3595(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2930(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x44a,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
mov    %edi,(%esp)
call   f30 <ntfs_attr_close@plt>
mov    $0xffffffff,%eax
jmp    4a64 <main+0x3844>
lea    0x0(%esi),%esi
cmp    %eax,%ecx
jb     4b40 <main+0x3920>
mov    %edi,(%esp)
call   f30 <ntfs_attr_close@plt>
mov    0x4(%esi),%eax
jmp    4a20 <main+0x3800>
lea    0x0(%esi,%eiz,1),%esi
jg     4bc6 <main+0x39a6>
cmp    %eax,0x28(%esp)
xchg   %ax,%ax
jbe    4a5a <main+0x383a>
mov    0xc(%esi),%edi
jmp    48d0 <main+0x36b0>
xchg   %ax,%ax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    4a20 <main+0x3800>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
or     $0x20,%eax
mov    %eax,0x4(%esi)
jmp    4a20 <main+0x3800>
xchg   %ax,%ax
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x35e4(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2930(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x404,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
jmp    4a3e <main+0x381e>
lea    0x0(%esi),%esi
orl    $0x80,0x4(%esi)
jmp    496f <main+0x374f>
lea    0x0(%esi,%eiz,1),%esi
jl     4a5a <main+0x383a>
cmp    %eax,0x28(%esp)
ja     48d0 <main+0x36b0>
jmp    4a5a <main+0x383a>
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x2aec(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2930(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x3fa,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    0x14(%esi),%edx
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
mov    %eax,0x18(%esp)
lea    -0x3577(%ebx),%eax
mov    %eax,0x14(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2930(%ebx),%eax
mov    %edx,0x1c(%esp)
movl   $0x459,0x8(%esp)
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
call   1010 <__errno_location@plt>
mov    (%eax),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    -0x35c9(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x434,0x8(%esp)
lea    -0x36f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x2930(%ebx),%eax
mov    %eax,(%esp)
call   df0 <ntfs_log_redirect@plt>
add    $0x3c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   e70 <free@plt>
mov    $0xffffffff,%eax
jmp    4a64 <main+0x3844>
lea    -0x35ae(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x100,0xc(%esp)
movl   $0x443,0x8(%esp)
jmp    4d3b <main+0x3b1b>
lea    -0x2c54(%ebx),%eax
mov    %eax,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80,0xc(%esp)
movl   $0x41f,0x8(%esp)
jmp    4d3b <main+0x3b1b>
call   1010 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0xffffffff,%eax
jmp    4a64 <main+0x3844>
nop
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    4e18 <main+0x3bf8>
cmp    %edi,%esi
jbe    4e50 <main+0x3c30>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     4e70 <main+0x3c50>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    4e80 <main+0x3c60>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     4f18 <main+0x3cf8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    4e61 <main+0x3c41>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    4e0b <main+0x3beb>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     4f04 <main+0x3ce4>
cmp    %eax,0xc(%esp)
jb     4f00 <main+0x3ce0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    4ede <main+0x3cbe>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    4ede <main+0x3cbe>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     4e31 <main+0x3c11>
jmp    4e41 <main+0x3c21>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   2030 <main+0xe10>
add    $0x3fa1,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x180(%ebx),%esi
call   d98 <_init>
lea    -0x184(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     4f8b <main+0x3d6b>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x184(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    4f68 <main+0x3d48>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   2030 <main+0xe10>
add    $0x3f26,%ebx
sub    $0x8,%esp
call   eb0 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   2030 <main+0xe10>
add    $0x3f0f,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x20756c6c
add    %ah,0x74(%ecx)
je     5062 <_IO_stdin_used+0x86>
imul   $0x30206574,0x75(%edx),%esp
js     501e <_IO_stdin_used+0x42>
js     4ffb <_IO_stdin_used+0x1f>
cmp    0x746e0073,%ah
data16
jae    5067 <_IO_stdin_used+0x8b>
insl   (%dx),%es:(%edi)
jo     5007 <_IO_stdin_used+0x2b>
and    $0x732573,%eax
inc    %ebp
push   %edx
push   %edx
dec    %edi
push   %edx
cmp    (%eax),%ah
add    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
sub    %ah,0x203a2964
add    %bh,(%edx)
and    %ah,0x61460073
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     5096 <_IO_stdin_used+0xba>
popa
fs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %al,0x49(%edx)
push   %esp
dec    %ebp
inc    %ecx
push   %eax
add    %ah,0x66322e36
and    %dh,0x65(%eax)
jb     50ab <_IO_stdin_used+0xcf>
outsb  %gs:(%esi),(%dx)
je     506c <_IO_stdin_used+0x90>
arpl   %bp,0x6d(%edi)
jo     50bd <_IO_stdin_used+0xe1>
gs
je     50b9 <_IO_stdin_used+0xdd>
fs
or     $0x30303100,%eax
xor    %dh,%cs:(%eax)
and    %dh,0x65(%eax)
jb     50c5 <_IO_stdin_used+0xe9>
outsb  %gs:(%esi),(%dx)
je     5086 <_IO_stdin_used+0xaa>
arpl   %bp,0x6d(%edi)
jo     50d7 <_IO_stdin_used+0xfb>
gs
je     50d3 <_IO_stdin_used+0xf7>
add    %ch,%fs:0x74(%esi)
data16
jae    50d4 <_IO_stdin_used+0xf8>
jne    50da <_IO_stdin_used+0xfe>
jae    50ed <_IO_stdin_used+0x111>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %esi,0x0(%ebx)
outsb  %ds:(%esi),(%dx)
je     50e7 <_IO_stdin_used+0x10b>
jae    50e2 <_IO_stdin_used+0x106>
imul   $0x635f6564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    50f3 <_IO_stdin_used+0x117>
cmp    (%eax),%ah
imul   $0x25206564,0x6f(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    509b <_IO_stdin_used+0xbf>
push   %edx
gs
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x20646c6c
popaw
imul   $0x6f632800,0x64(%ebp,%eiz,2),%ebp
jne    5128 <_IO_stdin_used+0x14c>
je     50f6 <_IO_stdin_used+0x11a>
and    %ah,0x20646c6c
and    %ah,(%ecx)
cmp    $0x6c252020,%eax
insb   (%dx),%es:(%edi)
sub    %eax,%fs:(%eax)
and    $0x65722073,%eax
popa
and    %ah,%fs:0x72(%ebp)
jb     5148 <_IO_stdin_used+0x16c>
jb     5115 <_IO_stdin_used+0x139>
and    %al,(%eax)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x6c6c2520
fs
sub    $0x20,%al
jo     515a <_IO_stdin_used+0x17e>
jae    510d <_IO_stdin_used+0x131>
cmp    $0x6c6c2520,%eax
or     %fs:(%eax),%al
and    $0x65722073,%eax
popa
and    %ah,%fs:0x72(%ebp)
jb     5170 <_IO_stdin_used+0x194>
jb     5123 <_IO_stdin_used+0x147>
bound  %esp,0x66(%ebp)
outsl  %ds:(%esi),(%dx)
jb     516e <_IO_stdin_used+0x192>
and    %al,0x4f(%ebp)
inc    %esi
cmp    (%eax),%ah
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     517a <_IO_stdin_used+0x19e>
outsb  %ds:(%esi),(%dx)
je     5152 <_IO_stdin_used+0x176>
and    %ah,(%eax)
and    %al,0x46(%ecx,%ecx,2)
inc    %esi
inc    %ebp
push   %edx
add    %ah,0x65722073
popa
and    %ch,%fs:0x76(%edi)
gs
jb     51a1 <_IO_stdin_used+0x1c5>
jne    519f <_IO_stdin_used+0x1c3>
cmp    (%eax),%ah
add    %cl,0x70(%edi)
outsb  %gs:(%esi),(%dx)
imul   $0x73252720,0x67(%esi),%ebp
daa
and    %ah,0x73(%ecx)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ah,0x61(%esi)
imul   $0x72747300,0x64(%ebp,%eiz,2),%ebp
fs
jne    51c6 <_IO_stdin_used+0x1ea>
and    %ah,0x72(%ebp)
jb     51ca <_IO_stdin_used+0x1ee>
jb     515d <_IO_stdin_used+0x181>
cmp    (%eax),%ah
and    $0x46000a73,%eax
inc    %ecx
dec    %ecx
dec    %esp
inc    %ebp
inc    %esp
add    %cl,0x4b(%edi)
add    %dh,(%edx)
xor    %dh,(%ecx)
xor    (%esi),%ebp
xor    %ebp,(%esi)
xor    %esi,(%ebx)
inc    %ecx
push   %edx
xor    %eax,%cs:(%eax)
and    $0x25762073,%eax
jae    51a2 <_IO_stdin_used+0x1c6>
sub    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     51ef <_IO_stdin_used+0x213>
jae    51b8 <_IO_stdin_used+0x1dc>
xor    0x29(%edi),%esp
or     (%eax),%al
push   %esp
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    51b9 <_IO_stdin_used+0x1dd>
popa
jb     5203 <_IO_stdin_used+0x227>
jne    520b <_IO_stdin_used+0x22f>
outsb  %gs:(%esi),(%dx)
je     5215 <_IO_stdin_used+0x239>
and    %ecx,(%edx)
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     521a <_IO_stdin_used+0x23e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0xa2e2773,%eax
add    %ch,0x76506864
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
cmp    (%eax),%ah
and    %ah,(%eax)
and    $0x21202073,%eax
cmp    $0x73252020,%eax
or     (%eax),%al
outsb  %ds:(%esi),(%dx)
je     523e <_IO_stdin_used+0x262>
jae    5239 <_IO_stdin_used+0x25d>
popa
je     5251 <_IO_stdin_used+0x275>
jb     523e <_IO_stdin_used+0x262>
addr16
gs
je     5242 <_IO_stdin_used+0x266>
jae    524a <_IO_stdin_used+0x26e>
popa
jb     524b <_IO_stdin_used+0x26f>
push   $0x7874635f
add    %ch,0x65(%eax)
popa
fs
gs
jb     522f <_IO_stdin_used+0x253>
and    %ah,(%eax)
and    %ah,(%eax)
inc    %esp
dec    %ecx
inc    %esi
inc    %esi
inc    %ebp
push   %edx
add    %ch,0x6e(%ebp,%eiz,2)
addr16 je 526e <_IO_stdin_used+0x292>
cmp    (%eax),%ah
and    %ah,(%eax)
and    $0x20646c6c,%eax
and    %ah,(%ecx)
cmp    $0x6c252020,%eax
insb   (%dx),%es:(%edi)
or     %fs:(%eax),%al
push   $0x706c65
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x676f7270,%eax
jb     528d <_IO_stdin_used+0x2b1>
jae    529d <_IO_stdin_used+0x2c1>
sub    $0x726162,%eax
jbe    5296 <_IO_stdin_used+0x2ba>
jb     5295 <_IO_stdin_used+0x2b9>
outsl  %ds:(%esi),(%dx)
jae    529b <_IO_stdin_used+0x2bf>
add    %cl,0x4e(%ecx)
dec    %edi
inc    %esp
inc    %ebp
pop    %edi
dec    %edi
push   %eax
inc    %ebp
dec    %esi
pop    %edi
inc    %ebp
push   %edx
push   %edx
dec    %edi
push   %edx
add    %cl,0x4e(%ecx)
dec    %edi
inc    %esp
inc    %ebp
pop    %edi
dec    %edi
push   %eax
inc    %ebp
dec    %esi
pop    %edi
dec    %ecx
dec    %edi
pop    %edi
inc    %ebp
push   %edx
push   %edx
dec    %edi
push   %edx
add    %cl,0x4e(%ecx)
dec    %edi
inc    %esp
inc    %ebp
pop    %edi
dec    %edi
push   %eax
inc    %ebp
dec    %esi
pop    %edi
inc    %ebp
dec    %esi
dec    %edi
inc    %ebp
dec    %esi
push   %esp
pop    %edi
inc    %ebp
push   %edx
push   %edx
dec    %edi
push   %edx
add    %al,0x58(%ebp)
push   %esp
inc    %ebp
dec    %esi
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
push   %edx
inc    %ebp
inc    %ebx
dec    %edi
push   %edx
inc    %esp
add    %cl,0x4e(%ecx)
dec    %edi
inc    %esp
inc    %ebp
pop    %edi
inc    %ebx
dec    %esp
dec    %edi
push   %ebx
inc    %ebp
pop    %edi
inc    %ebp
push   %edx
push   %edx
dec    %edi
push   %edx
add    %al,(%eax)
or     0x73(%ebp),%dl
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
pop    %ebp
and    %al,0x56(%ebp,%eax,2)
dec    %ecx
inc    %ebx
inc    %ebp
xor    %esp,(%eax)
inc    %esp
inc    %ebp
push   %esi
dec    %ecx
inc    %ebx
inc    %ebp
xor    (%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     5327 <_IO_stdin_used+0x34b>
jb     532d <_IO_stdin_used+0x351>
and    %dh,0x6f(%edi,%esi,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5344 <_IO_stdin_used+0x368>
gs
jae    52fa <_IO_stdin_used+0x31e>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x6c(%ebp,%eiz,2)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x66(%ecx,%ebp,2)
data16
gs
jb     5353 <_IO_stdin_used+0x377>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
or     %cs:(%edx),%cl
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c50,%eax
sub    $0x702d6f6e,%eax
jb     5374 <_IO_stdin_used+0x398>
addr16 jb 536d <_IO_stdin_used+0x391>
jae    537d <_IO_stdin_used+0x3a1>
sub    $0x20726162,%eax
and    %al,0x6e(%edi,%ebp,2)
daa
je     5336 <_IO_stdin_used+0x35a>
jae    5380 <_IO_stdin_used+0x3a4>
outsl  %ds:(%esi),(%dx)
ja     533b <_IO_stdin_used+0x35f>
jo     538f <_IO_stdin_used+0x3b3>
outsl  %ds:(%esi),(%dx)
addr16 jb 5386 <_IO_stdin_used+0x3aa>
jae    5396 <_IO_stdin_used+0x3ba>
and    %ah,0x61(%edx)
jb     5332 <_IO_stdin_used+0x356>
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x2d202c76,%eax
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    539e <_IO_stdin_used+0x3c2>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jb     53ac <_IO_stdin_used+0x3d0>
and    %ch,0x75(%edi)
je     53bc <_IO_stdin_used+0x3e0>
jne    53c2 <_IO_stdin_used+0x3e6>
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x2d202c68
sub    $0x706c6568,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ecx,%ebp,2)
jo     53db <_IO_stdin_used+0x3ff>
popa
jns    5392 <_IO_stdin_used+0x3b6>
je     53dc <_IO_stdin_used+0x400>
imul   $0x706c6568,0x20(%ebx),%esi
or     (%edx),%cl
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jo     53fe <_IO_stdin_used+0x422>
gs
popa
and    %cl,%fs:0x4e(%ecx)
inc    %esp
inc    %ebp
pop    %eax
pop    %edi
inc    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %ebx
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
add    %al,(%eax)
add    %al,(%eax)
jb     540b <_IO_stdin_used+0x42f>
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x20756c6c
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     5419 <_IO_stdin_used+0x43d>
jae    542a <_IO_stdin_used+0x44e>
pop    %edi
jbe    541c <_IO_stdin_used+0x440>
outsb  %ds:(%esi),(%dx)
and    %ah,0x3a646c6c
and    %ah,(%eax)
and    %ah,(%eax)
push   %ebx
dec    %ebx
dec    %ecx
push   %eax
push   %eax
inc    %ebp
inc    %esp
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x62(%ecx)
jb     5449 <_IO_stdin_used+0x46d>
jo     544a <_IO_stdin_used+0x46e>
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 5445 <_IO_stdin_used+0x469>
cmp    (%eax),%ah
and    %ah,(%eax)
and    $0x20646c6c,%eax
and    %ah,(%ecx)
cmp    $0x6c252020,%eax
insb   (%dx),%es:(%edi)
and    %al,%fs:(%eax)
add    %al,(%eax)
add    %ch,(%eax)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0x6c6c2520
fs
sub    $0x20,%al
jo     5472 <_IO_stdin_used+0x496>
jae    5425 <_IO_stdin_used+0x449>
cmp    $0x6c6c2520,%eax
fs
sub    $0x20,%al
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     5433 <_IO_stdin_used+0x457>
cmp    $0x6c6c2520,%eax
sub    %ecx,%fs:(%edx)
add    %al,0x76(%ebp,%eiz,2)
imul   $0x73252720,0x65(%ebx),%esp
daa
and    %ch,0x73(%ecx)
and    %ch,0x6f(%ebp)
jne    549d <_IO_stdin_used+0x4c1>
je     5496 <_IO_stdin_used+0x4ba>
and    %dh,%fs:0x65(%edx)
popa
fs
sub    $0x74697277,%eax
gs and %bl,%cs:%gs:0x6f(%ecx)
jne    5463 <_IO_stdin_used+0x487>
insl   (%dx),%es:(%edi)
jne    54b9 <_IO_stdin_used+0x4dd>
je     5468 <_IO_stdin_used+0x48c>
daa
jne    54b8 <_IO_stdin_used+0x4dc>
outsl  %ds:(%esi),(%dx)
jne    54bc <_IO_stdin_used+0x4e0>
je     5477 <_IO_stdin_used+0x49b>
and    %ch,0x74(%ecx)
and    %ah,0x69(%esi)
jb     54cb <_IO_stdin_used+0x4ef>
je     5488 <_IO_stdin_used+0x4ac>
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x65(%eax)
arpl   %bp,0x20(%ebx)
daa
and    $0x6d202773,%eax
outsl  %ds:(%esi),(%dx)
jne    54e3 <_IO_stdin_used+0x507>
je     5497 <_IO_stdin_used+0x4bb>
jae    54ed <_IO_stdin_used+0x511>
popa
je     54e1 <_IO_stdin_used+0x505>
add    %al,(%eax)
add    %al,(%eax)
push   %eax
jb     54f2 <_IO_stdin_used+0x516>
bound  %esp,0x62(%ecx)
insb   (%dx),%es:(%edi)
jns    54a9 <_IO_stdin_used+0x4cd>
das
gs
je     54f0 <_IO_stdin_used+0x514>
das
insl   (%dx),%es:(%edi)
je     54f2 <_IO_stdin_used+0x516>
bound  %esp,(%eax)
imul   $0x7373696d,0x20(%ebx),%esi
imul   $0x7449202e,0x67(%esi),%ebp
daa
jae    54c4 <_IO_stdin_used+0x4e8>
je     5515 <_IO_stdin_used+0x539>
outsl  %ds:(%esi),(%dx)
and    %dh,0x69(%edx)
jae    5517 <_IO_stdin_used+0x53b>
jns    54ce <_IO_stdin_used+0x4f2>
je     551f <_IO_stdin_used+0x543>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     551f <_IO_stdin_used+0x543>
outsb  %ds:(%esi),(%dx)
jne    551e <_IO_stdin_used+0x542>
and    %bl,%cs:0x6f(%ecx)
jne    54df <_IO_stdin_used+0x503>
insl   (%dx),%es:(%edi)
imul   $0x72742074,0x68(%edi),%esp
jns    54d3 <_IO_stdin_used+0x4f7>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     5539 <_IO_stdin_used+0x55d>
gs
jb     54f4 <_IO_stdin_used+0x518>
dec    %esp
imul   $0x69642078,0x75(%esi),%ebp
jae    5552 <_IO_stdin_used+0x576>
jb     554f <_IO_stdin_used+0x573>
add    %al,%cs:(%eax)
add    %al,0x70(%ecx)
jo     5549 <_IO_stdin_used+0x56d>
jb     554f <_IO_stdin_used+0x573>
outsb  %ds:(%esi),(%dx)
je     5559 <_IO_stdin_used+0x57d>
jns    550f <_IO_stdin_used+0x533>
fs
gs
jbe    555c <_IO_stdin_used+0x580>
arpl   %sp,0x20(%ebp)
daa
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    556e <_IO_stdin_used+0x592>
daa
je     5523 <_IO_stdin_used+0x547>
push   $0x20657661
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x2e534654,0x4e(%eax,%eiz,1),%esp
or     0x61(%ebp),%cl
jns    557c <_IO_stdin_used+0x5a0>
and    %bh,%gs:0x6f(%ecx)
jne    5540 <_IO_stdin_used+0x564>
jae    5587 <_IO_stdin_used+0x5ab>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%bx,%si)
jb     55ab <_IO_stdin_used+0x5cf>
imul   $0x4f203f6e,0x6f(%ecx,%ebp,2),%esi
jb     5561 <_IO_stdin_used+0x585>
je     55ab <_IO_stdin_used+0x5cf>
and    %dh,%gs:0x68(%edi)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx,%ebp,2)
imul   $0x69,(%eax),%esp
outsb  %ds:(%esi),(%dx)
jae    55c8 <_IO_stdin_used+0x5ec>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0xa(%ecx)
jo     55c0 <_IO_stdin_used+0x5e4>
jb     55d5 <_IO_stdin_used+0x5f9>
imul   $0x6528206e,0x6f(%ecx,%ebp,2),%esi
cs and %ch,%cs:(%bx)
fs
gs
jbe    55a1 <_IO_stdin_used+0x5c5>
push   $0x202c6164
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     559b <_IO_stdin_used+0x5bf>
das
fs
gs
jbe    55af <_IO_stdin_used+0x5d3>
push   $0x29316164
aas
or     (%eax),%al
inc    %ecx
jo     55fb <_IO_stdin_used+0x61f>
popa
jb     55f3 <_IO_stdin_used+0x617>
outsb  %ds:(%esi),(%dx)
je     55fd <_IO_stdin_used+0x621>
jns    55b3 <_IO_stdin_used+0x5d7>
jns    5604 <_IO_stdin_used+0x628>
jne    55b7 <_IO_stdin_used+0x5db>
push   $0x20657661
popa
and    %ah,0x6f(%ebx)
jb     5614 <_IO_stdin_used+0x638>
jne    5614 <_IO_stdin_used+0x638>
je     560b <_IO_stdin_used+0x62f>
and    %cl,%fs:0x54(%esi)
inc    %esi
push   %ebx
and    %dl,%cs:0x6c(%eax)
gs
popa
jae    5619 <_IO_stdin_used+0x63d>
and    %dh,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    563c <_IO_stdin_used+0x660>
jae    5639 <_IO_stdin_used+0x65d>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x65(%ebx)
jb     55da <_IO_stdin_used+0x5fe>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     564d <_IO_stdin_used+0x671>
and    %ah,0x79(%edx)
and    %ch,0x6e(%ecx)
jbe    5651 <_IO_stdin_used+0x675>
imul   $0x67,0x6e(%ecx),%ebp
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
das
data16
and    %al,%cs:0x6e(%edi,%ebp,2)
daa
je     5618 <_IO_stdin_used+0x63c>
outsw  %ds:(%esi),(%dx)
jb     5663 <_IO_stdin_used+0x687>
gs
je     561f <_IO_stdin_used+0x643>
je     5669 <_IO_stdin_used+0x68d>
and    %ch,%gs:(%edi)
data16
and    %ch,(%eax)
outsw  %ds:(%esi),(%dx)
jb     566e <_IO_stdin_used+0x692>
sub    %esp,%gs:(%eax)
jo     5671 <_IO_stdin_used+0x695>
jb     5673 <_IO_stdin_used+0x697>
insl   (%dx),%es:(%edi)
gs
je     567b <_IO_stdin_used+0x69f>
jb     5644 <_IO_stdin_used+0x668>
or     0x74(%ecx),%ch
daa
jae    563e <_IO_stdin_used+0x662>
imul   $0x6174726f,0x70(%ebp),%ebp
outsb  %ds:(%esi),(%dx)
je     5649 <_IO_stdin_used+0x66d>
and    %bl,0x6f(%ecx)
jne    564d <_IO_stdin_used+0x671>
jo     56a1 <_IO_stdin_used+0x6c5>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x62(%ecx)
insb   (%dx),%es:(%edi)
jns    5656 <_IO_stdin_used+0x67a>
popa
insb   (%dx),%es:(%edi)
jae    56a9 <_IO_stdin_used+0x6cd>
and    %ch,0x65(%esi)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
jb     56aa <_IO_stdin_used+0x6ce>
bound  %ebp,0x6f(%edi)
je     566a <_IO_stdin_used+0x68e>
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
je     56c3 <_IO_stdin_used+0x6e7>
and    %dh,0x6b(%ecx,%eiz,2)
and    %ah,%gs:0x66(%ebp)
data16
arpl   %si,%gs:0xa(%esi,%ebp,1)
add    %al,(%eax)
inc    %ecx
jo     56d7 <_IO_stdin_used+0x6fb>
popa
jb     56cf <_IO_stdin_used+0x6f3>
outsb  %ds:(%esi),(%dx)
je     56d9 <_IO_stdin_used+0x6fd>
jns    568f <_IO_stdin_used+0x6b3>
je     56d9 <_IO_stdin_used+0x6fd>
and    %cl,%gs:0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     56f0 <_IO_stdin_used+0x714>
imul   $0x7369206e,0x6f(%ecx,%ebp,2),%esi
and    %ch,0x69(%eax)
bound  %esp,0x72(%ebp)
outsb  %ds:(%esi),(%dx)
popa
je     56f3 <_IO_stdin_used+0x717>
fs and %dl,%cs:%fs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     570b <_IO_stdin_used+0x72f>
and    %ch,0x75(%ebp)
jae    5711 <_IO_stdin_used+0x735>
and    %ah,0x65(%edx)
and    %dh,0x65(%edx)
jae    571a <_IO_stdin_used+0x73e>
insl   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:0x6e(%ecx)
or     %fs:0x72(%ebp,%esi,2),%dh
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x66(%edi)
data16
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     5722 <_IO_stdin_used+0x746>
jb     572b <_IO_stdin_used+0x74f>
jns    56cb <_IO_stdin_used+0x6ef>
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    56e8 <_IO_stdin_used+0x70c>
insl   (%dx),%es:(%edi)
jne    573e <_IO_stdin_used+0x762>
je     56ed <_IO_stdin_used+0x711>
jae    573f <_IO_stdin_used+0x763>
arpl   %bp,%gs:0x66(%ecx)
jns    56f5 <_IO_stdin_used+0x719>
gs
js     5739 <_IO_stdin_used+0x75d>
arpl   %si,0x79(%esp,%ebp,2)
and    %dh,(%edx)
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5751 <_IO_stdin_used+0x775>
gs
jae    5715 <_IO_stdin_used+0x739>
or     (%eax),%al
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     575d <_IO_stdin_used+0x781>
imul   $0x73207463,%fs:0x65(%edx),%esi
je     5766 <_IO_stdin_used+0x78a>
gs
jb     5777 <_IO_stdin_used+0x79b>
and    %dh,0x20(%edi,%ebp,2)
jae    577f <_IO_stdin_used+0x7a3>
outsl  %fs:(%esi),(%dx)
jne    5783 <_IO_stdin_used+0x7a7>
add    %cl,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ch,0x66(%ebp)
je     573e <_IO_stdin_used+0x762>
jb     5785 <_IO_stdin_used+0x7a9>
arpl   %bp,0x72(%edi)
fs
jae    5760 <_IO_stdin_used+0x784>
and    %ah,(%eax)
and    %ah,0x20646c6c
and    %ah,(%ecx)
cmp    $0x6c252020,%eax
insb   (%dx),%es:(%edi)
or     %fs:(%eax),%al
add    %al,(%eax)
add    %dl,0x61(%edi)
insb   (%dx),%es:(%edi)
imul   $0x67,0x6e(%ecx),%ebp
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x20756c6c
popa
je     57c6 <_IO_stdin_used+0x7ea>
jb     57bd <_IO_stdin_used+0x7e1>
bound  %esi,0x74(%ebp)
gs
jae    5794 <_IO_stdin_used+0x7b8>
and    %al,(%eax)
popa
je     57d3 <_IO_stdin_used+0x7f7>
jb     57ca <_IO_stdin_used+0x7ee>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x61(%edi)
insb   (%dx),%es:(%edi)
imul   $0x28,(%eax),%esp
gs
jb     57e1 <_IO_stdin_used+0x805>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    %edi,(%edx)
and    %ah,(%eax)
and    %ah,0x21202064
cmp    $0x64252020,%eax
or     (%eax),%al
add    %al,(%eax)
jo     57f8 <_IO_stdin_used+0x81c>
gs
jae    57ee <_IO_stdin_used+0x812>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x3a(%ebp)
and    %ah,(%eax)
and    %al,0x58(%ebp)
dec    %ecx
push   %ebx
push   %esp
push   %ebx
and    %ah,(%eax)
and    %ah,(%ecx)
cmp    $0x4d202020,%eax
dec    %ecx
push   %ebx
push   %ebx
dec    %ecx
dec    %esi
inc    %edi
add    %al,(%eax)
add    %dh,0x72(%eax)
gs
jae    5812 <_IO_stdin_used+0x836>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x3a(%ebp)
and    %ah,(%eax)
and    %cl,0x49(%ebp)
push   %ebx
push   %ebx
dec    %ecx
dec    %esi
inc    %edi
and    %ah,(%eax)
and    %edi,0x58452020
dec    %ecx
push   %ebx
push   %esp
push   %ebx
and    %al,(%eax)
arpl   %bp,0x70(%ebp)
pop    %edi
popa
je     5844 <_IO_stdin_used+0x868>
jb     583b <_IO_stdin_used+0x85f>
bound  %esi,0x74(%ebp)
gs
pop    %edi
fs
popa
je     583c <_IO_stdin_used+0x860>
add    %al,(%eax)
add    %al,-0x37ffffa1(%eax)
inc    %edx
jne    585a <_IO_stdin_used+0x87e>
imul   $0x68540063,0x2e(%ebx,%esi,2),%ebp
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x20732520,0x65(%ebx),%esp
outsl  %fs:(%esi),(%dx)
gs
jae    586d <_IO_stdin_used+0x891>
daa
je     5822 <_IO_stdin_used+0x846>
gs
js     586e <_IO_stdin_used+0x892>
jae    587b <_IO_stdin_used+0x89f>
or     (%eax),%al
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     5870 <_IO_stdin_used+0x894>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x6e(%edi)
je     5881 <_IO_stdin_used+0x8a5>
outsb  %ds:(%esi),(%dx)
jne    5880 <_IO_stdin_used+0x8a4>
or     %cs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    589a <_IO_stdin_used+0x8be>
je     584e <_IO_stdin_used+0x872>
daa
and    $0x49002773,%eax
outsb  %ds:(%esi),(%dx)
jbe    5898 <_IO_stdin_used+0x8bc>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
daa
and    $0xa2e2773,%eax
add    %cl,0x6e(%ecx)
jbe    58ac <_IO_stdin_used+0x8d0>
insb   (%dx),%es:(%edi)
imul   $0x65626d75,0x6e(%eax,%eiz,1),%esp
jb     5876 <_IO_stdin_used+0x89a>
daa
and    $0x27732a2e,%eax
or     %cs:(%eax),%al
cmp    $0x4d,%al
inc    %esi
push   %esp
and    $0x3e756c6c,%eax
add    %al,0x6f(%ebx)
jne    58d9 <_IO_stdin_used+0x8fd>
outsb  %fs:(%esi),(%dx)
daa
je     5892 <_IO_stdin_used+0x8b6>
outsl  %ds:(%esi),(%dx)
jo     58da <_IO_stdin_used+0x8fe>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
and    $0x732563,%eax
push   %eax
popa
je     58f5 <_IO_stdin_used+0x919>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    58b6 <_IO_stdin_used+0x8da>
je     590a <_IO_stdin_used+0x92e>
jne    5908 <_IO_stdin_used+0x92c>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
cmp    $0x55,%al
dec    %esi
dec    %ebx
dec    %esi
dec    %edi
push   %edi
dec    %esi
add    %ch,%ds:(%eax)
and    $0x43002973,%eax
outsl  %ds:(%esi),(%dx)
jne    5921 <_IO_stdin_used+0x945>
outsb  %fs:(%esi),(%dx)
daa
je     58da <_IO_stdin_used+0x8fe>
outsl  %ds:(%esi),(%dx)
jo     5922 <_IO_stdin_used+0x946>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    5937 <_IO_stdin_used+0x95b>
outsb  %fs:(%esi),(%dx)
daa
je     58f0 <_IO_stdin_used+0x914>
jb     5937 <_IO_stdin_used+0x95b>
popa
and    %ah,%fs:(%edx,%eax,2)
imul   $0x6f430070,0x61(%ebp,%ebp,2),%esi
jne    594d <_IO_stdin_used+0x971>
outsb  %fs:(%esi),(%dx)
daa
je     5906 <_IO_stdin_used+0x92a>
jb     594d <_IO_stdin_used+0x971>
popa
and    %ah,%fs:0x242f5446(,%ecx,2)
inc    %edx
dec    %ecx
push   %esp
dec    %ebp
inc    %ecx
push   %eax
add    %al,0x72(%ebp)
jb     596b <_IO_stdin_used+0x98f>
jb     591e <_IO_stdin_used+0x942>
jb     5965 <_IO_stdin_used+0x989>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
dec    %edi
jne    598a <_IO_stdin_used+0x9ae>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     5999 <_IO_stdin_used+0x9bd>
and    %ah,%cs:(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     5992 <_IO_stdin_used+0x9b6>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    599e <_IO_stdin_used+0x9c2>
outsb  %fs:(%esi),(%dx)
daa
je     5957 <_IO_stdin_used+0x97b>
outsl  %ds:(%esi),(%dx)
jo     599f <_IO_stdin_used+0x9c3>
outsb  %ds:(%esi),(%dx)
and    %ah,0x242f5446(,%ecx,2)
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
add    %al,0x6f(%ebx)
jne    59b7 <_IO_stdin_used+0x9db>
outsb  %fs:(%esi),(%dx)
daa
je     5970 <_IO_stdin_used+0x994>
jb     59b7 <_IO_stdin_used+0x9db>
popa
and    %cl,%fs:0x46(%ebp)
push   %esp
and    %dl,0x65(%edx)
arpl   %bp,0x72(%edi)
and    %ah,%fs:0x756c6c
inc    %ebp
jb     59da <_IO_stdin_used+0x9fe>
outsl  %ds:(%esi),(%dx)
jb     598b <_IO_stdin_used+0x9af>
arpl   %bp,0x73(%edi,%ebp,2)
imul   $0x6f6e6920,0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    59f1 <_IO_stdin_used+0xa15>
je     59ae <_IO_stdin_used+0x9d2>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
sub    $0x20,%al
jne    5a0b <_IO_stdin_used+0xa2f>
imul   $0x66656420,0x67(%esi),%ebp
popa
jne    5a0e <_IO_stdin_used+0xa32>
je     59c4 <_IO_stdin_used+0x9e8>
daa
and    $0xa2e2773,%eax
add    %al,(%eax)
inc    %ebp
jb     5a21 <_IO_stdin_used+0xa45>
outsl  %ds:(%esi),(%dx)
jb     59d2 <_IO_stdin_used+0x9f6>
addr16
gs
je     5a2a <_IO_stdin_used+0xa4e>
imul   $0x666e6920,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     5a2d <_IO_stdin_used+0xa51>
popa
je     5a2c <_IO_stdin_used+0xa50>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jne    5a3f <_IO_stdin_used+0xa63>
and    %ah,0x46000073
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
je     5a43 <_IO_stdin_used+0xa67>
jb     5a4d <_IO_stdin_used+0xa71>
imul   $0x65687720,0x65(%esi),%ebp
je     5a51 <_IO_stdin_used+0xa75>
gs
jb     5a0c <_IO_stdin_used+0xa30>
and    $0x73692073,%eax
and    %ch,0x6f(%ebp)
jne    5a64 <_IO_stdin_used+0xa88>
je     5a5d <_IO_stdin_used+0xa81>
add    %al,%fs:(%eax)
add    %dl,0x73(%ebp)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
jb     5a6b <_IO_stdin_used+0xa8f>
and    %ch,%gs:0x70(%edi)
je     5a77 <_IO_stdin_used+0xa9b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
imul   $0x2065726f,0x6e(%edi),%esp
je     5a85 <_IO_stdin_used+0xaa9>
imul   $0x6f727265,0x20(%ebx),%esi
jb     5a54 <_IO_stdin_used+0xa78>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    5aa1 <_IO_stdin_used+0xac5>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    5ab2 <_IO_stdin_used+0xad6>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5abc <_IO_stdin_used+0xae0>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     5abd <_IO_stdin_used+0xae1>
popa
fs
jns    5a7c <_IO_stdin_used+0xaa0>
gs
js     5ac2 <_IO_stdin_used+0xae6>
insb   (%dx),%es:(%edi)
jne    5ad5 <_IO_stdin_used+0xaf9>
imul   $0x6f20796c,0x65(%esi),%esi
jo     5ad0 <_IO_stdin_used+0xaf4>
outsb  %ds:(%esi),(%dx)
gs fs or %cs:%fs:%gs:0x65(%eax,%ebp,2),%dl
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5ae6 <_IO_stdin_used+0xb0a>
and    %ch,%gs:0x61(%ebp)
jns    5a9f <_IO_stdin_used+0xac3>
bound  %esp,0x20(%ebp)
popa
insb   (%dx),%es:(%edi)
jb     5aeb <_IO_stdin_used+0xb0f>
popa
fs
jns    5aaa <_IO_stdin_used+0xace>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    5afc <_IO_stdin_used+0xb20>
je     5af5 <_IO_stdin_used+0xb19>
fs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     5ab6 <_IO_stdin_used+0xada>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     5b03 <_IO_stdin_used+0xb27>
gs
jb     5abe <_IO_stdin_used+0xae2>
jae    5b0f <_IO_stdin_used+0xb33>
data16
je     5b1a <_IO_stdin_used+0xb3e>
popa
jb     5b0b <_IO_stdin_used+0xb2f>
and    %ch,0x61(%ebp)
jns    5acb <_IO_stdin_used+0xaef>
jne    5b20 <_IO_stdin_used+0xb44>
and    %ch,%gs:0x74(%ecx)
and    %dh,0x68(%edi)
imul   $0x756f630a,0x68(%ebx),%esp
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x65(%edx)
and    %ch,0x64(%ecx)
outsb  %gs:(%esi),(%dx)
je     5b30 <_IO_stdin_used+0xb54>
imul   $0x6620,0x64(%ebp),%sp
outsl  %ds:(%esi),(%dx)
jb     5af0 <_IO_stdin_used+0xb14>
gs
js     5b34 <_IO_stdin_used+0xb58>
insl   (%dx),%es:(%edi)
jo     5b42 <_IO_stdin_used+0xb66>
and    %ah,%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     5b04 <_IO_stdin_used+0xb28>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
data16
jne    5b62 <_IO_stdin_used+0xb86>
gs
jb     5b19 <_IO_stdin_used+0xb3d>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    5b24 <_IO_stdin_used+0xb48>
arpl   %sp,0x6e(%ecx)
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6f(%esi)
jb     5b73 <_IO_stdin_used+0xb97>
and    %ch,%gs:0x70(%edi)
je     5b7f <_IO_stdin_used+0xba3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
popa
jbe    5b8e <_IO_stdin_used+0xbb2>
imul   $0x20736968,0x74(%eax,%eiz,1),%esp
arpl   %bp,0x65(%eax)
arpl   %bp,0x2c(%ebx)
and    %ah,0x75(%edx)
je     5b52 <_IO_stdin_used+0xb76>
je     5b9c <_IO_stdin_used+0xbc0>
imul   $0x6e207369,0x20(%ebx),%esi
outsl  %ds:(%esi),(%dx)
je     5b5e <_IO_stdin_used+0xb82>
jb     5ba5 <_IO_stdin_used+0xbc9>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs or %fs:%gs:0x6e(%ecx),%ah
and    %ch,%fs:0x61(%ebp)
jns    5b72 <_IO_stdin_used+0xb96>
insb   (%dx),%es:(%edi)
gs
popa
and    %dh,%fs:0x20(%edi,%ebp,2)
fs
popa
je     5bbf <_IO_stdin_used+0xbe3>
and    %ah,0x6f(%ebx)
jb     5bd5 <_IO_stdin_used+0xbf9>
jne    5bd5 <_IO_stdin_used+0xbf9>
je     5bd0 <_IO_stdin_used+0xbf4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
push   %esp
push   $0x65642065
jbe    5bdd <_IO_stdin_used+0xc01>
arpl   %sp,0x20(%ebp)
daa
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    5bef <_IO_stdin_used+0xc13>
daa
je     5ba4 <_IO_stdin_used+0xbc8>
push   $0x20657661
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x2e534654,0x4e(%eax,%eiz,1),%esp
or     0x61(%ebp),%cl
jns    5bfd <_IO_stdin_used+0xc21>
and    %bh,%gs:0x6f(%ecx)
jne    5bc1 <_IO_stdin_used+0xbe5>
jae    5c08 <_IO_stdin_used+0xc2c>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x65(%si)
jbe    5c21 <_IO_stdin_used+0xc45>
arpl   %sp,0x3f(%ebp)
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x68(%edi)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx,%ebp,2)
imul   $0x69,(%eax),%esp
outsb  %ds:(%esi),(%dx)
jae    5c46 <_IO_stdin_used+0xc6a>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0xa(%ecx)
jo     5c3e <_IO_stdin_used+0xc62>
jb     5c53 <_IO_stdin_used+0xc77>
imul   $0x6528206e,0x6f(%ecx,%ebp,2),%esi
cs and %ch,%cs:(%bx)
fs
gs
jbe    5c1f <_IO_stdin_used+0xc43>
push   $0x202c6164
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     5c19 <_IO_stdin_used+0xc3d>
das
fs
gs
jbe    5c2d <_IO_stdin_used+0xc51>
push   $0x29316164
aas
and    %cl,0x72(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%edi)
push   $0x77207265
popa
jns    5c36 <_IO_stdin_used+0xc5a>
popa
jb     5c88 <_IO_stdin_used+0xcac>
jne    5c89 <_IO_stdin_used+0xcad>
fs
aas
or     (%eax),%al
add    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x73(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x6e(%edi)
jae    5c98 <_IO_stdin_used+0xcbc>
jae    5ca5 <_IO_stdin_used+0xcc9>
outsb  %gs:(%esi),(%dx)
je     5c63 <_IO_stdin_used+0xc87>
and    %dl,0x75(%edx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
das
data16
and    %ch,0x6e(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5cc1 <_IO_stdin_used+0xce5>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
bound  %ebp,0x6f(%edi)
je     5c7b <_IO_stdin_used+0xc9f>
imul   $0x45434957,0x54(%eax,%eiz,1),%esi
and    %ecx,(%edx)
push   %esp
push   $0x73752065
popa
and    %ch,%gs:0x66(%bx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,(%edi)
data16
and    %dh,0x61(%eax)
jb     5cde <_IO_stdin_used+0xd02>
insl   (%dx),%es:(%edi)
gs
je     5ce6 <_IO_stdin_used+0xd0a>
jb     5ca3 <_IO_stdin_used+0xcc7>
imul   $0x79726576,0x20(%ebx),%esi
and    %cl,0x4d(%ecx)
push   %eax
dec    %edi
push   %edx
push   %esp
inc    %ecx
dec    %esi
push   %esp
and    %esp,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x69746163,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    5cb4 <_IO_stdin_used+0xcd8>
insl   (%dx),%es:(%edi)
popa
fs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %ah,0x79(%edx)
and    %dh,0x69(%eax,%ebp,2)
jae    5cdf <_IO_stdin_used+0xd03>
jae    5d30 <_IO_stdin_used+0xd54>
data16
je     5d3b <_IO_stdin_used+0xd5f>
popa
jb     5d2c <_IO_stdin_used+0xd50>
or     %cs:(%eax),%al
add    %al,(%eax)
push   %esp
push   $0x544e2065
inc    %esi
push   %ebx
and    %dh,0x61(%eax)
jb     5d4d <_IO_stdin_used+0xd71>
imul   $0x7369206e,0x6f(%ecx,%ebp,2),%esi
and    %ch,0x69(%eax)
bound  %esp,0x72(%ebp)
outsb  %ds:(%esi),(%dx)
popa
je     5d50 <_IO_stdin_used+0xd74>
fs and %dl,%cs:%fs:0x6c(%eax)
gs
popa
jae    5d59 <_IO_stdin_used+0xd7d>
and    %dh,0x65(%edx)
jae    5d6e <_IO_stdin_used+0xd92>
insl   (%dx),%es:(%edi)
and    %dl,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5d76 <_IO_stdin_used+0xd9a>
and    %ah,0x6e(%ecx)
and    %dh,%fs:0x72(%ebp,%esi,2)
outsb  %ds:(%esi),(%dx)
gs and %ch,%fs:%gs:0x74(%ecx)
and    %cl,(%edx)
outsl  %ds:(%esi),(%dx)
data16
data16
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     5d81 <_IO_stdin_used+0xda5>
jb     5d8a <_IO_stdin_used+0xdae>
jns    5d4c <_IO_stdin_used+0xd70>
and    %dh,0x6f(%ebx)
and    %ch,0x6f(%ebp)
jne    5d96 <_IO_stdin_used+0xdba>
je     5d93 <_IO_stdin_used+0xdb7>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp,%di)
jne    5d9d <_IO_stdin_used+0xdc1>
and    %ah,%fs:0x65(%edx)
and    %ah,0x6e(%edi,%ebp,2)
and    %dh,%gs:0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    5d70 <_IO_stdin_used+0xd94>
or     (%eax),%al
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    5dbd <_IO_stdin_used+0xde1>
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ebp,%eiz,2)
imul   $0x63656220,0x64(%ebp),%esp
popa
jne    5dce <_IO_stdin_used+0xdf2>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ch,0x6f(%edx)
jne    5ddc <_IO_stdin_used+0xe00>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6e(%ebp)
arpl   %bp,0x61(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
and    %al,%cs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x72612073,0x65(%ebx),%esp
cmp    %gs:(%edx),%cl
and    %al,0x29(%ecx)
and    %dl,0x68(%ebx)
jne    5e08 <_IO_stdin_used+0xe2c>
outsl  %fs:(%esi),(%dx)
ja     5e06 <_IO_stdin_used+0xe2a>
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5e13 <_IO_stdin_used+0xe37>
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     5e0b <_IO_stdin_used+0xe2f>
jb     5e14 <_IO_stdin_used+0xe38>
jns    5dd8 <_IO_stdin_used+0xdfc>
or     (%eax),%ah
inc    %edx
sub    %esp,(%eax)
inc    %ebx
insb   (%dx),%es:(%edi)
imul   $0x65687420,0x6b(%ebx),%esp
and    %ah,(%edi)
push   %ebx
popa
data16
gs
insb   (%dx),%es:(%edi)
jns    5de1 <_IO_stdin_used+0xe05>
push   %edx
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    5e2c <_IO_stdin_used+0xe50>
and    %cl,0x61(%eax)
jb     5e30 <_IO_stdin_used+0xe54>
ja     5e2f <_IO_stdin_used+0xe53>
jb     5e35 <_IO_stdin_used+0xe59>
daa
and    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5e58 <_IO_stdin_used+0xe7c>
and    %dh,0x73(%ecx,%eiz,2)
imul   $0x72,0x61(%edx),%esp
or     (%eax),%ah
and    %ah,(%eax)
and    %ch,0x6f(%esi)
je     5e5f <_IO_stdin_used+0xe83>
imul   $0x6974,0x61(%ebx),%sp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
gs
popa
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     5e6f <_IO_stdin_used+0xe93>
and    %ah,0x73(%ecx,%ebp,2)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %dh,0x68(%si)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x43200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
push   %ebp
jae    5e91 <_IO_stdin_used+0xeb5>
and    %ah,(%edi)
inc    %ebp
push   $0x65
arpl   %si,0x20(%edi,%eiz,1)
data16
jb     5ea7 <_IO_stdin_used+0xecb>
insl   (%dx),%es:(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     5eb4 <_IO_stdin_used+0xed8>
and    %al,0x78(%ebp)
jo     5eb2 <_IO_stdin_used+0xed6>
outsl  %ds:(%esi),(%dx)
jb     5eae <_IO_stdin_used+0xed2>
jb     5e6b <_IO_stdin_used+0xe8f>
je     5ebc <_IO_stdin_used+0xee0>
and    %dh,0x61(%ebx)
data16
gs
insb   (%dx),%es:(%edi)
jns    5e75 <_IO_stdin_used+0xe99>
jb     5ebc <_IO_stdin_used+0xee0>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    5ec0 <_IO_stdin_used+0xee4>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x44200a2e,0x65(%ebx),%esp
sub    %esp,(%eax)
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    5e93 <_IO_stdin_used+0xeb7>
jb     5ed6 <_IO_stdin_used+0xefa>
outsb  %ds:(%esi),(%dx)
and    %ah,0x68(%ebx)
imul   $0x20,0x6b(%ebx,%esi,2),%esp
jo     5ef2 <_IO_stdin_used+0xf16>
gs
jbe    5eec <_IO_stdin_used+0xf10>
outsl  %ds:(%esi),(%dx)
jne    5ef9 <_IO_stdin_used+0xf1d>
insb   (%dx),%es:(%edi)
jns    5ea9 <_IO_stdin_used+0xecd>
je     5ef3 <_IO_stdin_used+0xf17>
outsb  %gs:(%esi),(%dx)
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     5eb3 <_IO_stdin_used+0xed7>
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
addr16 popa
imul   $0x63696877,0x20(%esi),%ebp
push   $0x6c697720
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,0x75(%ecx)
je     5f23 <_IO_stdin_used+0xf47>
insl   (%dx),%es:(%edi)
popa
je     5f21 <_IO_stdin_used+0xf45>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    5ede <_IO_stdin_used+0xf02>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x65687420,0x65(%edx),%edi
and    %ch,0x6f(%edx)
jne    5f43 <_IO_stdin_used+0xf67>
outsb  %ds:(%esi),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%ah
inc    %ebp
sub    %esp,(%eax)
push   %ebx
jne    5f3f <_IO_stdin_used+0xf63>
insl   (%dx),%es:(%edi)
imul   $0x63726f66,0x27(%eax,%eiz,1),%esi
gs
daa
and    %ch,0x70(%edi)
je     5f56 <_IO_stdin_used+0xf7a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
push   %esp
push   $0x73207369
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    5f78 <_IO_stdin_used+0xf9c>
imul   $0x20746920,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     5f2f <_IO_stdin_used+0xf53>
jb     5f76 <_IO_stdin_used+0xf9a>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
fs gs sub %ebp,%fs:%gs:(%esi)
or     (%eax),%ah
inc    %esi
sub    %esp,(%eax)
outsb  %ds:(%esi),(%dx)
je     5f8a <_IO_stdin_used+0xfae>
jae    5f93 <_IO_stdin_used+0xfb7>
outsl  %ds:(%esi),(%dx)
jne    5f97 <_IO_stdin_used+0xfbb>
je     5f65 <_IO_stdin_used+0xf89>
and    %cl,0x6f(%ebp)
jne    5f9e <_IO_stdin_used+0xfc2>
je     5f52 <_IO_stdin_used+0xf76>
je     5f9c <_IO_stdin_used+0xfc0>
and    %dh,%gs:0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    5fa8 <_IO_stdin_used+0xfcc>
and    %dh,%gs:0x65(%edx)
popa
fs
sub    $0x796c6e6f,%eax
and    %ah,0x79(%edx)
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %ah,(%edi)
jb     5fc6 <_IO_stdin_used+0xfea>
daa
and    %ch,0x6f(%ebp)
jne    5fcb <_IO_stdin_used+0xfef>
je     5f7f <_IO_stdin_used+0xfa3>
outsl  %ds:(%esi),(%dx)
jo     5fd6 <_IO_stdin_used+0xffa>
imul   $0x59000a2e,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jne    5f8c <_IO_stdin_used+0xfb0>
jae    5fd3 <_IO_stdin_used+0xff7>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
push   $0x20657661
popa
and    %dl,0x6f(%ebx)
data16
je     5fd2 <_IO_stdin_used+0xff6>
inc    %ecx
dec    %ecx
inc    %esp
das
inc    %esi
popa
imul   $0x41,0x52(%ebp),%esp
dec    %ecx
inc    %esp
and    %ch,0x61(%eax)
jb     5ff5 <_IO_stdin_used+0x1019>
ja     5ff4 <_IO_stdin_used+0x1018>
jb     5ffa <_IO_stdin_used+0x101e>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x75(%ebp)
jae    6012 <_IO_stdin_used+0x1036>
and    %dh,0x73(%ebp)
and    %ah,%gs:0x6e(%ecx)
and    %ah,0x63(%ecx)
je     6013 <_IO_stdin_used+0x1037>
jbe    600d <_IO_stdin_used+0x1031>
je     6013 <_IO_stdin_used+0x1037>
fs
sub    $0xa,%al
imul   $0x6e657265,%fs:0x66(%esi),%esp
je     5fdb <_IO_stdin_used+0xfff>
fs
gs
jbe    6028 <_IO_stdin_used+0x104c>
arpl   %sp,0x20(%ebp)
jne    6032 <_IO_stdin_used+0x1056>
fs
gs
jb     5fe8 <_IO_stdin_used+0x100c>
das
fs
gs
jbe    5ffc <_IO_stdin_used+0x1020>
insl   (%dx),%es:(%edi)
popa
jo     6041 <_IO_stdin_used+0x1065>
gs
jb     6000 <_IO_stdin_used+0x1024>
and    %ch,(%eax)
gs cs and %ch,%cs:%gs:(%bx)
fs
gs
jbe    600f <_IO_stdin_used+0x1033>
insl   (%dx),%es:(%edi)
popa
jo     6054 <_IO_stdin_used+0x1078>
gs
jb     6016 <_IO_stdin_used+0x103a>
outsb  %ds:(%esi),(%dx)
jbe    6053 <_IO_stdin_used+0x1077>
imul   $0x61686165,%fs:0x5f(%ecx),%esp
popa
bound  %esp,0x63(%ebx)
xor    %ebp,(%ecx)
or     0x20(%edi,%ebp,2),%dh
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    606e <_IO_stdin_used+0x1092>
je     6022 <_IO_stdin_used+0x1046>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %dl,%cs:0x6c(%eax)
gs
popa
jae    6073 <_IO_stdin_used+0x1097>
and    %dh,0x65(%ebx)
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
fs
insl   (%dx),%es:(%edi)
jb     607d <_IO_stdin_used+0x10a1>
imul   $0x75636f64,0x20(%edi,%eiz,1),%esp
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     608a <_IO_stdin_used+0x10ae>
je     6094 <_IO_stdin_used+0x10b8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     6052 <_IO_stdin_used+0x1076>
push   $0x2e706c65
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    60ae <_IO_stdin_used+0x10d2>
and    %ch,%gs:0x73(%ecx)
and    %dh,0x63(%ebx)
push   $0x6c756465
gs and %ah,%fs:%gs:0x6f(%esi)
jb     6074 <_IO_stdin_used+0x1098>
arpl   %bp,0x65(%eax)
arpl   %bp,0x2e(%ebx)
or     0x6c(%eax),%dl
gs
popa
jae    60c6 <_IO_stdin_used+0x10ea>
and    %ah,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     6087 <_IO_stdin_used+0x10ab>
imul   $0x6957206f,0x74(%esi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     60e6 <_IO_stdin_used+0x110a>
and    %dl,0x49(%edi,%edx,2)
inc    %ebx
inc    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     609e <_IO_stdin_used+0x10c2>
jne    60f3 <_IO_stdin_used+0x1117>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     60ee <_IO_stdin_used+0x1112>
gs
daa
and    %ch,0x70(%edi)
je     60fb <_IO_stdin_used+0x111f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:0x4f(%esi),%cl
push   %esp
inc    %ebp
cmp    (%eax),%ah
dec    %ecx
data16
and    %bh,0x6f(%ecx)
jne    60c3 <_IO_stdin_used+0x10e7>
push   $0x6e206461
outsl  %ds:(%esi),(%dx)
je     60cb <_IO_stdin_used+0x10ef>
jae    6110 <_IO_stdin_used+0x1134>
push   $0x6c756465
gs and %ah,%fs:%gs:0x68(%ebx)
arpl   %bp,%gs:0x20(%ebx)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x73(%ecx,%eiz,2)
je     60e4 <_IO_stdin_used+0x1108>
je     612f <_IO_stdin_used+0x1153>
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    6135 <_IO_stdin_used+0x1159>
and    %dh,%fs:0x69(%eax,%ebp,2)
jae    60f7 <_IO_stdin_used+0x111b>
jbe    6148 <_IO_stdin_used+0x116c>
insb   (%dx),%es:(%edi)
jne    6149 <_IO_stdin_used+0x116d>
or     %gs:0x73(%ebp),%dh
imul   $0x66746e20,0x67(%esi),%ebp
jae    6156 <_IO_stdin_used+0x117a>
outsl  %ds:(%esi),(%dx)
jne    615a <_IO_stdin_used+0x117e>
je     610e <_IO_stdin_used+0x1132>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x68(%ebx)
jne    616a <_IO_stdin_used+0x118e>
outsl  %fs:(%esi),(%dx)
ja     6168 <_IO_stdin_used+0x118c>
and    %dh,0x79(%ebx)
jae    6173 <_IO_stdin_used+0x1197>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     616c <_IO_stdin_used+0x1190>
jb     6175 <_IO_stdin_used+0x1199>
jns    6137 <_IO_stdin_used+0x115b>
and    %dh,0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
imul   $0x70697263,0x73(%eax,%eiz,1),%esi
je     6190 <_IO_stdin_used+0x11b4>
and    %ch,0x6e(%ecx)
and    %bh,0x6f(%ecx)
jne    6197 <_IO_stdin_used+0x11bb>
or     0x73(%ecx,%ebp,2),%ah
je     619d <_IO_stdin_used+0x11c1>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x72(%ecx)
and    %ah,%gs:0x72(%edx)
outsl  %ds:(%esi),(%dx)
imul   $0x2e,0x6e(%ebp),%esp
and    %dl,0x6c(%eax)
gs
popa
jae    61aa <_IO_stdin_used+0x11ce>
and    %dh,0x65(%edx)
jo     61b9 <_IO_stdin_used+0x11dd>
jb     61c0 <_IO_stdin_used+0x11e4>
and    %dh,0x20(%edi,%ebp,2)
jns    61c1 <_IO_stdin_used+0x11e5>
jne    61c6 <_IO_stdin_used+0x11ea>
and    %ah,0x73(%ecx,%ebp,2)
je     61cc <_IO_stdin_used+0x11f0>
imul   $0x6e6f6974,0x75(%edx),%esp
and    %ah,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     61cf <_IO_stdin_used+0x11f3>
jb     61df <_IO_stdin_used+0x1203>
or     (%eax),%ch
dec    %esi
dec    %edi
push   %esp
and    %dh,0x20(%edi,%ebp,2)
jne    61ea <_IO_stdin_used+0x120e>
and    %ebp,(%ecx)
and    %dh,0x61(%eax,%ebp,2)
je     619f <_IO_stdin_used+0x11c3>
imul   $0x63732074,0x69(%esi),%ebp
jb     61f1 <_IO_stdin_used+0x1215>
jo     61fe <_IO_stdin_used+0x1222>
jae    61ac <_IO_stdin_used+0x11d0>
imul   $0x6c,0x6c(%ecx),%ebp
and    %ch,0x74(%esi)
data16
jae    6203 <_IO_stdin_used+0x1227>
outsl  %ds:(%esi),(%dx)
jne    6207 <_IO_stdin_used+0x122b>
je     61bb <_IO_stdin_used+0x11df>
outsl  %ds:(%esi),(%dx)
jb     61be <_IO_stdin_used+0x11e2>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    6210 <_IO_stdin_used+0x1234>
je     61d2 <_IO_stdin_used+0x11f6>
outsb  %ds:(%esi),(%dx)
je     620d <_IO_stdin_used+0x1231>
jae    61d6 <_IO_stdin_used+0x11fa>
data16
jne    621f <_IO_stdin_used+0x1243>
and    %ah,%gs:0x72(%ebp,%esi,2)
imul   $0x7568730a,0x67(%esi),%ebp
je     621e <_IO_stdin_used+0x1242>
outsl  %ds:(%esi),(%dx)
ja     622b <_IO_stdin_used+0x124f>
and    %ch,0x6e(%ecx)
jae    6236 <_IO_stdin_used+0x125a>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
jo     6233 <_IO_stdin_used+0x1257>
jb     61f0 <_IO_stdin_used+0x1214>
jne    623f <_IO_stdin_used+0x1263>
outsl  %ds:(%esi),(%dx)
jne    6243 <_IO_stdin_used+0x1267>
je     6205 <_IO_stdin_used+0x1229>
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x41(%edi)
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
cmp    (%eax),%ah
inc    %esp
imul   $0x6f762079,0x74(%edx),%esi
insb   (%dx),%es:(%edi)
jne    625d <_IO_stdin_used+0x1281>
and    %ch,%gs:0x6f(%ebp)
jne    6264 <_IO_stdin_used+0x1288>
je     6218 <_IO_stdin_used+0x123c>
ja     625b <_IO_stdin_used+0x127f>
jae    621c <_IO_stdin_used+0x1240>
outsw  %ds:(%esi),(%dx)
jb     6263 <_IO_stdin_used+0x1287>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,(%edi)
outsw  %ds:(%esi),(%dx)
jb     6272 <_IO_stdin_used+0x1296>
gs
daa
and    %ch,0x6f(%ebp)
jne    6284 <_IO_stdin_used+0x12a8>
je     6238 <_IO_stdin_used+0x125c>
outsl  %ds:(%esi),(%dx)
jo     628f <_IO_stdin_used+0x12b3>
imul   $0xa2e,0x6e(%edi),%ebp
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     628d <_IO_stdin_used+0x12b1>
jb     6298 <_IO_stdin_used+0x12bc>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     62a0 <_IO_stdin_used+0x12c4>
jb     625f <_IO_stdin_used+0x1283>
and    %dh,0x74(%ebx)
jb     62ac <_IO_stdin_used+0x12d0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x64(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
daa
je     6263 <_IO_stdin_used+0x1287>
jb     62aa <_IO_stdin_used+0x12ce>
je     62bc <_IO_stdin_used+0x12e0>
jb     62b7 <_IO_stdin_used+0x12db>
and    %ah,0x20(%ecx)
jae    62c3 <_IO_stdin_used+0x12e7>
data32 imul $0xa,0x2e(%eax),%di
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    62bd <_IO_stdin_used+0x12e1>
insb   (%dx),%es:(%edi)
imul   $0x20657a69,0x73(%eax,%eiz,1),%esp
jae    62dc <_IO_stdin_used+0x1300>
data32 imul $0x2527,0x20(%eax),%di
jae    6297 <_IO_stdin_used+0x12bb>
and    %ah,%cs:(%eax)
push   %ebp
jae    62db <_IO_stdin_used+0x12ff>
and    %dl,0x20(%esp,%ebp,1)
inc    %edi
sub    $0x20,%al
dec    %ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     62a3 <_IO_stdin_used+0x12c7>
dec    %ebx
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    62f8 <_IO_stdin_used+0x131c>
outsb  %fs:(%esi),(%dx)
daa
je     62b1 <_IO_stdin_used+0x12d5>
arpl   %si,0x65(%edx)
popa
je     62fc <_IO_stdin_used+0x1320>
and    %ah,0x20(%ecx)
jae    6301 <_IO_stdin_used+0x1325>
popa
jb     6302 <_IO_stdin_used+0x1326>
push   $0x6e6f6320
je     630b <_IO_stdin_used+0x132f>
js     631c <_IO_stdin_used+0x1340>
or     %cs:(%eax),%al
add    %al,0x6f(%ebx)
jne    631c <_IO_stdin_used+0x1340>
outsb  %fs:(%esi),(%dx)
daa
je     62d5 <_IO_stdin_used+0x12f9>
je     6329 <_IO_stdin_used+0x134d>
popa
outsb  %ds:(%esi),(%dx)
jae    6327 <_IO_stdin_used+0x134b>
popa
je     6323 <_IO_stdin_used+0x1347>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     6335 <_IO_stdin_used+0x1359>
outsb  %ds:(%esi),(%dx)
je     62f3 <_IO_stdin_used+0x1317>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
push   %esp
push   $0x69642065
jb     6349 <_IO_stdin_used+0x136d>
arpl   %si,0x72(%edi,%ebp,2)
jns    630a <_IO_stdin_used+0x132e>
jae    6360 <_IO_stdin_used+0x1384>
jb     6363 <_IO_stdin_used+0x1387>
arpl   %si,0x72(%ebp,%esi,2)
and    %ch,%gs:0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ah,0x65(%ebp,%eiz,2)
jo     6320 <_IO_stdin_used+0x1344>
sub    %ch,0x76(%edi)
gs
jb     6326 <_IO_stdin_used+0x134a>
and    $0x6e202964,%eax
gs
jae    6382 <_IO_stdin_used+0x13a6>
gs and %ah,%fs:%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0xa2e,0x73(%ebp),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    6390 <_IO_stdin_used+0x13b4>
outsb  %fs:(%esi),(%dx)
daa
je     6349 <_IO_stdin_used+0x136d>
je     639d <_IO_stdin_used+0x13c1>
popa
outsb  %ds:(%esi),(%dx)
jae    639b <_IO_stdin_used+0x13bf>
popa
je     6397 <_IO_stdin_used+0x13bb>
and    %ah,0x74(%ecx)
je     63a9 <_IO_stdin_used+0x13cd>
imul   $0x74206574,0x75(%edx),%esp
jns    63b0 <_IO_stdin_used+0x13d4>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     63af <_IO_stdin_used+0x13d3>
outsb  %ds:(%esi),(%dx)
je     636d <_IO_stdin_used+0x1391>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx)
je     63d6 <_IO_stdin_used+0x13fa>
imul   $0x74206574,0x75(%edx),%esp
jns    63dd <_IO_stdin_used+0x1401>
and    %dh,%gs:(%eax)
js     6397 <_IO_stdin_used+0x13bb>
xor    %dh,(%edx)
js     6380 <_IO_stdin_used+0x13a4>
add    %al,(%eax)
inc    %ecx
je     63ef <_IO_stdin_used+0x1413>
jb     63e6 <_IO_stdin_used+0x140a>
bound  %esi,0x74(%ebp)
and    %dh,%gs:0x70(%ecx,%edi,2)
and    %dh,%gs:0x61(%edi)
jae    63ab <_IO_stdin_used+0x13cf>
je     63ff <_IO_stdin_used+0x1423>
jne    63fd <_IO_stdin_used+0x1421>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x6f(%ebx)
jne    6408 <_IO_stdin_used+0x142c>
outsb  %fs:(%esi),(%dx)
daa
je     63c1 <_IO_stdin_used+0x13e5>
je     6415 <_IO_stdin_used+0x1439>
popa
outsb  %ds:(%esi),(%dx)
jae    6413 <_IO_stdin_used+0x1437>
popa
je     640f <_IO_stdin_used+0x1433>
and    %ah,0x74(%ecx)
je     6421 <_IO_stdin_used+0x1445>
imul   $0x6e206574,0x75(%edx),%esp
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %si,0x72(%ebp)
jb     6427 <_IO_stdin_used+0x144b>
outsb  %ds:(%esi),(%dx)
je     63e5 <_IO_stdin_used+0x1409>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
inc    %ecx
je     6447 <_IO_stdin_used+0x146b>
jb     643e <_IO_stdin_used+0x1462>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%edi)
jae    6403 <_IO_stdin_used+0x1427>
je     6457 <_IO_stdin_used+0x147b>
jne    6455 <_IO_stdin_used+0x1479>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,0x72(%ebp)
jb     6463 <_IO_stdin_used+0x1487>
jb     6416 <_IO_stdin_used+0x143a>
jb     645d <_IO_stdin_used+0x1481>
popa
imul   $0x6f6e6920,%fs:0x67(%esi),%ebp
fs and %ah,%fs:%gs:0x2e756c6c
and    %ah,(%eax)
inc    %ecx
bound  %ebp,0x72(%edi)
je     647a <_IO_stdin_used+0x149e>
outsb  %ds:(%esi),(%dx)
or     %cs:(%bx,%si),%al
add    %al,(%eax)
push   %esp
push   $0x70207369
jb     648f <_IO_stdin_used+0x14b3>
addr16 jb 6484 <_IO_stdin_used+0x14a8>
insl   (%dx),%es:(%edi)
and    %ch,0x73(%ecx)
and    %ah,0x72(%esi)
gs and %dh,%gs:0x6f(%ebx)
data16
je     64a9 <_IO_stdin_used+0x14cd>
popa
jb     649a <_IO_stdin_used+0x14be>
sub    $0x20,%al
jb     649e <_IO_stdin_used+0x14c2>
insb   (%dx),%es:(%edi)
gs
popa
jae    64a3 <_IO_stdin_used+0x14c7>
and    %dh,%fs:0x6e(%ebp)
fs
gs
jb     6466 <_IO_stdin_used+0x148a>
je     64b0 <_IO_stdin_used+0x14d4>
and    %al,%gs:0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     64b5 <_IO_stdin_used+0x14d9>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    64c9 <_IO_stdin_used+0x14ed>
or     0x6e(%ecx),%ah
and    %bh,%fs:0x6f(%ecx)
jne    648d <_IO_stdin_used+0x14b1>
popa
jb     64d5 <_IO_stdin_used+0x14f9>
and    %dh,0x65(%edi)
insb   (%dx),%es:(%edi)
arpl   %bp,0x6d(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
jb     64e3 <_IO_stdin_used+0x1507>
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     64ed <_IO_stdin_used+0x1511>
and    %ch,0x74(%ecx)
and    %dh,0x6e(%ebp)
fs
gs
jb     64b2 <_IO_stdin_used+0x14d6>
arpl   %sp,0x72(%ebp)
je     64f8 <_IO_stdin_used+0x151c>
imul   $0x646e6f63,0x20(%esi),%ebp
imul   $0x202e736e,0x6f(%ecx,%ebp,2),%esi
and    %cl,0x74(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
gs
jae    64d0 <_IO_stdin_used+0x14f4>
ja     651b <_IO_stdin_used+0x153f>
je     651c <_IO_stdin_used+0x1540>
or     0x42(%ecx),%al
push   %ebx
dec    %edi
dec    %esp
push   %ebp
push   %esp
inc    %ebp
dec    %esp
pop    %ecx
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
cmp    (%eax),%esp
outsw  %ds:(%esi),(%dx)
jb     64f1 <_IO_stdin_used+0x1515>
fs
gs
je     6536 <_IO_stdin_used+0x155a>
imul   $0x64616572,0x20(%ebx,%esi,2),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     654d <_IO_stdin_used+0x1571>
insb   (%dx),%es:(%edi)
and    %dl,0x75(%eax)
bound  %ebp,0x63(%ecx,%ebp,2)
and    %cl,0x63(%ecx,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    6561 <_IO_stdin_used+0x1585>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0xa(%ebp)
outsw  %ds:(%esi),(%dx)
jne    6575 <_IO_stdin_used+0x1599>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
inc    %ebx
dec    %edi
push   %eax
pop    %ecx
dec    %ecx
dec    %esi
inc    %edi
and    (%eax),%ah
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     658e <_IO_stdin_used+0x15b2>
and    %dh,%fs:0x69(%edi)
je     6597 <_IO_stdin_used+0x15bb>
and    %dh,0x69(%eax,%ebp,2)
jae    6555 <_IO_stdin_used+0x1579>
jo     65a9 <_IO_stdin_used+0x15cd>
outsl  %ds:(%esi),(%dx)
addr16 jb 659c <_IO_stdin_used+0x15c0>
insl   (%dx),%es:(%edi)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     6561 <_IO_stdin_used+0x1585>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x3a746120,0x65(%esi),%ebp
or     0x74(%eax),%ch
je     65c0 <_IO_stdin_used+0x15e4>
cmp    (%edi),%ch
das
ja     65cc <_IO_stdin_used+0x15f0>
ja     6585 <_IO_stdin_used+0x15a9>
outsb  %ds:(%si),(%dx)
jne    6589 <_IO_stdin_used+0x15ad>
outsl  %ds:(%esi),(%dx)
jb     65c5 <_IO_stdin_used+0x15e9>
das
arpl   %bp,0x70(%edi)
jns    65d0 <_IO_stdin_used+0x15f4>
gs
data16
je     6597 <_IO_stdin_used+0x15bb>
addr16 jo 65d7 <_IO_stdin_used+0x15fb>
cs
push   $0xa6c6d74
add    %al,(%eax)
add    %al,0x76(%ebp,%eiz,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jo     65e1 <_IO_stdin_used+0x1605>
jb     65f1 <_IO_stdin_used+0x1615>
daa
and    %ah,0x6d(%ebp)
popa
imul   $0x65726464,0x61(%eax,%eiz,1),%ebp
jae    6600 <_IO_stdin_used+0x1624>
cmp    (%eax),%ah
outsb  %ds:(%esi),(%dx)
je     65f8 <_IO_stdin_used+0x161c>
jae    65c1 <_IO_stdin_used+0x15e5>
xor    0x2d(%edi),%esp
fs
gs
jbe    6600 <_IO_stdin_used+0x1624>
insb   (%dx),%es:(%edi)
inc    %eax
insb   (%dx),%es:(%edi)
imul   $0x66732e73,0x74(%ebx),%esi
outsb  %cs:(%esi),(%dx)
gs
je     65b4 <_IO_stdin_used+0x15d8>
add    %al,(%eax)
insl   (%dx),%es:(%edi)
data16
je     660f <_IO_stdin_used+0x1633>
outsb  %ds:(%esi),(%dx)
gs
js     6628 <_IO_stdin_used+0x164c>
pop    %edi
jb     661c <_IO_stdin_used+0x1640>
arpl   %bp,0x72(%edi)
add    %dh,%fs:0x74(%ebp)
imul   $0x7274666d,0x5f(%ebx,%esi,2),%ebp
arpl   %bx,%gs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    6641 <_IO_stdin_used+0x1665>
add    %dh,%gs:0x74(%ebp)
imul   $0x73756c63,0x5f(%ebx,%esi,2),%ebp
je     6641 <_IO_stdin_used+0x1665>
jb     663d <_IO_stdin_used+0x1661>
imul   $0x657375,0x5f(%esi),%ebp
jne    665b <_IO_stdin_used+0x167f>
imul   $0x72747461,0x5f(%ebx,%esi,2),%ebp
pop    %edi
addr16
gs
je     6653 <_IO_stdin_used+0x1677>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebp)
imul   $0x646f6e69,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
addr16
gs
je     6668 <_IO_stdin_used+0x168c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x69(%esi)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x5f74,0x73(%edx),%si
popa
je     6690 <_IO_stdin_used+0x16b4>
jb     6687 <_IO_stdin_used+0x16ab>
bound  %esi,0x74(%ebp)
add    %dh,%gs:0x74(%ebp)
imul   $0x73726170,0x5f(%ebx,%esi,2),%ebp
gs
pop    %edi
jae    669a <_IO_stdin_used+0x16be>
jp     6698 <_IO_stdin_used+0x16bc>
add    %dh,0x74(%ebp)
imul   $0x6e756f6d,0x5f(%ebx,%esi,2),%ebp
je     669f <_IO_stdin_used+0x16c3>
jbe    66b1 <_IO_stdin_used+0x16d5>
insb   (%dx),%es:(%edi)
jne    66b2 <_IO_stdin_used+0x16d6>
add    %dh,%gs:0x74(%ebp)
imul   $0x696c6176,0x5f(%ebx,%esi,2),%ebp
fs
pop    %edi
fs
gs
jbe    66c0 <_IO_stdin_used+0x16e4>
arpl   %sp,0x0(%ebp)
jne    66d0 <_IO_stdin_used+0x16f4>
imul   $0x5f746573,0x5f(%ebx,%esi,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
gs
add    %ebx,(%ebx)
add    (%ebx),%edi
jo     6673 <_IO_stdin_used+0x1697>
add    %al,(%eax)
sub    $0x54000000,%eax
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
decl   -0x555c0000(%ecx,%eax,1)
(bad)
call   *0x18000005(%eax)
stos   %eax,%es:(%edi)
(bad)
(bad)
call   b4006696 <_end+0xb3ffd256>
stos   %eax,%es:(%edi)
(bad)
decl   0x0(%esi,%eax,1)
add    %dh,%ah
mov    $0x1b0ffff,%edx
add    %al,(%eax)
inc    %esp
mov    $0x1d0ffff,%ebx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x1fcffff,%ebx
add    %al,(%eax)
adc    $0xbc,%al
(bad)
lcall  *(%eax)
add    (%eax),%al
add    %dl,0x244ffff(%esp,%edi,4)
add    %al,(%eax)
fs
mov    $0x278ffff,%ebp
add    %al,(%eax)
push   %esp
mov    $0x2b8ffff,%esi
add    %al,(%eax)
mov    $0xbe,%ah
(bad)
jmp    *%esp
add    (%eax),%al
add    %dl,0x33cffff(%edi,%edi,4)
add    %al,(%eax)
test   %al,%al
(bad)
incl   -0x3f0c0000(%ebx,%eax,1)
(bad)
inc    %eax
add    (%eax),%eax
add    %al,-0x1(%ecx,%eax,8)
(bad)
in     (%dx),%al
add    (%eax),%eax
add    %dl,0x420ffff(%ecx,%eax,8)
add    %al,(%eax)
push   %esp
ret    $0xffff
je     670a <_IO_stdin_used+0x172e>
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
ret    $0xffff
test   $0x4,%al
add    %al,(%eax)
in     $0xc3,%al
(bad)
(bad)
call   5400671d <_end+0x53ffd2dd>
(bad)
(bad)
call   *-0x3b0c0000(,%eax,1)
(bad)
decl   0x0(%ebp,%eax,1)
add    %al,-0x1(%eax,%ecx,8)
pushl  0x54000005(%eax)
leave
(bad)
decl   (%esi,%eax,1)
add    %al,(%eax)
mov    $0xc9,%ah
(bad)
(bad)
jl     6744 <_IO_stdin_used+0x1768>
add    %al,(%eax)
push   %esp
lret   $0xffff
test   $0x6,%al
add    %al,(%eax)
and    $0xcb,%al
(bad)
incl   (%eax)
pop    %es
add    %al,(%eax)
hlt
int    $0xff
incl   -0x2efc0000(%edi,%eax,1)
(bad)
(bad)
faddl  (%edi)
add    %al,(%eax)
aam    $0xd3
(bad)
(bad)
cmp    %cl,(%eax)
add    %al,(%eax)
hlt
aam    $0xff
call   *-0x2a7c0000(%eax,%ecx,1)
(bad)
inc    %esp
or     %al,(%eax)
add    %dh,(%esi,%edx,8)
(bad)
(bad)
cld
or     %al,(%eax)
add    %ah,(%edx,%ebx,8)
(bad)
ljmp   *0x0(%ecx,%ecx,1)
add    %dl,%ah
fdivr  %st,%st(7)
inc    %esp
or     %eax,(%eax)
add    %dh,0xa04ffff(%esi,%ebx,8)
add    %al,(%eax)
and    $0xe0,%al
(bad)
incl   0x0(%edx,%ecx,1)
add    %dh,(%ecx,%eiz,8)
(bad)
incl   -0x1ebc0000(%edx,%ecx,1)
(bad)
lcall  *-0x5bfffff6(%eax)
loope  67b2 <_IO_stdin_used+0x17d6>
inc    %esp
or     (%eax),%al
add    %ah,%ah
loope  67ba <_IO_stdin_used+0x17de>
push   %eax
or     (%eax),%al
add    %ah,-0x1(%edi,%eiz,8)
(bad)
js     67d1 <_IO_stdin_used+0x17f5>
add    %al,(%eax)
(bad)
call   be567cd <_end+0xbe4d38d>
add    %al,(%eax)
xor    $0xe9,%al
(bad)
jmp    *(%eax)
or     $0x0,%al
add    %al,-0x1(%ecx,%ebp,8)
pushl  (%esp,%ecx,1)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     67f7 <_IO_stdin_used+0x181b>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
shlb   $0x0,0x350ffff(%ebp)
add    %al,(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     6817 <_IO_stdin_used+0x183b>
js     6815 <_IO_stdin_used+0x1839>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sbb    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,(%ecx,%edi,4)
(bad)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jnp    6845 <_IO_stdin_used+0x1869>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x5cffff,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,-0x46600000(%eax,%eax,1)
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,-0xc000000(%eax)
mov    $0x7cffff,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
imul   $0xec3410c,(%esi),%ecx
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %cl,-0x46(%eax)
(bad)
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    -0x3cbeeff2(%esi),%ch
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
or     %al,(%ecx)
add    %al,(%eax)
in     $0xba,%al
(bad)
(bad)
out    %eax,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff85,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
dec    %eax
add    %eax,(%eax)
add    %dl,0x5cffff(%ebx,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x0(%ecx,%eax,1)
add    %cl,%al
mov    $0xd8ffff,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x63,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %cl,%ah
add    %eax,(%eax)
add    %dl,-0x44(%eax)
(bad)
jmp    *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dl,(%edx,%eax,1)
add    %al,(%eax)
clc
mov    $0x67ffff,%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x59,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,0x2(%eax)
add    %al,(%eax)
sub    $0xbd,%al
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %ch,0xa(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bh,0x0(%edx,%eax,1)
add    %dl,-0x43(%eax)
(bad)
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jl     6a8b <_IO_stdin_used+0x1aaf>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    $0x2,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0xbaffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff80,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %al,(%ebx,%eax,1)
add    %al,(%eax)
fdivrs 0x4dffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
jbe    6b13 <_IO_stdin_used+0x1b37>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cmp    %al,(%ebx)
add    %al,(%eax)
hlt
mov    $0x138ffff,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x64400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x3(%eax)
add    %al,(%eax)
hlt
mov    $0x6bffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    (%eax),%eax
add    %bh,(%eax)
mov    $0x95ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%esi),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
faddl  (%ebx)
add    %al,(%eax)
mov    0x45ffffbf,%al
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x80f00e46
add    %ecx,%edx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    %al,(%eax,%eax,1)
add    %cl,0x74ffff(,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
add    $0x0,%al
add    %cl,0x110ffff(%edx,%eax,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4e04(%ebx)
jnp    6c4b <_IO_stdin_used+0x1c6f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
js     6c5e <_IO_stdin_used+0x1c82>
add    %al,(%eax)
sub    %ah,0x9affff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pushf
add    $0x0,%al
add    %al,-0x3d(%eax)
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7f300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
faddl  (%eax,%eax,1)
add    %ah,-0x5b(%eax)
(bad)
dec    %ebp
or     $0x41000000,%eax
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa08fa03,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %cl,-0x3cd00000(,%eax,1)
(bad)
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0x300e4e02(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bh,(%eax)
add    $0xc3a40000,%eax
(bad)
dec    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %dl,0x1c000005(%eax)
(bad)
(bad)
dec    %eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0x43140e0a,%esp
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,(%esi,%eax,1)
add    %al,(%eax)
push   $0xfffffc6
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff94,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
orl    $0xe,(%edx)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %es
add    %al,(%eax)
and    %cl,%cl
(bad)
inc    %ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
or     %eax,(%ecx)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ebx
add    %al,(%eax)
enter  $0x6,$0x0
xchg   %eax,%esp
lret
(bad)
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
and    $0x7,%al
add    %al,(%eax)
pop    %eax
int3
(bad)
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ebp),%ah
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
push   %esp
pop    %es
add    %al,(%eax)
mov    $0xa6ffffcc,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %cl,-0x32d00000(%edi,%eax,1)
(bad)
jmp    *%esi
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x1c00e46
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
dec    %ecx
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xlat   %ds:(%ebx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,%ah
pop    %es
add    %al,(%eax)
mov    $0xd0,%al
(bad)
jmp    *0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x61500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
test   %eax,(%ecx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
or     %al,(%eax)
add    %cl,(%eax)
sar    %cl,%edi
call   *%edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
or     %al,(%eax)
add    %ch,0x6bffffd4(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
aam    $0x8
add    %al,(%eax)
fcom   %st(5)
(bad)
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x9,%al
add    %al,(%eax)
test   $0xd6,%al
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
or     %eax,(%eax)
add    %ah,0x57ffff(%esi,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,0x0(%ecx,%ecx,1)
add    %bl,%al
(bad)
(bad)
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
orb    $0x0,(%ecx)
add    %ch,%ah
(bad)
(bad)
(bad)
jg     716f <_IO_stdin_used+0x2193>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x8000000
or     (%eax),%al
add    %ah,%ah
(bad)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     7213 <_IO_stdin_used+0x2237>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    724a <_IO_stdin_used+0x226e>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,0x0(%edx,%ecx,1)
add    %bl,%al
fdivr  %st,%st(7)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,0xc00000a(%eax)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,%ah
or     (%eax),%al
add    %cl,(%eax)
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%ecx)
shlb   (%eax)
add    %al,(%eax)
sbb    0x0(%edx),%dl
add    %ch,0x0(%eax)
add    %al,(%eax)
pop    %ds
push   %edx
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ch,(%edi)
push   %edx
add    %al,(%eax)
jbe    8dae <_IO_stdin_used+0x3dd2>
add    %al,(%eax)
push   $0x51
add    %al,(%eax)
aaa
push   %edx
add    %al,(%eax)
dec    %eax
push   %edx
add    %al,(%eax)
pop    %esp
push   %edx
add    %al,(%eax)
je     8e24 <_IO_stdin_used+0x3e48>
add    %al,(%eax)
test   %edx,0x0(%edx)
.byte 0x0
movsb  %ds:(%esi),%es:(%edi)
push   %ecx
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
incl   (%ecx)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
cwtl
or     $0xd0000,%eax
add    %al,(%eax)
les    0x0(%edi),%ecx
add    %bl,(%ecx)
add    %al,(%eax)
add    %bl,-0x73(%eax)
add    %al,(%eax)
sbb    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
pop    %esp
lea    (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0x78000000
push   %es
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %bh,%al
add    %eax,(%eax)
add    %cl,(%edx)
add    %al,(%eax)
add    %dh,0xb000003(%edi)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %bl,%ah
mov    (%eax),%es
add    %al,(%edx)
add    %al,(%eax)
add    %ah,0x14000001(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
add    %bh,%al
or     (%eax),%eax
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
or     (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *-0x40(%edi)
or     (%eax),%al
add    %bh,%bh
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x30(%edi)
or     (%eax),%al
add    %bh,%dl
(bad)
ljmp   *0x10(%edi)
fmull  0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
(bad)
or     $0xde60000,%eax
add    %al,(%eax)
(bad)
or     $0xe060000,%eax
add    %al,(%eax)
push   %ss
push   %cs
add    %al,(%eax)
es
push   %cs
add    %al,(%eax)
ss
push   %cs
add    %al,(%eax)
inc    %esi
push   %cs
add    %al,(%eax)
push   %esi
push   %cs
add    %al,(%eax)
pushw  %cs
add    %al,(%eax)
jbe    8f20 <_IO_stdin_used+0x3f44>
add    %al,(%eax)
xchg   %cl,(%esi)
add    %al,(%eax)
xchg   %eax,%esi
push   %cs
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
push   %cs
add    %al,(%eax)
mov    $0xe,%dh
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
out    %al,$0xe
add    %al,(%eax)
(bad)
push   %cs
add    %al,(%eax)
push   %es
sldt   (%eax)
push   %ss
sldt   (%eax)
sldt   %es:(%eax)
sldt   %ss:(%eax)
inc    %esi
sldt   (%eax)
push   %esi
sldt   (%eax)
data16
sldt   (%eax)
jbe    8f61 <_IO_stdin_used+0x3f85>
add    %al,(%eax)
xchg   %cl,(%edi)
add    %al,(%eax)
xchg   %eax,%esi
sldt   (%eax)
cmpsb  %es:(%edi),%ds:(%esi)
sldt   (%eax)
mov    $0xf,%dh
add    %al,(%eax)
(bad)
sldt   (%eax)
(bad)
sldt   (%eax)
out    %al,$0xf
add    %al,(%eax)
(bad)
sldt   (%eax)
push   %es
adc    %al,(%eax)
add    %dl,(%esi)
adc    %al,(%eax)
add    %ah,(%esi)
adc    %al,(%eax)
add    %dh,(%esi)
adc    %al,(%eax)
add    %al,0x10(%esi)
add    %al,(%eax)
push   %esi
adc    %al,(%eax)
add    %ah,0x10(%esi)
add    %al,(%eax)
jbe    8fa2 <_IO_stdin_used+0x3fc6>
add    %al,(%eax)
xchg   %dl,(%eax)
add    %al,(%eax)
xchg   %eax,%esi
adc    %al,(%eax)
add    %ah,-0x49fffff0(%esi)
adc    %al,(%eax)
add    %al,%dh
adc    %al,(%eax)
add    %dl,%dh
adc    %al,(%eax)
add    %ah,%dh
adc    %al,(%eax)
add    %dh,%dh
adc    %al,(%eax)
add    %al,(%esi)
adc    %eax,(%eax)
add    %ah,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    $0x90,%al
add    %al,(%eax)
(bad)
out    %eax,(%dx)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
lock (bad)
incl   (%eax)
add    %al,(%eax)
sbb    %ah,0x0(%eax,%eax,1)
je     9083 <_edata+0x63>
xor    %esi,(%ecx)
data16
arpl   %si,0x36626333
arpl   %di,(%ecx)
gs
xor    $0x31,%al
xor    %esi,(%ebx)
xor    $0x36,%al
xor    %esi,(%esi)
xor    %dh,(%eax)
xor    $0x64,%al
popa
xor    %esp,0x63(%esi,%esi,1)
ss xor %esi,%ss:(%esi)
xor    $0x61343336,%eax
cs fs bound %esi,%cs:%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,-0xb(%edi)
.byte 0x2d
