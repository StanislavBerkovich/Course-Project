das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,%ch
sbb    %bl,%dl
inc    %ebx
mov    $0x39c26ef1,%eax
loope  8048147 <_init-0x17a9>
nop
shrb   -0x57(%edi)
mov    %al,0xccaef076
adc    %eax,(%eax)
add    %al,(%eax)
js     80481b2 <_init-0x173e>
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
xor    %ah,-0x3e(%edx,%eax,1)
adc    %ah,(%ecx)
or     $0x2822,%eax
add    %al,-0x7effd7be(%eax)
add    %al,0x0(%ecx)
mov    %gs,(%eax)
add    $0x25c4299,%eax
and    $0x41804a4,%eax
js     80481de <_init-0x1712>
add    %al,(%eax)
jp     80481e2 <_init-0x170e>
add    %al,(%eax)
jl     80481e6 <_init-0x170a>
add    %al,(%eax)
addb   $0x0,(%eax)
add    %al,-0x7a000000(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x77000000(%edi)
add    %al,(%eax)
add    %cl,-0x73000000(%ebx)
add    %al,(%eax)
add    %cl,-0x71000000(%esi)
add    %al,(%eax)
add    %dl,-0x6b000000(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x44000000(%edi)
push   %eax
jbe    80481c2 <_init-0x172e>
inc    %ebx
ret
mov    %dl,-0x5631f198(%edx)
jmp    8048201 <_init-0x16ef>
out    %eax,(%dx)
push   %cs
or     $0xdf,%al
add    0x12f7c432(%ebx),%ebp
(bad)
loope  8048231 <_init-0x16bf>
mov    $0xb9,%bh
(bad)
icebp
push   %cs
xchg   %dh,%al
xchg   %eax,%esi
jl     804821d <_init-0x16d3>
jno    804829f <_init-0x1651>
sbb    $0x97,%al
mov    0x2cce9789,%al
arpl   %si,-0x54(%edx)
dec    %ebx
jecxz  8048214 <_init-0x16dc>
mov    $0xcb7c92e3,%ebx
mov    %al,%dl
stos   %al,%es:(%edi)
cmp    %dh,%dl
mov    (%ebx,%eax,2),%ebx
inc    %ebp
aad    $0xec
push   %ds
cs
mov    $0x4162e5a9,%esp
cmc
into
ror    %esi
stos   %al,%es:(%edi)
xor    -0x5d4c5610(%ebx),%esi
notl   (%edx)
out    %eax,$0x34
mov    $0x85050aa9,%esp
stos   %al,%es:(%edi)
jb     8048255 <_init-0x169b>
sub    0x10615566(%edx),%ebp
cmpsl  %es:(%edi),%ds:(%esi)
inc    %ebp
loop   8048269 <_init-0x1687>
dec    %ebx
popa
(bad)
sub    $0xcab2850,%eax
cmp    %ecx,0x7005fb92(%edx)
repnz lret $0x54da
push   %ss
sub    %bl,0x91051c8c
loope  8048251 <_init-0x169f>
add    0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ebx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
iret
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addb   $0x0,(%ebx)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testb  $0x0,(%ecx)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %eax,(%bx,%si)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x4(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x5(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jns    80484be <_init-0x1432>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %es:(%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int    $0x2
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %al,(%dx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aas
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fild   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loopne 80485fe <_init-0x12f2>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x5,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
arpl   %ax,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %esp
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%esp,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addb   $0x0,(%eax,%eax,1)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edx
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x5,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
js     804872a <_init-0x11c6>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x2,%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movb   $0x0,(%edx)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    8048800 <_init-0x10f0>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%bx,%si)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x4,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %eax,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cltd
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x4(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ecx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ebp
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x2,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    (%eax),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int3
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pusha
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sti
add    $0x42c00000,%eax
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
sub    0x7bf00000,%al
push   %es
or     %dh,0x12000006(%ecx)
add    %cl,0x1d700
add    %dl,(%eax)
lcall  $0x0,$0x804
adc    (%eax),%al
add    %al,(%eax)
jb     8048a5a <_init-0xe96>
add    %al,(%eax)
mov    %es,%eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%esi)
add    %dh,0x2(%edi)
add    %al,(%eax)
xor    %bl,0x804(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ebx
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
sub    $0x60000001,%eax
fwait
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
enter  $0x0,$0x0
lock cwtl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
scas   %es:(%edi),%al
add    $0x0,%al
add    %dl,%al
cltd
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%esi),%al
add    %al,(%eax)
rolb   $0x8,0x7(%edx)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
dec    %eax
add    (%eax),%al
add    %ah,%al
inc    %edx
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
push   %es
push   %es
add    %al,(%eax)
loopne 8048b20 <_init-0xdd0>
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
repz add %al,(%eax)
add    %ah,0x40806(%eax,%eax,8)
add    %al,(%eax)
adc    %eax,(%eax)
(bad)
ss
push   %es
add    %al,(%eax)
xchg   %eax,%esp
push   %eax
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %dh,%bl
add    $0x9b000000,%eax
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%eax,%eax,1),%eax
add    %al,%ah
inc    %edx
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
and    (%esi),%eax
add    %al,(%eax)
rolb   $0x8,0x7(%edx)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
in     (%dx),%al
add    (%eax),%al
add    %dh,%al
fwait
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x4
add    %al,%al
inc    %edx
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
and    %eax,(%eax)
sbb    %eax,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
add    (%eax),%al
add    %ah,-0x66(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edi
add    $0x9e000000,%eax
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x4,%al
add    %al,(%eax)
and    $0x43,%al
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
ja     8048b8b <_init-0xd65>
add    %al,(%eax)
add    %bl,0x804(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
hlt
add    (%eax),%al
add    %dh,0x8049a(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%esp,%eax,1)
add    %al,(%eax)
rcrb   $0x0,0x8(%esp,%eax,1)
adc    (%eax),%al
add    %al,(%eax)
sub    $0x4000002,%eax
inc    %ebx
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
xchg   %eax,%esi
add    (%eax),%al
add    %dh,-0x2ef7f97e(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x41c00
add    %al,%al
mov    (%esi),%es
or     %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
or     $0x3d700,%eax
add    %dh,(%eax)
mov    0x804,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %edi
add    (%eax),%eax
add    %dl,0x25080684(%eax)
or     (%eax),%al
add    %dl,(%edx)
add    %cl,0x58500
add    %al,(%eax)
popl   (%esi)
or     %ah,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x2bd00
add    %dl,%al
lcall  $0x0,$0x804
adc    (%eax),%al
add    %al,(%eax)
dec    %eax
add    (%eax),%eax
add    %ah,(%eax)
inc    %ebx
pop    %es
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
dec    %edi
add    $0x9fb00000,%eax
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %ch,0x62(%ecx,%ebp,2)
jo     8048cb1 <_init-0xc3f>
jb     8048cb5 <_init-0xc3b>
jae,pn 8048cc2 <_init-0xc2e>
xor    %cs:(%eax),%eax
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     8048cc4 <_init-0xc2c>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048cef <_init-0xc01>
popa
jb     8048cf2 <_init-0xbfe>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    8048ce4 <_init-0xc0c>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048d05 <_init-0xbeb>
gs
jae    8048c95 <_init-0xc5b>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048d01 <_init-0xbef>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
jo     8048d14 <_init-0xbdc>
jb     8048d18 <_init-0xbd8>
pop    %edi
jae    8048d2a <_init-0xbc6>
jne    8048d1c <_init-0xbd4>
jns    8048cba <_init-0xc36>
pop    %edi
imul   $0x7000,0x69(%esi),%bp
arpl   %si,0x65(%edx)
pop    %edi
push   $0x69
je     8048d28 <_init-0xbc8>
jae    8048d3f <_init-0xbb1>
popa
arpl   %bp,0x5f(%ebx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jo     8048d3a <_init-0xbb6>
jb     8048d3e <_init-0xbb2>
pop    %edi
popa
jae    8048d50 <_init-0xba0>
imul   $0x74696a5f,0x6e(%edi),%esp
pop    %edi
jae    8048d5b <_init-0xb95>
popa
arpl   %bp,0x0(%ebx)
jo     8048d50 <_init-0xba0>
jb     8048d54 <_init-0xb9c>
pop    %edi
gs
js     8048d58 <_init-0xb98>
arpl   %ax,(%eax)
jo     8048d5a <_init-0xb96>
jb     8048d5e <_init-0xb92>
pop    %edi
arpl   %bp,0x6d(%edi)
jo     8048d68 <_init-0xb88>
insb   (%dx),%es:(%edi)
add    %dh,%gs:0x63(%eax)
jb     8048d6b <_init-0xb85>
pop    %edi
data16
jne    8048d76 <_init-0xb7a>
insb   (%dx),%es:(%edi)
imul   $0x695f006f,0x66(%esi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x5f657263,0x70(%eax,%eax,1),%esi
insl   (%dx),%es:(%edi)
popa
imul   $0x61,0x74(%ebp),%esp
bound  %ebp,0x73(%ebp,%eiz,2)
add    %ch,0x62(%ecx,%ebp,2)
fs
insb   (%dx),%es:(%edi)
jae,pn 8048d9d <_init-0xb53>
xor    %cs:(%eax),%al
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048db5 <_init-0xb3b>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ch,0x73(%ecx)
ja     8048daf <_init-0xb41>
insb   (%dx),%es:(%edi)
jo     8048db9 <_init-0xb37>
popa
add    %dh,0x74(%ebx)
jb     8048dba <_init-0xb36>
jo     8048dd2 <_init-0xb1e>
add    %bl,0x5f(%edi)
jo     8048dd0 <_init-0xb20>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
pop    %edi
jae    8048dd1 <_init-0xb1f>
je     8048dcd <_init-0xb23>
jae    8048de9 <_init-0xb07>
outsb  %ds:(%esi),(%dx)
je     8048dd4 <_init-0xb1c>
js     8048d75 <_init-0xb7b>
data16
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
je     8048dde <_init-0xb12>
push   $0x74657300
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     8048dff <_init-0xaf1>
outsl  %ds:(%esi),(%dx)
ja     8048df1 <_init-0xaff>
add    %dh,0x77(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048dfb <_init-0xaf5>
jb     8048d98 <_init-0xb58>
jae    8048e0e <_init-0xae2>
jb     8048e0a <_init-0xae6>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048e0d <_init-0xae3>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048e1d <_init-0xad3>
arpl   %bp,0x72(%eax)
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048e27 <_init-0xac9>
push   $0x6c6e755f
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x73(%ecx)
popa
insb   (%dx),%es:(%edi)
jo     8048e2d <_init-0xac3>
popa
add    %dh,0x65(%edx)
addr16
gs
js     8048e32 <_init-0xabe>
arpl   %ax,(%eax)
jb     8048e36 <_init-0xaba>
pop    %edi
insl   (%dx),%es:(%edi)
popa
je     8048e39 <_init-0xab7>
push   $0x735f5f00
je     8048e4f <_init-0xaa1>
fs
jne    8048e50 <_init-0xaa0>
add    %ah,0x67(%ebx,%eiz,2)
gs
je     8048e5b <_init-0xa95>
gs
js     8048e5e <_init-0xa92>
add    %dh,0x63(%edi)
jb     8048e63 <_init-0xa8d>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %eax,(%eax)
pop    %edi
pop    %edi
data16
js     8048e6b <_init-0xa85>
je     8048e5b <_init-0xa95>
je     8048e5d <_init-0xa93>
je     8048e34 <_init-0xabc>
xor    $0x0,%al
data16
jo     8048e78 <_init-0xa78>
je     8048e68 <_init-0xa88>
pop    %edi
jne    8048e76 <_init-0xa7a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    8048e79 <_init-0xa77>
imul   $0x64686366,%fs:0x0(%edx),%esi
imul   $0x6c627369,0x0(%edx),%esi
popa
outsb  %ds:(%esi),(%dx)
imul   $0x65,(%eax),%eax
jb     8048e9c <_init-0xa54>
outsl  %ds:(%esi),(%dx)
jb     8048e2d <_init-0xac3>
imul   $0x63617073,0x77(%ebx),%esi
add    %dh,%gs:0x65(%edx)
addr16
data16
jb     8048ea1 <_init-0xa4f>
add    %bl,%gs:0x5f(%edi)
jae    8048eb6 <_init-0xa3a>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
bound  %esi,0x77(%edi,%ebp,2)
arpl   %ax,(%eax)
je     8048ed7 <_init-0xa19>
ja     8048edf <_init-0xa11>
jo     8048edc <_init-0xa14>
gs
jb     8048e6f <_init-0xa81>
popa
bound  %ebp,0x72(%edi)
je     8048e75 <_init-0xa7b>
jae    8048eeb <_init-0xa05>
imul   $0x6978655f,%fs:0x0(%esi),%ebp
je     8048e81 <_init-0xa6f>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jb     8048ef0 <_init-0xa00>
push   $0x72700072
outsl  %ds:(%esi),(%dx)
addr16 jb 8048ef7 <_init-0x9f9>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
popa
jae    8048f20 <_init-0x9d0>
gs
jb     8048f24 <_init-0x9cc>
pop    %edi
popaw
imul   $0x6c617773,0x69(%eax,%eax,1),%ebp
outsb  %ds:(%esi),(%dx)
jne    8048f2b <_init-0x9c5>
add    %ch,0x73(%ecx)
jae    8048f33 <_init-0x9bd>
popa
arpl   %sp,0x0(%ebp)
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     8048f32 <_init-0x9be>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048f4b <_init-0x9a5>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048ede <_init-0xa12>
data16
je     8048f54 <_init-0x99c>
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
add    %ch,%gs:0x73(%ecx)
popa
je     8048f61 <_init-0x98f>
jns    8048eef <_init-0xa01>
imul   $0x746e6972,0x70(%ebx),%esi
add    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048f74 <_init-0x97c>
jb     8048f6e <_init-0x982>
outsb  %gs:(%esi),(%dx)
add    %ch,0x73(%ecx)
js     8048f6d <_init-0x983>
imul   $0x6e750074,0x69(%edi),%esp
addr16
gs
je     8048f77 <_init-0x979>
add    %ch,0x73(%ecx)
ja     8048f7c <_init-0x974>
je     8048f94 <_init-0x95c>
jo     8048f82 <_init-0x96e>
add    %ah,0x72(%esi)
gs
popa
fs
pop    %edi
jne    8048f94 <_init-0x95c>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048f97 <_init-0x959>
je     8048f34 <_init-0x9bc>
imul   $0x6d756e6c,0x61(%ebx),%esi
add    %ch,0x73(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048fa7 <_init-0x949>
jb     8048f44 <_init-0x9ac>
pop    %edi
pop    %edi
gs
jb     8048fbb <_init-0x935>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     8048fd0 <_init-0x920>
popa
addr16
gs
jae    8048fce <_init-0x922>
jp     8048fcc <_init-0x924>
add    %dh,0x63(%edi)
je     8048fdb <_init-0x915>
bound  %eax,(%eax)
pop    %edi
pop    %edi
data16
js     8048fe6 <_init-0x90a>
je     8048fd6 <_init-0x91a>
je     8048fad <_init-0x943>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8048ff0 <_init-0x900>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x69,(%eax),%eax
jae    8049001 <_init-0x8ef>
jne    8048ffc <_init-0x8f4>
jo     8048ff3 <_init-0x8fd>
jb     8048f90 <_init-0x960>
jae    8049006 <_init-0x8ea>
outsl  %fs:(%esi),(%dx)
jne    804900a <_init-0x8e6>
add    %ah,0x74(%esi)
jae    8048ffa <_init-0x8f6>
jb     8049002 <_init-0x8ee>
popa
add    %bl,%fs:0x5f(%edi)
jae    8049018 <_init-0x8d8>
jb     804901a <_init-0x8d6>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ah,0x70(%esi)
jne    804902b <_init-0x8c5>
jae    8048fb9 <_init-0x937>
jae    804902f <_init-0x8c1>
jb     804902b <_init-0x8c5>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8049033 <_init-0x8bd>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    804904c <_init-0x8a4>
jb     804903d <_init-0x8b3>
popa
jae    8049042 <_init-0x8ae>
arpl   %bp,0x70(%ebp)
add    %ah,0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     804904b <_init-0x8a5>
outsb  %ds:(%esi),(%dx)
imul   $0x6973626d,%fs:0x0(%edx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x7274735f,0x5f(%eax,%eax,1),%esi
outsb  %ds:(%esi),(%dx)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x65(%edx)
pop    %edi
arpl   %bp,0x6d(%edi)
jo     8049072 <_init-0x87e>
insb   (%dx),%es:(%edi)
gs
pop    %edi
jo     804906f <_init-0x881>
je     8049084 <_init-0x86c>
gs
jb     8049081 <_init-0x86f>
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
js     804908c <_init-0x864>
je     804907c <_init-0x874>
je     8049053 <_init-0x89d>
xor    $0x0,%al
imul   $0x72657070,0x75(%ebx),%esi
add    %ah,0x73(%esi)
je     804908c <_init-0x864>
je     8049093 <_init-0x85d>
jae    8049065 <_init-0x88b>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    804909b <_init-0x855>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8049039 <_init-0x8b7>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     80490bc <_init-0x834>
je     80490ac <_init-0x844>
je     8049083 <_init-0x86d>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     80490c6 <_init-0x82a>
outsb  %ds:(%esi),(%dx)
jbe    8049064 <_init-0x88c>
data16
je     80490da <_init-0x816>
pop    %edi
jae    80490cf <_init-0x821>
je     804906c <_init-0x884>
jb     80490d3 <_init-0x81d>
arpl   %bp,0x6d(%bx)
jo     8049074 <_init-0x87c>
imul   $0x68706172,0x67(%ebx),%esi
add    %ch,0x70(%edi)
je     80490e1 <_init-0x80f>
jb     80490e9 <_init-0x807>
add    %dh,0x74(%ebx)
fs
gs
jb     80490fb <_init-0x7f5>
add    %dh,0x63(%edi)
ja     80490f7 <_init-0x7f9>
fs
je     80490f9 <_init-0x7f7>
add    %bl,0x6f(%edi)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
outsb  %ds:(%esi),(%dx)
gs
ja     8049102 <_init-0x7ee>
push   $0x6b6e75
data16
jae    804910a <_init-0x7e6>
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     804911e <_init-0x7d2>
jo     8049125 <_init-0x7cb>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%bp,%si)
pop    %edi
jae    8049121 <_init-0x7cf>
popa
jb     8049122 <_init-0x7ce>
push   $0x72776600
imul   $0x6e6f6369,0x0(%ebp,%eiz,2),%esi
jbe    804912d <_init-0x7c3>
arpl   %bp,0x73(%edi,%ebp,2)
add    %bl,%gs:0x5f(%edi)
data16
jo     804913e <_init-0x7b2>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x74(%ebx)
jb     804914e <_init-0x7a2>
push   $0x626f0072
jae    8049166 <_init-0x78a>
popa
arpl   %bp,0x5f(%ebx)
data16
jb     804915e <_init-0x792>
add    %ch,%gs:0x73(%ecx)
ja     8049162 <_init-0x78e>
outsb  %ds:(%esi),(%dx)
je     8049174 <_init-0x77c>
insb   (%dx),%es:(%edi)
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    804910a <_init-0x7e6>
jo     804917e <_init-0x772>
outsl  %ds:(%esi),(%dx)
addr16 jb 8049171 <_init-0x77f>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     8049196 <_init-0x75a>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8049192 <_init-0x75e>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
popa
fs imul $0x73710034,%fs:0x36(%edx),%esi
73
outsl  %ds:(%esi),(%dx)
jb     80491b2 <_init-0x73e>
add    %ch,0x63(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jbe    80491a4 <_init-0x74c>
outsl  %ds:(%esi),(%dx)
jo     80491ad <_init-0x743>
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     80491c3 <_init-0x72d>
jne    80491c6 <_init-0x72a>
jo     80491bd <_init-0x733>
jb     80491b9 <_init-0x737>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     80491d7 <_init-0x719>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80491d1 <_init-0x71f>
jb     80491cd <_init-0x723>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
je     80491e8 <_init-0x708>
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     80491de <_init-0x712>
outsb  %ds:(%esi),(%dx)
add    %ah,0x63(%esi)
outsb  %ds:(%esi),(%dx)
je     80491ec <_init-0x704>
add    %bl,0x5f(%edi)
jae    80491f5 <_init-0x6fb>
jb     80491f0 <_init-0x700>
outsb  %ds:(%esi),(%dx)
je     80491f0 <_init-0x700>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x73(%ecx)
imul   $0x73690074,%fs:0x69(%edi),%esp
arpl   %bp,0x74(%esi)
jb     804920a <_init-0x6e6>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804920b <_init-0x6e5>
add    %ah,0x6f(%esi)
jo     8049210 <_init-0x6e0>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
pop    %edi
outsl  %ds:(%esi),(%dx)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
bound  %esp,0x67(%ebp)
imul   $0x646e6962,0x0(%esi),%ebp
je     8049229 <_init-0x6c7>
js     804923a <_init-0x6b6>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x5f737466,0x0(%esi),%ebp
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
fs
jb     804923d <_init-0x6b3>
outsb  %ds:(%esi),(%dx)
add    %ch,0x70(%edi)
outsb  %gs:(%esi),(%dx)
popa
je     8049217 <_init-0x6d9>
xor    $0x0,%al
data16
ja     8049258 <_init-0x698>
imul   $0x6f6c6e75,0x5f(%ebp,%eiz,2),%esi
arpl   %bp,0x65(%ebx)
add    %dh,%fs:0x74(%ebx)
jb     804925a <_init-0x696>
insl   (%dx),%es:(%edi)
jo     80491fa <_init-0x6f6>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     804927a <_init-0x676>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %dh,%fs:0x74(%ebx)
jo     8049279 <_init-0x677>
jo     8049291 <_init-0x65f>
add    %dh,0x74(%ebx)
jb     8049280 <_init-0x670>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804928b <_init-0x665>
jb     804928e <_init-0x662>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804922c <_init-0x6c4>
data16
jo     80492a4 <_init-0x64c>
je     80492a4 <_init-0x64c>
pop    %edi
jne    80492a2 <_init-0x64e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x73(%ecx)
jo     80492b4 <_init-0x63c>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x5f(%eax,%eax,1)
pop    %edi
jo     80492b9 <_init-0x637>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     80492c4 <_init-0x62c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    80492c8 <_init-0x628>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     80492cc <_init-0x624>
js     80492d2 <_init-0x61e>
je     804926b <_init-0x685>
pop    %edi
gs
fs
popa
je     80492d2 <_init-0x61e>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    80492ee <_init-0x602>
popa
jb     80492f1 <_init-0x5ff>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000000
add    %al,(%eax,%eax,1)
add    (%eax),%eax
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    $0x3000300,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %cl,(%ecx)
add    %al,(%eax,%eax,1)
or     %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    $0x4000300,%eax
add    %al,(%edi)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    %al,(%eax)
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %eax,(%eax)
or     %al,(%eax)
jmp    18049419 <_end+0xffd4385>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %cl,(%ecx)
add    %bh,(%ebx)
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    8049451 <_init-0x49f>
imul   $0x80000,(%ecx),%ecx
inc    %edi
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ch
or     $0x70000,%eax
push   %ebx
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jae    804946c <_init-0x484>
imul   $0x60000,(%ecx),%ecx
pop    %ebp
push   %es
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x669,0x50000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x40000,%eax
jae    8049480 <_init-0x470>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x30000,%eax
jge    8049490 <_init-0x460>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    0x69(%ecx),%ebp
or     $0x20000,%eax
xchg   %eax,(%esi)
add    %al,(%eax)
add    %al,(%eax)
cld
aas
pop    %es
or     %al,(%esi)
xor    (%eax),%eax
add    %al,%al
inc    %edx
pop    %es
or     %al,0xc4000078
inc    %edx
pop    %es
or     %al,0xe0000087
inc    %edx
pop    %es
or     %al,0x83
inc    %ebx
pop    %es
or     %al,0x400007d
inc    %ebx
pop    %es
or     %al,0x20000091
inc    %ebx
pop    %es
or     %al,0x24000098
inc    %ebx
pop    %es
.byte 0x8
.byte 0x5
lea    (%eax),%eax
or     $0x40,%al
pop    %es
or     %al,(%edi)
add    %eax,(%eax)
add    %dl,(%eax)
inc    %eax
pop    %es
or     %al,(%edi)
add    (%eax),%al
add    %dl,(%eax,%eax,2)
pop    %es
or     %al,(%edi)
add    (%eax),%eax
add    %bl,(%eax)
inc    %eax
pop    %es
or     %al,(%edi)
add    $0x0,%al
add    %bl,(%eax,%eax,2)
pop    %es
or     %al,(%edi)
add    $0x40200000,%eax
pop    %es
or     %al,(%edi)
pop    %es
add    %al,(%eax)
and    $0x40,%al
pop    %es
or     %al,(%edi)
or     %al,(%eax)
add    %ch,(%eax)
inc    %eax
pop    %es
or     %al,(%edi)
or     %eax,(%eax)
add    %ch,(%eax,%eax,2)
pop    %es
or     %al,(%edi)
or     (%eax),%al
add    %dh,(%eax)
inc    %eax
pop    %es
or     %al,(%edi)
or     (%eax),%eax
add    %dh,(%eax,%eax,2)
pop    %es
or     %al,(%edi)
addb   $0x0,(%eax)
cmp    %al,0x7(%eax)
or     %al,(%edi)
or     $0x0,%al
add    %bh,(%eax,%eax,2)
pop    %es
or     %al,(%edi)
or     $0x40400000,%eax
pop    %es
or     %al,(%edi)
push   %cs
add    %al,(%eax)
inc    %esp
inc    %eax
pop    %es
or     %al,(%edi)
jp     8049557 <_init-0x399>
add    %cl,0x40(%eax)
pop    %es
or     %al,(%edi)
sldt   (%eax)
dec    %esp
inc    %eax
pop    %es
or     %al,(%edi)
jl     8049567 <_init-0x389>
add    %dl,0x40(%eax)
pop    %es
or     %al,(%edi)
adc    %al,(%eax)
add    %dl,0x7(%eax,%eax,2)
or     %al,(%edi)
adc    %eax,(%eax)
add    %bl,0x40(%eax)
pop    %es
or     %al,(%edi)
mov    (%eax),%eax
add    %bl,0x7(%eax,%eax,2)
or     %al,(%edi)
adc    (%eax),%al
add    %ah,0x40(%eax)
pop    %es
or     %al,(%edi)
adc    (%eax),%eax
add    %ah,0x7(%eax,%eax,2)
or     %al,(%edi)
adc    $0x0,%al
add    %ch,0x40(%eax)
pop    %es
or     %al,(%edi)
adc    $0x406c0000,%eax
pop    %es
or     %al,(%edi)
popl   (%eax)
add    %dh,0x40(%eax)
pop    %es
or     %al,(%edi)
push   %ss
add    %al,(%eax)
je     80495f2 <_init-0x2fe>
pop    %es
or     %al,(%edi)
xchg   %eax,%edi
add    %al,(%eax)
js     80495fa <_init-0x2f6>
pop    %es
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
jl     8049602 <_init-0x2ee>
pop    %es
or     %al,(%edi)
sbb    %al,(%eax)
add    %al,0x7080740(%eax)
xchg   %al,(%eax)
add    %al,0x19070807(%eax,%eax,2)
add    %al,(%eax)
mov    %al,0x7(%eax)
or     %al,(%edi)
sbb    (%eax),%al
add    %cl,0x1b070807(%eax,%eax,2)
add    %al,(%eax)
nop
inc    %eax
pop    %es
or     %al,(%edi)
sbb    $0x0,%al
add    %dl,0x1d070807(%eax,%eax,2)
add    %al,(%eax)
cwtl
inc    %eax
pop    %es
or     %al,(%edi)
jle    80495ff <_init-0x2f1>
add    %bl,0x1e070807(%eax,%eax,2)
add    %al,(%eax)
mov    0x7080740,%al
pop    %ds
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
inc    %eax
pop    %es
or     %al,(%edi)
and    %al,(%eax)
add    %ch,0x7080740(%eax)
and    %eax,(%eax)
add    %ch,0x22070807(%eax,%eax,2)
add    %al,(%eax)
mov    $0x40,%al
pop    %es
or     %al,(%edi)
and    (%eax),%eax
add    %dh,0x24070807(%eax,%eax,2)
add    %al,(%eax)
mov    $0x7080740,%eax
and    $0x40bc0000,%eax
pop    %es
or     %al,(%edi)
mov    %eax,(%eax)
add    %al,%al
inc    %eax
pop    %es
or     %al,(%edi)
add    %al,%es:(%eax)
les    0x7(%eax),%eax
or     %al,(%edi)
daa
add    %al,(%eax)
enter  $0x740,$0x8
pop    %es
sub    %al,(%eax)
add    %cl,%ah
inc    %eax
pop    %es
or     %al,(%edi)
sub    %eax,(%eax)
add    %dl,%al
inc    %eax
pop    %es
or     %al,(%edi)
sub    (%eax),%al
add    %dl,%ah
inc    %eax
pop    %es
or     %al,(%edi)
sub    (%eax),%eax
add    %bl,%al
inc    %eax
pop    %es
or     %al,(%edi)
sub    $0x0,%al
add    %bl,%ah
inc    %eax
pop    %es
or     %al,(%edi)
sub    $0x40e00000,%eax
pop    %es
or     %al,(%edi)
add    %al,%cs:(%eax)
in     $0x40,%al
pop    %es
or     %al,(%edi)
das
add    %al,(%eax)
call   f0c9ddd <_end+0x7054d49>
xor    %al,(%eax)
add    %ch,%ah
inc    %eax
pop    %es
or     %al,(%edi)
xor    %eax,(%eax)
add    %dh,%al
inc    %eax
pop    %es
or     %al,(%edi)
nop
add    %al,(%eax)
hlt
inc    %eax
pop    %es
or     %al,(%edi)
xor    (%eax),%al
add    %bh,%al
inc    %eax
pop    %es
or     %al,(%edi)
xor    (%eax),%eax
add    %bh,%ah
inc    %eax
pop    %es
or     %al,(%edi)
xor    $0x0,%al
add    %al,(%eax)
inc    %ecx
pop    %es
or     %al,(%edi)
xor    $0x41040000,%eax
pop    %es
or     %al,(%edi)
add    %al,%ss:(%eax)
or     %al,0x7(%ecx)
or     %al,(%edi)
aaa
add    %al,(%eax)
or     $0x41,%al
pop    %es
or     %al,(%edi)
cmp    %al,(%eax)
add    %dl,(%eax)
inc    %ecx
pop    %es
or     %al,(%edi)
cmp    %eax,(%eax)
add    %dl,(%ecx,%eax,2)
pop    %es
or     %al,(%edi)
cmp    (%eax),%al
add    %bl,(%eax)
inc    %ecx
pop    %es
or     %al,(%edi)
cmp    (%eax),%eax
add    %bl,(%ecx,%eax,2)
pop    %es
or     %al,(%edi)
cmp    $0x0,%al
add    %ah,(%eax)
inc    %ecx
pop    %es
or     %al,(%edi)
cmp    $0x41240000,%eax
pop    %es
or     %al,(%edi)
add    %al,%ds:(%eax)
sub    %al,0x7(%ecx)
or     %al,(%edi)
aas
add    %al,(%eax)
sub    $0x41,%al
pop    %es
or     %al,(%edi)
inc    %eax
add    %al,(%eax)
xor    %al,0x7(%ecx)
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
xor    $0x41,%al
pop    %es
or     %al,(%edi)
inc    %edx
add    %al,(%eax)
cmp    %al,0x7(%ecx)
or     %al,(%edi)
inc    %ebx
add    %al,(%eax)
cmp    $0x41,%al
pop    %es
or     %al,(%edi)
inc    %esp
add    %al,(%eax)
inc    %eax
inc    %ecx
pop    %es
or     %al,(%edi)
mov    %es,(%eax)
add    %al,0x7(%ecx,%eax,2)
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
dec    %eax
inc    %ecx
pop    %es
or     %al,(%edi)
inc    %esi
add    %al,(%eax)
dec    %esp
inc    %ecx
pop    %es
or     %al,(%edi)
inc    %edi
add    %al,(%eax)
push   %eax
inc    %ecx
pop    %es
or     %al,(%edi)
dec    %eax
add    %al,(%eax)
push   %esp
inc    %ecx
pop    %es
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
pop    %eax
inc    %ecx
pop    %es
or     %al,(%edi)
dec    %edx
add    %al,(%eax)
pop    %esp
inc    %ecx
pop    %es
or     %al,(%edi)
dec    %ebx
add    %al,(%eax)
pusha
inc    %ecx
pop    %es
or     %al,(%edi)
dec    %esp
add    %al,(%eax)
fs
inc    %ecx
pop    %es
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
push   $0x7080741
dec    %esi
add    %al,(%eax)
insb   (%dx),%es:(%edi)
inc    %ecx
pop    %es
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
jo     80497eb <_init-0x105>
pop    %es
or     %al,(%edi)
push   %eax
add    %al,(%eax)
je     80497f3 <_init-0xfd>
pop    %es
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
js     80497fb <_init-0xf5>
pop    %es
or     %al,(%edi)
push   %edx
add    %al,(%eax)
jl     8049803 <_init-0xed>
pop    %es
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
addb   $0x8,0x7(%ecx)
pop    %es
mov    (%eax),%es
add    %al,0x54070807(%ecx,%eax,2)
add    %al,(%eax)
mov    %al,0x7(%ecx)
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
mov    %es,0x7(%ecx)
or     %al,(%edi)
push   %esi
add    %al,(%eax)
nop
inc    %ecx
pop    %es
or     %al,(%edi)
push   %edi
add    %al,(%eax)
xchg   %eax,%esp
inc    %ecx
pop    %es
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
cwtl
inc    %ecx
pop    %es
or     %al,(%edi)
pop    %ecx
add    %al,(%eax)
pushf
inc    %ecx
pop    %es
or     %al,(%edi)
pop    %edx
add    %al,(%eax)
mov    0x7080741,%al
pop    %ebx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
inc    %ecx
pop    %es
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
test   $0x41,%al
pop    %es
or     %al,(%edi)
pop    %esi
add    %al,(%eax)
lods   %ds:(%esi),%al
inc    %ecx
pop    %es
or     %al,(%edi)
cltd
add    %al,(%eax)
mov    $0x41,%al
pop    %es
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
mov    $0x41,%ah
pop    %es
or     %al,(%edi)
pusha
add    %al,(%eax)
mov    $0x7080741,%eax
popa
add    %al,(%eax)
mov    $0x7080741,%esp
bound  %eax,(%eax)
add    %al,%al
inc    %ecx
pop    %es
or     %al,(%edi)
arpl   %ax,(%eax)
add    %al,%ah
inc    %ecx
pop    %es
or     %al,(%edi)
add    %al,%fs:(%eax)
enter  $0x741,$0x8
pop    %es
add    %al,%gs:(%eax)
int3
inc    %ecx
pop    %es
or     %al,(%edi)
xchg   %eax,%esp
add    %al,(%eax)
rolb   0x7(%ecx)
or     %al,(%edi)
add    %al,(%bx,%si)
aam    $0x41
pop    %es
or     %al,(%edi)
push   $0x41d80000
pop    %es
or     %al,(%edi)
imul   $0x741dc00,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %ah,%al
inc    %ecx
pop    %es
or     %al,(%edi)
imul   $0x0,(%eax),%eax
in     $0x41,%al
pop    %es
or     %al,(%edi)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
call   f0c9fde <_end+0x7054f4a>
insl   (%dx),%es:(%edi)
add    %al,(%eax)
in     (%dx),%al
inc    %ecx
pop    %es
or     %al,(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
lock inc %ecx
pop    %es
or     %al,(%edi)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
hlt
inc    %ecx
pop    %es
or     %al,(%edi)
jo     80498b7 <_init-0x39>
add    %bh,%al
inc    %ecx
pop    %es
or     %al,(%edi)
jno    80498bf <_init-0x31>
add    %bh,%ah
inc    %ecx
pop    %es
or     %al,(%edi)
jb     80498c7 <_init-0x29>
add    %al,(%eax)
inc    %edx
pop    %es
or     %al,(%edi)
jae    80498cf <_init-0x21>
add    %al,(%edx,%eax,2)
pop    %es
or     %al,(%edi)
je     80498d7 <_init-0x19>
add    %cl,(%eax)
inc    %edx
pop    %es
or     %al,(%edi)
jne    80498df <_init-0x11>
add    %cl,(%edx,%eax,2)
pop    %es
or     %al,(%edi)
jbe    80498e7 <_init-0x9>
add    %dl,(%eax)
inc    %edx
pop    %es
or     %al,(%edi)
ja     80498ef <_init-0x1>
push   %ebx
sub    $0x8,%esp
call   804b170 <__sprintf_chk@plt+0x1030>
add    $0x2a707,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804990e <_init+0x1e>
call   8049ce0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8074004
jmp    *0x8074008
add    %al,(%eax)
jmp    *0x807400c
push   $0x0
jmp    8049920 <_init+0x30>
jmp    *0x8074010
push   $0x8
jmp    8049920 <_init+0x30>
jmp    *0x8074014
push   $0x10
jmp    8049920 <_init+0x30>
jmp    *0x8074018
push   $0x18
jmp    8049920 <_init+0x30>
jmp    *0x807401c
push   $0x20
jmp    8049920 <_init+0x30>
jmp    *0x8074020
push   $0x28
jmp    8049920 <_init+0x30>
jmp    *0x8074024
push   $0x30
jmp    8049920 <_init+0x30>
jmp    *0x8074028
push   $0x38
jmp    8049920 <_init+0x30>
jmp    *0x807402c
push   $0x40
jmp    8049920 <_init+0x30>
jmp    *0x8074030
push   $0x48
jmp    8049920 <_init+0x30>
jmp    *0x8074034
push   $0x50
jmp    8049920 <_init+0x30>
jmp    *0x8074038
push   $0x58
jmp    8049920 <_init+0x30>
jmp    *0x807403c
push   $0x60
jmp    8049920 <_init+0x30>
jmp    *0x8074040
push   $0x68
jmp    8049920 <_init+0x30>
jmp    *0x8074044
push   $0x70
jmp    8049920 <_init+0x30>
jmp    *0x8074048
push   $0x78
jmp    8049920 <_init+0x30>
jmp    *0x807404c
push   $0x80
jmp    8049920 <_init+0x30>
jmp    *0x8074050
push   $0x88
jmp    8049920 <_init+0x30>
jmp    *0x8074054
push   $0x90
jmp    8049920 <_init+0x30>
jmp    *0x8074058
push   $0x98
jmp    8049920 <_init+0x30>
jmp    *0x807405c
push   $0xa0
jmp    8049920 <_init+0x30>
jmp    *0x8074060
push   $0xa8
jmp    8049920 <_init+0x30>
jmp    *0x8074064
push   $0xb0
jmp    8049920 <_init+0x30>
jmp    *0x8074068
push   $0xb8
jmp    8049920 <_init+0x30>
jmp    *0x807406c
push   $0xc0
jmp    8049920 <_init+0x30>
jmp    *0x8074070
push   $0xc8
jmp    8049920 <_init+0x30>
jmp    *0x8074074
push   $0xd0
jmp    8049920 <_init+0x30>
jmp    *0x8074078
push   $0xd8
jmp    8049920 <_init+0x30>
jmp    *0x807407c
push   $0xe0
jmp    8049920 <_init+0x30>
jmp    *0x8074080
push   $0xe8
jmp    8049920 <_init+0x30>
jmp    *0x8074084
push   $0xf0
jmp    8049920 <_init+0x30>
jmp    *0x8074088
push   $0xf8
jmp    8049920 <_init+0x30>
jmp    *0x807408c
push   $0x100
jmp    8049920 <_init+0x30>
jmp    *0x8074090
push   $0x108
jmp    8049920 <_init+0x30>
jmp    *0x8074094
push   $0x110
jmp    8049920 <_init+0x30>
jmp    *0x8074098
push   $0x118
jmp    8049920 <_init+0x30>
jmp    *0x807409c
push   $0x120
jmp    8049920 <_init+0x30>
jmp    *0x80740a0
push   $0x128
jmp    8049920 <_init+0x30>
jmp    *0x80740a4
push   $0x130
jmp    8049920 <_init+0x30>
jmp    *0x80740a8
push   $0x138
jmp    8049920 <_init+0x30>
jmp    *0x80740ac
push   $0x140
jmp    8049920 <_init+0x30>
jmp    *0x80740b0
push   $0x148
jmp    8049920 <_init+0x30>
jmp    *0x80740b4
push   $0x150
jmp    8049920 <_init+0x30>
jmp    *0x80740b8
push   $0x158
jmp    8049920 <_init+0x30>
jmp    *0x80740bc
push   $0x160
jmp    8049920 <_init+0x30>
jmp    *0x80740c0
push   $0x168
jmp    8049920 <_init+0x30>
jmp    *0x80740c4
push   $0x170
jmp    8049920 <_init+0x30>
jmp    *0x80740c8
push   $0x178
jmp    8049920 <_init+0x30>
jmp    *0x80740cc
push   $0x180
jmp    8049920 <_init+0x30>
jmp    *0x80740d0
push   $0x188
jmp    8049920 <_init+0x30>
jmp    *0x80740d4
push   $0x190
jmp    8049920 <_init+0x30>
jmp    *0x80740d8
push   $0x198
jmp    8049920 <_init+0x30>
jmp    *0x80740dc
push   $0x1a0
jmp    8049920 <_init+0x30>
jmp    *0x80740e0
push   $0x1a8
jmp    8049920 <_init+0x30>
jmp    *0x80740e4
push   $0x1b0
jmp    8049920 <_init+0x30>
jmp    *0x80740e8
push   $0x1b8
jmp    8049920 <_init+0x30>
jmp    *0x80740ec
push   $0x1c0
jmp    8049920 <_init+0x30>
jmp    *0x80740f0
push   $0x1c8
jmp    8049920 <_init+0x30>
jmp    *0x80740f4
push   $0x1d0
jmp    8049920 <_init+0x30>
jmp    *0x80740f8
push   $0x1d8
jmp    8049920 <_init+0x30>
jmp    *0x80740fc
push   $0x1e0
jmp    8049920 <_init+0x30>
jmp    *0x8074100
push   $0x1e8
jmp    8049920 <_init+0x30>
jmp    *0x8074104
push   $0x1f0
jmp    8049920 <_init+0x30>
jmp    *0x8074108
push   $0x1f8
jmp    8049920 <_init+0x30>
jmp    *0x807410c
push   $0x200
jmp    8049920 <_init+0x30>
jmp    *0x8074110
push   $0x208
jmp    8049920 <_init+0x30>
jmp    *0x8074114
push   $0x210
jmp    8049920 <_init+0x30>
jmp    *0x8074118
push   $0x218
jmp    8049920 <_init+0x30>
jmp    *0x807411c
push   $0x220
jmp    8049920 <_init+0x30>
jmp    *0x8074120
push   $0x228
jmp    8049920 <_init+0x30>
jmp    *0x8074124
push   $0x230
jmp    8049920 <_init+0x30>
jmp    *0x8074128
push   $0x238
jmp    8049920 <_init+0x30>
jmp    *0x807412c
push   $0x240
jmp    8049920 <_init+0x30>
jmp    *0x8074130
push   $0x248
jmp    8049920 <_init+0x30>
jmp    *0x8074134
push   $0x250
jmp    8049920 <_init+0x30>
jmp    *0x8074138
push   $0x258
jmp    8049920 <_init+0x30>
jmp    *0x807413c
push   $0x260
jmp    8049920 <_init+0x30>
jmp    *0x8074140
push   $0x268
jmp    8049920 <_init+0x30>
jmp    *0x8074144
push   $0x270
jmp    8049920 <_init+0x30>
jmp    *0x8074148
push   $0x278
jmp    8049920 <_init+0x30>
jmp    *0x807414c
push   $0x280
jmp    8049920 <_init+0x30>
jmp    *0x8074150
push   $0x288
jmp    8049920 <_init+0x30>
jmp    *0x8074154
push   $0x290
jmp    8049920 <_init+0x30>
jmp    *0x8074158
push   $0x298
jmp    8049920 <_init+0x30>
jmp    *0x807415c
push   $0x2a0
jmp    8049920 <_init+0x30>
jmp    *0x8074160
push   $0x2a8
jmp    8049920 <_init+0x30>
jmp    *0x8074164
push   $0x2b0
jmp    8049920 <_init+0x30>
jmp    *0x8074168
push   $0x2b8
jmp    8049920 <_init+0x30>
jmp    *0x807416c
push   $0x2c0
jmp    8049920 <_init+0x30>
jmp    *0x8074170
push   $0x2c8
jmp    8049920 <_init+0x30>
jmp    *0x8074174
push   $0x2d0
jmp    8049920 <_init+0x30>
jmp    *0x8074178
push   $0x2d8
jmp    8049920 <_init+0x30>
jmp    *0x807417c
push   $0x2e0
jmp    8049920 <_init+0x30>
jmp    *0x8074180
push   $0x2e8
jmp    8049920 <_init+0x30>
jmp    *0x8074184
push   $0x2f0
jmp    8049920 <_init+0x30>
jmp    *0x8074188
push   $0x2f8
jmp    8049920 <_init+0x30>
jmp    *0x807418c
push   $0x300
jmp    8049920 <_init+0x30>
jmp    *0x8074190
push   $0x308
jmp    8049920 <_init+0x30>
jmp    *0x8074194
push   $0x310
jmp    8049920 <_init+0x30>
jmp    *0x8074198
push   $0x318
jmp    8049920 <_init+0x30>
jmp    *0x807419c
push   $0x320
jmp    8049920 <_init+0x30>
jmp    *0x80741a0
push   $0x328
jmp    8049920 <_init+0x30>
jmp    *0x80741a4
push   $0x330
jmp    8049920 <_init+0x30>
jmp    *0x80741a8
push   $0x338
jmp    8049920 <_init+0x30>
jmp    *0x80741ac
push   $0x340
jmp    8049920 <_init+0x30>
jmp    *0x80741b0
push   $0x348
jmp    8049920 <_init+0x30>
jmp    *0x80741b4
push   $0x350
jmp    8049920 <_init+0x30>
jmp    *0x80741b8
push   $0x358
jmp    8049920 <_init+0x30>
jmp    *0x80741bc
push   $0x360
jmp    8049920 <_init+0x30>
jmp    *0x80741c0
push   $0x368
jmp    8049920 <_init+0x30>
jmp    *0x80741c4
push   $0x370
jmp    8049920 <_init+0x30>
jmp    *0x80741c8
push   $0x378
jmp    8049920 <_init+0x30>
jmp    *0x80741cc
push   $0x380
jmp    8049920 <_init+0x30>
jmp    *0x80741d0
push   $0x388
jmp    8049920 <_init+0x30>
jmp    *0x80741d4
push   $0x390
jmp    8049920 <_init+0x30>
jmp    *0x80741d8
push   $0x398
jmp    8049920 <_init+0x30>
jmp    *0x80741dc
push   $0x3a0
jmp    8049920 <_init+0x30>
jmp    *0x80741e0
push   $0x3a8
jmp    8049920 <_init+0x30>
jmp    *0x80741e4
push   $0x3b0
jmp    8049920 <_init+0x30>
jmp    *0x80741e8
push   $0x3b8
jmp    8049920 <_init+0x30>
jmp    *0x80741ec
push   $0x3c0
jmp    8049920 <_init+0x30>
jmp    *0x80741f0
push   $0x3c8
jmp    8049920 <_init+0x30>
jmp    *0x80741f4
push   $0x3d0
jmp    8049920 <_init+0x30>
jmp    *0x80741f8
push   $0x3d8
jmp    8049920 <_init+0x30>
jmp    *0x80741fc
push   $0x3e0
jmp    8049920 <_init+0x30>
jmp    *0x8074200
push   $0x3e8
jmp    8049920 <_init+0x30>
jmp    *0x8074204
push   $0x3f0
jmp    8049920 <_init+0x30>
jmp    *0x8074208
push   $0x3f8
jmp    8049920 <_init+0x30>
jmp    *0x807420c
push   $0x400
jmp    8049920 <_init+0x30>
jmp    *0x8074210
push   $0x408
jmp    8049920 <_init+0x30>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xd0,%esp
mov    0xc(%ebp),%eax
mov    %gs:0x14,%edx
mov    %edx,0xcc(%esp)
xor    %edx,%edx
movl   $0x2,0x807426c
00
mov    %eax,%edi
mov    %eax,0x3c(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   805ef10 <__sprintf_chk@plt+0x14dd0>
mov    (%edi),%eax
movl   $0x806c360,0x4(%esp)
movl   $0x6,(%esp)
movb   $0xa,0x8075084
mov    %eax,0x8074b28
movl   $0xffffffff,0x807443c
ff
movl   $0xffffffff,0x8074400
ff
movl   $0x7fffffff,0x8074404
7f
movl   $0xffffffff,0x8074420
ff
movl   $0xffffffff,0x8074424
ff
movl   $0xffffffff,0x8074418
ff
movl   $0xffffffff,0x807441c
ff
movl   $0x0,0x48(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x8074498
00
call   8049f40 <setlocale@plt>
movl   $0x806c415,0x4(%esp)
movl   $0x806c4e7,(%esp)
call   804a020 <bindtextdomain@plt>
movl   $0x806c4e7,(%esp)
call   8049b30 <textdomain@plt>
movl   $0x804cd00,(%esp)
movl   $0x2,0x807426c
00
call   806c050 <fts_children+0x3150>
movl   $0x806c427,(%esp)
call   8049c70 <getenv@plt>
movl   $0x0,0x1c(%esp)
test   %eax,%eax
mov    %eax,%ebx
je     804a267 <__sprintf_chk@plt+0x127>
cmpb   $0x0,(%eax)
jne    804ad03 <__sprintf_chk@plt+0xbc3>
xor    %eax,%eax
call   804cb70 <__sprintf_chk@plt+0x2a30>
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x30(%esp)
xchg   %ax,%ax
mov    0x8074300,%eax
lea    0xb0(%esp),%ebx
xor    %edi,%edi
mov    %eax,0x34(%esp)
mov    %eax,%esi
jmp    804a2be <__sprintf_chk@plt+0x17e>
xchg   %ax,%ax
mov    %esi,0x8074228
mov    0x8074300,%esi
lea    0x1(%ecx),%ebx
mov    %al,(%ecx)
mov    $0x1,%edi
mov    0x3c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x806da60,0xc(%esp)
movl   $0x806dda0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049d20 <getopt_long@plt>
lea    -0x30(%eax),%ecx
cmp    $0x9,%ecx
ja     804a428 <__sprintf_chk@plt+0x2e8>
cmp    %esi,0x8074228
lea    0xb0(%esp),%ecx
jne    804a2a8 <__sprintf_chk@plt+0x168>
test   %edi,%edi
je     804a418 <__sprintf_chk@plt+0x2d8>
xor    %ecx,%ecx
cmpb   $0x30,0xb0(%esp)
lea    0xc5(%esp),%edx
sete   %cl
sub    %ecx,%ebx
cmp    %edx,%ebx
mov    %ebx,%ecx
jne    804a2a8 <__sprintf_chk@plt+0x168>
mov    %eax,%edx
movl   $0x2e2e2e,0xc5(%esp)
00
lea    0xc8(%esp),%ebx
lea    0x48(%esp),%eax
movb   $0x0,(%ebx)
mov    %eax,0xc(%esp)
lea    0xb0(%esp),%eax
movl   $0x806c360,0x10(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x38(%esp)
call   80653d0 <__sprintf_chk@plt+0x1b290>
mov    0x38(%esp),%edx
cmp    $0x1,%eax
ja     804a440 <__sprintf_chk@plt+0x300>
mov    0x4c(%esp),%eax
test   %eax,%eax
js     804a440 <__sprintf_chk@plt+0x300>
cmp    $0xffffffff,%edx
je     804a498 <__sprintf_chk@plt+0x358>
cmp    $0x89,%edx
ja     804ac94 <__sprintf_chk@plt+0xb54>
jmp    *0x806d81c(,%edx,4)
movl   $0x30a,0x807422c
00
mov    0x34(%esp),%eax
movl   $0x3,0x8074230
00
mov    %eax,0x24(%esp)
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x806c550,0x4(%esp)
mov    %ebx,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    804a3eb <__sprintf_chk@plt+0x2ab>
movl   $0x1,0x8074440
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x806c5c2,0x4(%esp)
mov    %ebx,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    804b08e <__sprintf_chk@plt+0xf4e>
movl   $0x2,0x8074440
00
jmp    804a290 <__sprintf_chk@plt+0x150>
lea    0x0(%esi),%esi
lea    0xb0(%esp),%ecx
jmp    804a2a8 <__sprintf_chk@plt+0x168>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
lea    0xb0(%esp),%eax
cmp    %eax,%ebx
jne    804a33c <__sprintf_chk@plt+0x1fc>
jmp    804a38b <__sprintf_chk@plt+0x24b>
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806c760,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x806c38f,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0xc(%esp)
call   8049c40 <error@plt>
mov    0x38(%esp),%edx
cmp    $0xffffffff,%edx
jne    804a394 <__sprintf_chk@plt+0x254>
cmpl   $0x2,0x807449c
je     804b009 <__sprintf_chk@plt+0xec9>
call   8066700 <__sprintf_chk@plt+0x1c5c0>
cmpl   $0x0,0x80743c8
je     804adda <__sprintf_chk@plt+0xc9a>
movl   $0x0,0x807440c
00
movl   $0x0,0x8074410
00
movl   $0x1,0x80743cc
00
mov    0x80743cc,%eax
or     0x8074410,%eax
cmpl   $0x0,0x807441c
mov    %eax,0x8074438
js     804afa3 <__sprintf_chk@plt+0xe63>
cmpl   $0x0,0x8074424
js     804af8b <__sprintf_chk@plt+0xe4b>
cmpl   $0x0,0x807449c
jne    804ae88 <__sprintf_chk@plt+0xd48>
cmpl   $0x0,0x80744a4
jne    804ae1c <__sprintf_chk@plt+0xcdc>
cmpl   $0x0,0x80744a8
jne    804adec <__sprintf_chk@plt+0xcac>
lea    0x50(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049bb0 <__fxstat64@plt>
test   %eax,%eax
jne    804a562 <__sprintf_chk@plt+0x422>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804a562 <__sprintf_chk@plt+0x422>
mov    $0x80744c0,%edi
mov    $0x18,%ecx
rep movsl %ds:(%esi),%es:(%edi)
cmpl   $0x0,0x30(%esp)
je     804b0a3 <__sprintf_chk@plt+0xf63>
cmpl   $0x0,0x28(%esp)
jne    804afeb <__sprintf_chk@plt+0xeab>
xorl   $0x1,0x8074434
movl   $0x0,0x8075088
00
movl   $0x0,0x807508c
00
mov    0x28(%esp),%eax
mov    0x30(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x8074474
mov    %edi,(%esp)
call   80499d0 <free@plt>
mov    0x8(%ebp),%eax
sub    0x8074300,%eax
sub    $0x1,%eax
jle    804a5c7 <__sprintf_chk@plt+0x487>
cmpl   $0x0,0x8074408
je     804a5ce <__sprintf_chk@plt+0x48e>
cmpl   $0x0,0x20(%esp)
je     804a5d8 <__sprintf_chk@plt+0x498>
movl   $0x1,0x8074430
00
movl   $0x1,(%esp)
call   804a060 <isatty@plt>
mov    0x8074404,%eax
or     0x8074400,%eax
je     804b026 <__sprintf_chk@plt+0xee6>
testb  $0x2,0x807422c
je     804a60b <__sprintf_chk@plt+0x4cb>
cmpl   $0x0,0x8074478
je     804b07f <__sprintf_chk@plt+0xf3f>
mov    0x8(%ebp),%eax
cmp    %eax,0x8074300
jge    804b032 <__sprintf_chk@plt+0xef2>
mov    0x3c(%esp),%esi
mov    $0x1,%ebx
mov    0x8074300,%eax
mov    (%esi,%eax,4),%eax
call   804f930 <__sprintf_chk@plt+0x57f0>
and    %eax,%ebx
mov    0x8074300,%eax
add    $0x1,%eax
cmp    0x8(%ebp),%eax
mov    %eax,0x8074300
jl     804a623 <__sprintf_chk@plt+0x4e3>
cmpl   $0x0,0x8074480
mov    $0x2,%eax
cmove  %ebx,%eax
mov    %eax,(%esp)
call   8049cf0 <exit@plt>
cmpl   $0x0,0x807448c
je     804b0e9 <__sprintf_chk@plt+0xfa9>
mov    0x8074324,%eax
movl   $0x10000000,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x807448c,%eax
mov    %eax,(%esp)
call   805cb80 <__sprintf_chk@plt+0x12a40>
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%eax
mov    %eax,0x80743f8
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80743fc
00
jmp    804a290 <__sprintf_chk@plt+0x150>
cmpl   $0x0,0x8074490
je     804b0f8 <__sprintf_chk@plt+0xfb8>
mov    0x8074324,%eax
movl   $0xa,0x10(%esp)
movl   $0x10000000,0xc(%esp)
movl   $0x805cb80,(%esp)
mov    %eax,0x8(%esp)
mov    0x8074490,%eax
mov    %eax,0x4(%esp)
call   805cf60 <__sprintf_chk@plt+0x12e20>
test   %eax,%eax
je     804a290 <__sprintf_chk@plt+0x150>
call   8049e90 <__errno_location@plt>
mov    0x8074324,%ebx
movl   $0x806e484,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8049c40 <error@plt>
jmp    804a290 <__sprintf_chk@plt+0x150>
cmpl   $0x0,0x8074490
je     804b107 <__sprintf_chk@plt+0xfc7>
cmp    $0x82,%edx
mov    $0x30000000,%eax
mov    $0x10000000,%edx
cmovne %edx,%eax
mov    %eax,0x8(%esp)
mov    0x8074324,%eax
mov    %eax,0x4(%esp)
mov    0x8074490,%eax
mov    %eax,(%esp)
call   805cb80 <__sprintf_chk@plt+0x12a40>
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%ebx
test   %ebx,%ebx
je     804aff5 <__sprintf_chk@plt+0xeb5>
movl   $0x806e640,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804aca0 <__sprintf_chk@plt+0xb60>
movl   $0x806c496,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804aca0 <__sprintf_chk@plt+0xb60>
movl   $0x806c49a,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804aca0 <__sprintf_chk@plt+0xb60>
movl   $0x806c4a0,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804ae0d <__sprintf_chk@plt+0xccd>
movl   $0x806c4a6,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804ae0d <__sprintf_chk@plt+0xccd>
movl   $0x806c4a9,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804ae0d <__sprintf_chk@plt+0xccd>
movl   $0x806c4ae,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804aff5 <__sprintf_chk@plt+0xeb5>
movl   $0x806c4b6,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804aff5 <__sprintf_chk@plt+0xeb5>
movl   $0x806c4b3,0x4(%esp)
mov    %ebx,(%esp)
call   8049de0 <strcasecmp@plt>
test   %eax,%eax
je     804aff5 <__sprintf_chk@plt+0xeb5>
movl   $0x1,0x80744a8
00
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%ebx
movl   $0x806c475,0x4(%esp)
mov    %ebx,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    804a3c8 <__sprintf_chk@plt+0x288>
movl   $0x0,0x8074440
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movb   $0x0,0x8075084
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x807508c
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8075088
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8074434
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806d770,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80744a0
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80743c8
00
movl   $0x0,0x807426c
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8074498
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x807442c
00
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%eax
movl   $0x806c360,0x10(%esp)
movl   $0x8074400,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80653d0 <__sprintf_chk@plt+0x1b290>
cmp    $0x1,%eax
jbe    804a290 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806c463,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x807440c
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8075090
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8074408
00
movl   $0x0,0x20(%esp)
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%eax
cmpb   $0x2d,(%eax)
je     804adc1 <__sprintf_chk@plt+0xc81>
movl   $0x806c613,0x4(%esp)
mov    %eax,(%esp)
call   8049b90 <fopen64@plt>
mov    %eax,0x34(%esp)
cmpl   $0x0,0x34(%esp)
je     804b11e <__sprintf_chk@plt+0xfde>
mov    0x28(%esp),%eax
mov    $0x1,%edi
add    $0x1,%eax
je     804aa1e <__sprintf_chk@plt+0x8de>
lea    0x0(%esi),%esi
add    %edi,%edi
cmp    %eax,%edi
jbe    804aa18 <__sprintf_chk@plt+0x8d8>
mov    0x30(%esp),%eax
lea    -0x1(%edi),%ebx
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x28(%esp),%esi
mov    %eax,0x30(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %ebx,0x38(%esp)
add    %esi,%eax
mov    %eax,%edx
mov    %eax,0x2c(%esp)
mov    0x34(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
call   8049c50 <fread_unlocked@plt>
test   %eax,%eax
je     804acaf <__sprintf_chk@plt+0xb6f>
add    %eax,%esi
cmp    %esi,%ebx
jne    804aa40 <__sprintf_chk@plt+0x900>
mov    0x30(%esp),%edx
test   %edx,%edx
je     804aa9c <__sprintf_chk@plt+0x95c>
cmp    $0xaaaaaaa9,%edi
ja     804b004 <__sprintf_chk@plt+0xec4>
lea    0x1(%edi),%eax
shr    %eax
add    %eax,%edi
lea    -0x1(%edi),%ebx
mov    0x30(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x38(%esp),%esi
mov    %eax,0x30(%esp)
jmp    804aa40 <__sprintf_chk@plt+0x900>
mov    0x8074324,%edi
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    0x28(%esp),%esi
repnz scas %es:(%edi),%al
mov    0x30(%esp),%eax
mov    %eax,(%esp)
not    %ecx
lea    -0x1(%esi,%ecx,1),%edi
lea    0x1(%edi),%ebx
mov    %ebx,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%edx
mov    %eax,0x30(%esp)
mov    0x8074324,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
mov    %edx,%esi
add    %edx,%eax
mov    %eax,(%esp)
call   8049c00 <strcpy@plt>
movb   $0xa,(%esi,%edi,1)
mov    %ebx,0x28(%esp)
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074268,%eax
movl   $0x4,0x10(%esp)
movl   $0x806da44,0xc(%esp)
movl   $0x806da50,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8074324,%eax
movl   $0x806c455,(%esp)
mov    %eax,0x4(%esp)
call   805bf20 <__sprintf_chk@plt+0x11de0>
mov    0x806da44(,%eax,4),%eax
cmp    $0x3,%eax
mov    %eax,0x8074230
mov    0x34(%esp),%eax
cmovne 0x24(%esp),%eax
mov    %eax,0x24(%esp)
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8074410
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8074428
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x0,0x807443c
00
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%eax
call   804cb70 <__sprintf_chk@plt+0x2a30>
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x80744a4
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x1,0x8074494
00
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    $0x806c1d8,%eax
call   804cb70 <__sprintf_chk@plt+0x2a30>
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0xffffffff,0x807440c
ff
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x0,0x8074408
00
movl   $0x1,0x20(%esp)
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    $0x806c4e7,%eax
call   804cb70 <__sprintf_chk@plt+0x2a30>
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    $0x806c1d2,%eax
call   804cb70 <__sprintf_chk@plt+0x2a30>
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    $0x806c1c8,%eax
call   804cb70 <__sprintf_chk@plt+0x2a30>
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%ebx
movl   $0x806c434,0x4(%esp)
mov    %ebx,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    804ad9e <__sprintf_chk@plt+0xc5e>
movl   $0x1,0x8074478
00
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%eax
lea    0x48(%esp),%edx
call   804cf70 <__sprintf_chk@plt+0x2e30>
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%eax
mov    $0x8074420,%edx
call   804cf70 <__sprintf_chk@plt+0x2e30>
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%eax
mov    $0x8074418,%edx
call   804cf70 <__sprintf_chk@plt+0x2e30>
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074324,%eax
mov    %eax,0x807425c
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x2,(%esp)
call   804fa00 <__sprintf_chk@plt+0x58c0>
movl   $0x1,0x807449c
00
jmp    804a290 <__sprintf_chk@plt+0x150>
call   8049e90 <__errno_location@plt>
mov    0x34(%esp),%edx
testb  $0x20,(%edx)
mov    (%eax),%eax
jne    804afbb <__sprintf_chk@plt+0xe7b>
mov    0x34(%esp),%eax
cmp    0x8074304,%eax
je     804acd7 <__sprintf_chk@plt+0xb97>
mov    %eax,(%esp)
call   8049a40 <fclose@plt>
cmp    0x28(%esp),%esi
je     804a290 <__sprintf_chk@plt+0x150>
mov    0x30(%esp),%eax
cmpb   $0xa,-0x1(%eax,%esi,1)
je     804afe2 <__sprintf_chk@plt+0xea2>
lea    0x1(%esi),%eax
mov    %eax,0x28(%esp)
mov    0x2c(%esp),%eax
movb   $0xa,(%eax)
jmp    804a290 <__sprintf_chk@plt+0x150>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %ebx,%edi
repnz scas %es:(%edi),%al
not    %ecx
mov    %ecx,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
xor    %ecx,%ecx
mov    %eax,0x34(%esp)
mov    %eax,%edx
mov    %ebx,%eax
call   804cac0 <__sprintf_chk@plt+0x2980>
mov    %eax,%esi
mov    $0x3ffffffe,%eax
sub    0x8(%ebp),%eax
cmp    %eax,%esi
ja     804b004 <__sprintf_chk@plt+0xec4>
mov    0x8(%ebp),%edx
add    %esi,%edx
lea    0x4(,%edx,4),%eax
mov    %eax,(%esp)
mov    %edx,0x38(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x38(%esp),%edx
mov    %edx,0x8(%ebp)
mov    %eax,%edi
lea    0x4(%eax),%eax
mov    %eax,%edx
mov    0x3c(%esp),%eax
mov    %edx,%ecx
mov    %edx,0x38(%esp)
mov    0x34(%esp),%edx
mov    (%eax),%eax
mov    %eax,(%edi)
mov    %ebx,%eax
call   804cac0 <__sprintf_chk@plt+0x2980>
mov    0x38(%esp),%edx
mov    0x3c(%esp),%ebx
lea    (%edx,%eax,4),%ecx
xor    %eax,%eax
mov    0x4(%ebx,%eax,1),%edx
mov    %edx,(%ecx,%eax,1)
add    $0x4,%eax
test   %edx,%edx
jne    804ad83 <__sprintf_chk@plt+0xc43>
mov    %esi,0x1c(%esp)
mov    %edi,0x3c(%esp)
jmp    804a267 <__sprintf_chk@plt+0x127>
movl   $0x806c439,0x4(%esp)
mov    %ebx,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    804adf8 <__sprintf_chk@plt+0xcb8>
movl   $0x2,0x8074478
00
jmp    804a290 <__sprintf_chk@plt+0x150>
mov    0x8074304,%edx
cmpb   $0x0,0x1(%eax)
mov    %edx,0x34(%esp)
je     804a9f9 <__sprintf_chk@plt+0x8b9>
jmp    804a9e5 <__sprintf_chk@plt+0x8a5>
cmpl   $0x0,0x807440c
je     804a4d5 <__sprintf_chk@plt+0x395>
jmp    804a4c1 <__sprintf_chk@plt+0x381>
movl   $0x0,(%esp)
call   804fa00 <__sprintf_chk@plt+0x58c0>
movl   $0x5,0x8(%esp)
movl   $0x806c43e,0x4(%esp)
jmp    804a979 <__sprintf_chk@plt+0x839>
movl   $0x0,0x807449c
00
jmp    804a290 <__sprintf_chk@plt+0x150>
movl   $0x5,0x8(%esp)
movl   $0x806d7a0,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x806c4d1,(%esp)
mov    %eax,%ebx
call   805f870 <__sprintf_chk@plt+0x15730>
movl   $0x0,0x18(%esp)
mov    %ebx,0x14(%esp)
movl   $0x806c4de,0xc(%esp)
movl   $0x806c4e3,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x8074b28,%eax
mov    %eax,0x4(%esp)
mov    0x8074320,%eax
mov    %eax,(%esp)
call   8064810 <__sprintf_chk@plt+0x1a6d0>
movl   $0x0,(%esp)
call   8049cf0 <exit@plt>
movl   $0x806c4ba,(%esp)
call   8049c70 <getenv@plt>
test   %eax,%eax
je     804aea7 <__sprintf_chk@plt+0xd67>
cmpb   $0x0,(%eax)
je     804aea7 <__sprintf_chk@plt+0xd67>
mov    %eax,0x8074254
mov    %eax,0x8074258
movl   $0x806c4c5,(%esp)
call   8049c70 <getenv@plt>
test   %eax,%eax
je     804a50c <__sprintf_chk@plt+0x3cc>
cmpb   $0x0,(%eax)
je     804a50c <__sprintf_chk@plt+0x3cc>
mov    %eax,(%esp)
call   8065270 <__sprintf_chk@plt+0x1b130>
movl   $0x0,0x38(%esp)
mov    %eax,%ebx
lea    0x1(%eax),%edi
movzbl -0x1(%edi),%eax
lea    -0x1(%edi),%edx
test   %al,%al
sete   0x34(%esp)
je     804aeed <__sprintf_chk@plt+0xdad>
cmp    $0x3a,%al
jne    804af4d <__sprintf_chk@plt+0xe0d>
movb   $0x0,-0x1(%edi)
mov    $0x806dde0,%esi
mov    $0x806c412,%eax
jmp    804af09 <__sprintf_chk@plt+0xdc9>
lea    0x0(%esi),%esi
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
je     804af19 <__sprintf_chk@plt+0xdd9>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    804af00 <__sprintf_chk@plt+0xdc0>
mov    0x4(%esi),%eax
test   %eax,%eax
je     804af2a <__sprintf_chk@plt+0xdea>
mov    0x38(%esp),%edx
test   %edx,%edx
je     804af2a <__sprintf_chk@plt+0xdea>
mov    %edx,(%eax)
mov    0x8(%esi),%eax
test   %eax,%eax
je     804af33 <__sprintf_chk@plt+0xdf3>
call   *%eax
cmpb   $0x0,0x34(%esp)
jne    804a50c <__sprintf_chk@plt+0x3cc>
mov    %edi,%ebx
movl   $0x0,0x38(%esp)
add    $0x1,%edi
jmp    804aed9 <__sprintf_chk@plt+0xd99>
cmp    $0x3d,%al
je     804af69 <__sprintf_chk@plt+0xe29>
cmpl   $0x0,0x38(%esp)
je     804af48 <__sprintf_chk@plt+0xe08>
lea    -0x30(%eax),%edx
cmp    $0x9,%dl
jbe    804af48 <__sprintf_chk@plt+0xe08>
cmp    $0x3b,%al
je     804af48 <__sprintf_chk@plt+0xe08>
jmp    804a50c <__sprintf_chk@plt+0x3cc>
cmp    %ebx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
je     804a50c <__sprintf_chk@plt+0x3cc>
cmpl   $0x0,0x38(%esp)
jne    804a50c <__sprintf_chk@plt+0x3cc>
movb   $0x0,-0x1(%edi)
mov    %edi,0x38(%esp)
jmp    804af48 <__sprintf_chk@plt+0xe08>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
mov    %eax,0x8074420
mov    %edx,0x8074424
jmp    804a4ff <__sprintf_chk@plt+0x3bf>
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
mov    %eax,0x8074418
mov    %edx,0x807441c
jmp    804a4f2 <__sprintf_chk@plt+0x3b2>
mov    0x8074324,%ecx
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x2,(%esp)
mov    %ecx,0xc(%esp)
call   8049c40 <error@plt>
jmp    804acc3 <__sprintf_chk@plt+0xb83>
mov    %esi,0x28(%esp)
jmp    804a290 <__sprintf_chk@plt+0x150>
subl   $0x1,0x28(%esp)
jmp    804a593 <__sprintf_chk@plt+0x453>
movl   $0x2,0x807449c
00
jmp    804a290 <__sprintf_chk@plt+0x150>
call   80652b0 <__sprintf_chk@plt+0x1b170>
movl   $0x1,(%esp)
call   804a060 <isatty@plt>
xor    %edx,%edx
test   %eax,%eax
jne    804b071 <__sprintf_chk@plt+0xf31>
mov    %edx,0x807449c
jmp    804a4a5 <__sprintf_chk@plt+0x365>
movl   $0x1,(%esp)
call   8049cf0 <exit@plt>
cmpl   $0x3,0x8074230
je     804b04c <__sprintf_chk@plt+0xf0c>
mov    $0x806c714,%eax
call   804f930 <__sprintf_chk@plt+0x57f0>
mov    %eax,%ebx
jmp    804a644 <__sprintf_chk@plt+0x504>
mov    0x24(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    804b03b <__sprintf_chk@plt+0xefb>
mov    $0x806edf2,%eax
movl   $0x2,0x8074484
00
call   804f930 <__sprintf_chk@plt+0x57f0>
mov    %eax,%ebx
jmp    804a644 <__sprintf_chk@plt+0x504>
call   80666c0 <__sprintf_chk@plt+0x1c580>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
jmp    804b01b <__sprintf_chk@plt+0xedb>
movl   $0x1,0x8074478
00
jmp    804a60b <__sprintf_chk@plt+0x4cb>
movl   $0x5,0x8(%esp)
movl   $0x806c47c,0x4(%esp)
jmp    804a979 <__sprintf_chk@plt+0x839>
mov    0x8074300,%edx
cmp    0x8(%ebp),%edx
jge    804ac94 <__sprintf_chk@plt+0xb54>
mov    0x3c(%esp),%eax
or     $0xffffffff,%ecx
mov    (%eax,%edx,4),%ebx
xor    %eax,%eax
add    $0x1,%edx
mov    %ebx,%edi
repnz scas %es:(%edi),%al
mov    %ebx,(%esp)
mov    %edx,0x8074300
not    %ecx
lea    -0x1(%ecx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,0x28(%esp)
call   8065230 <__sprintf_chk@plt+0x1b0f0>
mov    %eax,0x30(%esp)
jmp    804a593 <__sprintf_chk@plt+0x453>
call   805c810 <__sprintf_chk@plt+0x126d0>
mov    %eax,0x807448c
jmp    804a668 <__sprintf_chk@plt+0x528>
call   805c810 <__sprintf_chk@plt+0x126d0>
mov    %eax,0x8074490
jmp    804a6b6 <__sprintf_chk@plt+0x576>
mov    %edx,0x38(%esp)
call   805c810 <__sprintf_chk@plt+0x126d0>
mov    0x38(%esp),%edx
mov    %eax,0x8074490
jmp    804a727 <__sprintf_chk@plt+0x5e7>
call   8049e90 <__errno_location@plt>
mov    0x8074324,%ebx
movl   $0x806e484,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    (%eax),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   8049c40 <error@plt>
jmp    804aa04 <__sprintf_chk@plt+0x8c4>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x806c040
push   $0x806bfd0
push   %ecx
push   %esi
push   $0x804a150
call   8049db0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80742c3,%eax
sub    $0x80742c0,%eax
cmp    $0x6,%eax
ja     804b190 <__sprintf_chk@plt+0x1050>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804b18f <__sprintf_chk@plt+0x104f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80742c0,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80742c0,%eax
sub    $0x80742c0,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804b1c9 <__sprintf_chk@plt+0x1089>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804b1c8 <__sprintf_chk@plt+0x1088>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80742c0,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8074328
jne    804b20c <__sprintf_chk@plt+0x10cc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804b180 <__sprintf_chk@plt+0x1040>
movb   $0x1,0x8074328
leave
repz ret
xchg   %ax,%ax
mov    0x8073f00,%eax
test   %eax,%eax
je     804b238 <__sprintf_chk@plt+0x10f8>
mov    $0x0,%eax
test   %eax,%eax
je     804b238 <__sprintf_chk@plt+0x10f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8073f00,(%esp)
call   *%eax
leave
jmp    804b1b0 <__sprintf_chk@plt+0x1070>
nop
jmp    804b1b0 <__sprintf_chk@plt+0x1070>
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0xbe0cd,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b350 <__sprintf_chk@plt+0x1210>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x21bb1c,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b350 <__sprintf_chk@plt+0x1210>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x10b06,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b350 <__sprintf_chk@plt+0x1210>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0xc(%esp)
call   8049c40 <error@plt>
call   804a080 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x8074340,%eax
test   %eax,%eax
je     804b318 <__sprintf_chk@plt+0x11d8>
cmp    $0x2,%eax
je     804b335 <__sprintf_chk@plt+0x11f5>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
movl   $0x806c1dd,(%esp)
call   8049c70 <getenv@plt>
cmp    $0x1,%eax
sbb    %eax,%eax
not    %eax
add    $0x2,%eax
mov    %eax,0x8074340
jmp    804b30c <__sprintf_chk@plt+0x11cc>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804b2d0 <__sprintf_chk@plt+0x1190>
jmp    804b350 <__sprintf_chk@plt+0x1210>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x8075090,%edx
mov    0x50(%esp),%eax
mov    %eax,0x18(%esp)
mov    %eax,%esi
mov    0x54(%esp),%eax
mov    %eax,0x14(%esp)
mov    %eax,%ebx
mov    0x58(%esp),%eax
mov    %eax,%ecx
or     $0x400000,%eax
test   %edx,%edx
cmove  %ecx,%eax
mov    %eax,(%esp)
mov    %eax,%edi
mov    %eax,0x1c(%esp)
call   804a040 <re_set_syntax@plt>
movzbl 0x8075084,%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x8075090,%eax
mov    %eax,0x4(%esp)
call   8057730 <__sprintf_chk@plt+0xd5f0>
mov    0x8074348,%edi
jmp    804b4a0 <__sprintf_chk@plt+0x1360>
xchg   %ax,%ax
mov    %eax,%ecx
add    $0x1,%ebp
sub    %esi,%ecx
sub    %ecx,%ebx
sub    $0x1,%ebx
add    $0x1,%edi
mov    0x807434c,%eax
cmp    $0x5d1745d,%edi
ja     804b844 <__sprintf_chk@plt+0x1704>
imul   $0x2c,%edi,%edi
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
mov    %edi,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x10(%esp),%ecx
imul   $0x2c,0x8074348,%edx
mov    %eax,0x807434c
add    %eax,%edx
mov    0x8074360,%eax
mov    %eax,(%edx)
mov    0x8074364,%eax
mov    %eax,0x4(%edx)
mov    0x8074368,%eax
mov    %eax,0x8(%edx)
mov    0x807436c,%eax
mov    %eax,0xc(%edx)
mov    0x8074370,%eax
mov    %eax,0x10(%edx)
mov    0x8074374,%eax
mov    %eax,0x14(%edx)
mov    0x8074378,%eax
mov    %eax,0x18(%edx)
mov    0x807437c,%eax
mov    %eax,0x1c(%edx)
mov    0x8074380,%eax
mov    %eax,0x20(%edx)
mov    0x8074384,%eax
mov    %eax,0x24(%edx)
mov    0x8074388,%eax
mov    %eax,0x28(%edx)
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   804a000 <re_compile_pattern@plt>
test   %eax,%eax
je     804b488 <__sprintf_chk@plt+0x1348>
mov    %eax,0xc(%esp)
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049c40 <error@plt>
mov    0x8074348,%eax
test   %ebx,%ebx
lea    0x1(%eax),%edi
mov    %edi,0x8074348
je     804b4c8 <__sprintf_chk@plt+0x1388>
test   %ebp,%ebp
je     804b4c8 <__sprintf_chk@plt+0x1388>
mov    %ebp,%esi
mov    %ebx,0x8(%esp)
movl   $0xa,0x4(%esp)
mov    %esi,(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    804b3b8 <__sprintf_chk@plt+0x1278>
mov    %ebx,%ecx
xor    %ebx,%ebx
jmp    804b3c4 <__sprintf_chk@plt+0x1284>
nop
mov    0x8075088,%eax
test   %eax,%eax
jne    804b4df <__sprintf_chk@plt+0x139f>
mov    0x807508c,%ebp
test   %ebp,%ebp
je     804b5c0 <__sprintf_chk@plt+0x1480>
mov    0x14(%esp),%eax
mov    0x1c(%esp),%esi
add    $0x2d,%eax
mov    %eax,(%esp)
shr    $0xd,%esi
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x807508c,%edi
xor    $0x1,%esi
and    $0x1,%esi
test   %edi,%edi
mov    %eax,%ebx
je     804b560 <__sprintf_chk@plt+0x1420>
test   %esi,%esi
jne    804b7c5 <__sprintf_chk@plt+0x1685>
mov    $0x285e,%ecx
mov    0x14(%esp),%esi
mov    %cx,(%eax)
mov    0x18(%esp),%ecx
lea    0x2(%eax),%eax
movb   $0x0,(%eax)
mov    %eax,(%esp)
mov    %esi,0x8(%esp)
add    $0x2,%esi
mov    %ecx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    $0x806c217,%eax
lea    (%ebx,%esi,1),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049aa0 <stpcpy@plt>
add    %esi,%eax
mov    %ebx,%esi
mov    %eax,0x14(%esp)
sub    %edi,0x14(%esp)
jmp    804b5c6 <__sprintf_chk@plt+0x1486>
lea    0x0(%esi),%esi
test   %esi,%esi
je     804b7f4 <__sprintf_chk@plt+0x16b4>
mov    0x14(%esp),%esi
mov    $0x285c,%edx
mov    0x18(%esp),%ecx
lea    0x16(%eax),%eax
movl   $0x5c5e285c,-0x16(%eax)
movl   $0x5b5e5b7c,-0x12(%eax)
movl   $0x6e6c613a,-0xe(%eax)
movl   $0x5d3a6d75,-0xa(%eax)
movl   $0x295c5d5f,-0x6(%eax)
mov    %dx,-0x2(%eax)
movb   $0x0,(%eax)
mov    %esi,0x8(%esp)
add    $0x16,%esi
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80499f0 <memcpy@plt>
mov    $0x806c200,%eax
jmp    804b53d <__sprintf_chk@plt+0x13fd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ebx
xor    %esi,%esi
call   805b740 <__sprintf_chk@plt+0x11600>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
mov    %eax,0x807438c
mov    %eax,0x8(%esp)
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
call   805a750 <__sprintf_chk@plt+0x10610>
mov    0x807438c,%eax
mov    %eax,(%esp)
call   805b760 <__sprintf_chk@plt+0x11620>
test   %eax,%eax
mov    %eax,%ebx
je     804b751 <__sprintf_chk@plt+0x1611>
movl   $0x8074390,(%esp)
call   805b770 <__sprintf_chk@plt+0x11630>
jmp    804b61f <__sprintf_chk@plt+0x14df>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     804b691 <__sprintf_chk@plt+0x1551>
mov    (%ebx),%ecx
test   %ecx,%ecx
je     804b618 <__sprintf_chk@plt+0x14d8>
mov    0x4(%ebx),%edi
addl   $0x1,0x8074344
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
mov    0x8075090,%edx
movl   $0x0,0x2c(%esp)
test   %edx,%edx
mov    %eax,0x28(%esp)
jne    804b798 <__sprintf_chk@plt+0x1658>
mov    %eax,0x8(%esp)
mov    0x8074390,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80524b0 <__sprintf_chk@plt+0x8370>
test   %eax,%eax
je     804b618 <__sprintf_chk@plt+0x14d8>
mov    %eax,0xc(%esp)
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049c40 <error@plt>
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    804b61f <__sprintf_chk@plt+0x14df>
mov    0x807438c,%eax
mov    %eax,(%esp)
call   805b760 <__sprintf_chk@plt+0x11620>
test   %eax,%eax
mov    %eax,%ebx
jne    804b6af <__sprintf_chk@plt+0x156f>
jmp    804b720 <__sprintf_chk@plt+0x15e0>
xchg   %ax,%ax
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     804b720 <__sprintf_chk@plt+0x15e0>
mov    (%ebx),%eax
test   %eax,%eax
jne    804b6a8 <__sprintf_chk@plt+0x1568>
mov    0x4(%ebx),%edi
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
mov    0x8075090,%ebp
movl   $0x0,0x2c(%esp)
test   %ebp,%ebp
mov    %eax,0x28(%esp)
jne    804b768 <__sprintf_chk@plt+0x1628>
mov    %eax,0x8(%esp)
mov    0x8074390,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80524b0 <__sprintf_chk@plt+0x8370>
test   %eax,%eax
je     804b6a8 <__sprintf_chk@plt+0x1568>
mov    %eax,0xc(%esp)
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049c40 <error@plt>
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    804b6af <__sprintf_chk@plt+0x156f>
lea    0x0(%esi),%esi
mov    0x8074390,%eax
mov    %eax,(%esp)
call   8052b80 <__sprintf_chk@plt+0x8a40>
test   %eax,%eax
je     804b751 <__sprintf_chk@plt+0x1611>
mov    %eax,0xc(%esp)
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049c40 <error@plt>
mov    %esi,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80499d0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804b78c <__sprintf_chk@plt+0x164c>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   805b7e0 <__sprintf_chk@plt+0x116a0>
mov    %eax,%edi
mov    0x28(%esp),%eax
jmp    804b6da <__sprintf_chk@plt+0x159a>
lea    0x0(%esi),%esi
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804b7bc <__sprintf_chk@plt+0x167c>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   805b7e0 <__sprintf_chk@plt+0x116a0>
mov    %eax,%edi
mov    0x28(%esp),%eax
jmp    804b651 <__sprintf_chk@plt+0x1511>
mov    0x14(%esp),%esi
lea    0x3(%eax),%eax
mov    0x18(%esp),%ecx
movl   $0x285c5e,-0x3(%eax)
mov    %eax,(%esp)
mov    %esi,0x8(%esp)
add    $0x3,%esi
mov    %ecx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    $0x806c21a,%eax
jmp    804b53d <__sprintf_chk@plt+0x13fd>
mov    0x14(%esp),%esi
mov    0x18(%esp),%ecx
movl   $0x5b7c5e28,(%eax)
movl   $0x613a5b5e,0x4(%eax)
movl   $0x6d756e6c,0x8(%eax)
movl   $0x5d5f5d3a,0xc(%eax)
mov    $0x2829,%eax
mov    %ax,0x10(%ebx)
lea    0x12(%ebx),%eax
movb   $0x0,0x12(%ebx)
mov    %esi,0x8(%esp)
add    $0x12,%esi
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80499f0 <memcpy@plt>
mov    $0x806c1ed,%eax
jmp    804b53d <__sprintf_chk@plt+0x13fd>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
movzbl 0x8075084,%eax
mov    0x90(%esp),%edi
movl   $0x0,0x60(%esp)
mov    %al,0x4b(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804b889 <__sprintf_chk@plt+0x1749>
mov    0x8075090,%ecx
test   %ecx,%ecx
jne    804bd98 <__sprintf_chk@plt+0x1c58>
mov    0x94(%esp),%eax
mov    %edi,0x58(%esp)
add    %edi,%eax
cmp    %eax,%edi
mov    %eax,0x44(%esp)
jae    804ba40 <__sprintf_chk@plt+0x1900>
movsbl 0x4b(%esp),%eax
mov    %edi,%ebx
mov    %edi,0x90(%esp)
mov    %eax,0x4c(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x9c(%esp),%eax
test   %eax,%eax
mov    %eax,0x30(%esp)
je     804bc52 <__sprintf_chk@plt+0x1b12>
mov    0x8074348,%eax
test   %eax,%eax
je     804ba2e <__sprintf_chk@plt+0x18ee>
mov    0x34(%esp),%edx
xor    %ebp,%ebp
mov    0x30(%esp),%edi
movl   $0x0,0x2c(%esp)
mov    %edx,%eax
sub    %edi,%eax
mov    %eax,0x38(%esp)
lea    -0x1(%eax),%eax
mov    %eax,0x20(%esp)
mov    %edi,%eax
sub    0x90(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    %edx,%eax
sub    0x90(%esp),%eax
sub    $0x1,%eax
mov    %eax,0x24(%esp)
mov    %edx,%eax
sub    $0x1,%eax
mov    %eax,0x40(%esp)
jmp    804b967 <__sprintf_chk@plt+0x1827>
lea    0x0(%esi,%eiz,1),%esi
mov    0x807508c,%eax
test   %eax,%eax
je     804ba60 <__sprintf_chk@plt+0x1920>
cmp    0x20(%esp),%ecx
je     804ba6d <__sprintf_chk@plt+0x192d>
mov    0x8075088,%edx
test   %edx,%edx
jne    804bb10 <__sprintf_chk@plt+0x19d0>
lea    0x0(%esi),%esi
add    $0x1,%ebp
cmp    %ebp,0x8074348
jbe    804ba20 <__sprintf_chk@plt+0x18e0>
imul   $0x2c,%ebp,%esi
mov    0x807434c,%eax
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
add    %esi,%eax
lea    0x20(%eax),%edx
andb   $0xbf,0x1c(%eax)
mov    %edx,0x14(%esp)
mov    0x28(%esp),%edx
mov    %ecx,0x10(%esp)
mov    0x90(%esp),%ecx
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x4(%esp)
call   8049dd0 <re_search@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jl     804bead <__sprintf_chk@plt+0x1d6d>
je     804b958 <__sprintf_chk@plt+0x1818>
mov    0x807434c,%eax
mov    0x90(%esp),%edi
mov    0x28(%eax,%esi,1),%eax
add    %ebx,%edi
cmp    0x1c(%esp),%edi
mov    (%eax),%eax
ja     804b958 <__sprintf_chk@plt+0x1818>
sub    %ebx,%eax
mov    %eax,%ecx
mov    0x9c(%esp),%eax
test   %eax,%eax
je     804b930 <__sprintf_chk@plt+0x17f0>
mov    0x8075088,%eax
test   %eax,%eax
jne    804b930 <__sprintf_chk@plt+0x17f0>
cmp    %edi,0x1c(%esp)
ja     804ba50 <__sprintf_chk@plt+0x1910>
cmp    %ecx,0x2c(%esp)
jae    804b958 <__sprintf_chk@plt+0x1818>
cmp    0x1c(%esp),%edi
cmovne 0x2c(%esp),%ecx
add    $0x1,%ebp
cmp    %ebp,0x8074348
mov    %ecx,0x2c(%esp)
ja     804b967 <__sprintf_chk@plt+0x1827>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
cmp    %eax,0x34(%esp)
ja     804bddc <__sprintf_chk@plt+0x1c9c>
mov    0x44(%esp),%eax
cmp    %eax,0x34(%esp)
mov    0x34(%esp),%ebx
jb     804b8b8 <__sprintf_chk@plt+0x1778>
add    $0x7c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x2c(%esp)
mov    %edi,0x1c(%esp)
jmp    804b958 <__sprintf_chk@plt+0x1818>
lea    0x0(%esi),%esi
mov    0x8075088,%eax
test   %eax,%eax
jne    804bb10 <__sprintf_chk@plt+0x19d0>
mov    0x38(%esp),%ecx
mov    0x30(%esp),%edi
mov    0x9c(%esp),%eax
test   %eax,%eax
jne    804b9ee <__sprintf_chk@plt+0x18ae>
mov    0x38(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
mov    0x60(%esp),%edi
mov    %eax,%ebp
test   %edi,%edi
je     804baf3 <__sprintf_chk@plt+0x19b3>
test   %eax,%eax
je     804beb5 <__sprintf_chk@plt+0x1d75>
xor    %eax,%eax
xor    %edx,%edx
xor    %esi,%esi
movsbl (%edi,%esi,1),%ecx
mov    %ecx,%ebx
sar    $0x1f,%ebx
add    %ecx,%eax
adc    %ebx,%edx
add    $0x1,%esi
cmp    %esi,%ebp
jne    804baa8 <__sprintf_chk@plt+0x1968>
mov    %eax,%ebp
mov    0x28(%esp),%esi
mov    0x2c(%esp),%eax
add    %esi,%eax
cmp    %esi,%eax
jbe    804be9d <__sprintf_chk@plt+0x1d5d>
add    %edi,%esi
xor    %edx,%edx
add    %eax,%edi
xor    %eax,%eax
movsbl (%esi),%ecx
mov    %ecx,%ebx
sar    $0x1f,%ebx
add    %ecx,%eax
adc    %ebx,%edx
add    $0x1,%esi
cmp    %edi,%esi
jne    804bad8 <__sprintf_chk@plt+0x1998>
add    %eax,0x2c(%esp)
add    0x28(%esp),%ebp
mov    0x98(%esp),%eax
mov    0x2c(%esp),%esi
mov    %esi,(%eax)
add    $0x7c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x3c(%esp)
mov    %ecx,%esi
cmp    0x90(%esp),%edi
je     804bb38 <__sprintf_chk@plt+0x19f8>
call   804a120 <__ctype_b_loc@plt>
movzbl -0x1(%edi),%edx
movzbl %dl,%ecx
mov    (%eax),%eax
testb  $0x8,(%eax,%ecx,2)
jne    804bb62 <__sprintf_chk@plt+0x1a22>
cmp    $0x5f,%dl
je     804bb62 <__sprintf_chk@plt+0x1a22>
lea    (%ebx,%esi,1),%eax
cmp    0x24(%esp),%eax
je     804bdee <__sprintf_chk@plt+0x1cae>
call   804a120 <__ctype_b_loc@plt>
movzbl (%edi,%esi,1),%edx
movzbl %dl,%ecx
mov    (%eax),%eax
testb  $0x8,(%eax,%ecx,2)
jne    804bb62 <__sprintf_chk@plt+0x1a22>
cmp    $0x5f,%dl
jne    804bdee <__sprintf_chk@plt+0x1cae>
test   %esi,%esi
jne    804bbf8 <__sprintf_chk@plt+0x1ab8>
cmp    0x40(%esp),%edi
xchg   %ax,%ax
je     804b958 <__sprintf_chk@plt+0x1818>
mov    0x3c(%esp),%eax
add    $0x1,%edi
add    0x807434c,%eax
mov    0x24(%esp),%esi
lea    0x20(%eax),%edx
andb   $0xbf,0x1c(%eax)
mov    %edx,0x14(%esp)
mov    0x34(%esp),%edx
mov    %esi,0x8(%esp)
mov    0x90(%esp),%esi
mov    %eax,(%esp)
sub    %edi,%edx
sub    0x90(%esp),%edi
sub    $0x1,%edx
mov    %edx,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0xc(%esp)
call   8049dd0 <re_search@plt>
test   %eax,%eax
mov    %eax,%ebx
js     804bea4 <__sprintf_chk@plt+0x1d64>
mov    0x3c(%esp),%esi
mov    0x807434c,%eax
mov    0x90(%esp),%edi
mov    0x28(%eax,%esi,1),%eax
add    %ebx,%edi
mov    (%eax),%esi
sub    %ebx,%esi
cmp    0x1c(%esp),%edi
ja     804b958 <__sprintf_chk@plt+0x1818>
jmp    804bb16 <__sprintf_chk@plt+0x19d6>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
add    0x807434c,%eax
lea    0x20(%eax),%edx
orb    $0x40,0x1c(%eax)
mov    %edx,0x10(%esp)
mov    %edi,%edx
sub    0x90(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
lea    -0x1(%edi,%esi,1),%edx
mov    0x90(%esp),%esi
sub    0x30(%esp),%edx
mov    %esi,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049ca0 <re_match@plt>
cmp    $0xffffffff,%eax
jl     804bead <__sprintf_chk@plt+0x1d6d>
test   %eax,%eax
jle    804bb6a <__sprintf_chk@plt+0x1a2a>
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
jmp    804bbe5 <__sprintf_chk@plt+0x1aa5>
mov    0x8074390,%eax
test   %eax,%eax
je     804bdf5 <__sprintf_chk@plt+0x1cb5>
mov    0x44(%esp),%esi
lea    0x64(%esp),%edx
mov    %edx,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,%edx
sub    %ebx,%edx
mov    %edx,0x8(%esp)
call   8053070 <__sprintf_chk@plt+0x8f30>
cmp    $0xffffffff,%eax
je     804ba40 <__sprintf_chk@plt+0x1900>
add    %eax,%ebx
mov    %esi,%eax
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmove  %esi,%edx
cmp    %ebx,0x90(%esp)
mov    %edx,0x34(%esp)
jae    804bec5 <__sprintf_chk@plt+0x1d85>
movzbl 0x4b(%esp),%ecx
cmp    %cl,-0x1(%ebx)
je     804bec5 <__sprintf_chk@plt+0x1d85>
mov    %ebx,%eax
mov    0x90(%esp),%edx
jmp    804bcdd <__sprintf_chk@plt+0x1b9d>
lea    0x0(%esi,%eiz,1),%esi
cmp    %cl,-0x1(%eax)
je     804bce4 <__sprintf_chk@plt+0x1ba4>
sub    $0x1,%eax
cmp    %edx,%eax
jne    804bcd8 <__sprintf_chk@plt+0x1b98>
mov    %eax,0x30(%esp)
mov    0x8074344,%eax
cmp    %eax,0x64(%esp)
jae    804bd2f <__sprintf_chk@plt+0x1bef>
mov    0x30(%esp),%eax
cmp    %eax,0x58(%esp)
jae    804bd01 <__sprintf_chk@plt+0x1bc1>
mov    %eax,0x58(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     804bd78 <__sprintf_chk@plt+0x1c38>
mov    0x6c(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   805bae0 <__sprintf_chk@plt+0x119a0>
test   %al,%al
je     804bd78 <__sprintf_chk@plt+0x1c38>
lea    0x5c(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x807438c,%eax
mov    %eax,(%esp)
call   805a120 <__sprintf_chk@plt+0xffe0>
test   %eax,%eax
je     804ba2e <__sprintf_chk@plt+0x18ee>
mov    0x5c(%esp),%eax
test   %eax,%eax
jne    804b8cf <__sprintf_chk@plt+0x178f>
mov    0x30(%esp),%eax
mov    0x90(%esp),%edi
mov    0x34(%esp),%esi
sub    %eax,%esi
sub    %edi,%eax
mov    %esi,0x38(%esp)
mov    %eax,0x28(%esp)
jmp    804ba84 <__sprintf_chk@plt+0x1944>
lea    0x60(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   805b7e0 <__sprintf_chk@plt+0x116a0>
mov    0x9c(%esp),%edx
test   %edx,%edx
je     804bebc <__sprintf_chk@plt+0x1d7c>
mov    0x9c(%esp),%edx
sub    %edi,%edx
mov    %eax,%edi
lea    (%eax,%edx,1),%esi
mov    %esi,0x9c(%esp)
jmp    804b889 <__sprintf_chk@plt+0x1749>
mov    0x90(%esp),%edi
sub    %edi,%eax
mov    %eax,0x28(%esp)
jmp    804ba90 <__sprintf_chk@plt+0x1950>
mov    %esi,%ecx
jmp    804ba75 <__sprintf_chk@plt+0x1935>
lea    0x5c(%esp),%eax
mov    0x44(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x807438c,%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805a120 <__sprintf_chk@plt+0xffe0>
cmp    %edi,%eax
mov    %eax,0x30(%esp)
je     804ba40 <__sprintf_chk@plt+0x1900>
test   %eax,%eax
je     804ba40 <__sprintf_chk@plt+0x1900>
mov    %edi,%edx
mov    %eax,%esi
sub    %eax,%edx
mov    0x4c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
mov    %esi,%eax
cmove  %edi,%edx
cmp    %esi,0x90(%esp)
mov    %edx,0x34(%esp)
jae    804bd6c <__sprintf_chk@plt+0x1c2c>
movzbl 0x4b(%esp),%ecx
cmp    %cl,-0x1(%esi)
je     804bd6c <__sprintf_chk@plt+0x1c2c>
mov    %ecx,%edx
mov    0x90(%esp),%ecx
jmp    804be8d <__sprintf_chk@plt+0x1d4d>
cmp    %dl,-0x1(%eax)
je     804be94 <__sprintf_chk@plt+0x1d54>
sub    $0x1,%eax
cmp    %ecx,%eax
jne    804be88 <__sprintf_chk@plt+0x1d48>
mov    %eax,0x30(%esp)
jmp    804bd6c <__sprintf_chk@plt+0x1c2c>
xor    %eax,%eax
jmp    804baeb <__sprintf_chk@plt+0x19ab>
cmp    $0xffffffff,%eax
je     804b958 <__sprintf_chk@plt+0x1818>
lea    0x0(%esi),%esi
call   80652b0 <__sprintf_chk@plt+0x1b170>
xor    %ebp,%ebp
jmp    804babe <__sprintf_chk@plt+0x197e>
mov    %eax,%edi
xchg   %ax,%ax
jmp    804b889 <__sprintf_chk@plt+0x1749>
mov    %ebx,0x30(%esp)
jmp    804bce8 <__sprintf_chk@plt+0x1ba8>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%esi
movl   $0x0,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x8075090,%eax
test   %eax,%eax
jne    804bfce <__sprintf_chk@plt+0x1e8e>
movl   $0x8074394,(%esp)
call   805b770 <__sprintf_chk@plt+0x11630>
mov    0x18(%esp),%edx
mov    %esi,%ecx
add    %esi,%edx
cmp    %edx,%ecx
jae    804bf7c <__sprintf_chk@plt+0x1e3c>
xchg   %ax,%ax
cmpb   $0xa,(%ecx)
mov    %ecx,%ebx
jne    804bf25 <__sprintf_chk@plt+0x1de5>
jmp    804bfc8 <__sprintf_chk@plt+0x1e88>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0xa,(%ebx)
je     804bf88 <__sprintf_chk@plt+0x1e48>
add    $0x1,%ebx
cmp    %edx,%ebx
jne    804bf20 <__sprintf_chk@plt+0x1de0>
mov    %ebx,%eax
sub    %ecx,%eax
mov    %eax,0x8(%esp)
mov    0x8074394,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80524b0 <__sprintf_chk@plt+0x8370>
test   %eax,%eax
je     804bf69 <__sprintf_chk@plt+0x1e29>
mov    %eax,0xc(%esp)
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049c40 <error@plt>
mov    0x18(%esp),%edx
lea    (%esi,%edx,1),%eax
cmp    %eax,%ebx
jae    804bf91 <__sprintf_chk@plt+0x1e51>
mov    %ebx,%ecx
add    %esi,%edx
cmp    %edx,%ecx
jb     804bf10 <__sprintf_chk@plt+0x1dd0>
mov    %ecx,%ebx
xor    %eax,%eax
jmp    804bf30 <__sprintf_chk@plt+0x1df0>
lea    0x0(%esi),%esi
mov    %ebx,%eax
sub    %ecx,%eax
add    $0x1,%ebx
jmp    804bf30 <__sprintf_chk@plt+0x1df0>
mov    0x8074394,%eax
mov    %eax,(%esp)
call   8052b80 <__sprintf_chk@plt+0x8a40>
test   %eax,%eax
je     804bfc2 <__sprintf_chk@plt+0x1e82>
mov    %eax,0xc(%esp)
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049c40 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    %ecx,%ebx
xor    %eax,%eax
jmp    804bf8c <__sprintf_chk@plt+0x1e4c>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804bef6 <__sprintf_chk@plt+0x1db6>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   805b7e0 <__sprintf_chk@plt+0x116a0>
mov    %eax,%esi
jmp    804bef6 <__sprintf_chk@plt+0x1db6>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%eax
movl   $0x0,0x34(%esp)
mov    %eax,0x1c(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x24(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
movzbl 0x8075084,%eax
mov    %al,0x2b(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804c056 <__sprintf_chk@plt+0x1f16>
mov    0x8075090,%ebp
test   %ebp,%ebp
jne    804c378 <__sprintf_chk@plt+0x2238>
mov    0x24(%esp),%esi
mov    0x1c(%esp),%edi
test   %esi,%esi
cmove  0x1c(%esp),%esi
add    0x74(%esp),%edi
mov    %esi,0x30(%esp)
cmp    %edi,%esi
ja     804c120 <__sprintf_chk@plt+0x1fe0>
lea    0x38(%esp),%eax
sub    %esi,%edi
mov    %eax,0xc(%esp)
mov    0x8074394,%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8053070 <__sprintf_chk@plt+0x8f30>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     804c120 <__sprintf_chk@plt+0x1fe0>
mov    0x40(%esp),%ebp
lea    (%esi,%edi,1),%ebx
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    804c0d8 <__sprintf_chk@plt+0x1f98>
mov    0x1c(%esp),%eax
add    0x74(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   805bae0 <__sprintf_chk@plt+0x119a0>
test   %al,%al
jne    804c308 <__sprintf_chk@plt+0x21c8>
mov    0x24(%esp),%edi
test   %edi,%edi
je     804c0ee <__sprintf_chk@plt+0x1fae>
mov    0x8075088,%esi
test   %esi,%esi
je     804c1a0 <__sprintf_chk@plt+0x2060>
mov    0x807508c,%ecx
test   %ecx,%ecx
je     804c248 <__sprintf_chk@plt+0x2108>
cmp    %ebx,0x1c(%esp)
jae    804c130 <__sprintf_chk@plt+0x1ff0>
movzbl 0x2b(%esp),%eax
cmp    %al,-0x1(%ebx)
je     804c130 <__sprintf_chk@plt+0x1ff0>
mov    0x1c(%esp),%edi
add    0x74(%esp),%edi
lea    0x1(%ebx),%esi
cmp    %edi,%esi
jbe    804c075 <__sprintf_chk@plt+0x1f35>
nop
mov    $0xffffffff,%eax
jmp    804c22b <__sprintf_chk@plt+0x20eb>
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
lea    (%ebx,%ebp,1),%eax
mov    0x1c(%esp),%ecx
lea    (%ecx,%edx,1),%edi
cmp    %edi,%eax
jae    804c14b <__sprintf_chk@plt+0x200b>
movzbl 0x2b(%esp),%ecx
cmp    %cl,(%eax)
jne    804c114 <__sprintf_chk@plt+0x1fd4>
mov    %edx,%esi
mov    0x1c(%esp),%edi
mov    %esi,%ecx
sub    %ebp,%ecx
mov    %eax,(%esp)
mov    %edi,%edx
sub    %ebx,%edx
add    %ecx,%edx
mov    %edx,0x8(%esp)
movsbl 0x2b(%esp),%edx
lea    (%edi,%esi,1),%ebp
mov    %edx,0x4(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmove  %ebp,%edx
cmp    %ebx,%edi
jae    804c19c <__sprintf_chk@plt+0x205c>
movzbl 0x2b(%esp),%ecx
cmp    %cl,-0x1(%ebx)
je     804c19c <__sprintf_chk@plt+0x205c>
mov    %edi,%eax
jmp    804c195 <__sprintf_chk@plt+0x2055>
lea    0x0(%esi),%esi
cmp    %cl,-0x1(%ebx)
je     804c19c <__sprintf_chk@plt+0x205c>
sub    $0x1,%ebx
cmp    %eax,%ebx
jne    804c190 <__sprintf_chk@plt+0x2050>
sub    %ebx,%edx
mov    %edx,%ebp
mov    0x34(%esp),%ecx
mov    %ebx,%eax
sub    0x1c(%esp),%eax
test   %ecx,%ecx
mov    %ecx,%edi
mov    %ecx,0x1c(%esp)
je     804c225 <__sprintf_chk@plt+0x20e5>
test   %eax,%eax
je     804c3ae <__sprintf_chk@plt+0x226e>
mov    %ebp,0x20(%esp)
xor    %ecx,%ecx
xor    %ebx,%ebx
xor    %edx,%edx
mov    %edi,%ebp
movsbl 0x0(%ebp,%edx,1),%esi
mov    %esi,%edi
sar    $0x1f,%edi
add    %esi,%ecx
adc    %edi,%ebx
add    $0x1,%edx
cmp    %edx,%eax
jne    804c1c8 <__sprintf_chk@plt+0x2088>
mov    0x20(%esp),%ebp
mov    %ecx,0x20(%esp)
lea    (%eax,%ebp,1),%ecx
cmp    %ecx,%eax
jae    804c3bb <__sprintf_chk@plt+0x227b>
mov    0x1c(%esp),%ebx
mov    %ebp,0x1c(%esp)
add    %ebx,%ecx
mov    %ecx,%edi
xor    %ecx,%ecx
lea    (%ebx,%eax,1),%edx
mov    %edi,%ebp
xor    %ebx,%ebx
lea    0x0(%esi),%esi
movsbl (%edx),%esi
mov    %esi,%edi
sar    $0x1f,%edi
add    %esi,%ecx
adc    %edi,%ebx
add    $0x1,%edx
cmp    %ebp,%edx
jne    804c208 <__sprintf_chk@plt+0x20c8>
mov    0x1c(%esp),%ebp
add    0x20(%esp),%eax
add    %ecx,%ebp
mov    0x2c(%esp),%ecx
mov    %ebp,(%ecx)
mov    0x4c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804c3db <__sprintf_chk@plt+0x229b>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8075088,%edx
test   %edx,%edx
je     804c3cf <__sprintf_chk@plt+0x228f>
mov    %ebx,%esi
jmp    804c2b0 <__sprintf_chk@plt+0x2170>
lea    0x0(%esi),%esi
call   804a120 <__ctype_b_loc@plt>
movzbl (%esi),%edx
movzbl %dl,%esi
mov    (%eax),%eax
testb  $0x8,(%eax,%esi,2)
jne    804c278 <__sprintf_chk@plt+0x2138>
cmp    $0x5f,%dl
jne    804c2ef <__sprintf_chk@plt+0x21af>
test   %ebp,%ebp
je     804c368 <__sprintf_chk@plt+0x2228>
lea    0x38(%esp),%eax
sub    $0x1,%ebp
mov    %eax,0xc(%esp)
mov    0x8074394,%eax
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053070 <__sprintf_chk@plt+0x8f30>
cmp    $0xffffffff,%eax
je     804c10c <__sprintf_chk@plt+0x1fcc>
mov    0x40(%esp),%ebp
lea    (%ebx,%eax,1),%esi
cmp    0x1c(%esp),%esi
jbe    804c2d7 <__sprintf_chk@plt+0x2197>
call   804a120 <__ctype_b_loc@plt>
movzbl -0x1(%esi),%edx
movzbl %dl,%ecx
mov    (%eax),%eax
testb  $0x8,(%eax,%ecx,2)
jne    804c10c <__sprintf_chk@plt+0x1fcc>
cmp    $0x5f,%dl
je     804c10c <__sprintf_chk@plt+0x1fcc>
mov    0x74(%esp),%edi
add    %ebp,%esi
mov    0x1c(%esp),%eax
add    %edi,%eax
cmp    %eax,%esi
mov    %eax,0x20(%esp)
jb     804c260 <__sprintf_chk@plt+0x2120>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    804c1a0 <__sprintf_chk@plt+0x2060>
lea    (%ebx,%ebp,1),%eax
mov    %edi,%esi
jmp    804c14d <__sprintf_chk@plt+0x200d>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%ebp
lea    0x44(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x44(%esp)
mov    %ebp,%eax
sub    %esi,%eax
sub    %edi,%eax
add    0x74(%esp),%eax
movl   $0x0,0x48(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8049c20 <mbrtowc@plt>
lea    0x2(%eax),%edx
cmp    $0x1,%edx
jbe    804c120 <__sprintf_chk@plt+0x1fe0>
mov    0x30(%esp),%edx
mov    0x74(%esp),%edi
lea    -0x1(%edx,%eax,1),%ebx
add    %ebp,%edi
jmp    804c114 <__sprintf_chk@plt+0x1fd4>
lea    0x0(%esi),%esi
mov    0x20(%esp),%edi
jmp    804c114 <__sprintf_chk@plt+0x1fd4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%ebx
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   805b7e0 <__sprintf_chk@plt+0x116a0>
mov    0x24(%esp),%edx
test   %edx,%edx
je     804c3c2 <__sprintf_chk@plt+0x2282>
sub    %ebx,%edx
lea    (%eax,%edx,1),%ecx
mov    %ecx,0x24(%esp)
mov    %eax,0x1c(%esp)
jmp    804c056 <__sprintf_chk@plt+0x1f16>
movl   $0x0,0x20(%esp)
jmp    804c1e5 <__sprintf_chk@plt+0x20a5>
xor    %ecx,%ecx
jmp    804c21f <__sprintf_chk@plt+0x20df>
mov    %eax,0x1c(%esp)
mov    %eax,%esi
mov    %eax,%edi
jmp    804c065 <__sprintf_chk@plt+0x1f25>
mov    0x74(%esp),%esi
lea    (%ebx,%ebp,1),%eax
jmp    804c14d <__sprintf_chk@plt+0x200d>
call   8049ac0 <__stack_chk_fail@plt>
push   %ebp
xor    %edx,%edx
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x64(%esp),%ebx
mov    %eax,0x18(%esp)
mov    $0xffffffff,%eax
lea    0x7(%ebx),%ecx
div    %ecx
cmp    $0x3,%eax
jbe    804c7ac <__sprintf_chk@plt+0x266c>
shl    $0x2,%ecx
mov    $0x806c21e,%edi
mov    %ecx,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
cmpl   $0x1,0x8075090
movl   $0xe,(%esp)
sbb    %ebp,%ebp
add    $0x803,%ebp
cmpl   $0x1,0x8075090
mov    %eax,0x20(%esp)
sbb    %eax,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
addl   $0x3,0x24(%esp)
lea    (%eax,%ebx,1),%ecx
mov    %ecx,0x1c(%esp)
call   8049f30 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
mov    0x18(%esp),%eax
repz cmpsb %es:(%edi),%ds:(%esi)
mov    %ebx,0x8(%esp)
movl   $0xa,0x4(%esp)
cmovne 0x24(%esp),%ebp
mov    %eax,(%esp)
mov    %ebp,0x24(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
je     804c4b6 <__sprintf_chk@plt+0x2376>
movl   $0x5,0x8(%esp)
movl   $0x806c250,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x20(%esp),%eax
movb   $0x0,(%eax)
mov    0x807508c,%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
jne    804c718 <__sprintf_chk@plt+0x25d8>
mov    0x8075088,%eax
test   %eax,%eax
mov    %eax,0x2c(%esp)
jne    804c708 <__sprintf_chk@plt+0x25c8>
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
lea    (%esi,%eax,1),%ebx
mov    0x18(%esp),%esi
jmp    804c509 <__sprintf_chk@plt+0x23c9>
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%ebx
movl   $0x3030305c,(%ebx)
lea    0x1(%ebp),%esi
add    $0x4,%ebx
movb   $0x0,(%ebx)
mov    0x1c(%esp),%edi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
sub    %esi,%edi
mov    %edi,0x8(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804c570 <__sprintf_chk@plt+0x2430>
mov    %ebp,%edi
sub    %esi,%edi
mov    %ebx,(%esp)
add    %edi,%ebx
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
call   80499f0 <memcpy@plt>
xor    %eax,%eax
cmp    %ebp,0x18(%esp)
jae    804c4f8 <__sprintf_chk@plt+0x23b8>
cmpb   $0x5c,-0x1(%ebp)
jne    804c4f8 <__sprintf_chk@plt+0x23b8>
mov    %ebp,%eax
sub    $0x1,%eax
cmp    0x18(%esp),%eax
je     804c730 <__sprintf_chk@plt+0x25f0>
cmpb   $0x5c,-0x1(%eax)
je     804c54f <__sprintf_chk@plt+0x240f>
mov    %ebp,%edx
sub    %eax,%edx
mov    %edx,%eax
and    $0x1,%eax
neg    %eax
jmp    804c4f8 <__sprintf_chk@plt+0x23b8>
nop
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
add    %edi,%ebx
mov    %edi,0x8(%esp)
call   80499f0 <memcpy@plt>
mov    0x2c(%esp),%esi
movb   $0x0,(%ebx)
test   %esi,%esi
jne    804c6f8 <__sprintf_chk@plt+0x25b8>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
jne    804c6e0 <__sprintf_chk@plt+0x25a0>
call   8049990 <pcre_maketables@plt>
lea    0x38(%esp),%ebx
lea    0x3c(%esp),%esi
mov    %ebx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049e20 <pcre_compile@plt>
test   %eax,%eax
mov    %eax,0x80743a0
je     804c740 <__sprintf_chk@plt+0x2600>
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049f60 <pcre_study@plt>
mov    0x3c(%esp),%edx
test   %edx,%edx
mov    %eax,0x807439c
je     804c61d <__sprintf_chk@plt+0x24dd>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049c40 <error@plt>
mov    0x807439c,%eax
mov    %eax,0x4(%esp)
mov    0x80743a0,%eax
mov    %ebx,0xc(%esp)
movl   $0x10,0x8(%esp)
mov    %eax,(%esp)
call   8049cb0 <pcre_fullinfo@plt>
test   %eax,%eax
jne    804c6a0 <__sprintf_chk@plt+0x2560>
mov    0x38(%esp),%eax
test   %eax,%eax
jne    804c660 <__sprintf_chk@plt+0x2520>
mov    0x20(%esp),%eax
mov    %eax,0x60(%esp)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80499d0 <free@plt>
lea    0x0(%esi),%esi
movl   $0x80000,0x4(%esp)
movl   $0x8000,(%esp)
call   8049e40 <pcre_jit_stack_alloc@plt>
test   %eax,%eax
mov    %eax,0x8074398
je     804c76e <__sprintf_chk@plt+0x262e>
mov    %eax,0x8(%esp)
mov    0x807439c,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804a0c0 <pcre_assign_jit_stack@plt>
jmp    804c646 <__sprintf_chk@plt+0x2506>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806c280,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
jmp    804c63e <__sprintf_chk@plt+0x24fe>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x2429,%edx
mov    %dx,(%ebx)
movb   $0x0,0x2(%ebx)
jmp    804c59d <__sprintf_chk@plt+0x245d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x625c29,(%ebx)
jmp    804c591 <__sprintf_chk@plt+0x2451>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movl   $0x28625c,(%eax)
jmp    804c4df <__sprintf_chk@plt+0x239f>
nop
mov    0x20(%esp),%eax
mov    $0x285e,%edi
mov    %di,(%eax)
movb   $0x0,0x2(%eax)
jmp    804c4ce <__sprintf_chk@plt+0x238e>
lea    0x0(%esi),%esi
mov    %ebp,%eax
sub    0x18(%esp),%eax
and    $0x1,%eax
neg    %eax
jmp    804c4f8 <__sprintf_chk@plt+0x23b8>
mov    0x3c(%esp),%eax
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0xc(%esp)
call   8049c40 <error@plt>
mov    0x80743a0,%eax
jmp    804c5d7 <__sprintf_chk@plt+0x2497>
movl   $0x5,0x8(%esp)
movl   $0x806c2a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x8074398,%eax
jmp    804c681 <__sprintf_chk@plt+0x2541>
call   80652b0 <__sprintf_chk@plt+0x1b170>
jmp    804c7c0 <__sprintf_chk@plt+0x2680>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x4ec,%esp
mov    0x50c(%esp),%ebx
mov    0x50c(%esp),%eax
sub    0x500(%esp),%eax
mov    0x500(%esp),%edi
test   %ebx,%ebx
mov    0x500(%esp),%ebx
cmovne %eax,%esi
add    0x504(%esp),%edi
cmp    %edi,%ebx
jae    804c846 <__sprintf_chk@plt+0x2706>
nop
mov    %edi,%eax
sub    %ebx,%eax
mov    %eax,0x8(%esp)
movzbl 0x8075084,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
je     804c8f8 <__sprintf_chk@plt+0x27b8>
lea    0x1(%eax),%ebp
mov    %ebp,%edx
cmp    %eax,0x50c(%esp)
jb     804c858 <__sprintf_chk@plt+0x2718>
mov    0x50c(%esp),%ecx
test   %ecx,%ecx
je     804c858 <__sprintf_chk@plt+0x2718>
sub    %edx,%ebx
add    %ebx,%esi
mov    %ebp,%ebx
cmp    %edi,%ebx
jb     804c800 <__sprintf_chk@plt+0x26c0>
mov    $0xffffffff,%eax
add    $0x4ec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x30(%esp),%ecx
test   %esi,%esi
mov    %ecx,0x18(%esp)
mov    $0x0,%ecx
cmovns %esi,%ecx
sub    %ebx,%eax
mov    %eax,0xc(%esp)
mov    0x807439c,%eax
mov    %ecx,0x10(%esp)
movl   $0x12c,0x1c(%esp)
movl   $0x2000,0x14(%esp)
mov    %eax,0x4(%esp)
mov    0x80743a0,%eax
mov    %ebx,0x8(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   8049b70 <pcre_exec@plt>
mov    0x2c(%esp),%edx
mov    %ebx,%ecx
sub    %edx,%ecx
add    %ecx,%esi
cmp    $0xffffffff,%eax
je     804c840 <__sprintf_chk@plt+0x2700>
test   %eax,%eax
mov    %eax,%ecx
jle    804c94e <__sprintf_chk@plt+0x280e>
mov    0x30(%esp),%esi
mov    0x34(%esp),%eax
mov    0x50c(%esp),%edx
add    %ebx,%esi
add    %ebx,%eax
movzbl 0x8075084,%ebx
test   %edx,%edx
je     804c908 <__sprintf_chk@plt+0x27c8>
mov    0x508(%esp),%edx
sub    %esi,%eax
mov    %eax,(%edx)
mov    %esi,%eax
sub    0x500(%esp),%eax
add    $0x4ec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%edx
mov    %edi,%ebp
mov    %edi,%eax
jmp    804c828 <__sprintf_chk@plt+0x26e8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
movsbl %bl,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
mov    %edi,%eax
cmovne %edx,%eax
cmp    %esi,0x500(%esp)
jae    804c8d9 <__sprintf_chk@plt+0x2799>
cmp    %bl,-0x1(%esi)
je     804c8d9 <__sprintf_chk@plt+0x2799>
mov    0x500(%esp),%edx
jmp    804c945 <__sprintf_chk@plt+0x2805>
cmp    %bl,-0x1(%esi)
je     804c8d9 <__sprintf_chk@plt+0x2799>
sub    $0x1,%esi
cmp    %edx,%esi
jne    804c940 <__sprintf_chk@plt+0x2800>
jmp    804c8d9 <__sprintf_chk@plt+0x2799>
cmp    $0xfffffff8,%eax
je     804ca2f <__sprintf_chk@plt+0x28ef>
jg     804c9ee <__sprintf_chk@plt+0x28ae>
cmp    $0xfffffff6,%eax
jne    804c9a4 <__sprintf_chk@plt+0x2864>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
movl   $0x806c300,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x2c(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x2c(%esp),%ecx
movl   $0x5,0x8(%esp)
movl   $0x806c235,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x2c(%esp)
call   8049a90 <dcgettext@plt>
mov    0x2c(%esp),%ecx
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    $0xffffffff,%eax
jmp    804c84b <__sprintf_chk@plt+0x270b>
cmp    $0xfffffffa,%eax
jne    804ca70 <__sprintf_chk@plt+0x2930>
movl   $0x5,0x8(%esp)
movl   $0x806c224,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x2c(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x2c(%esp),%ecx
movl   $0x5,0x8(%esp)
movl   $0x806c2dc,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x2c(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x2c(%esp),%ecx
jmp    804c968 <__sprintf_chk@plt+0x2828>
cmp    $0xffffffff,%eax
jne    804c9a4 <__sprintf_chk@plt+0x2864>
jmp    804c846 <__sprintf_chk@plt+0x2706>
xchg   %ax,%ax
mov    0x8074258,%eax
mov    %eax,0x8074254
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x807449c
ff
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806c325,0x8074238
08
movl   $0x806c32b,0x8074234
08
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
xor    %eax,%eax
sub    $0x4,%esp
mov    %ecx,(%esp)
movzbl (%esi),%ebx
lea    -0x9(%ebx),%edi
mov    %edi,%ecx
cmp    $0x4,%cl
jbe    804cb4c <__sprintf_chk@plt+0x2a0c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%bl
je     804cb4c <__sprintf_chk@plt+0x2a0c>
test   %bl,%bl
je     804cb63 <__sprintf_chk@plt+0x2a23>
mov    (%esp),%ecx
test   %ecx,%ecx
je     804caf6 <__sprintf_chk@plt+0x29b6>
mov    %edx,(%ecx,%eax,4)
movzbl (%esi),%ebx
add    $0x1,%eax
jmp    804cb1b <__sprintf_chk@plt+0x29db>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%esi
test   %bl,%bl
je     804cb6b <__sprintf_chk@plt+0x2a2b>
movzbl %bl,%edi
cmp    $0x9,%edi
je     804cb38 <__sprintf_chk@plt+0x29f8>
cmp    $0x20,%edi
je     804cb38 <__sprintf_chk@plt+0x29f8>
lea    -0xa(%ebx),%ecx
cmp    $0x3,%cl
jbe    804cb38 <__sprintf_chk@plt+0x29f8>
mov    %edx,%ebp
cmp    $0x5c,%bl
lea    0x1(%edx),%edx
mov    %bl,-0x1(%edx)
lea    0x1(%esi),%edi
movzbl 0x1(%esi),%ebx
jne    804cb00 <__sprintf_chk@plt+0x29c0>
test   %bl,%bl
jne    804cb58 <__sprintf_chk@plt+0x2a18>
mov    %edi,%esi
lea    0x0(%esi),%esi
movb   $0x0,0x1(%ebp)
movzbl (%esi),%ebx
lea    0x2(%ebp),%edx
lea    -0x9(%ebx),%edi
mov    %edi,%ecx
cmp    $0x4,%cl
ja     804cae0 <__sprintf_chk@plt+0x29a0>
add    $0x1,%esi
jmp    804cace <__sprintf_chk@plt+0x298e>
lea    0x0(%esi,%eiz,1),%esi
mov    %bl,-0x1(%edx)
add    $0x2,%esi
movzbl (%esi),%ebx
jmp    804cb02 <__sprintf_chk@plt+0x29c2>
add    $0x4,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%edi
jmp    804cb33 <__sprintf_chk@plt+0x29f3>
nop
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x24,%esp
test   %eax,%eax
je     804cbe0 <__sprintf_chk@plt+0x2aa0>
mov    0x80743c4,%ebx
test   %ebx,%ebx
je     804cc10 <__sprintf_chk@plt+0x2ad0>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
je     804cbda <__sprintf_chk@plt+0x2a9a>
mov    0x806c18c,%eax
test   %eax,%eax
je     804cc70 <__sprintf_chk@plt+0x2b30>
movl   $0x5,0x8(%esp)
movl   $0x806c740,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x806c184,%eax
mov    0x806c18c,%edx
mov    %eax,0x8074474
mov    0x806c188,%eax
test   %edx,%edx
mov    %eax,0x8074470
jne    804cbda <__sprintf_chk@plt+0x2a9a>
mov    0x806c180,%eax
mov    %eax,0x80743c4
jmp    804cbda <__sprintf_chk@plt+0x2a9a>
lea    0x0(%esi),%esi
mov    0x806c180,%edx
test   %edx,%edx
jne    804cc35 <__sprintf_chk@plt+0x2af5>
jmp    804ccb8 <__sprintf_chk@plt+0x2b78>
nop
add    $0x1,%ebx
lea    (%ebx,%ebx,2),%eax
mov    0x806c180(,%eax,4),%edx
test   %edx,%edx
je     804ccb8 <__sprintf_chk@plt+0x2b78>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    804cc20 <__sprintf_chk@plt+0x2ae0>
lea    (%ebx,%ebx,2),%eax
shl    $0x2,%eax
mov    0x806c184(%eax),%edx
mov    0x806c188(%eax),%eax
mov    %esi,0x80743c4
mov    %edx,0x8074474
mov    %eax,0x8074470
jmp    804cbda <__sprintf_chk@plt+0x2a9a>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x8074b28,%esi
movl   $0x806c718,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
jmp    804cbda <__sprintf_chk@plt+0x2a9a>
nop
movl   $0x5,0x8(%esp)
movl   $0x806c32f,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
jmp    804cbda <__sprintf_chk@plt+0x2a9a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x807447c,%eax
test   %eax,%eax
je     804cd10 <__sprintf_chk@plt+0x2bd0>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    805c1b0 <__sprintf_chk@plt+0x12070>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x807445c,%ebx
mov    %eax,0xc(%esp)
neg    %eax
mov    0x8074468,%ebp
mov    %eax,0x1c(%esp)
mov    0x8074458,%esi
add    %ebx,%eax
mov    %eax,0x10(%esp)
mov    0x807446c,%eax
lea    (%eax,%ebp,1),%edi
sub    %ebx,%edi
cmp    %esi,%edi
mov    %eax,0x18(%esp)
jb     804cdb8 <__sprintf_chk@plt+0x2c78>
mov    0x10(%esp),%eax
mov    %eax,0x8074460
mov    %edi,%eax
xor    %edx,%edx
div    %esi
mov    0x8074464,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
sub    %edx,%edi
mov    %edi,0x8(%esp)
call   8063020 <__sprintf_chk@plt+0x18ee0>
test   %eax,%eax
js     804cea8 <__sprintf_chk@plt+0x2d68>
mov    %eax,%edi
mov    %eax,%esi
mov    %eax,%edx
mov    $0x1,%eax
sar    $0x1f,%edi
add    %esi,0x8074450
adc    %edi,0x8074454
add    %edx,%ebx
mov    %ebx,0x807445c
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
lea    0x1(%esi),%ebx
add    %esi,%eax
mov    %eax,0x14(%esp)
lea    -0x1(%ebp),%eax
sub    %esi,%eax
cmp    %eax,0x14(%esp)
mov    %eax,%ecx
jbe    804ce0f <__sprintf_chk@plt+0x2ccf>
lea    (%eax,%eax,1),%ecx
cmp    %ecx,%eax
ja     804cf63 <__sprintf_chk@plt+0x2e23>
lea    0x1(%esi),%ebx
mov    %ecx,%eax
add    %ebx,%eax
jb     804cf63 <__sprintf_chk@plt+0x2e23>
mov    0x14(%esp),%edi
jmp    804ce07 <__sprintf_chk@plt+0x2cc7>
lea    (%ecx,%ecx,1),%eax
cmp    %ecx,%eax
jb     804cf63 <__sprintf_chk@plt+0x2e23>
mov    %eax,%ecx
add    %ebx,%ecx
jb     804cf63 <__sprintf_chk@plt+0x2e23>
mov    %eax,%ecx
cmp    %ecx,%edi
ja     804cdf0 <__sprintf_chk@plt+0x2cb0>
mov    %edi,0x14(%esp)
mov    0x10(%edx),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804ced6 <__sprintf_chk@plt+0x2d96>
add    %ebx,%ecx
cmp    %ecx,%ebp
jb     804ceb5 <__sprintf_chk@plt+0x2d75>
mov    0x18(%esp),%edi
mov    %edi,%ebp
mov    0xc(%esp),%eax
xor    %edx,%edx
lea    0x1(%eax),%ecx
lea    (%edi,%ecx,1),%ebx
mov    %ebx,%eax
div    %esi
test   %edx,%edx
je     804ce4d <__sprintf_chk@plt+0x2d0d>
add    %esi,%ecx
sub    %edx,%ecx
lea    (%edi,%ecx,1),%ebx
mov    0xc(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
sub    0x18(%esp),%eax
add    %ebx,%edx
mov    %edx,(%esp)
mov    %edx,0x8074460
add    %ebp,%eax
mov    %eax,0x4(%esp)
mov    %edx,0xc(%esp)
call   80499c0 <memmove@plt>
movzbl 0x8075084,%eax
cmp    %ebp,%edi
mov    0xc(%esp),%edx
mov    %al,-0x1(%edx)
je     804ce9b <__sprintf_chk@plt+0x2d5b>
mov    %ebp,(%esp)
call   80499d0 <free@plt>
mov    %edi,0x807446c
add    0x8074468,%edi
sub    %ebx,%edi
jmp    804cd64 <__sprintf_chk@plt+0x2c24>
xor    %edx,%edx
xor    %esi,%esi
xor    %edi,%edi
xor    %eax,%eax
jmp    804cd97 <__sprintf_chk@plt+0x2c57>
mov    %ecx,(%esp)
mov    %ecx,0x8074468
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x8074458,%esi
mov    0x807446c,%ebp
mov    %eax,%edi
jmp    804ce32 <__sprintf_chk@plt+0x2cf2>
mov    0x2c(%edx),%eax
mov    0x30(%edx),%edx
movl   $0x0,0x24(%esp)
mov    %eax,0x28(%esp)
mov    0x8074450,%eax
sub    %eax,0x28(%esp)
mov    0xc(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x8074454,%edx
sbb    %edx,0x2c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
mov    0x24(%esp),%edi
cmp    %edi,%edx
jl     804cf33 <__sprintf_chk@plt+0x2df3>
jg     804ce22 <__sprintf_chk@plt+0x2ce2>
mov    0x20(%esp),%eax
cmp    %eax,0x28(%esp)
ja     804ce22 <__sprintf_chk@plt+0x2ce2>
mov    0x2c(%esp),%eax
test   %eax,%eax
js     804ce22 <__sprintf_chk@plt+0x2ce2>
mov    0x24(%esp),%eax
mov    0x20(%esp),%edx
test   %eax,%eax
jne    804ce22 <__sprintf_chk@plt+0x2ce2>
cmp    %edx,0x14(%esp)
ja     804ce22 <__sprintf_chk@plt+0x2ce2>
cmp    %edx,%ecx
cmova  %edx,%ecx
jmp    804ce22 <__sprintf_chk@plt+0x2ce2>
call   80652b0 <__sprintf_chk@plt+0x1b170>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x24,%esp
movl   $0x806c360,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80653d0 <__sprintf_chk@plt+0x1b290>
cmp    $0x1,%eax
ja     804cfb0 <__sprintf_chk@plt+0x2e70>
mov    0x4(%ebx),%eax
test   %eax,%eax
js     804cfb0 <__sprintf_chk@plt+0x2e70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
movl   $0x5,0x8(%esp)
movl   $0x806c760,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x806c38f,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   8049c40 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x7c,%esp
mov    0x90(%esp),%eax
lea    0x6c(%esp),%edi
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
jmp    804d034 <__sprintf_chk@plt+0x2ef4>
lea    0x0(%esi),%esi
mov    0x18(%esp),%ebp
mov    %esi,(%esp)
sub    $0x1,%edi
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
call   806be70 <fts_children+0x2f70>
add    $0x30,%eax
mov    %al,(%edi)
lea    -0x1(%ebp),%eax
mov    %esi,(%esp)
mov    %ebx,0x4(%esp)
movl   $0xa,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x18(%esp)
call   806bd40 <fts_children+0x2e40>
mov    %edx,%ecx
mov    %eax,%esi
or     %eax,%ecx
mov    %edx,%ebx
jne    804d030 <__sprintf_chk@plt+0x2ef0>
mov    0x8074494,%ecx
test   %ecx,%ecx
je     804d0b5 <__sprintf_chk@plt+0x2f75>
cmp    $0x1,%ebp
jle    804d0b5 <__sprintf_chk@plt+0x2f75>
mov    0x18(%esp),%eax
mov    %edi,%ecx
sub    %ebp,%edi
movl   $0x20,0x4(%esp)
add    $0x1,%edi
sub    %eax,%ecx
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   8049e50 <memset@plt>
mov    0x807449c,%edx
lea    0x6c(%esp),%eax
sub    %edi,%eax
test   %edx,%edx
jne    804d120 <__sprintf_chk@plt+0x2fe0>
mov    0x8074320,%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   8049ee0 <fwrite_unlocked@plt>
mov    0x807449c,%eax
test   %eax,%eax
jne    804d108 <__sprintf_chk@plt+0x2fc8>
mov    0x6c(%esp),%eax
xor    %gs:0x14,%eax
jne    804d154 <__sprintf_chk@plt+0x3014>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804d0ec <__sprintf_chk@plt+0x2fac>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804d0ec <__sprintf_chk@plt+0x2fac>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
jne    804d138 <__sprintf_chk@plt+0x2ff8>
lea    0x6c(%esp),%eax
sub    %edi,%eax
jmp    804d0c5 <__sprintf_chk@plt+0x2f85>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
lea    0x6c(%esp),%eax
sub    %edi,%eax
jmp    804d0c5 <__sprintf_chk@plt+0x2f85>
call   8049ac0 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x8074430,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x24(%esp)
test   %ecx,%ecx
jne    804d358 <__sprintf_chk@plt+0x3218>
mov    0x807442c,%ebx
test   %ebx,%ebx
je     804d1e0 <__sprintf_chk@plt+0x30a0>
mov    0x80743ec,%eax
cmp    0x24(%esp),%eax
jb     804d3c8 <__sprintf_chk@plt+0x3288>
test   %edi,%edi
jne    804d4fb <__sprintf_chk@plt+0x33bb>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x807424c,%eax
mov    $0x4,%ecx
mov    0x80743e4,%edx
mov    %eax,(%esp)
mov    0x80743e0,%eax
call   804d000 <__sprintf_chk@plt+0x2ec0>
mov    0x8074428,%edi
test   %edi,%edi
je     804d2a9 <__sprintf_chk@plt+0x3169>
mov    $0x1,%edi
jmp    804d1f3 <__sprintf_chk@plt+0x30b3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8074428,%ebx
test   %ebx,%ebx
je     804d2a0 <__sprintf_chk@plt+0x3160>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x18(%esp),%ebx
sub    0x8074460,%ebx
mov    0x80743f0,%eax
mov    0x80743f4,%edx
mov    %ebx,0x18(%esp)
sar    $0x1f,%ebx
add    %eax,0x18(%esp)
mov    %ebx,0x1c(%esp)
adc    %edx,0x1c(%esp)
cmp    0x1c(%esp),%edx
jae    804d310 <__sprintf_chk@plt+0x31d0>
test   %edi,%edi
jne    804d560 <__sprintf_chk@plt+0x3420>
mov    %ebp,%ebx
mov    0x8074248,%eax
mov    $0x6,%ecx
mov    0x1c(%esp),%edx
mov    %eax,(%esp)
mov    0x18(%esp),%eax
call   804d000 <__sprintf_chk@plt+0x2ec0>
mov    0x8074494,%edi
test   %edi,%edi
jne    804d2b8 <__sprintf_chk@plt+0x3178>
mov    0x807449c,%ecx
mov    0x8074244,%eax
test   %ecx,%ecx
jne    804d2f0 <__sprintf_chk@plt+0x31b0>
mov    0x8074320,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804d6a8 <__sprintf_chk@plt+0x3568>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %bl,(%edx)
mov    0x807449c,%edx
mov    0x8074244,%eax
test   %edx,%edx
je     804d298 <__sprintf_chk@plt+0x3158>
cmpb   $0x0,(%eax)
jne    804d5f8 <__sprintf_chk@plt+0x34b8>
nop
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
je     804d298 <__sprintf_chk@plt+0x3158>
mov    %ebp,%eax
movsbl %al,%esi
mov    0x8074494,%edi
mov    %ebp,%ebx
test   %edi,%edi
je     804d253 <__sprintf_chk@plt+0x3113>
lea    0x0(%esi),%esi
mov    0x8074320,%eax
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806c35e,(%esp)
mov    %eax,0xc(%esp)
call   8049ee0 <fwrite_unlocked@plt>
mov    0x807449c,%ecx
mov    0x8074244,%eax
test   %ecx,%ecx
je     804d266 <__sprintf_chk@plt+0x3126>
cmpb   $0x0,(%eax)
je     804d266 <__sprintf_chk@plt+0x3126>
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
jmp    804d266 <__sprintf_chk@plt+0x3126>
nop
jbe    804d5c0 <__sprintf_chk@plt+0x3480>
movl   $0x5,0x8(%esp)
movl   $0x806c342,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
test   %edi,%edi
je     804d22d <__sprintf_chk@plt+0x30ed>
jmp    804d560 <__sprintf_chk@plt+0x3420>
nop
mov    0x807449c,%edx
mov    0x8074250,%eax
test   %edx,%edx
jne    804d610 <__sprintf_chk@plt+0x34d0>
mov    0x8074320,%eax
mov    %eax,0x4(%esp)
mov    0x8074488,%eax
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
mov    0x807449c,%edi
mov    0x8074250,%eax
test   %edi,%edi
jne    804d5d8 <__sprintf_chk@plt+0x3498>
mov    0x807443c,%esi
mov    $0x1,%edi
test   %esi,%esi
jne    804d181 <__sprintf_chk@plt+0x3041>
mov    0x8074320,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804d6be <__sprintf_chk@plt+0x357e>
lea    0x1(%edx),%ecx
xor    %edi,%edi
mov    %ecx,0x14(%eax)
movb   $0x0,(%edx)
jmp    804d181 <__sprintf_chk@plt+0x3041>
mov    0x18(%esp),%ebx
cmp    %ebx,%eax
jae    804d69f <__sprintf_chk@plt+0x355f>
movzbl 0x8075084,%esi
mov    %edi,0x18(%esp)
mov    %esi,%ecx
xor    %esi,%esi
mov    %ecx,%edi
jmp    804d3f2 <__sprintf_chk@plt+0x32b2>
nop
add    $0x1,%eax
add    $0x1,%esi
cmp    %eax,%ebx
jbe    804d40a <__sprintf_chk@plt+0x32ca>
mov    %ebx,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
jne    804d3e8 <__sprintf_chk@plt+0x32a8>
mov    0x18(%esp),%edi
mov    %esi,%ecx
mov    %ebx,0x18(%esp)
xor    %ebx,%ebx
mov    0x80743e0,%eax
mov    0x80743e4,%edx
add    %eax,%ecx
adc    %edx,%ebx
mov    %edx,0x2c(%esp)
mov    %ecx,%edx
mov    %ebx,%ecx
cmp    %ebx,0x2c(%esp)
mov    %eax,0x28(%esp)
jb     804d481 <__sprintf_chk@plt+0x3341>
jbe    804d630 <__sprintf_chk@plt+0x34f0>
movl   $0x5,0x8(%esp)
movl   $0x806c342,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x2c(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    0x18(%esp),%eax
mov    %edx,%ebx
mov    %ecx,%esi
add    $0x1,%ebx
adc    $0x0,%esi
cmp    %ecx,%esi
mov    %edx,0x80743e0
mov    %ecx,0x80743e4
mov    %eax,0x80743ec
ja     804d4de <__sprintf_chk@plt+0x339e>
jae    804d648 <__sprintf_chk@plt+0x3508>
movl   $0x5,0x8(%esp)
movl   $0x806c342,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x24(%esp),%eax
test   %edi,%edi
mov    %ebx,0x80743e0
mov    %esi,0x80743e4
mov    %eax,0x80743ec
je     804d1a2 <__sprintf_chk@plt+0x3062>
mov    0x807449c,%ecx
mov    0x8074244,%eax
test   %ecx,%ecx
jne    804d680 <__sprintf_chk@plt+0x3540>
mov    0x8074320,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804d6d6 <__sprintf_chk@plt+0x3596>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %ebp,%eax
mov    %al,(%edx)
movsbl %al,%esi
mov    0x807449c,%edx
mov    0x8074244,%eax
test   %edx,%edx
je     804d1a7 <__sprintf_chk@plt+0x3067>
cmpb   $0x0,(%eax)
je     804d1a7 <__sprintf_chk@plt+0x3067>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804d1a7 <__sprintf_chk@plt+0x3067>
lea    0x0(%esi),%esi
mov    0x807449c,%ecx
mov    %ebp,%ebx
mov    0x8074244,%eax
test   %ecx,%ecx
jne    804d658 <__sprintf_chk@plt+0x3518>
mov    0x8074320,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804d6f1 <__sprintf_chk@plt+0x35b1>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
mov    %ebp,%eax
mov    %al,(%edx)
mov    0x807449c,%edx
mov    0x8074244,%eax
test   %edx,%edx
je     804d22d <__sprintf_chk@plt+0x30ed>
cmpb   $0x0,(%eax)
je     804d22d <__sprintf_chk@plt+0x30ed>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804d22f <__sprintf_chk@plt+0x30ef>
xchg   %ax,%ax
cmp    0x18(%esp),%eax
jbe    804d225 <__sprintf_chk@plt+0x30e5>
lea    0x0(%esi),%esi
jmp    804d316 <__sprintf_chk@plt+0x31d6>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
je     804d394 <__sprintf_chk@plt+0x3254>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804d394 <__sprintf_chk@plt+0x3254>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804d298 <__sprintf_chk@plt+0x3158>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
je     804d36b <__sprintf_chk@plt+0x322b>
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
jmp    804d36b <__sprintf_chk@plt+0x322b>
nop
cmp    %edx,0x28(%esp)
jbe    804d481 <__sprintf_chk@plt+0x3341>
lea    0x0(%esi),%esi
jmp    804d43d <__sprintf_chk@plt+0x32fd>
lea    0x0(%esi),%esi
cmp    %edx,%ebx
jae    804d4de <__sprintf_chk@plt+0x339e>
jmp    804d4aa <__sprintf_chk@plt+0x336a>
lea    0x0(%esi),%esi
cmpb   $0x0,(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
je     804d575 <__sprintf_chk@plt+0x3435>
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
jmp    804d575 <__sprintf_chk@plt+0x3435>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%eax)
je     804d50e <__sprintf_chk@plt+0x33ce>
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
jmp    804d50e <__sprintf_chk@plt+0x33ce>
xor    %ecx,%ecx
xor    %ebx,%ebx
jmp    804d416 <__sprintf_chk@plt+0x32d6>
mov    %esi,%ecx
movzbl %cl,%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <__overflow@plt>
jmp    804d27f <__sprintf_chk@plt+0x313f>
movl   $0x0,0x4(%esp)
xor    %di,%di
mov    %eax,(%esp)
call   8049f70 <__overflow@plt>
jmp    804d181 <__sprintf_chk@plt+0x3041>
mov    %ebp,%ecx
movsbl %cl,%esi
mov    %esi,%ecx
movzbl %cl,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <__overflow@plt>
jmp    804d52c <__sprintf_chk@plt+0x33ec>
mov    %esi,%ecx
movzbl %cl,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <__overflow@plt>
jmp    804d590 <__sprintf_chk@plt+0x3450>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x3c,%esp
mov    0x8074498,%edx
test   %edx,%edx
je     804da10 <__sprintf_chk@plt+0x38d0>
cmp    $0x3a,%esi
sete   %al
mov    %eax,%esi
mov    0x8074434,%eax
mov    %esi,%ecx
test   %eax,%eax
setne  %al
xor    %eax,%ecx
movzbl %cl,%edi
mov    0x807449c,%ecx
test   %ecx,%ecx
mov    %ecx,0x10(%esp)
je     804d9f8 <__sprintf_chk@plt+0x38b8>
shr    $0x1f,%ecx
test   %al,%al
cmovne %ecx,%eax
mov    %esi,%ecx
cmp    %cl,%al
mov    0x8074240,%eax
cmove  0x807423c,%eax
test   %cl,%cl
mov    %eax,0x14(%esp)
mov    0x8074258,%eax
cmove  0x8074254,%eax
mov    %eax,0x1c(%esp)
test   %edx,%edx
je     804d888 <__sprintf_chk@plt+0x3748>
test   %edi,%edi
je     804d888 <__sprintf_chk@plt+0x3748>
cmp    %ebx,%ebp
jae    804db58 <__sprintf_chk@plt+0x3a18>
mov    %ebx,%eax
mov    %ebp,%esi
sub    %ebp,%eax
mov    %eax,0x18(%esp)
movl   $0x0,0x10(%esp)
jmp    804d7d4 <__sprintf_chk@plt+0x3694>
mov    0x10(%esp),%eax
movl   $0x1,0x2c(%esp)
test   %eax,%eax
je     804db20 <__sprintf_chk@plt+0x39e0>
mov    $0x1,%edx
lea    (%edi,%edx,1),%esi
cmp    %esi,%ebx
jbe    804db00 <__sprintf_chk@plt+0x39c0>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %esi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x8074470
cmp    $0xffffffff,%eax
je     804db00 <__sprintf_chk@plt+0x39c0>
lea    0x0(%ebp,%eax,1),%edi
cmp    %edi,%ebx
je     804db00 <__sprintf_chk@plt+0x39c0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     804d7b0 <__sprintf_chk@plt+0x3670>
mov    0x8074498,%ecx
test   %ecx,%ecx
je     804da40 <__sprintf_chk@plt+0x3900>
cmpl   $0x1,0x8074434
mov    %ebx,%edx
mov    %edi,%eax
sbb    %ecx,%ecx
and    $0xd,%ecx
add    $0x2d,%ecx
call   804d160 <__sprintf_chk@plt+0x3020>
mov    0x807449c,%edx
mov    0x2c(%esp),%eax
test   %edx,%edx
jne    804da99 <__sprintf_chk@plt+0x3959>
mov    0x8074320,%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
call   8049ee0 <fwrite_unlocked@plt>
mov    0x807449c,%eax
test   %eax,%eax
jne    804dae0 <__sprintf_chk@plt+0x39a0>
mov    0x8074498,%esi
test   %esi,%esi
jne    804dac0 <__sprintf_chk@plt+0x3980>
mov    0x2c(%esp),%edx
jmp    804d7c9 <__sprintf_chk@plt+0x3689>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804d970 <__sprintf_chk@plt+0x3830>
mov    0x14(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804da28 <__sprintf_chk@plt+0x38e8>
test   %edi,%edi
jne    804db5e <__sprintf_chk@plt+0x3a1e>
test   %edx,%edx
je     804d8e8 <__sprintf_chk@plt+0x37a8>
mov    0x8074320,%eax
testb  $0x20,(%eax)
jne    804d9af <__sprintf_chk@plt+0x386f>
mov    0x80743fc,%eax
mov    %ebx,0x80743e8
test   %eax,%eax
je     804d8d9 <__sprintf_chk@plt+0x3799>
mov    0x8074320,%eax
mov    %eax,(%esp)
call   8049b10 <fflush_unlocked@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     804d978 <__sprintf_chk@plt+0x3838>
xor    %eax,%eax
cmp    %ebp,%ebx
jbe    804d91c <__sprintf_chk@plt+0x37dc>
movsbl -0x1(%ebx),%esi
mov    $0xffffffff,%edx
movzbl 0x8075084,%ecx
cmp    %ecx,%esi
je     804db85 <__sprintf_chk@plt+0x3a45>
cmpb   $0xd,(%ebx,%edx,1)
cmove  %edx,%eax
add    %ebx,%eax
sub    %ebp,%eax
mov    %eax,%esi
je     804d978 <__sprintf_chk@plt+0x3838>
mov    0x14(%esp),%edi
mov    0x8074238,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
mov    0x8074320,%eax
mov    %ebp,(%esp)
add    %esi,%ebp
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   8049ee0 <fwrite_unlocked@plt>
cmpb   $0x0,(%edi)
je     804d96a <__sprintf_chk@plt+0x382a>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
mov    0x8074498,%edx
test   %edx,%edx
jne    804d8af <__sprintf_chk@plt+0x376f>
cmp    %ebp,%ebx
jbe    804d8af <__sprintf_chk@plt+0x376f>
mov    0x8074320,%eax
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,%eax
sub    %ebp,%eax
mov    %eax,0x8(%esp)
call   8049ee0 <fwrite_unlocked@plt>
mov    0x8074320,%eax
testb  $0x20,(%eax)
je     804d8bd <__sprintf_chk@plt+0x377d>
movl   $0x5,0x8(%esp)
movl   $0x806c361,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x1,0x807447c
00
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
jmp    804d8bd <__sprintf_chk@plt+0x377d>
lea    0x0(%esi),%esi
movl   $0x0,0x1c(%esp)
movl   $0x0,0x14(%esp)
jmp    804d784 <__sprintf_chk@plt+0x3644>
lea    0x0(%esi),%esi
mov    %ebx,%edx
call   804d160 <__sprintf_chk@plt+0x3020>
mov    0x8074498,%edx
jmp    804d72b <__sprintf_chk@plt+0x35eb>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%esi
cmpb   $0x0,(%esi)
je     804d970 <__sprintf_chk@plt+0x3830>
jmp    804d8a3 <__sprintf_chk@plt+0x3763>
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
cmpb   $0x0,(%eax)
jne    804db30 <__sprintf_chk@plt+0x39f0>
mov    0x10(%esp),%edx
mov    %edi,%eax
sub    %edx,%eax
test   %edx,%edx
je     804db48 <__sprintf_chk@plt+0x3a08>
mov    0x8074320,%edx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   8049ee0 <fwrite_unlocked@plt>
mov    0x807449c,%edx
movl   $0x0,0x10(%esp)
mov    0x2c(%esp),%eax
test   %edx,%edx
je     804d846 <__sprintf_chk@plt+0x3706>
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804dab3 <__sprintf_chk@plt+0x3973>
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
mov    0x2c(%esp),%eax
jmp    804d846 <__sprintf_chk@plt+0x3706>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8074320,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049a70 <fputc_unlocked@plt>
jmp    804d87f <__sprintf_chk@plt+0x373f>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
cmpb   $0x0,(%eax)
je     804d871 <__sprintf_chk@plt+0x3731>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804d871 <__sprintf_chk@plt+0x3731>
nop
mov    0x8074498,%edx
test   %edx,%edx
jne    804db58 <__sprintf_chk@plt+0x3a18>
mov    0x10(%esp),%ecx
test   %ecx,%ecx
je     804db7d <__sprintf_chk@plt+0x3a3d>
mov    0x10(%esp),%ebp
jmp    804d8ab <__sprintf_chk@plt+0x376b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x10(%esp)
jmp    804d7c4 <__sprintf_chk@plt+0x3684>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
jmp    804da4d <__sprintf_chk@plt+0x390d>
xchg   %ax,%ax
mov    %edi,%eax
sub    %esi,%eax
mov    %esi,0x10(%esp)
jmp    804da5d <__sprintf_chk@plt+0x391d>
lea    0x0(%esi),%esi
mov    %ebx,0x10(%esp)
jmp    804db12 <__sprintf_chk@plt+0x39d2>
test   %edx,%edx
jne    804d794 <__sprintf_chk@plt+0x3654>
mov    0x1c(%esp),%edi
cmpb   $0x0,(%edi)
je     804d8ef <__sprintf_chk@plt+0x37af>
cmp    %ebx,%ebp
mov    %ebp,%esi
jb     804d79c <__sprintf_chk@plt+0x365c>
mov    %esi,0x10(%esp)
xor    %edx,%edx
jmp    804db12 <__sprintf_chk@plt+0x39d2>
lea    -0x1(%ebx),%eax
cmp    %eax,%ebp
mov    $0xffffffff,%eax
jae    804d91c <__sprintf_chk@plt+0x37dc>
mov    $0xfe,%dl
jmp    804d915 <__sprintf_chk@plt+0x37d5>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x80743e8,%ebp
test   %ebp,%ebp
je     804dcd8 <__sprintf_chk@plt+0x3b98>
mov    0x80743d4,%edi
mov    0x80743d0,%esi
cmp    $0x0,%edi
jle    804dcc8 <__sprintf_chk@plt+0x3b88>
cmp    %ebp,%ebx
ja     804dc0c <__sprintf_chk@plt+0x3acc>
jmp    804dca4 <__sprintf_chk@plt+0x3b64>
lea    0x0(%esi),%esi
mov    %ebp,%eax
mov    %esi,%edx
mov    $0x2d,%ecx
call   804d710 <__sprintf_chk@plt+0x35d0>
mov    0x80743d4,%eax
mov    0x80743d0,%edx
cmp    $0x0,%eax
jle    804dcb0 <__sprintf_chk@plt+0x3b70>
mov    0x80743e8,%ebp
cmp    %ebx,%ebp
jae    804dca4 <__sprintf_chk@plt+0x3b64>
mov    %edx,%esi
mov    %eax,%edi
mov    %ebx,%eax
sub    %ebp,%eax
mov    %eax,0x8(%esp)
movzbl 0x8075084,%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049ea0 <memchr@plt>
add    $0xffffffff,%esi
mov    0x80743dc,%edx
adc    $0xffffffff,%edi
or     0x80743d8,%edx
mov    %esi,0x80743d0
mov    %edi,0x80743d4
lea    0x1(%eax),%esi
jne    804dbd8 <__sprintf_chk@plt+0x3a98>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,%eax
sub    %ebp,%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   *0x8074470
cmp    $0xffffffff,%eax
mov    0x8074434,%eax
setne  %dl
test   %eax,%eax
sete   %al
cmp    %al,%dl
je     804dc90 <__sprintf_chk@plt+0x3b50>
mov    0x80743e8,%eax
jmp    804dbda <__sprintf_chk@plt+0x3a9a>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x80743d0
00
movl   $0x0,0x80743d4
00
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jl     804dca4 <__sprintf_chk@plt+0x3b64>
cmp    $0x0,%edx
ja     804dbfa <__sprintf_chk@plt+0x3aba>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jl     804dca4 <__sprintf_chk@plt+0x3b64>
cmp    $0x0,%esi
jbe    804dca4 <__sprintf_chk@plt+0x3b64>
nop
jmp    804dbcc <__sprintf_chk@plt+0x3a8c>
lea    0x0(%esi),%esi
mov    0x8074460,%ebp
mov    %ebp,0x80743e8
jmp    804dbb7 <__sprintf_chk@plt+0x3a77>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movzbl 0x8075084,%ebp
mov    %eax,0x28(%esp)
mov    0x8074438,%eax
mov    %edx,0x18(%esp)
mov    %ecx,0x24(%esp)
test   %eax,%eax
jne    804ddb0 <__sprintf_chk@plt+0x3c70>
cmpl   $0x0,0x80743d4
jle    804dfb6 <__sprintf_chk@plt+0x3e76>
mov    0x28(%esp),%eax
call   804dba0 <__sprintf_chk@plt+0x3a60>
mov    0x8074438,%eax
test   %eax,%eax
jne    804ddb0 <__sprintf_chk@plt+0x3c70>
mov    0x80743e8,%edx
mov    0x8074424,%edi
test   %edx,%edx
mov    %edx,0x2c(%esp)
cmove  0x8074460,%edx
cmp    $0x0,%edi
mov    %edx,0x20(%esp)
mov    0x8074420,%edx
mov    %edx,0x1c(%esp)
jl     804dff1 <__sprintf_chk@plt+0x3eb1>
jle    804dfe6 <__sprintf_chk@plt+0x3ea6>
mov    0x28(%esp),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %ebp,%ecx
jmp    804dd90 <__sprintf_chk@plt+0x3c50>
mov    0x1c(%esp),%ebx
add    $0x1,%eax
adc    $0x0,%edx
mov    %edx,%ebp
xor    %edi,%ebp
xor    %eax,%ebx
or     %ebx,%ebp
je     804ded8 <__sprintf_chk@plt+0x3d98>
cmp    %esi,0x20(%esp)
jae    804dd78 <__sprintf_chk@plt+0x3c38>
xchg   %ax,%ax
sub    $0x1,%esi
cmp    %cl,-0x1(%esi)
je     804dd78 <__sprintf_chk@plt+0x3c38>
sub    $0x1,%esi
cmp    %cl,-0x1(%esi)
jne    804dd98 <__sprintf_chk@plt+0x3c58>
jmp    804dd78 <__sprintf_chk@plt+0x3c38>
lea    0x0(%esi),%esi
mov    %eax,0x1c(%esp)
mov    0x24(%esp),%eax
mov    0x28(%esp),%ebx
test   %eax,%eax
je     804dfad <__sprintf_chk@plt+0x3e6d>
cmp    %ebx,0x18(%esp)
jbe    804dfdb <__sprintf_chk@plt+0x3e9b>
cmpl   $0x0,0x80743dc
jl     804dfdb <__sprintf_chk@plt+0x3e9b>
jle    804dfce <__sprintf_chk@plt+0x3e8e>
mov    %ebp,%eax
xor    %edi,%edi
movsbl %al,%eax
xor    %ebp,%ebp
mov    %edi,%esi
mov    %ebp,%edi
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049ea0 <memchr@plt>
lea    0x1(%eax),%ebp
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804deb8 <__sprintf_chk@plt+0x3d78>
add    $0x1,%esi
adc    $0x0,%edi
cmp    %ebp,0x18(%esp)
jbe    804de40 <__sprintf_chk@plt+0x3d00>
cmp    %edi,0x80743dc
jl     804de40 <__sprintf_chk@plt+0x3d00>
jg     804deb0 <__sprintf_chk@plt+0x3d70>
cmp    %esi,0x80743d8
ja     804deb0 <__sprintf_chk@plt+0x3d70>
nop
mov    %esi,%eax
mov    %edi,%edx
mov    %ebp,%esi
mov    %eax,%edi
mov    %edx,%ebp
mov    0x24(%esp),%eax
mov    0x807445c,%ecx
mov    0x8074454,%edx
mov    %edi,(%eax)
mov    %ebp,0x4(%eax)
mov    0x8074450,%eax
sub    %esi,%ecx
mov    %ecx,%ebx
sar    $0x1f,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %eax,0x8074448
mov    %edx,0x807444c
mov    0x1c(%esp),%edx
test   %edx,%edx
jne    804dfad <__sprintf_chk@plt+0x3e6d>
mov    0x8074418,%eax
mov    0x807441c,%edx
mov    %eax,0x80743d0
mov    %edx,0x80743d4
movl   $0x1,0x80743c0
00
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%ebx
jmp    804ddf8 <__sprintf_chk@plt+0x3cb8>
nop
mov    %ebx,%eax
mov    $0x3a,%ecx
mov    %ebp,%edx
call   804d710 <__sprintf_chk@plt+0x35d0>
mov    0x8074438,%eax
mov    %eax,0x1c(%esp)
jmp    804de21 <__sprintf_chk@plt+0x3ce1>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%ebp
mov    0x80743c0,%ebx
test   %ebx,%ebx
je     804df46 <__sprintf_chk@plt+0x3e06>
cmp    0x2c(%esp),%esi
je     804df46 <__sprintf_chk@plt+0x3e06>
mov    0x807425c,%eax
test   %eax,%eax
je     804df46 <__sprintf_chk@plt+0x3e06>
mov    0x807449c,%ecx
mov    0x8074244,%edx
test   %ecx,%ecx
jne    804e054 <__sprintf_chk@plt+0x3f14>
mov    0x8074320,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8049d10 <fputs_unlocked@plt>
mov    0x807449c,%edx
mov    0x8074244,%eax
test   %edx,%edx
jne    804e039 <__sprintf_chk@plt+0x3ef9>
mov    0x8074320,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804e078 <__sprintf_chk@plt+0x3f38>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
cmp    0x28(%esp),%esi
jae    804e08d <__sprintf_chk@plt+0x3f4d>
mov    %ebp,%eax
mov    0x28(%esp),%ebp
movsbl %al,%edi
mov    %al,0x1c(%esp)
jmp    804df62 <__sprintf_chk@plt+0x3e22>
nop
mov    %ebx,%esi
mov    %ebp,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8049ea0 <memchr@plt>
mov    $0x2d,%ecx
lea    0x1(%eax),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804d710 <__sprintf_chk@plt+0x35d0>
cmp    %ebx,%ebp
ja     804df60 <__sprintf_chk@plt+0x3e20>
movzbl 0x1c(%esp),%ebp
mov    0x8074438,%eax
mov    %eax,0x1c(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
jne    804ddc4 <__sprintf_chk@plt+0x3c84>
mov    0x1c(%esp),%ecx
test   %ecx,%ecx
je     804e010 <__sprintf_chk@plt+0x3ed0>
xor    %eax,%eax
xor    %edx,%edx
jmp    804de91 <__sprintf_chk@plt+0x3d51>
jl     804dd36 <__sprintf_chk@plt+0x3bf6>
cmpl   $0x0,0x80743d0
ja     804dd24 <__sprintf_chk@plt+0x3be4>
jmp    804dd36 <__sprintf_chk@plt+0x3bf6>
cmpl   $0x0,0x80743d8
ja     804dde1 <__sprintf_chk@plt+0x3ca1>
mov    %ebx,%esi
xor    %edi,%edi
xor    %ebp,%ebp
jmp    804de4a <__sprintf_chk@plt+0x3d0a>
cmpl   $0x0,0x1c(%esp)
ja     804dd6c <__sprintf_chk@plt+0x3c2c>
mov    0x1c(%esp),%edx
or     %edi,%edx
jne    804e007 <__sprintf_chk@plt+0x3ec7>
mov    0x807441c,%edx
or     0x8074418,%edx
je     804e030 <__sprintf_chk@plt+0x3ef0>
mov    0x28(%esp),%esi
jmp    804deda <__sprintf_chk@plt+0x3d9a>
mov    0x28(%esp),%eax
mov    $0x3a,%ecx
mov    0x18(%esp),%edx
call   804d710 <__sprintf_chk@plt+0x35d0>
mov    0x8074438,%eax
mov    %eax,0x1c(%esp)
jmp    804de7a <__sprintf_chk@plt+0x3d3a>
mov    0x28(%esp),%ebx
jmp    804df95 <__sprintf_chk@plt+0x3e55>
cmpb   $0x0,(%eax)
je     804df2c <__sprintf_chk@plt+0x3dec>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804df2c <__sprintf_chk@plt+0x3dec>
cmpb   $0x0,(%edx)
je     804df07 <__sprintf_chk@plt+0x3dc7>
mov    0x8074238,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
mov    0x807425c,%eax
jmp    804df07 <__sprintf_chk@plt+0x3dc7>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <__overflow@plt>
jmp    804df46 <__sprintf_chk@plt+0x3e06>
mov    %esi,%ebx
mov    0x8074438,%eax
jmp    804df95 <__sprintf_chk@plt+0x3e55>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049bc0 <__ctype_get_mb_cur_max@plt>
sub    %edi,%ebp
cmp    $0x1,%eax
je     804e170 <__sprintf_chk@plt+0x4030>
mov    %edi,%eax
mov    %eax,%esi
mov    0x8075090,%eax
lea    (%edi,%ebp,1),%edi
test   %eax,%eax
jne    804e11f <__sprintf_chk@plt+0x3fdf>
jmp    804e170 <__sprintf_chk@plt+0x4030>
lea    0x0(%esi),%esi
lea    0x1(%eax),%ebp
mov    %ebp,%ebx
sub    %esi,%ebx
lea    0x34(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   *0x8074470
cmp    $0xffffffff,%eax
jne    804e468 <__sprintf_chk@plt+0x4328>
mov    %ebp,%esi
cmp    %edi,%esi
jae    804e148 <__sprintf_chk@plt+0x4008>
movzbl 0x8075084,%eax
mov    %edi,%ebx
sub    %esi,%ebx
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
jne    804e0f0 <__sprintf_chk@plt+0x3fb0>
mov    %edi,%ebp
jmp    804e0f7 <__sprintf_chk@plt+0x3fb7>
xchg   %ax,%ax
mov    0x8074434,%eax
test   %eax,%eax
je     804e160 <__sprintf_chk@plt+0x4020>
mov    0x10(%esp),%eax
cmp    %eax,0x14(%esp)
ja     804e4fb <__sprintf_chk@plt+0x43bb>
nop
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   *0x8074470
cmp    $0xffffffff,%eax
je     804e148 <__sprintf_chk@plt+0x4008>
mov    0x10(%esp),%ecx
lea    (%ecx,%eax,1),%edi
mov    0x34(%esp),%eax
add    %edi,%eax
cmp    0x14(%esp),%edi
mov    %eax,0x18(%esp)
je     804e148 <__sprintf_chk@plt+0x4008>
mov    0x8074434,%eax
test   %eax,%eax
je     804e1d8 <__sprintf_chk@plt+0x4098>
cmp    %edi,0x10(%esp)
jb     804e330 <__sprintf_chk@plt+0x41f0>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ebp
mov    %eax,0x10(%esp)
mov    %eax,%edi
jmp    804e0c8 <__sprintf_chk@plt+0x3f88>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8074438,%eax
movzbl 0x8075084,%edx
test   %eax,%eax
jne    804e290 <__sprintf_chk@plt+0x4150>
cmpl   $0x0,0x80743d4
jle    804e473 <__sprintf_chk@plt+0x4333>
mov    %edi,%eax
mov    %edx,0x10(%esp)
call   804dba0 <__sprintf_chk@plt+0x3a60>
mov    0x8074438,%eax
mov    0x10(%esp),%edx
test   %eax,%eax
jne    804e290 <__sprintf_chk@plt+0x4150>
mov    0x80743e8,%eax
test   %eax,%eax
mov    %eax,0x2c(%esp)
cmove  0x8074460,%eax
mov    %eax,0x1c(%esp)
mov    0x8074420,%eax
mov    %eax,0x10(%esp)
mov    0x8074424,%eax
cmp    $0x0,%eax
jl     804e496 <__sprintf_chk@plt+0x4356>
jle    804e48b <__sprintf_chk@plt+0x434b>
mov    %edi,%esi
xor    %ecx,%ecx
xor    %ebx,%ebx
mov    %eax,%ebp
mov    %edi,0x28(%esp)
jmp    804e270 <__sprintf_chk@plt+0x4130>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ebx,%edi
xor    %ebp,%edi
xor    %ecx,%eax
or     %eax,%edi
je     804e378 <__sprintf_chk@plt+0x4238>
cmp    %esi,0x1c(%esp)
jae    804e258 <__sprintf_chk@plt+0x4118>
xchg   %ax,%ax
sub    $0x1,%esi
cmp    -0x1(%esi),%dl
je     804e258 <__sprintf_chk@plt+0x4118>
sub    $0x1,%esi
cmp    -0x1(%esi),%dl
jne    804e278 <__sprintf_chk@plt+0x4138>
jmp    804e258 <__sprintf_chk@plt+0x4118>
lea    0x0(%esi),%esi
xor    %eax,%eax
xor    %edx,%edx
mov    %eax,0x80743d0
mov    0x80743d8,%eax
mov    %edx,0x80743d4
mov    0x80743dc,%edx
addl   $0x1,0x20(%esp)
adcl   $0x0,0x24(%esp)
add    $0xffffffff,%eax
adc    $0xffffffff,%edx
mov    %edx,%ecx
or     %eax,%ecx
movl   $0x1,0x80743c0
00
mov    %eax,0x80743d8
mov    %edx,0x80743dc
je     804e2e3 <__sprintf_chk@plt+0x41a3>
mov    0x80743cc,%edx
test   %edx,%edx
je     804e1c0 <__sprintf_chk@plt+0x4080>
mov    0x80743c8,%ecx
test   %ecx,%ecx
jne    804e534 <__sprintf_chk@plt+0x43f4>
mov    0x807445c,%ecx
sub    0x18(%esp),%ecx
mov    0x8074450,%eax
mov    0x8074454,%edx
mov    %ecx,%ebx
sar    $0x1f,%ebx
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %eax,0x8074448
mov    0x20(%esp),%eax
mov    %edx,0x807444c
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
lea    0x38(%esp),%ecx
mov    %edi,%edx
call   804dcf0 <__sprintf_chk@plt+0x3bb0>
mov    0x38(%esp),%ecx
mov    0x80743d8,%eax
mov    0x3c(%esp),%ebx
mov    0x80743dc,%edx
add    %ecx,0x20(%esp)
adc    %ebx,0x24(%esp)
sub    %ecx,%eax
sbb    %ebx,%edx
mov    %edx,%ecx
or     %eax,%ecx
mov    %eax,0x80743d8
mov    %edx,0x80743dc
jne    804e1c0 <__sprintf_chk@plt+0x4080>
jmp    804e160 <__sprintf_chk@plt+0x4020>
mov    0x28(%esp),%edi
mov    0x80743c0,%ebp
test   %ebp,%ebp
je     804e3f0 <__sprintf_chk@plt+0x42b0>
cmp    %esi,0x2c(%esp)
je     804e3f0 <__sprintf_chk@plt+0x42b0>
mov    0x807425c,%eax
test   %eax,%eax
je     804e3f0 <__sprintf_chk@plt+0x42b0>
mov    0x807449c,%ebx
mov    0x8074244,%ecx
test   %ebx,%ebx
jne    804e4cf <__sprintf_chk@plt+0x438f>
mov    0x8074320,%ecx
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x4(%esp)
call   8049d10 <fputs_unlocked@plt>
mov    0x807449c,%ebp
mov    0x8074244,%eax
mov    0x10(%esp),%edx
test   %ebp,%ebp
jne    804e4b0 <__sprintf_chk@plt+0x4370>
mov    0x8074320,%eax
mov    0x14(%eax),%ecx
cmp    0x18(%eax),%ecx
jae    804e540 <__sprintf_chk@plt+0x4400>
lea    0x1(%ecx),%ebx
mov    %ebx,0x14(%eax)
movb   $0xa,(%ecx)
cmp    %esi,%edi
jbe    804e42b <__sprintf_chk@plt+0x42eb>
movsbl %dl,%ebp
jmp    804e402 <__sprintf_chk@plt+0x42c2>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
mov    %edi,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8049ea0 <memchr@plt>
mov    $0x2d,%ecx
lea    0x1(%eax),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804d710 <__sprintf_chk@plt+0x35d0>
cmp    %ebx,%edi
ja     804e400 <__sprintf_chk@plt+0x42c0>
mov    0x8074438,%esi
test   %esi,%esi
jne    804e290 <__sprintf_chk@plt+0x4150>
mov    0x18(%esp),%edx
mov    $0x3a,%ecx
mov    %edi,%eax
call   804d710 <__sprintf_chk@plt+0x35d0>
mov    0x8074438,%ebx
test   %ebx,%ebx
jne    804e290 <__sprintf_chk@plt+0x4150>
mov    0x8074418,%eax
mov    0x807441c,%edx
jmp    804e294 <__sprintf_chk@plt+0x4154>
nop
sub    0x10(%esp),%esi
add    %esi,%eax
jmp    804e191 <__sprintf_chk@plt+0x4051>
jl     804e211 <__sprintf_chk@plt+0x40d1>
cmpl   $0x0,0x80743d0
ja     804e1f9 <__sprintf_chk@plt+0x40b9>
jmp    804e211 <__sprintf_chk@plt+0x40d1>
cmpl   $0x0,0x10(%esp)
ja     804e244 <__sprintf_chk@plt+0x4104>
or     0x10(%esp),%eax
jne    804e4a9 <__sprintf_chk@plt+0x4369>
mov    0x807441c,%eax
or     0x8074418,%eax
je     804e42b <__sprintf_chk@plt+0x42eb>
mov    %edi,%esi
jmp    804e37c <__sprintf_chk@plt+0x423c>
cmpb   $0x0,(%eax)
je     804e3d6 <__sprintf_chk@plt+0x4296>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
mov    0x10(%esp),%edx
jmp    804e3d6 <__sprintf_chk@plt+0x4296>
cmpb   $0x0,(%ecx)
je     804e3a9 <__sprintf_chk@plt+0x4269>
mov    0x8074238,%eax
mov    %ecx,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
mov    0x807425c,%eax
mov    0x10(%esp),%edx
jmp    804e3a9 <__sprintf_chk@plt+0x4269>
mov    0x14(%esp),%edx
lea    0x38(%esp),%ecx
call   804dcf0 <__sprintf_chk@plt+0x3bb0>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%edx
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
sub    %eax,0x80743d8
sbb    %edx,0x80743dc
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%esp)
call   8049cf0 <exit@plt>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
call   8049f70 <__overflow@plt>
mov    0x10(%esp),%edx
jmp    804e3f0 <__sprintf_chk@plt+0x42b0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x11c,%esp
lea    0x50(%esp),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x2c(%esp)
call   8049bb0 <__fxstat64@plt>
test   %eax,%eax
jne    804ea2e <__sprintf_chk@plt+0x48ee>
mov    0x2c(%esp),%ebp
test   %ebp,%ebp
setne  0x1c(%esp)
jne    804ea85 <__sprintf_chk@plt+0x4945>
mov    0x8074438,%ebx
test   %ebx,%ebx
jne    804e5fc <__sprintf_chk@plt+0x44bc>
mov    0x807440c,%ebp
test   %ebp,%ebp
jne    804e5fc <__sprintf_chk@plt+0x44bc>
cmpl   $0x0,0x8074404
jl     804e5fc <__sprintf_chk@plt+0x44bc>
jle    804f260 <__sprintf_chk@plt+0x5120>
mov    0x80744d0,%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804e5fc <__sprintf_chk@plt+0x44bc>
mov    0x807451c,%edx
mov    0x8074518,%eax
mov    %edx,%edi
or     %eax,%edi
je     804e5fc <__sprintf_chk@plt+0x44bc>
xor    0xac(%esp),%edx
xor    0xa8(%esp),%eax
or     %eax,%edx
je     804f2dd <__sprintf_chk@plt+0x519d>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a060 <isatty@plt>
mov    0x8074458,%eax
movzbl 0x8075084,%ecx
test   %eax,%eax
je     804e9ba <__sprintf_chk@plt+0x487a>
mov    0x807446c,%ebx
mov    %ecx,%edi
mov    %eax,%ebp
lea    0x1(%ebx),%esi
xor    %edx,%edx
mov    %esi,%eax
div    %ebp
test   %edx,%edx
je     804e63b <__sprintf_chk@plt+0x44fb>
lea    0x1(%ebp),%eax
sub    %edx,%eax
lea    (%ebx,%eax,1),%esi
mov    %edi,%eax
mov    %al,-0x1(%esi)
mov    0x2c(%esp),%eax
mov    %esi,0x807445c
mov    %esi,0x8074460
mov    %eax,0x8074464
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804eb98 <__sprintf_chk@plt+0x4a58>
mov    0x8074400,%eax
mov    0x8074404,%edx
mov    %ecx,0x1c(%esp)
movl   $0x0,0x80743f0
00
mov    %eax,0x80743d8
xor    %eax,%eax
mov    %edx,0x80743dc
lea    0x50(%esp),%edx
movl   $0x0,0x80743f4
00
movl   $0x0,0x80743e8
00
movl   $0x0,0x80743e0
00
movl   $0x0,0x80743e4
00
movl   $0x0,0x8074448
00
movl   $0x0,0x807444c
00
movl   $0x0,0x80743d0
00
movl   $0x0,0x80743d4
00
call   804cd20 <__sprintf_chk@plt+0x2be0>
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     804f27e <__sprintf_chk@plt+0x513e>
mov    0x8074440,%ebx
test   %ebx,%ebx
jne    804ebd1 <__sprintf_chk@plt+0x4a91>
mov    0x8074438,%eax
test   %eax,%eax
jne    804f184 <__sprintf_chk@plt+0x5044>
mov    0x807445c,%eax
mov    0x8074460,%ebp
mov    %eax,0x1c(%esp)
sub    %ebp,%eax
cmpb   $0x0,0x8075084
je     804f1d0 <__sprintf_chk@plt+0x5090>
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x28(%esp)
mov    %eax,0x20(%esp)
call   8049ea0 <memchr@plt>
mov    0x20(%esp),%edx
mov    0x28(%esp),%ecx
test   %eax,%eax
je     804f4c0 <__sprintf_chk@plt+0x5380>
cmp    $0x2,%ebx
je     804edfe <__sprintf_chk@plt+0x4cbe>
mov    0x8074438,%eax
mov    0x8074460,%esi
mov    0x807445c,%edi
movl   $0x1,0x3c(%esp)
mov    0x3c(%esp),%edx
xor    %ebp,%ebp
add    %edx,0x80743cc
movl   $0x0,0x28(%esp)
add    %edx,%eax
mov    %eax,0x8074438
movsbl %cl,%eax
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
mov    %eax,0x38(%esp)
jmp    804e87d <__sprintf_chk@plt+0x473d>
lea    0x0(%esi),%esi
cmp    %ebp,%ebx
je     804e7c6 <__sprintf_chk@plt+0x4686>
movl   $0x0,0x80743e8
00
mov    0x1c(%esp),%ebp
mov    0x8074428,%eax
add    0x28(%esp),%ebp
sub    %ebx,%ebp
test   %eax,%eax
je     804e848 <__sprintf_chk@plt+0x4708>
mov    0x807445c,%edi
mov    0x80743f0,%eax
mov    0x80743f4,%edx
sub    %esi,%edi
sub    %ebp,%edi
mov    %edi,%esi
xor    %edi,%edi
add    %eax,%esi
adc    %edx,%edi
cmp    %edi,%edx
jb     804e83c <__sprintf_chk@plt+0x46fc>
ja     804e800 <__sprintf_chk@plt+0x46c0>
cmp    %esi,%eax
jbe    804e83c <__sprintf_chk@plt+0x46fc>
movl   $0x5,0x8(%esp)
movl   $0x806c342,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x1c(%esp),%ecx
mov    %esi,0x80743f0
mov    %edi,0x80743f4
mov    0x807442c,%edi
test   %edi,%edi
jne    804ec90 <__sprintf_chk@plt+0x4b50>
lea    0x50(%esp),%edx
mov    %ebp,%eax
mov    %ecx,0x1c(%esp)
call   804cd20 <__sprintf_chk@plt+0x2be0>
test   %eax,%eax
je     804ed8f <__sprintf_chk@plt+0x4c4f>
mov    0x8074460,%esi
mov    0x807445c,%edi
mov    0x1c(%esp),%ecx
mov    0x80743e8,%ebx
mov    %esi,0x80743ec
test   %ebx,%ebx
je     804e897 <__sprintf_chk@plt+0x4757>
mov    0x8074460,%eax
mov    %eax,0x80743e8
lea    (%esi,%ebp,1),%ebx
cmp    %edi,%ebx
je     804f074 <__sprintf_chk@plt+0x4f34>
mov    %edi,%eax
movzbl -0x1(%ebx),%esi
sub    %ebx,%eax
add    $0x1,%eax
mov    %cl,-0x1(%ebx)
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x4(%esp)
lea    -0x1(%ebx),%eax
mov    %eax,(%esp)
call   8049d50 <memrchr@plt>
mov    0x20(%esp),%ecx
add    $0x1,%eax
mov    %eax,%edx
mov    %eax,0x1c(%esp)
cmp    %edx,%ebx
mov    %esi,%eax
mov    %al,-0x1(%ebx)
je     804ed46 <__sprintf_chk@plt+0x4c06>
mov    %ebx,%eax
sub    %edx,%edi
sub    0x28(%esp),%eax
mov    %edi,0x28(%esp)
cmp    %eax,%edx
jbe    804e95b <__sprintf_chk@plt+0x481b>
mov    0x80743dc,%edx
or     0x80743d8,%edx
jne    804ed71 <__sprintf_chk@plt+0x4c31>
mov    0x80743d4,%eax
or     0x80743d0,%eax
jne    804ed5b <__sprintf_chk@plt+0x4c1b>
mov    0x80743dc,%eax
or     0x80743d8,%eax
jne    804e936 <__sprintf_chk@plt+0x47f6>
mov    0x80743d4,%eax
or     0x80743d0,%eax
je     804edcc <__sprintf_chk@plt+0x4c8c>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
je     804e95b <__sprintf_chk@plt+0x481b>
mov    0x80743cc,%eax
test   %eax,%eax
je     804e95b <__sprintf_chk@plt+0x481b>
mov    0x8074434,%edx
test   %edx,%edx
je     804eec7 <__sprintf_chk@plt+0x4d87>
mov    0x8074420,%eax
xor    %edx,%edx
mov    0x8074424,%edi
mov    0x80743e8,%ebp
mov    0x8074460,%esi
mov    0x1c(%esp),%ebx
mov    %eax,0x20(%esp)
xor    %eax,%eax
xchg   %ax,%ax
cmp    %edi,%edx
jg     804e7b8 <__sprintf_chk@plt+0x4678>
jl     804e994 <__sprintf_chk@plt+0x4854>
cmp    0x20(%esp),%eax
jae    804e7b8 <__sprintf_chk@plt+0x4678>
cmp    %ebx,%esi
jae    804e7b8 <__sprintf_chk@plt+0x4678>
cmp    %ebp,%ebx
xchg   %ax,%ax
je     804e7c6 <__sprintf_chk@plt+0x4686>
add    $0x1,%eax
adc    $0x0,%edx
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ebx
cmp    -0x1(%ebx),%cl
jne    804e9b0 <__sprintf_chk@plt+0x4870>
jmp    804e980 <__sprintf_chk@plt+0x4840>
mov    %ecx,0x20(%esp)
call   8049e10 <getpagesize@plt>
test   %eax,%eax
mov    %eax,%ebx
mov    %eax,0x8074458
je     804f372 <__sprintf_chk@plt+0x5232>
lea    0x1(%eax,%eax,1),%eax
mov    0x20(%esp),%ecx
cmp    %eax,%ebx
jae    804f372 <__sprintf_chk@plt+0x5232>
xor    %edx,%edx
mov    $0x8000,%eax
div    %ebx
mov    $0x8000,%eax
test   %edx,%edx
je     804e9fc <__sprintf_chk@plt+0x48bc>
lea    0x8000(%ebx),%eax
sub    %edx,%eax
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
mov    %eax,0x8074468
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x8074458,%ebp
movzbl 0x8075084,%edi
mov    0x20(%esp),%ecx
mov    %eax,0x807446c
mov    %eax,%ebx
jmp    804e626 <__sprintf_chk@plt+0x44e6>
call   8049e90 <__errno_location@plt>
mov    0x80744a0,%ecx
mov    0x8074488,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804ea61 <__sprintf_chk@plt+0x4921>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
movl   $0x1,0x8074480
00
mov    $0x1,%ebp
mov    0x2c(%esp),%ebx
test   %ebx,%ebx
jne    804ead8 <__sprintf_chk@plt+0x4998>
add    $0x11c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
mov    0x8074230,%eax
je     804eb38 <__sprintf_chk@plt+0x49f8>
mov    0x60(%esp),%edx
mov    0x8074488,%ecx
and    $0xf000,%edx
cmp    $0x4000,%edx
jne    804eb1a <__sprintf_chk@plt+0x49da>
cmp    $0x4,%eax
je     804ead3 <__sprintf_chk@plt+0x4993>
mov    0x8074484,%esi
test   %esi,%esi
jne    804eb38 <__sprintf_chk@plt+0x49f8>
mov    0x807448c,%edx
test   %edx,%edx
je     804eb38 <__sprintf_chk@plt+0x49f8>
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   805c940 <__sprintf_chk@plt+0x12800>
test   %al,%al
je     804eb33 <__sprintf_chk@plt+0x49f3>
mov    $0x1,%ebp
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804a0e0 <close@plt>
test   %eax,%eax
je     804ea78 <__sprintf_chk@plt+0x4938>
call   8049e90 <__errno_location@plt>
mov    0x80744a0,%ecx
mov    0x8074488,%edx
test   %ecx,%ecx
mov    (%eax),%eax
je     804f053 <__sprintf_chk@plt+0x4f13>
movl   $0x1,0x8074480
00
add    $0x11c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8074490,%eax
test   %eax,%eax
je     804eb33 <__sprintf_chk@plt+0x49f3>
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   805c940 <__sprintf_chk@plt+0x12800>
test   %al,%al
jne    804ead3 <__sprintf_chk@plt+0x4993>
mov    0x8074230,%eax
cmp    $0x3,%eax
je     804ef53 <__sprintf_chk@plt+0x4e13>
cmp    $0x4,%eax
je     804ebb8 <__sprintf_chk@plt+0x4a78>
mov    0x8074478,%eax
cmp    $0x2,%eax
je     804eb60 <__sprintf_chk@plt+0x4a20>
test   %eax,%eax
jne    804e5a1 <__sprintf_chk@plt+0x4461>
test   %edi,%edi
jne    804e5a1 <__sprintf_chk@plt+0x4461>
mov    0x60(%esp),%eax
mov    %eax,%edx
and    $0xb000,%edx
cmp    $0x2000,%edx
je     804ead3 <__sprintf_chk@plt+0x4993>
and    $0xf000,%eax
cmp    $0xc000,%eax
je     804ead3 <__sprintf_chk@plt+0x4993>
cmp    $0x1000,%eax
jne    804e5a1 <__sprintf_chk@plt+0x4461>
jmp    804ead3 <__sprintf_chk@plt+0x4993>
cmpb   $0x0,0x1c(%esp)
je     804ebf8 <__sprintf_chk@plt+0x4ab8>
movl   $0x0,0x8074450
00
movl   $0x0,0x8074454
00
jmp    804e669 <__sprintf_chk@plt+0x4529>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804eb46 <__sprintf_chk@plt+0x4a06>
jmp    804ead3 <__sprintf_chk@plt+0x4993>
cmp    $0x2,%ebx
je     804e70f <__sprintf_chk@plt+0x45cf>
mov    0x8074438,%eax
mov    0x8074460,%esi
mov    0x807445c,%edi
movl   $0x0,0x3c(%esp)
jmp    804e77b <__sprintf_chk@plt+0x463b>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   8049fc0 <lseek64@plt>
mov    0x1c(%esp),%ecx
test   %edx,%edx
mov    %eax,0x8074450
mov    %edx,0x8074454
jns    804e669 <__sprintf_chk@plt+0x4529>
call   8049e90 <__errno_location@plt>
mov    (%eax),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806c396,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    0x80744a0,%esi
test   %esi,%esi
jne    804f2b3 <__sprintf_chk@plt+0x5173>
mov    %eax,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
jmp    804f2b3 <__sprintf_chk@plt+0x5173>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80743ec,%eax
cmp    %ebx,%eax
jae    804f275 <__sprintf_chk@plt+0x5135>
mov    %ebp,0x1c(%esp)
movzbl 0x8075084,%edi
xor    %esi,%esi
mov    %ecx,%ebp
jmp    804ecba <__sprintf_chk@plt+0x4b7a>
xchg   %ax,%ax
add    $0x1,%eax
add    $0x1,%esi
cmp    %ebx,%eax
jae    804ecd2 <__sprintf_chk@plt+0x4b92>
mov    %ebx,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
jne    804ecb0 <__sprintf_chk@plt+0x4b70>
mov    %ebp,%ecx
mov    0x1c(%esp),%ebp
xor    %edi,%edi
mov    0x80743e0,%eax
mov    0x80743e4,%edx
add    %eax,%esi
adc    %edx,%edi
cmp    %edi,%edx
jb     804ed2f <__sprintf_chk@plt+0x4bef>
ja     804ecf3 <__sprintf_chk@plt+0x4bb3>
cmp    %esi,%eax
jbe    804ed2f <__sprintf_chk@plt+0x4bef>
movl   $0x5,0x8(%esp)
movl   $0x806c342,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x1c(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    0x1c(%esp),%ecx
mov    %esi,0x80743e0
mov    %edi,0x80743e4
mov    %ebx,0x80743ec
jmp    804e856 <__sprintf_chk@plt+0x4716>
mov    0x28(%esp),%eax
sub    %eax,0x1c(%esp)
sub    0x1c(%esp),%edi
mov    %edi,0x28(%esp)
jmp    804e95b <__sprintf_chk@plt+0x481b>
mov    0x1c(%esp),%eax
mov    %ecx,0x20(%esp)
call   804dba0 <__sprintf_chk@plt+0x3a60>
mov    0x20(%esp),%ecx
jmp    804e918 <__sprintf_chk@plt+0x47d8>
mov    0x1c(%esp),%edx
mov    %ecx,0x20(%esp)
call   804e0a0 <__sprintf_chk@plt+0x3f60>
mov    0x20(%esp),%ecx
add    %eax,0x30(%esp)
adc    %edx,0x34(%esp)
jmp    804e907 <__sprintf_chk@plt+0x47c7>
call   8049e90 <__errno_location@plt>
mov    0x80744a0,%esi
mov    0x8074488,%edx
test   %esi,%esi
mov    (%eax),%eax
jne    804edc2 <__sprintf_chk@plt+0x4c82>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
movl   $0x1,0x8074480
00
mov    0x3c(%esp),%edx
mov    0x8074438,%eax
sub    %edx,0x80743cc
sub    %edx,%eax
mov    %eax,0x8074438
not    %eax
test   %eax,%edx
je     804ef1a <__sprintf_chk@plt+0x4dda>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,%edi
or     %eax,%edi
jne    804eee4 <__sprintf_chk@plt+0x4da4>
mov    $0xffffffff,%ebx
mov    $0x1,%ebp
xor    %esi,%esi
xor    %edi,%edi
mov    0x8074410,%eax
test   %eax,%eax
je     804ee3e <__sprintf_chk@plt+0x4cfe>
mov    0x8074430,%eax
test   %eax,%eax
jne    804f123 <__sprintf_chk@plt+0x4fe3>
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
movl   $0x806c3bb,0x4(%esp)
movl   $0x1,(%esp)
call   8049ef0 <__printf_chk@plt>
cmp    %ebx,0x807440c
je     804f0c0 <__sprintf_chk@plt+0x4f80>
mov    0x2c(%esp),%esi
test   %esi,%esi
jne    804ead8 <__sprintf_chk@plt+0x4998>
mov    0x80743dc,%eax
or     0x80743d8,%eax
jne    804ea78 <__sprintf_chk@plt+0x4938>
mov    0x8074448,%edx
mov    0x807444c,%eax
mov    0x8074454,%ebx
mov    0x8074450,%ecx
xor    %eax,%ebx
xor    %edx,%ecx
or     %ecx,%ebx
je     804ea78 <__sprintf_chk@plt+0x4938>
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,(%esp)
call   8049fc0 <lseek64@plt>
test   %edx,%edx
jns    804ea78 <__sprintf_chk@plt+0x4938>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
jne    804ea78 <__sprintf_chk@plt+0x4938>
jmp    804eae8 <__sprintf_chk@plt+0x49a8>
mov    0x3c(%esp),%edx
sub    %edx,%eax
mov    %eax,0x80743cc
mov    0x8074438,%eax
sub    %edx,%eax
mov    %eax,0x8074438
not    %eax
test   %eax,%edx
je     804ef1a <__sprintf_chk@plt+0x4dda>
movl   $0x5,0x8(%esp)
mov    0x8074488,%ebx
movl   $0x806c3a3,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x34(%esp),%ecx
test   %ecx,%ecx
js     804ef47 <__sprintf_chk@plt+0x4e07>
mov    0x30(%esp),%esi
mov    $0x1,%edx
mov    0x34(%esp),%edi
mov    %esi,%eax
or     %edi,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%ebx
mov    %eax,%ebp
neg    %ebx
lea    (%edx,%ebx,2),%ebx
jmp    804ee0c <__sprintf_chk@plt+0x4ccc>
mov    0x30(%esp),%ebp
add    $0x2,%ebp
jmp    804ea70 <__sprintf_chk@plt+0x4930>
mov    0x60(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    804eb46 <__sprintf_chk@plt+0x4a06>
mov    0x2c(%esp),%eax
xor    %ebx,%ebx
test   %edi,%edi
sete   %bl
not    %ebx
and    0x807422c,%ebx
mov    %eax,(%esp)
call   804a0e0 <close@plt>
test   %eax,%eax
jne    804f637 <__sprintf_chk@plt+0x54f7>
mov    0x8074488,%eax
mov    %eax,0x48(%esp)
lea    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x4c(%esp)
call   8067bf0 <fts_open>
test   %eax,%eax
mov    %eax,%esi
je     804f632 <__sprintf_chk@plt+0x54f2>
mov    $0x1,%ebp
mov    %esi,(%esp)
mov    %ebp,0x20(%esp)
mov    %edi,0x28(%esp)
call   8068490 <fts_read>
test   %eax,%eax
mov    %eax,%ebp
je     804f018 <__sprintf_chk@plt+0x4ed8>
mov    0x30(%ebp),%eax
xor    %ebx,%ebx
test   %eax,%eax
movzwl 0x3c(%ebp),%eax
sete   %bl
and    0x28(%esp),%ebx
cmp    $0x6,%ax
jne    804f3f0 <__sprintf_chk@plt+0x52b0>
cmpl   $0x3,0x8074230
je     804f4e0 <__sprintf_chk@plt+0x53a0>
mov    $0x1,%eax
mov    %esi,(%esp)
and    %eax,0x20(%esp)
call   8068490 <fts_read>
test   %eax,%eax
mov    %eax,%ebp
jne    804efd8 <__sprintf_chk@plt+0x4e98>
call   8049e90 <__errno_location@plt>
mov    0x20(%esp),%ebp
mov    %eax,%ebx
mov    (%eax),%eax
test   %eax,%eax
jne    804f75a <__sprintf_chk@plt+0x561a>
mov    %esi,(%esp)
call   80682b0 <fts_close>
test   %eax,%eax
je     804ea78 <__sprintf_chk@plt+0x4938>
mov    0x80744a0,%ecx
mov    (%ebx),%eax
mov    0x8074488,%edx
test   %ecx,%ecx
jne    804eb03 <__sprintf_chk@plt+0x49c3>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
jmp    804eb03 <__sprintf_chk@plt+0x49c3>
mov    0x28(%esp),%ebx
test   %ebx,%ebx
je     804edcc <__sprintf_chk@plt+0x4c8c>
mov    0x80743dc,%eax
lea    0x1(%edi),%edx
or     0x80743d8,%eax
mov    %edx,0x807445c
mov    %cl,(%edi)
jne    804f3d1 <__sprintf_chk@plt+0x5291>
mov    0x80743d4,%eax
or     0x80743d0,%eax
je     804edcc <__sprintf_chk@plt+0x4c8c>
mov    0x807445c,%eax
call   804dba0 <__sprintf_chk@plt+0x3a60>
jmp    804edcc <__sprintf_chk@plt+0x4c8c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x807449c,%edx
mov    0x8074250,%eax
test   %edx,%edx
jne    804f353 <__sprintf_chk@plt+0x5213>
mov    0x8074320,%eax
mov    %eax,0x4(%esp)
mov    0x8074488,%eax
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
mov    0x807449c,%edi
mov    0x8074250,%eax
test   %edi,%edi
jne    804f2c2 <__sprintf_chk@plt+0x5182>
mov    0x8074320,%edx
mov    0x807443c,%eax
mov    0x14(%edx),%ecx
and    $0xa,%eax
cmp    0x18(%edx),%ecx
jae    804f3c0 <__sprintf_chk@plt+0x5280>
lea    0x1(%ecx),%ebx
mov    %ebx,0x14(%edx)
mov    %al,(%ecx)
jmp    804ee4a <__sprintf_chk@plt+0x4d0a>
mov    0x807449c,%ecx
mov    0x8074250,%eax
test   %ecx,%ecx
jne    804f1b0 <__sprintf_chk@plt+0x5070>
mov    0x8074320,%eax
mov    %eax,0x4(%esp)
mov    0x8074488,%eax
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
mov    0x807449c,%edx
mov    0x8074250,%eax
test   %edx,%edx
jne    804f195 <__sprintf_chk@plt+0x5055>
mov    0x807443c,%ecx
test   %ecx,%ecx
jne    804f204 <__sprintf_chk@plt+0x50c4>
mov    0x8074320,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804f3ab <__sprintf_chk@plt+0x526b>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x0,(%edx)
jmp    804ee22 <__sprintf_chk@plt+0x4ce2>
mov    0x8074460,%esi
mov    0x807445c,%edi
jmp    804ebeb <__sprintf_chk@plt+0x4aab>
cmpb   $0x0,(%eax)
je     804f157 <__sprintf_chk@plt+0x5017>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804f157 <__sprintf_chk@plt+0x5017>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%eax)
je     804f132 <__sprintf_chk@plt+0x4ff2>
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
jmp    804f132 <__sprintf_chk@plt+0x4ff2>
nop
mov    %eax,0x8(%esp)
movl   $0xffffff80,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x20(%esp)
call   8049ea0 <memchr@plt>
mov    0x20(%esp),%ecx
test   %eax,%eax
jne    804e759 <__sprintf_chk@plt+0x4619>
mov    0x8074438,%eax
mov    %ebp,%esi
mov    0x1c(%esp),%edi
jmp    804ebeb <__sprintf_chk@plt+0x4aab>
mov    0x807449c,%edx
mov    0x8074244,%eax
test   %edx,%edx
jne    804f38c <__sprintf_chk@plt+0x524c>
mov    0x8074320,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804f377 <__sprintf_chk@plt+0x5237>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0x3a,(%edx)
mov    0x807449c,%ecx
mov    0x8074244,%eax
test   %ecx,%ecx
je     804ee22 <__sprintf_chk@plt+0x4ce2>
cmpb   $0x0,(%eax)
je     804ee22 <__sprintf_chk@plt+0x4ce2>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804ee22 <__sprintf_chk@plt+0x4ce2>
nop
cmpl   $0x1,0x8074400
jbe    804e5fc <__sprintf_chk@plt+0x44bc>
lea    0x0(%esi),%esi
jmp    804e5c4 <__sprintf_chk@plt+0x4484>
xor    %esi,%esi
xor    %edi,%edi
jmp    804ecda <__sprintf_chk@plt+0x4b9a>
xchg   %ax,%ax
call   8049e90 <__errno_location@plt>
mov    0x80744a0,%ecx
mov    0x8074488,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804f2b3 <__sprintf_chk@plt+0x5173>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
movl   $0x1,0x8074480
00
jmp    804edfe <__sprintf_chk@plt+0x4cbe>
cmpb   $0x0,(%eax)
je     804f0fc <__sprintf_chk@plt+0x4fbc>
mov    0x8074234,%eax
mov    %eax,(%esp)
call   8066740 <__sprintf_chk@plt+0x1c600>
jmp    804f0fc <__sprintf_chk@plt+0x4fbc>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edx
xor    0x80744c4,%edx
xor    0x80744c0,%eax
or     %eax,%edx
jne    804e5fc <__sprintf_chk@plt+0x44bc>
mov    0x80744a0,%edi
test   %edi,%edi
jne    804ea61 <__sprintf_chk@plt+0x4921>
mov    0x8074488,%eax
mov    %eax,(%esp)
call   8062ea0 <__sprintf_chk@plt+0x18d60>
movl   $0x5,0x8(%esp)
movl   $0x806c780,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049a90 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
jmp    804ea61 <__sprintf_chk@plt+0x4921>
cmpb   $0x0,(%eax)
je     804f0d3 <__sprintf_chk@plt+0x4f93>
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
jmp    804f0d3 <__sprintf_chk@plt+0x4f93>
call   804a080 <abort@plt>
movl   $0x3a,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <__overflow@plt>
jmp    804f231 <__sprintf_chk@plt+0x50f1>
cmpb   $0x0,(%eax)
je     804f217 <__sprintf_chk@plt+0x50d7>
mov    %eax,0x4(%esp)
mov    0x8074238,%eax
mov    %eax,(%esp)
call   8066710 <__sprintf_chk@plt+0x1c5d0>
jmp    804f217 <__sprintf_chk@plt+0x50d7>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049f70 <__overflow@plt>
jmp    804ee22 <__sprintf_chk@plt+0x4ce2>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049f70 <__overflow@plt>
jmp    804ee4a <__sprintf_chk@plt+0x4d0a>
mov    %ebp,%eax
sub    0x28(%esp),%eax
add    %esi,%eax
call   804e0a0 <__sprintf_chk@plt+0x3f60>
add    %eax,0x30(%esp)
adc    %edx,0x34(%esp)
jmp    804f09c <__sprintf_chk@plt+0x4f5c>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%eax),%ecx
cmp    $0x1,%cx
lea    0xa4(%ebp),%edi
jbe    804f405 <__sprintf_chk@plt+0x52c5>
cmp    $0x4,%ax
jne    804f47c <__sprintf_chk@plt+0x533c>
cmpl   $0x4,0x8074230
je     804f4a2 <__sprintf_chk@plt+0x5362>
test   %ebx,%ebx
je     804f420 <__sprintf_chk@plt+0x52e0>
mov    0x8074484,%ecx
test   %ecx,%ecx
jne    804f444 <__sprintf_chk@plt+0x5304>
mov    0x807448c,%ecx
test   %ecx,%ecx
je     804f49a <__sprintf_chk@plt+0x535a>
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   805c940 <__sprintf_chk@plt+0x12800>
test   %al,%al
jne    804f4a2 <__sprintf_chk@plt+0x5362>
mov    0x8074484,%ecx
movzwl 0x3c(%ebp),%eax
mov    0x1c(%ebp),%edi
movl   $0x1,0x1c(%esp)
add    %ecx,%edi
mov    0x2c(%esi),%ecx
mov    %edi,0x8074488
mov    %ecx,%edx
and    $0x2,%edx
jne    804f46b <__sprintf_chk@plt+0x532b>
test   $0x1,%cl
cmovne %ebx,%edx
mov    %edx,0x1c(%esp)
cmp    $0xe,%ax
ja     804f372 <__sprintf_chk@plt+0x5232>
jmp    *0x806d7e0(,%eax,4)
mov    0x8074490,%ecx
test   %ecx,%ecx
je     804f49a <__sprintf_chk@plt+0x535a>
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   805c940 <__sprintf_chk@plt+0x12800>
test   %al,%al
jne    804f4a2 <__sprintf_chk@plt+0x5362>
movzwl 0x3c(%ebp),%eax
mov    0x8074484,%ecx
jmp    804f444 <__sprintf_chk@plt+0x5304>
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8068ec0 <fts_set>
mov    $0x1,%eax
jmp    804f006 <__sprintf_chk@plt+0x4ec6>
mov    0x60(%esp),%eax
mov    %ebp,%esi
mov    0x1c(%esp),%edi
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804f507 <__sprintf_chk@plt+0x53c7>
mov    0x8074438,%eax
jmp    804ebeb <__sprintf_chk@plt+0x4aab>
test   %ebx,%ebx
je     804f001 <__sprintf_chk@plt+0x4ec1>
cmpl   $0x1,0x8074408
sbb    %eax,%eax
and    $0xfffffffe,%eax
sub    $0x1,%eax
and    %eax,0x8074430
mov    $0x1,%eax
jmp    804f006 <__sprintf_chk@plt+0x4ec6>
mov    0x2c(%esp),%eax
mov    %edx,0x20(%esp)
movl   $0x0,0x24(%esp)
test   %eax,%eax
jne    804f54f <__sprintf_chk@plt+0x540f>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
call   8049fc0 <lseek64@plt>
mov    0x28(%esp),%ecx
test   %edx,%edx
mov    %eax,0x20(%esp)
mov    %edx,0x24(%esp)
js     804f4d6 <__sprintf_chk@plt+0x5396>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    0x2c(%esp),%edi
movl   $0x4,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %edi,(%esp)
mov    %ecx,0x28(%esp)
call   8049fc0 <lseek64@plt>
mov    0x28(%esp),%ecx
test   %edx,%edx
mov    %eax,%esi
mov    %edx,%ebx
js     804f627 <__sprintf_chk@plt+0x54e7>
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x1c(%esp)
call   8049fc0 <lseek64@plt>
mov    0x1c(%esp),%ecx
test   %edx,%edx
js     804f5e0 <__sprintf_chk@plt+0x54a0>
cmp    0x80(%esp),%ebx
jl     804f5d5 <__sprintf_chk@plt+0x5495>
jg     804f5c4 <__sprintf_chk@plt+0x5484>
cmp    0x7c(%esp),%esi
jb     804f5d5 <__sprintf_chk@plt+0x5495>
mov    0x8074460,%esi
mov    0x807445c,%edi
jmp    804f4d6 <__sprintf_chk@plt+0x5396>
mov    0x8074440,%ebx
jmp    804e759 <__sprintf_chk@plt+0x4619>
call   8049e90 <__errno_location@plt>
mov    0x80744a0,%edi
mov    0x8074488,%edx
mov    0x1c(%esp),%ecx
test   %edi,%edi
mov    (%eax),%eax
jne    804f61b <__sprintf_chk@plt+0x54db>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
mov    0x1c(%esp),%ecx
movl   $0x1,0x8074480
00
jmp    804f5b3 <__sprintf_chk@plt+0x5473>
mov    0x1c(%esp),%edi
mov    %ebp,%esi
jmp    804f4d6 <__sprintf_chk@plt+0x5396>
call   80652b0 <__sprintf_chk@plt+0x1b170>
call   8049e90 <__errno_location@plt>
mov    0x80744a0,%ecx
test   %ecx,%ecx
mov    (%eax),%edx
mov    0x8074488,%eax
jne    804f66e <__sprintf_chk@plt+0x552e>
mov    %eax,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
mov    0x8074488,%eax
movl   $0x1,0x8074480
00
jmp    804ef8f <__sprintf_chk@plt+0x4e4f>
mov    0x8074478,%eax
cmp    $0x2,%eax
je     804f693 <__sprintf_chk@plt+0x5553>
test   %eax,%eax
jne    804f711 <__sprintf_chk@plt+0x55d1>
test   %ebx,%ebx
jne    804f711 <__sprintf_chk@plt+0x55d1>
mov    0x54(%ebp),%eax
test   %eax,%eax
jne    804f6de <__sprintf_chk@plt+0x559e>
cmpl   $0x1,0x1c(%esp)
sbb    %eax,%eax
and    $0x100,%eax
mov    %eax,0x10(%esp)
lea    0xb0(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%ebp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esi),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   8049b50 <__fxstatat64@plt>
test   %eax,%eax
jne    804f83e <__sprintf_chk@plt+0x56fe>
mov    0xc0(%esp),%eax
mov    %eax,%ecx
and    $0xb000,%eax
and    $0xf000,%ecx
cmp    $0x2000,%eax
je     804f001 <__sprintf_chk@plt+0x4ec1>
cmp    $0xc000,%ecx
je     804f001 <__sprintf_chk@plt+0x4ec1>
cmp    $0x1000,%ecx
je     804f001 <__sprintf_chk@plt+0x4ec1>
mov    0x2c(%esi),%ecx
and    $0x204,%ecx
mov    $0xffffff9c,%eax
cmp    $0x200,%ecx
jne    804f727 <__sprintf_chk@plt+0x55e7>
mov    0x1c(%esi),%eax
mov    0x1c(%esp),%ecx
mov    0x18(%ebp),%edx
test   %ecx,%ecx
je     804f7dc <__sprintf_chk@plt+0x569c>
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805eed0 <__sprintf_chk@plt+0x14d90>
test   %eax,%eax
js     804f795 <__sprintf_chk@plt+0x5655>
mov    %ebx,%edx
call   804e560 <__sprintf_chk@plt+0x4420>
jmp    804f006 <__sprintf_chk@plt+0x4ec6>
mov    0x80744a0,%edi
mov    0x8074488,%edx
test   %edi,%edi
jne    804f786 <__sprintf_chk@plt+0x5646>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
movl   $0x1,0x8074480
00
jmp    804f02d <__sprintf_chk@plt+0x4eed>
call   8049e90 <__errno_location@plt>
mov    (%eax),%eax
mov    0x80744a0,%ebp
mov    0x8074488,%edx
test   %ebp,%ebp
jne    804f7c8 <__sprintf_chk@plt+0x5688>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
movl   $0x1,0x8074480
00
mov    $0x1,%eax
jmp    804f006 <__sprintf_chk@plt+0x4ec6>
movl   $0x20000,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   805eed0 <__sprintf_chk@plt+0x14d90>
test   %eax,%eax
jns    804f74e <__sprintf_chk@plt+0x560e>
call   8049e90 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x1f,%eax
je     804f001 <__sprintf_chk@plt+0x4ec1>
cmp    $0x28,%eax
je     804f001 <__sprintf_chk@plt+0x4ec1>
jmp    804f79c <__sprintf_chk@plt+0x565c>
mov    0x20(%ebp),%eax
mov    0x80744a0,%ebp
test   %ebp,%ebp
jne    804f7c8 <__sprintf_chk@plt+0x5688>
mov    %edi,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
jmp    804f7c8 <__sprintf_chk@plt+0x5688>
call   8049e90 <__errno_location@plt>
mov    0x80744a0,%ebx
test   %ebx,%ebx
mov    (%eax),%eax
jne    804f86b <__sprintf_chk@plt+0x572b>
mov    %edi,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
movl   $0x1,0x8074480
00
jmp    804f001 <__sprintf_chk@plt+0x4ec1>
mov    0x80744a0,%eax
test   %eax,%eax
jne    804f001 <__sprintf_chk@plt+0x4ec1>
movl   $0x5,0x8(%esp)
movl   $0x806c36d,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c386,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   8049a90 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8049c40 <error@plt>
mov    $0x1,%eax
jmp    804f006 <__sprintf_chk@plt+0x4ec6>
cmpl   $0x3,0x8074230
jne    804f910 <__sprintf_chk@plt+0x57d0>
cmpl   $0x1,0x8074408
sbb    %eax,%eax
and    $0x2,%eax
or     %eax,0x8074430
mov    $0x1,%eax
jmp    804f006 <__sprintf_chk@plt+0x4ec6>
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8068ec0 <fts_set>
mov    0x2c(%esi),%ecx
jmp    804f711 <__sprintf_chk@plt+0x55d1>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
cmpb   $0x2d,(%eax)
je     804f968 <__sprintf_chk@plt+0x5828>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0xffffff9c,(%esp)
mov    %eax,0x8074488
call   805eed0 <__sprintf_chk@plt+0x14d90>
test   %eax,%eax
js     804f990 <__sprintf_chk@plt+0x5850>
mov    $0x1,%edx
add    $0x1c,%esp
jmp    804e560 <__sprintf_chk@plt+0x4420>
xchg   %ax,%ax
cmpb   $0x0,0x1(%eax)
jne    804f938 <__sprintf_chk@plt+0x57f8>
mov    0x80743f8,%eax
test   %eax,%eax
je     804f9d8 <__sprintf_chk@plt+0x5898>
mov    %eax,0x8074488
mov    $0x1,%edx
xor    %eax,%eax
add    $0x1c,%esp
jmp    804e560 <__sprintf_chk@plt+0x4420>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e90 <__errno_location@plt>
mov    0x80744a0,%ecx
mov    0x8074488,%edx
test   %ecx,%ecx
mov    (%eax),%eax
jne    804f9c3 <__sprintf_chk@plt+0x5883>
mov    %edx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049c40 <error@plt>
movl   $0x1,0x8074480
00
mov    $0x1,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
movl   $0x5,0x8(%esp)
movl   $0x806c3c1,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
jmp    804f977 <__sprintf_chk@plt+0x5837>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x8074b28,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806c7a4,0x4(%esp)
movl   $0x0,(%esp)
test   %ebx,%ebx
je     804fa93 <__sprintf_chk@plt+0x5953>
call   8049a90 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80742c4,%eax
mov    %eax,(%esp)
call   804a010 <__fprintf_chk@plt>
mov    0x8074b28,%esi
movl   $0x5,0x8(%esp)
movl   $0x806c7d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80742c4,%eax
mov    %eax,(%esp)
call   804a010 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8049cf0 <exit@plt>
call   8049a90 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c7f8,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x8074320,%esi
movl   $0x5,0x8(%esp)
movl   $0x806c140,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
mov    0x8074b28,%esi
movl   $0x5,0x8(%esp)
movl   $0x806c82c,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
cmpl   $0x0,0x806c18c
je     804fb71 <__sprintf_chk@plt+0x5a31>
movl   $0x5,0x8(%esp)
movl   $0x806c880,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c9a8,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806cb14,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806cc44,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806ce14,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806cf5c,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d114,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d244,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d398,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d468,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x8074320,%esi
movl   $0x5,0x8(%esp)
movl   $0x806c0c0,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
movl   $0x5,0x8(%esp)
movl   $0x806d5fc,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c3d2,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x806c3e7,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806c3f8,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x806d70c,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x8074320,%esi
movl   $0x5,0x8(%esp)
movl   $0x806d730,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
jmp    804fa8b <__sprintf_chk@plt+0x594b>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,0x8(%esp)
je     80504b2 <__sprintf_chk@plt+0x6372>
mov    (%eax),%eax
mov    %edx,%ebx
test   %eax,%eax
mov    %eax,0x4(%esp)
je     805015a <__sprintf_chk@plt+0x601a>
mov    (%eax),%esi
test   %esi,%esi
je     804ffdc <__sprintf_chk@plt+0x5e9c>
mov    (%esi),%edi
test   %edi,%edi
je     804ff26 <__sprintf_chk@plt+0x5de6>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804fea7 <__sprintf_chk@plt+0x5d67>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804fe6b <__sprintf_chk@plt+0x5d2b>
mov    (%ecx),%eax
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050538 <__sprintf_chk@plt+0x63f8>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050528 <__sprintf_chk@plt+0x63e8>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804fee2 <__sprintf_chk@plt+0x5da2>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050568 <__sprintf_chk@plt+0x6428>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%eax
mov    0x8(%ecx),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     80504e0 <__sprintf_chk@plt+0x63a0>
mov    (%edi),%ebp
test   %ebp,%ebp
je     804ffa3 <__sprintf_chk@plt+0x5e63>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     804ff67 <__sprintf_chk@plt+0x5e27>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050570 <__sprintf_chk@plt+0x6430>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050520 <__sprintf_chk@plt+0x63e0>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    (%ebx),%eax
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     80504c0 <__sprintf_chk@plt+0x6380>
mov    (%esi),%edi
test   %edi,%edi
je     8050098 <__sprintf_chk@plt+0x5f58>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050067 <__sprintf_chk@plt+0x5f27>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     805002b <__sprintf_chk@plt+0x5eeb>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050558 <__sprintf_chk@plt+0x6418>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     80504f8 <__sprintf_chk@plt+0x63b8>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     80504e8 <__sprintf_chk@plt+0x63a8>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050115 <__sprintf_chk@plt+0x5fd5>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     80500d9 <__sprintf_chk@plt+0x5f99>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050540 <__sprintf_chk@plt+0x6400>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050530 <__sprintf_chk@plt+0x63f0>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%esi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%esp),%esi
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x4(%esp)
je     80504d0 <__sprintf_chk@plt+0x6390>
mov    (%eax),%esi
test   %esi,%esi
je     805032c <__sprintf_chk@plt+0x61ec>
mov    (%esi),%edi
test   %edi,%edi
je     8050224 <__sprintf_chk@plt+0x60e4>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80501a5 <__sprintf_chk@plt+0x6065>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050510 <__sprintf_chk@plt+0x63d0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     80501e0 <__sprintf_chk@plt+0x60a0>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050548 <__sprintf_chk@plt+0x6408>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%eax
mov    0x8(%ecx),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     80504f0 <__sprintf_chk@plt+0x63b0>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80502a1 <__sprintf_chk@plt+0x6161>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     8050265 <__sprintf_chk@plt+0x6125>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050550 <__sprintf_chk@plt+0x6410>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050500 <__sprintf_chk@plt+0x63c0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     80502dc <__sprintf_chk@plt+0x619c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050560 <__sprintf_chk@plt+0x6420>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    0x4(%esp),%eax
mov    %edx,(%ebx)
mov    0x4(%eax),%esi
test   %esi,%esi
je     80504c8 <__sprintf_chk@plt+0x6388>
mov    (%esi),%edi
test   %edi,%edi
je     80503e4 <__sprintf_chk@plt+0x62a4>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80503b3 <__sprintf_chk@plt+0x6273>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     8050377 <__sprintf_chk@plt+0x6237>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050578 <__sprintf_chk@plt+0x6438>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050508 <__sprintf_chk@plt+0x63c8>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%edi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esi),%edi
test   %edi,%edi
je     80504d8 <__sprintf_chk@plt+0x6398>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050413 <__sprintf_chk@plt+0x62d3>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    (%ebx),%edx
mov    0x8(%ebp),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050518 <__sprintf_chk@plt+0x63d8>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     805044e <__sprintf_chk@plt+0x630e>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050580 <__sprintf_chk@plt+0x6440>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0xc(%esp),%ecx
mov    (%ebx),%edx
mov    0x8(%ecx),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%ebp),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x8(%edi),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0xc(%edx)
mov    %eax,(%ebx)
mov    0x8(%esp),%esi
mov    0x8(%esi),%edx
mov    %edx,0xc(%eax)
mov    %edx,(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%ebx),%eax
jmp    805014e <__sprintf_chk@plt+0x600e>
nop
mov    (%ebx),%edx
jmp    805049a <__sprintf_chk@plt+0x635a>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    80504a6 <__sprintf_chk@plt+0x6366>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    8050492 <__sprintf_chk@plt+0x6352>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
jmp    804ffd4 <__sprintf_chk@plt+0x5e94>
nop
mov    (%ebx),%edx
jmp    8050146 <__sprintf_chk@plt+0x6006>
nop
mov    (%ebx),%eax
jmp    8050320 <__sprintf_chk@plt+0x61e0>
nop
mov    (%ebx),%eax
jmp    8050090 <__sprintf_chk@plt+0x5f50>
nop
mov    (%ebx),%edx
jmp    8050318 <__sprintf_chk@plt+0x61d8>
nop
mov    (%ebx),%eax
jmp    80503dc <__sprintf_chk@plt+0x629c>
nop
mov    (%ebx),%eax
jmp    805021c <__sprintf_chk@plt+0x60dc>
nop
mov    (%ebx),%edx
jmp    805048a <__sprintf_chk@plt+0x634a>
nop
mov    (%ebx),%edx
jmp    804ffcc <__sprintf_chk@plt+0x5e8c>
nop
mov    (%ebx),%eax
jmp    804ff1e <__sprintf_chk@plt+0x5dde>
nop
mov    (%ebx),%eax
jmp    805013e <__sprintf_chk@plt+0x5ffe>
nop
mov    (%ebx),%eax
jmp    804fe9f <__sprintf_chk@plt+0x5d5f>
nop
mov    (%ebx),%eax
jmp    805010d <__sprintf_chk@plt+0x5fcd>
nop
mov    (%ebx),%edx
jmp    8050214 <__sprintf_chk@plt+0x60d4>
nop
mov    (%ebx),%eax
jmp    8050299 <__sprintf_chk@plt+0x6159>
nop
mov    (%ebx),%eax
jmp    805005f <__sprintf_chk@plt+0x5f1f>
nop
mov    (%ebx),%eax
jmp    8050310 <__sprintf_chk@plt+0x61d0>
nop
mov    (%ebx),%edx
jmp    804ff16 <__sprintf_chk@plt+0x5dd6>
nop
mov    (%ebx),%eax
jmp    804ff9b <__sprintf_chk@plt+0x5e5b>
nop
mov    (%ebx),%eax
jmp    80503ab <__sprintf_chk@plt+0x626b>
nop
mov    (%ebx),%eax
jmp    8050482 <__sprintf_chk@plt+0x6342>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,0x4(%esp)
je     8050b16 <__sprintf_chk@plt+0x69d6>
mov    (%eax),%eax
mov    %edx,%ebx
test   %eax,%eax
mov    %eax,0x8(%esp)
je     8050818 <__sprintf_chk@plt+0x66d8>
mov    (%eax),%esi
test   %esi,%esi
je     80506ee <__sprintf_chk@plt+0x65ae>
mov    (%esi),%edi
test   %edi,%edi
je     805063a <__sprintf_chk@plt+0x64fa>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80505e5 <__sprintf_chk@plt+0x64a5>
mov    0x0(%ebp),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050630 <__sprintf_chk@plt+0x64f0>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     805061c <__sprintf_chk@plt+0x64dc>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     80506e4 <__sprintf_chk@plt+0x65a4>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80506b5 <__sprintf_chk@plt+0x6575>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     805067b <__sprintf_chk@plt+0x653b>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     80506ab <__sprintf_chk@plt+0x656b>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     80506da <__sprintf_chk@plt+0x659a>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esi),%edx
movzbl 0xc(%esi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     805080e <__sprintf_chk@plt+0x66ce>
mov    (%esi),%edi
test   %edi,%edi
je     8050756 <__sprintf_chk@plt+0x6616>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050727 <__sprintf_chk@plt+0x65e7>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     805074c <__sprintf_chk@plt+0x660c>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     8050800 <__sprintf_chk@plt+0x66c0>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80507d1 <__sprintf_chk@plt+0x6691>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     8050797 <__sprintf_chk@plt+0x6657>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     80507c7 <__sprintf_chk@plt+0x6687>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     80507f6 <__sprintf_chk@plt+0x66b6>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
movzbl 0xc(%esi),%eax
mov    0x8(%esi),%edx
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     8050b08 <__sprintf_chk@plt+0x69c8>
mov    (%eax),%esi
test   %esi,%esi
je     805098e <__sprintf_chk@plt+0x684e>
mov    (%esi),%edi
test   %edi,%edi
je     805088e <__sprintf_chk@plt+0x674e>
mov    (%edi),%ebp
test   %ebp,%ebp
je     805085f <__sprintf_chk@plt+0x671f>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050884 <__sprintf_chk@plt+0x6744>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     8050984 <__sprintf_chk@plt+0x6844>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050909 <__sprintf_chk@plt+0x67c9>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     80508cf <__sprintf_chk@plt+0x678f>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     80508ff <__sprintf_chk@plt+0x67bf>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     805097a <__sprintf_chk@plt+0x683a>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     8050940 <__sprintf_chk@plt+0x6800>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050970 <__sprintf_chk@plt+0x6830>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esi),%edx
movzbl 0xc(%esi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8050afe <__sprintf_chk@plt+0x69be>
mov    (%esi),%edi
test   %edi,%edi
je     8050a46 <__sprintf_chk@plt+0x6906>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050a17 <__sprintf_chk@plt+0x68d7>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     80509dd <__sprintf_chk@plt+0x689d>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050a0d <__sprintf_chk@plt+0x68cd>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050a3c <__sprintf_chk@plt+0x68fc>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esi),%edi
test   %edi,%edi
je     8050af0 <__sprintf_chk@plt+0x69b0>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050a75 <__sprintf_chk@plt+0x6935>
mov    0x0(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050ae6 <__sprintf_chk@plt+0x69a6>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
je     8050aac <__sprintf_chk@plt+0x696c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8050adc <__sprintf_chk@plt+0x699c>
mov    (%ecx),%eax
mov    %ebx,%edx
mov    %ecx,0xc(%esp)
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    %ebx,%edx
mov    0x4(%ecx),%eax
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0xc(%esp),%ecx
mov    0x8(%ecx),%edx
movzbl 0xc(%ecx),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%ebp),%edx
movzbl 0xc(%ebp),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x8(%edi),%edx
movzbl 0xc(%edi),%eax
mov    %edx,(%ebx,%eax,4)
movzbl 0xc(%esi),%eax
mov    0x8(%esi),%edx
mov    %edx,(%ebx,%eax,4)
mov    0x8(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
mov    0x4(%esp),%eax
mov    0x8(%eax),%edx
movzbl 0xc(%eax),%eax
mov    %edx,(%ebx,%eax,4)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
test   %eax,%eax
mov    %eax,(%esp)
je     8051042 <__sprintf_chk@plt+0x6f02>
mov    (%eax),%eax
mov    %edx,%ebx
mov    %ecx,%esi
test   %eax,%eax
mov    %eax,0x4(%esp)
je     8050d64 <__sprintf_chk@plt+0x6c24>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     8050c46 <__sprintf_chk@plt+0x6b06>
mov    (%eax),%edi
test   %edi,%edi
je     8050bbe <__sprintf_chk@plt+0x6a7e>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050b81 <__sprintf_chk@plt+0x6a41>
mov    0x0(%ebp),%eax
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050b81 <__sprintf_chk@plt+0x6a41>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050baf <__sprintf_chk@plt+0x6a6f>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050baf <__sprintf_chk@plt+0x6a6f>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050bbe <__sprintf_chk@plt+0x6a7e>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     8050c33 <__sprintf_chk@plt+0x6af3>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050bf6 <__sprintf_chk@plt+0x6ab6>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050bf6 <__sprintf_chk@plt+0x6ab6>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050c24 <__sprintf_chk@plt+0x6ae4>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050c24 <__sprintf_chk@plt+0x6ae4>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050c33 <__sprintf_chk@plt+0x6af3>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050c46 <__sprintf_chk@plt+0x6b06>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     8050d51 <__sprintf_chk@plt+0x6c11>
mov    (%eax),%edi
test   %edi,%edi
je     8050cc9 <__sprintf_chk@plt+0x6b89>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050c8c <__sprintf_chk@plt+0x6b4c>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050c8c <__sprintf_chk@plt+0x6b4c>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050cba <__sprintf_chk@plt+0x6b7a>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050cba <__sprintf_chk@plt+0x6b7a>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050cc9 <__sprintf_chk@plt+0x6b89>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     8050d3e <__sprintf_chk@plt+0x6bfe>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050d01 <__sprintf_chk@plt+0x6bc1>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050d01 <__sprintf_chk@plt+0x6bc1>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050d2f <__sprintf_chk@plt+0x6bef>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050d2f <__sprintf_chk@plt+0x6bef>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050d3e <__sprintf_chk@plt+0x6bfe>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050d51 <__sprintf_chk@plt+0x6c11>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050d64 <__sprintf_chk@plt+0x6c24>
mov    %bl,(%eax)
mov    (%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x4(%esp)
je     8051030 <__sprintf_chk@plt+0x6ef0>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     8050f12 <__sprintf_chk@plt+0x6dd2>
mov    (%eax),%edi
test   %edi,%edi
je     8050df4 <__sprintf_chk@plt+0x6cb4>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050db7 <__sprintf_chk@plt+0x6c77>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050db7 <__sprintf_chk@plt+0x6c77>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050de5 <__sprintf_chk@plt+0x6ca5>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050de5 <__sprintf_chk@plt+0x6ca5>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050df4 <__sprintf_chk@plt+0x6cb4>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8050eff <__sprintf_chk@plt+0x6dbf>
mov    (%eax),%edi
test   %edi,%edi
je     8050e77 <__sprintf_chk@plt+0x6d37>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050e3a <__sprintf_chk@plt+0x6cfa>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050e3a <__sprintf_chk@plt+0x6cfa>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050e68 <__sprintf_chk@plt+0x6d28>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050e68 <__sprintf_chk@plt+0x6d28>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050e77 <__sprintf_chk@plt+0x6d37>
mov    %bl,(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     8050eec <__sprintf_chk@plt+0x6dac>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050eaf <__sprintf_chk@plt+0x6d6f>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050eaf <__sprintf_chk@plt+0x6d6f>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050edd <__sprintf_chk@plt+0x6d9d>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050edd <__sprintf_chk@plt+0x6d9d>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050eec <__sprintf_chk@plt+0x6dac>
mov    %bl,(%eax)
mov    0xc(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050eff <__sprintf_chk@plt+0x6dbf>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050f12 <__sprintf_chk@plt+0x6dd2>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     805101d <__sprintf_chk@plt+0x6edd>
mov    (%eax),%edi
test   %edi,%edi
je     8050f95 <__sprintf_chk@plt+0x6e55>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050f58 <__sprintf_chk@plt+0x6e18>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050f58 <__sprintf_chk@plt+0x6e18>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050f86 <__sprintf_chk@plt+0x6e46>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050f86 <__sprintf_chk@plt+0x6e46>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050f95 <__sprintf_chk@plt+0x6e55>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
mov    0x4(%eax),%edi
test   %edi,%edi
je     805100a <__sprintf_chk@plt+0x6eca>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8050fcd <__sprintf_chk@plt+0x6e8d>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050fcd <__sprintf_chk@plt+0x6e8d>
mov    %bl,(%eax)
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     8050ffb <__sprintf_chk@plt+0x6ebb>
mov    0x0(%ebp),%eax
mov    %esi,%ecx
mov    %ebx,%edx
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x4(%ebp),%eax
mov    %ebx,%edx
mov    %esi,%ecx
call   8050b20 <__sprintf_chk@plt+0x69e0>
movzbl 0xc(%ebp),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8050ffb <__sprintf_chk@plt+0x6ebb>
mov    %bl,(%eax)
movzbl 0xc(%edi),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    805100a <__sprintf_chk@plt+0x6eca>
mov    %bl,(%eax)
mov    0x8(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    805101d <__sprintf_chk@plt+0x6edd>
mov    %bl,(%eax)
mov    0x4(%esp),%eax
movzbl 0xc(%eax),%eax
add    %esi,%eax
movzbl (%eax),%edx
cmp    %edx,%ebx
jae    8051030 <__sprintf_chk@plt+0x6ef0>
mov    %bl,(%eax)
mov    (%esp),%eax
movzbl 0xc(%eax),%eax
add    %eax,%esi
movzbl (%esi),%eax
cmp    %eax,%ebx
jae    8051042 <__sprintf_chk@plt+0x6f02>
mov    %bl,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
test   %edx,%edx
mov    %edx,0x4(%esp)
je     8051630 <__sprintf_chk@plt+0x74f0>
mov    (%edx),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     805113a <__sprintf_chk@plt+0x6ffa>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8051280 <__sprintf_chk@plt+0x7140>
mov    (%eax),%edi
test   %edi,%edi
je     8051318 <__sprintf_chk@plt+0x71d8>
mov    (%edi),%eax
test   %eax,%eax
mov    %eax,0x10(%esp)
je     80513a0 <__sprintf_chk@plt+0x7260>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8051420 <__sprintf_chk@plt+0x72e0>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8051218 <__sprintf_chk@plt+0x70d8>
mov    (%eax),%esi
test   %esi,%esi
je     8051500 <__sprintf_chk@plt+0x73c0>
mov    (%esi),%ebp
test   %ebp,%ebp
je     8051640 <__sprintf_chk@plt+0x7500>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     80519de <__sprintf_chk@plt+0x789e>
mov    %ebx,%ecx
mov    %edi,0x1c(%esp)
mov    %ebx,%edi
mov    %eax,%ebx
jmp    8051116 <__sprintf_chk@plt+0x6fd6>
nop
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     80519d8 <__sprintf_chk@plt+0x7898>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8051108 <__sprintf_chk@plt+0x6fc8>
lea    0x0(%esi),%esi
xor    %eax,%eax
lea    0x0(%esi),%esi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%ebx
mov    0x4(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     80511d8 <__sprintf_chk@plt+0x7098>
mov    (%esi),%eax
test   %eax,%eax
mov    %eax,0x8(%esp)
je     80514a0 <__sprintf_chk@plt+0x7360>
mov    (%eax),%edi
test   %edi,%edi
je     8051568 <__sprintf_chk@plt+0x7428>
mov    (%edi),%ebp
test   %ebp,%ebp
je     80516a0 <__sprintf_chk@plt+0x7560>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     8051a4e <__sprintf_chk@plt+0x790e>
mov    %ebx,%ecx
mov    %esi,0xc(%esp)
mov    %ebx,%esi
mov    %eax,%ebx
jmp    80511be <__sprintf_chk@plt+0x707e>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051a48 <__sprintf_chk@plt+0x7908>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    80511b0 <__sprintf_chk@plt+0x7070>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
mov    0x4(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
jne    8051206 <__sprintf_chk@plt+0x70c6>
jmp    8051630 <__sprintf_chk@plt+0x74f0>
nop
movzbl 0xc(%eax),%edx
cmp    %cl,%dl
je     8051630 <__sprintf_chk@plt+0x74f0>
mov    %eax,%ebx
mov    0x4(%ebx),%eax
cmp    %cl,%dl
cmova  (%ebx),%eax
test   %eax,%eax
jne    80511f8 <__sprintf_chk@plt+0x70b8>
jmp    8051128 <__sprintf_chk@plt+0x6fe8>
nop
mov    0x14(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
mov    0x14(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %dl,%al
je     80518fa <__sprintf_chk@plt+0x77ba>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8051266 <__sprintf_chk@plt+0x7126>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     80518f8 <__sprintf_chk@plt+0x77b8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8051258 <__sprintf_chk@plt+0x7118>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     80517c0 <__sprintf_chk@plt+0x7680>
mov    (%esi),%edi
test   %edi,%edi
je     80515d0 <__sprintf_chk@plt+0x7490>
mov    (%edi),%ebp
test   %ebp,%ebp
je     8051700 <__sprintf_chk@plt+0x75c0>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebp),%eax
movzbl 0xc(%ebx),%ebp
mov    %ebp,%edx
cmp    %dl,%al
je     8051a0e <__sprintf_chk@plt+0x78ce>
mov    %ebx,%ecx
mov    %esi,0xc(%esp)
mov    %ebx,%esi
mov    %eax,%ebx
jmp    80512fe <__sprintf_chk@plt+0x71be>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051a08 <__sprintf_chk@plt+0x78c8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80512f0 <__sprintf_chk@plt+0x71b0>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8051810 <__sprintf_chk@plt+0x76d0>
mov    (%esi),%edi
test   %edi,%edi
je     8051760 <__sprintf_chk@plt+0x7620>
mov    (%edi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%edi),%edi
movzbl 0xc(%ebx),%ebp
mov    %edi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     8051a2a <__sprintf_chk@plt+0x78ea>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    8051386 <__sprintf_chk@plt+0x7246>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051a28 <__sprintf_chk@plt+0x78e8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8051378 <__sprintf_chk@plt+0x7238>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%esi
test   %esi,%esi
je     8051860 <__sprintf_chk@plt+0x7720>
mov    (%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%esi),%esi
movzbl 0xc(%ebx),%ebp
mov    %esi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     805186c <__sprintf_chk@plt+0x772c>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8051406 <__sprintf_chk@plt+0x72c6>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %dl,%bl
je     80519f8 <__sprintf_chk@plt+0x78b8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    80513f8 <__sprintf_chk@plt+0x72b8>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     80518a8 <__sprintf_chk@plt+0x7768>
mov    (%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%esi),%esi
movzbl 0xc(%ebx),%ebp
mov    %esi,%eax
mov    %ebp,%edx
cmp    %dl,%al
je     80518b4 <__sprintf_chk@plt+0x7774>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8051486 <__sprintf_chk@plt+0x7346>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051a68 <__sprintf_chk@plt+0x7928>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8051478 <__sprintf_chk@plt+0x7338>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     80511e4 <__sprintf_chk@plt+0x70a4>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    80514e6 <__sprintf_chk@plt+0x73a6>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051910 <__sprintf_chk@plt+0x77d0>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80514d8 <__sprintf_chk@plt+0x7398>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
mov    0x18(%esp),%eax
mov    %ebp,%ecx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %cl,%al
je     805191a <__sprintf_chk@plt+0x77da>
mov    %ebx,%edx
mov    %esi,%ebx
mov    %edx,%esi
jmp    805154e <__sprintf_chk@plt+0x740e>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     8051918 <__sprintf_chk@plt+0x77d8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051540 <__sprintf_chk@plt+0x7400>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
mov    0x8(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%edi
mov    %edi,%eax
cmp    %dl,%al
je     805193a <__sprintf_chk@plt+0x77fa>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    80515b6 <__sprintf_chk@plt+0x7476>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051938 <__sprintf_chk@plt+0x77f8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80515a8 <__sprintf_chk@plt+0x7468>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     80517cc <__sprintf_chk@plt+0x768c>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8051616 <__sprintf_chk@plt+0x74d6>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051958 <__sprintf_chk@plt+0x7818>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8051608 <__sprintf_chk@plt+0x74c8>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     805196a <__sprintf_chk@plt+0x782a>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    8051686 <__sprintf_chk@plt+0x7546>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051968 <__sprintf_chk@plt+0x7828>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %dl,%bl
cmovb  (%ecx),%eax
test   %eax,%eax
jne    8051678 <__sprintf_chk@plt+0x7538>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%edi
mov    %ebp,%edx
mov    %edi,%eax
cmp    %dl,%al
je     805198a <__sprintf_chk@plt+0x784a>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    80516e6 <__sprintf_chk@plt+0x75a6>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051988 <__sprintf_chk@plt+0x7848>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80516d8 <__sprintf_chk@plt+0x7598>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%edi
mov    %ebp,%edx
mov    %edi,%eax
cmp    %dl,%al
je     80519ba <__sprintf_chk@plt+0x787a>
mov    %ebx,%ecx
mov    %edi,%ebx
mov    %ecx,%edi
jmp    8051746 <__sprintf_chk@plt+0x7606>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     80519b8 <__sprintf_chk@plt+0x7878>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8051738 <__sprintf_chk@plt+0x75f8>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8051130 <__sprintf_chk@plt+0x6ff0>
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%esi),%esi
mov    %ebp,%edx
mov    %esi,%eax
cmp    %dl,%al
je     805181c <__sprintf_chk@plt+0x76dc>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    80517a6 <__sprintf_chk@plt+0x7666>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     80519a8 <__sprintf_chk@plt+0x7868>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8051798 <__sprintf_chk@plt+0x7658>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
mov    0x8(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%esi
mov    %esi,%eax
cmp    %dl,%al
je     805113a <__sprintf_chk@plt+0x6ffa>
mov    %ebx,%ecx
mov    %esi,%ebx
mov    %ecx,%esi
jmp    80517f6 <__sprintf_chk@plt+0x76b6>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051138 <__sprintf_chk@plt+0x6ff8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    80517e8 <__sprintf_chk@plt+0x76a8>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
mov    0xc(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
je     8051280 <__sprintf_chk@plt+0x7140>
mov    %ebx,%esi
jmp    8051846 <__sprintf_chk@plt+0x7706>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %cl,%dl
je     8051280 <__sprintf_chk@plt+0x7140>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %cl,%dl
cmova  (%esi),%eax
test   %eax,%eax
jne    8051838 <__sprintf_chk@plt+0x76f8>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
movzbl 0xc(%edi),%ecx
mov    %ebp,%edx
cmp    %dl,%cl
je     8051318 <__sprintf_chk@plt+0x71d8>
mov    %ebx,%esi
jmp    805188e <__sprintf_chk@plt+0x774e>
xchg   %ax,%ax
movzbl 0xc(%eax),%edx
cmp    %dl,%cl
je     8051318 <__sprintf_chk@plt+0x71d8>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %dl,%cl
cmovb  (%esi),%eax
test   %eax,%eax
jne    8051880 <__sprintf_chk@plt+0x7740>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8051128 <__sprintf_chk@plt+0x6fe8>
movzbl 0xc(%ebx),%ebp
mov    0x10(%esp),%eax
mov    %ebp,%edx
movzbl 0xc(%eax),%ecx
cmp    %dl,%cl
je     80513a0 <__sprintf_chk@plt+0x7260>
mov    %ebx,%esi
jmp    80518de <__sprintf_chk@plt+0x779e>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%edx
cmp    %dl,%cl
je     80513a0 <__sprintf_chk@plt+0x7260>
mov    %eax,%esi
mov    0x4(%esi),%eax
cmp    %dl,%cl
cmovb  (%esi),%eax
test   %eax,%eax
jne    80518d0 <__sprintf_chk@plt+0x7790>
xor    %eax,%eax
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0x10(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
jne    805142f <__sprintf_chk@plt+0x72ef>
jmp    80518b4 <__sprintf_chk@plt+0x7774>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    80511e4 <__sprintf_chk@plt+0x70a4>
nop
mov    %esi,%ebx
mov    0x14(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    805123a <__sprintf_chk@plt+0x70fa>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    80514be <__sprintf_chk@plt+0x737e>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    80517cc <__sprintf_chk@plt+0x768c>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0x18(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    8051522 <__sprintf_chk@plt+0x73e2>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x8(%esp),%eax
mov    0x4(%eax),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    805158a <__sprintf_chk@plt+0x744a>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    805181c <__sprintf_chk@plt+0x76dc>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    80515ee <__sprintf_chk@plt+0x74ae>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
mov    0x1c(%esp),%edi
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    805165e <__sprintf_chk@plt+0x751e>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    805186c <__sprintf_chk@plt+0x772c>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0xc(%esp),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    805171e <__sprintf_chk@plt+0x75de>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi),%esi
mov    %edi,%ebx
mov    0x4(%esi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    805177e <__sprintf_chk@plt+0x763e>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0xc(%esp),%esi
mov    0x4(%edi),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
jne    80516be <__sprintf_chk@plt+0x757e>
jmp    8051130 <__sprintf_chk@plt+0x6ff0>
lea    0x0(%esi),%esi
mov    %esi,%ebx
lea    0x0(%esi),%esi
jmp    80518b4 <__sprintf_chk@plt+0x7774>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %ecx,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    %eax,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x18(%esp)
je     8051f91 <__sprintf_chk@plt+0x7e51>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8051ce0 <__sprintf_chk@plt+0x7ba0>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8051bad <__sprintf_chk@plt+0x7a6d>
mov    (%eax),%esi
test   %esi,%esi
je     8051b20 <__sprintf_chk@plt+0x79e0>
mov    (%esi),%eax
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %ebp,%ebp
je     8051b11 <__sprintf_chk@plt+0x79d1>
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8051b0a <__sprintf_chk@plt+0x79ca>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051afe <__sprintf_chk@plt+0x79be>
jmp    805219e <__sprintf_chk@plt+0x805e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80521a0 <__sprintf_chk@plt+0x8060>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8051af0 <__sprintf_chk@plt+0x79b0>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051ad8 <__sprintf_chk@plt+0x7998>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8051b93 <__sprintf_chk@plt+0x7a53>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %ebp,%ebp
je     8051b89 <__sprintf_chk@plt+0x7a49>
xchg   %ax,%ax
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8051b82 <__sprintf_chk@plt+0x7a42>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%ecx),%edx
cmp    %dl,%bl
jne    8051b76 <__sprintf_chk@plt+0x7a36>
jmp    8051ff6 <__sprintf_chk@plt+0x7eb6>
movzbl 0xc(%eax),%edx
cmp    %bl,%dl
je     8051ff8 <__sprintf_chk@plt+0x7eb8>
mov    %eax,%ecx
mov    0x4(%ecx),%eax
cmp    %bl,%dl
cmova  (%ecx),%eax
test   %eax,%eax
jne    8051b68 <__sprintf_chk@plt+0x7a28>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051b50 <__sprintf_chk@plt+0x7a10>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ebp
test   %ebp,%ebp
jne    8052001 <__sprintf_chk@plt+0x7ec1>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8051cc5 <__sprintf_chk@plt+0x7b85>
mov    (%eax),%esi
test   %esi,%esi
je     8051c38 <__sprintf_chk@plt+0x7af8>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %ebp,%ebp
je     8051c29 <__sprintf_chk@plt+0x7ae9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8051c22 <__sprintf_chk@plt+0x7ae2>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051c16 <__sprintf_chk@plt+0x7ad6>
jmp    80521ae <__sprintf_chk@plt+0x806e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80521b0 <__sprintf_chk@plt+0x8070>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8051c08 <__sprintf_chk@plt+0x7ac8>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051bf0 <__sprintf_chk@plt+0x7ab0>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8051cab <__sprintf_chk@plt+0x7b6b>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %ebp,%ebp
je     8051ca1 <__sprintf_chk@plt+0x7b61>
xchg   %ax,%ax
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8051c9a <__sprintf_chk@plt+0x7b5a>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051c8e <__sprintf_chk@plt+0x7b4e>
jmp    8051f99 <__sprintf_chk@plt+0x7e59>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051fa0 <__sprintf_chk@plt+0x7e60>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8051c80 <__sprintf_chk@plt+0x7b40>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051c68 <__sprintf_chk@plt+0x7b28>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%edi
test   %edi,%edi
jne    8051fa9 <__sprintf_chk@plt+0x7e69>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%esi
test   %esi,%esi
jne    80520f5 <__sprintf_chk@plt+0x7fb5>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
nop
mov    0x10(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0xc(%esp)
je     8051f77 <__sprintf_chk@plt+0x7e37>
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8051e05 <__sprintf_chk@plt+0x7cc5>
mov    (%eax),%esi
test   %esi,%esi
je     8051d78 <__sprintf_chk@plt+0x7c38>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %ebp,%ebp
je     8051d69 <__sprintf_chk@plt+0x7c29>
lea    0x0(%esi),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8051d62 <__sprintf_chk@plt+0x7c22>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051d56 <__sprintf_chk@plt+0x7c16>
jmp    805218d <__sprintf_chk@plt+0x804d>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8052190 <__sprintf_chk@plt+0x8050>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051d48 <__sprintf_chk@plt+0x7c08>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051d30 <__sprintf_chk@plt+0x7bf0>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8051deb <__sprintf_chk@plt+0x7cab>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %ebp,%ebp
je     8051de1 <__sprintf_chk@plt+0x7ca1>
xchg   %ax,%ax
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8051dda <__sprintf_chk@plt+0x7c9a>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051dce <__sprintf_chk@plt+0x7c8e>
jmp    805205c <__sprintf_chk@plt+0x7f1c>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8052060 <__sprintf_chk@plt+0x7f20>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051dc0 <__sprintf_chk@plt+0x7c80>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051da8 <__sprintf_chk@plt+0x7c68>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ebx
test   %ebx,%ebx
jne    8052069 <__sprintf_chk@plt+0x7f29>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8051f5d <__sprintf_chk@plt+0x7e1d>
mov    (%eax),%esi
test   %esi,%esi
je     8051ed1 <__sprintf_chk@plt+0x7d91>
mov    (%esi),%eax
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x1c(%esp)
je     8051e9f <__sprintf_chk@plt+0x7d5f>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%ebx
mov    (%eax),%eax
mov    %ebp,%edx
mov    %ebx,%ecx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%edi),%eax
mov    %ebx,%ecx
mov    %ebp,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %ebp,%ebp
je     8051e91 <__sprintf_chk@plt+0x7d51>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8051e8a <__sprintf_chk@plt+0x7d4a>
movzbl 0xc(%edi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051e7e <__sprintf_chk@plt+0x7d3e>
jmp    80521be <__sprintf_chk@plt+0x807e>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80521c0 <__sprintf_chk@plt+0x8080>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051e70 <__sprintf_chk@plt+0x7d30>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051e58 <__sprintf_chk@plt+0x7d18>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%edi
mov    0x8(%eax),%eax
mov    %edi,0x10(%eax)
mov    0x8(%esp),%edi
mov    0x4(%esi),%eax
mov    0x18(%esp),%ecx
mov    %edi,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %edi,%edi
jne    80521dd <__sprintf_chk@plt+0x809d>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
jmp    8051ed1 <__sprintf_chk@plt+0x7d91>
mov    %edx,%eax
nop
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x14(%esp),%eax
mov    0x4(%eax),%esi
test   %esi,%esi
je     8051f43 <__sprintf_chk@plt+0x7e03>
mov    0x8(%esp),%ebp
mov    0x18(%esp),%edi
mov    (%esi),%eax
mov    %ebp,%edx
mov    %edi,%ecx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%esi),%eax
mov    %edi,%ecx
mov    %ebp,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %ebp,%ebp
je     8051f39 <__sprintf_chk@plt+0x7df9>
nop
mov    0x4(%ebp),%edx
test   %edx,%edx
je     8051f32 <__sprintf_chk@plt+0x7df2>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8051f26 <__sprintf_chk@plt+0x7de6>
jmp    8052230 <__sprintf_chk@plt+0x80f0>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8052238 <__sprintf_chk@plt+0x80f8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8051f18 <__sprintf_chk@plt+0x7dd8>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    8051f00 <__sprintf_chk@plt+0x7dc0>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
mov    0x8(%esp),%ecx
test   %ecx,%ecx
jne    8052241 <__sprintf_chk@plt+0x8101>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%edx
test   %edx,%edx
jne    8052295 <__sprintf_chk@plt+0x8155>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
mov    0x8(%esp),%eax
test   %eax,%eax
jne    80522ed <__sprintf_chk@plt+0x81ad>
mov    0x10(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     8051fea <__sprintf_chk@plt+0x7eaa>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8051fde <__sprintf_chk@plt+0x7e9e>
jmp    80520e5 <__sprintf_chk@plt+0x7fa5>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80520e8 <__sprintf_chk@plt+0x7fa8>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8051fd0 <__sprintf_chk@plt+0x7e90>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8051fad <__sprintf_chk@plt+0x7e6d>
jmp    8051cb7 <__sprintf_chk@plt+0x7b77>
mov    %ecx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     8052042 <__sprintf_chk@plt+0x7f02>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8052036 <__sprintf_chk@plt+0x7ef6>
jmp    8052162 <__sprintf_chk@plt+0x8022>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8052168 <__sprintf_chk@plt+0x8028>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8052028 <__sprintf_chk@plt+0x7ee8>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8052005 <__sprintf_chk@plt+0x7ec5>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8051bad <__sprintf_chk@plt+0x7a6d>
mov    %edx,%eax
xchg   %ax,%ax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     805209e <__sprintf_chk@plt+0x7f5e>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8052092 <__sprintf_chk@plt+0x7f52>
jmp    80520b8 <__sprintf_chk@plt+0x7f78>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80520c0 <__sprintf_chk@plt+0x7f80>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8052088 <__sprintf_chk@plt+0x7f48>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    805206d <__sprintf_chk@plt+0x7f2d>
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8051e05 <__sprintf_chk@plt+0x7cc5>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x14(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
jne    8051e18 <__sprintf_chk@plt+0x7cd8>
jmp    8051f5d <__sprintf_chk@plt+0x7e1d>
mov    %edx,%eax
nop
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     805212e <__sprintf_chk@plt+0x7fee>
mov    0xc(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    8052122 <__sprintf_chk@plt+0x7fe2>
jmp    8052148 <__sprintf_chk@plt+0x8008>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8052150 <__sprintf_chk@plt+0x8010>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8052118 <__sprintf_chk@plt+0x7fd8>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    80520f9 <__sprintf_chk@plt+0x7fb9>
mov    0xc(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8051ce0 <__sprintf_chk@plt+0x7ba0>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0xc(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
jmp    8051ce0 <__sprintf_chk@plt+0x7ba0>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
jne    8051bc0 <__sprintf_chk@plt+0x7a80>
jmp    8051cc5 <__sprintf_chk@plt+0x7b85>
mov    %edx,%eax
nop
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    8051d78 <__sprintf_chk@plt+0x7c38>
mov    %edx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    8051b20 <__sprintf_chk@plt+0x79e0>
mov    %edx,%eax
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
jmp    8051c38 <__sprintf_chk@plt+0x7af8>
mov    %edx,%eax
mov    0x1c(%esp),%edi
mov    0x8(%eax),%eax
mov    0x18(%esp),%ecx
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x4(%esi),%eax
mov    0x8(%esp),%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x8(%esp),%ebp
mov    0x4(%ebp),%edx
test   %edx,%edx
je     805221a <__sprintf_chk@plt+0x80da>
movzbl 0xc(%esi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    805220e <__sprintf_chk@plt+0x80ce>
jmp    8051ec5 <__sprintf_chk@plt+0x7d85>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8051ec8 <__sprintf_chk@plt+0x7d88>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8052200 <__sprintf_chk@plt+0x80c0>
mov    0x10(%ebp),%ebp
test   %ebp,%ebp
jne    80521e1 <__sprintf_chk@plt+0x80a1>
mov    0x8(%esi),%eax
mov    0x18(%esp),%esi
mov    %esi,0x10(%eax)
jmp    8051ed1 <__sprintf_chk@plt+0x7d91>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x8(%esi),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     8052276 <__sprintf_chk@plt+0x8136>
mov    0x14(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    805226a <__sprintf_chk@plt+0x812a>
jmp    8052282 <__sprintf_chk@plt+0x8142>
xchg   %ax,%ax
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8052288 <__sprintf_chk@plt+0x8148>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8052260 <__sprintf_chk@plt+0x8120>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8052245 <__sprintf_chk@plt+0x8105>
jmp    8051f4f <__sprintf_chk@plt+0x7e0f>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%edi
mov    0x8(%eax),%eax
mov    0x8(%edi),%edx
mov    %eax,0x10(%edx)
mov    0x8(%esp),%edi
mov    0x4(%edi),%edx
test   %edx,%edx
je     80522ce <__sprintf_chk@plt+0x818e>
mov    0xc(%esp),%eax
movzbl 0xc(%edx),%ecx
movzbl 0xc(%eax),%ebx
cmp    %cl,%bl
jne    80522c2 <__sprintf_chk@plt+0x8182>
jmp    80522da <__sprintf_chk@plt+0x819a>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     80522e0 <__sprintf_chk@plt+0x81a0>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80522b8 <__sprintf_chk@plt+0x8178>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8052299 <__sprintf_chk@plt+0x8159>
jmp    8051f69 <__sprintf_chk@plt+0x7e29>
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
mov    0x10(%esp),%edi
mov    0x8(%esp),%esi
mov    0x4(%esi),%edx
test   %edx,%edx
je     8052326 <__sprintf_chk@plt+0x81e6>
movzbl 0xc(%edi),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    805231a <__sprintf_chk@plt+0x81da>
jmp    8052340 <__sprintf_chk@plt+0x8200>
lea    0x0(%esi),%esi
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8052348 <__sprintf_chk@plt+0x8208>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8052310 <__sprintf_chk@plt+0x81d0>
mov    0x10(%esi),%esi
test   %esi,%esi
jne    80522f5 <__sprintf_chk@plt+0x81b5>
mov    0x10(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%eax
mov    %esi,0x10(%eax)
jmp    8051f91 <__sprintf_chk@plt+0x7e51>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x10(%esp),%esi
mov    0x8(%eax),%eax
mov    0x8(%esi),%edx
mov    %eax,0x10(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movl   $0x548,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
test   %eax,%eax
mov    %eax,%ebx
je     8052490 <__sprintf_chk@plt+0x8350>
movl   $0x80499d0,0x10(%esp)
movl   $0x80650d0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049ae0 <_obstack_begin@plt>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
movl   $0x0,0x2c(%ebx)
mov    %ecx,%eax
sub    %edx,%eax
cmp    $0x1f,%eax
jle    8052460 <__sprintf_chk@plt+0x8320>
mov    0x8(%ebx),%eax
add    $0x20,%edx
mov    %edx,0xc(%ebx)
cmp    %eax,%edx
je     8052487 <__sprintf_chk@plt+0x8347>
mov    0x18(%ebx),%esi
mov    %ecx,%ebp
add    %esi,%edx
not    %esi
and    %esi,%edx
mov    0x4(%ebx),%esi
mov    %edx,%edi
mov    %edx,0xc(%ebx)
sub    %esi,%edi
sub    %esi,%ebp
cmp    %ebp,%edi
jg     8052458 <__sprintf_chk@plt+0x8318>
test   %eax,%eax
mov    %edx,0x8(%ebx)
mov    %eax,0x30(%ebx)
je     8052494 <__sprintf_chk@plt+0x8354>
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
mov    0x40(%esp),%eax
movl   $0x7fffffff,0x34(%ebx)
movl   $0xffffffff,0x38(%ebx)
movl   $0x0,0x53c(%ebx)
00
mov    %eax,0x544(%ebx)
mov    %ebx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0xc(%ebx)
mov    %ecx,%edx
jmp    80523eb <__sprintf_chk@plt+0x82ab>
nop
movl   $0x20,0x4(%esp)
mov    %ebx,(%esp)
call   8049a80 <_obstack_newchunk@plt>
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ecx
add    $0x20,%edx
cmp    %eax,%edx
mov    %edx,0xc(%ebx)
jne    80523d0 <__sprintf_chk@plt+0x8290>
orb    $0x2,0x28(%ebx)
jmp    80523d0 <__sprintf_chk@plt+0x8290>
xor    %eax,%eax
jmp    805244d <__sprintf_chk@plt+0x830d>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <obstack_free@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
xor    %eax,%eax
jmp    805244d <__sprintf_chk@plt+0x830d>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb8(%esp),%eax
mov    0xb4(%esp),%edx
mov    0xb0(%esp),%edi
add    %eax,%edx
test   %eax,%eax
mov    0x30(%edi),%esi
je     8052a32 <__sprintf_chk@plt+0x88f2>
lea    -0x1(%edx),%ebp
add    $0x1,%eax
mov    %eax,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,%ebp
sub    %edx,0x14(%esp)
jmp    80526cd <__sprintf_chk@plt+0x858d>
lea    0x0(%esi),%esi
mov    0xc(%esp),%edi
movzbl (%edi),%edx
movzbl (%eax,%edx,1),%eax
mov    0x4(%esi),%ebx
lea    0x4(%esi),%edx
mov    %edx,0x30(%esp)
movl   $0x0,0x60(%esp)
test   %ebx,%ebx
je     80526f0 <__sprintf_chk@plt+0x85b0>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    0x4(%ebx),%edx
cmovb  (%ebx),%edx
sbb    %ecx,%ecx
add    $0x1,%ecx
mov    %ebx,0x34(%esp)
test   %edx,%edx
mov    %ecx,0x64(%esp)
je     8052998 <__sprintf_chk@plt+0x8858>
cmp    0xc(%edx),%al
je     80526e8 <__sprintf_chk@plt+0x85a8>
mov    0x4(%edx),%ebx
cmovb  (%edx),%ebx
mov    %edx,0x38(%esp)
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x68(%esp)
je     80529b8 <__sprintf_chk@plt+0x8878>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x3c(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x6c(%esp)
je     80529a8 <__sprintf_chk@plt+0x8868>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x40(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x70(%esp)
je     80529f8 <__sprintf_chk@plt+0x88b8>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x44(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x74(%esp)
je     80529e8 <__sprintf_chk@plt+0x88a8>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x48(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x78(%esp)
je     80529d8 <__sprintf_chk@plt+0x8898>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x4c(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x7c(%esp)
je     80529c8 <__sprintf_chk@plt+0x8888>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x50(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x80(%esp)
je     8052988 <__sprintf_chk@plt+0x8848>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    (%ebx),%edx
cmovae 0x4(%ebx),%edx
mov    %ebx,0x54(%esp)
mov    %edx,%ebx
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x84(%esp)
je     8052978 <__sprintf_chk@plt+0x8838>
cmp    0xc(%ebx),%al
je     80526b7 <__sprintf_chk@plt+0x8577>
mov    0x4(%ebx),%edx
cmovb  (%ebx),%edx
sbb    %ecx,%ecx
add    $0x1,%ecx
mov    %ebx,0x58(%esp)
test   %edx,%edx
mov    %ecx,0x88(%esp)
je     8052968 <__sprintf_chk@plt+0x8828>
cmp    0xc(%edx),%al
je     80526e8 <__sprintf_chk@plt+0x85a8>
mov    0x4(%edx),%ebx
cmovb  (%edx),%ebx
mov    %edx,0x5c(%esp)
sbb    %edx,%edx
add    $0x1,%edx
test   %ebx,%ebx
mov    %edx,0x8c(%esp)
je     8052958 <__sprintf_chk@plt+0x8818>
subl   $0x1,0xc(%esp)
mov    0x14(%esp),%eax
add    0xc(%esp),%eax
mov    0x8(%ebx),%esi
je     8052a30 <__sprintf_chk@plt+0x88f0>
mov    0x544(%ebp),%eax
test   %eax,%eax
jne    80524f8 <__sprintf_chk@plt+0x83b8>
mov    0xc(%esp),%eax
movzbl (%eax),%eax
jmp    8052503 <__sprintf_chk@plt+0x83c3>
nop
mov    %edx,%ebx
jmp    80526b7 <__sprintf_chk@plt+0x8577>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x18(%esp)
mov    0x10(%ebp),%ecx
mov    0xc(%ebp),%edx
mov    %ecx,0x10(%esp)
sub    %edx,%ecx
cmp    $0xf,%ecx
jle    8052918 <__sprintf_chk@plt+0x87d8>
mov    0x8(%ebp),%ebx
add    $0x10,%edx
mov    %edx,0xc(%ebp)
cmp    %ebx,%edx
je     805294b <__sprintf_chk@plt+0x880b>
mov    0x18(%ebp),%ecx
mov    %ecx,%edi
add    %edi,%edx
mov    %ecx,0x20(%esp)
not    %ecx
and    %ecx,%edx
mov    %ecx,0x24(%esp)
mov    0x4(%ebp),%ecx
mov    %edx,%edi
mov    %edx,0xc(%ebp)
sub    %ecx,%edi
mov    %edi,0x28(%esp)
mov    0x10(%esp),%edi
mov    %ecx,0x1c(%esp)
sub    %ecx,%edi
cmp    %edi,0x28(%esp)
jle    8052758 <__sprintf_chk@plt+0x8618>
mov    0x10(%esp),%edi
mov    %edi,0xc(%ebp)
mov    %edi,%edx
test   %ebx,%ebx
mov    %edx,0x8(%ebp)
je     8052b2b <__sprintf_chk@plt+0x89eb>
mov    0x10(%esp),%edi
movl   $0x0,(%ebx)
movl   $0x0,0x4(%ebx)
sub    %edx,%edi
cmp    $0x1f,%edi
jle    80528c8 <__sprintf_chk@plt+0x8788>
mov    0xc(%ebp),%edi
mov    0x8(%ebp),%edx
lea    0x20(%edi),%ecx
cmp    %edx,%ecx
mov    %ecx,0xc(%ebp)
je     805290f <__sprintf_chk@plt+0x87cf>
mov    %edx,0x2c(%esp)
mov    0x1c(%esp),%edi
add    0x20(%esp),%ecx
mov    0x10(%esp),%edx
and    0x24(%esp),%ecx
mov    %al,0x28(%esp)
mov    %ecx,%eax
sub    %edi,%edx
sub    %edi,%eax
cmp    %edx,%eax
movzbl 0x28(%esp),%eax
mov    %ecx,0xc(%ebp)
mov    0x2c(%esp),%edx
jle    80527ca <__sprintf_chk@plt+0x868a>
mov    0x10(%esp),%edi
mov    %edi,0xc(%ebp)
mov    %edi,%ecx
test   %edx,%edx
mov    %ecx,0x8(%ebp)
mov    %edx,0x8(%ebx)
je     8052b17 <__sprintf_chk@plt+0x89d7>
mov    0x14(%esi),%ecx
mov    %esi,0x8(%edx)
movl   $0x0,(%edx)
movl   $0x0,0x4(%edx)
add    $0x1,%ecx
movl   $0x0,0xc(%edx)
movl   $0x0,0x10(%edx)
mov    %ecx,0x14(%edx)
movl   $0x0,0x18(%edx)
mov    %al,0xc(%ebx)
mov    0x18(%esp),%eax
movb   $0x0,0xd(%ebx)
sub    $0x1,%eax
mov    0x60(%esp,%eax,4),%esi
mov    0x30(%esp,%eax,4),%edx
test   %esi,%esi
jne    8052860 <__sprintf_chk@plt+0x8720>
mov    %ebx,(%edx)
test   %eax,%eax
je     80526b7 <__sprintf_chk@plt+0x8577>
movzbl 0xd(%edx),%ecx
test   %cl,%cl
jne    8052870 <__sprintf_chk@plt+0x8730>
mov    0xc(%esp),%edi
jmp    8052844 <__sprintf_chk@plt+0x8704>
mov    0x30(%esp,%eax,4),%edx
movzbl 0xd(%edx),%ecx
test   %cl,%cl
jne    8052868 <__sprintf_chk@plt+0x8728>
cmpl   $0x1,0x60(%esp,%eax,4)
sbb    %ecx,%ecx
or     $0x1,%ecx
sub    $0x1,%eax
mov    %cl,0xd(%edx)
jne    8052838 <__sprintf_chk@plt+0x86f8>
mov    %edi,0xc(%esp)
jmp    80526b7 <__sprintf_chk@plt+0x8577>
nop
mov    %ebx,0x4(%edx)
jmp    8052822 <__sprintf_chk@plt+0x86e2>
lea    0x0(%esi),%esi
mov    0x60(%esp,%eax,4),%esi
mov    %edi,0xc(%esp)
test   %esi,%esi
jne    8052a08 <__sprintf_chk@plt+0x88c8>
sub    $0x1,%ecx
test   %cl,%cl
mov    %cl,0xd(%edx)
je     80526b7 <__sprintf_chk@plt+0x8577>
cmp    $0xfe,%cl
je     8052a67 <__sprintf_chk@plt+0x8927>
cmp    $0x2,%cl
jne    8052ac8 <__sprintf_chk@plt+0x8988>
mov    0x64(%esp,%eax,4),%ecx
test   %ecx,%ecx
je     8052ae1 <__sprintf_chk@plt+0x89a1>
cmp    $0x1,%ecx
jne    8052ac8 <__sprintf_chk@plt+0x8988>
mov    0x4(%edx),%ecx
mov    (%ecx),%esi
mov    %edx,(%ecx)
movb   $0x0,0xd(%edx)
mov    %esi,0x4(%edx)
movb   $0x0,0xd(%ecx)
jmp    8052aa8 <__sprintf_chk@plt+0x8968>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x20,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
call   8049a80 <_obstack_newchunk@plt>
mov    0x18(%ebp),%eax
mov    0xc(%ebp),%edi
mov    0x8(%ebp),%edx
mov    %eax,0x20(%esp)
not    %eax
mov    %eax,0x24(%esp)
mov    0x10(%ebp),%eax
lea    0x20(%edi),%ecx
cmp    %edx,%ecx
mov    %ecx,0xc(%ebp)
mov    %eax,0x10(%esp)
mov    0x4(%ebp),%eax
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
jne    8052793 <__sprintf_chk@plt+0x8653>
orb    $0x2,0x28(%ebp)
jmp    8052793 <__sprintf_chk@plt+0x8653>
movl   $0x10,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   8049a80 <_obstack_newchunk@plt>
mov    0xc(%ebp),%edx
mov    0x8(%ebp),%ebx
mov    0x10(%ebp),%eax
add    $0x10,%edx
cmp    %ebx,%edx
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
mov    %edx,0xc(%ebp)
jne    805271e <__sprintf_chk@plt+0x85de>
orb    $0x2,0x28(%ebp)
jmp    805271e <__sprintf_chk@plt+0x85de>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xc,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0xb,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0xa,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0x9,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0x2,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0x4,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0x3,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0x8,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0x7,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0x6,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
movl   $0x5,0x18(%esp)
jmp    80526f8 <__sprintf_chk@plt+0x85b8>
lea    0x0(%esi),%esi
cmp    $0x1,%esi
jne    80526b7 <__sprintf_chk@plt+0x8577>
add    $0x1,%ecx
test   %cl,%cl
mov    %cl,0xd(%edx)
je     80526b7 <__sprintf_chk@plt+0x8577>
cmp    $0xfe,%cl
jne    805288f <__sprintf_chk@plt+0x874f>
jmp    8052a67 <__sprintf_chk@plt+0x8927>
lea    0x0(%esi),%esi
mov    %ebp,%edi
mov    (%esi),%eax
test   %eax,%eax
mov    0x2c(%edi),%eax
jne    8052a41 <__sprintf_chk@plt+0x8901>
lea    0x1(%eax,%eax,1),%edx
mov    %edx,(%esi)
add    $0x1,%eax
mov    %eax,0x2c(%edi)
mov    0x14(%esi),%eax
cmp    0x34(%edi),%eax
jge    8052a52 <__sprintf_chk@plt+0x8912>
mov    %eax,0x34(%edi)
cmp    0x38(%edi),%eax
jle    8052a5a <__sprintf_chk@plt+0x891a>
mov    %eax,0x38(%edi)
add    $0x9c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x64(%esp,%eax,4),%ecx
test   %ecx,%ecx
je     8052acd <__sprintf_chk@plt+0x898d>
cmp    $0x1,%ecx
jne    8052ac8 <__sprintf_chk@plt+0x8988>
mov    (%edx),%edi
mov    %eax,0x10(%esp)
mov    0x4(%edi),%ecx
mov    0x4(%ecx),%eax
mov    (%ecx),%esi
cmpb   $0x1,0xd(%ecx)
mov    %edi,(%ecx)
mov    %esi,0x4(%edi)
mov    %edx,0x4(%ecx)
mov    %eax,(%edx)
sete   %al
neg    %eax
mov    %al,0xd(%edi)
cmpb   $0xff,0xd(%ecx)
sete   0xd(%edx)
movb   $0x0,0xd(%ecx)
mov    0x10(%esp),%eax
sub    $0x1,%eax
mov    0x60(%esp,%eax,4),%edx
mov    0x30(%esp,%eax,4),%eax
test   %edx,%edx
jne    8052b5b <__sprintf_chk@plt+0x8a1b>
mov    %ecx,(%eax)
jmp    80526b7 <__sprintf_chk@plt+0x8577>
lea    0x0(%esi),%esi
call   804a080 <abort@plt>
mov    (%edx),%ecx
mov    0x4(%ecx),%esi
mov    %edx,0x4(%ecx)
movb   $0x0,0xd(%edx)
mov    %esi,(%edx)
movb   $0x0,0xd(%ecx)
jmp    8052aa8 <__sprintf_chk@plt+0x8968>
mov    0x4(%edx),%edi
mov    %eax,0x10(%esp)
mov    (%edi),%ecx
mov    (%ecx),%eax
cmpb   $0x1,0xd(%ecx)
mov    0x4(%ecx),%esi
mov    %edx,(%ecx)
mov    %eax,0x4(%edx)
sete   %al
neg    %eax
mov    %edi,0x4(%ecx)
mov    %esi,(%edi)
mov    %al,0xd(%edx)
cmpb   $0xff,0xd(%ecx)
sete   0xd(%edi)
movb   $0x0,0xd(%ecx)
mov    0x10(%esp),%eax
jmp    8052aa8 <__sprintf_chk@plt+0x8968>
cmp    %ebx,0x1c(%esp)
mov    %ebp,%edi
jae    8052b63 <__sprintf_chk@plt+0x8a23>
cmp    %ebx,0x10(%esp)
jbe    8052b63 <__sprintf_chk@plt+0x8a23>
mov    %ebx,0x8(%ebp)
mov    %ebx,0xc(%ebp)
movl   $0x5,0xb8(%esp)
00
movl   $0x806c224,0xb4(%esp)
08
movl   $0x0,0xb0(%esp)
00
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049a90 <dcgettext@plt>
mov    %ecx,0x4(%eax)
jmp    80526b7 <__sprintf_chk@plt+0x8577>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049b40 <obstack_free@plt>
jmp    8052b2b <__sprintf_chk@plt+0x89eb>
jmp    8052b80 <__sprintf_chk@plt+0x8a40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    $0x40,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x53c,%esp
mov    0x550(%esp),%eax
lea    0x42c(%esp),%edi
mov    %gs:0x14,%esi
mov    %esi,0x52c(%esp)
xor    %esi,%esi
mov    0x34(%eax),%ebx
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    $0xff,%eax
cmp    $0xff,%ebx
cmovle %ebx,%eax
movzbl %al,%eax
imul   $0x1010101,%eax,%eax
cmpl   $0x1,0x2c(%esi)
rep stos %eax,%es:(%edi)
je     8052e21 <__sprintf_chk@plt+0x8ce1>
mov    0x1c(%esp),%eax
mov    0x30(%eax),%esi
test   %esi,%esi
mov    %esi,0x28(%esp)
je     8052f89 <__sprintf_chk@plt+0x8e49>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
lea    0x28(%esp),%edx
call   804fe00 <__sprintf_chk@plt+0x5cc0>
mov    0x1c(%esp),%edi
lea    0x42c(%esp),%ecx
mov    0x14(%esi),%edx
mov    0x34(%edi),%eax
mov    %eax,0x18(%esi)
mov    %eax,0x1c(%esi)
mov    0x4(%esi),%eax
call   8050b20 <__sprintf_chk@plt+0x69e0>
mov    0x30(%edi),%eax
mov    0x4(%esi),%ebp
mov    %eax,%ebx
mov    %eax,0x18(%esp)
mov    0x10(%esi),%eax
test   %ebp,%ebp
mov    %eax,%edi
je     8052c98 <__sprintf_chk@plt+0x8b58>
mov    %eax,%edx
mov    0x0(%ebp),%eax
mov    %ebx,%ecx
call   8051a80 <__sprintf_chk@plt+0x7940>
mov    0x4(%ebp),%eax
mov    %ebx,%ecx
mov    %edi,%edx
call   8051a80 <__sprintf_chk@plt+0x7940>
test   %edi,%edi
je     8052c89 <__sprintf_chk@plt+0x8b49>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edx
test   %edx,%edx
je     8052c82 <__sprintf_chk@plt+0x8b42>
movzbl 0xc(%ebp),%ebx
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    8052c76 <__sprintf_chk@plt+0x8b36>
jmp    8052e0c <__sprintf_chk@plt+0x8ccc>
movzbl 0xc(%eax),%ecx
cmp    %bl,%cl
je     8052e10 <__sprintf_chk@plt+0x8cd0>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %bl,%cl
cmova  (%edx),%eax
test   %eax,%eax
jne    8052c68 <__sprintf_chk@plt+0x8b28>
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8052c50 <__sprintf_chk@plt+0x8b10>
mov    0x18(%esp),%edi
mov    0x8(%ebp),%eax
mov    %edi,0x10(%eax)
mov    0x10(%esi),%edi
xchg   %ax,%ax
test   %edi,%edi
je     8052d29 <__sprintf_chk@plt+0x8be9>
mov    (%esi),%eax
mov    0x4(%esi),%ebp
mov    %eax,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    0x4(%edi),%ebx
je     8052d0c <__sprintf_chk@plt+0x8bcc>
mov    0x0(%ebp),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8052cfe <__sprintf_chk@plt+0x8bbe>
mov    0x4(%ebp),%edx
mov    %ebx,%eax
call   8051050 <__sprintf_chk@plt+0x6f10>
test   %eax,%eax
je     8052cfe <__sprintf_chk@plt+0x8bbe>
test   %ebx,%ebx
je     8052cfe <__sprintf_chk@plt+0x8bbe>
movzbl 0xc(%ebp),%ecx
movzbl 0xc(%ebx),%eax
cmp    %al,%cl
jne    8052cf2 <__sprintf_chk@plt+0x8bb2>
jmp    8052d0c <__sprintf_chk@plt+0x8bcc>
lea    0x0(%esi),%esi
movzbl 0xc(%edx),%eax
cmp    %cl,%al
je     8052d0c <__sprintf_chk@plt+0x8bcc>
mov    %edx,%ebx
mov    0x4(%ebx),%edx
cmp    %al,%cl
cmovb  (%ebx),%edx
test   %edx,%edx
jne    8052ce8 <__sprintf_chk@plt+0x8ba8>
mov    0x14(%esi),%eax
sub    0x14(%edi),%eax
cmp    0x18(%edi),%eax
jge    8052d0c <__sprintf_chk@plt+0x8bcc>
mov    %eax,0x18(%edi)
mov    0x18(%esp),%eax
test   %eax,%eax
je     8052d22 <__sprintf_chk@plt+0x8be2>
mov    0x14(%esi),%eax
sub    0x14(%edi),%eax
cmp    %eax,0x1c(%edi)
jle    8052d22 <__sprintf_chk@plt+0x8be2>
mov    %eax,0x1c(%edi)
mov    0x10(%edi),%edi
test   %edi,%edi
jne    8052cb0 <__sprintf_chk@plt+0x8b70>
mov    0xc(%esi),%esi
test   %esi,%esi
jne    8052bf0 <__sprintf_chk@plt+0x8ab0>
mov    0x1c(%esp),%eax
mov    0x30(%eax),%edx
mov    0xc(%edx),%eax
test   %eax,%eax
je     8052d69 <__sprintf_chk@plt+0x8c29>
lea    0x0(%esi),%esi
mov    0x8(%eax),%ebx
mov    0x1c(%eax),%ecx
mov    0x1c(%ebx),%ebx
cmp    %ebx,%ecx
jle    8052d5a <__sprintf_chk@plt+0x8c1a>
mov    %ebx,0x1c(%eax)
mov    %ebx,%ecx
cmp    %ecx,0x18(%eax)
jle    8052d62 <__sprintf_chk@plt+0x8c22>
mov    %ecx,0x18(%eax)
mov    0xc(%eax),%eax
test   %eax,%eax
jne    8052d48 <__sprintf_chk@plt+0x8c08>
lea    0x2c(%esp),%esi
xor    %eax,%eax
mov    $0x100,%ecx
mov    %esi,%edi
rep stos %eax,%es:(%edi)
mov    0x4(%edx),%eax
mov    %esi,%edx
call   8050590 <__sprintf_chk@plt+0x6450>
mov    0x1c(%esp),%eax
mov    0x1c(%esp),%ebx
mov    0x544(%eax),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     8052f38 <__sprintf_chk@plt+0x8df8>
lea    0x0(%esi),%esi
movzbl (%ecx,%eax,1),%edx
mov    0x2c(%esp,%edx,4),%edx
mov    %edx,0x13c(%ebx,%eax,4)
add    $0x1,%eax
cmp    $0x100,%eax
jne    8052da0 <__sprintf_chk@plt+0x8c60>
mov    %ecx,%eax
test   %eax,%eax
je     8052fe6 <__sprintf_chk@plt+0x8ea6>
mov    0x1c(%esp),%ebx
xor    %edx,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax,%edx,1),%ecx
movzbl 0x42c(%esp,%ecx,1),%ecx
mov    %cl,0x3c(%ebx,%edx,1)
add    $0x1,%edx
cmp    $0x100,%edx
jne    8052dd0 <__sprintf_chk@plt+0x8c90>
xor    %eax,%eax
mov    0x52c(%esp),%esi
xor    %gs:0x14,%esi
jne    8052f90 <__sprintf_chk@plt+0x8e50>
add    $0x53c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,%eax
xchg   %ax,%ax
mov    0x8(%ebp),%edx
mov    0x8(%eax),%eax
mov    %eax,0x10(%edx)
mov    0x10(%esi),%edi
jmp    8052c98 <__sprintf_chk@plt+0x8b58>
mov    0x544(%esi),%edx
test   %edx,%edx
jne    8052bd9 <__sprintf_chk@plt+0x8a99>
mov    0x10(%esi),%ecx
mov    0xc(%esi),%eax
mov    %ecx,%edx
sub    %eax,%edx
cmp    %edx,%ebx
jle    8052e4f <__sprintf_chk@plt+0x8d0f>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049a80 <_obstack_newchunk@plt>
mov    0xc(%esi),%eax
mov    0x10(%esi),%ecx
mov    0x1c(%esp),%esi
add    %ebx,%eax
mov    0x8(%esi),%edx
mov    %eax,0xc(%esi)
cmp    %edx,%eax
jne    8052e67 <__sprintf_chk@plt+0x8d27>
orb    $0x2,0x28(%esi)
mov    0x1c(%esp),%esi
mov    0x18(%esi),%ebx
mov    %ecx,%edi
add    %ebx,%eax
not    %ebx
and    %ebx,%eax
mov    0x4(%esi),%ebx
mov    %eax,0xc(%esi)
mov    %eax,%esi
sub    %ebx,%esi
sub    %ebx,%edi
cmp    %edi,%esi
jle    8052e8b <__sprintf_chk@plt+0x8d4b>
mov    0x1c(%esp),%eax
mov    %ecx,0xc(%eax)
mov    %ecx,%eax
mov    0x1c(%esp),%esi
test   %edx,%edx
mov    %eax,0x8(%esi)
mov    %edx,0x53c(%esi)
je     8052fc5 <__sprintf_chk@plt+0x8e85>
mov    0x34(%esi),%eax
mov    0x30(%esi),%ebx
mov    %eax,%ecx
sub    $0x1,%ecx
js     8052ed2 <__sprintf_chk@plt+0x8d92>
mov    0x4(%ebx),%eax
movzbl 0xc(%eax),%eax
mov    %al,(%edx,%ecx,1)
mov    0x4(%ebx),%eax
sub    $0x1,%ecx
cmp    $0xffffffff,%ecx
mov    0x8(%eax),%ebx
mov    0x1c(%esp),%eax
mov    0x53c(%eax),%edx
jne    8052ead <__sprintf_chk@plt+0x8d6d>
mov    0x34(%eax),%eax
test   %eax,%eax
mov    %eax,%ebx
lea    0x1(%eax),%ebp
mov    $0x1,%ecx
mov    %eax,%edi
jle    8052efb <__sprintf_chk@plt+0x8dbb>
movzbl -0x1(%edx,%ecx,1),%esi
mov    %ebx,%eax
sub    %ecx,%eax
add    $0x1,%ecx
cmp    %ebp,%ecx
mov    %al,0x42c(%esp,%esi,1)
jne    8052ee2 <__sprintf_chk@plt+0x8da2>
mov    %edi,%eax
mov    %eax,%ecx
movzbl -0x1(%edx,%eax,1),%ebx
sub    $0x2,%ecx
js     8052f1d <__sprintf_chk@plt+0x8ddd>
cmp    %bl,-0x2(%edx,%eax,1)
jne    8052f15 <__sprintf_chk@plt+0x8dd5>
jmp    8052f1d <__sprintf_chk@plt+0x8ddd>
nop
cmp    %bl,(%edx,%ecx,1)
je     8052f1d <__sprintf_chk@plt+0x8ddd>
sub    $0x1,%ecx
cmp    $0xffffffff,%ecx
jne    8052f10 <__sprintf_chk@plt+0x8dd0>
mov    0x1c(%esp),%esi
not    %ecx
add    %ecx,%eax
mov    %eax,0x540(%esi)
mov    0x544(%esi),%eax
jmp    8052dbb <__sprintf_chk@plt+0x8c7b>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
lea    0x13c(%eax),%edi
mov    $0x400,%eax
test   $0x1,%edi
jne    8052fa7 <__sprintf_chk@plt+0x8e67>
test   $0x2,%edi
jne    8052f95 <__sprintf_chk@plt+0x8e55>
mov    %eax,%ecx
xor    %edx,%edx
shr    $0x2,%ecx
test   $0x2,%al
rep movsl %ds:(%esi),%es:(%edi)
je     8052f6f <__sprintf_chk@plt+0x8e2f>
movzwl (%esi),%edx
mov    %dx,(%edi)
mov    $0x2,%edx
test   $0x1,%al
je     8052f7a <__sprintf_chk@plt+0x8e3a>
movzbl (%esi,%edx,1),%eax
mov    %al,(%edi,%edx,1)
mov    0x1c(%esp),%eax
mov    0x544(%eax),%eax
jmp    8052dbb <__sprintf_chk@plt+0x8c7b>
xor    %edx,%edx
jmp    8052d3b <__sprintf_chk@plt+0x8bfb>
call   8049ac0 <__stack_chk_fail@plt>
movzwl (%esi),%edx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%eax
mov    %dx,-0x2(%edi)
jmp    8052f57 <__sprintf_chk@plt+0x8e17>
movzbl (%esi),%eax
mov    0x1c(%esp),%esi
mov    %al,0x13c(%esi)
lea    0x13d(%esi),%edi
mov    $0x3ff,%eax
lea    0x2d(%esp),%esi
jmp    8052f4f <__sprintf_chk@plt+0x8e0f>
movl   $0x5,0x8(%esp)
movl   $0x806c224,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
jmp    8052ded <__sprintf_chk@plt+0x8cad>
mov    0x1c(%esp),%esi
mov    $0x100,%edx
lea    0x3c(%esi),%edi
test   $0x1,%edi
lea    0x42c(%esp),%esi
je     805301f <__sprintf_chk@plt+0x8edf>
mov    0x1c(%esp),%esi
movzbl 0x42c(%esp),%edx
lea    0x3d(%esi),%edi
mov    %dl,0x3c(%esi)
lea    0x42d(%esp),%esi
mov    $0xff,%edx
test   $0x2,%edi
je     8053037 <__sprintf_chk@plt+0x8ef7>
movzwl (%esi),%ecx
add    $0x2,%edi
add    $0x2,%esi
sub    $0x2,%edx
mov    %cx,-0x2(%edi)
mov    %edx,%ecx
shr    $0x2,%ecx
test   $0x2,%dl
rep movsl %ds:(%esi),%es:(%edi)
je     805304e <__sprintf_chk@plt+0x8f0e>
movzwl (%esi),%ecx
mov    %cx,(%edi)
mov    $0x2,%ecx
and    $0x1,%edx
je     8052ded <__sprintf_chk@plt+0x8cad>
movzbl (%esi,%ecx,1),%edx
mov    %dl,(%edi,%ecx,1)
jmp    8052ded <__sprintf_chk@plt+0x8cad>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
cmpl   $0x1,0x2c(%eax)
je     80530a1 <__sprintf_chk@plt+0x8f61>
mov    0x50(%esp),%eax
mov    $0xffffffff,%esi
mov    0x34(%eax),%edi
cmp    %edi,0x58(%esp)
jae    80531b9 <__sprintf_chk@plt+0x9079>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x544(%eax),%ebx
test   %ebx,%ebx
jne    8053081 <__sprintf_chk@plt+0x8f41>
mov    0x34(%eax),%ebx
test   %ebx,%ebx
je     80535a0 <__sprintf_chk@plt+0x9460>
cmp    %ebx,0x58(%esp)
mov    $0xffffffff,%esi
jb     8053097 <__sprintf_chk@plt+0x8f57>
cmp    $0x1,%ebx
je     805362e <__sprintf_chk@plt+0x94ee>
mov    0x50(%esp),%eax
lea    (%ebx,%ebx,2),%ecx
shl    $0x2,%ecx
mov    0x53c(%eax),%edi
lea    0x3c(%eax),%edx
add    %ebx,%edi
movzbl -0x2(%edi),%eax
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    0x540(%eax),%ebp
mov    0x54(%esp),%eax
add    %ebx,%eax
cmp    %ecx,0x58(%esp)
jbe    80535b9 <__sprintf_chk@plt+0x9479>
imul   $0xfffffff5,%ebx,%ecx
add    0x58(%esp),%ecx
add    0x54(%esp),%ecx
cmp    %ecx,%eax
mov    %ecx,0x10(%esp)
jbe    8053188 <__sprintf_chk@plt+0x9048>
jmp    80535b9 <__sprintf_chk@plt+0x9479>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
je     80531a7 <__sprintf_chk@plt+0x9067>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
je     80531a7 <__sprintf_chk@plt+0x9067>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
cmp    %eax,0x10(%esp)
jb     80535b9 <__sprintf_chk@plt+0x9479>
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
movzbl %cl,%esi
add    %esi,%eax
test   %cl,%cl
jne    8053120 <__sprintf_chk@plt+0x8fe0>
movzbl -0x2(%eax),%ecx
cmp    %ecx,0xc(%esp)
je     8053552 <__sprintf_chk@plt+0x9412>
add    %ebp,%eax
jmp    805317e <__sprintf_chk@plt+0x903e>
add    $0x13c,%eax
mov    %eax,0x28(%esp)
mov    0x50(%esp),%eax
add    $0x3c,%eax
mov    %eax,0x24(%esp)
mov    0x50(%esp),%eax
mov    0x544(%eax),%ebp
mov    0x54(%esp),%eax
add    0x58(%esp),%eax
test   %edi,%edi
mov    %eax,0x20(%esp)
jne    8053349 <__sprintf_chk@plt+0x9209>
mov    0x50(%esp),%eax
mov    0x30(%eax),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x14(%esp)
mov    %eax,0x1c(%esp)
mov    0x50(%esp),%eax
mov    0x38(%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x1c(%esp),%eax
mov    0x20(%esp),%esi
mov    0x2c(%esp),%edi
mov    %esi,%edx
sub    %eax,%edx
add    %edi,%eax
cmp    %edi,%edx
mov    $0x1,%edi
cmovle %esi,%eax
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jg     8053318 <__sprintf_chk@plt+0x91d8>
add    %edi,0x14(%esp)
mov    0x14(%esp),%eax
mov    0x24(%esp),%esi
movzbl -0x1(%eax),%eax
movzbl (%esi,%eax,1),%edi
test   %edi,%edi
jne    8053230 <__sprintf_chk@plt+0x90f0>
mov    0x14(%esp),%esi
lea    -0x1(%esi),%edx
mov    0x28(%esp),%esi
mov    (%esi,%eax,4),%eax
test   %eax,%eax
je     805352c <__sprintf_chk@plt+0x93ec>
mov    (%eax),%esi
movl   $0x0,0x18(%esp)
test   %esi,%esi
je     8053299 <__sprintf_chk@plt+0x9159>
mov    0x1c(%esp),%edi
mov    $0x0,%esi
cmp    %edx,%edi
cmovae %edx,%esi
mov    %esi,0x18(%esp)
mov    0x10(%esp),%esi
cmovae %eax,%esi
mov    %esi,0x10(%esp)
cmp    %edx,0x54(%esp)
mov    0x18(%eax),%edi
jae    80532f2 <__sprintf_chk@plt+0x91b2>
mov    0x14(%esp),%esi
sub    $0x2,%esi
test   %ebp,%ebp
mov    %esi,0xc(%esp)
je     80534c5 <__sprintf_chk@plt+0x9385>
lea    0x0(%esi),%esi
movzbl (%esi),%edx
movzbl 0x0(%ebp,%edx,1),%ebx
mov    0x4(%eax),%edx
test   %edx,%edx
je     80532f2 <__sprintf_chk@plt+0x91b2>
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    80532e6 <__sprintf_chk@plt+0x91a6>
jmp    805347b <__sprintf_chk@plt+0x933b>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     8053480 <__sprintf_chk@plt+0x9340>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    80532d8 <__sprintf_chk@plt+0x9198>
mov    0x18(%esp),%ebx
test   %ebx,%ebx
jne    8053545 <__sprintf_chk@plt+0x9405>
test   %edi,%edi
mov    $0x1,%eax
cmove  %eax,%edi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jle    8053240 <__sprintf_chk@plt+0x9100>
mov    0x10(%esp),%edi
mov    0x5c(%esp),%esi
mov    (%edi),%eax
shr    %eax
mov    %eax,(%esi)
mov    0x5c(%esp),%eax
mov    0x1c(%esp),%esi
sub    0x54(%esp),%esi
mov    %esi,0x4(%eax)
mov    0x14(%edi),%eax
mov    0x5c(%esp),%edi
mov    %eax,0x8(%edi)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,%edx
xor    %esi,%esi
lea    0x0(,%edi,4),%eax
sub    %eax,%edx
cmp    %eax,0x58(%esp)
mov    0x54(%esp),%eax
mov    %ebp,0xc(%esp)
cmovb  %esi,%edx
mov    %edx,0x18(%esp)
mov    %eax,0x14(%esp)
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
sub    0x14(%esp),%eax
cmp    %eax,%edi
jg     8053536 <__sprintf_chk@plt+0x93f6>
mov    0x18(%esp),%eax
cmp    %eax,0x14(%esp)
ja     8053513 <__sprintf_chk@plt+0x93d3>
test   %eax,%eax
je     8053513 <__sprintf_chk@plt+0x93d3>
mov    0x14(%esp),%eax
mov    0x24(%esp),%esi
lea    -0x1(%eax,%edi,1),%eax
movzbl (%eax),%ecx
movzbl (%esi,%ecx,1),%edi
test   %edi,%edi
mov    %edi,%edx
je     80533e8 <__sprintf_chk@plt+0x92a8>
mov    0x18(%esp),%ebx
cmp    %ebx,%eax
jae    80533e8 <__sprintf_chk@plt+0x92a8>
mov    %esi,%ebp
jmp    80533c4 <__sprintf_chk@plt+0x9284>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
jae    80533e8 <__sprintf_chk@plt+0x92a8>
add    %edx,%eax
movzbl (%eax),%edx
movzbl 0x0(%ebp,%edx,1),%edx
add    %edx,%eax
movzbl (%eax),%edx
movzbl 0x0(%ebp,%edx,1),%edx
add    %edx,%eax
movzbl (%eax),%ecx
movzbl 0x0(%ebp,%ecx,1),%edx
test   %edx,%edx
mov    %edx,%edi
jne    80533c0 <__sprintf_chk@plt+0x9280>
add    $0x1,%eax
mov    %eax,0x14(%esp)
test   %edi,%edi
jne    8053370 <__sprintf_chk@plt+0x9230>
mov    0x28(%esp),%eax
mov    0x14(%esp),%esi
mov    (%eax,%ecx,4),%eax
lea    -0x1(%esi),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
cmovne %edx,%edi
mov    %edi,0x1c(%esp)
mov    0x10(%esp),%edi
cmovne %eax,%edi
cmp    %edx,0x54(%esp)
mov    %edi,0x10(%esp)
mov    0x18(%eax),%edi
jae    8053466 <__sprintf_chk@plt+0x9326>
mov    0xc(%esp),%ebx
sub    $0x2,%esi
mov    %esi,%ebp
test   %ebx,%ebx
je     805350b <__sprintf_chk@plt+0x93cb>
lea    0x0(%esi),%esi
movzbl (%esi),%edx
movzbl (%ebx,%edx,1),%ebx
mov    0x4(%eax),%edx
test   %edx,%edx
je     8053466 <__sprintf_chk@plt+0x9326>
movzbl 0xc(%edx),%ecx
cmp    %cl,%bl
jne    805345a <__sprintf_chk@plt+0x931a>
jmp    80534cd <__sprintf_chk@plt+0x938d>
movzbl 0xc(%eax),%ecx
cmp    %cl,%bl
je     80534d0 <__sprintf_chk@plt+0x9390>
mov    %eax,%edx
mov    0x4(%edx),%eax
cmp    %cl,%bl
cmovb  (%edx),%eax
test   %eax,%eax
jne    8053450 <__sprintf_chk@plt+0x9310>
mov    0x1c(%esp),%ebp
test   %ebp,%ebp
je     8053370 <__sprintf_chk@plt+0x9230>
mov    0xc(%esp),%ebp
jmp    8053202 <__sprintf_chk@plt+0x90c2>
mov    %edx,%eax
lea    0x0(%esi),%esi
mov    0x8(%eax),%eax
mov    (%eax),%edx
test   %edx,%edx
je     80534a5 <__sprintf_chk@plt+0x9365>
mov    0x1c(%esp),%ebx
mov    0x18(%esp),%edi
cmp    %esi,%ebx
cmovae %esi,%edi
mov    %edi,0x18(%esp)
mov    0x10(%esp),%edi
cmovae %eax,%edi
mov    %edi,0x10(%esp)
mov    0xc(%esp),%ebx
sub    $0x1,%esi
cmp    %ebx,0x54(%esp)
mov    0x18(%eax),%edi
jae    80532f2 <__sprintf_chk@plt+0x91b2>
test   %ebp,%ebp
mov    %esi,0xc(%esp)
jne    80532b8 <__sprintf_chk@plt+0x9178>
movzbl (%esi),%ebx
jmp    80532c0 <__sprintf_chk@plt+0x9180>
mov    %edx,%eax
nop
mov    0x8(%eax),%eax
mov    0x1c(%esp),%edi
mov    (%eax),%ecx
test   %ecx,%ecx
cmovne %esi,%edi
mov    %edi,0x1c(%esp)
mov    0x10(%esp),%edi
cmovne %eax,%edi
sub    $0x1,%esi
cmp    %ebp,0x54(%esp)
mov    %edi,0x10(%esp)
mov    0x18(%eax),%edi
jae    8053466 <__sprintf_chk@plt+0x9326>
mov    0xc(%esp),%ebx
mov    %esi,%ebp
test   %ebx,%ebx
jne    8053438 <__sprintf_chk@plt+0x92f8>
movzbl (%esi),%ebx
jmp    805343f <__sprintf_chk@plt+0x92ff>
add    %edi,0x14(%esp)
mov    0x14(%esp),%eax
movzbl -0x1(%eax),%ecx
mov    0x24(%esp),%eax
movzbl (%eax,%ecx,1),%edi
jmp    80533ef <__sprintf_chk@plt+0x92af>
mov    $0x1,%edi
jmp    8053230 <__sprintf_chk@plt+0x90f0>
add    $0x3c,%esp
mov    $0xffffffff,%esi
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    8053211 <__sprintf_chk@plt+0x90d1>
cmp    $0x2,%ebx
jle    8053589 <__sprintf_chk@plt+0x9449>
movzbl -0x3(%edi),%ecx
cmp    %cl,-0x3(%eax)
jne    80531b5 <__sprintf_chk@plt+0x9075>
xor    %ecx,%ecx
mov    %eax,%esi
jmp    805357c <__sprintf_chk@plt+0x943c>
movzbl -0x4(%esi,%ecx,1),%eax
sub    $0x1,%ecx
cmp    -0x3(%edi,%ecx,1),%al
jne    8053666 <__sprintf_chk@plt+0x9526>
mov    $0x4,%eax
sub    %ecx,%eax
cmp    %eax,%ebx
jge    805356a <__sprintf_chk@plt+0x942a>
mov    %esi,%eax
sub    %ebx,%eax
mov    %eax,%esi
sub    0x54(%esp),%esi
cmp    $0xffffffff,%esi
jne    80535a4 <__sprintf_chk@plt+0x9464>
jmp    8053097 <__sprintf_chk@plt+0x8f57>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
xor    %esi,%esi
mov    0x5c(%esp),%eax
movl   $0x0,(%eax)
mov    %esi,0x4(%eax)
mov    %ebx,0x8(%eax)
jmp    8053097 <__sprintf_chk@plt+0x8f57>
mov    0x50(%esp),%esi
movzbl -0x1(%eax),%ecx
movzbl 0x3c(%esi,%ecx,1),%ecx
mov    0x54(%esp),%esi
add    0x58(%esp),%esi
mov    %esi,0x10(%esp)
mov    0x10(%esp),%esi
sub    %eax,%esi
cmp    %esi,%ecx
jg     8053536 <__sprintf_chk@plt+0x93f6>
add    %ecx,%eax
movzbl -0x1(%eax),%ecx
movzbl (%edx,%ecx,1),%ecx
test   %ecx,%ecx
jne    80535d2 <__sprintf_chk@plt+0x9492>
movzbl -0x2(%eax),%esi
mov    %ebp,%ecx
cmp    %esi,0xc(%esp)
jne    80535d2 <__sprintf_chk@plt+0x9492>
cmp    $0x2,%ebx
jle    8053589 <__sprintf_chk@plt+0x9449>
movzbl -0x3(%edi),%ecx
cmp    %cl,-0x3(%eax)
jne    8053671 <__sprintf_chk@plt+0x9531>
xor    %ecx,%ecx
mov    %eax,%esi
jmp    805361e <__sprintf_chk@plt+0x94de>
xchg   %ax,%ax
movzbl -0x4(%esi,%ecx,1),%eax
sub    $0x1,%ecx
cmp    -0x3(%edi,%ecx,1),%al
jne    805366f <__sprintf_chk@plt+0x952f>
mov    $0x4,%eax
sub    %ecx,%eax
cmp    %eax,%ebx
jge    8053610 <__sprintf_chk@plt+0x94d0>
jmp    8053587 <__sprintf_chk@plt+0x9447>
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    0x53c(%eax),%eax
movsbl (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
je     8053097 <__sprintf_chk@plt+0x8f57>
sub    0x54(%esp),%eax
mov    %eax,%esi
jmp    8053591 <__sprintf_chk@plt+0x9451>
mov    %esi,%eax
add    %ebp,%eax
jmp    805317e <__sprintf_chk@plt+0x903e>
mov    %esi,%eax
mov    %ebp,%ecx
jmp    80535d2 <__sprintf_chk@plt+0x9492>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8049b40 <obstack_free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80499d0 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    %esi,%edx
sub    $0x4c,%esp
cmp    $0xffffffff,%edx
mov    %eax,0x34(%esp)
movzbl 0x80749e0,%eax
mov    %esi,0x807456c
je     80537e1 <__sprintf_chk@plt+0x96a1>
mov    0x8074574,%ecx
add    $0x1,%edx
xor    %edi,%edi
mov    0x8074570,%ebx
mov    %edx,0x1c(%esp)
mov    %eax,0x30(%esp)
mov    %ecx,0x38(%esp)
mov    %ecx,%ebp
mov    0x34(%esp),%ecx
mov    %ebx,0x3c(%esp)
mov    %ebx,%esi
xor    %ebx,%ebx
jmp    805372c <__sprintf_chk@plt+0x95ec>
lea    0x0(%esi),%esi
mov    %edi,%eax
sub    $0x1,%edi
mov    %al,0x0(%ebp)
movl   $0x0,(%esi)
add    $0x1,%ebx
add    $0x1,%ebp
add    $0x4,%esi
add    $0x1,%ecx
cmp    0x1c(%esp),%ebx
je     80537b8 <__sprintf_chk@plt+0x9678>
test   %edi,%edi
jne    8053708 <__sprintf_chk@plt+0x95c8>
mov    0x1c(%esp),%eax
mov    %ecx,0x4(%esp)
movl   $0x807457c,0xc(%esp)
mov    %esi,(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0x20(%esp)
mov    %esi,0x2c(%esp)
call   8049c20 <mbrtowc@plt>
mov    0x20(%esp),%ecx
lea    -0x1(%eax),%edx
cmp    $0xfffffffc,%edx
mov    %edx,0x24(%esp)
jbe    80537a0 <__sprintf_chk@plt+0x9660>
movsbl (%ecx),%eax
mov    %eax,%edx
mov    %edx,(%esi)
mov    %ebp,%edx
movb   $0x0,0x0(%ebp)
movsbl (%ecx),%eax
cmp    0x30(%esp),%eax
jne    8053716 <__sprintf_chk@plt+0x95d6>
mov    0x28(%esp),%eax
mov    %eax,0x8074568
mov    0x2c(%esp),%eax
movb   $0x0,(%edx)
movl   $0x0,(%eax)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x1,%eax
je     80537d8 <__sprintf_chk@plt+0x9698>
mov    0x8074574,%edi
mov    %al,(%edi,%ebx,1)
mov    0x24(%esp),%edi
jmp    8053716 <__sprintf_chk@plt+0x95d6>
nop
mov    0x34(%esp),%eax
mov    0x38(%esp),%edx
add    %ebx,%eax
mov    %eax,0x28(%esp)
mov    0x3c(%esp),%eax
add    %ebx,%edx
lea    (%eax,%ebx,4),%eax
mov    %eax,0x2c(%esp)
jmp    8053780 <__sprintf_chk@plt+0x9640>
lea    0x0(%esi),%esi
movsbl (%ecx),%edx
cmp    %edx,(%esi)
jne    80537a5 <__sprintf_chk@plt+0x9665>
jmp    805376f <__sprintf_chk@plt+0x962f>
mov    0x8074570,%eax
mov    0x8074574,%edx
mov    %esi,0x28(%esp)
mov    %eax,0x2c(%esp)
mov    %esi,%eax
jmp    8053784 <__sprintf_chk@plt+0x9644>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x2c,%esp
mov    0x4(%ecx),%ebp
mov    %edx,0x18(%esp)
mov    (%ecx),%esi
mov    %ecx,0x14(%esp)
mov    %ebp,%edx
jmp    8053823 <__sprintf_chk@plt+0x96e3>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ebx
cmp    %ebx,%edx
jbe    8053846 <__sprintf_chk@plt+0x9706>
lea    (%ebx,%edx,1),%eax
shr    %eax
cmp    (%esi,%eax,8),%edi
jb     8053820 <__sprintf_chk@plt+0x96e0>
cmp    %eax,%ebx
mov    %eax,%edx
jae    8053846 <__sprintf_chk@plt+0x9706>
add    %ebx,%eax
shr    %eax
cmp    %edi,(%esi,%eax,8)
ja     8053820 <__sprintf_chk@plt+0x96e0>
cmp    %eax,%ebx
mov    %eax,%edx
jb     8053837 <__sprintf_chk@plt+0x96f7>
cmp    %ebx,%ebp
jbe    8053855 <__sprintf_chk@plt+0x9715>
lea    (%esi,%ebx,8),%eax
cmp    %edi,(%eax)
je     8053908 <__sprintf_chk@plt+0x97c8>
mov    0x14(%esp),%eax
lea    0x1(%ebp),%edx
cmp    %edx,0x8(%eax)
ja     80538b9 <__sprintf_chk@plt+0x9779>
test   %esi,%esi
sete   %al
movzbl %al,%ecx
add    %ebp,%ecx
test   %al,%al
lea    0x1(%ecx),%edx
jne    8053918 <__sprintf_chk@plt+0x97d8>
cmp    $0x15555554,%edx
ja     805392f <__sprintf_chk@plt+0x97ef>
add    $0x2,%ecx
shr    %ecx
add    %ecx,%edx
lea    0x0(,%edx,8),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x1c(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x14(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %edx,0x8(%ecx)
mov    %eax,(%ecx)
mov    0x4(%ecx),%ecx
mov    %eax,%esi
mov    %ecx,0x1c(%esp)
lea    0x1(%ecx),%edx
cmp    %ebx,%ebp
jbe    80538ed <__sprintf_chk@plt+0x97ad>
mov    %ebp,%eax
sub    %ebx,%eax
shl    $0x3,%ebp
shl    $0x3,%eax
mov    %ebp,%ecx
sub    %eax,%ecx
add    %esi,%ecx
mov    %ecx,0x4(%esp)
mov    %esi,%ecx
sub    %eax,%ecx
mov    %eax,0x8(%esp)
lea    0x8(%ecx,%ebp,1),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   80499c0 <memmove@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %edi,(%esi,%ebx,8)
mov    %eax,0x4(%esi,%ebx,8)
mov    0x14(%esp),%eax
mov    %edx,0x4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x18(%esp),%ecx
or     %ecx,0x4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
test   %edx,%edx
jne    8053889 <__sprintf_chk@plt+0x9749>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8053890 <__sprintf_chk@plt+0x9750>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x64(%eax),%esi
cmp    %edx,%esi
mov    %esi,%eax
jg     8053a1e <__sprintf_chk@plt+0x98de>
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%eax
cmp    %eax,%edx
jge    8053958 <__sprintf_chk@plt+0x9818>
mov    %eax,0x64(%ebx)
add    $0x1,%eax
mov    0x70(%ebx),%edx
cmp    $0x3fffffff,%eax
ja     8053a24 <__sprintf_chk@plt+0x98e4>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x74(%ebx),%edx
mov    %eax,0x70(%ebx)
add    $0x4,%eax
mov    %eax,0x6c(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8053a24 <__sprintf_chk@plt+0x98e4>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x78(%ebx),%edx
mov    %eax,0x74(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8053a24 <__sprintf_chk@plt+0x98e4>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x7c(%ebx),%edx
mov    %eax,0x78(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8053a24 <__sprintf_chk@plt+0x98e4>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x64(%ebx),%ecx
cmp    %ecx,%esi
mov    %eax,0x7c(%ebx)
jge    8053a1e <__sprintf_chk@plt+0x98de>
lea    0x0(,%esi,4),%edx
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%ebx),%eax
add    $0x1,%esi
movl   $0x0,(%eax,%edx,1)
mov    0x74(%ebx),%eax
movl   $0x0,(%eax,%edx,1)
add    $0x4,%edx
cmp    %ecx,%esi
jne    8053a00 <__sprintf_chk@plt+0x98c0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x80749f0,%ebx
cmp    $0x1,%eax
jbe    8053aa9 <__sprintf_chk@plt+0x9969>
mov    0x10(%ebx),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x3c(%ebx)
ja     8053aa3 <__sprintf_chk@plt+0x9963>
mov    0x40(%ebx),%edx
test   %edx,%edx
sete   %cl
movzbl %cl,%ebp
add    %ebp,%eax
test   %cl,%cl
lea    0x1(%eax),%ebp
jne    8053b78 <__sprintf_chk@plt+0x9a38>
cmp    $0x2aaaaaa9,%ebp
ja     8053b8f <__sprintf_chk@plt+0x9a4f>
add    $0x2,%eax
shr    %eax
add    %eax,%ebp
lea    0x0(,%ebp,4),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0x40(%ebx)
mov    0x80749f0,%ebx
mov    0x10(%ebx),%eax
mov    %ebp,0x3c(%ebx)
mov    0x40(%ebx),%edx
mov    %edi,(%edx,%eax,4)
mov    0x10(%ebx),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x14(%ebx)
ja     8053b04 <__sprintf_chk@plt+0x99c4>
mov    0xc(%ebx),%edx
test   %edx,%edx
sete   %cl
movzbl %cl,%edi
add    %edi,%eax
test   %cl,%cl
lea    0x1(%eax),%edi
jne    8053b60 <__sprintf_chk@plt+0x9a20>
cmp    $0x2aaaaaa9,%edi
ja     8053b8f <__sprintf_chk@plt+0x9a4f>
add    $0x2,%eax
shr    %eax
add    %eax,%edi
lea    0x0(,%edi,4),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0xc(%ebx)
mov    0x80749f0,%ebx
mov    0x10(%ebx),%eax
mov    %edi,0x14(%ebx)
lea    0x1(%eax),%edx
mov    0xc(%ebx),%ecx
mov    %edx,0x10(%ebx)
mov    %esi,(%ecx,%eax,4)
sub    $0x100,%esi
cmp    $0xd,%esi
ja     8053b20 <__sprintf_chk@plt+0x99e0>
jmp    *0x806de80(,%esi,4)
nop
addl   $0x1,0x1c(%ebx)
mov    0x8074560,%eax
add    $0x1,%eax
mov    %eax,0x8074560
cmp    %eax,0x18(%ebx)
jae    8053b39 <__sprintf_chk@plt+0x99f9>
mov    %eax,0x18(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8074560,%eax
sub    $0x1,%eax
mov    %eax,0x8074560
jmp    8053b31 <__sprintf_chk@plt+0x99f1>
nop
mov    0x8074560,%eax
jmp    8053b31 <__sprintf_chk@plt+0x99f1>
nop
test   %edi,%edi
jne    8053adf <__sprintf_chk@plt+0x999f>
mov    $0x40,%eax
mov    $0x10,%edi
jmp    8053ae6 <__sprintf_chk@plt+0x99a6>
nop
test   %ebp,%ebp
jne    8053a81 <__sprintf_chk@plt+0x9941>
mov    $0x40,%eax
mov    $0x10,%ebp
jmp    8053a88 <__sprintf_chk@plt+0x9948>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    0x80749f0,%eax
mov    0x4(%eax),%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
test   %esi,%esi
mov    %eax,0x1c(%esp)
je     8053bf8 <__sprintf_chk@plt+0x9ab8>
mov    %eax,%ebp
xor    %edi,%edi
jmp    8053bd2 <__sprintf_chk@plt+0x9a92>
nop
add    $0x1,%edi
add    $0x20,%ebp
cmp    %esi,%edi
je     8053bf8 <__sprintf_chk@plt+0x9ab8>
movl   $0x20,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   8049a50 <memcmp@plt>
test   %eax,%eax
jne    8053bc8 <__sprintf_chk@plt+0x9a88>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ecx
lea    0x1(%esi),%eax
cmp    %eax,0x8(%ecx)
ja     8053cb0 <__sprintf_chk@plt+0x9b70>
mov    0x1c(%esp),%eax
test   %eax,%eax
sete   %cl
movzbl %cl,%eax
add    %esi,%eax
test   %cl,%cl
lea    0x1(%eax),%esi
jne    8053cb8 <__sprintf_chk@plt+0x9b78>
cmp    $0x5555554,%esi
ja     8053ccf <__sprintf_chk@plt+0x9b8f>
add    $0x2,%eax
shr    %eax
add    %eax,%esi
mov    %esi,%eax
shl    $0x5,%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80749f0,%edx
mov    0x18(%esp),%ecx
mov    %eax,(%ecx)
mov    0x4(%edx),%eax
mov    (%edx),%ecx
mov    %esi,0x8(%edx)
add    $0x1,%eax
mov    %ecx,0x1c(%esp)
mov    %ecx,%ebp
mov    %eax,0x4(%edx)
mov    %edi,%eax
shl    $0x5,%eax
add    %eax,%ebp
mov    (%ebx),%eax
mov    %eax,0x0(%ebp)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%ebp)
mov    0x8(%ebx),%eax
mov    %eax,0x8(%ebp)
mov    0xc(%ebx),%eax
mov    %eax,0xc(%ebp)
mov    0x10(%ebx),%eax
mov    %eax,0x10(%ebp)
mov    0x14(%ebx),%eax
mov    %eax,0x14(%ebp)
mov    0x18(%ebx),%eax
mov    %eax,0x18(%ebp)
mov    0x1c(%ebx),%eax
mov    %eax,0x1c(%ebp)
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,%edx
mov    0x1c(%esp),%ebp
jmp    8053c66 <__sprintf_chk@plt+0x9b26>
test   %esi,%esi
jne    8053c34 <__sprintf_chk@plt+0x9af4>
mov    $0x40,%eax
mov    $0x2,%esi
jmp    8053c39 <__sprintf_chk@plt+0x9af9>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x40(%eax),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x48(%ebp),%ecx
movl   $0x0,0x40(%ebp)
movl   $0x0,0xc(%esp)
test   %ecx,%ecx
je     8053db6 <__sprintf_chk@plt+0x9c76>
mov    0x44(%ebp),%ebx
xor    %esi,%esi
add    %edi,%ebx
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x28(%ebx),%edx
test   %edx,%edx
je     8053d66 <__sprintf_chk@plt+0x9c26>
lea    0x0(%esi),%esi
mov    0x24(%ebx),%edx
mov    (%edx,%esi,4),%edx
add    $0x1,%esi
mov    %edx,(%esp)
call   80499d0 <free@plt>
cmp    %esi,0x28(%ebx)
ja     8053d50 <__sprintf_chk@plt+0x9c10>
mov    0x24(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     8053d96 <__sprintf_chk@plt+0x9c56>
lea    0x0(%esi),%esi
mov    0x2c(%ebx),%edx
mov    (%edx,%esi,4),%edx
add    $0x1,%esi
mov    %edx,(%esp)
call   80499d0 <free@plt>
cmp    %esi,0x30(%ebx)
ja     8053d80 <__sprintf_chk@plt+0x9c40>
mov    0x2c(%ebx),%eax
add    $0x34,%edi
mov    %eax,(%esp)
call   80499d0 <free@plt>
addl   $0x1,0xc(%esp)
mov    0xc(%esp),%eax
cmp    %eax,0x48(%ebp)
ja     8053d10 <__sprintf_chk@plt+0x9bd0>
mov    0x44(%ebp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,0x44(%ebp)
movl   $0x0,0x48(%ebp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x80749f0,%ebx
cmp    $0x1,%eax
jbe    8053e56 <__sprintf_chk@plt+0x9d16>
mov    0x10(%ebx),%edx
lea    0x1(%edx),%eax
cmp    %eax,0x3c(%ebx)
ja     8053e50 <__sprintf_chk@plt+0x9d10>
mov    0x40(%ebx),%ecx
test   %ecx,%ecx
sete   %al
movzbl %al,%edi
add    %edi,%edx
test   %al,%al
lea    0x1(%edx),%edi
jne    8053ef0 <__sprintf_chk@plt+0x9db0>
cmp    $0x2aaaaaa9,%edi
ja     8053f07 <__sprintf_chk@plt+0x9dc7>
add    $0x2,%edx
shr    %edx
add    %edx,%edi
lea    0x0(,%edi,4),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0x40(%ebx)
mov    0x80749f0,%ebx
mov    0x10(%ebx),%edx
mov    %edi,0x3c(%ebx)
mov    0x40(%ebx),%eax
mov    %esi,(%eax,%edx,4)
mov    0x10(%ebx),%edx
lea    0x1(%edx),%eax
cmp    %eax,0x14(%ebx)
ja     8053ead <__sprintf_chk@plt+0x9d6d>
mov    0xc(%ebx),%eax
test   %eax,%eax
sete   %cl
movzbl %cl,%esi
add    %esi,%edx
test   %cl,%cl
lea    0x1(%edx),%esi
jne    8053ee0 <__sprintf_chk@plt+0x9da0>
cmp    $0x2aaaaaa9,%esi
ja     8053f07 <__sprintf_chk@plt+0x9dc7>
add    $0x2,%edx
shr    %edx
add    %edx,%esi
lea    0x0(,%esi,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0xc(%ebx)
mov    0x80749f0,%ebx
mov    0x10(%ebx),%edx
mov    %esi,0x14(%ebx)
lea    0x1(%edx),%eax
mov    %eax,0x10(%ebx)
mov    0xc(%ebx),%ecx
mov    0x8074560,%eax
movl   $0x111,(%ecx,%edx,4)
add    $0x1,%eax
addl   $0x1,0x1c(%ebx)
cmp    0x18(%ebx),%eax
mov    %eax,0x8074560
jbe    8053ed3 <__sprintf_chk@plt+0x9d93>
mov    %eax,0x18(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
test   %esi,%esi
jne    8053e88 <__sprintf_chk@plt+0x9d48>
mov    $0x40,%edx
mov    $0x10,%esi
jmp    8053e8f <__sprintf_chk@plt+0x9d4f>
test   %edi,%edi
jne    8053e2e <__sprintf_chk@plt+0x9cee>
mov    $0x40,%eax
mov    $0x10,%edi
jmp    8053e35 <__sprintf_chk@plt+0x9cf5>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8053f98 <__sprintf_chk@plt+0x9e58>
mov    %ebx,(%esp)
call   8049eb0 <btowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     8053f90 <__sprintf_chk@plt+0x9e50>
mov    %ebx,%eax
mov    $0x1,%edx
shr    $0x5,%eax
mov    %ebx,%ecx
shl    %cl,%edx
or     %edx,(%esi,%eax,4)
mov    0x80749e4,%edx
test   %edx,%edx
je     8053f90 <__sprintf_chk@plt+0x9e50>
mov    %edi,(%esp)
call   8049af0 <iswalpha@plt>
test   %eax,%eax
je     8053f90 <__sprintf_chk@plt+0x9e50>
mov    %edi,(%esp)
call   8049df0 <iswupper@plt>
mov    %edi,(%esp)
test   %eax,%eax
jne    8054000 <__sprintf_chk@plt+0x9ec0>
call   804a070 <towupper@plt>
mov    %eax,(%esp)
call   8049dc0 <wctob@plt>
cmp    $0xffffffff,%eax
je     8053f90 <__sprintf_chk@plt+0x9e50>
mov    %eax,%ebx
mov    $0x1,%edx
shr    $0x5,%ebx
mov    %eax,%ecx
shl    %cl,%edx
or     %edx,(%esi,%ebx,4)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %ebx,%edx
mov    $0x1,%eax
shr    $0x5,%edx
mov    %ebx,%ecx
shl    %cl,%eax
or     %eax,(%esi,%edx,4)
mov    0x80749e4,%eax
test   %eax,%eax
je     8053f90 <__sprintf_chk@plt+0x9e50>
call   804a120 <__ctype_b_loc@plt>
mov    (%eax),%eax
movzwl (%eax,%ebx,2),%eax
test   $0x4,%ah
je     8053f90 <__sprintf_chk@plt+0x9e50>
test   $0x1,%ah
lea    0x80(%ebx),%eax
je     8054010 <__sprintf_chk@plt+0x9ed0>
cmp    $0x17f,%eax
jbe    8054028 <__sprintf_chk@plt+0x9ee8>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8053feb <__sprintf_chk@plt+0x9eab>
mov    %ebx,(%esp)
call   8049eb0 <btowc@plt>
cmp    $0xffffffff,%eax
je     8053f90 <__sprintf_chk@plt+0x9e50>
mov    %ebx,%edx
mov    $0x1,%eax
shr    $0x5,%edx
mov    %ebx,%ecx
shl    %cl,%eax
or     %eax,(%esi,%edx,4)
jmp    8053f90 <__sprintf_chk@plt+0x9e50>
xchg   %ax,%ax
call   8049a20 <towlower@plt>
jmp    8053f72 <__sprintf_chk@plt+0x9e32>
lea    0x0(%esi),%esi
cmp    $0x17f,%eax
ja     8053fd4 <__sprintf_chk@plt+0x9e94>
call   8049930 <__ctype_toupper_loc@plt>
mov    (%eax),%eax
mov    (%eax,%ebx,4),%ebx
jmp    8053fd4 <__sprintf_chk@plt+0x9e94>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a100 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%ebx,4),%ebx
jmp    8053fd4 <__sprintf_chk@plt+0x9e94>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0xec,%esp
mov    %eax,0x1c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0xdc(%esp)
xor    %eax,%eax
lea    (%edx,%edx,8),%eax
mov    %ecx,0x30(%esp)
lea    0x0(,%eax,4),%ecx
mov    0x50(%esi),%eax
mov    %ecx,0x3c(%esp)
mov    0x1c(%eax,%ecx,1),%eax
cmp    $0x3fffffff,%eax
ja     80544f1 <__sprintf_chk@plt+0xa3b1>
shl    $0x2,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x1c(%esp),%esi
mov    %eax,0x28(%esp)
mov    0x3c(%esp),%eax
add    0x50(%esi),%eax
mov    0x30(%esp),%esi
mov    0x1c(%eax),%edx
mov    %eax,0x18(%esp)
shl    $0x2,%esi
mov    %esi,0x2c(%esp)
xor    %esi,%esi
test   %edx,%edx
mov    %esi,%ebp
je     8054227 <__sprintf_chk@plt+0xa0e7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x18(%eax),%eax
lea    (%eax,%ebp,8),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%edi
mov    0x1c(%esp),%eax
mov    0xc(%eax),%eax
mov    (%eax,%ebx,4),%eax
cmp    $0x110,%eax
je     8054250 <__sprintf_chk@plt+0xa110>
cmp    $0x111,%eax
jne    805421c <__sprintf_chk@plt+0xa0dc>
mov    0x8074570,%eax
mov    0x2c(%esp),%ecx
movzbl 0x80749e0,%edx
mov    (%eax,%ecx,1),%eax
cmp    %edx,%eax
mov    %eax,0x24(%esp)
je     80542f0 <__sprintf_chk@plt+0xa1b0>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    80542ff <__sprintf_chk@plt+0xa1bf>
xor    %eax,%eax
xor    %esi,%esi
testb  $0x80,0x80749ec
jne    805420e <__sprintf_chk@plt+0xa0ce>
mov    %edi,%eax
xor    %edi,%edi
shr    $0x8,%eax
and    $0xf,%eax
or     %eax,%edi
mov    0x18(%esp),%eax
movzbl 0x10(%eax),%edx
xor    %eax,%eax
test   %edx,%edi
je     805420e <__sprintf_chk@plt+0xa0ce>
mov    0x1c(%esp),%ecx
mov    0x40(%ecx),%eax
mov    (%eax,%ebx,4),%ebx
sar    $0x2,%ebx
imul   $0x34,%ebx,%ebx
add    0x44(%ecx),%ebx
mov    0x30(%esp),%ecx
mov    0x4(%ebx),%edi
test   %edi,%edi
sete   %al
mov    %al,0x47(%esp)
movzbl %al,%eax
mov    %eax,0x40(%esp)
mov    0x8074574,%eax
movzbl (%eax,%ecx,1),%eax
test   %al,%al
movzbl %al,%edx
mov    $0x1,%eax
cmove  %eax,%edx
cmpl   $0xff,0x24(%esp)
mov    %edx,0x38(%esp)
jg     80541bc <__sprintf_chk@plt+0xa07c>
mov    (%ebx),%edx
cmp    $0xffffffff,%edx
je     80541bc <__sprintf_chk@plt+0xa07c>
mov    0x24(%esp),%ecx
shl    $0x5,%edx
mov    0x1c(%esp),%edi
mov    %ecx,%eax
shr    $0x3,%eax
and    $0x1c,%eax
add    (%edi),%eax
mov    (%eax,%edx,1),%eax
shr    %cl,%eax
test   $0x1,%al
jne    8054201 <__sprintf_chk@plt+0xa0c1>
mov    0x14(%ebx),%ecx
test   %ecx,%ecx
je     8054347 <__sprintf_chk@plt+0xa207>
xor    %edi,%edi
jmp    80541dc <__sprintf_chk@plt+0xa09c>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
cmp    0x14(%ebx),%edi
jae    8054338 <__sprintf_chk@plt+0xa1f8>
mov    0x10(%ebx),%eax
mov    (%eax,%edi,4),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049bd0 <iswctype@plt>
test   %eax,%eax
je     80541d0 <__sprintf_chk@plt+0xa090>
mov    0x1c(%esp),%ecx
mov    0x3c(%esp),%eax
add    0x50(%ecx),%eax
mov    %eax,0x18(%esp)
mov    0x40(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
cmovne 0x38(%esp),%eax
mov    0x28(%esp),%ecx
mov    %eax,(%ecx,%ebp,4)
mov    0x18(%esp),%eax
mov    0x1c(%eax),%edx
add    $0x1,%ebp
cmp    %edx,%ebp
jb     80540c0 <__sprintf_chk@plt+0x9f80>
mov    0xdc(%esp),%ecx
xor    %gs:0x14,%ecx
mov    0x28(%esp),%eax
jne    80544ec <__sprintf_chk@plt+0xa3ac>
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ecx
mov    0x8074570,%eax
mov    0x8074574,%edx
mov    (%eax,%ecx,1),%eax
mov    0x30(%esp),%ecx
movzbl (%edx,%ecx,1),%edx
mov    $0x1,%ecx
test   %dl,%dl
movzbl %dl,%ebx
cmove  %ecx,%ebx
movzbl 0x80749e0,%ecx
cmp    %ecx,%eax
je     80542c0 <__sprintf_chk@plt+0xa180>
test   %eax,%eax
jne    80542cb <__sprintf_chk@plt+0xa18b>
xor    %edx,%edx
testb  $0x80,0x80749ec
jne    80542ac <__sprintf_chk@plt+0xa16c>
mov    %edi,%eax
xor    %edi,%edi
shr    $0x8,%eax
and    $0xf,%eax
or     %eax,%edi
mov    0x18(%esp),%eax
xor    %edx,%edx
movzbl 0x10(%eax),%eax
test   %eax,%edi
cmovne %ebx,%edx
mov    0x28(%esp),%eax
mov    %edx,(%eax,%ebp,4)
mov    0x18(%esp),%eax
mov    0x1c(%eax),%edx
jmp    805421c <__sprintf_chk@plt+0xa0dc>
nop
xor    %edx,%edx
testb  $0x40,0x80749ec
je     80542ac <__sprintf_chk@plt+0xa16c>
cmp    %ecx,%eax
je     8054291 <__sprintf_chk@plt+0xa151>
test   %eax,%eax
je     8054291 <__sprintf_chk@plt+0xa151>
cmp    $0x5f,%eax
je     80542e4 <__sprintf_chk@plt+0xa1a4>
mov    %eax,(%esp)
call   8049e70 <iswalnum@plt>
test   %eax,%eax
je     80542e7 <__sprintf_chk@plt+0xa1a7>
shr    $0x4,%edi
and    $0xf,%edi
xor    %eax,%eax
jmp    805429b <__sprintf_chk@plt+0xa15b>
xchg   %ax,%ax
xor    %eax,%eax
testb  $0x40,0x80749ec
je     805420e <__sprintf_chk@plt+0xa0ce>
mov    0x24(%esp),%eax
cmp    %edx,%eax
mov    %eax,%esi
je     805412b <__sprintf_chk@plt+0x9feb>
test   %eax,%eax
je     805412b <__sprintf_chk@plt+0x9feb>
cmp    $0x5f,%eax
je     8054326 <__sprintf_chk@plt+0xa1e6>
mov    %eax,(%esp)
call   8049e70 <iswalnum@plt>
test   %eax,%eax
je     8054329 <__sprintf_chk@plt+0xa1e9>
shr    $0x4,%edi
and    $0xf,%edi
xor    %eax,%eax
jmp    8054135 <__sprintf_chk@plt+0x9ff5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%esi
mov    0x3c(%esp),%eax
add    0x50(%esi),%eax
mov    %eax,0x18(%esp)
mov    0x30(%esp),%eax
add    0x807456c,%eax
mov    0x38(%esp),%esi
movl   $0x80,0xc(%esp)
mov    %eax,0x20(%esp)
mov    %eax,0x4(%esp)
lea    0x5c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   8049ed0 <__strncpy_chk@plt>
mov    0x28(%ebx),%eax
movb   $0x0,0x5c(%esp,%esi,1)
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8054400 <__sprintf_chk@plt+0xa2c0>
mov    0x24(%ebx),%eax
xor    %edi,%edi
mov    %ebp,0x48(%esp)
mov    %ebx,0x4c(%esp)
mov    %eax,%ebp
jmp    80543a1 <__sprintf_chk@plt+0xa261>
xchg   %ax,%ax
add    $0x1,%edi
cmp    0x34(%esp),%edi
je     80543f8 <__sprintf_chk@plt+0xa2b8>
mov    0x0(%ebp,%edi,4),%ebx
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
movl   $0x80,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8049ed0 <__strncpy_chk@plt>
lea    0x5c(%esp),%eax
movb   $0x0,0x5c(%esp,%esi,1)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049c60 <strcoll@plt>
test   %eax,%eax
jne    8054398 <__sprintf_chk@plt+0xa258>
mov    0x48(%esp),%ebp
mov    %esi,0x38(%esp)
jmp    8054201 <__sprintf_chk@plt+0xa0c1>
lea    0x0(%esi),%esi
mov    0x48(%esp),%ebp
mov    0x4c(%esp),%ebx
mov    0x30(%ebx),%eax
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8054480 <__sprintf_chk@plt+0xa340>
mov    0x2c(%ebx),%eax
xor    %edi,%edi
mov    %ebp,0x48(%esp)
mov    %ebx,0x4c(%esp)
mov    %eax,%ebp
jmp    8054429 <__sprintf_chk@plt+0xa2e9>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
cmp    0x34(%esp),%edi
je     8054478 <__sprintf_chk@plt+0xa338>
mov    0x0(%ebp,%edi,4),%ebx
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
movl   $0x80,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x5c(%esp),%eax
mov    %eax,(%esp)
call   8049ed0 <__strncpy_chk@plt>
lea    0x5c(%esp),%eax
movb   $0x0,0x5c(%esp,%esi,1)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049c60 <strcoll@plt>
test   %eax,%eax
jne    8054420 <__sprintf_chk@plt+0xa2e0>
jmp    80543e8 <__sprintf_chk@plt+0xa2a8>
lea    0x0(%esi),%esi
mov    0x48(%esp),%ebp
mov    0x4c(%esp),%ebx
mov    0x20(%ebx),%edx
test   %edx,%edx
je     80544a8 <__sprintf_chk@plt+0xa368>
mov    0x18(%ebx),%ecx
xor    %eax,%eax
mov    0x24(%esp),%esi
cmp    (%ecx,%eax,4),%esi
jl     80544a1 <__sprintf_chk@plt+0xa361>
mov    0x1c(%ebx),%edi
cmp    (%edi,%eax,4),%esi
jle    8054201 <__sprintf_chk@plt+0xa0c1>
add    $0x1,%eax
cmp    %edx,%eax
jne    8054490 <__sprintf_chk@plt+0xa350>
mov    0xc(%ebx),%edx
test   %edx,%edx
je     80544d8 <__sprintf_chk@plt+0xa398>
mov    0x8(%ebx),%ecx
mov    0x24(%esp),%ebx
cmp    (%ecx),%ebx
je     8054201 <__sprintf_chk@plt+0xa0c1>
xor    %eax,%eax
jmp    80544d1 <__sprintf_chk@plt+0xa391>
lea    0x0(%esi),%esi
cmp    (%ecx,%eax,4),%ebx
je     8054201 <__sprintf_chk@plt+0xa0c1>
add    $0x1,%eax
cmp    %edx,%eax
jne    80544c8 <__sprintf_chk@plt+0xa388>
movzbl 0x47(%esp),%eax
xor    $0x1,%eax
movzbl %al,%eax
mov    %eax,0x40(%esp)
jmp    8054201 <__sprintf_chk@plt+0xa0c1>
call   8049ac0 <__stack_chk_fail@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x80749f0,%edx
movl   $0x0,0x4(%esp)
mov    0xc(%edx),%ebp
mov    -0x4(%ebp,%eax,4),%edx
cmp    $0x108,%edx
jl     8054850 <__sprintf_chk@plt+0xa710>
cmp    $0x10a,%edx
jle    8054860 <__sprintf_chk@plt+0xa720>
sub    $0x10c,%edx
cmp    $0x1,%edx
ja     8054850 <__sprintf_chk@plt+0xa710>
sub    $0x1,%eax
mov    %eax,0x20(%esp)
mov    %eax,%edx
movl   $0x0,0x8(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jl     8054820 <__sprintf_chk@plt+0xa6e0>
cmp    $0x10a,%eax
jle    8054870 <__sprintf_chk@plt+0xa730>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8054820 <__sprintf_chk@plt+0xa6e0>
lea    -0x1(%edx),%eax
mov    %eax,0x24(%esp)
mov    %eax,%edx
movl   $0x0,0xc(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jl     80547f8 <__sprintf_chk@plt+0xa6b8>
cmp    $0x10a,%eax
jle    8054880 <__sprintf_chk@plt+0xa740>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     80547f8 <__sprintf_chk@plt+0xa6b8>
lea    -0x1(%edx),%eax
mov    %eax,0x28(%esp)
mov    %eax,%edx
movl   $0x0,0x10(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jl     80547d0 <__sprintf_chk@plt+0xa690>
cmp    $0x10a,%eax
jle    8054890 <__sprintf_chk@plt+0xa750>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     80547d0 <__sprintf_chk@plt+0xa690>
lea    -0x1(%edx),%eax
mov    %ebp,%edi
mov    %eax,0x2c(%esp)
mov    %eax,%edx
movl   $0x0,0x14(%esp)
mov    -0x4(%edi,%edx,4),%eax
cmp    $0x108,%eax
jl     80547a0 <__sprintf_chk@plt+0xa660>
cmp    $0x10a,%eax
jle    80548a0 <__sprintf_chk@plt+0xa760>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     80547a0 <__sprintf_chk@plt+0xa660>
lea    -0x1(%edx),%eax
mov    %eax,0x30(%esp)
mov    %eax,%ebp
movl   $0x0,0x18(%esp)
mov    -0x4(%edi,%ebp,4),%eax
cmp    $0x108,%eax
jl     8054778 <__sprintf_chk@plt+0xa638>
cmp    $0x10a,%eax
jle    80548b0 <__sprintf_chk@plt+0xa770>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8054778 <__sprintf_chk@plt+0xa638>
lea    -0x1(%ebp),%eax
mov    %eax,0x34(%esp)
mov    %eax,%ebp
movl   $0x0,0x1c(%esp)
mov    -0x4(%edi,%ebp,4),%eax
cmp    $0x108,%eax
jl     8054750 <__sprintf_chk@plt+0xa610>
cmp    $0x10a,%eax
jle    80548c0 <__sprintf_chk@plt+0xa780>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8054750 <__sprintf_chk@plt+0xa610>
sub    $0x1,%ebp
xor    %ebx,%ebx
mov    %ebp,%edx
mov    -0x4(%edi,%edx,4),%eax
cmp    $0x108,%eax
jl     8054730 <__sprintf_chk@plt+0xa5f0>
cmp    $0x10a,%eax
jle    80548d0 <__sprintf_chk@plt+0xa790>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8054730 <__sprintf_chk@plt+0xa5f0>
sub    $0x1,%edx
xor    %esi,%esi
mov    %edx,%ecx
mov    -0x4(%edi,%ecx,4),%eax
cmp    $0x108,%eax
jl     8054718 <__sprintf_chk@plt+0xa5d8>
cmp    $0x10a,%eax
jle    80548e0 <__sprintf_chk@plt+0xa7a0>
sub    $0x10c,%eax
cmp    $0x1,%eax
ja     8054718 <__sprintf_chk@plt+0xa5d8>
sub    $0x1,%ecx
mov    %ecx,%eax
mov    %edx,0x3c(%esp)
mov    %ecx,0x38(%esp)
call   8054500 <__sprintf_chk@plt+0xa3c0>
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%edx
sub    %eax,%ecx
lea    0x1(%esi,%eax,1),%esi
mov    -0x4(%edi,%ecx,4),%eax
cmp    $0x108,%eax
jge    80546d8 <__sprintf_chk@plt+0xa598>
add    $0x1,%esi
sub    %esi,%edx
mov    -0x4(%edi,%edx,4),%eax
lea    0x1(%ebx,%esi,1),%ebx
cmp    $0x108,%eax
jge    80546b1 <__sprintf_chk@plt+0xa571>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
add    $0x1,%ebx
sub    %ebx,%ebp
lea    0x1(%eax,%ebx,1),%eax
mov    %eax,0x1c(%esp)
mov    -0x4(%edi,%ebp,4),%eax
cmp    $0x108,%eax
jge    8054682 <__sprintf_chk@plt+0xa542>
mov    0x1c(%esp),%eax
mov    0x18(%esp),%esi
mov    0x34(%esp),%ebp
add    $0x1,%eax
sub    %eax,%ebp
lea    0x1(%esi,%eax,1),%eax
mov    %eax,0x18(%esp)
mov    -0x4(%edi,%ebp,4),%eax
cmp    $0x108,%eax
jge    8054649 <__sprintf_chk@plt+0xa509>
mov    0x18(%esp),%eax
mov    0x14(%esp),%ecx
mov    0x30(%esp),%edx
add    $0x1,%eax
sub    %eax,%edx
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,0x14(%esp)
mov    -0x4(%edi,%edx,4),%eax
cmp    $0x108,%eax
jge    8054610 <__sprintf_chk@plt+0xa4d0>
mov    0x14(%esp),%eax
mov    %edi,%ebp
mov    0x10(%esp),%ebx
mov    0x2c(%esp),%edx
add    $0x1,%eax
sub    %eax,%edx
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,0x10(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jge    80545d5 <__sprintf_chk@plt+0xa495>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x28(%esp),%edx
add    $0x1,%eax
sub    %eax,%edx
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,0xc(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jge    805459c <__sprintf_chk@plt+0xa45c>
mov    0xc(%esp),%eax
mov    0x8(%esp),%ebx
mov    0x24(%esp),%edx
add    $0x1,%eax
sub    %eax,%edx
lea    0x1(%ebx,%eax,1),%eax
mov    %eax,0x8(%esp)
mov    -0x4(%ebp,%edx,4),%eax
cmp    $0x108,%eax
jge    8054563 <__sprintf_chk@plt+0xa423>
mov    0x8(%esp),%edx
mov    0x20(%esp),%eax
mov    0x4(%esp),%esi
add    $0x1,%edx
sub    %edx,%eax
lea    0x1(%esi,%edx,1),%esi
mov    -0x4(%ebp,%eax,4),%edx
mov    %esi,0x4(%esp)
cmp    $0x108,%edx
jge    8054528 <__sprintf_chk@plt+0xa3e8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
add    $0x1,%eax
pop    %ebp
ret
nop
sub    $0x1,%eax
addl   $0x1,0x4(%esp)
jmp    8054518 <__sprintf_chk@plt+0xa3d8>
lea    0x0(%esi),%esi
sub    $0x1,%edx
addl   $0x1,0x8(%esp)
jmp    8054554 <__sprintf_chk@plt+0xa414>
lea    0x0(%esi),%esi
sub    $0x1,%edx
addl   $0x1,0xc(%esp)
jmp    805458d <__sprintf_chk@plt+0xa44d>
lea    0x0(%esi),%esi
sub    $0x1,%edx
addl   $0x1,0x10(%esp)
jmp    80545c6 <__sprintf_chk@plt+0xa486>
lea    0x0(%esi),%esi
sub    $0x1,%edx
addl   $0x1,0x14(%esp)
jmp    8054601 <__sprintf_chk@plt+0xa4c1>
lea    0x0(%esi),%esi
sub    $0x1,%ebp
addl   $0x1,0x18(%esp)
jmp    805463a <__sprintf_chk@plt+0xa4fa>
lea    0x0(%esi),%esi
sub    $0x1,%ebp
addl   $0x1,0x1c(%esp)
jmp    8054673 <__sprintf_chk@plt+0xa533>
lea    0x0(%esi),%esi
sub    $0x1,%edx
add    $0x1,%ebx
jmp    80546a2 <__sprintf_chk@plt+0xa562>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ecx
add    $0x1,%esi
jmp    80546cd <__sprintf_chk@plt+0xa58d>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    %gs:0x14,%eax
mov    %eax,0xbc(%esp)
xor    %eax,%eax
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8055315 <__sprintf_chk@plt+0xb1d5>
mov    0x80749f0,%ebx
mov    0x48(%ebx),%edx
lea    0x1(%edx),%eax
cmp    %eax,0x4c(%ebx)
ja     8054974 <__sprintf_chk@plt+0xa834>
mov    0x44(%ebx),%eax
test   %eax,%eax
sete   %cl
movzbl %cl,%esi
add    %esi,%edx
test   %cl,%cl
lea    0x1(%edx),%esi
jne    80553c3 <__sprintf_chk@plt+0xb283>
cmp    $0x3483482,%esi
ja     80559d5 <__sprintf_chk@plt+0xb895>
add    $0x2,%edx
shr    %edx
add    %edx,%esi
imul   $0x34,%esi,%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0x44(%ebx)
mov    0x80749f0,%ebx
mov    0x48(%ebx),%edx
mov    %esi,0x4c(%ebx)
lea    0x1(%edx),%eax
imul   $0x34,%edx,%edx
mov    0x44(%ebx),%ecx
mov    %eax,0x48(%ebx)
lea    (%ecx,%edx,1),%eax
mov    $0x34,%edx
test   $0x1,%al
mov    %eax,%edi
mov    %eax,0x20(%esp)
jne    8055461 <__sprintf_chk@plt+0xb321>
test   $0x2,%edi
jne    805546e <__sprintf_chk@plt+0xb32e>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
jne    8054bd8 <__sprintf_chk@plt+0xaa98>
and    $0x1,%edx
jne    8054bd0 <__sprintf_chk@plt+0xaa90>
xor    %eax,%eax
movl   $0x0,0x58(%esp,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     80549bc <__sprintf_chk@plt+0xa87c>
mov    0x8074598,%esi
test   %esi,%esi
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    0x807459c,%edi
lea    0x78(%esp),%ebx
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    80552ee <__sprintf_chk@plt+0xb1ae>
lea    (%edi,%eax,1),%edx
sub    %eax,%esi
mov    0x78(%esp),%eax
mov    %edx,0x807459c
mov    %esi,0x8074598
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8049dc0 <wctob@plt>
mov    %eax,%ebp
cmp    $0x5e,%ebp
movl   $0x0,0x40(%esp)
je     8055286 <__sprintf_chk@plt+0xb146>
xor    %eax,%eax
cmp    $0x3a,%ebp
sete   %al
mov    %eax,%edi
movl   $0x0,0x4c(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x3c(%esp)
and    $0xfffffffd,%edi
cmp    $0x5b,%ebp
mov    %edi,0x28(%esp)
je     8054c50 <__sprintf_chk@plt+0xab10>
cmp    $0x5c,%ebp
mov    0x8074598,%esi
je     8054c68 <__sprintf_chk@plt+0xab28>
test   %esi,%esi
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    0x807459c,%edi
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    8055417 <__sprintf_chk@plt+0xb2d7>
sub    %eax,%esi
add    %eax,%edi
mov    %esi,0x8074598
mov    0x78(%esp),%esi
mov    %edi,0x807459c
mov    %esi,(%esp)
call   8049dc0 <wctob@plt>
mov    0x2c(%esp),%ecx
mov    %ebp,0x38(%esp)
mov    %eax,%ebp
mov    %esi,0x2c(%esp)
mov    %ecx,0x24(%esp)
cmp    $0x2d,%ebp
je     8054cd8 <__sprintf_chk@plt+0xab98>
xor    %eax,%eax
cmpl   $0x3a,0x38(%esp)
setne  %al
lea    0x2(%eax,%eax,1),%edi
or     0x28(%esp),%edi
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     80554f9 <__sprintf_chk@plt+0xb3b9>
mov    0x80749e4,%edx
test   %edx,%edx
je     8054b3e <__sprintf_chk@plt+0xa9fe>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049af0 <iswalpha@plt>
test   %eax,%eax
jne    8055322 <__sprintf_chk@plt+0xb1e2>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <wctob@plt>
cmp    $0xffffffff,%eax
je     805547f <__sprintf_chk@plt+0xb33f>
mov    %eax,%esi
mov    $0x1,%edx
shr    $0x5,%esi
mov    %eax,%ecx
shl    %cl,%edx
or     %edx,0x58(%esp,%esi,4)
cmp    $0x5d,%ebp
jne    8054a77 <__sprintf_chk@plt+0xa937>
cmp    $0x7,%edi
je     80557ec <__sprintf_chk@plt+0xb6ac>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
nop
jbe    8055780 <__sprintf_chk@plt+0xb640>
mov    0x20(%esp),%eax
mov    0x40(%esp),%ecx
mov    %ecx,0x4(%eax)
lea    0x58(%esp),%eax
movl   $0x20,0x8(%esp)
movl   $0x8074540,0x4(%esp)
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
mov    $0xffffffff,%edx
test   %eax,%eax
je     8054bc1 <__sprintf_chk@plt+0xaa81>
lea    0x58(%esp),%eax
call   8053ba0 <__sprintf_chk@plt+0x9a60>
mov    %eax,%edx
mov    0x20(%esp),%eax
mov    %edx,(%eax)
mov    $0x111,%eax
jmp    8054c2b <__sprintf_chk@plt+0xaaeb>
xchg   %ax,%ax
movb   $0x0,(%edi)
jmp    80549ba <__sprintf_chk@plt+0xa87a>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     80549ba <__sprintf_chk@plt+0xa87a>
jmp    8054bd0 <__sprintf_chk@plt+0xaa90>
movb   $0x0,0x98(%esp,%esi,1)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x806e262,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
test   %eax,%eax
jne    805599f <__sprintf_chk@plt+0xb85f>
movl   $0xffffffff,0x8074594
ff
mov    $0xffffffff,%eax
mov    0xbc(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80559da <__sprintf_chk@plt+0xb89a>
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
testb  $0x4,0x80749ec
jne    8054f58 <__sprintf_chk@plt+0xae18>
mov    0x8074598,%esi
jmp    8054a96 <__sprintf_chk@plt+0xa956>
testb  $0x1,0x80749ec
je     8054a96 <__sprintf_chk@plt+0xa956>
test   %esi,%esi
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    0x807459c,%edi
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    8055576 <__sprintf_chk@plt+0xb436>
sub    %eax,%esi
add    %eax,%edi
mov    0x78(%esp),%eax
mov    %esi,0x8074598
mov    %edi,0x807459c
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8049dc0 <wctob@plt>
mov    0x8074598,%esi
mov    %eax,%ebp
jmp    8054a96 <__sprintf_chk@plt+0xa956>
lea    0x0(%esi),%esi
mov    0x8074598,%esi
test   %esi,%esi
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    0x807459c,%edi
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    805543c <__sprintf_chk@plt+0xb2fc>
add    %eax,%edi
sub    %eax,%esi
mov    %edi,0x807459c
mov    0x78(%esp),%edi
mov    %esi,0x8074598
mov    %edi,(%esp)
call   8049dc0 <wctob@plt>
mov    %eax,%esi
cmp    $0x5d,%esi
je     80553da <__sprintf_chk@plt+0xb29a>
cmp    $0x5c,%esi
jne    8054d9d <__sprintf_chk@plt+0xac5d>
testb  $0x1,0x80749ec
je     8054d9d <__sprintf_chk@plt+0xac5d>
mov    0x8074598,%esi
test   %esi,%esi
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    0x807459c,%edi
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    805559d <__sprintf_chk@plt+0xb45d>
add    %eax,%edi
sub    %eax,%esi
mov    %edi,0x807459c
mov    0x78(%esp),%edi
mov    %esi,0x8074598
mov    %edi,(%esp)
call   8049dc0 <wctob@plt>
mov    %eax,%esi
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8055170 <__sprintf_chk@plt+0xb030>
mov    0x20(%esp),%eax
mov    0x20(%eax),%ebp
lea    0x1(%ebp),%esi
cmp    %esi,0x30(%esp)
ja     8054e12 <__sprintf_chk@plt+0xacd2>
mov    0x18(%eax),%eax
test   %eax,%eax
sete   %dl
movzbl %dl,%ecx
add    %ebp,%ecx
test   %dl,%dl
lea    0x1(%ecx),%esi
mov    %esi,0x30(%esp)
jne    80555c2 <__sprintf_chk@plt+0xb482>
cmpl   $0x2aaaaaa9,0x30(%esp)
ja     80559d5 <__sprintf_chk@plt+0xb895>
lea    0x2(%ecx),%edx
shr    %edx
add    %edx,0x30(%esp)
mov    0x30(%esp),%ecx
lea    0x0(,%ecx,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%ecx
mov    0x20(%ecx),%ebp
mov    %eax,0x18(%ecx)
lea    0x1(%ebp),%esi
cmp    %esi,0x34(%esp)
mov    0x20(%esp),%eax
jbe    8054ed8 <__sprintf_chk@plt+0xad98>
mov    0x1c(%eax),%ecx
mov    0x18(%eax),%edx
shl    $0x2,%ebp
mov    0x80749e4,%eax
add    %ebp,%edx
test   %eax,%eax
je     8054f40 <__sprintf_chk@plt+0xae00>
mov    0x24(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   8049a20 <towlower@plt>
mov    0x2c(%esp),%edx
mov    0x38(%esp),%ecx
add    %ecx,%ebp
mov    %eax,(%edx)
mov    0x20(%esp),%eax
mov    %esi,0x20(%eax)
mov    %edi,(%esp)
call   8049a20 <towlower@plt>
mov    %eax,0x0(%ebp)
mov    0x8074598,%esi
test   %esi,%esi
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    0x807459c,%edi
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    80553f0 <__sprintf_chk@plt+0xb2b0>
add    %eax,%edi
sub    %eax,%esi
mov    0x78(%esp),%eax
mov    %edi,0x807459c
mov    %esi,0x8074598
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8049dc0 <wctob@plt>
mov    %eax,%ebp
mov    0x28(%esp),%edi
or     $0x8,%edi
jmp    8054b65 <__sprintf_chk@plt+0xaa25>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%eax),%eax
test   %eax,%eax
sete   %dl
movzbl %dl,%ecx
add    %ebp,%ecx
test   %dl,%dl
lea    0x1(%ecx),%esi
mov    %esi,0x34(%esp)
jne    80555d6 <__sprintf_chk@plt+0xb496>
cmpl   $0x2aaaaaa9,0x34(%esp)
ja     80559d5 <__sprintf_chk@plt+0xb895>
lea    0x2(%ecx),%edx
shr    %edx
add    %edx,0x34(%esp)
mov    0x34(%esp),%ecx
lea    0x0(,%ecx,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%ecx
mov    0x20(%ecx),%ebp
mov    %eax,0x1c(%ecx)
mov    %eax,%ecx
mov    0x20(%esp),%eax
lea    0x1(%ebp),%esi
jmp    8054e23 <__sprintf_chk@plt+0xace3>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
add    %ecx,%ebp
mov    %eax,(%edx)
mov    0x20(%esp),%eax
mov    %esi,0x20(%eax)
mov    %edi,%eax
jmp    8054e67 <__sprintf_chk@plt+0xad27>
xchg   %ax,%ax
mov    0x8074598,%esi
test   %esi,%esi
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    0x807459c,%edi
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    805553e <__sprintf_chk@plt+0xb3fe>
sub    %eax,%esi
add    %eax,%edi
mov    %esi,0x8074598
mov    0x78(%esp),%esi
mov    %edi,0x807459c
mov    %esi,(%esp)
call   8049dc0 <wctob@plt>
mov    %eax,0x24(%esp)
cmpl   $0x3a,0x24(%esp)
je     8054fd1 <__sprintf_chk@plt+0xae91>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8055516 <__sprintf_chk@plt+0xb3d6>
cmpl   $0x3d,0x24(%esp)
jne    805550b <__sprintf_chk@plt+0xb3cb>
mov    0x8074598,%ebp
test   %ebp,%ebp
je     8054bf8 <__sprintf_chk@plt+0xaab8>
xor    %esi,%esi
lea    0x0(%esi,%eiz,1),%esi
mov    0x807459c,%edi
movl   $0x807457c,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %edi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    8055148 <__sprintf_chk@plt+0xb008>
add    %eax,0x807459c
sub    %eax,0x8074598
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   8049dc0 <wctob@plt>
mov    0x8074598,%ebp
cmp    0x24(%esp),%eax
je     8055060 <__sprintf_chk@plt+0xaf20>
test   %ebp,%ebp
je     8054bec <__sprintf_chk@plt+0xaaac>
cmp    $0x1f,%esi
ja     8055050 <__sprintf_chk@plt+0xaf10>
mov    %al,0x98(%esp,%esi,1)
add    $0x1,%esi
jmp    8054fe8 <__sprintf_chk@plt+0xaea8>
movb   $0x0,0x98(%esp)
jmp    8054fe8 <__sprintf_chk@plt+0xaea8>
lea    0x0(%esi),%esi
mov    0x807459c,%edx
cmpb   $0x5d,(%edx)
jne    8055037 <__sprintf_chk@plt+0xaef7>
test   %ebp,%ebp
movb   $0x0,0x98(%esp,%esi,1)
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    %edx,0x4(%esp)
movl   $0x807457c,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x2c(%esp)
call   8049c20 <mbrtowc@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,0x8074264
jle    80556ef <__sprintf_chk@plt+0xb5af>
add    %eax,%edx
sub    %eax,%ebp
mov    0x78(%esp),%eax
mov    %edx,0x807459c
mov    %ebp,0x8074598
mov    %eax,(%esp)
call   8049dc0 <wctob@plt>
cmpl   $0x3a,0x24(%esp)
je     80555ea <__sprintf_chk@plt+0xb4aa>
mov    0x24(%esp),%eax
cmp    $0x3d,%eax
sete   %dl
cmp    $0x2e,%eax
sete   %cl
je     80550e9 <__sprintf_chk@plt+0xafa9>
test   %dl,%dl
je     8054e6a <__sprintf_chk@plt+0xad2a>
add    $0x1,%esi
lea    0x98(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x2c(%esp)
mov    %edx,0x24(%esp)
call   8065230 <__sprintf_chk@plt+0x1b0f0>
mov    0x24(%esp),%edx
mov    0x2c(%esp),%ecx
test   %dl,%dl
mov    %eax,%esi
jne    8055827 <__sprintf_chk@plt+0xb6e7>
test   %cl,%cl
je     8054e6a <__sprintf_chk@plt+0xad2a>
mov    0x20(%esp),%eax
mov    0x30(%eax),%edx
lea    0x1(%edx),%ecx
cmp    %ecx,0x4c(%esp)
jbe    80558ff <__sprintf_chk@plt+0xb7bf>
mov    0x2c(%eax),%eax
mov    0x20(%esp),%edi
mov    %ecx,0x30(%edi)
mov    %esi,(%eax,%edx,4)
jmp    8054e6a <__sprintf_chk@plt+0xad2a>
nop
lea    0x1(%edi),%eax
sub    $0x1,%ebp
mov    %eax,0x807459c
movzbl (%edi),%eax
movl   $0x1,0x8074264
00
mov    %ebp,0x8074598
jmp    8055031 <__sprintf_chk@plt+0xaef1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80749e4,%edi
movb   $0x5b,0x98(%esp)
movb   $0x0,0x99(%esp)
movb   $0x2d,0x9a(%esp)
test   %edi,%edi
movb   $0x0,0x9b(%esp)
movb   $0x5d,0x9c(%esp)
movb   $0x0,0x9d(%esp)
movb   $0x0,0x54(%esp)
movb   $0x0,0x55(%esp)
je     80551e5 <__sprintf_chk@plt+0xb0a5>
mov    0x38(%esp),%eax
sub    $0xffffff80,%eax
cmp    $0x17f,%eax
ja     80551d4 <__sprintf_chk@plt+0xb094>
call   804a100 <__ctype_tolower_loc@plt>
mov    0x38(%esp),%ecx
mov    (%eax),%eax
mov    (%eax,%ecx,4),%eax
mov    %eax,0x38(%esp)
lea    0x80(%esi),%eax
cmp    $0x17f,%eax
jbe    8055567 <__sprintf_chk@plt+0xb427>
movzbl 0x38(%esp),%eax
movl   $0x8,0x8(%esp)
mov    %ebx,(%esp)
mov    %al,0x99(%esp)
mov    %esi,%eax
xor    %esi,%esi
mov    %al,0x9b(%esp)
lea    0x98(%esp),%eax
mov    %eax,0x4(%esp)
call   8049f80 <regcomp@plt>
nop
mov    0x80749e4,%ecx
test   %ecx,%ecx
je     8055230 <__sprintf_chk@plt+0xb0f0>
call   804a120 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x1,0x1(%eax,%esi,2)
jne    805526e <__sprintf_chk@plt+0xb12e>
mov    %esi,%eax
mov    %al,0x54(%esp)
lea    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049ec0 <regexec@plt>
cmp    $0x1,%eax
je     805526e <__sprintf_chk@plt+0xb12e>
lea    0x58(%esp),%edx
mov    %esi,%eax
call   8053f10 <__sprintf_chk@plt+0x9dd0>
add    $0x1,%esi
cmp    $0x100,%esi
jne    8055218 <__sprintf_chk@plt+0xb0d8>
mov    %ebx,(%esp)
call   8049be0 <regfree@plt>
jmp    8054e6a <__sprintf_chk@plt+0xad2a>
mov    0x8074598,%edi
test   %edi,%edi
je     8054bf8 <__sprintf_chk@plt+0xaab8>
mov    0x807459c,%esi
movl   $0x807457c,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    80556c9 <__sprintf_chk@plt+0xb589>
add    %eax,%esi
sub    %eax,%edi
mov    0x78(%esp),%eax
mov    %esi,0x807459c
mov    %edi,0x8074598
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   8049dc0 <wctob@plt>
mov    %eax,%ebp
movl   $0x1,0x40(%esp)
jmp    8054a3d <__sprintf_chk@plt+0xa8fd>
movzbl (%edi),%ebp
sub    $0x1,%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8074264
00
mov    %esi,0x8074598
mov    %eax,0x807459c
mov    %ebp,0x2c(%esp)
jmp    8054a2c <__sprintf_chk@plt+0xa8ec>
movl   $0x0,0x20(%esp)
jmp    80549ba <__sprintf_chk@plt+0xa87a>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049a20 <towlower@plt>
mov    %eax,(%esp)
mov    %eax,%esi
call   8049dc0 <wctob@plt>
cmp    $0xffffffff,%eax
jne    8054b53 <__sprintf_chk@plt+0xaa13>
mov    0x20(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
lea    0x1(%edx),%ecx
cmp    %ecx,0x3c(%esp)
mov    %eax,0x24(%esp)
ja     80553b0 <__sprintf_chk@plt+0xb270>
test   %eax,%eax
sete   %al
movzbl %al,%ecx
add    %ecx,%edx
test   %al,%al
lea    0x1(%edx),%ecx
mov    %ecx,0x3c(%esp)
jne    8055815 <__sprintf_chk@plt+0xb6d5>
cmpl   $0x2aaaaaa9,0x3c(%esp)
ja     80559d5 <__sprintf_chk@plt+0xb895>
add    $0x2,%edx
shr    %edx
add    %edx,0x3c(%esp)
mov    0x3c(%esp),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%ecx
mov    0xc(%ecx),%edx
mov    %eax,0x8(%ecx)
mov    %eax,0x24(%esp)
lea    0x1(%edx),%ecx
mov    0x20(%esp),%eax
mov    %ecx,0xc(%eax)
mov    0x24(%esp),%eax
mov    %esi,(%eax,%edx,4)
jmp    8054b65 <__sprintf_chk@plt+0xaa25>
test   %esi,%esi
jne    8054953 <__sprintf_chk@plt+0xa813>
mov    $0x34,%edx
mov    $0x1,%esi
jmp    8054956 <__sprintf_chk@plt+0xa816>
mov    0x8074264,%eax
sub    %eax,0x807459c
add    %eax,0x8074598
jmp    8054b00 <__sprintf_chk@plt+0xa9c0>
sub    $0x1,%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8074264
00
mov    %esi,0x8074598
mov    %eax,0x807459c
movzbl (%edi),%ebp
mov    %ebp,0x2c(%esp)
jmp    8054ec5 <__sprintf_chk@plt+0xad85>
lea    0x1(%edi),%eax
sub    $0x1,%esi
mov    %eax,0x807459c
movzbl (%edi),%eax
mov    %esi,0x8074598
movl   $0x1,0x8074264
00
mov    %eax,%esi
jmp    8054ae5 <__sprintf_chk@plt+0xa9a5>
sub    $0x1,%esi
mov    %esi,0x8074598
movzbl (%edi),%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8074264
00
mov    %eax,0x807459c
mov    %esi,%edi
jmp    8054d2f <__sprintf_chk@plt+0xabef>
movb   $0x0,(%eax)
lea    0x1(%eax),%edi
mov    $0x33,%dl
jmp    8054993 <__sprintf_chk@plt+0xa853>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
jmp    805499f <__sprintf_chk@plt+0xa85f>
mov    0x20(%esp),%eax
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
lea    0x1(%edx),%ecx
cmp    %ecx,0x3c(%esp)
ja     80554e6 <__sprintf_chk@plt+0xb3a6>
test   %eax,%eax
sete   %cl
movzbl %cl,%esi
add    %esi,%edx
test   %cl,%cl
lea    0x1(%edx),%esi
mov    %esi,0x3c(%esp)
jne    8055722 <__sprintf_chk@plt+0xb5e2>
cmpl   $0x2aaaaaa9,0x3c(%esp)
ja     80559d5 <__sprintf_chk@plt+0xb895>
add    $0x2,%edx
shr    %edx
add    %edx,0x3c(%esp)
mov    0x3c(%esp),%ecx
lea    0x0(,%ecx,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%ecx
mov    0xc(%ecx),%edx
mov    %eax,0x8(%ecx)
lea    0x1(%edx),%ecx
mov    0x20(%esp),%esi
mov    %ecx,0xc(%esi)
mov    0x24(%esp),%ecx
mov    %ecx,(%eax,%edx,4)
jmp    8054b65 <__sprintf_chk@plt+0xaa25>
mov    0x38(%esp),%eax
lea    0x58(%esp),%edx
call   8053f10 <__sprintf_chk@plt+0x9dd0>
jmp    8054b65 <__sprintf_chk@plt+0xaa25>
cmpl   $0x2e,0x24(%esp)
je     8054fd1 <__sprintf_chk@plt+0xae91>
mov    0x24(%esp),%eax
cmp    $0xffffffff,%eax
je     8054c5d <__sprintf_chk@plt+0xab1d>
mov    0x2c(%esp),%ecx
mov    %eax,%ebp
movl   $0x5b,0x38(%esp)
mov    %esi,0x2c(%esp)
mov    %ecx,0x24(%esp)
jmp    8054af7 <__sprintf_chk@plt+0xa9b7>
lea    0x1(%edi),%eax
sub    $0x1,%esi
mov    %eax,0x807459c
movzbl (%edi),%eax
mov    %esi,0x8074598
movl   $0x1,0x8074264
00
mov    %eax,0x24(%esp)
mov    %eax,%esi
jmp    8054fb1 <__sprintf_chk@plt+0xae71>
call   804a100 <__ctype_tolower_loc@plt>
mov    (%eax),%eax
mov    (%eax,%esi,4),%esi
jmp    80551e5 <__sprintf_chk@plt+0xb0a5>
movzbl (%edi),%ebp
sub    $0x1,%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8074264
00
mov    %esi,0x8074598
mov    %eax,0x807459c
mov    %ebp,0x2c(%esp)
jmp    8054a96 <__sprintf_chk@plt+0xa956>
sub    $0x1,%esi
mov    %esi,0x8074598
movzbl (%edi),%esi
lea    0x1(%edi),%eax
movl   $0x1,0x8074264
00
mov    %eax,0x807459c
mov    %esi,%edi
jmp    8054d9d <__sprintf_chk@plt+0xac5d>
test   %esi,%esi
je     8055732 <__sprintf_chk@plt+0xb5f2>
lea    0x0(,%esi,4),%edx
jmp    8054df9 <__sprintf_chk@plt+0xacb9>
test   %esi,%esi
je     8055710 <__sprintf_chk@plt+0xb5d0>
lea    0x0(,%esi,4),%edx
jmp    8054f16 <__sprintf_chk@plt+0xadd6>
mov    0x80749e4,%eax
test   %eax,%eax
je     8055744 <__sprintf_chk@plt+0xb604>
mov    $0x806e26f,%edi
mov    $0x6,%ecx
lea    0x98(%esp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8055625 <__sprintf_chk@plt+0xb4e5>
mov    $0x806e275,%edi
mov    $0x6,%ecx
lea    0x98(%esp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8055744 <__sprintf_chk@plt+0xb604>
xor    %eax,%eax
mov    $0x806e25c,%edi
xor    %esi,%esi
jmp    805564d <__sprintf_chk@plt+0xb50d>
add    $0x1,%esi
lea    (%esi,%esi,2),%eax
mov    0x806e1c0(,%eax,4),%eax
test   %eax,%eax
je     8055651 <__sprintf_chk@plt+0xb511>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    8055630 <__sprintf_chk@plt+0xb4f0>
lea    (%esi,%esi,2),%eax
lea    0x806e1c0(,%eax,4),%esi
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805566b <__sprintf_chk@plt+0xb52b>
cmpb   $0x0,0x8(%esi)
je     8055696 <__sprintf_chk@plt+0xb556>
xor    %edi,%edi
jmp    805567f <__sprintf_chk@plt+0xb53f>
nop
add    $0x1,%edi
cmp    $0x100,%edi
je     8054e6a <__sprintf_chk@plt+0xad2a>
mov    %edi,(%esp)
call   *0x4(%esi)
test   %eax,%eax
je     8055670 <__sprintf_chk@plt+0xb530>
lea    0x58(%esp),%edx
mov    %edi,%eax
call   8053f10 <__sprintf_chk@plt+0x9dd0>
jmp    8055670 <__sprintf_chk@plt+0xb530>
mov    %edi,(%esp)
call   80499e0 <wctype@plt>
mov    0x20(%esp),%ecx
mov    %eax,%ebp
mov    0x20(%esp),%eax
mov    0x14(%eax),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x44(%esp)
jbe    8055849 <__sprintf_chk@plt+0xb709>
mov    0x10(%ecx),%ecx
mov    %eax,%edi
mov    0x20(%esp),%eax
mov    %edx,0x14(%eax)
mov    %ebp,(%ecx,%edi,4)
jmp    805566b <__sprintf_chk@plt+0xb52b>
movzbl (%esi),%ebp
lea    -0x1(%edi),%eax
mov    %eax,0x8074598
lea    0x1(%esi),%eax
movl   $0x1,0x8074264
00
mov    %eax,0x807459c
mov    %ebp,0x2c(%esp)
jmp    80552e1 <__sprintf_chk@plt+0xb1a1>
sub    $0x1,%ebp
add    $0x1,%edx
movl   $0x1,0x8074264
00
mov    %ebp,0x8074598
mov    %edx,0x807459c
jmp    80550c4 <__sprintf_chk@plt+0xaf84>
mov    $0x40,%edx
movl   $0x10,0x34(%esp)
jmp    8054f16 <__sprintf_chk@plt+0xadd6>
test   %esi,%esi
je     805576e <__sprintf_chk@plt+0xb62e>
lea    0x0(,%esi,4),%edx
jmp    80554cd <__sprintf_chk@plt+0xb38d>
mov    $0x40,%edx
movl   $0x10,0x30(%esp)
jmp    8054df9 <__sprintf_chk@plt+0xacb9>
mov    $0x806e25c,%edi
mov    $0x6,%ecx
lea    0x98(%esp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    0x98(%esp),%edi
seta   %al
setb   %dl
sub    %edx,%eax
movsbl %al,%eax
jmp    805562c <__sprintf_chk@plt+0xb4ec>
mov    $0x40,%edx
movl   $0x10,0x3c(%esp)
jmp    80554cd <__sprintf_chk@plt+0xb38d>
mov    0x40(%esp),%eax
test   %eax,%eax
je     80557d9 <__sprintf_chk@plt+0xb699>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jne    805597b <__sprintf_chk@plt+0xb83b>
testb  $0x1,0x80749ed
notl   0x58(%esp)
notl   0x5c(%esp)
notl   0x60(%esp)
notl   0x64(%esp)
notl   0x68(%esp)
notl   0x6c(%esp)
notl   0x70(%esp)
notl   0x74(%esp)
je     80557d9 <__sprintf_chk@plt+0xb699>
movzbl 0x80749e0,%ecx
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x3,%edx
and    $0x1c,%edx
shl    %cl,%eax
not    %eax
and    %eax,0x58(%esp,%edx,1)
lea    0x58(%esp),%eax
call   8053ba0 <__sprintf_chk@plt+0x9a60>
add    $0x113,%eax
jmp    8054c2b <__sprintf_chk@plt+0xaaeb>
movl   $0x5,0x8(%esp)
movl   $0x806e380,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,(%esp)
call   804b300 <__sprintf_chk@plt+0x11c0>
jmp    8054b77 <__sprintf_chk@plt+0xaa37>
test   %ecx,%ecx
je     805595b <__sprintf_chk@plt+0xb81b>
mov    %ecx,%eax
shl    $0x2,%eax
jmp    805538f <__sprintf_chk@plt+0xb24f>
mov    0x20(%esp),%eax
mov    0x28(%eax),%edx
lea    0x1(%edx),%ecx
cmp    %ecx,0x48(%esp)
jbe    80558a3 <__sprintf_chk@plt+0xb763>
mov    0x24(%eax),%eax
mov    0x20(%esp),%edi
mov    %ecx,0x28(%edi)
mov    %esi,(%eax,%edx,4)
jmp    8054e6a <__sprintf_chk@plt+0xad2a>
mov    0x10(%ecx),%edx
test   %edx,%edx
sete   %cl
movzbl %cl,%edi
add    %edi,%eax
test   %cl,%cl
lea    0x1(%eax),%edi
mov    %edi,0x44(%esp)
jne    805596d <__sprintf_chk@plt+0xb82d>
cmpl   $0x2aaaaaa9,0x44(%esp)
ja     80559d5 <__sprintf_chk@plt+0xb895>
add    $0x2,%eax
shr    %eax
add    %eax,0x44(%esp)
mov    0x44(%esp),%eax
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%ecx
mov    0x14(%ecx),%edi
mov    %eax,0x10(%ecx)
mov    %eax,%ecx
lea    0x1(%edi),%edx
jmp    80556bd <__sprintf_chk@plt+0xb57d>
mov    0x24(%eax),%ecx
test   %ecx,%ecx
sete   %al
mov    %eax,%edi
movzbl %al,%eax
add    %edx,%eax
lea    0x1(%eax),%edx
mov    %edx,0x48(%esp)
mov    %edi,%edx
test   %dl,%dl
jne    80559df <__sprintf_chk@plt+0xb89f>
cmpl   $0x2aaaaaa9,0x48(%esp)
ja     80559d5 <__sprintf_chk@plt+0xb895>
add    $0x2,%eax
shr    %eax
add    %eax,0x48(%esp)
mov    0x48(%esp),%eax
shl    $0x2,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%ecx
mov    0x28(%ecx),%edx
mov    %eax,0x24(%ecx)
lea    0x1(%edx),%ecx
jmp    805583a <__sprintf_chk@plt+0xb6fa>
mov    0x2c(%eax),%ecx
test   %ecx,%ecx
sete   %al
mov    %eax,%edi
movzbl %al,%eax
add    %edx,%eax
lea    0x1(%eax),%edx
mov    %edx,0x4c(%esp)
mov    %edi,%edx
test   %dl,%dl
jne    80559fd <__sprintf_chk@plt+0xb8bd>
cmpl   $0x2aaaaaa9,0x4c(%esp)
ja     80559d5 <__sprintf_chk@plt+0xb895>
add    $0x2,%eax
shr    %eax
add    %eax,0x4c(%esp)
mov    0x4c(%esp),%eax
shl    $0x2,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%ecx
mov    0x30(%ecx),%edx
mov    %eax,0x2c(%ecx)
lea    0x1(%edx),%ecx
jmp    8055138 <__sprintf_chk@plt+0xaff8>
mov    $0x40,%eax
movl   $0x10,0x3c(%esp)
jmp    805538f <__sprintf_chk@plt+0xb24f>
test   %edi,%edi
je     80559c3 <__sprintf_chk@plt+0xb883>
mov    %edi,%eax
shl    $0x2,%eax
jmp    8055883 <__sprintf_chk@plt+0xb743>
movl   $0x806e1a0,0xc(%esp)
movl   $0x4a3,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e3b8,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e262,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,(%esp)
call   804b2d0 <__sprintf_chk@plt+0x1190>
mov    $0x40,%eax
movl   $0x10,0x44(%esp)
jmp    8055883 <__sprintf_chk@plt+0xb743>
call   80652b0 <__sprintf_chk@plt+0x1b170>
call   8049ac0 <__stack_chk_fail@plt>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    80558da <__sprintf_chk@plt+0xb79a>
mov    $0x40,%eax
movl   $0x10,0x48(%esp)
jmp    80558e1 <__sprintf_chk@plt+0xb7a1>
mov    0x4c(%esp),%eax
test   %eax,%eax
jne    8055936 <__sprintf_chk@plt+0xb7f6>
mov    $0x40,%eax
movl   $0x10,0x4c(%esp)
jmp    805593d <__sprintf_chk@plt+0xb7fd>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
mov    $0x2,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
lea    0x20(%esp),%ebx
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x8074598,%esi
cmp    $0x1,%eax
jbe    8055ac0 <__sprintf_chk@plt+0xb980>
test   %esi,%esi
je     80560c8 <__sprintf_chk@plt+0xbf88>
mov    0x807459c,%edx
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
mov    %edx,0x10(%esp)
call   8049c20 <mbrtowc@plt>
mov    0x10(%esp),%edx
test   %eax,%eax
mov    %eax,0x8074264
jle    8055b20 <__sprintf_chk@plt+0xb9e0>
add    %eax,%edx
sub    %eax,%esi
mov    0x20(%esp),%eax
mov    %edx,0x807459c
mov    %esi,0x8074598
mov    %eax,(%esp)
mov    %eax,0x8074578
call   8049dc0 <wctob@plt>
cmp    $0xffffffff,%eax
je     80560c0 <__sprintf_chk@plt+0xbf80>
lea    -0xa(%eax),%edx
cmp    $0x72,%edx
ja     80560c0 <__sprintf_chk@plt+0xbf80>
jmp    *0x806deb8(,%edx,4)
lea    0x0(%esi),%esi
test   %esi,%esi
je     80560c8 <__sprintf_chk@plt+0xbf88>
mov    0x807459c,%edx
movl   $0x807457c,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %edx,0x4(%esp)
mov    %edx,0x10(%esp)
call   8049c20 <mbrtowc@plt>
mov    0x10(%esp),%edx
test   %eax,%eax
mov    %eax,0x8074264
jle    8056108 <__sprintf_chk@plt+0xbfc8>
add    %eax,%edx
sub    %eax,%esi
mov    0x20(%esp),%eax
mov    %edx,0x807459c
mov    %esi,0x8074598
mov    %eax,(%esp)
call   8049dc0 <wctob@plt>
jmp    8055aa7 <__sprintf_chk@plt+0xb967>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%eax
sub    $0x1,%esi
mov    %eax,0x807459c
movzbl (%edx),%eax
movl   $0x1,0x8074264
00
mov    %esi,0x8074598
mov    %eax,0x8074578
jmp    8055aa7 <__sprintf_chk@plt+0xb967>
mov    %eax,%esi
mov    0x80749ec,%eax
test   $0x4,%ah
jne    8055b68 <__sprintf_chk@plt+0xba28>
shr    $0xf,%eax
xor    $0x1,%eax
and    $0x1,%eax
cmp    %ebp,%eax
je     8055bad <__sprintf_chk@plt+0xba6d>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8074590
00
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80560e0 <__sprintf_chk@plt+0xbfa0>
movl   $0x112,0x8074594
00
mov    $0x112,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,%esi
mov    0x80749ec,%eax
test   $0x4,%ah
jne    8055b68 <__sprintf_chk@plt+0xba28>
test   %ebp,%ebp
jne    8055b68 <__sprintf_chk@plt+0xba28>
test   $0x8,%ah
je     8055b68 <__sprintf_chk@plt+0xba28>
movl   $0x1,0x8074590
00
mov    $0x10d,%eax
movl   $0x10d,0x8074594
00
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
test   %ebp,%ebp
mov    %eax,%esi
jne    8055b68 <__sprintf_chk@plt+0xba28>
mov    0x80749ec,%eax
test   $0x8,%al
je     805616e <__sprintf_chk@plt+0xc02e>
movl   $0x103,0x8074594
00
mov    $0x103,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x8,0x80749ee
je     8055bdb <__sprintf_chk@plt+0xba9b>
jmp    8055b68 <__sprintf_chk@plt+0xba28>
mov    %eax,%esi
mov    0x80749ec,%eax
shr    $0xd,%eax
xor    $0x1,%eax
and    $0x1,%eax
cmp    %ebp,%eax
jne    8055b68 <__sprintf_chk@plt+0xba28>
addl   $0x1,0x807458c
mov    $0x10e,%eax
movl   $0x1,0x8074590
00
movl   $0x10e,0x8074594
00
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
lea    0x0(%esi),%esi
mov    0x80749ec,%edx
mov    %eax,%esi
mov    %edx,%eax
shr    $0xd,%eax
xor    $0x1,%eax
and    $0x1,%eax
cmp    %ebp,%eax
jne    8055b68 <__sprintf_chk@plt+0xba28>
mov    0x807458c,%eax
test   %eax,%eax
je     805620e <__sprintf_chk@plt+0xc0ce>
sub    $0x1,%eax
mov    %eax,0x807458c
mov    $0x10f,%eax
movl   $0x0,0x8074590
00
movl   $0x10f,0x8074594
00
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
xchg   %ax,%ax
test   %ebp,%ebp
mov    %eax,%esi
jne    8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x10,0x80749ec
je     805615b <__sprintf_chk@plt+0xc01b>
movl   $0x109,0x8074594
00
mov    $0x109,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
mov    0x80749ec,%ebp
and    $0x80000,%ebp
jne    8055b68 <__sprintf_chk@plt+0xba28>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     805621f <__sprintf_chk@plt+0xc0df>
cmp    $0x73,%esi
mov    $0x806e281,%edx
mov    0x807459c,%edi
mov    $0x806e282,%eax
mov    0x8074598,%ebx
cmovne %edx,%eax
mov    %eax,(%esp)
mov    %eax,0x807459c
call   8049d70 <strlen@plt>
mov    %eax,0x8074598
call   80548f0 <__sprintf_chk@plt+0xa7b0>
mov    %edi,0x807459c
mov    %ebx,0x8074598
movl   $0x0,0x8074590
00
mov    %eax,0x8074594
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
lea    0x0(%esi),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x8,0x80749ee
jne    8055b68 <__sprintf_chk@plt+0xba28>
movl   $0x104,0x8074594
00
mov    $0x104,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
jne    8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x8,0x80749ec
je     80561c8 <__sprintf_chk@plt+0xc088>
movl   $0x102,0x8074594
00
mov    $0x102,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x8,0x80749ee
je     8055d8f <__sprintf_chk@plt+0xbc4f>
jmp    8055b68 <__sprintf_chk@plt+0xba28>
test   %ebp,%ebp
mov    %eax,%esi
jne    8055b68 <__sprintf_chk@plt+0xba28>
lea    0x0(%esi),%esi
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80563cf <__sprintf_chk@plt+0xc28f>
movl   $0x0,0x8074590
00
mov    $0x110,%eax
movl   $0x110,0x8074594
00
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x40,0x80749ed
jne    8055b68 <__sprintf_chk@plt+0xba28>
movl   $0x0,0x8074590
00
mov    $0x101,%eax
movl   $0x101,0x8074594
00
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
lea    0x0(%esi),%esi
mov    %eax,%esi
mov    0x80749ec,%eax
test   $0x4,%ah
jne    8055b68 <__sprintf_chk@plt+0xba28>
mov    %eax,%edx
shr    %edx
and    $0x1,%edx
cmp    %ebp,%edx
jne    8055b68 <__sprintf_chk@plt+0xba28>
test   $0x10,%al
je     805631d <__sprintf_chk@plt+0xc1dd>
movl   $0x10a,0x8074594
00
mov    $0x10a,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
mov    0x80749ec,%eax
test   $0x4,%ah
jne    8055b68 <__sprintf_chk@plt+0xba28>
mov    %eax,%edx
shr    %edx
and    $0x1,%edx
cmp    %ebp,%edx
jne    8055b68 <__sprintf_chk@plt+0xba28>
test   $0x10,%al
je     80562d8 <__sprintf_chk@plt+0xc198>
movl   $0x108,0x8074594
00
mov    $0x108,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
jne    8055b68 <__sprintf_chk@plt+0xba28>
movl   $0x0,0x8074590
00
call   80548f0 <__sprintf_chk@plt+0xa7b0>
mov    %eax,0x8074594
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x8,0x80749ee
jne    8055b68 <__sprintf_chk@plt+0xba28>
movl   $0x105,0x8074594
00
mov    $0x105,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x8,0x80749ee
jne    8055b68 <__sprintf_chk@plt+0xba28>
movl   $0x107,0x8074594
00
mov    $0x107,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x8,0x80749ee
jne    8055b68 <__sprintf_chk@plt+0xba28>
movl   $0x106,0x8074594
00
mov    $0x106,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
mov    0x80749ec,%eax
test   $0x2,%ah
mov    %eax,0x10(%esp)
je     8055b68 <__sprintf_chk@plt+0xba28>
mov    %eax,%edi
shr    $0xc,%edi
xor    $0x1,%edi
and    $0x1,%edi
cmp    %ebp,%edi
jne    8055b68 <__sprintf_chk@plt+0xba28>
test   $0x10,%al
jne    8055fa9 <__sprintf_chk@plt+0xbe69>
mov    0x8074590,%edx
test   %edx,%edx
jne    8055b68 <__sprintf_chk@plt+0xba28>
mov    0x807459c,%eax
mov    0x8074598,%ecx
movl   $0xffffffff,0x8074584
ff
movl   $0xffffffff,0x8074588
ff
add    %eax,%ecx
cmp    %ecx,%eax
mov    %ecx,%ebp
mov    %ecx,0x14(%esp)
je     805628e <__sprintf_chk@plt+0xc14e>
movsbl (%eax),%ecx
lea    -0x30(%ecx),%edx
cmp    $0x9,%edx
mov    %cl,0x18(%esp)
ja     805651c <__sprintf_chk@plt+0xc3dc>
mov    $0xffffffff,%edx
mov    %esi,0x18(%esp)
mov    %edi,0x1c(%esp)
jmp    8056036 <__sprintf_chk@plt+0xbef6>
lea    0x0(%esi),%esi
lea    (%edx,%edx,4),%edx
lea    (%ecx,%edx,2),%ecx
lea    -0x30(%ecx),%edx
cmp    $0x8030,%ecx
mov    $0x8000,%ecx
cmovg  %ecx,%edx
add    $0x1,%eax
cmp    %eax,%ebp
je     8056280 <__sprintf_chk@plt+0xc140>
movzbl (%eax),%esi
mov    %esi,%ecx
movsbl %cl,%ecx
lea    -0x30(%ecx),%edi
cmp    $0x9,%edi
ja     80562eb <__sprintf_chk@plt+0xc1ab>
test   %edx,%edx
jns    8056000 <__sprintf_chk@plt+0xbec0>
lea    -0x30(%ecx),%edx
jmp    8056017 <__sprintf_chk@plt+0xbed7>
nop
test   %ebp,%ebp
mov    %eax,%esi
je     8055b68 <__sprintf_chk@plt+0xba28>
testb  $0x8,0x80749ee
jne    8055b68 <__sprintf_chk@plt+0xba28>
xor    %eax,%eax
movl   $0x0,(%ebx,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     8056059 <__sprintf_chk@plt+0xbf19>
call   804a120 <__ctype_b_loc@plt>
mov    $0x1,%edi
xor    %ecx,%ecx
mov    (%eax),%edx
jmp    805608c <__sprintf_chk@plt+0xbf4c>
cmp    $0x5f,%ecx
je     8056092 <__sprintf_chk@plt+0xbf52>
add    $0x1,%ecx
cmp    $0x100,%ecx
je     80561e9 <__sprintf_chk@plt+0xc0a9>
testb  $0x8,(%edx,%ecx,2)
je     8056078 <__sprintf_chk@plt+0xbf38>
mov    %ecx,%eax
mov    %edi,%ebp
shr    $0x5,%eax
shl    %cl,%ebp
or     %ebp,(%ebx,%eax,4)
jmp    805607d <__sprintf_chk@plt+0xbf3d>
test   %ebp,%ebp
jne    80560c0 <__sprintf_chk@plt+0xbf80>
mov    0x8074598,%eax
test   %eax,%eax
je     8056530 <__sprintf_chk@plt+0xc3f0>
sub    $0x1,%edi
jne    8056512 <__sprintf_chk@plt+0xc3d2>
call   804a080 <abort@plt>
nop
mov    %eax,%esi
jmp    8055b68 <__sprintf_chk@plt+0xba28>
nop
movl   $0xffffffff,0x8074594
ff
mov    $0xffffffff,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80749e4,%eax
test   %eax,%eax
je     80560f7 <__sprintf_chk@plt+0xbfb7>
call   804a120 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x4,0x1(%eax,%esi,2)
jne    805612b <__sprintf_chk@plt+0xbfeb>
mov    %esi,0x8074594
mov    %esi,%eax
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%eax
sub    $0x1,%esi
mov    %eax,0x807459c
movzbl (%edx),%eax
movl   $0x1,0x8074264
00
mov    %esi,0x8074598
jmp    8055aa7 <__sprintf_chk@plt+0xb967>
xor    %eax,%eax
movl   $0x0,(%ebx,%eax,1)
add    $0x4,%eax
cmp    $0x20,%eax
jb     805612d <__sprintf_chk@plt+0xbfed>
mov    %ebx,%edx
mov    %esi,%eax
call   8053f10 <__sprintf_chk@plt+0x9dd0>
mov    %ebx,%eax
call   8053ba0 <__sprintf_chk@plt+0x9a60>
add    $0x113,%eax
mov    %eax,0x8074594
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
mov    0x8074590,%edi
test   %edi,%edi
je     8055caf <__sprintf_chk@plt+0xbb6f>
jmp    8055b68 <__sprintf_chk@plt+0xba28>
mov    0x8074598,%edx
test   %edx,%edx
je     8055bdb <__sprintf_chk@plt+0xba9b>
test   $0x20,%ah
je     8056330 <__sprintf_chk@plt+0xc1f0>
mov    0x807459c,%ecx
cmpb   $0x29,(%ecx)
je     8055bdb <__sprintf_chk@plt+0xba9b>
test   $0x80,%ah
je     8056496 <__sprintf_chk@plt+0xc356>
cmpb   $0x7c,(%ecx)
je     8055bdb <__sprintf_chk@plt+0xba9b>
test   $0x8,%ah
je     8055b68 <__sprintf_chk@plt+0xba28>
mov    0x807459c,%eax
cmpb   $0xa,(%eax)
jne    8055b68 <__sprintf_chk@plt+0xba28>
jmp    8055bdb <__sprintf_chk@plt+0xba9b>
lea    0x0(%esi),%esi
mov    0x8074594,%eax
cmp    $0xffffffff,%eax
je     8055d8f <__sprintf_chk@plt+0xbc4f>
sub    $0x10d,%eax
cmp    $0x1,%eax
ja     8055b68 <__sprintf_chk@plt+0xba28>
jmp    8055d8f <__sprintf_chk@plt+0xbc4f>
cmp    $0x57,%esi
je     805625b <__sprintf_chk@plt+0xc11b>
mov    %ebx,%eax
movl   $0x0,0x8074590
00
call   8053ba0 <__sprintf_chk@plt+0x9a60>
add    $0x113,%eax
mov    %eax,0x8074594
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
and    $0x20000,%edx
je     8055c70 <__sprintf_chk@plt+0xbb30>
jmp    8055b68 <__sprintf_chk@plt+0xba28>
mov    %ebp,%eax
mov    $0x8,%ecx
mov    %ebx,%edi
rep stos %eax,%es:(%edi)
mov    $0x1,%edi
call   804a120 <__ctype_b_loc@plt>
xor    %ecx,%ecx
mov    (%eax),%edx
testb  $0x20,0x1(%edx,%ecx,2)
je     805624b <__sprintf_chk@plt+0xc10b>
mov    %ecx,%eax
mov    %edi,%ebp
shr    $0x5,%eax
shl    %cl,%ebp
or     %ebp,(%ebx,%eax,4)
add    $0x1,%ecx
cmp    $0x100,%ecx
jne    8056238 <__sprintf_chk@plt+0xc0f8>
cmp    $0x53,%esi
jne    80561ee <__sprintf_chk@plt+0xc0ae>
notl   0x20(%esp)
notl   0x24(%esp)
notl   0x28(%esp)
notl   0x2c(%esp)
notl   0x30(%esp)
notl   0x34(%esp)
notl   0x38(%esp)
notl   0x3c(%esp)
jmp    80561ee <__sprintf_chk@plt+0xc0ae>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
mov    %edx,0x8074588
test   %edi,%edi
jne    80562a1 <__sprintf_chk@plt+0xc161>
cmp    0x14(%esp),%eax
je     80562a1 <__sprintf_chk@plt+0xc161>
cmpb   $0x7d,(%eax)
je     805643c <__sprintf_chk@plt+0xc2fc>
testl  $0x200000,0x10(%esp)
jne    8055b68 <__sprintf_chk@plt+0xba28>
movl   $0x5,0x8(%esp)
movl   $0x806e2a1,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,(%esp)
call   804b2d0 <__sprintf_chk@plt+0x1190>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8074590,%ebp
test   %ebp,%ebp
je     8055e9f <__sprintf_chk@plt+0xbd5f>
jmp    8055b68 <__sprintf_chk@plt+0xba28>
mov    %esi,%ecx
mov    0x1c(%esp),%edi
cmp    $0x2c,%cl
mov    0x18(%esp),%esi
mov    %edx,0x8074588
je     8056369 <__sprintf_chk@plt+0xc229>
test   %edi,%edi
mov    %edx,0x8074584
je     8056292 <__sprintf_chk@plt+0xc152>
cmp    %eax,0x14(%esp)
je     80562a1 <__sprintf_chk@plt+0xc161>
cmp    $0x5c,%cl
jne    80562a1 <__sprintf_chk@plt+0xc161>
add    $0x1,%eax
jmp    8056292 <__sprintf_chk@plt+0xc152>
mov    0x8074590,%ecx
test   %ecx,%ecx
je     8055e5f <__sprintf_chk@plt+0xbd1f>
jmp    8055b68 <__sprintf_chk@plt+0xba28>
cmp    $0x1,%edx
jbe    80564fe <__sprintf_chk@plt+0xc3be>
mov    0x807459c,%ecx
cmpb   $0x5c,(%ecx)
je     80564cb <__sprintf_chk@plt+0xc38b>
test   $0x80,%ah
jne    805619d <__sprintf_chk@plt+0xc05d>
cmpb   $0x5c,(%ecx)
jne    80561a6 <__sprintf_chk@plt+0xc066>
cmpb   $0x7c,0x1(%ecx)
jne    80561a6 <__sprintf_chk@plt+0xc066>
jmp    8055bdb <__sprintf_chk@plt+0xba9b>
test   %edx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
js     80564bc <__sprintf_chk@plt+0xc37c>
mov    0x8074584,%ebp
add    $0x1,%eax
cmp    0x14(%esp),%eax
je     80563c0 <__sprintf_chk@plt+0xc280>
movzbl (%eax),%ecx
movsbl %cl,%edx
mov    %cl,0x18(%esp)
lea    -0x30(%edx),%ecx
cmp    $0x9,%ecx
ja     80564a4 <__sprintf_chk@plt+0xc364>
test   %ebp,%ebp
js     80563cb <__sprintf_chk@plt+0xc28b>
lea    0x0(%ebp,%ebp,4),%ecx
lea    (%edx,%ecx,2),%edx
mov    $0x8000,%ecx
cmp    $0x8030,%edx
lea    -0x30(%edx),%ebp
cmovg  %ecx,%ebp
add    $0x1,%eax
cmp    0x14(%esp),%eax
jne    8056385 <__sprintf_chk@plt+0xc245>
mov    %ebp,0x8074584
jmp    805628e <__sprintf_chk@plt+0xc14e>
mov    %ecx,%ebp
jmp    805637c <__sprintf_chk@plt+0xc23c>
mov    0x80749ec,%esi
mov    $0x8,%ecx
mov    %ebx,%edi
mov    %ebp,%eax
rep stos %eax,%es:(%edi)
test   $0x40,%esi
notl   0x20(%esp)
notl   0x24(%esp)
notl   0x28(%esp)
notl   0x2c(%esp)
notl   0x30(%esp)
notl   0x34(%esp)
notl   0x38(%esp)
notl   0x3c(%esp)
jne    8056426 <__sprintf_chk@plt+0xc2e6>
movzbl 0x80749e0,%edx
mov    %edx,%eax
mov    %edx,%ecx
shr    $0x3,%eax
and    $0x1f,%ecx
and    $0x1c,%eax
mov    $0xfffffffe,%edx
rol    %cl,%edx
and    %edx,(%ebx,%eax,1)
and    $0x80,%esi
je     80561ee <__sprintf_chk@plt+0xc0ae>
andl   $0xfffffffe,0x20(%esp)
jmp    80561ee <__sprintf_chk@plt+0xc0ae>
mov    0x8074588,%ecx
test   %ecx,%ecx
js     80562a1 <__sprintf_chk@plt+0xc161>
mov    0x8074584,%edx
test   %edx,%edx
js     8056464 <__sprintf_chk@plt+0xc324>
cmp    %edx,%ecx
jg     80562a1 <__sprintf_chk@plt+0xc161>
cmp    $0x7fff,%edx
jg     80564da <__sprintf_chk@plt+0xc39a>
mov    0x14(%esp),%ebx
add    $0x1,%eax
mov    %eax,0x807459c
movl   $0x0,0x8074590
00
movl   $0x10b,0x8074594
00
sub    %eax,%ebx
mov    $0x10b,%eax
mov    %ebx,0x8074598
jmp    8055b8f <__sprintf_chk@plt+0xba4f>
cmp    $0x1,%edx
ja     8056351 <__sprintf_chk@plt+0xc211>
jmp    80561a6 <__sprintf_chk@plt+0xc066>
test   %edi,%edi
mov    %ebp,0x8074584
je     8056298 <__sprintf_chk@plt+0xc158>
movzbl 0x18(%esp),%ecx
jmp    8056310 <__sprintf_chk@plt+0xc1d0>
movl   $0x0,0x8074588
00
jmp    8056376 <__sprintf_chk@plt+0xc236>
cmpb   $0x29,0x1(%ecx)
jne    8056348 <__sprintf_chk@plt+0xc208>
jmp    8055bdb <__sprintf_chk@plt+0xba9b>
movl   $0x5,0x8(%esp)
movl   $0x806e2b9,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,(%esp)
call   804b2d0 <__sprintf_chk@plt+0x1190>
test   $0x80,%ah
mov    0x807459c,%ecx
jne    805619d <__sprintf_chk@plt+0xc05d>
jmp    80561a6 <__sprintf_chk@plt+0xc066>
mov    $0x1,%ebp
jmp    8055a32 <__sprintf_chk@plt+0xb8f2>
cmpb   $0x2c,0x18(%esp)
je     80564bc <__sprintf_chk@plt+0xc37c>
movzbl 0x18(%esp),%ecx
or     $0xffffffff,%edx
jmp    8056300 <__sprintf_chk@plt+0xc1c0>
movl   $0x5,0x8(%esp)
movl   $0x806e28d,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,(%esp)
call   804b2d0 <__sprintf_chk@plt+0x1190>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
test   %eax,%eax
mov    %eax,0x10(%esp)
je     80565ac <__sprintf_chk@plt+0xc46c>
test   %edx,%edx
mov    %edx,%esi
je     8056583 <__sprintf_chk@plt+0xc443>
mov    %edx,(%esp)
mov    %ecx,%edi
call   8049d70 <strlen@plt>
test   %eax,%eax
jne    80565b0 <__sprintf_chk@plt+0xc470>
mov    0x10(%esp),%edx
mov    (%edx),%eax
lea    0x4(%edx),%ebx
mov    %edx,%esi
test   %eax,%eax
je     80565ac <__sprintf_chk@plt+0xc46c>
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    8056592 <__sprintf_chk@plt+0xc452>
xor    %eax,%eax
jmp    8056628 <__sprintf_chk@plt+0xc4e8>
lea    0x1(%eax),%ebp
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,%ebx
mov    %eax,(%esp)
call   80499f0 <memcpy@plt>
test   %ebx,%ebx
je     8056583 <__sprintf_chk@plt+0xc443>
mov    0x10(%esp),%eax
movb   $0x0,(%ebx,%edi,1)
mov    (%eax),%edi
test   %edi,%edi
je     8056705 <__sprintf_chk@plt+0xc5c5>
mov    %ebx,(%esp)
xor    %ebp,%ebp
call   8049d70 <strlen@plt>
mov    %eax,%esi
nop
cmpb   $0x0,(%edi)
jne    8056608 <__sprintf_chk@plt+0xc4c8>
jmp    8056630 <__sprintf_chk@plt+0xc4f0>
nop
add    $0x1,%edi
cmpb   $0x0,(%edi)
je     8056630 <__sprintf_chk@plt+0xc4f0>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   804a050 <strncmp@plt>
test   %eax,%eax
jne    8056600 <__sprintf_chk@plt+0xc4c0>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    0x10(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%esp),%eax
add    $0x1,%ebp
mov    (%eax,%ebp,4),%edi
test   %edi,%edi
jne    80565f8 <__sprintf_chk@plt+0xc4b8>
mov    %ebp,0x18(%esp)
movl   $0x0,0x14(%esp)
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    0x14(%esp),%ecx
lea    (%eax,%ecx,4),%eax
mov    (%eax),%esi
mov    %eax,0x1c(%esp)
test   %esi,%esi
je     80566cf <__sprintf_chk@plt+0xc58f>
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
cmpb   $0x0,(%ebx)
mov    %eax,%edi
je     80566c8 <__sprintf_chk@plt+0xc588>
mov    %ebx,%ebp
jmp    8056681 <__sprintf_chk@plt+0xc541>
add    $0x1,%ebp
cmpb   $0x0,0x0(%ebp)
je     80566c8 <__sprintf_chk@plt+0xc588>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804a050 <strncmp@plt>
test   %eax,%eax
jne    8056678 <__sprintf_chk@plt+0xc538>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    0x14(%esp),%eax
subl   $0x1,0x18(%esp)
cmp    %eax,0x18(%esp)
je     80566cf <__sprintf_chk@plt+0xc58f>
mov    0x18(%esp),%edx
mov    0x10(%esp),%eax
mov    0x1c(%esp),%ecx
lea    (%eax,%edx,4),%eax
mov    (%eax),%edx
mov    %edx,(%ecx)
movl   $0x0,(%eax)
jmp    8056650 <__sprintf_chk@plt+0xc510>
nop
addl   $0x1,0x14(%esp)
jmp    8056650 <__sprintf_chk@plt+0xc510>
mov    0x18(%esp),%esi
add    $0x2,%esi
cmp    $0x3fffffff,%esi
ja     8056712 <__sprintf_chk@plt+0xc5d2>
mov    0x10(%esp),%eax
shl    $0x2,%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %ebx,-0x8(%eax,%esi,1)
movl   $0x0,-0x4(%eax,%esi,1)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x18(%esp)
jmp    8056642 <__sprintf_chk@plt+0xc502>
call   80652b0 <__sprintf_chk@plt+0x1b170>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x4(%edx),%ebx
mov    %edx,0x14(%esp)
mov    %ecx,0x18(%esp)
test   %ebx,%ebx
mov    %ebx,%edi
mov    %ebx,0xc(%esp)
je     8056aa3 <__sprintf_chk@plt+0xc963>
mov    (%edx),%esi
xor    %eax,%eax
xor    %edx,%edx
xor    %ebx,%ebx
lea    0x0(%esi),%esi
lea    (%esi,%edx,8),%ecx
add    $0x1,%eax
mov    0x4(%ecx),%edx
add    (%ecx),%edx
xor    %edx,%ebx
cmp    %edi,%eax
mov    %eax,%edx
jne    8056750 <__sprintf_chk@plt+0xc610>
mov    0x54(%ebp),%esi
xor    %edi,%edi
mov    0x50(%ebp),%eax
test   %esi,%esi
mov    %eax,0x10(%esp)
jle    8056840 <__sprintf_chk@plt+0xc700>
mov    %ebp,0x1c(%esp)
mov    %esi,%ebp
mov    %ebx,%esi
jmp    8056796 <__sprintf_chk@plt+0xc656>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
add    $0x24,%eax
cmp    %ebp,%edi
je     8056838 <__sprintf_chk@plt+0xc6f8>
cmp    %esi,(%eax)
jne    8056788 <__sprintf_chk@plt+0xc648>
mov    0xc(%esp),%ebx
cmp    %ebx,0x8(%eax)
jne    8056788 <__sprintf_chk@plt+0xc648>
movzbl 0x10(%eax),%edx
cmp    0x18(%esp),%edx
jne    8056788 <__sprintf_chk@plt+0xc648>
test   %ebx,%ebx
je     8056a20 <__sprintf_chk@plt+0xc8e0>
mov    0x14(%esp),%ebx
mov    0x4(%eax),%edx
mov    (%ebx),%ecx
mov    0x4(%edx),%ebx
cmp    %ebx,0x4(%ecx)
jne    8056788 <__sprintf_chk@plt+0xc648>
mov    (%edx),%ebx
cmp    %ebx,(%ecx)
jne    8056788 <__sprintf_chk@plt+0xc648>
mov    %edi,0x28(%esp)
xor    %ebx,%ebx
mov    0xc(%esp),%edi
mov    %esi,0x20(%esp)
mov    %eax,0x24(%esp)
mov    %ebp,0x2c(%esp)
jmp    8056802 <__sprintf_chk@plt+0xc6c2>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%edx),%ebp
mov    %ecx,%esi
mov    %edx,%eax
cmp    %ebp,0xc(%ecx)
jne    8056809 <__sprintf_chk@plt+0xc6c9>
mov    0x8(%eax),%eax
add    $0x8,%ecx
add    $0x8,%edx
cmp    %eax,0x8(%esi)
jne    8056809 <__sprintf_chk@plt+0xc6c9>
add    $0x1,%ebx
cmp    %edi,%ebx
jne    80567e8 <__sprintf_chk@plt+0xc6a8>
cmp    0xc(%esp),%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    0x28(%esp),%edi
mov    0x2c(%esp),%ebp
je     8056a20 <__sprintf_chk@plt+0xc8e0>
add    $0x1,%edi
add    $0x24,%eax
cmp    %ebp,%edi
jne    8056796 <__sprintf_chk@plt+0xc656>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    %ebp,%esi
mov    0x1c(%esp),%ebp
lea    0x1(%esi),%eax
cmp    %eax,0x58(%ebp)
jg     8056a60 <__sprintf_chk@plt+0xc920>
mov    0x10(%esp),%edx
test   %edx,%edx
sete   %dl
movzbl %dl,%ecx
test   %dl,%dl
lea    (%eax,%ecx,1),%esi
jne    8056a8c <__sprintf_chk@plt+0xc94c>
cmp    $0x4bda12e,%esi
ja     8056aaa <__sprintf_chk@plt+0xc96a>
lea    0x1(%esi),%eax
shr    %eax
add    %eax,%esi
lea    (%esi,%esi,8),%eax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %esi,0x58(%ebp)
mov    0x14(%esp),%esi
mov    0x4(%esi),%edx
mov    %eax,0x50(%ebp)
mov    %eax,%esi
mov    %eax,0x10(%esp)
lea    (%edi,%edi,8),%eax
shl    $0x2,%eax
add    %eax,%esi
cmp    $0x1fffffff,%edx
mov    %eax,0x10(%esp)
mov    %ebx,(%esi)
ja     8056aaa <__sprintf_chk@plt+0xc96a>
lea    0x0(,%edx,8),%eax
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0xc(%esp),%edx
movl   $0x0,0x8(%esi)
mov    %edx,0xc(%esi)
mov    %eax,0x4(%esi)
mov    0x14(%esp),%eax
mov    0x10(%esp),%esi
add    0x50(%ebp),%esi
mov    0x4(%eax),%ebx
cmp    %ebx,0xc(%esi)
ja     8056a6d <__sprintf_chk@plt+0xc92d>
mov    0x4(%esi),%ecx
test   %ecx,%ecx
sete   %al
movzbl %al,%edx
add    %edx,%ebx
test   %al,%al
jne    8056a75 <__sprintf_chk@plt+0xc935>
cmp    $0x15555554,%ebx
ja     8056aaa <__sprintf_chk@plt+0xc96a>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %ebx,0xc(%esi)
mov    0x14(%esp),%ebx
mov    0x4(%ebx),%ebx
mov    %eax,0x4(%esi)
mov    0x14(%esp),%ecx
shl    $0x3,%ebx
mov    (%ecx),%edx
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x14(%esp),%ecx
xor    %edx,%edx
movzbl 0x18(%esp),%ebx
mov    0x4(%ecx),%eax
mov    %eax,0x8(%esi)
mov    0x50(%ebp),%eax
mov    0x10(%esp),%esi
mov    %bl,0x10(%eax,%esi,1)
mov    0x50(%ebp),%eax
movb   $0x0,0x11(%eax,%esi,1)
mov    0x50(%ebp),%eax
add    %esi,%eax
xor    %esi,%esi
mov    %si,0x12(%eax)
mov    0x18(%esp),%esi
movl   $0x0,0x1c(%eax)
mov    0x4(%ecx),%ebx
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
xor    %eax,%eax
and    $0xf,%esi
test   %ebx,%ebx
mov    %esi,0x18(%esp)
je     8056a1c <__sprintf_chk@plt+0xc8dc>
mov    %edi,0x1c(%esp)
mov    %ecx,%esi
mov    %ebx,%edi
jmp    80569c9 <__sprintf_chk@plt+0xc889>
nop
cmp    $0x101,%edx
je     8056a30 <__sprintf_chk@plt+0xc8f0>
add    $0x1,%eax
cmp    %edi,%eax
mov    %eax,%edx
jae    8056a18 <__sprintf_chk@plt+0xc8d8>
mov    (%esi),%ecx
lea    (%ecx,%edx,8),%ecx
mov    0xc(%ebp),%edx
mov    (%ecx),%ebx
mov    (%edx,%ebx,4),%edx
test   %edx,%edx
jns    80569b8 <__sprintf_chk@plt+0xc878>
mov    0x4(%ecx),%ebx
mov    %ebx,%ecx
sar    $0x4,%ecx
mov    %ecx,0xc(%esp)
mov    %ebx,%ecx
sar    $0x8,%ecx
or     %ecx,0xc(%esp)
or     %ebx,0xc(%esp)
mov    0xc(%esp),%ecx
test   %ecx,0x18(%esp)
mov    0x10(%esp),%ecx
jne    8056a50 <__sprintf_chk@plt+0xc910>
add    0x50(%ebp),%ecx
mov    0x14(%ecx),%ebx
test   %ebx,%ebx
jne    80569c0 <__sprintf_chk@plt+0xc880>
add    $0x1,%eax
cmp    %edi,%eax
mov    %edx,0x14(%ecx)
mov    %eax,%edx
jb     80569c9 <__sprintf_chk@plt+0xc889>
nop
mov    0x1c(%esp),%edi
addl   $0x1,0x54(%ebp)
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%esp),%edi
mov    $0x777,%ecx
mov    0x50(%ebp),%edx
mov    %cx,0x12(%edx,%edi,1)
movb   $0x1,0x11(%edx,%edi,1)
mov    0x4(%esi),%edi
jmp    80569c0 <__sprintf_chk@plt+0xc880>
xchg   %ax,%ax
add    0x50(%ebp),%ecx
or     %bx,0x12(%ecx)
jmp    8056a04 <__sprintf_chk@plt+0xc8c4>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%edx
mov    0x10(%esp),%esi
jmp    805689f <__sprintf_chk@plt+0xc75f>
mov    0x4(%esi),%eax
jmp    805693c <__sprintf_chk@plt+0xc7fc>
test   %ebx,%ebx
jne    805691c <__sprintf_chk@plt+0xc7dc>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    8056923 <__sprintf_chk@plt+0xc7e3>
test   %esi,%esi
jne    8056876 <__sprintf_chk@plt+0xc736>
mov    $0x24,%eax
mov    $0x1,%esi
jmp    805687c <__sprintf_chk@plt+0xc73c>
xor    %ebx,%ebx
jmp    8056763 <__sprintf_chk@plt+0xc623>
call   80652b0 <__sprintf_chk@plt+0x1b170>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %eax,0x1c(%esp)
mov    0x10(%edx),%eax
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   80651c0 <__sprintf_chk@plt+0x1b080>
mov    0x4(%edi),%esi
test   %esi,%esi
mov    %eax,0x2c(%esp)
je     8056b88 <__sprintf_chk@plt+0xca48>
mov    0x1c(%esp),%eax
xor    %ecx,%ecx
mov    %ecx,%ebx
mov    (%eax),%ebp
mov    %ebp,0x14(%esp)
mov    %ebp,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
lea    (%eax,%ebx,8),%edx
mov    0x10(%esp),%eax
mov    (%edx),%edi
mov    0xc(%eax),%eax
lea    (%eax,%edi,4),%ecx
mov    (%ecx),%eax
lea    -0x100(%eax),%ebp
cmp    $0x12,%ebp
ja     8056b78 <__sprintf_chk@plt+0xca38>
cmp    $0x101,%eax
je     8056b78 <__sprintf_chk@plt+0xca38>
sub    $0x110,%eax
cmp    $0x1,%eax
jbe    8056b78 <__sprintf_chk@plt+0xca38>
mov    0x4(%edx),%eax
test   %esi,%esi
mov    %eax,0x24(%esp)
je     8056dd4 <__sprintf_chk@plt+0xcc94>
mov    0x14(%esp),%ebp
mov    $0x0,%eax
cmp    0x0(%ebp),%edi
jne    8056b46 <__sprintf_chk@plt+0xca06>
jmp    8056ba4 <__sprintf_chk@plt+0xca64>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x0(%ebp,%eax,8),%edi
je     8056ba0 <__sprintf_chk@plt+0xca60>
add    $0x1,%eax
cmp    %esi,%eax
jne    8056b40 <__sprintf_chk@plt+0xca00>
mov    %ebp,0x14(%esp)
mov    %eax,%esi
mov    0x2c(%esp),%eax
add    %edi,%eax
cmpb   $0x0,(%eax)
jne    8056b7b <__sprintf_chk@plt+0xca3b>
movb   $0x1,(%eax)
mov    (%ecx),%eax
sub    $0x102,%eax
cmp    $0x5,%eax
ja     8056c00 <__sprintf_chk@plt+0xcac0>
jmp    *0x806e084(,%eax,4)
add    $0x1,%ebx
cmp    %esi,%ebx
jae    8056b88 <__sprintf_chk@plt+0xca48>
mov    0x14(%esp),%eax
jmp    8056af0 <__sprintf_chk@plt+0xc9b0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x14(%esp)
mov    0x1c(%esp),%ebp
lea    -0x1(%esi),%edx
cmp    %edx,%eax
mov    %edx,0x4(%ebp)
mov    %edx,%ebp
jae    8056dcd <__sprintf_chk@plt+0xcc8d>
mov    %ecx,0x18(%esp)
mov    0x14(%esp),%ecx
sub    %eax,%esi
lea    0x0(,%eax,8),%edx
lea    -0x8(,%esi,8),%eax
mov    %ebp,%esi
mov    %eax,0x8(%esp)
lea    0x8(%ecx,%edx,1),%eax
add    %ecx,%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   80499c0 <memmove@plt>
mov    0x18(%esp),%ecx
jmp    8056b53 <__sprintf_chk@plt+0xca13>
andl   $0x444,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    0x5c(%eax),%edx
lea    (%edi,%edi,2),%eax
shl    $0x2,%eax
mov    %eax,0x28(%esp)
add    %edx,%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     8056d56 <__sprintf_chk@plt+0xcc16>
movl   $0x0,0x18(%esp)
mov    0x14(%esp),%ebp
mov    0x18(%esp),%ecx
mov    %edx,0x20(%esp)
lea    0x0(%esi),%esi
mov    (%eax),%eax
mov    %esi,%edx
xor    %ebx,%ebx
mov    (%eax,%ecx,8),%edi
jmp    8056c4b <__sprintf_chk@plt+0xcb0b>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%ebx
cmp    %ebx,%edx
jbe    8056c70 <__sprintf_chk@plt+0xcb30>
lea    (%ebx,%edx,1),%eax
shr    %eax
cmp    0x0(%ebp,%eax,8),%edi
jb     8056c48 <__sprintf_chk@plt+0xcb08>
cmp    %eax,%ebx
mov    %eax,%edx
jae    8056c70 <__sprintf_chk@plt+0xcb30>
add    %ebx,%eax
shr    %eax
cmp    0x0(%ebp,%eax,8),%edi
jb     8056c48 <__sprintf_chk@plt+0xcb08>
cmp    %eax,%ebx
mov    %eax,%edx
jb     8056c60 <__sprintf_chk@plt+0xcb20>
cmp    %ebx,%esi
jbe    8056c80 <__sprintf_chk@plt+0xcb40>
lea    0x0(%ebp,%ebx,8),%eax
cmp    (%eax),%edi
je     8056d60 <__sprintf_chk@plt+0xcc20>
mov    0x1c(%esp),%eax
lea    0x1(%esi),%edx
cmp    %edx,0x8(%eax)
ja     8056cef <__sprintf_chk@plt+0xcbaf>
test   %ebp,%ebp
sete   %al
movzbl %al,%ecx
add    %esi,%ecx
test   %al,%al
lea    0x1(%ecx),%edx
jne    8056d78 <__sprintf_chk@plt+0xcc38>
cmp    $0x15555554,%edx
ja     8056ddb <__sprintf_chk@plt+0xcc9b>
add    $0x2,%ecx
shr    %ecx
add    %ecx,%edx
lea    0x0(,%edx,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x14(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x1c(%esp),%ecx
mov    0x14(%esp),%edx
mov    %edx,0x8(%ecx)
mov    %eax,(%ecx)
mov    0x4(%ecx),%ecx
mov    %eax,%ebp
mov    %ecx,0x14(%esp)
lea    0x1(%ecx),%edx
mov    0x10(%esp),%ecx
mov    0x5c(%ecx),%ecx
mov    %ecx,0x20(%esp)
cmp    %ebx,%esi
jbe    8056d22 <__sprintf_chk@plt+0xcbe2>
mov    %esi,%eax
sub    %ebx,%eax
shl    $0x3,%esi
shl    $0x3,%eax
mov    %esi,%ecx
add    $0x8,%esi
sub    %eax,%ecx
sub    %eax,%esi
add    %ebp,%ecx
add    %ebp,%esi
mov    %eax,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x14(%esp)
call   80499c0 <memmove@plt>
mov    0x14(%esp),%edx
mov    0x24(%esp),%ecx
lea    0x0(%ebp,%ebx,8),%eax
mov    %edx,%esi
mov    %edi,(%eax)
mov    %ecx,0x4(%eax)
mov    0x1c(%esp),%eax
mov    %edx,0x4(%eax)
mov    0x20(%esp),%eax
add    0x28(%esp),%eax
addl   $0x1,0x18(%esp)
mov    0x18(%esp),%ecx
cmp    %ecx,0x4(%eax)
ja     8056c38 <__sprintf_chk@plt+0xcaf8>
mov    %ebp,0x14(%esp)
xor    %ebx,%ebx
jmp    8056b7b <__sprintf_chk@plt+0xca3b>
lea    0x0(%esi),%esi
mov    0x24(%esp),%ecx
or     %ecx,0x4(%eax)
mov    0x10(%esp),%eax
mov    0x5c(%eax),%eax
mov    %eax,0x20(%esp)
jmp    8056d3c <__sprintf_chk@plt+0xcbfc>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
jne    8056cb4 <__sprintf_chk@plt+0xcb74>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8056cbb <__sprintf_chk@plt+0xcb7b>
andl   $0x252,0x24(%esp)
jmp    8056c00 <__sprintf_chk@plt+0xcac0>
andl   $0x202,0x24(%esp)
jmp    8056c00 <__sprintf_chk@plt+0xcac0>
andl   $0x50,0x24(%esp)
jmp    8056c00 <__sprintf_chk@plt+0xcac0>
andl   $0x700,0x24(%esp)
jmp    8056c00 <__sprintf_chk@plt+0xcac0>
andl   $0x525,0x24(%esp)
jmp    8056c00 <__sprintf_chk@plt+0xcac0>
mov    %edx,%esi
jmp    8056b53 <__sprintf_chk@plt+0xca13>
xor    %esi,%esi
jmp    8056b53 <__sprintf_chk@plt+0xca13>
nop
lea    0x0(%esi,%eiz,1),%esi
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
lea    0x14(%esp),%edx
mov    %eax,0x4(%esp)
lea    0x1c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %gs:0x14,%edi
mov    %edi,0x2c(%esp)
xor    %edi,%edi
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
call   8049940 <wcrtomb@plt>
test   %eax,%eax
mov    %eax,0x8074264
jle    8056fe8 <__sprintf_chk@plt+0xcea8>
cmp    $0x1,%eax
movzbl 0x1c(%esp),%eax
je     8056fd8 <__sprintf_chk@plt+0xce98>
mov    $0x1,%edx
call   8053a30 <__sprintf_chk@plt+0x98f0>
mov    0x8074264,%eax
mov    $0x1,%edi
cmp    $0x1,%eax
jg     8056ed7 <__sprintf_chk@plt+0xcd97>
jmp    8056fa8 <__sprintf_chk@plt+0xce68>
lea    0x0(%esi),%esi
cmp    $0x2aaaaaa9,%ebx
ja     8056ff4 <__sprintf_chk@plt+0xceb4>
add    $0x2,%edx
shr    %edx
add    %edx,%ebx
lea    0x0(,%ebx,4),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0xc(%esi)
mov    0x80749f0,%esi
mov    0x10(%esi),%edx
mov    %ebx,0x14(%esi)
lea    0x1(%edx),%eax
mov    %eax,0x10(%esi)
mov    0xc(%esi),%ecx
mov    0x8074560,%eax
mov    %ebp,(%ecx,%edx,4)
add    $0x1,%eax
addl   $0x1,0x1c(%esi)
cmp    0x18(%esi),%eax
mov    %eax,0x8074560
jbe    8056ec2 <__sprintf_chk@plt+0xcd82>
mov    %eax,0x18(%esi)
call   80571f0 <__sprintf_chk@plt+0xd0b0>
mov    0x8074264,%eax
add    $0x1,%edi
cmp    %edi,%eax
jle    8056fa8 <__sprintf_chk@plt+0xce68>
sub    $0x1,%eax
xor    %ebx,%ebx
movzbl 0x1c(%esp,%edi,1),%ebp
cmp    %edi,%eax
sete   %bl
call   8049bc0 <__ctype_get_mb_cur_max@plt>
add    %ebx,%ebx
mov    0x80749f0,%esi
cmp    $0x1,%eax
jbe    8056f65 <__sprintf_chk@plt+0xce25>
mov    0x10(%esi),%eax
lea    0x1(%eax),%edx
cmp    %edx,0x3c(%esi)
ja     8056f5f <__sprintf_chk@plt+0xce1f>
mov    0x40(%esi),%ecx
test   %ecx,%ecx
sete   %dl
mov    %dl,0xc(%esp)
movzbl %dl,%edx
add    %edx,%eax
cmpb   $0x0,0xc(%esp)
lea    0x1(%eax),%edx
jne    8056fc0 <__sprintf_chk@plt+0xce80>
cmp    $0x2aaaaaa9,%edx
ja     8056ff4 <__sprintf_chk@plt+0xceb4>
add    $0x2,%eax
shr    %eax
add    %eax,%edx
lea    0x0(,%edx,4),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
mov    %edx,0xc(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0xc(%esp),%edx
mov    %eax,0x40(%esi)
mov    0x80749f0,%esi
mov    0x10(%esi),%eax
mov    %edx,0x3c(%esi)
mov    0x40(%esi),%edx
mov    %ebx,(%edx,%eax,4)
mov    0x10(%esi),%edx
lea    0x1(%edx),%eax
cmp    %eax,0x14(%esi)
ja     8056ea0 <__sprintf_chk@plt+0xcd60>
mov    0xc(%esi),%eax
test   %eax,%eax
sete   %cl
movzbl %cl,%ebx
add    %ebx,%edx
test   %cl,%cl
lea    0x1(%edx),%ebx
je     8056e68 <__sprintf_chk@plt+0xcd28>
test   %ebx,%ebx
jne    8056e7b <__sprintf_chk@plt+0xcd3b>
mov    $0x40,%edx
mov    $0x10,%ebx
jmp    8056e82 <__sprintf_chk@plt+0xcd42>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    8056ff9 <__sprintf_chk@plt+0xceb9>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %edx,%edx
jne    8056f35 <__sprintf_chk@plt+0xcdf5>
mov    $0x40,%eax
mov    $0x10,%edx
jmp    8056f3c <__sprintf_chk@plt+0xcdfc>
nop
mov    $0x3,%edx
jmp    8056e4c <__sprintf_chk@plt+0xcd0c>
lea    0x0(%esi),%esi
movb   $0x0,0x1c(%esp)
xor    %eax,%eax
jmp    8056e47 <__sprintf_chk@plt+0xcd07>
call   80652b0 <__sprintf_chk@plt+0x1b170>
call   8049ac0 <__stack_chk_fail@plt>
xchg   %ax,%ax
sub    $0xc,%esp
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    $0x3,%edx
mov    $0x10d,%eax
add    $0xc,%esp
jmp    8053a30 <__sprintf_chk@plt+0x98f0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80570dd <__sprintf_chk@plt+0xcf9d>
nop
cmp    $0x111,%ebx
jne    80570dd <__sprintf_chk@plt+0xcf9d>
mov    0x80749f0,%eax
mov    0x48(%eax),%edx
mov    0x44(%eax),%eax
imul   $0x34,%edx,%ecx
lea    -0x34(%eax,%ecx,1),%ebx
mov    0x4(%ebx),%esi
test   %esi,%esi
jne    80571aa <__sprintf_chk@plt+0xd06a>
mov    0xc(%ebx),%ecx
test   %ecx,%ecx
je     80570f0 <__sprintf_chk@plt+0xcfb0>
xor    %esi,%esi
xor    %edi,%edi
jmp    8057085 <__sprintf_chk@plt+0xcf45>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    %esi,0xc(%ebx)
jbe    80570a3 <__sprintf_chk@plt+0xcf63>
mov    $0x1,%edi
mov    0x8(%ebx),%eax
mov    (%eax,%esi,4),%eax
call   8056df0 <__sprintf_chk@plt+0xccb0>
mov    %edi,%eax
test   %al,%al
je     8057078 <__sprintf_chk@plt+0xcf38>
call   8057000 <__sprintf_chk@plt+0xcec0>
add    $0x1,%esi
cmp    %esi,0xc(%ebx)
ja     8057080 <__sprintf_chk@plt+0xcf40>
mov    0x4(%ebx),%eax
mov    $0x1,%ebp
movl   $0x0,0xc(%ebx)
test   %eax,%eax
je     8057100 <__sprintf_chk@plt+0xcfc0>
mov    0x80749f0,%eax
mov    0x48(%eax),%eax
lea    -0x1(,%eax,4),%eax
call   8053de0 <__sprintf_chk@plt+0x9ca0>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    $0x10d,%ebx
cmp    $0x1,%eax
ja     8057038 <__sprintf_chk@plt+0xcef8>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
mov    $0x3,%edx
pop    %esi
pop    %edi
pop    %ebp
jmp    8053a30 <__sprintf_chk@plt+0x98f0>
movl   $0x0,0xc(%ebx)
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x8074260,%eax
cmp    $0xffffffff,%eax
je     8057180 <__sprintf_chk@plt+0xd040>
test   %eax,%eax
jne    8057138 <__sprintf_chk@plt+0xcff8>
cmpl   $0xffffffff,(%ebx)
je     8057138 <__sprintf_chk@plt+0xcff8>
mov    0x80749f0,%eax
mov    0x48(%eax),%eax
lea    -0x1(,%eax,4),%eax
call   8053de0 <__sprintf_chk@plt+0x9ca0>
mov    %ebp,%eax
test   %al,%al
jne    80570ca <__sprintf_chk@plt+0xcf8a>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
test   %edx,%edx
jne    8057113 <__sprintf_chk@plt+0xcfd3>
mov    0x14(%ebx),%edi
test   %edi,%edi
jne    8057113 <__sprintf_chk@plt+0xcfd3>
mov    0x20(%ebx),%esi
test   %esi,%esi
jne    8057113 <__sprintf_chk@plt+0xcfd3>
mov    0x28(%ebx),%ecx
test   %ecx,%ecx
jne    8057113 <__sprintf_chk@plt+0xcfd3>
mov    0x30(%ebx),%edx
test   %edx,%edx
jne    8057113 <__sprintf_chk@plt+0xcfd3>
cmpl   $0xffffffff,(%ebx)
je     805712d <__sprintf_chk@plt+0xcfed>
test   %eax,%eax
je     80571bd <__sprintf_chk@plt+0xd07d>
mov    (%ebx),%eax
add    $0x113,%eax
call   8057020 <__sprintf_chk@plt+0xcee0>
mov    %ebp,%eax
test   %al,%al
jne    80570ca <__sprintf_chk@plt+0xcf8a>
jmp    805712d <__sprintf_chk@plt+0xcfed>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xe,(%esp)
mov    $0x806c21e,%edi
call   8049f30 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
mov    %eax,0x8074260
jmp    805710a <__sprintf_chk@plt+0xcfca>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
lea    -0x1(,%edx,4),%eax
jmp    8053de0 <__sprintf_chk@plt+0x9ca0>
movl   $0x806e0dc,0xc(%esp)
movl   $0x64c,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e2d4,(%esp)
call   804a110 <__assert_fail@plt>
jmp    80571f0 <__sprintf_chk@plt+0xd0b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0xc,%esp
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    $0x3,%edx
mov    $0x10c,%eax
add    $0xc,%esp
jmp    8053a30 <__sprintf_chk@plt+0x98f0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x8074564,%ebx
cmp    $0x112,%ebx
je     80574de <__sprintf_chk@plt+0xd39e>
cmp    $0x110,%ebx
je     8057274 <__sprintf_chk@plt+0xd134>
cmp    $0xff,%ebx
jbe    805728a <__sprintf_chk@plt+0xd14a>
cmp    $0x112,%ebx
jg     805728a <__sprintf_chk@plt+0xd14a>
lea    -0x101(%ebx),%eax
cmp    $0x6,%eax
jbe    805728a <__sprintf_chk@plt+0xd14a>
lea    -0x110(%ebx),%eax
cmp    $0x1,%eax
jbe    805728a <__sprintf_chk@plt+0xd14a>
cmp    $0x10e,%ebx
je     80575d7 <__sprintf_chk@plt+0xd497>
mov    $0x100,%eax
call   8057020 <__sprintf_chk@plt+0xcee0>
mov    0x8074564,%eax
jmp    80572a0 <__sprintf_chk@plt+0xd160>
mov    0x8074260,%eax
cmp    $0xffffffff,%eax
je     80575ad <__sprintf_chk@plt+0xd46d>
test   %eax,%eax
jne    8057509 <__sprintf_chk@plt+0xd3c9>
mov    %ebx,%eax
call   8057020 <__sprintf_chk@plt+0xcee0>
call   8055a20 <__sprintf_chk@plt+0xb8e0>
mov    %eax,0x8074564
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x108(%eax),%edx
cmp    $0x3,%edx
ja     80572cc <__sprintf_chk@plt+0xd18c>
cmp    $0x10b,%eax
je     80572d8 <__sprintf_chk@plt+0xd198>
call   8057020 <__sprintf_chk@plt+0xcee0>
call   8055a20 <__sprintf_chk@plt+0xb8e0>
lea    -0x108(%eax),%edx
cmp    $0x3,%edx
mov    %eax,0x8074564
jbe    80572ab <__sprintf_chk@plt+0xd16b>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8074588,%ebx
mov    0x8074584,%ebp
test   %ebx,%ebx
jne    80572f0 <__sprintf_chk@plt+0xd1b0>
test   %ebp,%ebp
je     8057478 <__sprintf_chk@plt+0xd338>
mov    0x80749f0,%eax
mov    0x10(%eax),%edi
mov    %edi,%eax
call   8054500 <__sprintf_chk@plt+0xa3c0>
sub    %eax,%edi
test   %ebp,%ebp
mov    %eax,%esi
mov    %edi,0x1c(%esp)
js     80574c9 <__sprintf_chk@plt+0xd389>
test   %ebx,%ebx
je     80574a6 <__sprintf_chk@plt+0xd366>
cmp    $0x1,%ebx
jle    80574bf <__sprintf_chk@plt+0xd37f>
mov    0x1c(%esp),%eax
mov    $0x1,%edi
shl    $0x2,%eax
mov    %eax,0x18(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8057430 <__sprintf_chk@plt+0xd2f0>
xor    %ebp,%ebp
test   %esi,%esi
mov    0x18(%esp),%ebx
je     8057368 <__sprintf_chk@plt+0xd228>
mov    0x80749f0,%eax
add    $0x1,%ebp
mov    0x40(%eax),%edx
mov    0xc(%eax),%eax
mov    (%edx,%ebx,1),%edx
mov    (%eax,%ebx,1),%eax
add    $0x4,%ebx
call   8053a30 <__sprintf_chk@plt+0x98f0>
cmp    %esi,%ebp
jne    8057348 <__sprintf_chk@plt+0xd208>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
add    $0x1,%edi
cmp    %edi,0x8074588
jg     8057330 <__sprintf_chk@plt+0xd1f0>
mov    0x1c(%esp),%eax
shl    $0x2,%eax
cmp    %edi,0x8074584
mov    %eax,0x18(%esp)
jle    80572b7 <__sprintf_chk@plt+0xd177>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80573f8 <__sprintf_chk@plt+0xd2b8>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebp,%ebp
test   %esi,%esi
mov    0x18(%esp),%ebx
je     80573d0 <__sprintf_chk@plt+0xd290>
lea    0x0(%esi),%esi
mov    0x80749f0,%eax
add    $0x1,%ebp
mov    0x40(%eax),%edx
mov    0xc(%eax),%eax
mov    (%edx,%ebx,1),%edx
mov    (%eax,%ebx,1),%eax
add    $0x4,%ebx
call   8053a30 <__sprintf_chk@plt+0x98f0>
cmp    %esi,%ebp
jne    80573b0 <__sprintf_chk@plt+0xd270>
mov    $0x108,%eax
add    $0x1,%edi
call   8057020 <__sprintf_chk@plt+0xcee0>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
cmp    %edi,0x8074584
jle    80572b7 <__sprintf_chk@plt+0xd177>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
ja     80573a0 <__sprintf_chk@plt+0xd260>
xor    %ebx,%ebx
test   %esi,%esi
mov    0x18(%esp),%ebp
je     80573d0 <__sprintf_chk@plt+0xd290>
lea    0x0(%esi),%esi
mov    0x80749f0,%eax
mov    $0x3,%edx
add    $0x1,%ebx
mov    0xc(%eax),%eax
mov    (%eax,%ebp,1),%eax
add    $0x4,%ebp
call   8053a30 <__sprintf_chk@plt+0x98f0>
cmp    %esi,%ebx
jne    8057408 <__sprintf_chk@plt+0xd2c8>
jmp    80573d0 <__sprintf_chk@plt+0xd290>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
test   %esi,%esi
mov    0x18(%esp),%ebp
je     8057368 <__sprintf_chk@plt+0xd228>
xchg   %ax,%ax
mov    0x80749f0,%eax
mov    $0x3,%edx
add    $0x1,%ebx
mov    0xc(%eax),%eax
mov    (%eax,%ebp,1),%eax
add    $0x4,%ebp
call   8053a30 <__sprintf_chk@plt+0x98f0>
cmp    %esi,%ebx
jne    8057440 <__sprintf_chk@plt+0xd300>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
add    $0x1,%edi
cmp    %edi,0x8074588
jg     8057330 <__sprintf_chk@plt+0xd1f0>
jmp    8057378 <__sprintf_chk@plt+0xd238>
mov    0x80749f0,%ebx
mov    0x10(%ebx),%esi
mov    %esi,%eax
call   8054500 <__sprintf_chk@plt+0xa3c0>
sub    %eax,%esi
mov    %esi,0x10(%ebx)
call   8055a20 <__sprintf_chk@plt+0xb8e0>
mov    %eax,0x8074564
call   8057210 <__sprintf_chk@plt+0xd0d0>
mov    0x8074564,%eax
jmp    80572a0 <__sprintf_chk@plt+0xd160>
mov    $0x108,%eax
call   8057020 <__sprintf_chk@plt+0xcee0>
mov    0x8074588,%ebx
cmp    $0x1,%ebx
jg     8057320 <__sprintf_chk@plt+0xd1e0>
mov    $0x1,%edi
jmp    8057378 <__sprintf_chk@plt+0xd238>
mov    $0x10a,%eax
call   8057020 <__sprintf_chk@plt+0xcee0>
mov    0x8074588,%ebx
jmp    805730f <__sprintf_chk@plt+0xd1cf>
mov    0x80749e4,%ecx
mov    0x8074578,%eax
test   %ecx,%ecx
je     80574f5 <__sprintf_chk@plt+0xd3b5>
mov    %eax,(%esp)
call   8049a20 <towlower@plt>
call   8056df0 <__sprintf_chk@plt+0xccb0>
call   8055a20 <__sprintf_chk@plt+0xb8e0>
mov    %eax,0x8074564
jmp    80572a0 <__sprintf_chk@plt+0xd160>
mov    0x80749f0,%edi
mov    0x28(%edi),%edx
mov    %edi,%eax
test   %edx,%edx
jne    8057695 <__sprintf_chk@plt+0xd555>
mov    $0x1,%esi
xor    %ebx,%ebx
mov    %ebx,%eax
shl    $0x5,%eax
cmp    $0x1,%ebx
mov    0x806e100(%eax),%edx
mov    %edx,0x20(%esp)
mov    0x806e104(%eax),%edx
mov    %edx,0x24(%esp)
mov    0x806e108(%eax),%edx
mov    %edx,0x28(%esp)
mov    0x806e10c(%eax),%edx
mov    %edx,0x2c(%esp)
mov    0x806e110(%eax),%edx
mov    %edx,0x30(%esp)
mov    0x806e114(%eax),%edx
mov    %edx,0x34(%esp)
mov    0x806e118(%eax),%edx
mov    0x806e11c(%eax),%eax
mov    %edx,0x38(%esp)
mov    %eax,0x3c(%esp)
je     80576d8 <__sprintf_chk@plt+0xd598>
lea    0x20(%esp),%eax
call   8053ba0 <__sprintf_chk@plt+0x9a60>
add    $0x113,%eax
cmp    $0x5,%esi
mov    %eax,0x28(%edi,%ebx,4)
je     8057690 <__sprintf_chk@plt+0xd550>
mov    0x80749f0,%edi
add    $0x1,%esi
add    $0x1,%ebx
jmp    8057523 <__sprintf_chk@plt+0xd3e3>
movl   $0xe,(%esp)
mov    $0x806c21e,%edi
call   8049f30 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
mov    %eax,0x8074260
jmp    8057282 <__sprintf_chk@plt+0xd142>
call   8055a20 <__sprintf_chk@plt+0xb8e0>
mov    %eax,0x8074564
call   8057210 <__sprintf_chk@plt+0xd0d0>
jmp    80575fa <__sprintf_chk@plt+0xd4ba>
test   %eax,%eax
js     805765d <__sprintf_chk@plt+0xd51d>
lea    0x0(%esi,%eiz,1),%esi
call   8057210 <__sprintf_chk@plt+0xd0d0>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
mov    0x8074564,%eax
mov    %eax,%edx
and    $0xfffffffd,%edx
cmp    $0x10d,%edx
jne    80575e8 <__sprintf_chk@plt+0xd4a8>
cmp    $0x10d,%eax
jne    805765d <__sprintf_chk@plt+0xd51d>
call   8055a20 <__sprintf_chk@plt+0xb8e0>
mov    %eax,0x8074564
call   8057210 <__sprintf_chk@plt+0xd0d0>
jmp    805763a <__sprintf_chk@plt+0xd4fa>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
js     805764c <__sprintf_chk@plt+0xd50c>
lea    0x0(%esi,%eiz,1),%esi
call   8057210 <__sprintf_chk@plt+0xd0d0>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
mov    0x8074564,%eax
mov    %eax,%edx
and    $0xfffffffd,%edx
cmp    $0x10d,%edx
jne    8057628 <__sprintf_chk@plt+0xd4e8>
call   8057000 <__sprintf_chk@plt+0xcec0>
mov    0x8074564,%eax
cmp    $0x10d,%eax
je     8057613 <__sprintf_chk@plt+0xd4d3>
cmp    $0x10f,%eax
je     80572b7 <__sprintf_chk@plt+0xd177>
movl   $0x5,0x8(%esp)
movl   $0x806e2e2,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,(%esp)
call   804b2d0 <__sprintf_chk@plt+0x1190>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80749f0,%eax
mov    $0x1,%ebx
mov    0x28(%eax,%ebx,4),%eax
add    $0x1,%ebx
call   8057020 <__sprintf_chk@plt+0xcee0>
cmp    $0x5,%ebx
je     80576b2 <__sprintf_chk@plt+0xd572>
mov    0x80749f0,%eax
jmp    805769a <__sprintf_chk@plt+0xd55a>
mov    $0x3,%ebx
mov    0x80749f0,%eax
mov    0x28(%eax),%eax
call   8057020 <__sprintf_chk@plt+0xcee0>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
call   8057000 <__sprintf_chk@plt+0xcec0>
sub    $0x1,%ebx
jne    80576b7 <__sprintf_chk@plt+0xd577>
jmp    80572b7 <__sprintf_chk@plt+0xd177>
mov    0x80749ec,%ebp
test   $0x40,%ebp
jne    8057704 <__sprintf_chk@plt+0xd5c4>
movzbl 0x80749e0,%edx
mov    %edx,%eax
mov    %edx,%ecx
shr    $0x3,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
and    $0x1c,%eax
shl    %cl,%edx
not    %edx
and    %edx,0x20(%esp,%eax,1)
and    $0x80,%ebp
je     8057711 <__sprintf_chk@plt+0xd5d1>
andl   $0xfffffffe,0x20(%esp)
lea    0x20(%esp),%eax
call   8053ba0 <__sprintf_chk@plt+0x9a60>
add    $0x113,%eax
mov    %eax,0x2c(%edi)
jmp    805759c <__sprintf_chk@plt+0xd45c>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
xor    %ecx,%ecx
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edx
mov    0x28(%esp),%eax
movl   $0x1,0x80749e8
00
mov    %edx,0x80749ec
mov    0x24(%esp),%edx
mov    %eax,%ebx
mov    %al,0x80749e0
mov    %edx,0x80749e4
jmp    805778e <__sprintf_chk@plt+0xd64e>
mov    %ecx,%eax
mov    %esi,%edx
shr    $0x5,%eax
shl    %cl,%edx
or     %edx,0x80745a0(,%eax,4)
movl   $0x4,0x80745e0(,%ecx,4)
00
add    $0x1,%ecx
cmp    $0x100,%ecx
je     80577d8 <__sprintf_chk@plt+0xd698>
cmp    %cl,%bl
mov    %ecx,%edi
je     8057768 <__sprintf_chk@plt+0xd628>
test   %cl,%cl
je     8057768 <__sprintf_chk@plt+0xd628>
mov    %ecx,0xc(%esp)
call   804a120 <__ctype_b_loc@plt>
mov    0xc(%esp),%ecx
mov    (%eax),%eax
testb  $0x8,(%eax,%ecx,2)
je     80577e0 <__sprintf_chk@plt+0xd6a0>
mov    %ecx,%eax
mov    %esi,%edx
shl    %cl,%edx
shr    $0x5,%eax
movl   $0x2,0x80745e0(,%ecx,4)
00
add    $0x1,%ecx
or     %edx,0x80745c0(,%eax,4)
cmp    $0x100,%ecx
jne    805778e <__sprintf_chk@plt+0xd64e>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %edi,%eax
cmp    $0x5f,%al
je     80577ad <__sprintf_chk@plt+0xd66d>
movl   $0x1,0x80745e0(,%ecx,4)
00
jmp    8057783 <__sprintf_chk@plt+0xd643>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x28(%esp),%ebx
movl   $0xffffffff,0x8074594
ff
movl   $0x1,0x8074590
00
mov    %eax,0x807459c
mov    0x24(%esp),%eax
mov    %ebx,0x80749f0
movl   $0x0,0x807458c
00
mov    %eax,0x8074598
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    8057866 <__sprintf_chk@plt+0xd726>
movl   $0x0,0x8074264
00
movl   $0x0,0x807457c
00
movl   $0x0,0x8074580
00
mov    0x80749e8,%ecx
test   %ecx,%ecx
je     8057955 <__sprintf_chk@plt+0xd815>
call   8055a20 <__sprintf_chk@plt+0xb8e0>
mov    %eax,0x8074564
mov    0x18(%ebx),%eax
mov    %eax,0x8074560
call   8057210 <__sprintf_chk@plt+0xd0d0>
jmp    805789e <__sprintf_chk@plt+0xd75e>
lea    0x0(%esi),%esi
test   %eax,%eax
js     8057901 <__sprintf_chk@plt+0xd7c1>
call   8057210 <__sprintf_chk@plt+0xd0d0>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
mov    0x8074564,%eax
mov    %eax,%edx
and    $0xfffffffd,%edx
cmp    $0x10d,%edx
jne    8057890 <__sprintf_chk@plt+0xd750>
cmp    $0x10d,%eax
jne    8057901 <__sprintf_chk@plt+0xd7c1>
nop
call   8055a20 <__sprintf_chk@plt+0xb8e0>
mov    %eax,0x8074564
call   8057210 <__sprintf_chk@plt+0xd0d0>
jmp    80578de <__sprintf_chk@plt+0xd79e>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
js     80578f0 <__sprintf_chk@plt+0xd7b0>
call   8057210 <__sprintf_chk@plt+0xd0d0>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
mov    0x8074564,%eax
mov    %eax,%edx
and    $0xfffffffd,%edx
cmp    $0x10d,%edx
jne    80578d0 <__sprintf_chk@plt+0xd790>
call   8057000 <__sprintf_chk@plt+0xcec0>
mov    0x8074564,%eax
cmp    $0x10d,%eax
je     80578b8 <__sprintf_chk@plt+0xd778>
cmp    $0xffffffff,%eax
jne    8057931 <__sprintf_chk@plt+0xd7f1>
mov    0x20(%ebx),%eax
not    %eax
call   8057020 <__sprintf_chk@plt+0xcee0>
call   80571f0 <__sprintf_chk@plt+0xd0b0>
mov    0x20(%ebx),%edx
xor    %eax,%eax
test   %edx,%edx
je     8057926 <__sprintf_chk@plt+0xd7e6>
call   8057000 <__sprintf_chk@plt+0xcec0>
mov    0x20(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x20(%ebx)
add    $0x18,%esp
pop    %ebx
ret
movl   $0x5,0x8(%esp)
movl   $0x806e303,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,(%esp)
call   804b2d0 <__sprintf_chk@plt+0x1190>
movl   $0x5,0x8(%esp)
movl   $0x806e2ef,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,(%esp)
call   804b2d0 <__sprintf_chk@plt+0x1190>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x94(%esp),%eax
mov    0x90(%esp),%edi
mov    %eax,0x60(%edi)
mov    0x18(%edi),%eax
cmp    $0x3fffffff,%eax
ja     8058576 <__sprintf_chk@plt+0xe436>
shl    $0x2,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x90(%esp),%edi
mov    %eax,0x50(%esp)
mov    0x18(%edi),%eax
cmp    $0x3fffffff,%eax
ja     8058576 <__sprintf_chk@plt+0xe436>
shl    $0x2,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x90(%esp),%edx
mov    %eax,0x4c(%esp)
mov    0x1c(%edx),%eax
cmp    $0x1fffffff,%eax
ja     8058576 <__sprintf_chk@plt+0xe436>
shl    $0x3,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x90(%esp),%edx
mov    %eax,%edi
mov    %eax,0x54(%esp)
mov    0x1c(%edx),%eax
lea    (%edi,%eax,8),%ebp
mov    0x18(%edx),%eax
cmp    $0x3fffffff,%eax
ja     8058576 <__sprintf_chk@plt+0xe436>
shl    $0x2,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x90(%esp),%edx
mov    %eax,%esi
mov    %eax,0x58(%esp)
mov    0x1c(%edx),%eax
cmp    $0x1fffffff,%eax
ja     8058576 <__sprintf_chk@plt+0xe436>
shl    $0x3,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x90(%esp),%edx
mov    0x1c(%edx),%ebx
mov    %eax,%edi
mov    %eax,0x5c(%esp)
lea    0x0(,%ebx,8),%eax
cmp    $0x1fffffff,%ebx
lea    (%edi,%eax,1),%edx
mov    %edx,0x34(%esp)
ja     8058576 <__sprintf_chk@plt+0xe436>
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x90(%esp),%edx
movl   $0xc,0x4(%esp)
mov    %ebx,0x6c(%esp)
movl   $0x0,0x68(%esp)
mov    %eax,0x64(%esp)
mov    0x10(%edx),%eax
mov    %eax,(%esp)
call   8065200 <__sprintf_chk@plt+0x1b0c0>
mov    0x90(%esp),%edx
mov    0x10(%edx),%ebx
mov    %eax,0x5c(%edx)
test   %ebx,%ebx
je     8058569 <__sprintf_chk@plt+0xe429>
mov    0x4c(%esp),%edi
mov    0x50(%esp),%eax
mov    %esi,0x2c(%esp)
mov    %ebx,%esi
movl   $0x0,0x30(%esp)
mov    %edi,0x44(%esp)
mov    %eax,0x3c(%esp)
lea    0x0(%esi),%esi
mov    0x30(%esp),%edi
mov    %edi,%eax
shl    $0x2,%eax
mov    %eax,0x40(%esp)
mov    0x90(%esp),%eax
mov    0xc(%eax),%eax
mov    (%eax,%edi,4),%eax
lea    -0x100(%eax),%edx
cmp    $0xd,%edx
ja     80581dd <__sprintf_chk@plt+0xe09d>
jmp    *0x806e09c(,%edx,4)
mov    %edi,0x18(%esp)
mov    0x64(%esp),%esi
mov    0x1c(%esp),%ebp
mov    0x20(%esp),%edi
mov    %edx,0x38(%esp)
jmp    8057b2c <__sprintf_chk@plt+0xd9ec>
xchg   %ax,%ax
mov    0x14(%esp),%ebx
lea    0x1(%ebx),%ecx
add    $0x1,%eax
mov    %ecx,0x68(%esp)
mov    -0x8(%edi,%eax,8),%edx
cmp    %eax,%ebp
mov    %ecx,0x14(%esp)
mov    -0x4(%edi,%eax,8),%ecx
mov    %edx,(%esi,%ebx,8)
mov    %ecx,0x4(%esi,%ebx,8)
ja     8057b28 <__sprintf_chk@plt+0xd9e8>
mov    0x18(%esp),%edi
mov    0x38(%esp),%edx
mov    0x14(%esp),%ecx
cmp    %edx,0x4(%edi)
jbe    8057b8c <__sprintf_chk@plt+0xda4c>
mov    (%edi),%ebx
mov    0x64(%esp),%esi
mov    %edi,0x14(%esp)
add    $0x1,%edx
mov    -0x8(%ebx,%edx,8),%edi
lea    0x1(%ecx),%eax
mov    %eax,0x68(%esp)
mov    -0x4(%ebx,%edx,8),%ebp
mov    %edi,(%esi,%ecx,8)
mov    0x14(%esp),%edi
mov    %ebp,0x4(%esi,%ecx,8)
mov    %eax,%ecx
cmp    0x4(%edi),%edx
jb     8057b68 <__sprintf_chk@plt+0xda28>
mov    0x24(%esp),%eax
cmp    %ecx,0x8(%eax)
ja     8058470 <__sprintf_chk@plt+0xe330>
mov    (%eax),%edx
test   %edx,%edx
sete   %al
movzbl %al,%ebx
add    %ecx,%ebx
test   %al,%al
jne    8058498 <__sprintf_chk@plt+0xe358>
cmp    $0x15555554,%ebx
ja     8058576 <__sprintf_chk@plt+0xe436>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x24(%esp),%edi
mov    0x68(%esp),%ecx
mov    %ebx,0x8(%edi)
mov    %eax,(%edi)
mov    0x64(%esp),%edx
shl    $0x3,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x68(%esp),%eax
mov    0x24(%esp),%edi
addl   $0x1,0x28(%esp)
mov    %eax,0x4(%edi)
mov    0x2c(%esp),%eax
mov    0x28(%esp),%edi
cmp    %edi,-0x4(%eax)
ja     80580d8 <__sprintf_chk@plt+0xdf98>
mov    0x90(%esp),%eax
mov    0x40(%esp),%edi
mov    0x20(%esp),%ebp
mov    0xc(%eax),%eax
mov    (%eax,%edi,1),%eax
mov    0x90(%esp),%edi
mov    0x10(%edi),%ebx
mov    %ebx,%esi
cmp    $0x10a,%eax
je     8057c4b <__sprintf_chk@plt+0xdb0b>
mov    0x3c(%esp),%eax
movl   $0x1,-0x4(%eax)
addl   $0x1,0x30(%esp)
cmp    %ebx,0x30(%esp)
jb     8057ae0 <__sprintf_chk@plt+0xd9a0>
test   %ebx,%ebx
mov    %esi,%edx
je     8057db3 <__sprintf_chk@plt+0xdc73>
xor    %ebx,%ebx
mov    0x90(%esp),%esi
mov    %ebp,0x18(%esp)
jmp    8057c98 <__sprintf_chk@plt+0xdb58>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x101,%eax
je     8057ca9 <__sprintf_chk@plt+0xdb69>
sub    $0x110,%eax
cmp    $0x1,%eax
jbe    8057ca9 <__sprintf_chk@plt+0xdb69>
add    $0x1,%ebx
cmp    %edx,%ebx
jae    8057daf <__sprintf_chk@plt+0xdc6f>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%eax
mov    (%eax,%ebx,4),%eax
lea    -0x100(%eax),%ecx
cmp    $0x12,%ecx
jbe    8057c78 <__sprintf_chk@plt+0xdb38>
lea    (%ebx,%ebx,2),%eax
shl    $0x2,%eax
mov    %eax,0x14(%esp)
add    0x5c(%esi),%eax
mov    0x4(%eax),%edi
mov    %eax,%ebp
cmp    %edi,0x6c(%esp)
mov    0x64(%esp),%eax
ja     8057d08 <__sprintf_chk@plt+0xdbc8>
test   %eax,%eax
sete   %dl
movzbl %dl,%ecx
add    %ecx,%edi
test   %dl,%dl
jne    80584dd <__sprintf_chk@plt+0xe39d>
cmp    $0x15555554,%edi
ja     8058576 <__sprintf_chk@plt+0xe436>
lea    0x1(%edi),%edx
shr    %edx
add    %edx,%edi
lea    0x0(,%edi,8),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %edi,0x6c(%esp)
mov    0x4(%ebp),%edi
mov    %eax,0x64(%esp)
mov    0x0(%ebp),%edx
shl    $0x3,%edi
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x4(%ebp),%eax
mov    %esi,%edx
mov    %eax,0x68(%esp)
lea    0x64(%esp),%eax
call   8056ab0 <__sprintf_chk@plt+0xc970>
mov    0x14(%esp),%edi
add    0x5c(%esi),%edi
mov    0x68(%esp),%ebp
cmp    %ebp,0x8(%edi)
mov    (%edi),%eax
ja     8057d83 <__sprintf_chk@plt+0xdc43>
test   %eax,%eax
sete   %dl
movzbl %dl,%ecx
add    %ecx,%ebp
test   %dl,%dl
jne    80584f4 <__sprintf_chk@plt+0xe3b4>
cmp    $0x15555554,%ebp
ja     8058576 <__sprintf_chk@plt+0xe436>
lea    0x1(%ebp),%edx
shr    %edx
add    %edx,%ebp
lea    0x0(,%ebp,8),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %ebp,0x8(%edi)
mov    0x68(%esp),%ebp
mov    %eax,(%edi)
mov    0x64(%esp),%edx
shl    $0x3,%ebp
add    $0x1,%ebx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x10(%esi),%edx
mov    0x68(%esp),%eax
cmp    %edx,%ebx
mov    %eax,0x4(%edi)
jb     8057c98 <__sprintf_chk@plt+0xdb58>
mov    0x18(%esp),%ebp
mov    0x44(%esp),%eax
xor    %ebx,%ebx
mov    %ebp,%edi
movl   $0x0,0x68(%esp)
mov    -0x4(%eax),%esi
test   %esi,%esi
je     8057de8 <__sprintf_chk@plt+0xdca8>
lea    0x0(%esi),%esi
mov    (%edi),%eax
lea    0x64(%esp),%ecx
add    $0x1,%ebx
mov    0x4(%edi),%edx
add    $0x8,%edi
call   8053800 <__sprintf_chk@plt+0x96c0>
cmp    %esi,%ebx
jne    8057dd0 <__sprintf_chk@plt+0xdc90>
mov    0x90(%esp),%edx
lea    0x64(%esp),%eax
call   8056ab0 <__sprintf_chk@plt+0xc970>
mov    0x90(%esp),%eax
movl   $0x1,0x58(%eax)
movl   $0x0,0x54(%eax)
movl   $0x24,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x90(%esp),%edi
mov    $0x7,%ecx
mov    0x64(%esp),%edx
mov    %eax,0x50(%edi)
mov    0x68(%esp),%eax
test   %eax,%eax
je     8057e82 <__sprintf_chk@plt+0xdd42>
lea    (%edx,%eax,8),%esi
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    %ebx,%edi
or     $0x4,%edi
mov    %eax,%ecx
shr    $0x2,%ecx
xor    %eax,%ecx
and    $0x111,%ecx
mov    %eax,%ecx
cmovne %edi,%ebx
shr    %ecx
mov    %ebx,%edi
xor    %eax,%ecx
or     $0x2,%edi
and    $0x111,%ecx
cmovne %edi,%ebx
add    $0x8,%edx
cmp    %esi,%edx
jne    8057e40 <__sprintf_chk@plt+0xdd00>
test   $0x4,%bl
mov    $0x4,%ecx
jne    8057e82 <__sprintf_chk@plt+0xdd42>
mov    %ebx,%ecx
xor    $0x7,%ecx
mov    0x90(%esp),%eax
lea    0x64(%esp),%edx
call   8056720 <__sprintf_chk@plt+0xc5e0>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x2c(%esp),%edi
mov    0x3c(%esp),%eax
mov    0x44(%esp),%edx
movl   $0x0,(%edi)
add    $0x4,%edi
movl   $0x1,(%eax)
add    $0x4,%eax
mov    %edi,0x2c(%esp)
lea    0x4(%edx),%edi
movl   $0x0,(%edx)
mov    %edi,0x44(%esp)
mov    %eax,0x3c(%esp)
jmp    8057c4b <__sprintf_chk@plt+0xdb0b>
mov    0x44(%esp),%edi
subl   $0x4,0x44(%esp)
mov    -0x4(%edi),%eax
add    %eax,-0x8(%edi)
mov    0x2c(%esp),%edi
subl   $0x4,0x2c(%esp)
mov    -0x4(%edi),%eax
add    %eax,-0x8(%edi)
mov    $0x1,%eax
mov    0x3c(%esp),%edi
mov    -0x4(%edi),%edx
test   %edx,%edx
jne    8057f57 <__sprintf_chk@plt+0xde17>
mov    -0x8(%edi),%eax
mov    0x3c(%esp),%edi
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,-0x8(%edi)
mov    %ebx,%esi
subl   $0x4,0x3c(%esp)
jmp    8057c4b <__sprintf_chk@plt+0xdb0b>
mov    0x44(%esp),%eax
mov    0x34(%esp),%edx
mov    -0x4(%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
mov    -0x4(%eax),%edi
mov    -0x8(%eax),%eax
mov    %edi,0x48(%esp)
lea    (%edx,%edi,8),%edi
test   %eax,%eax
mov    %edi,0x40(%esp)
je     8058418 <__sprintf_chk@plt+0xe2d8>
movl   $0x0,0x28(%esp)
mov    %ebp,0x20(%esp)
xchg   %ax,%ax
mov    0x28(%esp),%edi
mov    0x40(%esp),%eax
mov    (%eax,%edi,8),%eax
mov    0x90(%esp),%edi
lea    (%eax,%eax,2),%esi
mov    0x5c(%edi),%eax
shl    $0x2,%esi
add    %esi,%eax
mov    %eax,%edx
mov    %eax,%edi
mov    %eax,0x24(%esp)
mov    0x1c(%esp),%eax
add    0x4(%edx),%eax
cmp    %eax,0x6c(%esp)
ja     8058024 <__sprintf_chk@plt+0xdee4>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
sete   %dl
movzbl %dl,%ebx
add    %eax,%ebx
test   %dl,%dl
jne    80584c6 <__sprintf_chk@plt+0xe386>
cmp    $0x15555554,%ebx
ja     8058576 <__sprintf_chk@plt+0xe436>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %ebx,0x6c(%esp)
mov    %eax,0x64(%esp)
mov    0x90(%esp),%eax
add    0x5c(%eax),%esi
mov    %esi,0x24(%esp)
movl   $0x0,0x68(%esp)
xor    %ecx,%ecx
xor    %edx,%edx
xor    %eax,%eax
jmp    8058057 <__sprintf_chk@plt+0xdf17>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%ecx),%esi
add    $0x1,%eax
mov    %esi,0x68(%esp)
mov    %esi,0x14(%esp)
mov    0x4(%ebx),%esi
mov    (%ebx),%ebx
mov    %esi,0x4(%ebp,%ecx,8)
mov    %ebx,0x0(%ebp,%ecx,8)
mov    0x14(%esp),%ecx
cmp    %eax,0x1c(%esp)
mov    %ecx,%ebx
jbe    8058349 <__sprintf_chk@plt+0xe209>
cmp    0x4(%edi),%edx
jae    8058300 <__sprintf_chk@plt+0xe1c0>
mov    0x20(%esp),%esi
mov    0x64(%esp),%ebp
lea    (%esi,%eax,8),%ebx
mov    (%edi),%esi
lea    (%esi,%edx,8),%esi
mov    %esi,0x18(%esp)
mov    (%esi),%esi
cmp    %esi,(%ebx)
ja     8058038 <__sprintf_chk@plt+0xdef8>
jae    80582d0 <__sprintf_chk@plt+0xe190>
lea    0x1(%ecx),%ebx
add    $0x1,%edx
mov    %ebx,0x68(%esp)
mov    %ebx,0x14(%esp)
mov    0x18(%esp),%ebx
mov    0x4(%ebx),%esi
mov    (%ebx),%ebx
mov    %esi,0x4(%ebp,%ecx,8)
mov    %ebx,0x0(%ebp,%ecx,8)
jmp    8058053 <__sprintf_chk@plt+0xdf13>
mov    0x44(%esp),%edi
mov    -0x4(%edi),%edi
mov    %edi,0x1c(%esp)
mov    0x2c(%esp),%edi
mov    -0x4(%edi),%edi
test   %edi,%edi
je     8057c39 <__sprintf_chk@plt+0xdaf9>
movl   $0x0,0x28(%esp)
mov    0x28(%esp),%edi
mov    %ebp,0x20(%esp)
nop
mov    0x34(%esp),%eax
mov    (%eax,%edi,8),%eax
mov    0x90(%esp),%edi
lea    (%eax,%eax,2),%esi
mov    0x5c(%edi),%eax
shl    $0x2,%esi
add    %esi,%eax
mov    %eax,%edx
mov    %eax,%edi
mov    %eax,0x24(%esp)
mov    0x1c(%esp),%eax
add    0x4(%edx),%eax
cmp    %eax,0x6c(%esp)
ja     8058158 <__sprintf_chk@plt+0xe018>
mov    0x64(%esp),%ecx
test   %ecx,%ecx
sete   %dl
movzbl %dl,%ebx
add    %eax,%ebx
test   %dl,%dl
jne    80584af <__sprintf_chk@plt+0xe36f>
cmp    $0x15555554,%ebx
ja     8058576 <__sprintf_chk@plt+0xe436>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %ebx,0x6c(%esp)
mov    %eax,0x64(%esp)
mov    0x90(%esp),%eax
add    0x5c(%eax),%esi
mov    %esi,0x24(%esp)
movl   $0x0,0x68(%esp)
xor    %ecx,%ecx
xor    %edx,%edx
xor    %eax,%eax
jmp    8058187 <__sprintf_chk@plt+0xe047>
lea    0x1(%ecx),%esi
add    $0x1,%eax
mov    %esi,0x68(%esp)
mov    %esi,0x14(%esp)
mov    0x4(%ebx),%esi
mov    (%ebx),%ebx
mov    %esi,0x4(%ebp,%ecx,8)
mov    %ebx,0x0(%ebp,%ecx,8)
mov    0x14(%esp),%ecx
cmp    %eax,0x1c(%esp)
mov    %ecx,%ebx
jbe    8057b59 <__sprintf_chk@plt+0xda19>
cmp    0x4(%edi),%edx
jae    8057b10 <__sprintf_chk@plt+0xd9d0>
mov    0x20(%esp),%esi
mov    0x64(%esp),%ebp
lea    (%esi,%eax,8),%ebx
mov    (%edi),%esi
lea    (%esi,%edx,8),%esi
mov    %esi,0x18(%esp)
mov    (%esi),%esi
cmp    %esi,(%ebx)
ja     8058168 <__sprintf_chk@plt+0xe028>
jae    80582a0 <__sprintf_chk@plt+0xe160>
lea    0x1(%ecx),%ebx
add    $0x1,%edx
mov    %ebx,0x68(%esp)
mov    %ebx,0x14(%esp)
mov    0x18(%esp),%ebx
mov    0x4(%ebx),%esi
mov    (%ebx),%ebx
mov    %esi,0x4(%ebp,%ecx,8)
mov    %ebx,0x0(%ebp,%ecx,8)
jmp    8058183 <__sprintf_chk@plt+0xe043>
mov    0x3c(%esp),%edi
cmp    $0x101,%eax
sete   %al
mov    0x90(%esp),%ebx
movzbl %al,%eax
movl   $0x777,-0x4(%ebp)
mov    %eax,(%edi)
mov    0x44(%esp),%eax
lea    0x4(%edi),%edx
mov    %edx,0x14(%esp)
mov    0x30(%esp),%edx
lea    0x4(%eax),%edi
movl   $0x1,(%eax)
lea    -0x8(%ebp),%eax
mov    %edi,0x18(%esp)
mov    0x2c(%esp),%edi
mov    %eax,0x20(%esp)
mov    0x34(%esp),%eax
mov    %edx,-0x8(%ebp)
lea    0x4(%edi),%ecx
mov    %edx,-0x8(%eax)
lea    (%edx,%edx,2),%edx
movl   $0x1,(%edi)
lea    -0x8(%eax),%edi
movl   $0x777,-0x4(%eax)
mov    0x5c(%ebx),%eax
movl   $0x8,(%esp)
mov    %ecx,0x1c(%esp)
lea    (%eax,%edx,4),%ebx
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x1c(%esp),%ecx
movl   $0x1,0x8(%ebx)
mov    0x14(%esp),%edx
movl   $0x0,0x4(%ebx)
mov    0x20(%esp),%ebp
mov    %edi,0x34(%esp)
mov    0x18(%esp),%edi
mov    %ecx,0x2c(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,(%ebx)
mov    0x90(%esp),%ebx
mov    %edi,0x44(%esp)
mov    0x10(%ebx),%ebx
mov    %ebx,%esi
jmp    8057c4b <__sprintf_chk@plt+0xdb0b>
lea    0x0(%esi),%esi
mov    0x4(%ebx),%esi
lea    0x0(%ebp,%ecx,8),%ebp
add    $0x1,%ecx
mov    (%ebx),%ebx
add    $0x1,%eax
add    $0x1,%edx
mov    %ecx,0x14(%esp)
mov    %esi,0x4(%ebp)
mov    %ebx,0x0(%ebp)
mov    %ecx,0x68(%esp)
mov    0x18(%esp),%ecx
mov    0x4(%ecx),%ecx
or     %ecx,0x4(%ebp)
jmp    8058183 <__sprintf_chk@plt+0xe043>
nop
mov    0x4(%ebx),%esi
lea    0x0(%ebp,%ecx,8),%ebp
add    $0x1,%ecx
mov    (%ebx),%ebx
add    $0x1,%eax
add    $0x1,%edx
mov    %ecx,0x14(%esp)
mov    %esi,0x4(%ebp)
mov    %ebx,0x0(%ebp)
mov    %ecx,0x68(%esp)
mov    0x18(%esp),%ecx
mov    0x4(%ecx),%ecx
or     %ecx,0x4(%ebp)
jmp    8058053 <__sprintf_chk@plt+0xdf13>
nop
mov    %edi,0x18(%esp)
mov    0x64(%esp),%esi
mov    0x1c(%esp),%ebp
mov    0x20(%esp),%edi
mov    %edx,0x38(%esp)
jmp    805831c <__sprintf_chk@plt+0xe1dc>
xchg   %ax,%ax
mov    0x14(%esp),%ebx
lea    0x1(%ebx),%edx
add    $0x1,%eax
mov    %edx,0x68(%esp)
mov    -0x4(%edi,%eax,8),%ecx
cmp    %eax,%ebp
mov    %edx,0x14(%esp)
mov    -0x8(%edi,%eax,8),%edx
mov    %ecx,0x4(%esi,%ebx,8)
mov    %edx,(%esi,%ebx,8)
ja     8058318 <__sprintf_chk@plt+0xe1d8>
mov    0x18(%esp),%edi
mov    0x38(%esp),%edx
mov    0x14(%esp),%ecx
cmp    %edx,0x4(%edi)
jbe    805837c <__sprintf_chk@plt+0xe23c>
mov    (%edi),%ebx
mov    0x64(%esp),%esi
mov    %edi,0x14(%esp)
add    $0x1,%edx
mov    -0x8(%ebx,%edx,8),%edi
lea    0x1(%ecx),%eax
mov    %eax,0x68(%esp)
mov    -0x4(%ebx,%edx,8),%ebp
mov    %edi,(%esi,%ecx,8)
mov    0x14(%esp),%edi
mov    %ebp,0x4(%esi,%ecx,8)
mov    %eax,%ecx
cmp    0x4(%edi),%edx
jb     8058358 <__sprintf_chk@plt+0xe218>
mov    0x24(%esp),%eax
cmp    %ecx,0x8(%eax)
ja     8058478 <__sprintf_chk@plt+0xe338>
mov    (%eax),%edx
test   %edx,%edx
sete   %al
movzbl %al,%ebx
add    %ecx,%ebx
test   %al,%al
jne    8058480 <__sprintf_chk@plt+0xe340>
cmp    $0x15555554,%ebx
ja     8058576 <__sprintf_chk@plt+0xe436>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x24(%esp),%edi
mov    0x68(%esp),%ecx
mov    %ebx,0x8(%edi)
mov    %eax,(%edi)
mov    0x64(%esp),%edx
shl    $0x3,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x68(%esp),%eax
mov    0x24(%esp),%edi
addl   $0x1,0x28(%esp)
mov    %eax,0x4(%edi)
mov    0x2c(%esp),%eax
mov    -0x8(%eax),%eax
cmp    0x28(%esp),%eax
ja     8057fa0 <__sprintf_chk@plt+0xde60>
mov    0x90(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x10(%edi),%ebx
mov    %ebx,%esi
mov    0x3c(%esp),%edi
mov    -0x8(%edi),%edx
mov    0x44(%esp),%edi
test   %edx,%edx
je     805855d <__sprintf_chk@plt+0xe41d>
mov    0x1c(%esp),%ecx
add    %ecx,-0x8(%edi)
mov    0x3c(%esp),%edi
subl   $0x4,0x44(%esp)
mov    -0x4(%edi),%ecx
test   %ecx,%ecx
je     805850b <__sprintf_chk@plt+0xe3cb>
mov    0x2c(%esp),%edi
add    0x48(%esp),%eax
subl   $0x4,0x2c(%esp)
mov    %eax,-0x8(%edi)
xor    %eax,%eax
test   %edx,%edx
setne  %al
mov    0x3c(%esp),%edi
subl   $0x4,0x3c(%esp)
mov    %eax,-0x8(%edi)
jmp    8057c4b <__sprintf_chk@plt+0xdb0b>
xchg   %ax,%ax
mov    (%eax),%eax
jmp    8057be0 <__sprintf_chk@plt+0xdaa0>
nop
mov    (%eax),%eax
jmp    80583d0 <__sprintf_chk@plt+0xe290>
nop
test   %ebx,%ebx
jne    80583b0 <__sprintf_chk@plt+0xe270>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    80583b7 <__sprintf_chk@plt+0xe277>
nop
test   %ebx,%ebx
jne    8057bc0 <__sprintf_chk@plt+0xda80>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    8057bc7 <__sprintf_chk@plt+0xda87>
test   %ebx,%ebx
jne    805812f <__sprintf_chk@plt+0xdfef>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    8058136 <__sprintf_chk@plt+0xdff6>
test   %ebx,%ebx
jne    8057ffb <__sprintf_chk@plt+0xdebb>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    8058002 <__sprintf_chk@plt+0xdec2>
test   %edi,%edi
jne    8057cea <__sprintf_chk@plt+0xdbaa>
mov    $0x40,%edx
mov    $0x8,%edi
jmp    8057cf1 <__sprintf_chk@plt+0xdbb1>
test   %ebp,%ebp
jne    8057d67 <__sprintf_chk@plt+0xdc27>
mov    $0x40,%edx
mov    $0x8,%ebp
jmp    8057d6e <__sprintf_chk@plt+0xdc2e>
mov    0x34(%esp),%edi
lea    (%edi,%eax,8),%edx
mov    0x48(%esp),%edi
mov    %edi,%eax
sub    $0x1,%eax
test   %edi,%edi
je     8058546 <__sprintf_chk@plt+0xe406>
mov    0x34(%esp),%ecx
mov    %esi,0x14(%esp)
nop
mov    (%ecx,%eax,8),%esi
mov    0x4(%ecx,%eax,8),%edi
mov    %esi,(%edx,%eax,8)
mov    %edi,0x4(%edx,%eax,8)
sub    $0x1,%eax
cmp    $0xffffffff,%eax
jne    8058528 <__sprintf_chk@plt+0xe3e8>
mov    0x14(%esp),%esi
mov    0x48(%esp),%edi
mov    0x2c(%esp),%eax
mov    %edx,0x34(%esp)
subl   $0x4,0x2c(%esp)
mov    %edi,-0x8(%eax)
xor    %eax,%eax
jmp    805845d <__sprintf_chk@plt+0xe31d>
mov    -0x4(%edi),%ecx
lea    0x0(%ebp,%ecx,8),%ebp
jmp    8058432 <__sprintf_chk@plt+0xe2f2>
mov    0x4c(%esp),%eax
mov    %eax,0x44(%esp)
jmp    8057db3 <__sprintf_chk@plt+0xdc73>
call   80652b0 <__sprintf_chk@plt+0x1b170>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xec,%esp
mov    0x104(%esp),%eax
movl   $0x800,(%esp)
mov    0x100(%esp),%ebx
mov    %eax,0x48(%esp)
mov    0x108(%esp),%eax
mov    %eax,0x6c(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
movl   $0x2000,(%esp)
mov    %eax,0x60(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,0x64(%esp)
xor    %eax,%eax
movl   $0x0,0x80(%esp,%eax,1)
00
add    $0x4,%eax
cmp    $0x20,%eax
jb     80585c9 <__sprintf_chk@plt+0xe489>
mov    0x48(%esp),%edi
lea    (%ebx,%ebx,8),%eax
shl    $0x2,%eax
mov    %eax,0x68(%esp)
add    0x50(%edi),%eax
mov    0x8(%eax),%ebp
mov    %eax,%edi
test   %ebp,%ebp
je     805958b <__sprintf_chk@plt+0xf44b>
movl   $0x0,0x5c(%esp)
movl   $0x0,0x44(%esp)
lea    0x0(%esi),%esi
mov    0x5c(%esp),%ecx
mov    0x4(%edi),%eax
lea    (%eax,%ecx,8),%eax
mov    (%eax),%ecx
mov    0x4(%eax),%ebx
lea    0x0(,%ecx,4),%eax
mov    %eax,0x54(%esp)
mov    0x48(%esp),%eax
mov    %ecx,0x58(%esp)
mov    0xc(%eax),%eax
mov    (%eax,%ecx,4),%ecx
cmp    $0xff,%ecx
ja     8058c1a <__sprintf_chk@plt+0xeada>
mov    %ecx,%edx
mov    $0x1,%eax
shr    $0x5,%edx
shl    %cl,%eax
or     %eax,0x80(%esp,%edx,4)
cmp    $0x777,%ebx
je     80587ea <__sprintf_chk@plt+0xe6aa>
movzbl 0x10(%edi),%eax
mov    %eax,%esi
mov    %ebx,%eax
and    $0xf,%esi
shr    $0x8,%eax
test   %esi,%eax
je     8059170 <__sprintf_chk@plt+0xf030>
mov    0x80(%esp),%edx
mov    %ebx,%eax
shr    $0x4,%eax
test   %esi,%eax
jne    80586fb <__sprintf_chk@plt+0xe5bb>
mov    0x80745c0,%eax
not    %eax
and    %eax,%edx
mov    0x80745c4,%eax
mov    %edx,0x80(%esp)
not    %eax
and    %eax,0x84(%esp)
mov    0x80745c8,%eax
not    %eax
and    %eax,0x88(%esp)
mov    0x80745cc,%eax
not    %eax
and    %eax,0x8c(%esp)
mov    0x80745d0,%eax
not    %eax
and    %eax,0x90(%esp)
mov    0x80745d4,%eax
not    %eax
and    %eax,0x94(%esp)
mov    0x80745d8,%eax
not    %eax
and    %eax,0x98(%esp)
mov    0x80745dc,%eax
not    %eax
and    %eax,0x9c(%esp)
test   %esi,%ebx
jne    8058795 <__sprintf_chk@plt+0xe655>
mov    0x80745a0,%eax
or     0x80745c0,%eax
and    %eax,%edx
mov    0x80745a4,%eax
or     0x80745c4,%eax
and    %eax,0x84(%esp)
mov    0x80745a8,%eax
or     0x80745c8,%eax
and    %eax,0x88(%esp)
mov    0x80745ac,%eax
or     0x80745cc,%eax
and    %eax,0x8c(%esp)
mov    0x80745b0,%eax
or     0x80745d0,%eax
and    %eax,0x90(%esp)
mov    0x80745b4,%eax
or     0x80745d4,%eax
and    %eax,0x94(%esp)
mov    0x80745b8,%eax
or     0x80745d8,%eax
and    %eax,0x98(%esp)
mov    0x80745bc,%eax
or     0x80745dc,%eax
and    %eax,0x9c(%esp)
mov    %edx,0x80(%esp)
test   %edx,%edx
jne    80587ea <__sprintf_chk@plt+0xe6aa>
mov    0x84(%esp),%edx
test   %edx,%edx
jne    80587ea <__sprintf_chk@plt+0xe6aa>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    80587ea <__sprintf_chk@plt+0xe6aa>
mov    0x8c(%esp),%eax
test   %eax,%eax
jne    80587ea <__sprintf_chk@plt+0xe6aa>
mov    0x90(%esp),%eax
test   %eax,%eax
jne    80587ea <__sprintf_chk@plt+0xe6aa>
mov    0x94(%esp),%eax
test   %eax,%eax
jne    80587ea <__sprintf_chk@plt+0xe6aa>
mov    0x98(%esp),%eax
test   %eax,%eax
jne    80587ea <__sprintf_chk@plt+0xe6aa>
mov    0x9c(%esp),%eax
test   %eax,%eax
je     8058c58 <__sprintf_chk@plt+0xeb18>
mov    0x44(%esp),%ebx
test   %ebx,%ebx
je     8059385 <__sprintf_chk@plt+0xf245>
mov    0x60(%esp),%eax
mov    0x64(%esp),%edi
movl   $0x0,0x14(%esp)
mov    %eax,0x24(%esp)
jmp    80589d2 <__sprintf_chk@plt+0xe892>
nop
mov    0x1c(%edi),%eax
mov    %eax,0x4c(%esp)
and    %ebx,%eax
mov    %eax,0xbc(%esp)
mov    (%edi),%eax
mov    %ecx,%edx
mov    $0x1,%ebp
not    %edx
and    %eax,%edx
not    %eax
and    %ecx,%eax
mov    0x28(%esp),%ecx
mov    %edx,0xc0(%esp)
mov    %eax,0x80(%esp)
not    %ecx
and    0x2c(%esp),%ecx
test   %ecx,%ecx
mov    %ecx,0xc4(%esp)
jne    805885d <__sprintf_chk@plt+0xe71d>
xor    %ecx,%ecx
test   %edx,%edx
setne  %cl
mov    %ecx,%ebp
mov    0x2c(%esp),%edx
mov    $0x1,%ecx
not    %edx
and    0x28(%esp),%edx
test   %edx,%edx
mov    %edx,0x84(%esp)
jne    805887e <__sprintf_chk@plt+0xe73e>
xor    %ecx,%ecx
test   %eax,%eax
setne  %cl
mov    0x30(%esp),%edx
mov    $0x1,%eax
not    %edx
and    %esi,%edx
not    %esi
test   %edx,%edx
cmovne %eax,%ebp
and    0x30(%esp),%esi
mov    %edx,0xc8(%esp)
test   %esi,%esi
mov    %esi,0x88(%esp)
mov    0x18(%esp),%esi
cmovne %eax,%ecx
mov    %esi,%edx
not    %edx
and    0x34(%esp),%edx
test   %edx,%edx
mov    %edx,0xcc(%esp)
mov    0x34(%esp),%edx
cmovne %eax,%ebp
not    %edx
and    %esi,%edx
mov    0x1c(%esp),%esi
test   %edx,%edx
mov    %edx,0x8c(%esp)
cmovne %eax,%ecx
mov    %esi,%edx
not    %edx
and    0x38(%esp),%edx
test   %edx,%edx
mov    %edx,0xd0(%esp)
mov    0x38(%esp),%edx
cmovne %eax,%ebp
not    %edx
and    %esi,%edx
mov    0x20(%esp),%esi
test   %edx,%edx
mov    %edx,0x90(%esp)
cmovne %eax,%ecx
mov    %esi,%edx
not    %edx
and    0x3c(%esp),%edx
test   %edx,%edx
mov    %edx,0xd4(%esp)
mov    0x3c(%esp),%edx
cmovne %eax,%ebp
not    %edx
and    %esi,%edx
mov    0x50(%esp),%esi
test   %edx,%edx
mov    %edx,0x94(%esp)
cmovne %eax,%ecx
mov    %esi,%edx
not    %edx
and    0x40(%esp),%edx
test   %edx,%edx
mov    %edx,0xd8(%esp)
mov    0x40(%esp),%edx
cmovne %eax,%ebp
not    %edx
and    %esi,%edx
mov    0x4c(%esp),%esi
test   %edx,%edx
mov    %edx,0x98(%esp)
mov    %ebx,%edx
cmovne %eax,%ecx
not    %edx
and    %esi,%edx
test   %edx,%edx
mov    %edx,0xdc(%esp)
mov    %esi,%edx
cmovne %eax,%ebp
not    %edx
and    %ebx,%edx
test   %edx,%edx
cmovne %eax,%ecx
test   %ebp,%ebp
mov    %edx,0x9c(%esp)
jne    8058b10 <__sprintf_chk@plt+0xe9d0>
mov    0x24(%esp),%eax
mov    (%eax),%ebx
mov    %eax,%esi
mov    0x4(%esi),%eax
test   %ecx,%ecx
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
mov    0x58(%esp),%esi
mov    %esi,(%ebx,%eax,4)
je     8059140 <__sprintf_chk@plt+0xf000>
addl   $0x1,0x14(%esp)
add    $0x20,%edi
mov    0x14(%esp),%eax
addl   $0x8,0x24(%esp)
cmp    %eax,0x44(%esp)
jbe    8059140 <__sprintf_chk@plt+0xf000>
mov    0x48(%esp),%eax
mov    0x54(%esp),%ecx
mov    0xc(%eax),%eax
mov    (%eax,%ecx,1),%ecx
cmp    $0xff,%ecx
ja     80589e8 <__sprintf_chk@plt+0xe8a8>
mov    %ecx,%eax
shr    $0x5,%eax
mov    (%edi,%eax,4),%eax
shr    %cl,%eax
test   $0x1,%al
je     80589a9 <__sprintf_chk@plt+0xe869>
mov    0x84(%esp),%eax
mov    0x80(%esp),%ecx
mov    (%edi),%ebx
mov    %eax,%esi
mov    %eax,0x28(%esp)
mov    0x4(%edi),%eax
and    %ecx,%ebx
mov    %ebx,0xa0(%esp)
mov    %eax,%edx
and    %esi,%edx
test   %edx,%edx
mov    %eax,0x2c(%esp)
mov    $0x1,%eax
mov    %edx,0xa4(%esp)
jne    8058a29 <__sprintf_chk@plt+0xe8e9>
xor    %eax,%eax
test   %ebx,%ebx
setne  %al
mov    0x88(%esp),%esi
mov    $0x1,%edx
mov    0x8c(%esp),%ebx
mov    %esi,%ebp
mov    %esi,0x30(%esp)
mov    0x8(%edi),%esi
mov    %ebx,0x18(%esp)
mov    0xc(%edi),%ebx
and    %esi,%ebp
test   %ebp,%ebp
mov    %ebp,0xa8(%esp)
mov    0x18(%esp),%ebp
cmovne %edx,%eax
mov    %ebx,0x34(%esp)
and    %ebx,%ebp
mov    0x90(%esp),%ebx
test   %ebp,%ebp
mov    %ebp,0xac(%esp)
cmovne %edx,%eax
mov    %ebx,0x1c(%esp)
mov    0x10(%edi),%ebx
mov    0x1c(%esp),%ebp
mov    %ebx,0x38(%esp)
and    %ebx,%ebp
mov    0x94(%esp),%ebx
test   %ebp,%ebp
mov    %ebp,0xb0(%esp)
cmovne %edx,%eax
mov    %ebx,0x20(%esp)
mov    0x14(%edi),%ebx
mov    0x20(%esp),%ebp
mov    %ebx,0x3c(%esp)
and    %ebx,%ebp
test   %ebp,%ebp
cmovne %edx,%eax
mov    0x98(%esp),%edx
mov    %ebp,0xb4(%esp)
mov    %edx,%ebx
mov    %edx,0x50(%esp)
mov    0x18(%edi),%edx
mov    %edx,0x40(%esp)
and    %ebx,%edx
mov    0x9c(%esp),%ebx
test   %edx,%edx
mov    %edx,0xb8(%esp)
jne    8058810 <__sprintf_chk@plt+0xe6d0>
mov    0x1c(%edi),%edx
mov    %edx,0x4c(%esp)
and    %ebx,%edx
test   %edx,%edx
mov    %edx,0xbc(%esp)
jne    8058820 <__sprintf_chk@plt+0xe6e0>
test   %eax,%eax
je     80589a9 <__sprintf_chk@plt+0xe869>
jmp    8058820 <__sprintf_chk@plt+0xe6e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%esi
mov    0xc0(%esp),%edx
mov    %esi,%eax
shl    $0x5,%eax
add    0x64(%esp),%eax
mov    %edx,(%eax)
mov    0xc4(%esp),%edx
mov    %edx,0x4(%eax)
mov    0xc8(%esp),%edx
mov    %edx,0x8(%eax)
mov    0xcc(%esp),%edx
mov    %edx,0xc(%eax)
mov    0xd0(%esp),%edx
mov    %edx,0x10(%eax)
mov    0xd4(%esp),%edx
mov    %edx,0x14(%eax)
mov    0xd8(%esp),%edx
mov    %edx,0x18(%eax)
mov    0xdc(%esp),%edx
mov    %edx,0x1c(%eax)
mov    0xa0(%esp),%eax
mov    %eax,(%edi)
mov    0xa4(%esp),%eax
mov    %eax,0x4(%edi)
mov    0xa8(%esp),%eax
mov    %eax,0x8(%edi)
mov    0xac(%esp),%eax
mov    %eax,0xc(%edi)
mov    0xb0(%esp),%eax
mov    %eax,0x10(%edi)
mov    0xb4(%esp),%eax
mov    %eax,0x14(%edi)
mov    0xb8(%esp),%eax
mov    %eax,0x18(%edi)
mov    0xbc(%esp),%eax
mov    %eax,0x1c(%edi)
mov    0x48(%esp),%eax
mov    0x60(%esp),%ebx
mov    0x1c(%eax),%eax
lea    (%ebx,%esi,8),%esi
cmp    $0x3fffffff,%eax
ja     805955c <__sprintf_chk@plt+0xf41c>
shl    $0x2,%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x24(%esp),%ecx
mov    %eax,(%esi)
mov    0x4(%ecx),%ebp
mov    (%ecx),%ebx
mov    %eax,(%esp)
lea    0x0(,%ebp,4),%edx
mov    %edx,0x8(%esp)
mov    %ebx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x18(%esp),%ecx
mov    %ebp,0x4(%esi)
mov    0x24(%esp),%esi
addl   $0x1,0x44(%esp)
jmp    8058991 <__sprintf_chk@plt+0xe851>
cmp    $0x112,%ecx
jg     80591ed <__sprintf_chk@plt+0xf0ad>
sub    $0x110,%ecx
cmp    $0x1,%ecx
ja     8058c58 <__sprintf_chk@plt+0xeb18>
mov    0x1c(%edi),%esi
test   %esi,%esi
je     8059396 <__sprintf_chk@plt+0xf256>
mov    0x58(%esp),%eax
lea    0x18(%edi),%ecx
mov    %ebx,%edx
call   8053800 <__sprintf_chk@plt+0x96c0>
mov    0x48(%esp),%eax
mov    0x68(%esp),%edi
add    0x50(%eax),%edi
mov    0x8(%edi),%ebp
addl   $0x1,0x5c(%esp)
cmp    %ebp,0x5c(%esp)
jb     8058610 <__sprintf_chk@plt+0xe4d0>
mov    0x48(%esp),%edi
mov    0x1c(%edi),%ebx
cmp    $0x1fffffff,%ebx
ja     805955c <__sprintf_chk@plt+0xf41c>
lea    0x0(,%ebx,8),%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %ebx,0x7c(%esp)
movl   $0x0,0x78(%esp)
mov    %eax,0x74(%esp)
mov    0x1c(%edi),%eax
cmp    $0x1fffffff,%eax
ja     805955c <__sprintf_chk@plt+0xf41c>
shl    $0x3,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x60(%edi),%ebp
test   %ebp,%ebp
mov    %eax,0x3c(%esp)
jne    80593c3 <__sprintf_chk@plt+0xf283>
mov    0x6c(%esp),%eax
mov    $0x400,%edx
test   $0x1,%al
mov    %eax,%edi
jne    8059561 <__sprintf_chk@plt+0xf421>
test   $0x2,%edi
jne    8059577 <__sprintf_chk@plt+0xf437>
mov    %edx,%ecx
mov    $0xffffffff,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8058cfd <__sprintf_chk@plt+0xebbd>
mov    $0xffffffff,%ebx
add    $0x2,%edi
mov    %bx,-0x2(%edi)
and    $0x1,%edx
je     8058d05 <__sprintf_chk@plt+0xebc5>
movb   $0xff,(%edi)
mov    0x44(%esp),%edi
test   %edi,%edi
je     80590eb <__sprintf_chk@plt+0xefab>
mov    0x60(%esp),%eax
movl   $0x0,0x30(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x34(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x34(%esp),%eax
movl   $0x0,0x78(%esp)
mov    0x4(%eax),%ebp
test   %ebp,%ebp
je     8058d9f <__sprintf_chk@plt+0xec5f>
mov    (%eax),%edi
xor    %esi,%esi
mov    0x48(%esp),%eax
mov    %ebp,0x14(%esp)
mov    0x5c(%eax),%edx
mov    %eax,%ebp
lea    0x0(%esi),%esi
mov    (%edi,%esi,4),%eax
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     8058d96 <__sprintf_chk@plt+0xec56>
xor    %ebx,%ebx
lea    0x0(%esi),%esi
mov    (%eax),%eax
lea    0x74(%esp),%ecx
mov    0x4(%eax,%ebx,8),%edx
mov    (%eax,%ebx,8),%eax
add    $0x1,%ebx
call   8053800 <__sprintf_chk@plt+0x96c0>
mov    (%edi,%esi,4),%eax
mov    0x5c(%ebp),%edx
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%eax
cmp    %ebx,0x4(%eax)
ja     8058d70 <__sprintf_chk@plt+0xec30>
add    $0x1,%esi
cmp    0x14(%esp),%esi
jne    8058d58 <__sprintf_chk@plt+0xec18>
mov    0x48(%esp),%eax
mov    0x24(%eax),%edi
cmp    $0x1,%edi
jbe    8058df0 <__sprintf_chk@plt+0xecb0>
mov    0x78(%esp),%ecx
test   %ecx,%ecx
je     8058de4 <__sprintf_chk@plt+0xeca4>
mov    0x74(%esp),%esi
mov    0x40(%eax),%ebx
mov    (%esi),%eax
testb  $0x1,(%ebx,%eax,4)
je     8059250 <__sprintf_chk@plt+0xf110>
xor    %eax,%eax
jmp    8058ddd <__sprintf_chk@plt+0xec9d>
lea    0x0(%esi),%esi
mov    (%esi,%eax,8),%edx
testb  $0x1,(%ebx,%edx,4)
je     8059250 <__sprintf_chk@plt+0xf110>
add    $0x1,%eax
cmp    %ecx,%eax
jne    8058dd0 <__sprintf_chk@plt+0xec90>
mov    0x48(%esp),%eax
movl   $0x0,0x38(%esp)
mov    0x60(%eax),%ebx
test   %ebx,%ebx
je     8058e36 <__sprintf_chk@plt+0xecf6>
cmp    $0x1,%edi
je     8058e04 <__sprintf_chk@plt+0xecc4>
mov    0x38(%esp),%ecx
test   %ecx,%ecx
jne    8058e36 <__sprintf_chk@plt+0xecf6>
mov    0x48(%esp),%esi
mov    0x50(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     8058e36 <__sprintf_chk@plt+0xecf6>
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
lea    0x74(%esp),%ecx
mov    0x4(%eax,%ebx,8),%edx
mov    (%eax,%ebx,8),%eax
add    $0x1,%ebx
call   8053800 <__sprintf_chk@plt+0x96c0>
mov    0x50(%esi),%eax
cmp    %ebx,0x8(%eax)
ja     8058e18 <__sprintf_chk@plt+0xecd8>
movzbl 0x80749e0,%ecx
mov    0x2c(%esp),%edi
mov    0x80745c0,%edx
movzbl %cl,%eax
and    $0x1f,%ecx
shr    $0x5,%eax
mov    (%edi,%eax,4),%ebp
shr    %cl,%ebp
mov    (%edi),%ecx
and    $0x1,%ebp
cmp    $0x1,%ebp
sbb    %eax,%eax
neg    %ebp
and    $0xfffffffc,%eax
and    $0x4,%ebp
add    $0x6,%eax
test   %edx,%ecx
cmovne %eax,%ebp
mov    0x80745a0,%eax
or     %edx,%eax
mov    %ebp,%edx
not    %eax
or     $0x1,%edx
test   %eax,%ecx
mov    0x4(%edi),%ecx
mov    0x80745c4,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x80745a4,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x8(%edi),%ecx
mov    0x80745c8,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x80745a8,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0xc(%edi),%ecx
mov    0x80745cc,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x80745ac,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x10(%edi),%ecx
mov    0x80745d0,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x80745b0,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x14(%edi),%ecx
mov    0x80745d4,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x80745b4,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x18(%edi),%ecx
mov    0x80745d8,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x80745b8,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x1c(%edi),%ecx
mov    0x80745dc,%eax
cmovne %edx,%ebp
mov    %ebp,%edx
or     $0x2,%edx
test   %eax,%ecx
cmovne %edx,%ebp
or     0x80745bc,%eax
mov    %ebp,%edx
or     $0x1,%edx
not    %eax
test   %eax,%ecx
mov    0x78(%esp),%eax
cmovne %edx,%ebp
mov    0x74(%esp),%edx
xor    %ebx,%ebx
test   %eax,%eax
lea    (%edx,%eax,8),%esi
je     8059378 <__sprintf_chk@plt+0xf238>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edx),%eax
mov    %ebx,%edi
or     $0x4,%edi
mov    %eax,%ecx
shr    $0x2,%ecx
xor    %eax,%ecx
and    $0x111,%ecx
mov    %eax,%ecx
cmovne %edi,%ebx
shr    %ecx
mov    %ebx,%edi
xor    %eax,%ecx
or     $0x2,%edi
and    $0x111,%ecx
cmovne %edi,%ebx
add    $0x8,%edx
cmp    %esi,%edx
jne    8058f98 <__sprintf_chk@plt+0xee58>
mov    %ebx,%eax
and    %ebp,%eax
mov    %eax,%esi
mov    %eax,%edi
and    $0x4,%esi
and    $0x2,%edi
cmp    %eax,%ebp
movl   $0xffffffff,0x28(%esp)
je     8058ffb <__sprintf_chk@plt+0xeebb>
mov    0x48(%esp),%eax
mov    %ebx,%ecx
xor    $0x7,%ecx
lea    0x74(%esp),%edx
call   8056720 <__sprintf_chk@plt+0xc5e0>
mov    %eax,0x28(%esp)
mov    0x28(%esp),%eax
test   %esi,%esi
mov    %eax,0x20(%esp)
jne    805927c <__sprintf_chk@plt+0xf13c>
test   %edi,%edi
mov    %eax,0x1c(%esp)
jne    8059261 <__sprintf_chk@plt+0xf121>
movzbl 0x80749e0,%eax
movl   $0x0,0x24(%esp)
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x0(%esi),%esi
mov    0x24(%esp),%esi
xor    %ebx,%ebx
mov    0x2c(%esp),%edi
mov    (%edi,%esi,4),%ebp
mov    %esi,%edi
shl    $0x6,%edi
shl    $0x5,%esi
jmp    805906e <__sprintf_chk@plt+0xef2e>
nop
cmp    $0x5f,%esi
je     805908e <__sprintf_chk@plt+0xef4e>
mov    0x28(%esp),%ecx
mov    %ecx,(%eax,%ebx,4)
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
add    $0x1,%esi
add    $0x2,%edi
cmp    $0x20,%ebx
je     80590a3 <__sprintf_chk@plt+0xef63>
bt     %ebx,%ebp
jae    8059060 <__sprintf_chk@plt+0xef20>
cmp    %esi,0x14(%esp)
je     8059130 <__sprintf_chk@plt+0xeff0>
call   804a120 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x8,(%eax,%edi,1)
mov    0x18(%esp),%eax
je     8059050 <__sprintf_chk@plt+0xef10>
mov    0x1c(%esp),%ecx
add    $0x1,%esi
add    $0x2,%edi
mov    %ecx,(%eax,%ebx,4)
add    $0x1,%ebx
cmp    $0x20,%ebx
jne    805906e <__sprintf_chk@plt+0xef2e>
addl   $0x1,0x24(%esp)
subl   $0xffffff80,0x18(%esp)
cmpl   $0x8,0x24(%esp)
jne    8059038 <__sprintf_chk@plt+0xeef8>
addl   $0x1,0x30(%esp)
mov    0x44(%esp),%eax
addl   $0x8,0x34(%esp)
addl   $0x20,0x2c(%esp)
cmp    %eax,0x30(%esp)
jne    8058d31 <__sprintf_chk@plt+0xebf1>
mov    0x60(%esp),%edi
xor    %ebx,%ebx
mov    %eax,%esi
mov    (%edi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
cmp    %esi,%ebx
jne    80590d9 <__sprintf_chk@plt+0xef99>
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x64(%esp),%eax
mov    %eax,0x100(%esp)
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80499d0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    0x20(%esp),%ecx
mov    %ecx,(%eax,%ebx,4)
jmp    8059060 <__sprintf_chk@plt+0xef20>
mov    0x44(%esp),%eax
cmp    %eax,0x14(%esp)
je     805929b <__sprintf_chk@plt+0xf15b>
mov    0x48(%esp),%eax
mov    0x68(%esp),%edi
add    0x50(%eax),%edi
mov    0x8(%edi),%ebp
addl   $0x1,0x5c(%esp)
cmp    %ebp,0x5c(%esp)
jb     8058610 <__sprintf_chk@plt+0xe4d0>
jmp    8058c67 <__sprintf_chk@plt+0xeb27>
mov    0x80745a4,%eax
mov    0x80745a0,%edx
not    %eax
and    %eax,0x84(%esp)
not    %edx
mov    0x80745a8,%eax
and    0x80(%esp),%edx
not    %eax
and    %eax,0x88(%esp)
mov    0x80745ac,%eax
mov    %edx,0x80(%esp)
not    %eax
and    %eax,0x8c(%esp)
mov    0x80745b0,%eax
not    %eax
and    %eax,0x90(%esp)
mov    0x80745b4,%eax
not    %eax
and    %eax,0x94(%esp)
mov    0x80745b8,%eax
not    %eax
and    %eax,0x98(%esp)
mov    0x80745bc,%eax
not    %eax
and    %eax,0x9c(%esp)
jmp    8058680 <__sprintf_chk@plt+0xe540>
mov    0x48(%esp),%esi
lea    0x7fffeed(%ecx),%eax
shl    $0x5,%eax
add    (%esi),%eax
mov    (%eax),%edx
mov    %edx,0x80(%esp)
mov    0x4(%eax),%edx
mov    %edx,0x84(%esp)
mov    0x8(%eax),%edx
mov    %edx,0x88(%esp)
mov    0xc(%eax),%edx
mov    %edx,0x8c(%esp)
mov    0x10(%eax),%edx
mov    %edx,0x90(%esp)
mov    0x14(%eax),%edx
mov    %edx,0x94(%esp)
mov    0x18(%eax),%edx
mov    0x1c(%eax),%eax
mov    %edx,0x98(%esp)
mov    %eax,0x9c(%esp)
jmp    8058657 <__sprintf_chk@plt+0xe517>
movl   $0x1,0x38(%esp)
mov    0x48(%esp),%eax
jmp    8058df0 <__sprintf_chk@plt+0xecb0>
mov    0x48(%esp),%eax
mov    $0x2,%ecx
lea    0x74(%esp),%edx
call   8056720 <__sprintf_chk@plt+0xc5e0>
mov    %eax,0x1c(%esp)
jmp    8059017 <__sprintf_chk@plt+0xeed7>
mov    0x48(%esp),%eax
mov    $0x4,%ecx
lea    0x74(%esp),%edx
call   8056720 <__sprintf_chk@plt+0xc5e0>
mov    %eax,0x20(%esp)
mov    0x28(%esp),%eax
jmp    805900b <__sprintf_chk@plt+0xeecb>
mov    0x14(%esp),%edi
mov    %edi,%eax
shl    $0x5,%eax
lea    0x0(,%edi,8),%edx
mov    0x80(%esp),%ecx
add    0x64(%esp),%eax
mov    %ecx,(%eax)
mov    0x84(%esp),%ecx
mov    %ecx,0x4(%eax)
mov    0x88(%esp),%ecx
mov    %ecx,0x8(%eax)
mov    0x8c(%esp),%ecx
mov    %ecx,0xc(%eax)
mov    0x90(%esp),%ecx
mov    %ecx,0x10(%eax)
mov    0x94(%esp),%ecx
mov    %ecx,0x14(%eax)
mov    0x98(%esp),%ecx
mov    %ecx,0x18(%eax)
mov    0x9c(%esp),%ecx
mov    %ecx,0x1c(%eax)
xor    %eax,%eax
movl   $0x0,0x80(%esp,%eax,1)
00
add    $0x4,%eax
cmp    $0x20,%eax
jb     8059300 <__sprintf_chk@plt+0xf1c0>
mov    0x60(%esp),%eax
mov    0x48(%esp),%edi
lea    (%eax,%edx,1),%ebx
mov    0x1c(%edi),%eax
cmp    $0x3fffffff,%eax
ja     805955c <__sprintf_chk@plt+0xf41c>
shl    $0x2,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x58(%esp),%ecx
movl   $0x1,0x4(%ebx)
mov    %ecx,(%eax)
mov    %eax,(%ebx)
mov    0x14(%esp),%eax
add    $0x1,%eax
mov    %eax,0x44(%esp)
mov    %edi,%eax
mov    0x68(%esp),%edi
add    0x50(%eax),%edi
mov    0x8(%edi),%ebp
addl   $0x1,0x5c(%esp)
cmp    %ebp,0x5c(%esp)
jb     8058610 <__sprintf_chk@plt+0xe4d0>
jmp    8058c67 <__sprintf_chk@plt+0xeb27>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
xor    %esi,%esi
xor    %eax,%eax
xor    %ebx,%ebx
jmp    8058fd9 <__sprintf_chk@plt+0xee99>
xor    %edx,%edx
xor    %eax,%eax
movl   $0x0,0x14(%esp)
jmp    80592ab <__sprintf_chk@plt+0xf16b>
movl   $0x8,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
movl   $0x1,0x20(%edi)
movl   $0x0,0x1c(%edi)
mov    %eax,0x18(%edi)
mov    0x48(%esp),%eax
mov    0x68(%esp),%edi
add    0x50(%eax),%edi
jmp    8058c3c <__sprintf_chk@plt+0xeafc>
mov    0x48(%esp),%eax
mov    0x50(%eax),%esi
mov    0x74(%esp),%eax
mov    0x8(%esi),%edx
cmp    %edx,0x7c(%esp)
ja     805941e <__sprintf_chk@plt+0xf2de>
mov    0x74(%esp),%ecx
test   %ecx,%ecx
sete   %al
movzbl %al,%ebx
add    %edx,%ebx
test   %al,%al
jne    8059545 <__sprintf_chk@plt+0xf405>
cmp    $0x15555554,%ebx
ja     805955c <__sprintf_chk@plt+0xf41c>
lea    0x1(%ebx),%eax
shr    %eax
add    %eax,%ebx
lea    0x0(,%ebx,8),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %ebx,0x7c(%esp)
mov    0x8(%esi),%edx
mov    %eax,0x74(%esp)
mov    0x4(%esi),%ecx
shl    $0x3,%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x8(%esi),%eax
mov    0x74(%esp),%esi
test   %eax,%eax
mov    %eax,0x78(%esp)
je     8059526 <__sprintf_chk@plt+0xf3e6>
lea    (%esi,%eax,8),%edi
xor    %ebx,%ebx
mov    0x4(%esi),%eax
mov    %ebx,%ecx
or     $0x4,%ecx
mov    %eax,%edx
shr    $0x2,%edx
xor    %eax,%edx
and    $0x111,%edx
mov    %eax,%edx
cmovne %ecx,%ebx
shr    %edx
mov    %ebx,%ecx
xor    %eax,%edx
or     $0x2,%ecx
and    $0x111,%edx
cmovne %ecx,%ebx
add    $0x8,%esi
cmp    %edi,%esi
jne    805944c <__sprintf_chk@plt+0xf30c>
mov    0x48(%esp),%eax
mov    %ebx,%ecx
lea    0x74(%esp),%edi
xor    $0x7,%ecx
mov    %edi,%edx
call   8056720 <__sprintf_chk@plt+0xc5e0>
test   $0x4,%bl
mov    %eax,%esi
jne    8059505 <__sprintf_chk@plt+0xf3c5>
mov    %ebx,%ecx
mov    %eax,%ebp
and    $0x2,%ecx
test   %ecx,%ecx
mov    %esi,%ebx
jne    80594f1 <__sprintf_chk@plt+0xf3b1>
call   804a120 <__ctype_b_loc@plt>
mov    0x6c(%esp),%edi
mov    (%eax),%ecx
mov    $0x1,%eax
jmp    80594c3 <__sprintf_chk@plt+0xf383>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
testb  $0x8,-0x2(%ecx,%eax,2)
mov    %ebx,%edx
jne    80594d3 <__sprintf_chk@plt+0xf393>
cmp    $0x60,%eax
je     805951e <__sprintf_chk@plt+0xf3de>
mov    %esi,%edx
cmp    $0x100,%eax
mov    %edx,-0x4(%edi,%eax,4)
jne    80594c0 <__sprintf_chk@plt+0xf380>
movzbl 0x80749e0,%eax
mov    0x6c(%esp),%edi
mov    %ebp,(%edi,%eax,4)
jmp    8058d05 <__sprintf_chk@plt+0xebc5>
mov    0x48(%esp),%eax
mov    $0x2,%ecx
mov    %edi,%edx
call   8056720 <__sprintf_chk@plt+0xc5e0>
mov    %eax,%ebx
jmp    80594a7 <__sprintf_chk@plt+0xf367>
mov    0x48(%esp),%eax
mov    $0x4,%ecx
mov    %edi,%edx
call   8056720 <__sprintf_chk@plt+0xc5e0>
mov    %ebx,%ecx
and    $0x2,%ecx
mov    %eax,%ebp
jmp    80594a1 <__sprintf_chk@plt+0xf361>
mov    %ebx,0x17c(%edi)
jmp    80594c0 <__sprintf_chk@plt+0xf380>
mov    0x48(%esp),%eax
lea    0x74(%esp),%edi
mov    $0x7,%ecx
mov    %edi,%edx
call   8056720 <__sprintf_chk@plt+0xc5e0>
mov    %eax,%ebx
mov    %eax,%esi
mov    %eax,%ebp
jmp    80594a7 <__sprintf_chk@plt+0xf367>
test   %ebx,%ebx
jne    8059400 <__sprintf_chk@plt+0xf2c0>
mov    $0x40,%eax
mov    $0x8,%ebx
jmp    8059407 <__sprintf_chk@plt+0xf2c7>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x1(%eax),%edi
mov    $0x3ff,%dx
test   $0x2,%edi
movb   $0xff,(%eax)
je     8058ce0 <__sprintf_chk@plt+0xeba0>
mov    $0xffffffff,%esi
add    $0x2,%edi
mov    %si,-0x2(%edi)
sub    $0x2,%edx
jmp    8058ce0 <__sprintf_chk@plt+0xeba0>
movl   $0x0,0x44(%esp)
jmp    8058c67 <__sprintf_chk@plt+0xeb27>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x2c,%esp
mov    %eax,0x10(%esp)
mov    0x68(%edx),%eax
cmp    $0x3ff,%eax
jg     80597c0 <__sprintf_chk@plt+0xf680>
add    $0x1,%eax
mov    %eax,0x68(%ebx)
mov    0x10(%esp),%ecx
mov    0x78(%ebx),%eax
lea    (%eax,%ecx,4),%edx
lea    (%ecx,%ecx,8),%eax
shl    $0x2,%eax
mov    %eax,0x1c(%esp)
add    0x50(%ebx),%eax
movl   $0x0,(%edx)
movzwl 0x12(%eax),%ecx
movzbl 0x10(%eax),%esi
mov    %ecx,%edi
shr    $0x8,%di
and    $0xf,%edi
and    %edi,%esi
je     80597a6 <__sprintf_chk@plt+0xf666>
mov    $0x5,%ebp
mov    $0x4,%esi
movl   $0x7,0x18(%esp)
movl   $0x6,0x14(%esp)
mov    %esi,(%edx)
movzbl 0x10(%eax),%esi
mov    %ecx,%edi
shr    $0x4,%di
and    $0xf,%edi
test   %esi,%edi
je     8059632 <__sprintf_chk@plt+0xf4f2>
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebp
mov    %edi,(%edx)
movzbl 0x10(%eax),%esi
and    $0xf,%ecx
test   %ecx,%esi
je     805963b <__sprintf_chk@plt+0xf4fb>
mov    %ebp,(%edx)
movl   $0x400,(%esp)
xor    %edi,%edi
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ebp
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   8058580 <__sprintf_chk@plt+0xe440>
mov    0x64(%ebx),%esi
lea    0x0(%esi),%esi
cmp    %esi,0x0(%ebp,%edi,4)
jl     8059746 <__sprintf_chk@plt+0xf606>
mov    %esi,%eax
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%eax
mov    %eax,0x64(%ebx)
cmp    %eax,0x0(%ebp,%edi,4)
jge    8059678 <__sprintf_chk@plt+0xf538>
add    $0x1,%eax
mov    0x70(%ebx),%edx
cmp    $0x3fffffff,%eax
ja     8059828 <__sprintf_chk@plt+0xf6e8>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x74(%ebx),%edx
mov    %eax,0x70(%ebx)
add    $0x4,%eax
mov    %eax,0x6c(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8059828 <__sprintf_chk@plt+0xf6e8>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x78(%ebx),%edx
mov    %eax,0x74(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8059828 <__sprintf_chk@plt+0xf6e8>
shl    $0x2,%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x7c(%ebx),%edx
mov    %eax,0x78(%ebx)
mov    0x64(%ebx),%eax
cmp    $0x3fffffff,%eax
ja     8059828 <__sprintf_chk@plt+0xf6e8>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x64(%ebx),%ecx
cmp    %esi,%ecx
mov    %eax,0x7c(%ebx)
jle    8059793 <__sprintf_chk@plt+0xf653>
lea    0x0(,%esi,4),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%ebx),%edx
add    $0x1,%esi
movl   $0x0,(%edx,%eax,1)
mov    0x74(%ebx),%edx
movl   $0x0,(%edx,%eax,1)
add    $0x4,%eax
cmp    %ecx,%esi
jne    8059728 <__sprintf_chk@plt+0xf5e8>
add    $0x1,%edi
cmp    $0x100,%edi
jne    8059668 <__sprintf_chk@plt+0xf528>
movzbl 0x80749e0,%eax
mov    0x7c(%ebx),%edx
mov    0x10(%esp),%edi
lea    0x0(%ebp,%eax,4),%eax
mov    (%eax),%ecx
mov    %ecx,(%edx,%edi,4)
mov    0x1c(%esp),%ecx
movl   $0xffffffff,(%eax)
mov    0x50(%ebx),%eax
cmpw   $0x0,0x12(%eax,%ecx,1)
jne    805981a <__sprintf_chk@plt+0xf6da>
mov    0x6c(%ebx),%eax
mov    %ebp,(%eax,%edi,4)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%edi
mov    %ecx,%esi
cmp    $0x100,%edi
jne    8059668 <__sprintf_chk@plt+0xf528>
jmp    8059755 <__sprintf_chk@plt+0xf615>
mov    $0x1,%ebp
movl   $0x3,0x18(%esp)
movl   $0x2,0x14(%esp)
jmp    8059611 <__sprintf_chk@plt+0xf4d1>
mov    0x64(%edx),%eax
xor    %esi,%esi
test   %eax,%eax
jle    8059810 <__sprintf_chk@plt+0xf6d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%ebx),%eax
lea    0x0(,%esi,4),%edi
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x74(%ebx),%eax
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x6c(%ebx),%eax
mov    0x74(%ebx),%edx
add    %edi,%eax
movl   $0x0,(%edx,%esi,4)
add    $0x1,%esi
cmp    %esi,0x64(%ebx)
movl   $0x0,(%eax)
jg     80597d0 <__sprintf_chk@plt+0xf690>
mov    $0x1,%eax
jmp    80595be <__sprintf_chk@plt+0xf47e>
mov    0x74(%ebx),%eax
mov    %ebp,(%eax,%edi,4)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    (%ecx),%edi
mov    %edx,0x10(%esp)
mov    0x8074574,%edx
mov    %eax,0x14(%esp)
mov    %edi,%eax
sub    0x807456c,%eax
movzbl (%edx,%eax,1),%eax
test   %al,%al
je     8059c33 <__sprintf_chk@plt+0xfaf3>
mov    0x64(%esp),%ecx
mov    %eax,(%ecx)
mov    0x10(%esp),%ebx
xor    %esi,%esi
jmp    805988b <__sprintf_chk@plt+0xf74b>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi),%edx
xor    %ebx,%ebx
mov    (%eax,%edx,4),%eax
test   %eax,%eax
cmovns %eax,%ebx
mov    0x64(%esp),%eax
add    $0x1,%esi
cmp    %esi,(%eax)
jle    80598d8 <__sprintf_chk@plt+0xf798>
mov    0x0(%ebp),%edi
lea    0x1(%edi),%eax
mov    %eax,0x0(%ebp)
mov    0x14(%esp),%eax
mov    0x6c(%eax),%ecx
mov    (%ecx,%ebx,4),%eax
lea    0x0(,%ebx,4),%edx
test   %eax,%eax
jne    8059870 <__sprintf_chk@plt+0xf730>
test   %ebx,%ebx
js     8059bc0 <__sprintf_chk@plt+0xfa80>
mov    0x14(%esp),%eax
mov    0x74(%eax),%eax
mov    (%eax,%edx,1),%eax
test   %eax,%eax
je     8059c1c <__sprintf_chk@plt+0xfadc>
movzbl (%edi),%edx
add    $0x1,%esi
mov    (%eax,%edx,4),%ebx
mov    0x64(%esp),%eax
cmp    %esi,(%eax)
jg     8059888 <__sprintf_chk@plt+0xf748>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
lea    (%ebx,%ebx,8),%edx
mov    0x68(%esp),%ecx
mov    0x50(%eax),%eax
lea    (%eax,%edx,4),%ebx
mov    0x8(%ebx),%eax
cmp    %eax,0x8(%ecx)
ja     8059c48 <__sprintf_chk@plt+0xfb08>
mov    (%ecx),%edi
test   %edi,%edi
sete   %cl
movzbl %cl,%edx
test   %cl,%cl
lea    (%eax,%edx,1),%esi
jne    8059c8d <__sprintf_chk@plt+0xfb4d>
cmp    $0x15555554,%esi
ja     8059ca9 <__sprintf_chk@plt+0xfb69>
lea    0x1(%esi),%eax
shr    %eax
add    %eax,%esi
lea    0x0(,%esi,8),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x68(%esp),%ecx
mov    %esi,0x8(%ecx)
mov    0x8(%ebx),%edx
mov    %eax,(%ecx)
mov    %eax,%ecx
mov    0x4(%ebx),%eax
shl    $0x3,%edx
mov    %ecx,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x8(%ebx),%eax
mov    0x68(%esp),%ecx
mov    0x60(%esp),%esi
mov    %eax,0x4(%ecx)
mov    0x10(%esp),%eax
lea    (%eax,%eax,8),%eax
shl    $0x2,%eax
test   %esi,%esi
je     8059c55 <__sprintf_chk@plt+0xfb15>
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x14(%esp),%eax
mov    0x2c(%esp),%ecx
mov    0x50(%eax),%eax
mov    0x1c(%eax,%ecx,1),%edx
mov    %eax,0x30(%esp)
test   %edx,%edx
je     8059b0b <__sprintf_chk@plt+0xf9cb>
movl   $0x0,0x28(%esp)
jmp    80599b7 <__sprintf_chk@plt+0xf877>
lea    0x0(%esi),%esi
addl   $0x1,0x28(%esp)
cmp    %edx,0x28(%esp)
jae    8059b0b <__sprintf_chk@plt+0xf9cb>
mov    0x64(%esp),%edi
mov    0x3c(%esp),%eax
mov    0x28(%esp),%ecx
mov    (%edi),%edi
cmp    %edi,(%eax,%ecx,4)
jne    80599a8 <__sprintf_chk@plt+0xf868>
mov    0x14(%esp),%eax
mov    %ecx,%esi
mov    0x2c(%esp),%edi
mov    0x5c(%eax),%eax
mov    %eax,%ecx
mov    %eax,0x1c(%esp)
mov    0x30(%esp),%eax
mov    0x18(%eax,%edi,1),%eax
lea    0x0(,%esi,8),%edi
mov    %edi,0x34(%esp)
mov    %eax,0x20(%esp)
mov    (%eax,%esi,8),%eax
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%eax
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     80599a8 <__sprintf_chk@plt+0xf868>
mov    0x68(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    (%ecx),%ebp
mov    0x4(%ecx),%ecx
mov    %ecx,%edi
nop
mov    (%eax),%eax
mov    %edi,%edx
xor    %ebx,%ebx
mov    0x10(%esp),%ecx
lea    (%eax,%ecx,8),%eax
mov    (%eax),%esi
mov    0x4(%eax),%eax
mov    %eax,0x18(%esp)
jmp    8059a33 <__sprintf_chk@plt+0xf8f3>
lea    0x1(%eax),%ebx
cmp    %ebx,%edx
jbe    8059a58 <__sprintf_chk@plt+0xf918>
lea    (%ebx,%edx,1),%eax
shr    %eax
cmp    0x0(%ebp,%eax,8),%esi
jb     8059a30 <__sprintf_chk@plt+0xf8f0>
cmp    %eax,%ebx
mov    %eax,%edx
jae    8059a58 <__sprintf_chk@plt+0xf918>
add    %ebx,%eax
shr    %eax
cmp    %esi,0x0(%ebp,%eax,8)
ja     8059a30 <__sprintf_chk@plt+0xf8f0>
cmp    %eax,%ebx
mov    %eax,%edx
jb     8059a48 <__sprintf_chk@plt+0xf908>
cmp    %edi,%ebx
jae    8059a68 <__sprintf_chk@plt+0xf928>
lea    0x0(%ebp,%ebx,8),%eax
cmp    %esi,(%eax)
je     8059bd8 <__sprintf_chk@plt+0xfa98>
mov    0x68(%esp),%eax
lea    0x1(%edi),%edx
cmp    %edx,0x8(%eax)
jbe    8059b40 <__sprintf_chk@plt+0xfa00>
mov    0x30(%esp),%eax
add    0x2c(%esp),%eax
mov    %eax,0x38(%esp)
cmp    %edi,%ebx
jae    8059ab8 <__sprintf_chk@plt+0xf978>
mov    %edi,%eax
sub    %ebx,%eax
shl    $0x3,%edi
shl    $0x3,%eax
mov    %edi,%ecx
sub    %eax,%ecx
add    %ebp,%ecx
mov    %ecx,0x4(%esp)
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %eax,0x8(%esp)
lea    0x8(%ecx,%edi,1),%eax
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   80499c0 <memmove@plt>
mov    0x24(%esp),%edx
mov    0x18(%esp),%ecx
lea    0x0(%ebp,%ebx,8),%eax
mov    %edx,%edi
mov    %esi,(%eax)
mov    %ecx,0x4(%eax)
mov    0x68(%esp),%eax
mov    %edx,0x4(%eax)
mov    0x20(%esp),%eax
mov    0x34(%esp),%ecx
addl   $0x1,0x10(%esp)
mov    (%eax,%ecx,1),%eax
mov    0x1c(%esp),%ecx
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%eax
mov    0x10(%esp),%ecx
cmp    %ecx,0x4(%eax)
ja     8059a18 <__sprintf_chk@plt+0xf8d8>
mov    0x38(%esp),%eax
addl   $0x1,0x28(%esp)
mov    0x1c(%eax),%edx
cmp    %edx,0x28(%esp)
jb     80599b7 <__sprintf_chk@plt+0xf877>
mov    0x3c(%esp),%eax
mov    0x60(%esp),%edx
test   %eax,%eax
setne  %al
test   %edx,%edx
sete   %dl
and    %edx,%eax
test   %al,%al
je     8059b2f <__sprintf_chk@plt+0xf9ef>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
sete   %al
movzbl %al,%ecx
add    %edi,%ecx
test   %al,%al
lea    0x1(%ecx),%edx
jne    8059c05 <__sprintf_chk@plt+0xfac5>
cmp    $0x15555554,%edx
ja     8059ca9 <__sprintf_chk@plt+0xfb69>
add    $0x2,%ecx
shr    %ecx
add    %ecx,%edx
lea    0x0(,%edx,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x1c(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x68(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %edx,0x8(%ecx)
mov    %eax,(%ecx)
mov    0x4(%ecx),%ecx
lea    0x1(%ecx),%edx
mov    0x14(%esp),%ecx
mov    0x5c(%ecx),%ebp
mov    0x50(%ecx),%ecx
mov    %ebp,0x1c(%esp)
mov    %eax,%ebp
mov    %ecx,0x30(%esp)
add    0x2c(%esp),%ecx
mov    %ecx,0x38(%esp)
mov    0x18(%ecx),%ecx
mov    %ecx,0x20(%esp)
jmp    8059a84 <__sprintf_chk@plt+0xf944>
lea    0x0(%esi),%esi
cmp    %edi,0x8074568
je     8059ca4 <__sprintf_chk@plt+0xfb64>
xor    %ebx,%ebx
jmp    8059898 <__sprintf_chk@plt+0xf758>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ecx
or     %ecx,0x4(%eax)
mov    0x14(%esp),%eax
mov    0x5c(%eax),%ecx
mov    0x50(%eax),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,0x30(%esp)
add    0x2c(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x18(%eax),%eax
mov    %eax,0x20(%esp)
jmp    8059ad2 <__sprintf_chk@plt+0xf992>
test   %edx,%edx
jne    8059b68 <__sprintf_chk@plt+0xfa28>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8059b6f <__sprintf_chk@plt+0xfa2f>
mov    0x14(%esp),%edx
mov    %ebx,%eax
call   80595a0 <__sprintf_chk@plt+0xf460>
mov    0x14(%esp),%eax
mov    0x6c(%eax),%ecx
jmp    8059898 <__sprintf_chk@plt+0xf758>
mov    0x64(%esp),%eax
movl   $0x1,(%eax)
jmp    8059863 <__sprintf_chk@plt+0xf723>
lea    0x0(%esi),%esi
mov    0x68(%esp),%ecx
mov    %eax,%edx
mov    (%ecx),%ecx
jmp    805993e <__sprintf_chk@plt+0xf7fe>
mov    %eax,%ecx
mov    %eax,0x2c(%esp)
mov    0x14(%esp),%eax
mov    0x50(%eax),%eax
mov    0x1c(%eax,%ecx,1),%ebx
test   %ebx,%ebx
je     8059b2f <__sprintf_chk@plt+0xf9ef>
mov    0x0(%ebp),%ecx
mov    0x10(%esp),%edx
mov    0x14(%esp),%eax
sub    0x807456c,%ecx
call   8054040 <__sprintf_chk@plt+0x9f00>
mov    %eax,0x3c(%esp)
jmp    8059980 <__sprintf_chk@plt+0xf840>
test   %esi,%esi
jne    805991d <__sprintf_chk@plt+0xf7dd>
mov    $0x40,%eax
mov    $0x8,%esi
jmp    8059924 <__sprintf_chk@plt+0xf7e4>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x6c,%esp
mov    0x50(%edi),%esi
mov    %eax,0x34(%esp)
lea    (%edx,%edx,8),%eax
mov    (%ecx),%edi
mov    %ecx,0x48(%esp)
movl   $0x0,0x3c(%esp)
lea    (%esi,%eax,4),%eax
mov    0x1c(%eax),%eax
mov    %edi,%esi
mov    %edi,0x40(%esp)
test   %eax,%eax
mov    %eax,0x44(%esp)
jne    8059d52 <__sprintf_chk@plt+0xfc12>
mov    0x34(%esp),%eax
mov    0x6c(%eax),%edx
mov    %eax,%edi
mov    (%edx,%ebx,4),%eax
lea    0x0(,%ebx,4),%ecx
test   %eax,%eax
je     8059d28 <__sprintf_chk@plt+0xfbe8>
movzbl (%esi),%edx
xor    %ebx,%ebx
mov    (%eax,%edx,4),%eax
test   %eax,%eax
cmovns %eax,%ebx
mov    0x48(%esp),%eax
addl   $0x1,(%eax)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %ebx,%ebx
js     8059d42 <__sprintf_chk@plt+0xfc02>
mov    0x74(%edi),%eax
mov    (%eax,%ecx,1),%eax
test   %eax,%eax
je     805a0f9 <__sprintf_chk@plt+0xffb9>
movzbl (%esi),%edx
mov    (%eax,%edx,4),%ebx
jmp    8059d0b <__sprintf_chk@plt+0xfbcb>
cmp    %esi,0x8074568
je     805a115 <__sprintf_chk@plt+0xffd5>
xor    %ebx,%ebx
jmp    8059cf0 <__sprintf_chk@plt+0xfbb0>
mov    0x34(%esp),%eax
mov    %edi,%ecx
sub    0x807456c,%ecx
call   8054040 <__sprintf_chk@plt+0x9f00>
mov    0x44(%esp),%ecx
xor    %edx,%edx
mov    %eax,%edi
mov    %eax,0x3c(%esp)
lea    (%edi,%ecx,4),%ecx
mov    (%eax),%esi
cmp    %esi,%edx
cmovl  %esi,%edx
add    $0x4,%eax
cmp    %ecx,%eax
jne    8059d72 <__sprintf_chk@plt+0xfc32>
test   %edx,%edx
mov    %edx,0x4c(%esp)
je     805a10a <__sprintf_chk@plt+0xffca>
mov    0x34(%esp),%eax
mov    0x1c(%eax),%esi
cmp    $0x1fffffff,%esi
ja     805a11a <__sprintf_chk@plt+0xffda>
lea    0x0(,%esi,8),%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x48(%esp),%edi
mov    %ebx,%edx
mov    %esi,0x5c(%esp)
movl   $0x0,0x58(%esp)
mov    %edi,%ecx
mov    %eax,0x54(%esp)
lea    0x54(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x34(%esp),%eax
call   8059830 <__sprintf_chk@plt+0xf6f0>
mov    0x8074570,%edx
mov    $0x4,%ecx
mov    (%edi),%eax
sub    0x50(%esp),%eax
sub    0x807456c,%eax
mov    (%edx,%eax,4),%eax
movzbl 0x80749e0,%edx
cmp    %edx,%eax
je     8059e13 <__sprintf_chk@plt+0xfcd3>
test   %eax,%eax
jne    805a074 <__sprintf_chk@plt+0xff34>
mov    0x34(%esp),%edi
lea    0x54(%esp),%edx
mov    %edi,%eax
call   8056720 <__sprintf_chk@plt+0xc5e0>
mov    %eax,%edx
mov    %eax,%ebx
mov    %edi,%eax
call   8053940 <__sprintf_chk@plt+0x9800>
mov    0x48(%esp),%eax
mov    (%eax),%eax
sub    0x40(%esp),%eax
cmp    0x4c(%esp),%eax
jge    805a0d7 <__sprintf_chk@plt+0xff97>
lea    0x54(%esp),%eax
mov    0x48(%esp),%edi
mov    %ebx,%edx
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
movl   $0x0,(%esp)
mov    %edi,%ecx
call   8059830 <__sprintf_chk@plt+0xf6f0>
lea    (%ebx,%ebx,8),%eax
mov    (%edi),%ecx
shl    $0x2,%eax
mov    %eax,0x38(%esp)
movl   $0x0,0x2c(%esp)
jmp    8059e93 <__sprintf_chk@plt+0xfd53>
nop
addl   $0x1,0x2c(%esp)
mov    0x44(%esp),%eax
cmp    %eax,0x2c(%esp)
je     805a046 <__sprintf_chk@plt+0xff06>
mov    0x3c(%esp),%edi
mov    %ecx,%eax
mov    0x2c(%esp),%esi
sub    0x40(%esp),%eax
cmp    %eax,(%edi,%esi,4)
jne    8059e80 <__sprintf_chk@plt+0xfd40>
mov    0x34(%esp),%eax
mov    0x38(%esp),%esi
mov    0x5c(%eax),%edi
mov    0x50(%eax),%eax
mov    %edi,0x20(%esp)
mov    0x18(%eax,%esi,1),%eax
mov    0x2c(%esp),%esi
mov    %eax,0x24(%esp)
mov    (%eax,%esi,8),%eax
lea    0x0(,%esi,8),%edx
mov    %edx,0x30(%esp)
lea    (%eax,%eax,2),%eax
lea    (%edi,%eax,4),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
je     8059e80 <__sprintf_chk@plt+0xfd40>
mov    0x58(%esp),%ecx
mov    0x54(%esp),%ebp
movl   $0x0,0x18(%esp)
mov    %ecx,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%eax
mov    %edi,%edx
xor    %ebx,%ebx
mov    0x18(%esp),%ecx
lea    (%eax,%ecx,8),%eax
mov    (%eax),%esi
mov    0x4(%eax),%eax
mov    %eax,0x1c(%esp)
jmp    8059f13 <__sprintf_chk@plt+0xfdd3>
lea    0x1(%eax),%ebx
cmp    %ebx,%edx
jbe    8059f38 <__sprintf_chk@plt+0xfdf8>
lea    (%ebx,%edx,1),%eax
shr    %eax
cmp    0x0(%ebp,%eax,8),%esi
jb     8059f10 <__sprintf_chk@plt+0xfdd0>
cmp    %eax,%ebx
mov    %eax,%edx
jae    8059f38 <__sprintf_chk@plt+0xfdf8>
add    %ebx,%eax
shr    %eax
cmp    %esi,0x0(%ebp,%eax,8)
ja     8059f10 <__sprintf_chk@plt+0xfdd0>
cmp    %eax,%ebx
mov    %eax,%edx
jb     8059f28 <__sprintf_chk@plt+0xfde8>
cmp    %edi,%ebx
jae    8059f48 <__sprintf_chk@plt+0xfe08>
lea    0x0(%ebp,%ebx,8),%eax
cmp    %esi,(%eax)
je     805a098 <__sprintf_chk@plt+0xff58>
lea    0x1(%edi),%edx
cmp    %edx,0x5c(%esp)
ja     8059fbf <__sprintf_chk@plt+0xfe7f>
test   %ebp,%ebp
sete   %al
movzbl %al,%ecx
add    %edi,%ecx
test   %al,%al
lea    0x1(%ecx),%edx
jne    805a0c0 <__sprintf_chk@plt+0xff80>
cmp    $0x15555554,%edx
ja     805a11a <__sprintf_chk@plt+0xffda>
add    $0x2,%ecx
shr    %ecx
add    %ecx,%edx
lea    0x0(,%edx,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x20(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%edx
mov    0x58(%esp),%ecx
mov    %edx,0x5c(%esp)
lea    0x1(%ecx),%edx
mov    0x34(%esp),%ecx
mov    %eax,0x54(%esp)
mov    0x5c(%ecx),%ebp
mov    0x50(%ecx),%ecx
mov    %ebp,0x20(%esp)
mov    0x38(%esp),%ebp
mov    0x18(%ecx,%ebp,1),%ecx
mov    %eax,%ebp
mov    %ecx,0x24(%esp)
cmp    %edi,%ebx
jae    8059ff3 <__sprintf_chk@plt+0xfeb3>
mov    %edi,%eax
sub    %ebx,%eax
shl    $0x3,%edi
shl    $0x3,%eax
mov    %edi,%ecx
sub    %eax,%ecx
add    %ebp,%ecx
mov    %ecx,0x4(%esp)
mov    %ebp,%ecx
sub    %eax,%ecx
mov    %eax,0x8(%esp)
lea    0x8(%ecx,%edi,1),%eax
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   80499c0 <memmove@plt>
mov    0x28(%esp),%edx
mov    0x1c(%esp),%ecx
lea    0x0(%ebp,%ebx,8),%eax
mov    %edx,%edi
mov    %esi,(%eax)
mov    %ecx,0x4(%eax)
mov    0x24(%esp),%eax
mov    %edx,0x58(%esp)
mov    0x30(%esp),%ecx
addl   $0x1,0x18(%esp)
mov    (%eax,%ecx,1),%eax
mov    0x20(%esp),%ecx
lea    (%eax,%eax,2),%eax
lea    (%ecx,%eax,4),%eax
mov    0x18(%esp),%ecx
cmp    %ecx,0x4(%eax)
ja     8059ef8 <__sprintf_chk@plt+0xfdb8>
mov    0x48(%esp),%eax
addl   $0x1,0x2c(%esp)
mov    (%eax),%ecx
mov    0x44(%esp),%eax
cmp    %eax,0x2c(%esp)
jne    8059e93 <__sprintf_chk@plt+0xfd53>
mov    0x8074570,%eax
sub    0x50(%esp),%ecx
sub    0x807456c,%ecx
movzbl 0x80749e0,%edx
mov    (%eax,%ecx,4),%eax
mov    $0x4,%ecx
cmp    %edx,%eax
je     8059e13 <__sprintf_chk@plt+0xfcd3>
test   %eax,%eax
je     8059e13 <__sprintf_chk@plt+0xfcd3>
cmp    $0x5f,%eax
mov    $0x2,%cl
je     8059e13 <__sprintf_chk@plt+0xfcd3>
mov    %eax,(%esp)
call   8049e70 <iswalnum@plt>
cmp    $0x1,%eax
sbb    %ecx,%ecx
add    $0x2,%ecx
jmp    8059e13 <__sprintf_chk@plt+0xfcd3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%esi
or     %esi,0x4(%eax)
mov    0x34(%esp),%eax
mov    0x38(%esp),%esi
mov    0x5c(%eax),%ecx
mov    0x50(%eax),%eax
mov    %ecx,0x20(%esp)
mov    0x18(%eax,%esi,1),%eax
mov    %eax,0x24(%esp)
jmp    805a00a <__sprintf_chk@plt+0xfeca>
xchg   %ax,%ax
test   %edx,%edx
jne    8059f79 <__sprintf_chk@plt+0xfe39>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    8059f80 <__sprintf_chk@plt+0xfe40>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%edx
mov    %ebx,%eax
call   80595a0 <__sprintf_chk@plt+0xf460>
mov    0x6c(%edi),%edx
jmp    8059cf0 <__sprintf_chk@plt+0xfbb0>
mov    0x48(%esp),%eax
mov    (%eax),%esi
jmp    8059ce7 <__sprintf_chk@plt+0xfba7>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movzbl 0x80749e0,%eax
mov    0x54(%esp),%edi
mov    %al,0x1e(%esp)
mov    0x50(%esp),%eax
mov    0x64(%eax),%ebp
test   %ebp,%ebp
je     805a54c <__sprintf_chk@plt+0x1040c>
mov    0x6c(%eax),%eax
mov    0x58(%esp),%esi
mov    %edi,0x2c(%esp)
mov    %eax,0x10(%esp)
mov    0x58(%esp),%eax
movzbl (%eax),%eax
mov    %al,0x1f(%esp)
movzbl 0x1e(%esp),%eax
mov    %al,(%esi)
mov    0x50(%esp),%eax
mov    0x24(%eax),%esi
cmp    $0x1,%esi
jbe    805a1d0 <__sprintf_chk@plt+0x10090>
mov    0x58(%esp),%ebx
sub    %edi,%ebx
add    $0x2,%ebx
mov    %ebx,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
cmp    $0x3fffffff,%ebx
mov    %eax,0x8074574
ja     805a667 <__sprintf_chk@plt+0x10527>
shl    $0x2,%ebx
mov    %ebx,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x58(%esp),%edx
movl   $0x0,0x807457c
00
movl   $0x0,0x8074580
00
mov    %eax,0x8074570
mov    0x2c(%esp),%eax
call   80536b0 <__sprintf_chk@plt+0x9570>
mov    0x50(%esp),%eax
mov    0x2c(%esp),%edi
mov    0x24(%eax),%esi
xor    %ebx,%ebx
xor    %ebp,%ebp
cmp    $0x1,%esi
jbe    805a3da <__sprintf_chk@plt+0x1029a>
mov    %ebx,%edx
mov    %ebp,%ebx
mov    %edi,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%edi
lea    0x0(,%ebx,4),%eax
mov    (%edi,%ebx,4),%esi
test   %esi,%esi
mov    %esi,0x14(%esp)
je     805a318 <__sprintf_chk@plt+0x101d8>
mov    0x8074568,%edi
cmp    %ebp,%edi
jb     805a318 <__sprintf_chk@plt+0x101d8>
test   %ebx,%ebx
jne    805a27d <__sprintf_chk@plt+0x1013d>
mov    0x807456c,%eax
mov    0x8074570,%ecx
mov    %eax,%edx
mov    %ebp,%eax
sub    %edx,%eax
mov    (%ecx,%eax,4),%esi
test   %esi,%esi
jne    805a277 <__sprintf_chk@plt+0x10137>
mov    0x8074574,%esi
cmpb   $0x0,(%esi,%eax,1)
je     805a277 <__sprintf_chk@plt+0x10137>
cmp    %ebp,%edi
jbe    805a277 <__sprintf_chk@plt+0x10137>
mov    %ebx,0x18(%esp)
lea    0x1(%ebp),%eax
add    $0x1,%edi
mov    %edx,%ebx
jmp    805a261 <__sprintf_chk@plt+0x10121>
lea    0x0(%esi),%esi
cmpb   $0x0,(%esi,%edx,1)
je     805a271 <__sprintf_chk@plt+0x10131>
add    $0x1,%eax
cmp    %edi,%eax
je     805a2e0 <__sprintf_chk@plt+0x101a0>
mov    %eax,%edx
mov    %eax,%ebp
sub    %ebx,%edx
cmpl   $0x0,(%ecx,%edx,4)
mov    %eax,0x2c(%esp)
je     805a250 <__sprintf_chk@plt+0x10110>
mov    0x18(%esp),%ebx
mov    %eax,%ebp
cmp    %ebp,0x58(%esp)
jbe    805a2ea <__sprintf_chk@plt+0x101aa>
mov    0x50(%esp),%ecx
lea    (%ebx,%ebx,8),%eax
shl    $0x2,%eax
add    0x50(%ecx),%eax
mov    0x1c(%eax),%edi
test   %edi,%edi
jne    805a2b0 <__sprintf_chk@plt+0x10170>
lea    0x1(%ebp),%edx
mov    0x14(%esp),%edi
mov    %edx,0x2c(%esp)
movzbl 0x0(%ebp),%eax
mov    %edx,%ebp
mov    (%edi,%eax,4),%eax
mov    %ebx,%edx
mov    %eax,%ebx
jmp    805a1e8 <__sprintf_chk@plt+0x100a8>
xchg   %ax,%ax
mov    0x64(%esp),%esi
test   %esi,%esi
jne    805a511 <__sprintf_chk@plt+0x103d1>
mov    0x50(%esp),%eax
lea    0x2c(%esp),%ecx
mov    %ebx,%edx
call   8059cb0 <__sprintf_chk@plt+0xfb70>
mov    0x50(%esp),%esi
mov    0x2c(%esp),%ebp
mov    0x6c(%esi),%ecx
mov    %ecx,0x10(%esp)
jmp    805a2a5 <__sprintf_chk@plt+0x10165>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,0x58(%esp)
mov    0x18(%esp),%ebx
ja     805a27d <__sprintf_chk@plt+0x1013d>
mov    0x8074574,%eax
mov    %ecx,%edi
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    %edi,%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x58(%esp),%edi
movzbl 0x1f(%esp),%eax
mov    %al,(%edi)
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%edi
mov    %ebx,%ebp
mov    %edx,%ebx
mov    %ebp,%ecx
test   %ebp,%ebp
js     805a46a <__sprintf_chk@plt+0x1032a>
cmp    %edi,0x58(%esp)
jae    805a350 <__sprintf_chk@plt+0x10210>
mov    0x50(%esp),%eax
cmpl   $0x1,0x24(%eax)
jbe    805a303 <__sprintf_chk@plt+0x101c3>
mov    0x8074574,%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x8074570,%eax
jmp    805a2fb <__sprintf_chk@plt+0x101bb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%esi
mov    0x74(%esi),%edx
mov    (%edx,%eax,1),%edx
test   %edx,%edx
je     805a474 <__sprintf_chk@plt+0x10334>
movzbl (%edi),%ebx
mov    0x78(%esi),%esi
mov    0x80745e0(,%ebx,4),%ebx
test   %ebx,(%esi,%eax,1)
je     805a4c8 <__sprintf_chk@plt+0x10388>
mov    0x64(%esp),%ebx
test   %ebx,%ebx
je     805a39d <__sprintf_chk@plt+0x1025d>
lea    (%ecx,%ecx,8),%eax
mov    0x50(%esp),%ecx
shl    $0x2,%eax
mov    0x64(%esp),%esi
add    0x50(%ecx),%eax
cmpb   $0x0,0x11(%eax)
setne  %al
movzbl %al,%eax
mov    %eax,(%esi)
mov    0x50(%esp),%eax
cmpl   $0x1,0x24(%eax)
jbe    805a3c5 <__sprintf_chk@plt+0x10285>
mov    0x8074574,%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x8074570,%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x2c(%esp),%edi
mov    0x58(%esp),%esi
movzbl 0x1f(%esp),%eax
mov    %al,(%esi)
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%esp),%ecx
lea    0x0(,%ebp,4),%eax
mov    %ebp,0x14(%esp)
mov    (%ecx,%ebp,4),%edx
test   %edx,%edx
je     805a31e <__sprintf_chk@plt+0x101de>
lea    0x1(%edi),%esi
mov    %ecx,%ebp
mov    %esi,0x2c(%esp)
movzbl (%edi),%eax
mov    (%edx,%eax,4),%ebx
mov    (%ecx,%ebx,4),%ecx
lea    0x0(,%ebx,4),%eax
test   %ecx,%ecx
je     805a658 <__sprintf_chk@plt+0x10518>
lea    0x2(%edi),%edx
mov    %ebp,%esi
jmp    805a443 <__sprintf_chk@plt+0x10303>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edx),%ebp
add    $0x2,%edx
mov    %ebp,0x2c(%esp)
movzbl -0x2(%edx),%eax
mov    (%ecx,%eax,4),%ebx
mov    (%esi,%ebx,4),%ecx
lea    0x0(,%ebx,4),%eax
test   %ecx,%ecx
je     805a502 <__sprintf_chk@plt+0x103c2>
mov    %edx,0x2c(%esp)
movzbl -0x1(%edx),%eax
mov    (%ecx,%eax,4),%ebp
mov    (%esi,%ebp,4),%ecx
mov    %ebp,%edi
lea    0x0(,%ebp,4),%eax
test   %ecx,%ecx
jne    805a420 <__sprintf_chk@plt+0x102e0>
test   %ebp,%ebp
mov    %ebp,%ecx
mov    %edx,%edi
jns    805a328 <__sprintf_chk@plt+0x101e8>
cmp    %edi,0x58(%esp)
jb     805a32e <__sprintf_chk@plt+0x101ee>
movzbl 0x1e(%esp),%eax
cmp    %al,-0x1(%edi)
je     805a5e7 <__sprintf_chk@plt+0x104a7>
test   %ebp,%ebp
jns    805a4a2 <__sprintf_chk@plt+0x10362>
movzbl 0x1e(%esp),%eax
cmp    %al,-0x1(%edi)
je     805a620 <__sprintf_chk@plt+0x104e0>
mov    0x50(%esp),%eax
xor    %ebp,%ebp
mov    0x24(%eax),%esi
jmp    805a1d4 <__sprintf_chk@plt+0x10094>
mov    0x50(%esp),%edx
mov    %ebp,%eax
call   80595a0 <__sprintf_chk@plt+0xf460>
mov    0x50(%esp),%eax
mov    0x2c(%esp),%edi
mov    0x6c(%eax),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    0x24(%eax),%esi
jmp    805a1d4 <__sprintf_chk@plt+0x10094>
mov    0x50(%esp),%eax
mov    0x24(%eax),%esi
cmp    $0x1,%esi
jbe    805a642 <__sprintf_chk@plt+0x10502>
mov    %ebp,%edx
mov    %ebp,%ebx
lea    0x2c(%esp),%ecx
call   8059cb0 <__sprintf_chk@plt+0xfb70>
mov    0x50(%esp),%edi
mov    0x6c(%edi),%edi
mov    %eax,%ebp
mov    %edi,0x10(%esp)
mov    0x50(%esp),%edi
mov    0x24(%edi),%esi
mov    0x2c(%esp),%edi
jmp    805a1d4 <__sprintf_chk@plt+0x10094>
mov    %edi,%esi
mov    %ebx,%ecx
mov    %ebp,%edi
mov    %ebx,%ebp
mov    %esi,%ebx
jmp    805a320 <__sprintf_chk@plt+0x101e0>
mov    0x64(%esp),%eax
movl   $0x1,(%eax)
mov    0x8074574,%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x8074570,%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x58(%esp),%edi
movzbl 0x1f(%esp),%eax
mov    %al,(%edi)
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,0x64(%eax)
movl   $0x0,0x68(%eax)
movl   $0x4,0x4(%esp)
movl   $0x2,(%esp)
call   8065200 <__sprintf_chk@plt+0x1b0c0>
mov    0x50(%esp),%esi
mov    %eax,0x70(%esi)
add    $0x4,%eax
mov    %eax,0x6c(%esi)
movl   $0x4,0x4(%esp)
mov    0x64(%esi),%eax
mov    %eax,(%esp)
call   8065200 <__sprintf_chk@plt+0x1b0c0>
mov    0x50(%esp),%esi
mov    %eax,0x74(%esi)
mov    0x64(%esi),%eax
cmp    $0x3fffffff,%eax
ja     805a667 <__sprintf_chk@plt+0x10527>
shl    $0x2,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x50(%esp),%ecx
mov    %eax,0x78(%ecx)
mov    0x64(%ecx),%eax
cmp    $0x3fffffff,%eax
ja     805a667 <__sprintf_chk@plt+0x10527>
shl    $0x2,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x50(%esp),%esi
mov    %esi,%edx
mov    %eax,0x7c(%esi)
xor    %eax,%eax
call   80595a0 <__sprintf_chk@plt+0xf460>
mov    0x50(%esp),%eax
jmp    805a145 <__sprintf_chk@plt+0x10005>
mov    0x60(%esp),%edx
test   %edx,%edx
je     805a5f6 <__sprintf_chk@plt+0x104b6>
mov    0x60(%esp),%eax
addl   $0x1,(%eax)
mov    0x50(%esp),%eax
cmpl   $0x1,0x24(%eax)
jbe    805a60f <__sprintf_chk@plt+0x104cf>
mov    0x58(%esp),%edx
mov    %edi,%eax
call   80536b0 <__sprintf_chk@plt+0x9570>
mov    0x2c(%esp),%edi
cmp    %edi,0x58(%esp)
jae    805a482 <__sprintf_chk@plt+0x10342>
jmp    805a32e <__sprintf_chk@plt+0x101ee>
xchg   %ax,%ax
mov    0x5c(%esp),%eax
test   %eax,%eax
je     805a494 <__sprintf_chk@plt+0x10354>
mov    0x50(%esp),%eax
mov    0x7c(%eax),%eax
mov    (%eax,%ebx,4),%ebp
mov    0x50(%esp),%eax
mov    0x24(%eax),%esi
jmp    805a1d4 <__sprintf_chk@plt+0x10094>
lea    0x1(%edi),%eax
mov    %ebp,%ebx
mov    %eax,0x2c(%esp)
movzbl (%edi),%ecx
mov    %eax,%edi
mov    (%edx,%ecx,4),%ebp
jmp    805a1d4 <__sprintf_chk@plt+0x10094>
mov    %ebx,%ecx
mov    %ebx,%ebp
mov    0x14(%esp),%ebx
mov    %esi,%edi
jmp    805a320 <__sprintf_chk@plt+0x101e0>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x84,%edx
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
test   $0x1,%bl
mov    %ebx,%edi
jne    805a720 <__sprintf_chk@plt+0x105e0>
test   $0x2,%edi
jne    805a738 <__sprintf_chk@plt+0x105f8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     805a6ac <__sprintf_chk@plt+0x1056c>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     805a6b4 <__sprintf_chk@plt+0x10574>
movb   $0x0,(%edi)
movl   $0x1,0x8(%ebx)
movl   $0x20,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
movl   $0x1,0x14(%ebx)
mov    %eax,(%ebx)
movl   $0x4,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,0xc(%ebx)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
mov    %eax,0x24(%ebx)
jbe    805a718 <__sprintf_chk@plt+0x105d8>
movl   $0x1,0x3c(%ebx)
movl   $0x4,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
movl   $0x1,0x4c(%ebx)
mov    %eax,0x40(%ebx)
movl   $0x34,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,0x44(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %edi
ret
xchg   %ax,%ax
lea    0x1(%ebx),%edi
mov    $0x83,%dl
test   $0x2,%edi
movb   $0x0,(%ebx)
je     805a695 <__sprintf_chk@plt+0x10555>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    805a695 <__sprintf_chk@plt+0x10555>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edx
mov    0x70(%esp),%ebx
mov    0x74(%esp),%esi
test   $0x1,%al
mov    %eax,%edi
mov    %edx,0x48(%esp)
mov    $0x84,%edx
mov    %eax,0x1c(%esp)
jne    805b43c <__sprintf_chk@plt+0x112fc>
test   $0x2,%edi
jne    805b450 <__sprintf_chk@plt+0x11310>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     805a7a1 <__sprintf_chk@plt+0x10661>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
and    $0x1,%edx
je     805a7a9 <__sprintf_chk@plt+0x10669>
movb   $0x0,(%edi)
mov    0x1c(%esp),%edi
movl   $0x1,0x8(%edi)
movl   $0x20,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
movl   $0x1,0x14(%edi)
mov    %eax,(%edi)
movl   $0x4,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,0xc(%edi)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
mov    %eax,0x24(%edi)
jbe    805a811 <__sprintf_chk@plt+0x106d1>
movl   $0x1,0x3c(%edi)
movl   $0x4,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
movl   $0x1,0x4c(%edi)
mov    %eax,0x40(%edi)
movl   $0x34,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,0x44(%edi)
mov    0x1c(%esp),%edi
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %edi,0x8(%esp)
call   8057800 <__sprintf_chk@plt+0xd6c0>
mov    0x10(%edi),%eax
mov    %eax,0x10(%esp)
add    $0x1,%eax
cmp    $0xfffffff,%eax
ja     805b600 <__sprintf_chk@plt+0x114c0>
shl    $0x4,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x1c(%esp),%edx
mov    0x8074520,%edi
mov    0x8074524,%esi
mov    0x8074528,%ebx
mov    0x807452c,%ecx
mov    0x10(%edx),%ebp
xor    %edx,%edx
mov    %eax,0x28(%esp)
lea    0x0(%esi),%esi
add    $0x1,%edx
add    $0x10,%eax
mov    %edi,-0x10(%eax)
mov    %esi,-0xc(%eax)
mov    %ebx,-0x8(%eax)
mov    %ecx,-0x4(%eax)
cmp    %ebp,%edx
jbe    805a870 <__sprintf_chk@plt+0x10730>
mov    0x28(%esp),%ebx
xor    %esi,%esi
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,(%esp)
add    $0x1,%esi
add    $0x10,%ebx
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,-0x10(%ebx)
mov    %eax,%edi
movl   $0x2,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,-0xc(%ebx)
mov    %eax,%ebp
movl   $0x2,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,-0x8(%ebx)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x10(%esp),%ecx
movb   $0x0,0x0(%ebp)
movl   $0x0,(%edi)
movb   $0x0,(%ecx)
mov    %eax,-0x4(%ebx)
movb   $0x0,(%eax)
mov    0x1c(%esp),%eax
mov    0x10(%eax),%eax
cmp    %eax,%esi
jbe    805a890 <__sprintf_chk@plt+0x10750>
test   %eax,%eax
je     805a9ca <__sprintf_chk@plt+0x1088a>
mov    0x28(%esp),%eax
movl   $0x0,0x2c(%esp)
mov    0x2c(%esp),%edx
mov    %eax,0x18(%esp)
add    $0x20,%eax
mov    %eax,0x3c(%esp)
mov    0x1c(%esp),%eax
mov    0xc(%eax),%eax
mov    (%eax,%edx,4),%ebx
cmp    $0x109,%ebx
jle    805aacb <__sprintf_chk@plt+0x1098b>
cmp    $0x10d,%ebx
je     805aba2 <__sprintf_chk@plt+0x10a62>
jg     805ab51 <__sprintf_chk@plt+0x10a11>
cmp    $0x10a,%ebx
je     805ab81 <__sprintf_chk@plt+0x10a41>
cmp    $0x10c,%ebx
jne    805b1d7 <__sprintf_chk@plt+0x11097>
mov    0x3c(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805b4da <__sprintf_chk@plt+0x1139a>
mov    0x18(%esp),%eax
mov    -0x10(%eax),%esi
lea    -0x20(%eax),%edx
mov    %edx,0x10(%esp)
mov    -0x20(%eax),%ebx
test   %esi,%esi
je     805a9bf <__sprintf_chk@plt+0x1087f>
test   %ebx,%ebx
je     805a9bf <__sprintf_chk@plt+0x1087f>
mov    (%esi),%edi
test   %edi,%edi
je     805b116 <__sprintf_chk@plt+0x10fd6>
add    $0x4,%esi
jmp    805a9a6 <__sprintf_chk@plt+0x10866>
lea    0x0(%esi),%esi
add    $0x4,%esi
mov    -0x4(%esi),%edi
test   %edi,%edi
je     805b10f <__sprintf_chk@plt+0x10fcf>
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
mov    %edi,%edx
mov    %eax,%ecx
mov    %ebx,%eax
call   8056560 <__sprintf_chk@plt+0xc420>
test   %eax,%eax
mov    %eax,%ebx
jne    805a998 <__sprintf_chk@plt+0x10858>
mov    0x18(%esp),%eax
movl   $0x0,-0x20(%eax)
mov    $0x8074530,%ebx
xor    %esi,%esi
cmpb   $0x0,(%ebx)
jne    805af7e <__sprintf_chk@plt+0x10e3e>
mov    0x28(%esp),%ebx
movl   $0x0,0x10(%esp)
mov    (%ebx),%esi
test   %esi,%esi
je     805aa13 <__sprintf_chk@plt+0x108d3>
mov    (%esi),%edx
test   %edx,%edx
je     805aa13 <__sprintf_chk@plt+0x108d3>
lea    0x4(%esi),%edi
mov    %esi,%ebp
nop
mov    %edx,(%esp)
call   80499d0 <free@plt>
movl   $0x0,0x0(%ebp)
mov    %edi,%ebp
add    $0x4,%edi
mov    -0x4(%edi),%edx
test   %edx,%edx
jne    805a9f8 <__sprintf_chk@plt+0x108b8>
mov    %esi,(%esp)
add    $0x10,%ebx
call   80499d0 <free@plt>
mov    -0xc(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    -0x8(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    -0x4(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x1c(%esp),%eax
addl   $0x1,0x10(%esp)
mov    0x10(%esp),%edx
cmp    0x10(%eax),%edx
jbe    805a9e6 <__sprintf_chk@plt+0x108a6>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x8074260,%eax
cmp    $0xffffffff,%eax
je     805b412 <__sprintf_chk@plt+0x112d2>
test   %eax,%eax
je     805aaaf <__sprintf_chk@plt+0x1096f>
mov    0x1c(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     805aa9d <__sprintf_chk@plt+0x1095d>
mov    0xc(%eax),%ebx
xor    %eax,%eax
mov    (%ebx,%eax,4),%ecx
cmp    $0x110,%ecx
je     805b2dc <__sprintf_chk@plt+0x1119c>
cmp    $0x111,%ecx
je     805aaaf <__sprintf_chk@plt+0x1096f>
add    $0x1,%eax
cmp    %edx,%eax
jne    805aa7f <__sprintf_chk@plt+0x1093f>
mov    0x1c(%esp),%esi
mov    %esi,%eax
call   8053ce0 <__sprintf_chk@plt+0x9ba0>
movl   $0x1,0x24(%esi)
mov    0x48(%esp),%eax
mov    %eax,0x74(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x70(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8057980 <__sprintf_chk@plt+0xd840>
cmp    $0x108,%ebx
jge    805afc0 <__sprintf_chk@plt+0x10e80>
cmp    $0xffffffff,%ebx
je     805af07 <__sprintf_chk@plt+0x10dc7>
jl     805b5b8 <__sprintf_chk@plt+0x11478>
cmp    $0x100,%ebx
jl     805b1d7 <__sprintf_chk@plt+0x11097>
mov    0x18(%esp),%esi
mov    0x4(%esi),%eax
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
mov    (%esi),%esi
movb   $0x0,(%ecx)
test   %esi,%esi
movb   $0x0,(%edx)
movb   $0x0,(%eax)
je     805ab31 <__sprintf_chk@plt+0x109f1>
mov    (%esi),%eax
test   %eax,%eax
je     805ab31 <__sprintf_chk@plt+0x109f1>
lea    0x4(%esi),%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805ab17 <__sprintf_chk@plt+0x109d7>
mov    0x1c(%esp),%eax
addl   $0x1,0x2c(%esp)
mov    0x2c(%esp),%edx
addl   $0x10,0x18(%esp)
cmp    0x10(%eax),%edx
jb     805a920 <__sprintf_chk@plt+0x107e0>
jmp    805a9ca <__sprintf_chk@plt+0x1088a>
cmp    $0x10f,%ebx
jg     805b1d7 <__sprintf_chk@plt+0x11097>
movl   $0x806e0d4,0xc(%esp)
movl   $0xf59,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e3dc,(%esp)
call   804a110 <__assert_fail@plt>
mov    0x18(%esp),%eax
cmp    %eax,0x28(%esp)
jae    805b492 <__sprintf_chk@plt+0x11352>
mov    %eax,%edx
mov    -0x4(%eax),%eax
movb   $0x0,(%eax)
mov    %edx,%eax
sub    $0x10,%eax
mov    %eax,0x18(%esp)
jmp    805ab31 <__sprintf_chk@plt+0x109f1>
mov    0x3c(%esp),%eax
cmp    %eax,0x18(%esp)
jb     805b4b6 <__sprintf_chk@plt+0x11376>
mov    0x18(%esp),%eax
lea    -0x20(%eax),%edx
mov    -0x14(%eax),%ebx
mov    -0x4(%eax),%eax
mov    %edx,0x40(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    805b018 <__sprintf_chk@plt+0x10ed8>
mov    0x18(%esp),%edx
mov    -0x1c(%edx),%ebx
movzbl (%ebx),%eax
test   %al,%al
je     805ac0a <__sprintf_chk@plt+0x10aca>
mov    -0xc(%edx),%edx
cmp    (%edx),%al
jne    805ac0a <__sprintf_chk@plt+0x10aca>
lea    0x1(%ebx),%eax
add    $0x1,%edx
jmp    805abff <__sprintf_chk@plt+0x10abf>
movzbl (%edx),%ebx
add    $0x1,%eax
add    $0x1,%edx
cmp    %bl,%cl
jne    805ac08 <__sprintf_chk@plt+0x10ac8>
movzbl (%eax),%ecx
mov    %eax,%esi
test   %cl,%cl
jne    805abf2 <__sprintf_chk@plt+0x10ab2>
mov    %esi,%ebx
mov    0x18(%esp),%edi
movb   $0x0,(%ebx)
mov    -0x18(%edi),%ebx
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
mov    -0x8(%edi),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,%esi
call   8049d70 <strlen@plt>
mov    %esi,%edx
cmp    %esi,%eax
cmovbe %eax,%edx
test   %edx,%edx
mov    %edx,%ebp
je     805b4fe <__sprintf_chk@plt+0x113be>
mov    0x10(%esp),%ecx
movzbl -0x1(%ecx,%eax,1),%edx
cmp    %dl,-0x1(%ebx,%esi,1)
jne    805b4fe <__sprintf_chk@plt+0x113be>
mov    $0x1,%edi
add    %ecx,%eax
sub    %ebp,%edi
xor    %edx,%edx
lea    (%ebx,%esi,1),%ebp
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
jmp    805ac7b <__sprintf_chk@plt+0x10b3b>
mov    0x10(%esp),%ebx
movzbl -0x2(%ebp,%edx,1),%eax
sub    $0x1,%edx
cmp    -0x1(%ebx,%edx,1),%al
jne    805ac86 <__sprintf_chk@plt+0x10b46>
mov    $0x1,%ecx
sub    %edx,%ecx
cmp    %edi,%edx
jne    805ac69 <__sprintf_chk@plt+0x10b29>
test   %ecx,%ecx
mov    0x14(%esp),%ebx
je     805ad16 <__sprintf_chk@plt+0x10bd6>
sub    %ecx,%esi
lea    (%ebx,%esi,1),%edi
lea    0x4(%edi),%eax
cmp    %eax,%ebx
lea    0x4(%ebx),%eax
setae  %dl
cmp    %eax,%edi
setae  %al
or     %eax,%edx
cmp    $0x9,%ecx
seta   %al
test   %al,%dl
je     805b3f8 <__sprintf_chk@plt+0x112b8>
mov    %edi,%eax
or     %ebx,%eax
test   $0x3,%al
jne    805b3f8 <__sprintf_chk@plt+0x112b8>
mov    %ecx,%ebp
xor    %edx,%edx
shr    $0x2,%ebp
lea    0x0(,%ebp,4),%eax
mov    %eax,0x10(%esp)
mov    (%edi,%edx,4),%eax
mov    %eax,(%ebx,%edx,4)
add    $0x1,%edx
cmp    %ebp,%edx
jb     805acd5 <__sprintf_chk@plt+0x10b95>
mov    0x10(%esp),%eax
cmp    %ecx,%eax
je     805ad16 <__sprintf_chk@plt+0x10bd6>
lea    (%ebx,%eax,1),%edx
movzbl (%edx,%esi,1),%edx
mov    %dl,(%ebx,%ebp,4)
lea    0x1(%eax),%edx
cmp    %ecx,%edx
jae    805ad16 <__sprintf_chk@plt+0x10bd6>
add    %ebx,%edx
movzbl (%edx,%esi,1),%edx
mov    %dl,0x1(%ebx,%eax,1)
lea    0x2(%eax),%edx
cmp    %ecx,%edx
jae    805ad16 <__sprintf_chk@plt+0x10bd6>
add    %ebx,%edx
movzbl (%edx,%esi,1),%edx
mov    %dl,0x2(%ebx,%eax,1)
mov    0x18(%esp),%eax
movb   $0x0,(%ebx,%ecx,1)
mov    -0x10(%eax),%edx
mov    -0x20(%eax),%eax
test   %edx,%edx
mov    %edx,0x44(%esp)
mov    %eax,0x34(%esp)
je     805a9ca <__sprintf_chk@plt+0x1088a>
test   %eax,%eax
je     805a9ca <__sprintf_chk@plt+0x1088a>
movl   $0x4,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     805a9ca <__sprintf_chk@plt+0x1088a>
mov    0x34(%esp),%edx
movl   $0x0,(%eax)
mov    (%edx),%eax
test   %eax,%eax
je     805b0eb <__sprintf_chk@plt+0x10fab>
lea    0x4(%edx),%esi
mov    %esi,0x4c(%esp)
mov    %esi,0x38(%esp)
mov    %eax,%esi
mov    %edx,0x30(%esp)
mov    0x44(%esp),%eax
mov    (%eax),%edx
test   %edx,%edx
mov    %edx,0x10(%esp)
je     805b0a7 <__sprintf_chk@plt+0x10f67>
test   %esi,%esi
je     805aed7 <__sprintf_chk@plt+0x10d97>
add    $0x4,%eax
mov    %eax,0x24(%esp)
movl   $0x4,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805aed7 <__sprintf_chk@plt+0x10d97>
movl   $0x0,(%eax)
movsbl (%esi),%edx
test   %dl,%dl
je     805ae9a <__sprintf_chk@plt+0x10d5a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     805b06e <__sprintf_chk@plt+0x10f2e>
movzbl 0x1(%esi),%edx
xor    %ebp,%ebp
movsbl (%esi),%edi
mov    %edx,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     805b040 <__sprintf_chk@plt+0x10f00>
cmp    0x1(%eax),%bl
mov    $0x1,%ecx
je     805b020 <__sprintf_chk@plt+0x10ee0>
cmp    %ecx,%ebp
cmovb  %ecx,%ebp
add    $0x1,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
jne    805adf0 <__sprintf_chk@plt+0x10cb0>
test   %ebp,%ebp
movsbl %bl,%edx
jne    805b050 <__sprintf_chk@plt+0x10f10>
add    $0x1,%esi
test   %dl,%dl
jne    805adc8 <__sprintf_chk@plt+0x10c88>
mov    0x14(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     805ae9a <__sprintf_chk@plt+0x10d5a>
lea    0x4(%eax),%esi
mov    0x20(%esp),%ebp
mov    %esi,%ebx
jmp    805ae52 <__sprintf_chk@plt+0x10d12>
lea    0x0(%esi),%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%edi
test   %edi,%edi
je     805ae6b <__sprintf_chk@plt+0x10d2b>
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
mov    %edi,%edx
mov    %eax,%ecx
mov    %ebp,%eax
call   8056560 <__sprintf_chk@plt+0xc420>
test   %eax,%eax
mov    %eax,%ebp
jne    805ae48 <__sprintf_chk@plt+0x10d08>
mov    0x14(%esp),%eax
mov    %ebp,0x20(%esp)
mov    0x14(%esp),%ebx
mov    (%eax),%eax
test   %eax,%eax
je     805ae9a <__sprintf_chk@plt+0x10d5a>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,(%ebx)
mov    %esi,%ebx
add    $0x4,%esi
mov    -0x4(%esi),%eax
test   %eax,%eax
jne    805ae80 <__sprintf_chk@plt+0x10d40>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x20(%esp),%eax
test   %eax,%eax
je     805a9ca <__sprintf_chk@plt+0x1088a>
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x10(%esp)
je     805b0a7 <__sprintf_chk@plt+0x10f67>
mov    0x30(%esp),%eax
addl   $0x4,0x24(%esp)
mov    (%eax),%esi
test   %esi,%esi
jne    805ad9a <__sprintf_chk@plt+0x10c5a>
mov    0x20(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     805a9ca <__sprintf_chk@plt+0x1088a>
lea    0x4(%esi),%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805aee8 <__sprintf_chk@plt+0x10da8>
jmp    805a9ca <__sprintf_chk@plt+0x1088a>
mov    0x28(%esp),%edx
mov    %edx,%eax
add    $0x10,%eax
cmp    %eax,0x18(%esp)
jne    805b5dc <__sprintf_chk@plt+0x1149c>
mov    (%edx),%ebp
mov    $0x8074530,%ebx
mov    0x0(%ebp),%edi
test   %edi,%edi
je     805af58 <__sprintf_chk@plt+0x10e18>
movl   $0x8074530,(%esp)
add    $0x4,%ebp
mov    $0x8074530,%ebx
call   8049d70 <strlen@plt>
mov    %eax,%esi
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
cmp    %esi,%eax
jbe    805af4e <__sprintf_chk@plt+0x10e0e>
mov    %eax,%esi
mov    %edi,%ebx
add    $0x4,%ebp
mov    -0x4(%ebp),%edi
test   %edi,%edi
jne    805af3e <__sprintf_chk@plt+0x10dfe>
mov    0x28(%esp),%eax
mov    0xc(%eax),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
sete   %al
cmpb   $0x0,(%ebx)
movzbl %al,%eax
mov    %eax,%esi
je     805a9da <__sprintf_chk@plt+0x1089a>
movl   $0xc,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %esi,(%eax)
mov    %eax,%edi
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   8065230 <__sprintf_chk@plt+0x1b0f0>
mov    0x1c(%esp),%edx
mov    %eax,0x4(%edi)
mov    0x80(%edx),%eax
mov    %eax,0x8(%edi)
mov    %edi,0x80(%edx)
jmp    805a9da <__sprintf_chk@plt+0x1089a>
mov    0x18(%esp),%eax
cmp    %eax,0x28(%esp)
jae    805b46e <__sprintf_chk@plt+0x1132e>
mov    %eax,%esi
mov    -0x10(%esi),%edi
lea    -0x10(%eax),%ebx
mov    -0x8(%esi),%edx
mov    -0xc(%eax),%eax
mov    -0x4(%esi),%ecx
test   %edi,%edi
movb   $0x0,(%ecx)
movb   $0x0,(%edx)
movb   $0x0,(%eax)
je     805b00f <__sprintf_chk@plt+0x10ecf>
mov    (%edi),%eax
test   %eax,%eax
je     805b00f <__sprintf_chk@plt+0x10ecf>
lea    0x4(%edi),%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,(%edi)
mov    %esi,%edi
add    $0x4,%esi
mov    -0x4(%esi),%eax
test   %eax,%eax
jne    805aff5 <__sprintf_chk@plt+0x10eb5>
mov    %ebx,0x18(%esp)
jmp    805ab31 <__sprintf_chk@plt+0x109f1>
movb   $0x0,(%ebx)
jmp    805abd5 <__sprintf_chk@plt+0x10a95>
add    $0x1,%ecx
movzbl (%esi,%ecx,1),%edx
test   %dl,%dl
je     805ae06 <__sprintf_chk@plt+0x10cc6>
cmp    (%eax,%ecx,1),%dl
jne    805ae06 <__sprintf_chk@plt+0x10cc6>
jmp    805b020 <__sprintf_chk@plt+0x10ee0>
lea    0x0(%esi),%esi
test   %ebp,%ebp
mov    $0x1,%edx
cmove  %edx,%ebp
jmp    805ae0b <__sprintf_chk@plt+0x10ccb>
nop
mov    0x14(%esp),%eax
mov    %ebp,%ecx
mov    %esi,%edx
call   8056560 <__sprintf_chk@plt+0xc420>
test   %eax,%eax
je     805b077 <__sprintf_chk@plt+0x10f37>
movsbl 0x1(%esi),%edx
mov    %eax,0x14(%esp)
jmp    805ae29 <__sprintf_chk@plt+0x10ce9>
movsbl 0x1(%esi),%edx
jmp    805ae29 <__sprintf_chk@plt+0x10ce9>
mov    0x14(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     805aed7 <__sprintf_chk@plt+0x10d97>
lea    0x4(%esi),%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805b088 <__sprintf_chk@plt+0x10f48>
jmp    805aed7 <__sprintf_chk@plt+0x10d97>
mov    0x38(%esp),%eax
addl   $0x4,0x38(%esp)
mov    %eax,0x30(%esp)
mov    0x38(%esp),%eax
mov    -0x4(%eax),%esi
test   %esi,%esi
jne    805ad79 <__sprintf_chk@plt+0x10c39>
mov    0x34(%esp),%esi
mov    0x4c(%esp),%ebx
mov    (%esi),%eax
test   %eax,%eax
je     805b0eb <__sprintf_chk@plt+0x10fab>
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805b0d1 <__sprintf_chk@plt+0x10f91>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x18(%esp),%eax
mov    0x20(%esp),%edx
mov    %edx,-0x20(%eax)
mov    0x40(%esp),%eax
mov    %eax,0x18(%esp)
jmp    805ab31 <__sprintf_chk@plt+0x109f1>
mov    0x18(%esp),%eax
mov    %ebx,-0x20(%eax)
mov    0x18(%esp),%eax
mov    -0x18(%eax),%edi
cmpb   $0x0,(%edi)
je     805b132 <__sprintf_chk@plt+0x10ff2>
mov    -0xc(%eax),%eax
cmpb   $0x0,(%eax)
mov    %eax,0x14(%esp)
jne    805b311 <__sprintf_chk@plt+0x111d1>
mov    0x18(%esp),%eax
mov    -0x14(%eax),%ebx
cmpb   $0x0,(%ebx)
jne    805b377 <__sprintf_chk@plt+0x11237>
mov    -0x4(%eax),%esi
cmpb   $0x0,(%esi)
jne    805b14d <__sprintf_chk@plt+0x1100d>
movb   $0x0,(%edi)
mov    0x18(%esp),%eax
mov    -0x8(%eax),%ebp
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
test   %ebp,%ebp
mov    %eax,0x14(%esp)
je     805b1b9 <__sprintf_chk@plt+0x11079>
mov    %ebp,(%esp)
call   8049d70 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
je     805b1b9 <__sprintf_chk@plt+0x11079>
mov    0x14(%esp),%ecx
mov    %edi,(%esp)
mov    %edx,0x20(%esp)
lea    0x1(%ecx,%eax,1),%eax
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x14(%esp),%ecx
mov    0x20(%esp),%edx
mov    %ebp,0x4(%esp)
add    $0x1,%edx
mov    %eax,%edi
lea    (%eax,%ecx,1),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80499f0 <memcpy@plt>
mov    0x18(%esp),%eax
test   %edi,%edi
mov    %edi,-0x18(%eax)
je     805a9ca <__sprintf_chk@plt+0x1088a>
cmpb   $0x0,(%ebx)
je     805b1c7 <__sprintf_chk@plt+0x11087>
cmpb   $0x0,(%esi)
jne    805b2e1 <__sprintf_chk@plt+0x111a1>
mov    0x10(%esp),%eax
movb   $0x0,(%ebx)
mov    %eax,0x18(%esp)
jmp    805ab31 <__sprintf_chk@plt+0x109f1>
cmp    $0xffffffff,%ebx
jl     805b5b8 <__sprintf_chk@plt+0x11478>
test   %ebx,%ebx
je     805a9ca <__sprintf_chk@plt+0x1088a>
lea    -0x110(%ebx),%eax
cmp    $0x1,%eax
jbe    805b290 <__sprintf_chk@plt+0x11150>
cmp    $0x112,%ebx
jg     805b290 <__sprintf_chk@plt+0x11150>
mov    0x18(%esp),%eax
mov    (%eax),%esi
mov    0x4(%eax),%ecx
mov    0x8(%eax),%edx
mov    0xc(%eax),%edi
test   %esi,%esi
movb   $0x0,(%edi)
movb   $0x0,(%edx)
movb   $0x0,(%ecx)
je     805b25c <__sprintf_chk@plt+0x1111c>
mov    (%esi),%eax
test   %eax,%eax
je     805b25c <__sprintf_chk@plt+0x1111c>
lea    0x4(%esi),%ebp
mov    %esi,0x10(%esp)
mov    %eax,(%esp)
mov    %edx,0x20(%esp)
mov    %ecx,0x14(%esp)
call   80499d0 <free@plt>
mov    0x10(%esp),%eax
mov    %ebp,0x10(%esp)
add    $0x4,%ebp
mov    0x14(%esp),%ecx
mov    0x20(%esp),%edx
movl   $0x0,(%eax)
mov    -0x4(%ebp),%eax
test   %eax,%eax
jne    805b22c <__sprintf_chk@plt+0x110ec>
mov    %bl,(%edx)
mov    %esi,%eax
mov    %bl,(%ecx)
mov    %bl,(%edi)
movb   $0x0,0x1(%edx)
mov    %edi,%edx
movb   $0x0,0x1(%ecx)
mov    $0x1,%ecx
movb   $0x0,0x1(%edi)
call   8056560 <__sprintf_chk@plt+0xc420>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
jne    805ab31 <__sprintf_chk@plt+0x109f1>
jmp    805a9ca <__sprintf_chk@plt+0x1088a>
nop
mov    0x18(%esp),%esi
mov    0x4(%esi),%eax
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
mov    (%esi),%esi
movb   $0x0,(%ecx)
test   %esi,%esi
movb   $0x0,(%edx)
movb   $0x0,(%eax)
je     805ab31 <__sprintf_chk@plt+0x109f1>
mov    (%esi),%eax
test   %eax,%eax
je     805ab31 <__sprintf_chk@plt+0x109f1>
lea    0x4(%esi),%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,(%esi)
mov    %ebx,%esi
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
jne    805b2bd <__sprintf_chk@plt+0x1117d>
jmp    805ab31 <__sprintf_chk@plt+0x109f1>
call   804a080 <abort@plt>
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049d70 <strlen@plt>
test   %eax,%eax
mov    %eax,%ebp
jne    805b505 <__sprintf_chk@plt+0x113c5>
mov    0x18(%esp),%eax
mov    %ebx,-0x14(%eax)
mov    0x10(%esp),%eax
mov    %eax,0x18(%esp)
jmp    805ab31 <__sprintf_chk@plt+0x109f1>
mov    %edi,(%esp)
xor    %esi,%esi
xor    %ebp,%ebp
call   8049d70 <strlen@plt>
test   %eax,%eax
jne    805b578 <__sprintf_chk@plt+0x11438>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
test   %eax,%eax
mov    %eax,%edx
jne    805b540 <__sprintf_chk@plt+0x11400>
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
mov    %esi,%edx
mov    %eax,%ecx
mov    %ebx,%eax
call   8056560 <__sprintf_chk@plt+0xc420>
mov    %eax,%ebx
mov    0x18(%esp),%eax
mov    %ebx,-0x20(%eax)
mov    %esi,(%esp)
call   80499d0 <free@plt>
test   %ebx,%ebx
je     805a9ca <__sprintf_chk@plt+0x1088a>
mov    0x18(%esp),%eax
mov    -0x14(%eax),%ebx
cmpb   $0x0,(%ebx)
je     805b142 <__sprintf_chk@plt+0x11002>
mov    0x18(%esp),%eax
mov    -0x1c(%eax),%ebp
mov    -0xc(%eax),%esi
test   %ebp,%ebp
je     805b461 <__sprintf_chk@plt+0x11321>
mov    %ebp,(%esp)
call   8049d70 <strlen@plt>
mov    %eax,0x14(%esp)
test   %esi,%esi
je     805b3de <__sprintf_chk@plt+0x1129e>
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
test   %eax,%eax
mov    %eax,%ecx
je     805b3de <__sprintf_chk@plt+0x1129e>
mov    0x14(%esp),%eax
mov    %ebp,(%esp)
mov    %ecx,0x20(%esp)
lea    0x1(%eax,%ecx,1),%eax
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%ecx
mov    %esi,0x4(%esp)
add    $0x1,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,%ebp
mov    0x14(%esp),%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   80499f0 <memcpy@plt>
mov    0x18(%esp),%eax
test   %ebp,%ebp
mov    %ebp,-0x1c(%eax)
jne    805b142 <__sprintf_chk@plt+0x11002>
jmp    805a9ca <__sprintf_chk@plt+0x1088a>
lea    0x0(%esi),%esi
lea    (%ebx,%ecx,1),%edx
mov    %ebx,%eax
mov    %edx,%edi
movzbl (%eax,%esi,1),%edx
add    $0x1,%eax
mov    %dl,-0x1(%eax)
cmp    %edi,%eax
jne    805b3ff <__sprintf_chk@plt+0x112bf>
jmp    805ad16 <__sprintf_chk@plt+0x10bd6>
movl   $0xe,(%esp)
mov    $0x806c21e,%edi
call   8049f30 <nl_langinfo@plt>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   %al
movzbl %al,%eax
mov    %eax,0x8074260
jmp    805aa6b <__sprintf_chk@plt+0x1092b>
lea    0x1(%eax),%edi
mov    $0x83,%dl
test   $0x2,%edi
movb   $0x0,(%eax)
je     805a78a <__sprintf_chk@plt+0x1064a>
xor    %ebp,%ebp
add    $0x2,%edi
mov    %bp,-0x2(%edi)
sub    $0x2,%edx
jmp    805a78a <__sprintf_chk@plt+0x1064a>
movl   $0x0,0x14(%esp)
jmp    805b395 <__sprintf_chk@plt+0x11255>
movl   $0x806e0d4,0xc(%esp)
movl   $0xf66,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e310,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e0d4,0xc(%esp)
movl   $0xf91,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e310,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e0d4,0xc(%esp)
movl   $0xf6b,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e31b,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e0d4,0xc(%esp)
movl   $0xf9e,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e31b,(%esp)
call   804a110 <__assert_fail@plt>
xor    %ecx,%ecx
jmp    805ad16 <__sprintf_chk@plt+0x10bd6>
lea    0x1(%edi,%eax,1),%eax
add    $0x1,%ebp
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
add    %eax,%edi
mov    %eax,%ebx
mov    %edi,(%esp)
call   80499f0 <memcpy@plt>
mov    0x18(%esp),%eax
test   %ebx,%ebx
mov    %ebx,-0x14(%eax)
je     805a9ca <__sprintf_chk@plt+0x1088a>
jmp    805b304 <__sprintf_chk@plt+0x111c4>
lea    0x1(%ebp,%eax,1),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x20(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%edx
add    $0x1,%edx
mov    %edx,0x8(%esp)
add    %eax,%ebp
mov    %eax,%esi
mov    0x14(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80499f0 <memcpy@plt>
jmp    805b33b <__sprintf_chk@plt+0x111fb>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x20(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x20(%esp),%edx
mov    %edi,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   80499f0 <memcpy@plt>
test   %esi,%esi
je     805b605 <__sprintf_chk@plt+0x114c5>
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
mov    %eax,%ebp
jmp    805b325 <__sprintf_chk@plt+0x111e5>
movl   $0x806e0d4,0xc(%esp)
movl   $0xfd1,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e33b,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e0d4,0xc(%esp)
movl   $0xf96,0x8(%esp)
movl   $0x806e27b,0x4(%esp)
movl   $0x806e32b,(%esp)
call   804a110 <__assert_fail@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
mov    %ebp,%esi
jmp    805b325 <__sprintf_chk@plt+0x111e5>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
cmpl   $0x1,0x24(%ebx)
jbe    805b63c <__sprintf_chk@plt+0x114fc>
mov    %ebx,%eax
call   8053ce0 <__sprintf_chk@plt+0x9ba0>
mov    0x54(%ebx),%ecx
xor    %esi,%esi
xor    %edi,%edi
test   %ecx,%ecx
je     805b671 <__sprintf_chk@plt+0x11531>
nop
mov    0x50(%ebx),%eax
add    $0x1,%edi
mov    0x4(%eax,%esi,1),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x50(%ebx),%eax
mov    0x18(%eax,%esi,1),%eax
add    $0x24,%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
cmp    %edi,0x54(%ebx)
ja     805b648 <__sprintf_chk@plt+0x11508>
mov    0x50(%ebx),%eax
xor    %edi,%edi
xor    %esi,%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x10(%ebx),%edx
test   %edx,%edx
je     805b6a1 <__sprintf_chk@plt+0x11561>
nop
mov    0x5c(%ebx),%eax
add    $0x1,%esi
mov    (%eax,%edi,1),%eax
add    $0xc,%edi
mov    %eax,(%esp)
call   80499d0 <free@plt>
cmp    %esi,0x10(%ebx)
ja     805b688 <__sprintf_chk@plt+0x11548>
mov    0x5c(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x64(%ebx),%eax
test   %eax,%eax
je     805b6dc <__sprintf_chk@plt+0x1159c>
lea    0x0(%esi),%esi
mov    0x6c(%ebx),%eax
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x74(%ebx),%eax
mov    (%eax,%esi,4),%eax
add    $0x1,%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
cmp    %esi,0x64(%ebx)
ja     805b6b8 <__sprintf_chk@plt+0x11578>
mov    0x70(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x74(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x7c(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x78(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x80(%ebx),%ebx
test   %ebx,%ebx
jne    805b71a <__sprintf_chk@plt+0x115da>
jmp    805b734 <__sprintf_chk@plt+0x115f4>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0x4(%ebx),%eax
mov    0x8(%ebx),%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %esi,%esi
jne    805b718 <__sprintf_chk@plt+0x115d8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x84,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x80(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
mov    0x8075090,%eax
test   %eax,%eax
je     805b786 <__sprintf_chk@plt+0x11646>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
je     805b7a0 <__sprintf_chk@plt+0x11660>
movl   $0x0,(%esp)
call   8052360 <__sprintf_chk@plt+0x8220>
mov    0x20(%esp),%ecx
mov    %eax,(%ecx)
test   %eax,%eax
je     805b7d2 <__sprintf_chk@plt+0x11692>
add    $0x1c,%esp
ret
call   804a100 <__ctype_tolower_loc@plt>
xor    %edx,%edx
nop
mov    (%eax),%ecx
mov    (%ecx,%edx,4),%ecx
add    $0x1,%edx
mov    %cl,0x8074a1f(%edx)
cmp    $0x100,%edx
jne    805b7a8 <__sprintf_chk@plt+0x11668>
movl   $0x8074a20,(%esp)
call   8052360 <__sprintf_chk@plt+0x8220>
mov    0x20(%esp),%edx
mov    %eax,(%edx)
jmp    805b798 <__sprintf_chk@plt+0x11658>
call   80652b0 <__sprintf_chk@plt+0x1b170>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x78(%esp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,0x4c(%esp)
xor    %ecx,%ecx
mov    0x70(%esp),%ebx
mov    (%eax),%edx
mov    %eax,0x28(%esp)
mov    0x8074a08,%eax
mov    %edi,0x2c(%esp)
cmp    %eax,%edx
ja     805b858 <__sprintf_chk@plt+0x11718>
test   %eax,%eax
je     805b858 <__sprintf_chk@plt+0x11718>
mov    0x8074a04,%ebp
test   %ebp,%ebp
je     805babb <__sprintf_chk@plt+0x1197b>
mov    0x8074a00,%esi
test   %esi,%esi
je     805ba97 <__sprintf_chk@plt+0x11957>
mov    0x28(%esp),%eax
mov    (%eax),%edx
mov    %ebp,%eax
test   %edx,%edx
jne    805b8a0 <__sprintf_chk@plt+0x11760>
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
jne    805ba92 <__sprintf_chk@plt+0x11952>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edx,%edx
mov    $0x1,%eax
cmovne %edx,%eax
mov    %eax,0x8074a08
mov    %eax,0x4(%esp)
mov    0x8074a04,%eax
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0x8074a04
mov    0x8074a08,%eax
mov    %eax,0x4(%esp)
mov    0x8074a00,%eax
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0x8074a00
jmp    805b817 <__sprintf_chk@plt+0x116d7>
lea    0x0(%esi),%esi
lea    (%ebx,%edx,1),%eax
mov    %eax,%edi
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
mov    %eax,0x18(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    %edi,%ebx
mov    %eax,0x20(%esp)
jae    805ba85 <__sprintf_chk@plt+0x11945>
movb   $0x0,0x27(%esp)
movl   $0x0,0x14(%esp)
jmp    805b957 <__sprintf_chk@plt+0x11817>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
add    %edi,%ebx
mov    %eax,(%esp)
call   8049a20 <towlower@plt>
lea    0x44(%esp),%ecx
mov    %ecx,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8049940 <wcrtomb@plt>
mov    %eax,%edx
mov    %edi,%eax
sub    %edx,%eax
mov    %al,(%esi)
lea    -0x1(%edx),%ecx
lea    0x1(%esi),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   8049e50 <memset@plt>
mov    0x1c(%esp),%edx
add    %edx,0x14(%esp)
add    %edx,%esi
add    %edx,%ebp
cmp    %edx,%edi
setne  %al
or     %al,0x27(%esp)
cmp    0x18(%esp),%ebx
jae    805ba3c <__sprintf_chk@plt+0x118fc>
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
sub    %ebx,%eax
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
mov    0x14(%esp),%edx
add    0x20(%esp),%edx
mov    %eax,%edi
mov    0x8074a08,%eax
cmp    %eax,%edx
jb     805b9ef <__sprintf_chk@plt+0x118af>
mov    0x8074a04,%ecx
sub    0x8074a00,%esi
test   %ecx,%ecx
je     805ba68 <__sprintf_chk@plt+0x11928>
cmp    $0xaaaaaaa9,%eax
ja     805ba8d <__sprintf_chk@plt+0x1194d>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x8074a08
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,0x8074a04
mov    0x8074a08,%eax
mov    %eax,0x4(%esp)
mov    0x8074a00,%eax
mov    %eax,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x14(%esp),%ebp
add    0x8074a04,%ebp
mov    %eax,0x8074a00
add    %eax,%esi
lea    -0x1(%edi),%eax
cmp    $0xfffffffc,%eax
jbe    805b8f0 <__sprintf_chk@plt+0x117b0>
movb   $0x0,(%esi)
movzbl (%ebx),%eax
add    $0x1,%esi
addl   $0x1,0x14(%esp)
add    $0x1,%ebp
add    $0x1,%ebx
mov    %al,-0x1(%ebp)
cmp    0x18(%esp),%ebx
movl   $0x0,0x3c(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x48(%esp)
jb     805b957 <__sprintf_chk@plt+0x11817>
cmpb   $0x0,0x27(%esp)
je     805ba78 <__sprintf_chk@plt+0x11938>
mov    0x8074a04,%eax
mov    %ebp,%edx
mov    0x8074a00,%ecx
sub    %eax,%edx
mov    0x2c(%esp),%ebx
mov    %ecx,(%ebx)
mov    0x28(%esp),%ecx
mov    %edx,(%ecx)
movb   $0x0,0x0(%ebp)
jmp    805b83f <__sprintf_chk@plt+0x116ff>
nop
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    805b9b2 <__sprintf_chk@plt+0x11872>
nop
mov    0x8074a04,%eax
mov    %ebp,%edx
xor    %ecx,%ecx
sub    %eax,%edx
jmp    805ba52 <__sprintf_chk@plt+0x11912>
mov    %ebp,%eax
xor    %edx,%edx
xor    %ecx,%ecx
jmp    805ba52 <__sprintf_chk@plt+0x11912>
call   80652b0 <__sprintf_chk@plt+0x1b170>
call   8049ac0 <__stack_chk_fail@plt>
movl   $0x806e423,0xc(%esp)
movl   $0x62,0x8(%esp)
movl   $0x806e409,0x4(%esp)
movl   $0x806e41b,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e423,0xc(%esp)
movl   $0x61,0x8(%esp)
movl   $0x806e409,0x4(%esp)
movl   $0x806e417,(%esp)
call   804a110 <__assert_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x58(%esp),%edx
mov    0x54(%esp),%esi
movl   $0x0,0x24(%esp)
mov    (%eax),%edi
mov    %edx,0x18(%esp)
mov    %gs:0x14,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %eax,0x1c(%esp)
cmp    %esi,%edi
mov    %edi,%ebp
movl   $0x0,0x28(%esp)
jae    805bb73 <__sprintf_chk@plt+0x11a33>
lea    0x24(%esp),%ebx
jmp    805bb38 <__sprintf_chk@plt+0x119f8>
xchg   %ax,%ax
lea    -0x1(%eax),%ecx
mov    %edi,%ebp
cmp    $0xfffffffc,%ecx
ja     805bb5b <__sprintf_chk@plt+0x11a1b>
add    %eax,%edi
cmp    %edi,%esi
jbe    805bb73 <__sprintf_chk@plt+0x11a33>
mov    0x18(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xfffffffe,%eax
jne    805bb28 <__sprintf_chk@plt+0x119e8>
mov    $0x1,%eax
add    %eax,%edi
cmp    %edi,%esi
movl   $0x0,(%ebx)
movl   $0x0,0x4(%ebx)
ja     805bb38 <__sprintf_chk@plt+0x119f8>
mov    0x1c(%esp),%eax
cmp    %edi,%esi
mov    %ebp,(%eax)
mov    $0x1,%eax
jb     805bb8c <__sprintf_chk@plt+0x11a4c>
mov    0x5c(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
jne    805bba8 <__sprintf_chk@plt+0x11a68>
mov    0x2c(%esp),%edx
xor    %gs:0x14,%edx
jne    805bbd3 <__sprintf_chk@plt+0x11a93>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   8049c20 <mbrtowc@plt>
cmp    %eax,0x5c(%esp)
setb   %al
jmp    805bb8c <__sprintf_chk@plt+0x11a4c>
call   8049ac0 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x1,(%esp)
call   804fa00 <__sprintf_chk@plt+0x58c0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    %eax,%edi
mov    0x44(%esp),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     805bd48 <__sprintf_chk@plt+0x11c08>
mov    0x48(%esp),%eax
test   %eax,%eax
je     805bcf0 <__sprintf_chk@plt+0x11bb0>
mov    %edi,%eax
mov    0x48(%esp),%esi
mov    %ebp,%edi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    %eax,%ebp
movl   $0xffffffff,0x18(%esp)
jmp    805bc90 <__sprintf_chk@plt+0x11b50>
lea    0x0(%esi),%esi
mov    0x4c(%esp),%edx
mov    %esi,0x4(%esp)
imul   %edx,%eax
add    0x48(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
mov    $0x1,%ecx
test   %eax,%eax
movzbl 0x1f(%esp),%eax
cmovne %ecx,%eax
mov    %al,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
add    0x4c(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     805bcc8 <__sprintf_chk@plt+0x11b88>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a050 <strncmp@plt>
test   %eax,%eax
jne    805bc7e <__sprintf_chk@plt+0x11b3e>
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
cmp    %ebp,%eax
je     805bce0 <__sprintf_chk@plt+0x11ba0>
mov    0x18(%esp),%eax
cmp    $0xffffffff,%eax
jne    805bc50 <__sprintf_chk@plt+0x11b10>
mov    %ebx,0x18(%esp)
jmp    805bc7e <__sprintf_chk@plt+0x11b3e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1f(%esp)
jne    805bd55 <__sprintf_chk@plt+0x11c15>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    0x40(%esp),%esi
movl   $0xffffffff,0x18(%esp)
jmp    805bd1b <__sprintf_chk@plt+0x11bdb>
lea    0x0(%esi),%esi
movb   $0x1,0x1f(%esp)
mov    0x44(%esp),%eax
add    $0x1,%ebx
mov    (%eax,%ebx,4),%ebp
test   %ebp,%ebp
je     805bcc8 <__sprintf_chk@plt+0x11b88>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804a050 <strncmp@plt>
test   %eax,%eax
jne    805bd0d <__sprintf_chk@plt+0x11bcd>
mov    %ebp,(%esp)
call   8049d70 <strlen@plt>
cmp    %edi,%eax
je     805bce0 <__sprintf_chk@plt+0x11ba0>
cmpl   $0xffffffff,0x18(%esp)
jne    805bd08 <__sprintf_chk@plt+0x11bc8>
mov    %ebx,0x18(%esp)
jmp    805bd0d <__sprintf_chk@plt+0x11bcd>
movl   $0xffffffff,0x18(%esp)
jmp    805bcd3 <__sprintf_chk@plt+0x11b93>
mov    $0xfffffffe,%eax
jmp    805bcd7 <__sprintf_chk@plt+0x11b97>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x38(%esp)
movl   $0x5,0x8(%esp)
je     805bde8 <__sprintf_chk@plt+0x11ca8>
movl   $0x806e448,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,%esi
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8062d10 <__sprintf_chk@plt+0x18bd0>
mov    0x34(%esp),%edx
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,%ebx
call   8061180 <__sprintf_chk@plt+0x17040>
mov    %ebx,0x10(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049c40 <error@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x806e42d,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,%esi
jmp    805bd8a <__sprintf_chk@plt+0x11c4a>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x80742c4,%edi
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x806e465,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x18(%esp)
call   8049a90 <dcgettext@plt>
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
mov    (%esi),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    805be9d <__sprintf_chk@plt+0x11d5d>
jmp    805bee8 <__sprintf_chk@plt+0x11da8>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
mov    %ebx,%edi
call   8062ea0 <__sprintf_chk@plt+0x18d60>
movl   $0x806e47a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80742c4,%eax
mov    %eax,(%esp)
call   804a010 <__fprintf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x1,%esi
add    0x18(%esp),%ebx
mov    (%eax,%esi,4),%ebp
test   %ebp,%ebp
je     805bee8 <__sprintf_chk@plt+0x11da8>
test   %esi,%esi
je     805be60 <__sprintf_chk@plt+0x11d20>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049a50 <memcmp@plt>
test   %eax,%eax
jne    805be60 <__sprintf_chk@plt+0x11d20>
mov    %ebp,(%esp)
call   8062ea0 <__sprintf_chk@plt+0x18d60>
movl   $0x806e482,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80742c4,%eax
mov    %eax,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    805be8b <__sprintf_chk@plt+0x11d4b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80742c4,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    805bf06 <__sprintf_chk@plt+0x11dc6>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xa,0x44(%esp)
mov    %eax,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049f70 <__overflow@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    %eax,%edi
mov    0x48(%esp),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     805c112 <__sprintf_chk@plt+0x11fd2>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     805c020 <__sprintf_chk@plt+0x11ee0>
mov    %edi,%eax
mov    0x4c(%esp),%esi
mov    %ebp,%edi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    %eax,%ebp
movl   $0xffffffff,0x18(%esp)
jmp    805bfb0 <__sprintf_chk@plt+0x11e70>
lea    0x0(%esi),%esi
mov    0x50(%esp),%edx
mov    %esi,0x4(%esp)
imul   %edx,%eax
add    0x4c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
mov    $0x1,%ecx
test   %eax,%eax
movzbl 0x1f(%esp),%eax
cmovne %ecx,%eax
mov    %al,0x1f(%esp)
mov    0x48(%esp),%eax
add    $0x1,%ebx
add    0x50(%esp),%esi
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     805bfe8 <__sprintf_chk@plt+0x11ea8>
mov    0x44(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804a050 <strncmp@plt>
test   %eax,%eax
jne    805bf9e <__sprintf_chk@plt+0x11e5e>
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
cmp    %eax,%ebp
je     805c010 <__sprintf_chk@plt+0x11ed0>
mov    0x18(%esp),%eax
cmp    $0xffffffff,%eax
jne    805bf70 <__sprintf_chk@plt+0x11e30>
mov    %ebx,0x18(%esp)
jmp    805bf9e <__sprintf_chk@plt+0x11e5e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1f(%esp)
jne    805c078 <__sprintf_chk@plt+0x11f38>
cmpl   $0xffffffff,0x18(%esp)
je     805c112 <__sprintf_chk@plt+0x11fd2>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x0,0x1f(%esp)
xor    %ebx,%ebx
mov    0x44(%esp),%esi
movl   $0xffffffff,0x18(%esp)
jmp    805c04b <__sprintf_chk@plt+0x11f0b>
lea    0x0(%esi),%esi
movb   $0x1,0x1f(%esp)
mov    0x48(%esp),%eax
add    $0x1,%ebx
mov    (%eax,%ebx,4),%ebp
test   %ebp,%ebp
je     805bfe8 <__sprintf_chk@plt+0x11ea8>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804a050 <strncmp@plt>
test   %eax,%eax
jne    805c03d <__sprintf_chk@plt+0x11efd>
mov    %ebp,(%esp)
call   8049d70 <strlen@plt>
cmp    %eax,%edi
je     805c010 <__sprintf_chk@plt+0x11ed0>
cmpl   $0xffffffff,0x18(%esp)
jne    805c038 <__sprintf_chk@plt+0x11ef8>
mov    %ebx,0x18(%esp)
jmp    805c03d <__sprintf_chk@plt+0x11efd>
movl   $0x5,0x8(%esp)
movl   $0x806e448,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,%ebx
mov    0x40(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8062d10 <__sprintf_chk@plt+0x18bd0>
movl   $0x6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
call   8061180 <__sprintf_chk@plt+0x17040>
mov    %esi,0x10(%esp)
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
call   8049c40 <error@plt>
mov    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   805be00 <__sprintf_chk@plt+0x11cc0>
call   *0x54(%esp)
mov    $0xffffffff,%eax
jmp    805c002 <__sprintf_chk@plt+0x11ec2>
movl   $0x5,0x8(%esp)
movl   $0x806e42d,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,%ebx
jmp    805c096 <__sprintf_chk@plt+0x11f56>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x3c(%esp),%edi
mov    (%esi),%ebp
test   %ebp,%ebp
je     805c183 <__sprintf_chk@plt+0x12043>
mov    0x38(%esp),%ebx
add    $0x4,%esi
jmp    805c16b <__sprintf_chk@plt+0x1202b>
xchg   %ax,%ax
mov    (%esi),%ebp
add    %edi,%ebx
add    $0x4,%esi
test   %ebp,%ebp
je     805c183 <__sprintf_chk@plt+0x12043>
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
test   %eax,%eax
jne    805c160 <__sprintf_chk@plt+0x12020>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x8074b24
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x8074b20
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x8074320,%eax
mov    %eax,(%esp)
call   8069220 <fts_children+0x320>
test   %eax,%eax
je     805c1d9 <__sprintf_chk@plt+0x12099>
cmpb   $0x0,0x8074b20
je     805c1f0 <__sprintf_chk@plt+0x120b0>
call   8049e90 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    805c1f0 <__sprintf_chk@plt+0x120b0>
mov    0x80742c4,%eax
mov    %eax,(%esp)
call   8069220 <fts_children+0x320>
test   %eax,%eax
jne    805c248 <__sprintf_chk@plt+0x12108>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x806c361,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,%ebx
mov    0x8074b24,%eax
test   %eax,%eax
je     805c255 <__sprintf_chk@plt+0x12115>
mov    %eax,(%esp)
call   8061db0 <__sprintf_chk@plt+0x17c70>
mov    %eax,%esi
call   8049e90 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x806c38f,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c40 <error@plt>
mov    0x807426c,%eax
mov    %eax,(%esp)
call   8049980 <_exit@plt>
call   8049e90 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x806e484,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049c40 <error@plt>
jmp    805c248 <__sprintf_chk@plt+0x12108>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
jmp    80499d0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   805e760 <__sprintf_chk@plt+0x14620>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
jmp    805d7d0 <__sprintf_chk@plt+0x13690>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebx
test   $0x8,%al
jne    805c308 <__sprintf_chk@plt+0x121c8>
test   $0x10,%al
je     805c348 <__sprintf_chk@plt+0x12208>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    805e760 <__sprintf_chk@plt+0x14620>
nop
and    $0x10,%eax
mov    %eax,%edi
jne    805c360 <__sprintf_chk@plt+0x12220>
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,%ebp
call   804a050 <strncmp@plt>
test   %eax,%eax
jne    805c3c8 <__sprintf_chk@plt+0x12288>
movsbl (%ebx,%ebp,1),%eax
cmp    $0x2f,%eax
cmovne %eax,%edi
add    $0x1c,%esp
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,0x34(%esp)
mov    %esi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8049950 <strcmp@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8065270 <__sprintf_chk@plt+0x1b130>
mov    %eax,%edi
mov    %eax,%edx
jmp    805c389 <__sprintf_chk@plt+0x12249>
xchg   %ax,%ax
movb   $0x0,(%eax)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   805e760 <__sprintf_chk@plt+0x14620>
test   %eax,%eax
jle    805c3ab <__sprintf_chk@plt+0x1226b>
lea    0x1(%ebx),%edx
movb   $0x2f,(%ebx)
movl   $0x2f,0x4(%esp)
mov    %edx,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    805c370 <__sprintf_chk@plt+0x12230>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   805e760 <__sprintf_chk@plt+0x14620>
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   80499d0 <free@plt>
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
mov    %eax,%edi
mov    %edi,%eax
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
mov    %eax,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x6c,%esp
mov    0x80(%esp),%ecx
lea    0x28(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x84(%esp),%esi
movb   $0x0,0x24(%esp)
cmpb   $0x0,0x24(%esp)
mov    %ecx,0x34(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
jne    805c4de <__sprintf_chk@plt+0x1239e>
movzbl (%ecx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806e580(,%edx,4),%edx
bt     %eax,%edx
jae    805c580 <__sprintf_chk@plt+0x12440>
movl   $0x1,0x38(%esp)
movsbl (%ecx),%edx
movb   $0x1,0x3c(%esp)
mov    %edx,0x40(%esp)
test   %edx,%edx
movb   $0x1,0x30(%esp)
jne    805c49e <__sprintf_chk@plt+0x1235e>
mov    0x5c(%esp),%edi
xor    %gs:0x14,%edi
mov    %ebx,%eax
jne    805c62a <__sprintf_chk@plt+0x124ea>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
cmpb   $0x0,0x3c(%esp)
mov    0x34(%esp),%ebp
je     805c570 <__sprintf_chk@plt+0x12430>
mov    %edx,(%esp)
call   8049a20 <towlower@plt>
mov    %ebx,%edx
mov    0x38(%esp),%ecx
shl    $0x5,%edx
sub    %ebx,%edx
add    %edx,%eax
xor    %edx,%edx
div    %esi
add    %ebp,%ecx
cmpb   $0x0,0x24(%esp)
mov    %ecx,0x34(%esp)
movb   $0x0,0x30(%esp)
mov    %edx,%ebx
je     805c430 <__sprintf_chk@plt+0x122f0>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x34(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     805c488 <__sprintf_chk@plt+0x12348>
cmp    $0xfffffffe,%eax
je     805c5a0 <__sprintf_chk@plt+0x12460>
test   %eax,%eax
jne    805c598 <__sprintf_chk@plt+0x12458>
mov    0x34(%esp),%eax
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%eax)
jne    805c606 <__sprintf_chk@plt+0x124c6>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    805c5e2 <__sprintf_chk@plt+0x124a2>
xor    %edx,%edx
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
movb   $0x1,0x3c(%esp)
call   8049a00 <mbsinit@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805c45f <__sprintf_chk@plt+0x1231f>
movb   $0x0,0x24(%esp)
jmp    805c45f <__sprintf_chk@plt+0x1231f>
nop
movsbl 0x0(%ebp),%eax
jmp    805c4b5 <__sprintf_chk@plt+0x12375>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805c5be <__sprintf_chk@plt+0x1247e>
movb   $0x1,0x24(%esp)
jmp    805c4de <__sprintf_chk@plt+0x1239e>
xchg   %ax,%ax
mov    0x40(%esp),%edx
jmp    805c548 <__sprintf_chk@plt+0x12408>
xchg   %ax,%ax
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    0x40(%esp),%edx
movb   $0x0,0x3c(%esp)
mov    %eax,0x38(%esp)
jmp    805c499 <__sprintf_chk@plt+0x12359>
movl   $0x806e4d1,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e491,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e4d1,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4bf,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e4d1,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4a8,(%esp)
call   804a110 <__assert_fail@plt>
call   8049ac0 <__stack_chk_fail@plt>
nop
push   %ebx
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    %ecx,%ebx
and    $0x2,%ebx
and    $0x20,%ecx
movzbl (%edx),%eax
je     805c6e8 <__sprintf_chk@plt+0x125a8>
test   %ebx,%ebx
je     805c6b8 <__sprintf_chk@plt+0x12578>
add    $0x1,%edx
cmp    $0x2b,%al
je     805c7e8 <__sprintf_chk@plt+0x126a8>
jle    805c788 <__sprintf_chk@plt+0x12648>
cmp    $0x40,%al
je     805c7e8 <__sprintf_chk@plt+0x126a8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
jle    805c7a8 <__sprintf_chk@plt+0x12668>
cmp    $0x5b,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
movzbl (%edx),%eax
jmp    805c64e <__sprintf_chk@plt+0x1250e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     805c7f8 <__sprintf_chk@plt+0x126b8>
jle    805c7b8 <__sprintf_chk@plt+0x12678>
cmp    $0x5b,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
cmp    $0x5c,%al
jne    805c7bc <__sprintf_chk@plt+0x1267c>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805c7f8 <__sprintf_chk@plt+0x126b8>
jg     805c688 <__sprintf_chk@plt+0x12548>
cmp    $0x21,%al
je     805c7f8 <__sprintf_chk@plt+0x126b8>
cmp    $0x2a,%al
nop
je     805c7b0 <__sprintf_chk@plt+0x12670>
test   %al,%al
jne    805c7bc <__sprintf_chk@plt+0x1267c>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     805c748 <__sprintf_chk@plt+0x12608>
add    $0x1,%edx
cmp    $0x2b,%al
je     805c70e <__sprintf_chk@plt+0x125ce>
jle    805c770 <__sprintf_chk@plt+0x12630>
cmp    $0x40,%al
je     805c70e <__sprintf_chk@plt+0x125ce>
lea    0x0(%esi,%eiz,1),%esi
jle    805c7c8 <__sprintf_chk@plt+0x12688>
cmp    $0x5b,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
movzbl (%edx),%eax
jmp    805c6ec <__sprintf_chk@plt+0x125ac>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     805c766 <__sprintf_chk@plt+0x12626>
lea    0x0(%esi,%eiz,1),%esi
jle    805c7d8 <__sprintf_chk@plt+0x12698>
cmp    $0x5b,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
cmp    $0x5c,%al
jne    805c766 <__sprintf_chk@plt+0x12626>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805c766 <__sprintf_chk@plt+0x12626>
jg     805c718 <__sprintf_chk@plt+0x125d8>
cmp    $0x21,%al
je     805c766 <__sprintf_chk@plt+0x12626>
cmp    $0x2a,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
test   %al,%al
nop
lea    0x0(%esi,%eiz,1),%esi
je     805c6de <__sprintf_chk@plt+0x1259e>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    805c748 <__sprintf_chk@plt+0x12608>
xchg   %ax,%ax
cmp    $0x21,%al
je     805c70e <__sprintf_chk@plt+0x125ce>
cmp    $0x2a,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
test   %al,%al
jne    805c70e <__sprintf_chk@plt+0x125ce>
xor    %eax,%eax
xchg   %ax,%ax
jmp    805c6e0 <__sprintf_chk@plt+0x125a0>
lea    0x0(%esi),%esi
cmp    $0x21,%al
je     805c7e8 <__sprintf_chk@plt+0x126a8>
cmp    $0x2a,%al
xchg   %ax,%ax
je     805c7b0 <__sprintf_chk@plt+0x12670>
test   %al,%al
jne    805c67e <__sprintf_chk@plt+0x1253e>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    805c6e0 <__sprintf_chk@plt+0x125a0>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
jne    805c67e <__sprintf_chk@plt+0x1253e>
mov    $0x1,%eax
pop    %ebx
ret
nop
cmp    $0x3f,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    805c6b8 <__sprintf_chk@plt+0x12578>
nop
cmp    $0x3f,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
jmp    805c70e <__sprintf_chk@plt+0x125ce>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%al
lea    0x0(%esi),%esi
je     805c7b0 <__sprintf_chk@plt+0x12670>
jmp    805c766 <__sprintf_chk@plt+0x12626>
nop
movzbl (%edx),%eax
cmp    $0x28,%al
lea    0x0(%esi),%esi
jne    805c64e <__sprintf_chk@plt+0x1250e>
jmp    805c7b0 <__sprintf_chk@plt+0x12670>
movzbl 0x1(%edx),%eax
cmp    $0x28,%al
je     805c7b0 <__sprintf_chk@plt+0x12670>
mov    %ecx,%edx
jmp    805c6b8 <__sprintf_chk@plt+0x12578>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x4,(%esp)
call   80651c0 <__sprintf_chk@plt+0x1b080>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    (%edi),%ebx
test   %ebx,%ebx
jne    805c866 <__sprintf_chk@plt+0x12726>
jmp    805c886 <__sprintf_chk@plt+0x12746>
lea    0x0(%esi),%esi
cmp    $0x1,%eax
jne    805c858 <__sprintf_chk@plt+0x12718>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %esi,%esi
je     805c886 <__sprintf_chk@plt+0x12746>
mov    %esi,%ebx
mov    0x4(%ebx),%eax
mov    (%ebx),%esi
test   %eax,%eax
jne    805c848 <__sprintf_chk@plt+0x12708>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   805db40 <__sprintf_chk@plt+0x13a00>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %esi,%esi
jne    805c864 <__sprintf_chk@plt+0x12724>
mov    %edi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    80499d0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x805c2e0,%eax
push   %edi
mov    $0x8049b60,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%esi
mov    0x34(%esp),%ebx
test   $0x10000000,%esi
cmove  %eax,%edi
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
sete   %al
test   $0x40000000,%esi
mov    %eax,%ebp
jne    805c930 <__sprintf_chk@plt+0x127f0>
movzbl (%ebx),%eax
test   %al,%al
je     805c930 <__sprintf_chk@plt+0x127f0>
mov    %ebp,%edx
add    $0x1,%ebx
test   %dl,%dl
je     805c8ff <__sprintf_chk@plt+0x127bf>
jmp    805c92b <__sprintf_chk@plt+0x127eb>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     805c930 <__sprintf_chk@plt+0x127f0>
add    $0x1,%ebx
cmp    $0x2f,%al
movzbl (%ebx),%eax
jne    805c8f8 <__sprintf_chk@plt+0x127b8>
cmp    $0x2f,%al
je     805c8fc <__sprintf_chk@plt+0x127bc>
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
movzbl (%ebx),%eax
sete   %cl
test   %al,%al
je     805c93a <__sprintf_chk@plt+0x127fa>
test   %cl,%cl
je     805c8fc <__sprintf_chk@plt+0x127bc>
mov    $0x1,%ebp
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ecx,%ebp
jmp    805c930 <__sprintf_chk@plt+0x127f0>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x14(%esp)
je     805cb6e <__sprintf_chk@plt+0x12a2e>
mov    0x14(%esp),%eax
xor    %ebp,%ebp
mov    %ebp,%edi
mov    0x4(%eax),%edx
test   %edx,%edx
jne    805ca5d <__sprintf_chk@plt+0x1291d>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     805cb50 <__sprintf_chk@plt+0x12a10>
mov    0x14(%esp),%ecx
mov    0x44(%esp),%esi
mov    0x8(%ecx),%eax
mov    0xc(%ecx),%ebx
mov    %eax,%ebp
and    $0x40000000,%eax
and    $0x8,%ebp
mov    %eax,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049c00 <strcpy@plt>
test   %ebp,%ebp
je     805ca01 <__sprintf_chk@plt+0x128c1>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   805d5c0 <__sprintf_chk@plt+0x13480>
test   %eax,%eax
jne    805c9db <__sprintf_chk@plt+0x1289b>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049f50 <strrchr@plt>
test   %eax,%eax
je     805ca18 <__sprintf_chk@plt+0x128d8>
movb   $0x0,(%eax)
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   805d5c0 <__sprintf_chk@plt+0x13480>
test   %eax,%eax
je     805c9b4 <__sprintf_chk@plt+0x12874>
mov    %edi,%ebp
xor    %ebx,%ebx
mov    %ebp,(%esp)
call   80499d0 <free@plt>
mov    0x14(%esp),%eax
mov    0x8(%eax),%eax
add    $0x2c,%esp
shr    $0x1d,%eax
xor    $0x1,%eax
and    $0x1,%eax
xor    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   805d5c0 <__sprintf_chk@plt+0x13480>
test   %eax,%eax
jne    805c9db <__sprintf_chk@plt+0x1289b>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
test   %eax,%eax
jne    805ca40 <__sprintf_chk@plt+0x12900>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     805ca40 <__sprintf_chk@plt+0x12900>
add    $0x1,%eax
mov    %eax,%esi
jne    805c994 <__sprintf_chk@plt+0x12854>
nop
mov    0x14(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     805cb44 <__sprintf_chk@plt+0x12a04>
mov    0x4(%eax),%edx
mov    %eax,0x14(%esp)
test   %edx,%edx
je     805c970 <__sprintf_chk@plt+0x12830>
mov    %eax,%ecx
mov    0xc(%eax),%eax
mov    0x14(%ecx),%ecx
test   %ecx,%ecx
mov    %ecx,0x18(%esp)
je     805ca40 <__sprintf_chk@plt+0x12900>
mov    %eax,%esi
movl   $0x0,0xc(%esp)
mov    %edi,0x1c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%ebp
mov    $0x805c2e0,%ecx
mov    $0x8049b60,%edi
mov    (%esi),%eax
test   $0x10000000,%ebp
cmove  %ecx,%edi
mov    0x44(%esp),%ecx
mov    %eax,0x10(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   *%edi
test   %eax,%eax
sete   %dl
test   $0x40000000,%ebp
mov    %edx,%ecx
jne    805cb18 <__sprintf_chk@plt+0x129d8>
mov    0x44(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     805cb18 <__sprintf_chk@plt+0x129d8>
test   %dl,%dl
jne    805cb0d <__sprintf_chk@plt+0x129cd>
mov    0x44(%esp),%ecx
lea    0x1(%ecx),%ebx
jmp    805cadf <__sprintf_chk@plt+0x1299f>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     805cb1c <__sprintf_chk@plt+0x129dc>
add    $0x1,%ebx
cmp    $0x2f,%al
movzbl (%ebx),%eax
jne    805cad8 <__sprintf_chk@plt+0x12998>
cmp    $0x2f,%al
je     805cadc <__sprintf_chk@plt+0x1299c>
mov    0x10(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
movzbl (%ebx),%eax
sete   %dl
mov    %edx,%ecx
test   %al,%al
je     805cb18 <__sprintf_chk@plt+0x129d8>
test   %dl,%dl
je     805cadc <__sprintf_chk@plt+0x1299c>
mov    0x1c(%esp),%ebp
jmp    805c9dd <__sprintf_chk@plt+0x1289d>
xchg   %ax,%ax
test   %cl,%cl
jne    805cb0d <__sprintf_chk@plt+0x129cd>
addl   $0x1,0xc(%esp)
add    $0x8,%esi
mov    0x18(%esp),%eax
cmp    %eax,0xc(%esp)
jne    805ca80 <__sprintf_chk@plt+0x12940>
mov    0x14(%esp),%eax
mov    0x1c(%esp),%edi
mov    (%eax),%eax
test   %eax,%eax
jne    805ca4e <__sprintf_chk@plt+0x1290e>
mov    %edi,%ebp
mov    $0x1,%ebx
jmp    805c9df <__sprintf_chk@plt+0x1289f>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %eax,%edi
jmp    805c978 <__sprintf_chk@plt+0x12838>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebx
mov    0x40(%esp),%edi
mov    0x44(%esp),%ebp
test   $0x10000000,%ebx
je     805cc28 <__sprintf_chk@plt+0x12ae8>
mov    %ebx,%edx
movzbl 0x0(%ebp),%eax
and    $0x2,%edx
test   $0x20,%bl
jne    805ccf8 <__sprintf_chk@plt+0x12bb8>
test   %edx,%edx
mov    %ebp,%edx
je     805cd70 <__sprintf_chk@plt+0x12c30>
add    $0x1,%edx
cmp    $0x2b,%al
je     805cbde <__sprintf_chk@plt+0x12a9e>
jle    805ce50 <__sprintf_chk@plt+0x12d10>
cmp    $0x40,%al
je     805cbde <__sprintf_chk@plt+0x12a9e>
lea    0x0(%esi,%eiz,1),%esi
jle    805cec8 <__sprintf_chk@plt+0x12d88>
cmp    $0x5b,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
movzbl (%edx),%eax
jmp    805cbbb <__sprintf_chk@plt+0x12a7b>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x40,%al
je     805cf08 <__sprintf_chk@plt+0x12dc8>
jle    805cd98 <__sprintf_chk@plt+0x12c58>
cmp    $0x5b,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
movzbl (%edx),%eax
add    $0x1,%edx
cmp    $0x2b,%al
je     805cf08 <__sprintf_chk@plt+0x12dc8>
jg     805cbe8 <__sprintf_chk@plt+0x12aa8>
cmp    $0x21,%al
je     805cf08 <__sprintf_chk@plt+0x12dc8>
cmp    $0x2a,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
test   %al,%al
jne    805cbfe <__sprintf_chk@plt+0x12abe>
lea    0x0(%esi),%esi
mov    (%edi),%esi
test   %esi,%esi
je     805cc39 <__sprintf_chk@plt+0x12af9>
mov    0x4(%esi),%eax
test   %eax,%eax
je     805cce0 <__sprintf_chk@plt+0x12ba0>
movl   $0x18,(%esp)
call   80651c0 <__sprintf_chk@plt+0x1b080>
mov    %ebx,%ecx
mov    $0x805c2b0,%edx
and    $0x10,%ecx
mov    $0x805c3e0,%ecx
movl   $0x0,0x4(%eax)
mov    %eax,%esi
mov    %ebx,0x8(%eax)
mov    $0x805c290,%eax
cmovne %eax,%edx
mov    $0x805c2d0,%eax
cmovne %ecx,%eax
movl   $0x805c280,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   805d840 <__sprintf_chk@plt+0x13700>
mov    %eax,0xc(%esi)
mov    (%edi),%eax
mov    %eax,(%esi)
mov    %esi,(%edi)
mov    %ebp,(%esp)
and    $0x10000002,%ebx
call   8065270 <__sprintf_chk@plt+0x1b130>
cmp    $0x10000000,%ebx
mov    %eax,%edi
je     805cdf8 <__sprintf_chk@plt+0x12cb8>
mov    %edi,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   805e160 <__sprintf_chk@plt+0x14020>
cmp    %edi,%eax
je     805cdeb <__sprintf_chk@plt+0x12cab>
mov    %edi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80499d0 <free@plt>
mov    0x8(%esi),%eax
xor    %ebx,%eax
test   $0x60000018,%eax
je     805cc9d <__sprintf_chk@plt+0x12b5d>
jmp    805cc39 <__sprintf_chk@plt+0x12af9>
lea    0x0(%esi,%eiz,1),%esi
test   %edx,%edx
mov    %ebp,%edx
jne    805cc01 <__sprintf_chk@plt+0x12ac1>
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805cf20 <__sprintf_chk@plt+0x12de0>
jle    805ce28 <__sprintf_chk@plt+0x12ce8>
cmp    $0x40,%al
je     805cf20 <__sprintf_chk@plt+0x12de0>
nop
lea    0x0(%esi,%eiz,1),%esi
jle    805cef0 <__sprintf_chk@plt+0x12db0>
cmp    $0x5b,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
cmp    $0x5c,%al
lea    0x0(%esi,%eiz,1),%esi
jne    805ce40 <__sprintf_chk@plt+0x12d00>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
jmp    805cd02 <__sprintf_chk@plt+0x12bc2>
nop
cmp    $0x40,%al
je     805cd8a <__sprintf_chk@plt+0x12c4a>
jle    805ced8 <__sprintf_chk@plt+0x12d98>
cmp    $0x5b,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
cmp    $0x5c,%al
jne    805cd8a <__sprintf_chk@plt+0x12c4a>
cmpb   $0x0,0x1(%edx)
setne  %dl
movzbl %dl,%edx
add    %ecx,%edx
movzbl (%edx),%eax
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2b,%al
lea    0x1(%edx),%ecx
je     805cd8a <__sprintf_chk@plt+0x12c4a>
jg     805cd48 <__sprintf_chk@plt+0x12c08>
cmp    $0x21,%al
je     805cd8a <__sprintf_chk@plt+0x12c4a>
cmp    $0x2a,%al
nop
je     805cda0 <__sprintf_chk@plt+0x12c60>
test   %al,%al
je     805cc28 <__sprintf_chk@plt+0x12ae8>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    805cd70 <__sprintf_chk@plt+0x12c30>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
jne    805cbfe <__sprintf_chk@plt+0x12abe>
mov    (%edi),%esi
test   %esi,%esi
je     805cdb0 <__sprintf_chk@plt+0x12c70>
cmpl   $0x1,0x4(%esi)
je     805ceb0 <__sprintf_chk@plt+0x12d70>
movl   $0x18,(%esp)
call   80651c0 <__sprintf_chk@plt+0x1b080>
mov    (%edi),%edx
movl   $0x1,0x4(%eax)
mov    %eax,%esi
mov    %ebx,0x8(%eax)
mov    %edx,(%eax)
mov    %eax,(%edi)
mov    0x14(%esi),%edx
cmp    0x10(%esi),%edx
je     805ce70 <__sprintf_chk@plt+0x12d30>
mov    0xc(%esi),%eax
lea    (%eax,%edx,8),%eax
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%esi)
mov    %ebp,(%eax)
mov    %ebx,0x4(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    %eax,%ecx
jmp    805ce16 <__sprintf_chk@plt+0x12cd6>
xchg   %ax,%ax
add    %edx,%ebx
add    $0x1,%ecx
lea    0x1(%ebx),%edx
movzbl (%ebx),%ebx
test   %bl,%bl
mov    %bl,-0x1(%ecx)
je     805ccb9 <__sprintf_chk@plt+0x12b79>
xor    %ebx,%ebx
cmpb   $0x5c,(%edx)
jne    805ce00 <__sprintf_chk@plt+0x12cc0>
xor    %ebx,%ebx
cmpb   $0x0,0x1(%edx)
setne  %bl
jmp    805ce00 <__sprintf_chk@plt+0x12cc0>
cmp    $0x21,%al
je     805cf20 <__sprintf_chk@plt+0x12de0>
cmp    $0x2a,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
test   %al,%al
je     805cc28 <__sprintf_chk@plt+0x12ae8>
movzbl 0x1(%edx),%eax
mov    %ecx,%edx
jmp    805cd02 <__sprintf_chk@plt+0x12bc2>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x21,%al
je     805cbde <__sprintf_chk@plt+0x12a9e>
cmp    $0x2a,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
test   %al,%al
je     805cc28 <__sprintf_chk@plt+0x12ae8>
jmp    805cbde <__sprintf_chk@plt+0x12a9e>
lea    0x0(%esi),%esi
mov    0xc(%esi),%ecx
test   %ecx,%ecx
je     805cf35 <__sprintf_chk@plt+0x12df5>
cmp    $0x15555554,%edx
ja     805cf4c <__sprintf_chk@plt+0x12e0c>
lea    0x1(%edx),%eax
shr    %eax
add    %eax,%edx
lea    0x0(,%edx,8),%eax
mov    %edx,0x10(%esi)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x14(%esi),%edx
mov    %eax,0xc(%esi)
jmp    805cddd <__sprintf_chk@plt+0x12c9d>
nop
mov    0x8(%esi),%eax
xor    %ebx,%eax
test   $0x20000000,%eax
je     805cdce <__sprintf_chk@plt+0x12c8e>
jmp    805cdb0 <__sprintf_chk@plt+0x12c70>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
jmp    805cbde <__sprintf_chk@plt+0x12a9e>
lea    0x0(%esi),%esi
cmp    $0x3f,%al
lea    0x0(%esi),%esi
je     805cda0 <__sprintf_chk@plt+0x12c60>
jmp    805cd8a <__sprintf_chk@plt+0x12c4a>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3f,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    805ce40 <__sprintf_chk@plt+0x12d00>
lea    0x0(%esi),%esi
movzbl (%edx),%eax
cmp    $0x28,%al
lea    0x0(%esi),%esi
jne    805cc01 <__sprintf_chk@plt+0x12ac1>
jmp    805cda0 <__sprintf_chk@plt+0x12c60>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x1(%edx),%eax
cmp    $0x28,%al
je     805cda0 <__sprintf_chk@plt+0x12c60>
mov    %ecx,%edx
xchg   %ax,%ax
jmp    805cd02 <__sprintf_chk@plt+0x12bc2>
test   %edx,%edx
jne    805ce8e <__sprintf_chk@plt+0x12d4e>
mov    $0x40,%eax
mov    $0x8,%edx
jmp    805ce95 <__sprintf_chk@plt+0x12d55>
call   80652b0 <__sprintf_chk@plt+0x1b170>
jmp    805cf60 <__sprintf_chk@plt+0x12e20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x68(%esp),%eax
mov    0x70(%esp),%edi
cmpb   $0x2d,(%eax)
mov    %edi,%ecx
mov    %edi,0x18(%esp)
mov    %cl,0x2f(%esp)
je     805cfe8 <__sprintf_chk@plt+0x12ea8>
movl   $0x806c613,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x3c(%esp)
call   8049b90 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     805d003 <__sprintf_chk@plt+0x12ec3>
movb   $0x0,0x1c(%esp)
xor    %ebx,%ebx
xor    %ebp,%ebp
lea    0x3c(%esp),%edi
jmp    805cfb7 <__sprintf_chk@plt+0x12e77>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %dl,0x0(%ebp,%ebx,1)
add    $0x1,%ebx
mov    0x4(%esi),%edx
cmp    0x8(%esi),%edx
jae    805d010 <__sprintf_chk@plt+0x12ed0>
lea    0x1(%edx),%ecx
mov    %ecx,0x4(%esi)
movzbl (%edx),%edx
cmp    0x3c(%esp),%ebx
jne    805cfb0 <__sprintf_chk@plt+0x12e70>
mov    %ebp,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x14(%esp)
call   8065150 <__sprintf_chk@plt+0x1b010>
mov    0x14(%esp),%edx
mov    %eax,%ebp
jmp    805cfb0 <__sprintf_chk@plt+0x12e70>
xchg   %ax,%ax
cmpb   $0x0,0x1(%eax)
jne    805cf7e <__sprintf_chk@plt+0x12e3e>
movl   $0x0,0x3c(%esp)
mov    0x8074304,%esi
movb   $0x1,0x1c(%esp)
jmp    805cfa1 <__sprintf_chk@plt+0x12e61>
add    $0x4c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   8049f20 <__uflow@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edx
jne    805cfc8 <__sprintf_chk@plt+0x12e88>
testb  $0x20,(%esi)
jne    805d150 <__sprintf_chk@plt+0x13010>
call   8049e90 <__errno_location@plt>
cmpb   $0x0,0x1c(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x28(%esp)
je     805d16a <__sprintf_chk@plt+0x1302a>
lea    0x1(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
test   %ebx,%ebx
mov    %eax,%ebp
movzbl 0x18(%esp),%eax
mov    %al,0x0(%ebp,%ebx,1)
je     805d108 <__sprintf_chk@plt+0x12fc8>
mov    0x18(%esp),%edi
mov    %edi,%eax
cmp    -0x1(%ebp,%ebx,1),%al
setne  %al
movzbl %al,%eax
add    %eax,%ebx
lea    0x0(%ebp,%ebx,1),%eax
cmp    %eax,%ebp
mov    %eax,0x14(%esp)
jae    805d108 <__sprintf_chk@plt+0x12fc8>
mov    %edi,%eax
movzbl 0x2f(%esp),%edx
movzbl %al,%eax
add    %eax,%eax
mov    %eax,0x20(%esp)
lea    0x1(%ebp),%esi
jmp    805d0a9 <__sprintf_chk@plt+0x12f69>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    %edi,0x14(%esp)
jbe    805d108 <__sprintf_chk@plt+0x12fc8>
cmp    %dl,-0x1(%esi)
mov    %esi,%edi
lea    -0x1(%esi),%ebx
jne    805d0a0 <__sprintf_chk@plt+0x12f60>
mov    %edx,0x1c(%esp)
call   804a120 <__ctype_b_loc@plt>
mov    0x1c(%esp),%edx
mov    (%eax),%ecx
mov    0x20(%esp),%eax
movzwl (%ecx,%eax,1),%eax
test   $0x20,%ah
mov    %ax,0x18(%esp)
je     805d128 <__sprintf_chk@plt+0x12fe8>
cmp    %ebp,%ebx
je     805d0fa <__sprintf_chk@plt+0x12fba>
movzbl -0x2(%esi),%eax
testb  $0x20,0x1(%ecx,%eax,2)
jne    805d0f3 <__sprintf_chk@plt+0x12fb3>
jmp    805d128 <__sprintf_chk@plt+0x12fe8>
lea    0x0(%esi),%esi
movzbl -0x1(%ebx),%eax
testb  $0x20,0x1(%ecx,%eax,2)
je     805d128 <__sprintf_chk@plt+0x12fe8>
sub    $0x1,%ebx
cmp    %ebp,%ebx
jne    805d0e8 <__sprintf_chk@plt+0x12fa8>
mov    %esi,%ebp
add    $0x1,%esi
cmp    %edi,0x14(%esp)
ja     805d0a9 <__sprintf_chk@plt+0x12f69>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %eax,(%edi)
setne  %al
add    $0x4c,%esp
movzbl %al,%eax
pop    %ebx
neg    %eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%esp),%eax
movb   $0x0,(%ebx)
mov    %edx,0x18(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,%ebp
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   *0x60(%esp)
mov    0x18(%esp),%edx
jmp    805d0fc <__sprintf_chk@plt+0x12fbc>
xchg   %ax,%ax
call   8049e90 <__errno_location@plt>
cmpb   $0x0,0x1c(%esp)
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x24(%esp)
jne    805d044 <__sprintf_chk@plt+0x12f04>
mov    %esi,(%esp)
call   8049a40 <fclose@plt>
test   %eax,%eax
je     805d044 <__sprintf_chk@plt+0x12f04>
mov    0x28(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x24(%esp)
jmp    805d044 <__sprintf_chk@plt+0x12f04>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x8(%eax),%eax
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
mov    0xc(%esp),%ecx
cmp    0x8(%esi),%eax
jae    805d288 <__sprintf_chk@plt+0x13148>
mov    (%esi),%edx
lea    (%edx,%eax,8),%ebx
mov    %ebx,(%ecx)
mov    (%ebx),%eax
test   %eax,%eax
je     805d24e <__sprintf_chk@plt+0x1310e>
cmp    %eax,%edi
je     805d1fe <__sprintf_chk@plt+0x130be>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     805d247 <__sprintf_chk@plt+0x13107>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     805d224 <__sprintf_chk@plt+0x130e4>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     805d280 <__sprintf_chk@plt+0x13140>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
cmp    %edi,%eax
je     805d25d <__sprintf_chk@plt+0x1311d>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    805d258 <__sprintf_chk@plt+0x13118>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    805d230 <__sprintf_chk@plt+0x130f0>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     805d224 <__sprintf_chk@plt+0x130e4>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    805d224 <__sprintf_chk@plt+0x130e4>
call   804a080 <abort@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
mov    0x4(%edx),%eax
mov    %edx,0xc(%esp)
mov    %cl,0xb(%esp)
cmp    %eax,%edi
jae    805d33a <__sprintf_chk@plt+0x131fa>
xchg   %ax,%ax
mov    (%edi),%ebp
test   %ebp,%ebp
je     805d32f <__sprintf_chk@plt+0x131ef>
mov    0x4(%edi),%ebx
test   %ebx,%ebx
je     805d31a <__sprintf_chk@plt+0x131da>
mov    0x8(%esi),%edx
jmp    805d2d7 <__sprintf_chk@plt+0x13197>
lea    0x0(%esi),%esi
mov    0x4(%eax),%ebp
test   %ecx,%ecx
mov    %ebp,0x4(%ebx)
mov    %ebx,0x4(%eax)
je     805d318 <__sprintf_chk@plt+0x131d8>
mov    %ecx,%ebx
mov    (%ebx),%ebp
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x18(%esi)
mov    0x8(%esi),%edx
cmp    %edx,%eax
jae    805d3be <__sprintf_chk@plt+0x1327e>
mov    (%esi),%ecx
lea    (%ecx,%eax,8),%eax
mov    0x4(%ebx),%ecx
cmpl   $0x0,(%eax)
jne    805d2c8 <__sprintf_chk@plt+0x13188>
mov    %ebp,(%eax)
addl   $0x1,0xc(%esi)
test   %ecx,%ecx
movl   $0x0,(%ebx)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    805d2d5 <__sprintf_chk@plt+0x13195>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%ebp
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     805d348 <__sprintf_chk@plt+0x13208>
mov    0xc(%esp),%eax
mov    0x4(%eax),%eax
add    $0x8,%edi
cmp    %eax,%edi
jb     805d2b0 <__sprintf_chk@plt+0x13170>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x8(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
cmp    0x8(%esi),%eax
jae    805d3be <__sprintf_chk@plt+0x1327e>
mov    (%esi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805d39c <__sprintf_chk@plt+0x1325c>
mov    0x24(%esi),%eax
test   %eax,%eax
je     805d3a4 <__sprintf_chk@plt+0x13264>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %ebp,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    0xc(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%eax),%eax
cmp    %eax,%edi
jb     805d2b0 <__sprintf_chk@plt+0x13170>
jmp    805d33a <__sprintf_chk@plt+0x131fa>
mov    %ebp,(%ebx)
addl   $0x1,0xc(%esi)
jmp    805d37d <__sprintf_chk@plt+0x1323d>
movl   $0x8,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
jne    805d372 <__sprintf_chk@plt+0x13232>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a080 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    805d446 <__sprintf_chk@plt+0x13306>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     805d43f <__sprintf_chk@plt+0x132ff>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     805d43a <__sprintf_chk@plt+0x132fa>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    805d430 <__sprintf_chk@plt+0x132f0>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     805d418 <__sprintf_chk@plt+0x132d8>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    805d491 <__sprintf_chk@plt+0x13351>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     805d48a <__sprintf_chk@plt+0x1334a>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     805d48a <__sprintf_chk@plt+0x1334a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    805d480 <__sprintf_chk@plt+0x13340>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     805d468 <__sprintf_chk@plt+0x13328>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     805d49c <__sprintf_chk@plt+0x1335c>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    805d50e <__sprintf_chk@plt+0x133ce>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     805d507 <__sprintf_chk@plt+0x133c7>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     805d502 <__sprintf_chk@plt+0x133c2>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    805d4f8 <__sprintf_chk@plt+0x133b8>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     805d4e0 <__sprintf_chk@plt+0x133a0>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x806e4e4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   804a010 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x806e4fc,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a010 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x806e52c,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x806e564
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   804a010 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x806e514,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a010 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
cmp    0x8(%edi),%eax
jae    805d621 <__sprintf_chk@plt+0x134e1>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    805d5f2 <__sprintf_chk@plt+0x134b2>
jmp    805d60b <__sprintf_chk@plt+0x134cb>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
cmp    %eax,%esi
je     805d60d <__sprintf_chk@plt+0x134cd>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805d618 <__sprintf_chk@plt+0x134d8>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    805d5f0 <__sprintf_chk@plt+0x134b0>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   804a080 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     805d661 <__sprintf_chk@plt+0x13521>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     805d657 <__sprintf_chk@plt+0x13517>
jmp    805d667 <__sprintf_chk@plt+0x13527>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    805d667 <__sprintf_chk@plt+0x13527>
mov    (%edx),%eax
test   %eax,%eax
je     805d650 <__sprintf_chk@plt+0x13510>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   804a080 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebx
mov    0x8(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%esi)
cmp    0x8(%esi),%eax
jae    805d6cd <__sprintf_chk@plt+0x1358d>
mov    (%esi),%edx
lea    (%edx,%eax,8),%edx
mov    %edx,%eax
jmp    805d69c <__sprintf_chk@plt+0x1355c>
test   %eax,%eax
je     805d6a7 <__sprintf_chk@plt+0x13567>
cmp    %ebx,(%eax)
mov    0x4(%eax),%eax
jne    805d698 <__sprintf_chk@plt+0x13558>
test   %eax,%eax
jne    805d6c5 <__sprintf_chk@plt+0x13585>
mov    0x4(%esi),%ecx
jmp    805d6b6 <__sprintf_chk@plt+0x13576>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
test   %eax,%eax
jne    805d6bf <__sprintf_chk@plt+0x1357f>
add    $0x8,%edx
cmp    %edx,%ecx
ja     805d6b0 <__sprintf_chk@plt+0x13570>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    (%eax),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
call   804a080 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%eax
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
mov    (%eax),%ebx
mov    0x4(%eax),%ebp
cmp    %ebx,%ebp
jbe    805d745 <__sprintf_chk@plt+0x13605>
xor    %esi,%esi
mov    (%ebx),%edi
test   %edi,%edi
je     805d735 <__sprintf_chk@plt+0x135f5>
cmp    %esi,%edx
jbe    805d73c <__sprintf_chk@plt+0x135fc>
lea    0x1(%esi),%eax
mov    %edi,(%ecx,%esi,4)
mov    0x4(%ebx),%esi
test   %esi,%esi
je     805d72c <__sprintf_chk@plt+0x135ec>
lea    0x0(%esi),%esi
cmp    %edx,%eax
je     805d740 <__sprintf_chk@plt+0x13600>
mov    (%esi),%edi
add    $0x1,%eax
mov    %edi,-0x4(%ecx,%eax,4)
mov    0x4(%esi),%esi
test   %esi,%esi
jne    805d718 <__sprintf_chk@plt+0x135d8>
mov    0x14(%esp),%edi
mov    %eax,%esi
mov    0x4(%edi),%ebp
add    $0x8,%ebx
cmp    %ebp,%ebx
jb     805d6fb <__sprintf_chk@plt+0x135bb>
mov    %esi,%eax
xchg   %ax,%ax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    805d740 <__sprintf_chk@plt+0x13600>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
mov    0x4(%ecx),%edx
mov    %eax,0xc(%esp)
cmp    %eax,%edx
jbe    805d7b8 <__sprintf_chk@plt+0x13678>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    805d78b <__sprintf_chk@plt+0x1364b>
jmp    805d7a9 <__sprintf_chk@plt+0x13669>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     805d7b8 <__sprintf_chk@plt+0x13678>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    805d788 <__sprintf_chk@plt+0x13648>
mov    0x30(%esp),%eax
mov    0x4(%eax),%edx
addl   $0x8,0xc(%esp)
cmp    0xc(%esp),%edx
ja     805d776 <__sprintf_chk@plt+0x13636>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     805d802 <__sprintf_chk@plt+0x136c2>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    805d7e8 <__sprintf_chk@plt+0x136a8>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%eax
mov    0x4c(%esp),%edx
movl   $0x28,(%esp)
mov    0x40(%esp),%ebx
mov    0x44(%esp),%esi
test   %eax,%eax
mov    $0x805d190,%eax
cmovne 0x48(%esp),%eax
test   %edx,%edx
mov    %eax,0x48(%esp)
mov    $0x805d1a0,%eax
cmovne 0x4c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805da98 <__sprintf_chk@plt+0x13958>
test   %esi,%esi
je     805d939 <__sprintf_chk@plt+0x137f9>
cmp    $0x806e550,%esi
mov    %esi,0x14(%eax)
je     805da9f <__sprintf_chk@plt+0x1395f>
flds   0x8(%esi)
flds   0x806e56c
fxch   %st(1)
fucomi %st(1),%st
jbe    805d8f8 <__sprintf_chk@plt+0x137b8>
flds   0x806e570
fucomip %st(1),%st
jbe    805d8fe <__sprintf_chk@plt+0x137be>
flds   0xc(%esi)
flds   0x806e574
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805d904 <__sprintf_chk@plt+0x137c4>
flds   (%esi)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     805d90a <__sprintf_chk@plt+0x137ca>
faddp  %st,%st(2)
flds   0x4(%esi)
fucomi %st(2),%st
jbe    805d912 <__sprintf_chk@plt+0x137d2>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    805da84 <__sprintf_chk@plt+0x13944>
fstp   %st(0)
fstp   %st(0)
jmp    805d920 <__sprintf_chk@plt+0x137e0>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
jmp    805d920 <__sprintf_chk@plt+0x137e0>
fstp   %st(0)
fstp   %st(0)
jmp    805d920 <__sprintf_chk@plt+0x137e0>
fstp   %st(0)
fstp   %st(0)
jmp    805d920 <__sprintf_chk@plt+0x137e0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805d920 <__sprintf_chk@plt+0x137e0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805d920 <__sprintf_chk@plt+0x137e0>
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x806e550,0x14(%ebp)
mov    %ebp,(%esp)
call   80499d0 <free@plt>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x806e550,0x14(%eax)
flds   0x806e568
mov    $0x806e550,%esi
cmpb   $0x0,0x10(%esi)
jne    805d997 <__sprintf_chk@plt+0x13857>
xor    %edx,%edx
mov    %ebx,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x806e578
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805d9fa <__sprintf_chk@plt+0x138ba>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,%ebx
jmp    805d999 <__sprintf_chk@plt+0x13859>
fstp   %st(0)
cmp    $0x9,%ebx
ja     805da08 <__sprintf_chk@plt+0x138c8>
mov    $0xb,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    805da15 <__sprintf_chk@plt+0x138d5>
mov    $0xaaaaaaab,%eax
mul    %ebx
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     805d9f0 <__sprintf_chk@plt+0x138b0>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    805d9dd <__sprintf_chk@plt+0x1389d>
xchg   %ax,%ax
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     805d9f0 <__sprintf_chk@plt+0x138b0>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     805d9d0 <__sprintf_chk@plt+0x13890>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    805da24 <__sprintf_chk@plt+0x138e4>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    805d9a8 <__sprintf_chk@plt+0x13868>
jmp    805d9fc <__sprintf_chk@plt+0x138bc>
fstp   %st(0)
movl   $0x0,0x8(%ebp)
jmp    805d927 <__sprintf_chk@plt+0x137e7>
or     $0x1,%ebx
cmp    $0xffffffff,%ebx
je     805d9fc <__sprintf_chk@plt+0x138bc>
cmp    $0x9,%ebx
ja     805d9ad <__sprintf_chk@plt+0x1386d>
xor    %edx,%edx
mov    $0x3,%ecx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
je     805d9f0 <__sprintf_chk@plt+0x138b0>
cmp    $0x3fffffff,%ebx
ja     805d9fc <__sprintf_chk@plt+0x138bc>
mov    %ebx,0x8(%ebp)
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   804a130 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     805d927 <__sprintf_chk@plt+0x137e7>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x48(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
movl   $0x0,0x24(%ebp)
mov    %eax,0x18(%ebp)
mov    0x4c(%esp),%eax
mov    %eax,0x1c(%ebp)
mov    0x50(%esp),%eax
mov    %eax,0x20(%ebp)
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
fucomi %st(1),%st
fstp   %st(1)
jbe    805d91a <__sprintf_chk@plt+0x137da>
jmp    805d94b <__sprintf_chk@plt+0x1380b>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805d931 <__sprintf_chk@plt+0x137f1>
flds   0x806e568
jmp    805d94b <__sprintf_chk@plt+0x1380b>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
mov    0x4(%esi),%eax
cmp    %eax,%edi
jae    805db28 <__sprintf_chk@plt+0x139e8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%edx
test   %edx,%edx
je     805db21 <__sprintf_chk@plt+0x139e1>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    805dae2 <__sprintf_chk@plt+0x139a2>
jmp    805db06 <__sprintf_chk@plt+0x139c6>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     805daf0 <__sprintf_chk@plt+0x139b0>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    805dae0 <__sprintf_chk@plt+0x139a0>
test   %edx,%edx
je     805db11 <__sprintf_chk@plt+0x139d1>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x4(%esi),%eax
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %eax,%edi
jb     805dac8 <__sprintf_chk@plt+0x13988>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     805db93 <__sprintf_chk@plt+0x13a53>
mov    0x10(%esi),%eax
test   %eax,%eax
je     805db93 <__sprintf_chk@plt+0x13a53>
mov    (%esi),%edi
mov    0x4(%esi),%edx
cmp    %edx,%edi
jae    805dbcb <__sprintf_chk@plt+0x13a8b>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     805db8a <__sprintf_chk@plt+0x13a4a>
mov    %edi,%ebx
jmp    805db7a <__sprintf_chk@plt+0x13a3a>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    805db78 <__sprintf_chk@plt+0x13a38>
mov    0x4(%esi),%edx
add    $0x8,%edi
cmp    %edi,%edx
ja     805db68 <__sprintf_chk@plt+0x13a28>
jmp    805db96 <__sprintf_chk@plt+0x13a56>
mov    0x4(%esi),%edx
mov    (%esi),%edi
cmp    %edi,%edx
jbe    805dbcb <__sprintf_chk@plt+0x13a8b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    805dbb2 <__sprintf_chk@plt+0x13a72>
jmp    805dbc4 <__sprintf_chk@plt+0x13a84>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
test   %ebx,%ebx
jne    805dbb0 <__sprintf_chk@plt+0x13a70>
mov    0x4(%esi),%edx
add    $0x8,%edi
cmp    %edx,%edi
jb     805dba0 <__sprintf_chk@plt+0x13a60>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    805dbda <__sprintf_chk@plt+0x13a9a>
jmp    805dbe9 <__sprintf_chk@plt+0x13aa9>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
test   %ebx,%ebx
jne    805dbd8 <__sprintf_chk@plt+0x13a98>
mov    (%esi),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    80499d0 <free@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%edi
mov    0x74(%esp),%ebx
mov    0x14(%edi),%eax
cmpb   $0x0,0x10(%eax)
mov    %eax,0x18(%esp)
flds   0x8(%eax)
jne    805dc75 <__sprintf_chk@plt+0x13b35>
xor    %edx,%edx
mov    %ebx,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x806e578
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805dcda <__sprintf_chk@plt+0x13b9a>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,%ebx
jmp    805dc77 <__sprintf_chk@plt+0x13b37>
fstp   %st(0)
cmp    $0x9,%ebx
ja     805dcee <__sprintf_chk@plt+0x13bae>
mov    $0xb,%ebx
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    805dcfb <__sprintf_chk@plt+0x13bbb>
mov    $0xaaaaaaab,%eax
mul    %ebx
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     805dcd0 <__sprintf_chk@plt+0x13b90>
mov    $0x10,%ebp
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    805dcbd <__sprintf_chk@plt+0x13b7d>
xchg   %ax,%ax
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%ebp
test   %edx,%edx
je     805dcd0 <__sprintf_chk@plt+0x13b90>
add    %ebp,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     805dcb0 <__sprintf_chk@plt+0x13b70>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    805dd0a <__sprintf_chk@plt+0x13bca>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    805dc88 <__sprintf_chk@plt+0x13b48>
jmp    805dcdc <__sprintf_chk@plt+0x13b9c>
fstp   %st(0)
movb   $0x0,0x18(%esp)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0x1,%ebx
cmp    $0xffffffff,%ebx
je     805dcdc <__sprintf_chk@plt+0x13b9c>
cmp    $0x9,%ebx
ja     805dc8d <__sprintf_chk@plt+0x13b4d>
xor    %edx,%edx
mov    $0x3,%ecx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
je     805dcd0 <__sprintf_chk@plt+0x13b90>
lea    -0x1(%ebx),%eax
cmp    $0x3ffffffe,%eax
ja     805dcdc <__sprintf_chk@plt+0x13b9c>
cmp    %ebx,0x8(%edi)
je     805de44 <__sprintf_chk@plt+0x13d04>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   804a130 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     805dcdc <__sprintf_chk@plt+0x13b9c>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esp),%eax
mov    %edi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x3c(%esp)
mov    0x18(%edi),%eax
mov    %eax,0x40(%esp)
mov    0x1c(%edi),%eax
mov    %eax,0x44(%esp)
mov    0x20(%edi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%edi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   805d290 <__sprintf_chk@plt+0x13150>
test   %al,%al
mov    %al,0x18(%esp)
jne    805de56 <__sprintf_chk@plt+0x13d16>
mov    0x4c(%esp),%eax
mov    0x28(%esp),%esi
mov    %eax,0x24(%edi)
mov    0x2c(%esp),%eax
cmp    %eax,%esi
jae    805de1a <__sprintf_chk@plt+0x13cda>
mov    (%esi),%edx
test   %edx,%edx
je     805de13 <__sprintf_chk@plt+0x13cd3>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
je     805de0c <__sprintf_chk@plt+0x13ccc>
mov    0x8(%edi),%edx
jmp    805ddc7 <__sprintf_chk@plt+0x13c87>
lea    0x0(%esi),%esi
mov    0x4(%eax),%ebp
test   %ecx,%ecx
mov    %ebp,0x4(%ebx)
mov    %ebx,0x4(%eax)
je     805de08 <__sprintf_chk@plt+0x13cc8>
mov    %ecx,%ebx
mov    (%ebx),%ebp
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%edx
cmp    %edx,%eax
jae    805de8f <__sprintf_chk@plt+0x13d4f>
mov    (%edi),%ecx
lea    (%ecx,%eax,8),%eax
mov    0x4(%ebx),%ecx
cmpl   $0x0,(%eax)
jne    805ddb8 <__sprintf_chk@plt+0x13c78>
mov    %ebp,(%eax)
addl   $0x1,0xc(%edi)
test   %ecx,%ecx
movl   $0x0,(%ebx)
mov    0x24(%edi),%eax
mov    %eax,0x4(%ebx)
mov    %ebx,0x24(%edi)
jne    805ddc5 <__sprintf_chk@plt+0x13c85>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x0,0x4(%esi)
add    $0x8,%esi
cmp    %eax,%esi
jb     805dda0 <__sprintf_chk@plt+0x13c60>
xor    %ecx,%ecx
mov    %edi,%eax
lea    0x28(%esp),%edx
call   805d290 <__sprintf_chk@plt+0x13150>
test   %al,%al
je     805de8f <__sprintf_chk@plt+0x13d4f>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movb   $0x1,0x18(%esp)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edi),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%edi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%edi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%edi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%edi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%edi)
movzbl 0x18(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a080 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
mov    0x50(%esp),%edi
mov    0x58(%esp),%ebx
test   %esi,%esi
je     805e0f9 <__sprintf_chk@plt+0x13fb9>
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%ecx
cmp    %ecx,%eax
jae    805e0f9 <__sprintf_chk@plt+0x13fb9>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebp
mov    0x0(%ebp),%eax
mov    %ebp,0x2c(%esp)
test   %eax,%eax
je     805df3d <__sprintf_chk@plt+0x13dfd>
cmp    %eax,%esi
je     805def8 <__sprintf_chk@plt+0x13db8>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
je     805df33 <__sprintf_chk@plt+0x13df3>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     805df3a <__sprintf_chk@plt+0x13dfa>
test   %ebx,%ebx
xchg   %ax,%ax
je     805dfc0 <__sprintf_chk@plt+0x13e80>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    (%eax),%eax
cmp    %eax,%esi
je     805def8 <__sprintf_chk@plt+0x13db8>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805dfd0 <__sprintf_chk@plt+0x13e90>
mov    0x4(%ebp),%ebp
mov    0x4(%ebp),%eax
test   %eax,%eax
jne    805df18 <__sprintf_chk@plt+0x13dd8>
mov    0x8(%edi),%ecx
mov    0xc(%edi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x14(%edi),%eax
fildll 0x10(%esp)
flds   0x8(%eax)
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
fucomi %st(3),%st
fstp   %st(3)
ja     805dfe0 <__sprintf_chk@plt+0x13ea0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805df80 <__sprintf_chk@plt+0x13e40>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805e100 <__sprintf_chk@plt+0x13fc0>
mov    0x24(%edi),%eax
test   %eax,%eax
je     805e114 <__sprintf_chk@plt+0x13fd4>
mov    0x4(%eax),%edx
mov    %edx,0x24(%edi)
mov    0x4(%ebx),%edx
mov    %esi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%edi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%ebp),%eax
mov    (%eax),%eax
jmp    805def8 <__sprintf_chk@plt+0x13db8>
lea    0x0(%esi),%esi
cmp    $0x806e550,%eax
je     805e08c <__sprintf_chk@plt+0x13f4c>
flds   0x806e56c
fxch   %st(2)
fucomi %st(2),%st
jbe    805e040 <__sprintf_chk@plt+0x13f00>
flds   0x806e570
fucomip %st(1),%st
jbe    805e046 <__sprintf_chk@plt+0x13f06>
flds   0xc(%eax)
flds   0x806e574
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805e04c <__sprintf_chk@plt+0x13f0c>
flds   (%eax)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     805e052 <__sprintf_chk@plt+0x13f12>
faddp  %st,%st(3)
flds   0x4(%eax)
fucomi %st(3),%st
jbe    805e05a <__sprintf_chk@plt+0x13f1a>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    805e136 <__sprintf_chk@plt+0x13ff6>
fstp   %st(0)
fstp   %st(1)
jmp    805e068 <__sprintf_chk@plt+0x13f28>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(1)
jmp    805e068 <__sprintf_chk@plt+0x13f28>
fstp   %st(0)
fstp   %st(1)
jmp    805e068 <__sprintf_chk@plt+0x13f28>
fstp   %st(0)
fstp   %st(1)
jmp    805e068 <__sprintf_chk@plt+0x13f28>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805e068 <__sprintf_chk@plt+0x13f28>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805e068 <__sprintf_chk@plt+0x13f28>
fstp   %st(1)
lea    0x0(%esi,%eiz,1),%esi
flds   0x806e568
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
movl   $0x806e550,0x14(%edi)
fucomip %st(3),%st
fstp   %st(2)
jbe    805df76 <__sprintf_chk@plt+0x13e36>
mov    $0x806e550,%eax
jmp    805e090 <__sprintf_chk@plt+0x13f50>
fstp   %st(2)
fxch   %st(1)
cmpb   $0x0,0x10(%eax)
fmuls  0xc(%eax)
jne    805e09d <__sprintf_chk@plt+0x13f5d>
fmulp  %st,%st(1)
jmp    805e09f <__sprintf_chk@plt+0x13f5f>
fstp   %st(1)
flds   0x806e578
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805e12a <__sprintf_chk@plt+0x13fea>
fnstcw 0x1e(%esp)
mov    %edi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   805dc10 <__sprintf_chk@plt+0x13ad0>
test   %al,%al
je     805e12c <__sprintf_chk@plt+0x13fec>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   805d1b0 <__sprintf_chk@plt+0x13070>
test   %eax,%eax
je     805df80 <__sprintf_chk@plt+0x13e40>
call   804a080 <abort@plt>
xchg   %ax,%ax
mov    %esi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%edi)
addl   $0x1,0xc(%edi)
jmp    805df0a <__sprintf_chk@plt+0x13dca>
movl   $0x8,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
jne    805df9f <__sprintf_chk@plt+0x13e5f>
jmp    805e12c <__sprintf_chk@plt+0x13fec>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    805df0a <__sprintf_chk@plt+0x13dca>
fucomi %st(2),%st
fstp   %st(2)
jbe    805e062 <__sprintf_chk@plt+0x13f22>
fstp   %st(2)
fxch   %st(1)
jmp    805e090 <__sprintf_chk@plt+0x13f50>
lea    0x0(%esi,%eiz,1),%esi
jmp    805dea0 <__sprintf_chk@plt+0x13d60>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%esi
mov    0x40(%esp),%edi
test   %esi,%esi
je     805e391 <__sprintf_chk@plt+0x14251>
mov    0x8(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%edi)
mov    0x8(%edi),%ecx
cmp    %ecx,%eax
jae    805e391 <__sprintf_chk@plt+0x14251>
mov    (%edi),%edx
lea    (%edx,%eax,8),%ebx
mov    (%ebx),%eax
mov    %ebx,0x2c(%esp)
test   %eax,%eax
je     805e1e9 <__sprintf_chk@plt+0x140a9>
cmp    %eax,%esi
je     805e260 <__sprintf_chk@plt+0x14120>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
je     805e1df <__sprintf_chk@plt+0x1409f>
mov    (%ebx),%eax
test   %eax,%eax
je     805e1e6 <__sprintf_chk@plt+0x140a6>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%eax),%eax
cmp    %eax,%esi
je     805e260 <__sprintf_chk@plt+0x14120>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805e268 <__sprintf_chk@plt+0x14128>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%eax
test   %eax,%eax
jne    805e1c0 <__sprintf_chk@plt+0x14080>
mov    0x8(%edi),%ecx
mov    0xc(%edi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x14(%edi),%eax
fildll 0x10(%esp)
flds   0x8(%eax)
mov    %ecx,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
fucomi %st(3),%st
fstp   %st(3)
ja     805e278 <__sprintf_chk@plt+0x14138>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805e228 <__sprintf_chk@plt+0x140e8>
fstp   %st(0)
fstp   %st(0)
xchg   %ax,%ax
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805e398 <__sprintf_chk@plt+0x14258>
mov    0x24(%edi),%eax
test   %eax,%eax
je     805e3a9 <__sprintf_chk@plt+0x14269>
mov    0x4(%eax),%edx
mov    %edx,0x24(%edi)
mov    0x4(%ebx),%edx
mov    %esi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    %esi,%eax
addl   $0x1,0x10(%edi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,%eax
jmp    805e1b5 <__sprintf_chk@plt+0x14075>
nop
mov    0x4(%ebx),%eax
mov    (%eax),%eax
jmp    805e1b5 <__sprintf_chk@plt+0x14075>
lea    0x0(%esi),%esi
cmp    $0x806e550,%eax
je     805e324 <__sprintf_chk@plt+0x141e4>
flds   0x806e56c
fxch   %st(2)
fucomi %st(2),%st
jbe    805e2d8 <__sprintf_chk@plt+0x14198>
flds   0x806e570
fucomip %st(1),%st
jbe    805e2de <__sprintf_chk@plt+0x1419e>
flds   0xc(%eax)
flds   0x806e574
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805e2e4 <__sprintf_chk@plt+0x141a4>
flds   (%eax)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     805e2ea <__sprintf_chk@plt+0x141aa>
faddp  %st,%st(3)
flds   0x4(%eax)
fucomi %st(3),%st
jbe    805e2f2 <__sprintf_chk@plt+0x141b2>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    805e3c8 <__sprintf_chk@plt+0x14288>
fstp   %st(0)
fstp   %st(1)
jmp    805e300 <__sprintf_chk@plt+0x141c0>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(1)
jmp    805e300 <__sprintf_chk@plt+0x141c0>
fstp   %st(0)
fstp   %st(1)
jmp    805e300 <__sprintf_chk@plt+0x141c0>
fstp   %st(0)
fstp   %st(1)
jmp    805e300 <__sprintf_chk@plt+0x141c0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805e300 <__sprintf_chk@plt+0x141c0>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805e300 <__sprintf_chk@plt+0x141c0>
fstp   %st(1)
lea    0x0(%esi,%eiz,1),%esi
flds   0x806e568
fld    %st(1)
fmul   %st(1),%st
fxch   %st(3)
movl   $0x806e550,0x14(%edi)
fucomip %st(3),%st
fstp   %st(2)
jbe    805e222 <__sprintf_chk@plt+0x140e2>
mov    $0x806e550,%eax
jmp    805e328 <__sprintf_chk@plt+0x141e8>
fstp   %st(2)
fxch   %st(1)
cmpb   $0x0,0x10(%eax)
fmuls  0xc(%eax)
jne    805e335 <__sprintf_chk@plt+0x141f5>
fmulp  %st,%st(1)
jmp    805e337 <__sprintf_chk@plt+0x141f7>
fstp   %st(1)
flds   0x806e578
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    805e3bf <__sprintf_chk@plt+0x1427f>
fnstcw 0x1e(%esp)
mov    %edi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   805dc10 <__sprintf_chk@plt+0x13ad0>
test   %al,%al
je     805e3c1 <__sprintf_chk@plt+0x14281>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %esi,%edx
mov    %edi,%eax
call   805d1b0 <__sprintf_chk@plt+0x13070>
test   %eax,%eax
je     805e228 <__sprintf_chk@plt+0x140e8>
call   804a080 <abort@plt>
xchg   %ax,%ax
mov    %esi,(%ebx)
mov    %esi,%eax
addl   $0x1,0x10(%edi)
addl   $0x1,0xc(%edi)
jmp    805e258 <__sprintf_chk@plt+0x14118>
movl   $0x8,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
jne    805e247 <__sprintf_chk@plt+0x14107>
jmp    805e3c1 <__sprintf_chk@plt+0x14281>
fstp   %st(0)
xor    %eax,%eax
jmp    805e1b9 <__sprintf_chk@plt+0x14079>
fucomi %st(2),%st
fstp   %st(2)
jbe    805e2fa <__sprintf_chk@plt+0x141ba>
fstp   %st(2)
fxch   %st(1)
jmp    805e328 <__sprintf_chk@plt+0x141e8>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%ebp
mov    0x8(%eax),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
call   *0x18(%eax)
mov    0x40(%esp),%edi
cmp    0x8(%edi),%eax
jae    805e6a5 <__sprintf_chk@plt+0x14565>
mov    (%edi),%edx
lea    (%edx,%eax,8),%eax
mov    (%eax),%ebx
mov    %eax,0x18(%esp)
test   %ebx,%ebx
je     805e670 <__sprintf_chk@plt+0x14530>
cmp    %ebx,%ebp
je     805e49e <__sprintf_chk@plt+0x1435e>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    805e498 <__sprintf_chk@plt+0x14358>
mov    0x18(%esp),%esi
mov    0x4(%esi),%eax
test   %eax,%eax
je     805e670 <__sprintf_chk@plt+0x14530>
mov    (%eax),%ebx
cmp    %ebx,%ebp
jne    805e464 <__sprintf_chk@plt+0x14324>
jmp    805e68b <__sprintf_chk@plt+0x1454b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%esi
mov    0x4(%esi),%eax
test   %eax,%eax
je     805e670 <__sprintf_chk@plt+0x14530>
mov    (%eax),%ebx
cmp    %ebx,%ebp
je     805e47b <__sprintf_chk@plt+0x1433b>
mov    0x40(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   *0x1c(%eax)
test   %al,%al
je     805e450 <__sprintf_chk@plt+0x14310>
mov    0x4(%esi),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%ecx
mov    0x40(%esp),%edi
mov    %ecx,0x4(%esi)
movl   $0x0,(%eax)
mov    0x24(%edi),%edx
mov    %edx,0x4(%eax)
mov    %eax,0x24(%edi)
jmp    805e4ca <__sprintf_chk@plt+0x1438a>
xchg   %ax,%ax
mov    0x18(%esp),%eax
mov    (%eax),%ebx
mov    0x18(%esp),%ecx
mov    0x4(%ecx),%eax
test   %eax,%eax
je     805e680 <__sprintf_chk@plt+0x14540>
mov    (%eax),%esi
mov    0x4(%eax),%edi
mov    %esi,(%ecx)
mov    %edi,0x4(%ecx)
mov    0x40(%esp),%ecx
movl   $0x0,(%eax)
mov    0x24(%ecx),%edx
mov    %edx,0x4(%eax)
mov    %eax,0x24(%ecx)
test   %ebx,%ebx
je     805e4f8 <__sprintf_chk@plt+0x143b8>
mov    0x40(%esp),%eax
subl   $0x1,0x10(%eax)
mov    0x18(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    805e4f8 <__sprintf_chk@plt+0x143b8>
jmp    805e508 <__sprintf_chk@plt+0x143c8>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    805e4f8 <__sprintf_chk@plt+0x143b8>
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
mov    0x40(%esp),%edx
mov    0xc(%eax),%eax
sub    $0x1,%eax
mov    %eax,0xc(%edx)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0x40(%esp),%eax
mov    %edx,0x14(%esp)
xor    %edx,%edx
fildll 0x10(%esp)
mov    0x14(%eax),%ecx
mov    0x8(%eax),%eax
flds   (%ecx)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
fildll 0x10(%esp)
fld    %st(1)
fmul   %st(1),%st
fucomip %st(3),%st
jbe    805e4e8 <__sprintf_chk@plt+0x143a8>
cmp    $0x806e550,%ecx
je     805e5f0 <__sprintf_chk@plt+0x144b0>
flds   0x8(%ecx)
flds   0x806e56c
fxch   %st(1)
fucomi %st(1),%st
jbe    805e5a8 <__sprintf_chk@plt+0x14468>
flds   0x806e570
fucomip %st(1),%st
jbe    805e5b0 <__sprintf_chk@plt+0x14470>
flds   0xc(%ecx)
flds   0x806e574
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    805e5b8 <__sprintf_chk@plt+0x14478>
fldz
fxch   %st(4)
fucomi %st(4),%st
fstp   %st(4)
jb     805e5c0 <__sprintf_chk@plt+0x14480>
fxch   %st(1)
faddp  %st,%st(3)
flds   0x4(%ecx)
fucomi %st(3),%st
jbe    805e5c8 <__sprintf_chk@plt+0x14488>
fld1
fucomip %st(1),%st
fstp   %st(0)
jae    805e694 <__sprintf_chk@plt+0x14554>
fstp   %st(0)
fstp   %st(1)
jmp    805e5d0 <__sprintf_chk@plt+0x14490>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805e5d0 <__sprintf_chk@plt+0x14490>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805e5d0 <__sprintf_chk@plt+0x14490>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805e5d0 <__sprintf_chk@plt+0x14490>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
jmp    805e5d0 <__sprintf_chk@plt+0x14490>
fstp   %st(0)
fstp   %st(0)
fstp   %st(1)
xchg   %ax,%ax
fldz
mov    0x40(%esp),%eax
fmul   %st(1),%st
movl   $0x806e550,0x14(%eax)
fucomip %st(2),%st
fstp   %st(1)
jbe    805e4f0 <__sprintf_chk@plt+0x143b0>
mov    $0x806e550,%ecx
jmp    805e5f4 <__sprintf_chk@plt+0x144b4>
fstp   %st(1)
fstp   %st(1)
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
jne    805e600 <__sprintf_chk@plt+0x144c0>
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   805dc10 <__sprintf_chk@plt+0x13ad0>
test   %al,%al
jne    805e4f8 <__sprintf_chk@plt+0x143b8>
mov    0x40(%esp),%eax
mov    0x24(%eax),%eax
test   %eax,%eax
jne    805e64a <__sprintf_chk@plt+0x1450a>
jmp    805e659 <__sprintf_chk@plt+0x14519>
lea    0x0(%esi),%esi
mov    %esi,%eax
mov    0x4(%eax),%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
test   %esi,%esi
jne    805e648 <__sprintf_chk@plt+0x14508>
mov    0x40(%esp),%eax
movl   $0x0,0x24(%eax)
jmp    805e4f8 <__sprintf_chk@plt+0x143b8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x2c,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%ecx)
jmp    805e4ca <__sprintf_chk@plt+0x1438a>
mov    0x18(%esp),%esi
jmp    805e47b <__sprintf_chk@plt+0x1433b>
fucomip %st(2),%st
fstp   %st(1)
jbe    805e5d0 <__sprintf_chk@plt+0x14490>
fstp   %st(1)
jmp    805e5f4 <__sprintf_chk@plt+0x144b4>
call   804a080 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   80499b0 <wcwidth@plt>
test   %eax,%eax
jns    805e6d4 <__sprintf_chk@plt+0x14594>
mov    %ebx,(%esp)
call   8049b20 <iswcntrl@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
mov    (%ebx),%eax
lea    0x10(%ebx),%edx
cmp    %edx,%eax
je     805e718 <__sprintf_chk@plt+0x145d8>
mov    %eax,(%esi)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esi)
movzbl 0x8(%ebx),%eax
test   %al,%al
mov    %al,0x8(%esi)
je     805e710 <__sprintf_chk@plt+0x145d0>
mov    0xc(%ebx),%eax
mov    %eax,0xc(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%ebx),%edx
lea    0x10(%esi),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
call   80499f0 <memcpy@plt>
mov    %edi,(%esi)
jmp    805e6f9 <__sprintf_chk@plt+0x145b9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
mov    %ecx,%eax
and    $0x1f,%ecx
shr    $0x5,%al
movzbl %al,%eax
mov    0x806e580(,%eax,4),%eax
shr    %cl,%eax
and    $0x1,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%esi
mov    0xc4(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
cmp    %edi,%esi
je     805ec60 <__sprintf_chk@plt+0x14b20>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805e868 <__sprintf_chk@plt+0x14728>
movb   $0x0,0x2c(%esp)
mov    %esi,%eax
cmpb   $0x0,0x2c(%esp)
mov    %esi,0x3c(%esp)
lea    0x30(%esp),%esi
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movb   $0x0,0x38(%esp)
mov    %edi,0x74(%esp)
movb   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
jne    805ea0c <__sprintf_chk@plt+0x148cc>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %edx,%ecx
jae    805eb40 <__sprintf_chk@plt+0x14a00>
movl   $0x1,0x40(%esp)
movsbl (%eax),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    805e8ea <__sprintf_chk@plt+0x147aa>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    805ec68 <__sprintf_chk@plt+0x14b28>
mov    $0x1,%eax
lea    0x0(%esi),%esi
mov    0x9c(%esp),%esi
xor    %gs:0x14,%esi
jne    805ee7f <__sprintf_chk@plt+0x14d3f>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
call   804a120 <__ctype_b_loc@plt>
mov    (%eax),%ecx
jmp    805e886 <__sprintf_chk@plt+0x14746>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
add    $0x1,%edi
cmp    %dl,%bl
jne    805edf0 <__sprintf_chk@plt+0x14cb0>
movzbl (%esi),%ebx
movzbl %bl,%ebp
testb  $0x1,0x1(%ecx,%ebp,2)
je     805e8a6 <__sprintf_chk@plt+0x14766>
mov    %ecx,0x1c(%esp)
call   804a100 <__ctype_tolower_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
movzbl (%eax,%ebp,4),%ebx
movzbl (%edi),%edx
movzbl %dl,%ebp
testb  $0x1,0x1(%ecx,%ebp,2)
je     805e8c6 <__sprintf_chk@plt+0x14786>
mov    %ecx,0x1c(%esp)
call   804a100 <__ctype_tolower_loc@plt>
mov    0x1c(%esp),%ecx
mov    (%eax),%eax
movzbl (%eax,%ebp,4),%edx
test   %bl,%bl
jne    805e878 <__sprintf_chk@plt+0x14738>
xor    %eax,%eax
sub    %edx,%eax
jmp    805e848 <__sprintf_chk@plt+0x14708>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
movb   $0x1,0x38(%esp)
movzbl 0x70(%esp),%ebx
test   %bl,%bl
je     805e950 <__sprintf_chk@plt+0x14810>
movzbl 0x7c(%esp),%ebx
test   %bl,%bl
jne    805e9a7 <__sprintf_chk@plt+0x14867>
cmpb   $0x0,0x44(%esp)
jne    805ee00 <__sprintf_chk@plt+0x14cc0>
mov    0x40(%esp),%eax
mov    0x78(%esp),%edx
cmp    %edx,%eax
je     805eba0 <__sprintf_chk@plt+0x14a60>
cmp    %eax,%edx
jbe    805eb78 <__sprintf_chk@plt+0x14a38>
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
test   %eax,%eax
setg   %al
movzbl %al,%eax
lea    -0x1(%eax,%eax,1),%eax
jmp    805e848 <__sprintf_chk@plt+0x14708>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x64(%esp)
lea    0x68(%esp),%ebp
jne    805eab1 <__sprintf_chk@plt+0x14971>
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805ea98 <__sprintf_chk@plt+0x14958>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
test   %bl,%bl
movb   $0x1,0x70(%esp)
je     805e900 <__sprintf_chk@plt+0x147c0>
mov    0x80(%esp),%ebp
test   %ebp,%ebp
je     805ec00 <__sprintf_chk@plt+0x14ac0>
cmpb   $0x0,0x44(%esp)
je     805e83d <__sprintf_chk@plt+0x146fd>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049a20 <towlower@plt>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8049a20 <towlower@plt>
sub    %eax,%ebx
mov    %ebx,%eax
test   %eax,%eax
jne    805e848 <__sprintf_chk@plt+0x14708>
mov    0x3c(%esp),%eax
mov    0x78(%esp),%edx
add    0x40(%esp),%eax
add    %edx,0x74(%esp)
cmpb   $0x0,0x2c(%esp)
mov    %eax,0x3c(%esp)
movb   $0x0,0x38(%esp)
movb   $0x0,0x70(%esp)
je     805e7f0 <__sprintf_chk@plt+0x146b0>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805e8d8 <__sprintf_chk@plt+0x14798>
cmp    $0xfffffffe,%eax
je     805ebc0 <__sprintf_chk@plt+0x14a80>
test   %eax,%eax
jne    805ea74 <__sprintf_chk@plt+0x14934>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805ee84 <__sprintf_chk@plt+0x14d44>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805eea8 <__sprintf_chk@plt+0x14d68>
mov    %esi,(%esp)
movb   $0x1,0x44(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805e81f <__sprintf_chk@plt+0x146df>
movb   $0x0,0x2c(%esp)
jmp    805e81f <__sprintf_chk@plt+0x146df>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x68(%esp),%ebp
mov    %ebp,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805ee5b <__sprintf_chk@plt+0x14d1b>
movb   $0x1,0x64(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     805eb60 <__sprintf_chk@plt+0x14a20>
cmp    $0xfffffffe,%eax
je     805ebe0 <__sprintf_chk@plt+0x14aa0>
test   %eax,%eax
jne    805eb1b <__sprintf_chk@plt+0x149db>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    805ee84 <__sprintf_chk@plt+0x14d44>
mov    0x80(%esp),%eax
test   %eax,%eax
jne    805eea8 <__sprintf_chk@plt+0x14d68>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x7c(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805e99a <__sprintf_chk@plt+0x1485a>
movb   $0x0,0x64(%esp)
jmp    805e99a <__sprintf_chk@plt+0x1485a>
nop
mov    %esi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805ee5b <__sprintf_chk@plt+0x14d1b>
movb   $0x1,0x2c(%esp)
jmp    805ea0c <__sprintf_chk@plt+0x148cc>
lea    0x0(%esi),%esi
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
jmp    805e99a <__sprintf_chk@plt+0x1485a>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
sar    $0x1f,%eax
or     $0x1,%eax
jmp    805e848 <__sprintf_chk@plt+0x14708>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
jmp    805e9db <__sprintf_chk@plt+0x1489b>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805e8e5 <__sprintf_chk@plt+0x147a5>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    805e99a <__sprintf_chk@plt+0x1485a>
lea    0x0(%esi),%esi
cmpb   $0x0,0x38(%esp)
jne    805e830 <__sprintf_chk@plt+0x146f0>
cmpb   $0x0,0x2c(%esp)
lea    0x30(%esp),%esi
jne    805ed66 <__sprintf_chk@plt+0x14c26>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805ed4d <__sprintf_chk@plt+0x14c0d>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     805e83d <__sprintf_chk@plt+0x146fd>
jmp    805ec68 <__sprintf_chk@plt+0x14b28>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805e848 <__sprintf_chk@plt+0x14708>
nop
mov    0x48(%esp),%esi
test   %esi,%esi
xchg   %ax,%ax
jne    805e83d <__sprintf_chk@plt+0x146fd>
cmpb   $0x0,0x70(%esp)
jne    805ee0a <__sprintf_chk@plt+0x14cca>
cmpb   $0x0,0x64(%esp)
lea    0x68(%esp),%ebp
jne    805ecc4 <__sprintf_chk@plt+0x14b84>
mov    0x74(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jb     805ee14 <__sprintf_chk@plt+0x14cd4>
lea    0x68(%esp),%ebp
mov    %ebp,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805ee5b <__sprintf_chk@plt+0x14d1b>
movb   $0x1,0x64(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
lea    0x2(%eax),%edx
cmp    $0x1,%edx
mov    %eax,0x78(%esp)
jbe    805ee00 <__sprintf_chk@plt+0x14cc0>
test   %eax,%eax
jne    805ed30 <__sprintf_chk@plt+0x14bf0>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    805ee84 <__sprintf_chk@plt+0x14d44>
mov    0x80(%esp),%ecx
test   %ecx,%ecx
jne    805eea8 <__sprintf_chk@plt+0x14d68>
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     805ee00 <__sprintf_chk@plt+0x14cc0>
mov    0x80(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
neg    %eax
jmp    805e848 <__sprintf_chk@plt+0x14708>
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805ee5b <__sprintf_chk@plt+0x14d1b>
movb   $0x1,0x2c(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805ee47 <__sprintf_chk@plt+0x14d07>
cmp    $0xfffffffe,%eax
je     805ee2b <__sprintf_chk@plt+0x14ceb>
test   %eax,%eax
jne    805edce <__sprintf_chk@plt+0x14c8e>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805ee84 <__sprintf_chk@plt+0x14d44>
mov    0x48(%esp),%edi
test   %edi,%edi
jne    805eea8 <__sprintf_chk@plt+0x14d68>
mov    %esi,(%esp)
movb   $0x1,0x44(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805ec4d <__sprintf_chk@plt+0x14b0d>
movb   $0x0,0x2c(%esp)
jmp    805ec4d <__sprintf_chk@plt+0x14b0d>
lea    0x0(%esi),%esi
movzbl %bl,%eax
sub    %edx,%eax
jmp    805e848 <__sprintf_chk@plt+0x14708>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    805e848 <__sprintf_chk@plt+0x14708>
movzbl 0x7c(%esp),%ebx
jmp    805ed30 <__sprintf_chk@plt+0x14bf0>
movl   $0x1,0x78(%esp)
movsbl (%edx),%eax
mov    %eax,0x80(%esp)
jmp    805ed30 <__sprintf_chk@plt+0x14bf0>
mov    0x3c(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805ec4d <__sprintf_chk@plt+0x14b0d>
movl   $0x1,0x40(%esp)
xor    %ebx,%ebx
movb   $0x0,0x44(%esp)
jmp    805ec4d <__sprintf_chk@plt+0x14b0d>
movl   $0x806e5a0,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e491,(%esp)
call   804a110 <__assert_fail@plt>
call   8049ac0 <__stack_chk_fail@plt>
movl   $0x806e5a0,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4a8,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e5a0,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4bf,(%esp)
call   804a110 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x28(%esp),%edx
test   $0x40,%dl
cmovne 0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049da0 <openat64@plt>
mov    %eax,(%esp)
call   8063690 <__sprintf_chk@plt+0x19550>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     805ef93 <__sprintf_chk@plt+0x14e53>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049f50 <strrchr@plt>
test   %eax,%eax
je     805ef7f <__sprintf_chk@plt+0x14e3f>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    805ef7f <__sprintf_chk@plt+0x14e3f>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x806e5ec,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    805ef7f <__sprintf_chk@plt+0x14e3f>
mov    $0x3,%ecx
mov    $0x806e5f4,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    805ef7f <__sprintf_chk@plt+0x14e3f>
lea    0x4(%eax),%ebx
mov    %ebx,0x80742c0
mov    %ebx,0x8074b28
mov    %ebx,0x80742e0
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80742c4,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x806e5b4,(%esp)
mov    %eax,0xc(%esp)
call   8049ba0 <fwrite@plt>
call   804a080 <abort@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xac,%esp
movl   $0x2,0x4(%esp)
lea    0x30(%esp),%ebp
mov    %edx,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
call   80630c0 <__sprintf_chk@plt+0x18f80>
mov    %eax,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ebx)
je     805f2eb <__sprintf_chk@plt+0x151ab>
mov    0x18(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   806a370 <fts_children+0x1470>
test   %eax,%eax
mov    %eax,%esi
je     805f2eb <__sprintf_chk@plt+0x151ab>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    805f5f0 <__sprintf_chk@plt+0x154b0>
cmp    %esi,%ebx
movl   $0x0,0x4(%ebp)
mov    %ebx,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
jae    805f650 <__sprintf_chk@plt+0x15510>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2c(%esp)
jne    805f0ad <__sprintf_chk@plt+0x14f6d>
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806e580(,%edx,4),%edx
bt     %eax,%edx
jae    805f098 <__sprintf_chk@plt+0x14f58>
movl   $0x1,0x40(%esp)
movsbl (%ebx),%edi
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
test   %edi,%edi
movb   $0x1,0x38(%esp)
jne    805f142 <__sprintf_chk@plt+0x15002>
call   804a080 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f7fa <__sprintf_chk@plt+0x156ba>
movb   $0x1,0x2c(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805f550 <__sprintf_chk@plt+0x15410>
cmp    $0xfffffffe,%eax
je     805f5c0 <__sprintf_chk@plt+0x15480>
test   %eax,%eax
jne    805f5b0 <__sprintf_chk@plt+0x15470>
mov    0x3c(%esp),%ebx
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%ebx)
jne    805f81e <__sprintf_chk@plt+0x156de>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805f847 <__sprintf_chk@plt+0x15707>
xor    %edi,%edi
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f082 <__sprintf_chk@plt+0x14f42>
test   %edi,%edi
movb   $0x0,0x2c(%esp)
movb   $0x1,0x38(%esp)
je     805f08f <__sprintf_chk@plt+0x14f4f>
mov    0x3c(%esp),%ebx
add    0x40(%esp),%ebx
movzbl 0x44(%esp),%eax
movb   $0x0,0x38(%esp)
cmp    %ebx,%esi
mov    %ebx,0x3c(%esp)
ja     805f050 <__sprintf_chk@plt+0x14f10>
test   %al,%al
je     805f650 <__sprintf_chk@plt+0x15510>
mov    %edi,(%esp)
call   8049e70 <iswalnum@plt>
test   %eax,%eax
sete   0x1f(%esp)
movb   $0x0,0x64(%esp)
movzbl 0x64(%esp),%ebx
lea    0x68(%esp),%edi
mov    0x18(%esp),%eax
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
test   %bl,%bl
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
mov    %eax,0x74(%esp)
movl   $0x0,0x68(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x0,0x70(%esp)
mov    %esi,0x14(%esp)
jne    805f387 <__sprintf_chk@plt+0x15247>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %edx,%ecx
jae    805f518 <__sprintf_chk@plt+0x153d8>
movl   $0x1,0x78(%esp)
movsbl (%eax),%eax
movb   $0x1,0x7c(%esp)
mov    %eax,0x80(%esp)
mov    0x80(%esp),%edx
movb   $0x1,0x70(%esp)
test   %edx,%edx
jne    805f347 <__sprintf_chk@plt+0x15207>
test   %bl,%bl
mov    0x14(%esp),%esi
jne    805f5e0 <__sprintf_chk@plt+0x154a0>
cmpb   $0x0,0x2c(%esp)
jne    805f711 <__sprintf_chk@plt+0x155d1>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805f6fc <__sprintf_chk@plt+0x155bc>
movl   $0x1,0x40(%esp)
movsbl (%edx),%edi
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %edi,0x48(%esp)
movb   $0x1,0x38(%esp)
test   %bl,%bl
je     805f272 <__sprintf_chk@plt+0x15132>
test   %edi,%edi
je     805f288 <__sprintf_chk@plt+0x15148>
cmpb   $0x0,0x44(%esp)
je     805f288 <__sprintf_chk@plt+0x15148>
mov    %edi,(%esp)
call   8049e70 <iswalnum@plt>
test   %eax,%eax
jne    805f293 <__sprintf_chk@plt+0x15153>
lea    0x0(%esi),%esi
cmpb   $0x0,0x1f(%esp)
jne    805f7f0 <__sprintf_chk@plt+0x156b0>
movl   $0x0,0x4(%ebp)
mov    %esi,0x3c(%esp)
movb   $0x0,0x2c(%esp)
movl   $0x0,0x0(%ebp)
movb   $0x0,0x38(%esp)
movzbl (%esi),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806e580(,%edx,4),%edx
bt     %eax,%edx
jae    805f660 <__sprintf_chk@plt+0x15520>
movl   $0x1,0x40(%esp)
movsbl (%esi),%eax
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
mov    0x48(%esp),%eax
movb   $0x1,0x38(%esp)
test   %eax,%eax
jne    805f322 <__sprintf_chk@plt+0x151e2>
xor    %ebx,%ebx
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    %ebx,%eax
mov    0x9c(%esp),%edi
xor    %gs:0x14,%edi
jne    805f842 <__sprintf_chk@plt+0x15702>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    805eff8 <__sprintf_chk@plt+0x14eb8>
lea    0x0(%esi),%esi
movzbl 0x38(%esp),%ebx
movl   $0x1,0x78(%esp)
movb   $0x0,0x7c(%esp)
movb   $0x1,0x70(%esp)
test   %bl,%bl
je     805f418 <__sprintf_chk@plt+0x152d8>
movzbl 0x44(%esp),%ebx
test   %bl,%bl
jne    805f460 <__sprintf_chk@plt+0x15320>
mov    0x40(%esp),%eax
movzbl 0x64(%esp),%ebx
add    %eax,0x3c(%esp)
mov    0x74(%esp),%eax
add    0x78(%esp),%eax
test   %bl,%bl
movb   $0x0,0x38(%esp)
mov    %eax,0x74(%esp)
movb   $0x0,0x70(%esp)
je     805f1d0 <__sprintf_chk@plt+0x15090>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x74(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x78(%esp)
je     805f330 <__sprintf_chk@plt+0x151f0>
cmp    $0xfffffffe,%eax
je     805f570 <__sprintf_chk@plt+0x15430>
test   %eax,%eax
jne    805f3f5 <__sprintf_chk@plt+0x152b5>
mov    0x74(%esp),%eax
movl   $0x1,0x78(%esp)
cmpb   $0x0,(%eax)
jne    805f81e <__sprintf_chk@plt+0x156de>
mov    0x80(%esp),%esi
test   %esi,%esi
jne    805f847 <__sprintf_chk@plt+0x15707>
mov    %edi,(%esp)
movb   $0x1,0x7c(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f40b <__sprintf_chk@plt+0x152cb>
movb   $0x0,0x64(%esp)
movzbl 0x38(%esp),%ebx
jmp    805f202 <__sprintf_chk@plt+0x150c2>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2c(%esp)
jne    805f48d <__sprintf_chk@plt+0x1534d>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    805f478 <__sprintf_chk@plt+0x15338>
movl   $0x1,0x40(%esp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
mov    %eax,0x48(%esp)
test   %bl,%bl
movb   $0x1,0x38(%esp)
je     805f35c <__sprintf_chk@plt+0x1521c>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805f35c <__sprintf_chk@plt+0x1521c>
jmp    805f08f <__sprintf_chk@plt+0x14f4f>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f7fa <__sprintf_chk@plt+0x156ba>
movb   $0x1,0x2c(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805f538 <__sprintf_chk@plt+0x153f8>
cmp    $0xfffffffe,%eax
je     805f590 <__sprintf_chk@plt+0x15450>
test   %eax,%eax
jne    805f4f1 <__sprintf_chk@plt+0x153b1>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805f81e <__sprintf_chk@plt+0x156de>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805f847 <__sprintf_chk@plt+0x15707>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f453 <__sprintf_chk@plt+0x15313>
movb   $0x0,0x2c(%esp)
jmp    805f453 <__sprintf_chk@plt+0x15313>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f7fa <__sprintf_chk@plt+0x156ba>
movb   $0x1,0x64(%esp)
jmp    805f387 <__sprintf_chk@plt+0x15247>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
movb   $0x0,0x44(%esp)
jmp    805f453 <__sprintf_chk@plt+0x15313>
lea    0x0(%esi),%esi
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    0x3c(%esp),%ebx
jmp    805f146 <__sprintf_chk@plt+0x15006>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movzbl 0x38(%esp),%ebx
movb   $0x0,0x7c(%esp)
mov    %eax,0x78(%esp)
jmp    805f342 <__sprintf_chk@plt+0x15202>
nop
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805f453 <__sprintf_chk@plt+0x15313>
lea    0x0(%esi),%esi
mov    0x48(%esp),%edi
jmp    805f11b <__sprintf_chk@plt+0x14fdb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805f146 <__sprintf_chk@plt+0x15006>
xchg   %ax,%ax
mov    0x48(%esp),%edi
movzbl 0x44(%esp),%ebx
jmp    805f26a <__sprintf_chk@plt+0x1512a>
xchg   %ax,%ax
cmp    %esi,%ebx
mov    $0x1,%edi
jae    805f612 <__sprintf_chk@plt+0x154d2>
call   804a120 <__ctype_b_loc@plt>
movzbl -0x1(%esi),%edx
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edi
shr    $0x3,%di
xor    $0x1,%edi
and    $0x1,%edi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movzbl (%esi,%eax,1),%ebx
test   %bl,%bl
je     805f633 <__sprintf_chk@plt+0x154f3>
call   804a120 <__ctype_b_loc@plt>
mov    (%eax),%eax
testb  $0x8,(%eax,%ebx,2)
jne    805f63d <__sprintf_chk@plt+0x154fd>
mov    %edi,%eax
test   %al,%al
jne    805f7f0 <__sprintf_chk@plt+0x156b0>
cmpb   $0x0,(%esi)
je     805f2eb <__sprintf_chk@plt+0x151ab>
lea    0x1(%esi),%ebx
jmp    805eff8 <__sprintf_chk@plt+0x14eb8>
xchg   %ax,%ax
movb   $0x1,0x1f(%esp)
jmp    805f177 <__sprintf_chk@plt+0x15037>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f7fa <__sprintf_chk@plt+0x156ba>
movb   $0x1,0x2c(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %ebp,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805f31a <__sprintf_chk@plt+0x151da>
cmp    $0xfffffffe,%eax
je     805f7a1 <__sprintf_chk@plt+0x15661>
test   %eax,%eax
jne    805f6dd <__sprintf_chk@plt+0x1559d>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805f81e <__sprintf_chk@plt+0x156de>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
jne    805f847 <__sprintf_chk@plt+0x15707>
mov    %ebp,(%esp)
movb   $0x1,0x44(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f2de <__sprintf_chk@plt+0x1519e>
movb   $0x0,0x2c(%esp)
jmp    805f2de <__sprintf_chk@plt+0x1519e>
mov    %ebp,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f7fa <__sprintf_chk@plt+0x156ba>
movb   $0x1,0x2c(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x3c(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x40(%esp)
je     805f7bc <__sprintf_chk@plt+0x1567c>
cmp    $0xfffffffe,%eax
je     805f7d2 <__sprintf_chk@plt+0x15692>
test   %eax,%eax
jne    805f779 <__sprintf_chk@plt+0x15639>
mov    0x3c(%esp),%eax
movl   $0x1,0x40(%esp)
cmpb   $0x0,(%eax)
jne    805f81e <__sprintf_chk@plt+0x156de>
mov    0x48(%esp),%ebx
test   %ebx,%ebx
jne    805f847 <__sprintf_chk@plt+0x15707>
xor    %edi,%edi
jmp    805f77d <__sprintf_chk@plt+0x1563d>
mov    0x48(%esp),%edi
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0x44(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     805f265 <__sprintf_chk@plt+0x15125>
movb   $0x0,0x2c(%esp)
jmp    805f265 <__sprintf_chk@plt+0x15125>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    %eax,0x40(%esp)
add    0x40(%esp),%esi
mov    %esi,%ebx
jmp    805eff8 <__sprintf_chk@plt+0x14eb8>
movl   $0x1,0x40(%esp)
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
jmp    805f265 <__sprintf_chk@plt+0x15125>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    0x48(%esp),%edi
movb   $0x0,0x44(%esp)
mov    %eax,0x40(%esp)
jmp    805f265 <__sprintf_chk@plt+0x15125>
mov    $0x1,%ebx
jmp    805f2ed <__sprintf_chk@plt+0x151ad>
movl   $0x806e600,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e491,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e600,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4a8,(%esp)
call   804a110 <__assert_fail@plt>
call   8049ac0 <__stack_chk_fail@plt>
movl   $0x806e600,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4bf,(%esp)
call   804a110 <__assert_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
movl   $0x5,0x8(%esp)
movl   $0x0,(%esp)
mov    %esi,0x4(%esp)
call   8049a90 <dcgettext@plt>
cmp    %esi,%eax
mov    %eax,%ebx
je     805f8a3 <__sprintf_chk@plt+0x15763>
mov    %esi,%edx
call   805efc0 <__sprintf_chk@plt+0x14e80>
test   %al,%al
je     805f8b0 <__sprintf_chk@plt+0x15770>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
mov    %esi,(%esp)
mov    %eax,%edi
call   8049d70 <strlen@plt>
lea    0x4(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %esi,0x14(%esp)
mov    %ebx,0x10(%esp)
movl   $0x806e5f8,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%edi
mov    %eax,(%esp)
mov    %edi,%ebx
call   804a140 <__sprintf_chk@plt>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x44(%esp),%ebx
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebx,%ebp
mov    %eax,0x18(%esp)
call   80694b0 <fts_children+0x5b0>
movl   $0x806c21e,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   8069120 <fts_children+0x220>
test   %eax,%eax
jne    805fa28 <__sprintf_chk@plt+0x158e8>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
je     805fae8 <__sprintf_chk@plt+0x159a8>
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
jne    805f9b8 <__sprintf_chk@plt+0x15878>
cmp    %ebx,%esi
jne    805fb08 <__sprintf_chk@plt+0x159c8>
cmp    %ebx,%edi
xchg   %ax,%ax
jne    805f9a0 <__sprintf_chk@plt+0x15860>
mov    %ebx,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     805f992 <__sprintf_chk@plt+0x15852>
mov    %edi,(%esp)
call   80499d0 <free@plt>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x40(%esp),%edx
mov    0x18(%esp),%eax
call   805efc0 <__sprintf_chk@plt+0x14e80>
test   %al,%al
jne    805fa00 <__sprintf_chk@plt+0x158c0>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     805f9e2 <__sprintf_chk@plt+0x158a2>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
call   805efc0 <__sprintf_chk@plt+0x14e80>
test   %al,%al
jne    805fa00 <__sprintf_chk@plt+0x158c0>
test   %ebp,%ebp
je     805fb20 <__sprintf_chk@plt+0x159e0>
mov    0x18(%esp),%eax
mov    %ebp,%edx
call   805efc0 <__sprintf_chk@plt+0x14e80>
test   %al,%al
je     805fb20 <__sprintf_chk@plt+0x159e0>
lea    0x0(%esi),%esi
test   %esi,%esi
je     805fa0c <__sprintf_chk@plt+0x158cc>
mov    %esi,(%esp)
call   80499d0 <free@plt>
test   %edi,%edi
mov    0x18(%esp),%eax
je     805f994 <__sprintf_chk@plt+0x15854>
mov    %edi,(%esp)
call   80499d0 <free@plt>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,0x8(%esp)
movl   $0x806c21e,0x4(%esp)
mov    %ebx,(%esp)
call   8065390 <__sprintf_chk@plt+0x1b250>
mov    %edi,(%esp)
mov    %eax,%esi
call   8049d70 <strlen@plt>
mov    %eax,%ebp
lea    0xb(%eax),%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   80499f0 <memcpy@plt>
mov    0x1c(%esp),%edx
mov    $0x5449,%ecx
add    %edx,%ebp
mov    %cx,0x8(%ebp)
movl   $0x52542f2f,0x0(%ebp)
movl   $0x4c534e41,0x4(%ebp)
movb   $0x0,0xa(%ebp)
mov    %edx,0x8(%esp)
movl   $0x806c21e,0x4(%esp)
mov    %ebx,(%esp)
call   8065390 <__sprintf_chk@plt+0x1b250>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
call   80499d0 <free@plt>
test   %ebp,%ebp
je     805fba0 <__sprintf_chk@plt+0x15a60>
movl   $0x3f,0x4(%esp)
mov    %ebp,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     805fb8f <__sprintf_chk@plt+0x15a4f>
mov    %ebp,(%esp)
mov    %esi,%ebx
xor    %ebp,%ebp
call   80499d0 <free@plt>
xor    %edi,%edi
test   %ebx,%ebx
mov    %ebx,0x1c(%esp)
jne    805f96c <__sprintf_chk@plt+0x1582c>
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     805fba8 <__sprintf_chk@plt+0x15a68>
mov    %ebx,%edi
mov    %ebp,%ebx
movl   $0x0,0x1c(%esp)
jmp    805f96c <__sprintf_chk@plt+0x1582c>
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     805f98c <__sprintf_chk@plt+0x1584c>
mov    %esi,(%esp)
call   80499d0 <free@plt>
jmp    805f98c <__sprintf_chk@plt+0x1584c>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8049d70 <strlen@plt>
lea    0x4(%ebp,%eax,1),%eax
mov    %eax,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    %ebx,0x14(%esp)
movl   $0x806e5f8,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebp
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
call   804a140 <__sprintf_chk@plt>
test   %esi,%esi
je     805fb7c <__sprintf_chk@plt+0x15a3c>
mov    %esi,(%esp)
call   80499d0 <free@plt>
test   %edi,%edi
mov    %ebp,%eax
je     805f994 <__sprintf_chk@plt+0x15854>
mov    %ebp,0x18(%esp)
jmp    805fa14 <__sprintf_chk@plt+0x158d4>
test   %esi,%esi
je     805fbb7 <__sprintf_chk@plt+0x15a77>
mov    %esi,0x1c(%esp)
mov    %ebp,%edi
mov    %esi,%ebx
jmp    805f96c <__sprintf_chk@plt+0x1582c>
mov    %esi,%ebx
jmp    805f95e <__sprintf_chk@plt+0x1581e>
nop
mov    %ebp,0x1c(%esp)
mov    %ebp,%edi
mov    0x40(%esp),%ebx
jmp    805f96c <__sprintf_chk@plt+0x1582c>
mov    %ebp,%ebx
jmp    805faf0 <__sprintf_chk@plt+0x159b0>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
lea    -0x41(%ecx),%ebx
sub    $0x1c,%esp
cmp    $0x19,%ebx
mov    0x30(%esp),%edi
mov    %edx,0xc(%esp)
mov    0x34(%esp),%ebp
ja     805fc78 <__sprintf_chk@plt+0x15b38>
movzbl 0x6(%eax),%ebx
and    $0xffffffdf,%ebx
cmp    %cl,%bl
sete   %dl
mov    %edx,%esi
mov    %esi,%edx
xor    %ebx,%ebx
test   %dl,%dl
je     805fc68 <__sprintf_chk@plt+0x15b28>
test   %cl,%cl
mov    $0x1,%bl
je     805fc68 <__sprintf_chk@plt+0x15b28>
mov    %edi,%edx
movsbl %dl,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
jbe    805fc88 <__sprintf_chk@plt+0x15b48>
mov    %edi,%edx
cmp    0x7(%eax),%dl
sete   %cl
xor    %ebx,%ebx
test   %cl,%cl
je     805fc68 <__sprintf_chk@plt+0x15b28>
mov    %edi,%edx
mov    $0x1,%bl
test   %dl,%dl
je     805fc68 <__sprintf_chk@plt+0x15b28>
mov    %ebp,%ebx
movsbl %bl,%ecx
sub    $0x41,%ecx
cmp    $0x19,%ecx
ja     805fca0 <__sprintf_chk@plt+0x15b60>
movzbl 0x8(%eax),%ecx
and    $0xffffffdf,%ecx
cmp    %cl,%bl
sete   %cl
xor    %ebx,%ebx
test   %cl,%cl
je     805fc68 <__sprintf_chk@plt+0x15b28>
mov    %ebp,%edx
mov    $0x1,%bl
test   %dl,%dl
je     805fc68 <__sprintf_chk@plt+0x15b28>
mov    0xc(%esp),%edx
add    $0x9,%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
add    $0x9,%edx
mov    %edx,0x4(%esp)
call   8069120 <fts_children+0x220>
test   %eax,%eax
sete   %bl
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %cl,0x6(%eax)
sete   %dl
mov    %edx,%esi
jmp    805fbed <__sprintf_chk@plt+0x15aad>
lea    0x0(%esi),%esi
movzbl 0x7(%eax),%ecx
and    $0xffffffdf,%ecx
cmp    %cl,%dl
sete   %cl
jmp    805fc14 <__sprintf_chk@plt+0x15ad4>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%ebx
cmp    0x8(%eax),%bl
sete   %cl
jmp    805fc3b <__sprintf_chk@plt+0x15afb>
lea    0x0(%esi),%esi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     805fce0 <__sprintf_chk@plt+0x15ba0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   80694b0 <fts_children+0x5b0>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    805fd48 <__sprintf_chk@plt+0x15c08>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x2d,0x3(%eax)
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x38,0x4(%eax)
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x0,0x5(%eax)
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x60,(%esi)
mov    $0x806e61e,%eax
mov    $0x806e613,%edx
cmovne %edx,%eax
jmp    805fcd8 <__sprintf_chk@plt+0x15b98>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x806e34b,%eax
cmp    $0x7,%edi
mov    $0x806e4bd,%edx
cmovne %edx,%eax
jmp    805fcd8 <__sprintf_chk@plt+0x15b98>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x31,0x2(%eax)
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x38,0x3(%eax)
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x30,0x4(%eax)
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x33,0x5(%eax)
jne    805fd30 <__sprintf_chk@plt+0x15bf0>
movl   $0x0,0x4(%esp)
mov    $0x30,%ecx
mov    $0x806e622,%edx
movl   $0x0,(%esp)
call   805fbc0 <__sprintf_chk@plt+0x15a80>
test   %eax,%eax
je     805fd30 <__sprintf_chk@plt+0x15bf0>
cmpb   $0x60,(%esi)
mov    $0x806e61a,%eax
mov    $0x806e617,%edx
cmovne %edx,%eax
jmp    805fcd8 <__sprintf_chk@plt+0x15b98>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    %eax,0x30(%esp)
mov    0xac(%esp),%eax
mov    %edx,0x24(%esp)
mov    0xa0(%esp),%esi
mov    %ecx,0x28(%esp)
mov    %eax,0x3c(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x4c(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0x48(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x7c(%esp)
xor    %eax,%eax
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x54(%esp)
mov    0xa8(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0xa4(%esp)
mov    %al,0x39(%esp)
ja     80606d8 <__sprintf_chk@plt+0x16598>
mov    0xa4(%esp),%eax
jmp    *0x806e660(,%eax,4)
nop
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x0,0x39(%esp)
movb   $0x0,0x3b(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x40(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
movzbl 0x39(%esp),%ecx
test   %ebx,%ebx
movzbl 0x3b(%esp),%ebx
setne  %dl
mov    %dl,0x69(%esp)
and    %ebx,%edx
mov    %dl,0x3a(%esp)
mov    0xa8(%esp),%edx
and    $0x1,%edx
mov    %edx,0x5c(%esp)
mov    0xa8(%esp),%edx
and    $0x4,%edx
mov    %edx,0x60(%esp)
mov    %ecx,%edx
and    %ebx,%edx
cmpl   $0x2,0xa4(%esp)
mov    %dl,0x68(%esp)
sete   %bl
xor    %edi,%edi
mov    %bl,0x53(%esp)
and    %ecx,%ebx
xor    $0x1,%ecx
and    %ecx,%eax
mov    %bl,0x51(%esp)
mov    %cl,0x6a(%esp)
mov    %al,0x50(%esp)
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
je     8060023 <__sprintf_chk@plt+0x15ee3>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
je     8060036 <__sprintf_chk@plt+0x15ef6>
cmpb   $0x0,0x3a(%esp)
jne    80604b8 <__sprintf_chk@plt+0x16378>
mov    0x28(%esp),%eax
movb   $0x0,0x2c(%esp)
lea    (%eax,%edi,1),%ecx
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     8060268 <__sprintf_chk@plt+0x16128>
movzbl %bl,%eax
jmp    *0x806e684(,%eax,4)
lea    0x0(%esi),%esi
cmpl   $0x2,0xa4(%esp)
je     80606b8 <__sprintf_chk@plt+0x16578>
cmpl   $0x3,0xa4(%esp)
jne    805ffc0 <__sprintf_chk@plt+0x15e80>
mov    0x60(%esp),%edx
test   %edx,%edx
je     805ffc0 <__sprintf_chk@plt+0x15e80>
lea    0x2(%edi),%edx
cmp    %edx,%esi
jbe    805ffc0 <__sprintf_chk@plt+0x15e80>
mov    0x28(%esp),%eax
cmpb   $0x3f,0x1(%eax,%edi,1)
jne    805ffc0 <__sprintf_chk@plt+0x15e80>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x44(%esp)
ja     805ffc0 <__sprintf_chk@plt+0x15e80>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     805ffc0 <__sprintf_chk@plt+0x15e80>
cmpb   $0x0,0x39(%esp)
jne    80600c8 <__sprintf_chk@plt+0x15f88>
cmp    0x24(%esp),%ebp
jae    805ff7d <__sprintf_chk@plt+0x15e3d>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805ff8f <__sprintf_chk@plt+0x15e4f>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805ffa1 <__sprintf_chk@plt+0x15e61>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    805ffb3 <__sprintf_chk@plt+0x15e73>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x44(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%edi
lea    0x0(%esi),%esi
cmpb   $0x0,0x50(%esp)
jne    805ffdf <__sprintf_chk@plt+0x15e9f>
mov    0x3c(%esp),%edx
test   %edx,%edx
je     805ffdf <__sprintf_chk@plt+0x15e9f>
mov    %ebx,%eax
shr    $0x5,%al
movzbl %al,%eax
mov    (%edx,%eax,4),%eax
bt     %ebx,%eax
jb     805ffe6 <__sprintf_chk@plt+0x15ea6>
cmpb   $0x0,0x2c(%esp)
je     8060002 <__sprintf_chk@plt+0x15ec2>
cmpb   $0x0,0x39(%esp)
jne    80600c8 <__sprintf_chk@plt+0x15f88>
cmp    0x24(%esp),%ebp
jae    805ffff <__sprintf_chk@plt+0x15ebf>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%edi
cmp    0x24(%esp),%ebp
jae    8060012 <__sprintf_chk@plt+0x15ed2>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
cmp    %esi,%edi
setne  %al
cmp    $0xffffffff,%esi
jne    805fed0 <__sprintf_chk@plt+0x15d90>
mov    0x28(%esp),%eax
cmpb   $0x0,(%eax,%edi,1)
setne  %al
test   %al,%al
jne    805fed8 <__sprintf_chk@plt+0x15d98>
cmpb   $0x0,0x53(%esp)
je     806004c <__sprintf_chk@plt+0x15f0c>
test   %ebp,%ebp
jne    806004c <__sprintf_chk@plt+0x15f0c>
cmpb   $0x0,0x39(%esp)
jne    80600c8 <__sprintf_chk@plt+0x15f88>
cmpb   $0x0,0x6a(%esp)
je     8060082 <__sprintf_chk@plt+0x15f42>
mov    0x40(%esp),%eax
test   %eax,%eax
je     8060082 <__sprintf_chk@plt+0x15f42>
mov    0x40(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     8060082 <__sprintf_chk@plt+0x15f42>
mov    0x30(%esp),%ebx
sub    %ebp,%edx
mov    0x24(%esp),%ecx
cmp    %ebp,%ecx
jbe    8060077 <__sprintf_chk@plt+0x15f37>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    8060070 <__sprintf_chk@plt+0x15f30>
cmp    0x24(%esp),%ebp
mov    %ebp,%eax
jae    806010d <__sprintf_chk@plt+0x15fcd>
mov    0x30(%esp),%esi
movb   $0x0,(%esi,%ebp,1)
jmp    806010d <__sprintf_chk@plt+0x15fcd>
cmp    $0x1,%esi
setne  %al
cmp    $0xffffffff,%esi
je     80606c8 <__sprintf_chk@plt+0x16588>
test   %al,%al
jne    805ffc0 <__sprintf_chk@plt+0x15e80>
test   %edi,%edi
jne    805ffc0 <__sprintf_chk@plt+0x15e80>
cmpb   $0x0,0x51(%esp)
je     805ffc0 <__sprintf_chk@plt+0x15e80>
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
mov    0x28(%esp),%ecx
mov    0x24(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0xa8(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x7c(%esp),%esi
xor    %gs:0x14,%esi
jne    8060765 <__sprintf_chk@plt+0x16625>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpb   $0x0,0x51(%esp)
jne    80600c8 <__sprintf_chk@plt+0x15f88>
cmpb   $0x0,0x3b(%esp)
je     805ffc0 <__sprintf_chk@plt+0x15e80>
mov    %eax,%ebx
jmp    805ffe6 <__sprintf_chk@plt+0x15ea6>
xchg   %ax,%ax
mov    $0x62,%eax
jmp    806013c <__sprintf_chk@plt+0x15ffc>
nop
mov    $0x66,%eax
jmp    806013c <__sprintf_chk@plt+0x15ffc>
nop
mov    $0x76,%eax
jmp    806013c <__sprintf_chk@plt+0x15ffc>
nop
mov    $0x61,%eax
jmp    806013c <__sprintf_chk@plt+0x15ffc>
nop
mov    $0x6e,%eax
jmp    8060135 <__sprintf_chk@plt+0x15ff5>
nop
mov    $0x74,%eax
jmp    8060135 <__sprintf_chk@plt+0x15ff5>
nop
cmpb   $0x0,0x3b(%esp)
je     80606a0 <__sprintf_chk@plt+0x16560>
cmpb   $0x0,0x39(%esp)
jne    80600c8 <__sprintf_chk@plt+0x15f88>
cmp    0x24(%esp),%ebp
jae    80601a4 <__sprintf_chk@plt+0x16064>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%edi),%edx
cmp    %edx,%esi
lea    0x1(%ebp),%eax
jbe    80601e8 <__sprintf_chk@plt+0x160a8>
mov    0x28(%esp),%ecx
movzbl 0x1(%ecx,%edi,1),%edx
mov    %edx,%ecx
mov    %dl,0x44(%esp)
lea    -0x30(%ecx),%edx
cmp    $0x9,%dl
ja     80601e8 <__sprintf_chk@plt+0x160a8>
cmp    %eax,0x24(%esp)
ja     80606f8 <__sprintf_chk@plt+0x165b8>
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    80601e1 <__sprintf_chk@plt+0x160a1>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    805ffc7 <__sprintf_chk@plt+0x15e87>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x68(%esp)
je     806020a <__sprintf_chk@plt+0x160ca>
cmpb   $0x0,0x69(%esp)
jne    8060002 <__sprintf_chk@plt+0x15ec2>
mov    %ebx,%eax
jmp    8060135 <__sprintf_chk@plt+0x15ff5>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x53(%esp)
je     805ffc0 <__sprintf_chk@plt+0x15e80>
cmpb   $0x0,0x39(%esp)
jne    80600c8 <__sprintf_chk@plt+0x15f88>
cmp    0x24(%esp),%ebp
jae    806023c <__sprintf_chk@plt+0x160fc>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    806024e <__sprintf_chk@plt+0x1610e>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,0x24(%esp)
jbe    8060260 <__sprintf_chk@plt+0x16120>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    805ffc0 <__sprintf_chk@plt+0x15e80>
cmpl   $0x1,0x54(%esp)
jne    8060530 <__sprintf_chk@plt+0x163f0>
call   804a120 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x44(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%eax
shr    $0xe,%ax
xor    $0x1,%eax
and    0x3b(%esp),%al
test   %al,%al
je     805ffc0 <__sprintf_chk@plt+0x15e80>
mov    0x44(%esp),%edx
add    %edi,%edx
cmpb   $0x0,0x39(%esp)
jne    80600c8 <__sprintf_chk@plt+0x15f88>
mov    0x30(%esp),%eax
mov    %edx,0x2c(%esp)
mov    0x24(%esp),%edx
mov    %esi,0xa0(%esp)
mov    0x28(%esp),%esi
add    %ebp,%eax
jmp    80602d9 <__sprintf_chk@plt+0x16199>
cmp    %edx,%ecx
jae    80602cf <__sprintf_chk@plt+0x1618f>
mov    %bl,0x3(%eax)
movzbl (%esi,%edi,1),%ebx
add    $0x4,%ebp
add    $0x4,%eax
cmp    %ebp,%edx
jbe    80602e0 <__sprintf_chk@plt+0x161a0>
movb   $0x5c,(%eax)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edx
jbe    80602f2 <__sprintf_chk@plt+0x161b2>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edx
jbe    8060307 <__sprintf_chk@plt+0x161c7>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax)
and    $0x7,%ebx
add    $0x1,%edi
add    $0x30,%ebx
cmp    0x2c(%esp),%edi
lea    0x3(%ebp),%ecx
jb     80602c8 <__sprintf_chk@plt+0x16188>
mov    0xa0(%esp),%esi
mov    %ecx,%ebp
jmp    8060005 <__sprintf_chk@plt+0x15ec5>
nop
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x1,0x39(%esp)
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806e4bd,0x40(%esp)
movl   $0x2,0xa4(%esp)
00
jmp    805fe58 <__sprintf_chk@plt+0x15d18>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x39(%esp)
jne    806079c <__sprintf_chk@plt+0x1665c>
mov    0x24(%esp),%edi
test   %edi,%edi
je     806037a <__sprintf_chk@plt+0x1623a>
mov    0x30(%esp),%eax
movb   $0x27,(%eax)
mov    $0x1,%eax
mov    $0x1,%ebp
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806e4bd,0x40(%esp)
jmp    805fe58 <__sprintf_chk@plt+0x15d18>
xchg   %ax,%ax
cmpb   $0x0,0x39(%esp)
jne    806076a <__sprintf_chk@plt+0x1662a>
mov    0x24(%esp),%ebp
test   %ebp,%ebp
je     80603ba <__sprintf_chk@plt+0x1627a>
mov    0x30(%esp),%eax
movb   $0x22,(%eax)
xor    %eax,%eax
mov    $0x1,%ebp
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806e34b,0x40(%esp)
jmp    805fe58 <__sprintf_chk@plt+0x15d18>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x1,0x39(%esp)
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806e34b,0x40(%esp)
movl   $0x3,0xa4(%esp)
00
jmp    805fe58 <__sprintf_chk@plt+0x15d18>
xchg   %ax,%ax
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x0,0x39(%esp)
movb   $0x1,0x3b(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x40(%esp)
jmp    805fe58 <__sprintf_chk@plt+0x15d18>
nop
lea    0x0(%esi,%eiz,1),%esi
je     8060464 <__sprintf_chk@plt+0x16324>
mov    0xa4(%esp),%edx
mov    $0x806e62a,%eax
call   805fcb0 <__sprintf_chk@plt+0x15b70>
mov    0xa4(%esp),%edx
mov    %eax,0x4c(%esp)
mov    $0x806e4bd,%eax
call   805fcb0 <__sprintf_chk@plt+0x15b70>
mov    %eax,0x48(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x39(%esp)
jne    8060492 <__sprintf_chk@plt+0x16352>
mov    0x4c(%esp),%ecx
movzbl (%ecx),%eax
test   %al,%al
je     8060492 <__sprintf_chk@plt+0x16352>
mov    0x30(%esp),%ebx
mov    0x24(%esp),%edx
cmp    %edx,%ebp
jae    8060487 <__sprintf_chk@plt+0x16347>
mov    %al,(%ebx,%ebp,1)
add    $0x1,%ebp
movzbl (%ecx,%ebp,1),%eax
test   %al,%al
jne    8060480 <__sprintf_chk@plt+0x16340>
mov    0x48(%esp),%ebx
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
mov    %ebx,0x40(%esp)
movb   $0x1,0x3b(%esp)
mov    %eax,0x34(%esp)
xor    %eax,%eax
jmp    805fe58 <__sprintf_chk@plt+0x15d18>
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
cmp    $0xffffffff,%esi
lea    (%edi,%eax,1),%ebx
jne    80604d7 <__sprintf_chk@plt+0x16397>
cmp    $0x1,%eax
jbe    80604d7 <__sprintf_chk@plt+0x16397>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    %eax,%esi
mov    0x28(%esp),%eax
cmp    %ebx,%esi
lea    (%eax,%edi,1),%ecx
jb     8060520 <__sprintf_chk@plt+0x163e0>
mov    0x34(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   8049a50 <memcmp@plt>
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    8060520 <__sprintf_chk@plt+0x163e0>
cmpb   $0x0,0x39(%esp)
jne    80600c8 <__sprintf_chk@plt+0x15f88>
movb   $0x1,0x2c(%esp)
jmp    805feef <__sprintf_chk@plt+0x15daf>
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2c(%esp)
jmp    805feef <__sprintf_chk@plt+0x15daf>
lea    0x0(%esi),%esi
cmp    $0xffffffff,%esi
movl   $0x0,0x74(%esp)
movl   $0x0,0x78(%esp)
je     80606dd <__sprintf_chk@plt+0x1659d>
movb   $0x1,0x52(%esp)
movl   $0x0,0x44(%esp)
mov    %edi,0x58(%esp)
mov    %ebp,0x64(%esp)
mov    %bl,0x6b(%esp)
mov    %ecx,0x6c(%esp)
mov    0x28(%esp),%eax
mov    0x44(%esp),%edi
add    0x58(%esp),%edi
lea    (%eax,%edi,1),%ebx
lea    0x74(%esp),%eax
mov    %eax,0xc(%esp)
mov    %esi,%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
lea    0x70(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     8060616 <__sprintf_chk@plt+0x164d6>
cmp    $0xffffffff,%eax
je     806074e <__sprintf_chk@plt+0x1660e>
cmp    $0xfffffffe,%eax
je     8060705 <__sprintf_chk@plt+0x165c5>
cmpb   $0x0,0x51(%esp)
je     80605df <__sprintf_chk@plt+0x1649f>
cmp    $0x1,%eax
je     80605df <__sprintf_chk@plt+0x1649f>
mov    $0x1,%edx
xchg   %ax,%ax
movzbl (%ebx,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     80605d8 <__sprintf_chk@plt+0x16498>
movzbl %al,%eax
jmp    *0x806e880(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    80605c0 <__sprintf_chk@plt+0x16480>
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   8049b80 <iswprint@plt>
mov    $0x0,%ecx
test   %eax,%eax
movzbl 0x52(%esp),%eax
cmove  %ecx,%eax
mov    %al,0x52(%esp)
lea    0x74(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x44(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     8060566 <__sprintf_chk@plt+0x16426>
movzbl 0x52(%esp),%eax
mov    0x58(%esp),%edi
mov    0x64(%esp),%ebp
movzbl 0x6b(%esp),%ebx
xor    $0x1,%eax
and    0x3b(%esp),%al
cmpl   $0x1,0x44(%esp)
jbe    8060294 <__sprintf_chk@plt+0x16154>
mov    0x44(%esp),%edx
add    %edi,%edx
test   %al,%al
jne    80602a2 <__sprintf_chk@plt+0x16162>
cmpb   $0x0,0x2c(%esp)
je     8060788 <__sprintf_chk@plt+0x16648>
cmp    0x24(%esp),%ebp
jae    8060661 <__sprintf_chk@plt+0x16521>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
mov    0x24(%esp),%ecx
mov    0x28(%esp),%eax
mov    %esi,0xa0(%esp)
jmp    806068a <__sprintf_chk@plt+0x1654a>
lea    0x0(%esi),%esi
cmp    %ebp,%ecx
jbe    8060683 <__sprintf_chk@plt+0x16543>
mov    0x30(%esp),%esi
mov    %bl,(%esi,%ebp,1)
movzbl (%eax,%edi,1),%ebx
add    $0x1,%ebp
add    $0x1,%edi
cmp    %edi,%edx
ja     8060678 <__sprintf_chk@plt+0x16538>
mov    0xa0(%esp),%esi
jmp    8060005 <__sprintf_chk@plt+0x15ec5>
lea    0x0(%esi),%esi
mov    0x5c(%esp),%ecx
test   %ecx,%ecx
je     805ffc0 <__sprintf_chk@plt+0x15e80>
add    $0x1,%edi
jmp    805febd <__sprintf_chk@plt+0x15d7d>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x39(%esp)
je     805ffc0 <__sprintf_chk@plt+0x15e80>
jmp    80600c8 <__sprintf_chk@plt+0x15f88>
mov    0x28(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    80600a7 <__sprintf_chk@plt+0x15f67>
call   804a080 <abort@plt>
mov    0x28(%esp),%eax
mov    %ecx,0x44(%esp)
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    0x44(%esp),%ecx
mov    %eax,%esi
jmp    8060549 <__sprintf_chk@plt+0x16409>
mov    0x30(%esp),%ecx
movb   $0x30,(%ecx,%eax,1)
jmp    80601cf <__sprintf_chk@plt+0x1608f>
mov    %edi,%edx
mov    %ebx,%eax
mov    0x64(%esp),%ebp
cmp    %edx,%esi
mov    0x58(%esp),%edi
movzbl 0x6b(%esp),%ebx
mov    0x6c(%esp),%ecx
jbe    8060744 <__sprintf_chk@plt+0x16604>
cmpb   $0x0,(%eax)
je     8060744 <__sprintf_chk@plt+0x16604>
mov    0x44(%esp),%eax
jmp    8060736 <__sprintf_chk@plt+0x165f6>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     8060740 <__sprintf_chk@plt+0x16600>
add    $0x1,%eax
lea    (%edi,%eax,1),%edx
cmp    %edx,%esi
ja     8060730 <__sprintf_chk@plt+0x165f0>
mov    %eax,0x44(%esp)
movzbl 0x3b(%esp),%eax
jmp    806062f <__sprintf_chk@plt+0x164ef>
mov    0x58(%esp),%edi
mov    0x64(%esp),%ebp
movzbl 0x6b(%esp),%ebx
movzbl 0x3b(%esp),%eax
jmp    806062f <__sprintf_chk@plt+0x164ef>
call   8049ac0 <__stack_chk_fail@plt>
xor    %eax,%eax
xor    %ebp,%ebp
movb   $0x1,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806e34b,0x40(%esp)
jmp    805fe58 <__sprintf_chk@plt+0x15d18>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%eax
mov    %esi,0xa0(%esp)
jmp    806068a <__sprintf_chk@plt+0x1654a>
mov    $0x1,%eax
xor    %ebp,%ebp
movb   $0x0,0x3b(%esp)
movl   $0x1,0x34(%esp)
movl   $0x806e4bd,0x40(%esp)
jmp    805fe58 <__sprintf_chk@plt+0x15d18>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8049e90 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x8074c40,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   8065230 <__sprintf_chk@plt+0x1b0f0>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x8074c40,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    8060820 <__sprintf_chk@plt+0x166e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x8074c40,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x8074c40,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x8074c40,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x8074c40,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     80608d3 <__sprintf_chk@plt+0x16793>
test   %ecx,%ecx
je     80608d3 <__sprintf_chk@plt+0x16793>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   804a080 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8074c40,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049e90 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x8074c40,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049e90 <__errno_location@plt>
mov    0x4(%ebx),%esi
lea    0x8(%ebx),%ebp
mov    0x54(%esp),%ecx
xor    %edx,%edx
or     $0x1,%esi
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    0x50(%esp),%ecx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x54(%esp),%ecx
mov    0x2c(%esp),%edx
mov    %eax,0x28(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    0x28(%esp),%esi
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    0x50(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x24(%esp),%eax
mov    %eax,(%edi)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x8074c40,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8049e90 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     8060ac8 <__sprintf_chk@plt+0x16988>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x80742bc,%edi
mov    0x80742b0,%esi
cmp    $0x1,%edi
jbe    8060b13 <__sprintf_chk@plt+0x169d3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
cmp    %edi,%ebx
jne    8060b00 <__sprintf_chk@plt+0x169c0>
mov    0x4(%esi),%eax
cmp    $0x8074b40,%eax
je     8060b39 <__sprintf_chk@plt+0x169f9>
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x100,0x80742b4
00
movl   $0x8074b40,0x80742b8
08
cmp    $0x80742b4,%esi
je     8060b53 <__sprintf_chk@plt+0x16a13>
mov    %esi,(%esp)
call   80499d0 <free@plt>
movl   $0x80742b4,0x80742b0
08
movl   $0x1,0x80742bc
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049e90 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x80742b0,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8060cec <__sprintf_chk@plt+0x16bac>
cmp    0x80742bc,%esi
jb     8060bfe <__sprintf_chk@plt+0x16abe>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8060cf1 <__sprintf_chk@plt+0x16bb1>
cmp    $0x80742b4,%ebx
lea    0x0(,%edi,8),%eax
je     8060cc0 <__sprintf_chk@plt+0x16b80>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742bc,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    %edi,0x80742bc
mov    0x8074c6c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8074c44,%esi
mov    %eax,0x14(%esp)
mov    0x8074c68,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8074c48,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8074c40,%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8060cab <__sprintf_chk@plt+0x16b6b>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%ebx
mov    %ebp,(%edi)
je     8060c63 <__sprintf_chk@plt+0x16b23>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x8074c6c,%eax
movl   $0x8074c48,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8074c68,%eax
mov    %eax,0x10(%esp)
mov    0x8074c40,%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8060bd5 <__sprintf_chk@plt+0x16a95>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049e90 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x80742b0,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8060e7c <__sprintf_chk@plt+0x16d3c>
cmp    0x80742bc,%esi
jb     8060d8e <__sprintf_chk@plt+0x16c4e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8060e81 <__sprintf_chk@plt+0x16d41>
cmp    $0x80742b4,%ebx
lea    0x0(,%edi,8),%eax
je     8060e50 <__sprintf_chk@plt+0x16d10>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742bc,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    %edi,0x80742bc
mov    0x8074c6c,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8074c44,%esi
mov    %eax,0x14(%esp)
mov    0x8074c68,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8074c48,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8074c40,%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8060e3b <__sprintf_chk@plt+0x16cfb>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%ebx
mov    %ebp,(%edi)
je     8060df3 <__sprintf_chk@plt+0x16cb3>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x8074c6c,%eax
movl   $0x8074c48,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8074c68,%eax
mov    %eax,0x10(%esp)
mov    0x8074c40,%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8060d65 <__sprintf_chk@plt+0x16c25>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,0x18(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    8060f1b <__sprintf_chk@plt+0x16ddb>
cmp    $0x80742b4,%ebx
jne    8060ff0 <__sprintf_chk@plt+0x16eb0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    (%ebx),%eax
mov    0x4(%ebx),%esi
mov    0x8074c44,%edi
mov    0x40(%esp),%ecx
mov    %eax,%edx
mov    0x8074c6c,%eax
movl   $0x8074c48,0xc(%esp)
or     $0x1,%edi
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8074c68,%eax
movl   $0xffffffff,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x8074c40,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,0x1c(%esp)
ja     8060fd9 <__sprintf_chk@plt+0x16e99>
lea    0x1(%eax),%edx
cmp    $0x8074b40,%esi
mov    %edx,(%ebx)
je     8060f8b <__sprintf_chk@plt+0x16e4b>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   80499d0 <free@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x40(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x8074c6c,%eax
movl   $0x8074c48,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x8074c68,%eax
mov    %eax,0x10(%esp)
mov    0x8074c40,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    8060eea <__sprintf_chk@plt+0x16daa>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    806109d <__sprintf_chk@plt+0x16f5d>
cmp    $0x80742b4,%ebx
jne    8061160 <__sprintf_chk@plt+0x17020>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    0x8074c6c,%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x8074c44,%edi
mov    %eax,0x14(%esp)
mov    0x8074c68,%eax
mov    0x40(%esp),%ecx
mov    %ebp,%edx
movl   $0x8074c48,0xc(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
mov    0x8074c40,%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8061147 <__sprintf_chk@plt+0x17007>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%esi
mov    %ebp,(%ebx)
je     80610ff <__sprintf_chk@plt+0x16fbf>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x40(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x8074c6c,%eax
movl   $0x8074c48,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8074c68,%eax
mov    %eax,0x10(%esp)
mov    0x8074c40,%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    806106c <__sprintf_chk@plt+0x16f2c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%edx
lea    0x50(%esp),%edi
mov    0xa0(%esp),%ebx
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     8061384 <__sprintf_chk@plt+0x17244>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049e90 <__errno_location@plt>
test   %ebx,%ebx
mov    0x80742b0,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8061384 <__sprintf_chk@plt+0x17244>
cmp    0x80742bc,%ebx
jb     8061291 <__sprintf_chk@plt+0x17151>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     8061389 <__sprintf_chk@plt+0x17249>
cmp    $0x80742b4,%esi
lea    0x0(,%edi,8),%eax
je     8061358 <__sprintf_chk@plt+0x17218>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%esi
mov    %eax,0x80742b0
mov    0x80742bc,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    %edi,0x80742bc
mov    0x4c(%esp),%eax
lea    (%esi,%ebx,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x24(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     806133c <__sprintf_chk@plt+0x171fc>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%ebx
mov    %ebp,(%edi)
je     80612f4 <__sprintf_chk@plt+0x171b4>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%esi
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    8061268 <__sprintf_chk@plt+0x17128>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
xchg   %ax,%ax
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%edx
lea    0x50(%esp),%edi
mov    0xa0(%esp),%ebx
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     806159c <__sprintf_chk@plt+0x1745c>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049e90 <__errno_location@plt>
test   %ebx,%ebx
mov    0x80742b0,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     806159c <__sprintf_chk@plt+0x1745c>
cmp    0x80742bc,%ebx
jb     80614a1 <__sprintf_chk@plt+0x17361>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     80615a1 <__sprintf_chk@plt+0x17461>
cmp    $0x80742b4,%esi
lea    0x0(,%edi,8),%eax
je     8061570 <__sprintf_chk@plt+0x17430>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%esi
mov    %eax,0x80742b0
mov    0x80742bc,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    %edi,0x80742bc
mov    0x4c(%esp),%eax
lea    (%esi,%ebx,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x24(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%esi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8061552 <__sprintf_chk@plt+0x17412>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%ebx
mov    %ebp,(%edi)
je     8061507 <__sprintf_chk@plt+0x173c7>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0xa8(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x4c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xac(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%esi
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    8061478 <__sprintf_chk@plt+0x17338>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%edx
lea    0x50(%esp),%edi
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     806179c <__sprintf_chk@plt+0x1765c>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    80616bd <__sprintf_chk@plt+0x1757d>
cmp    $0x80742b4,%ebx
jne    8061780 <__sprintf_chk@plt+0x17640>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8061765 <__sprintf_chk@plt+0x17625>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%esi
mov    %ebp,(%ebx)
je     806171d <__sprintf_chk@plt+0x175dd>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    806168c <__sprintf_chk@plt+0x1754c>
call   804a080 <abort@plt>
jmp    80617b0 <__sprintf_chk@plt+0x17670>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
mov    $0xc,%ecx
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%edx
lea    0x50(%esp),%edi
rep stos %eax,%es:(%edi)
cmp    $0x8,%edx
je     80619a4 <__sprintf_chk@plt+0x17864>
mov    0x54(%esp),%eax
mov    %edx,0x50(%esp)
mov    %edx,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x28(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x38(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x70(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x7c(%esp),%eax
mov    %eax,0x4c(%esp)
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    80618bd <__sprintf_chk@plt+0x1777d>
cmp    $0x80742b4,%ebx
jne    8061988 <__sprintf_chk@plt+0x17848>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     806196b <__sprintf_chk@plt+0x1782b>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%esi
mov    %ebp,(%ebx)
je     8061920 <__sprintf_chk@plt+0x177e0>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0xa4(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x8c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    806188c <__sprintf_chk@plt+0x1774c>
call   804a080 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8074c40,%eax
mov    0x78(%esp),%ecx
mov    %eax,0x20(%esp)
mov    0x8074c44,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x24(%esp)
mov    0x8074c48,%eax
mov    %eax,0x28(%esp)
mov    0x8074c4c,%eax
mov    %eax,0x2c(%esp)
mov    0x8074c50,%eax
mov    %eax,0x30(%esp)
mov    0x8074c54,%eax
mov    %eax,0x34(%esp)
mov    0x8074c58,%eax
mov    %eax,0x38(%esp)
mov    0x8074c5c,%eax
mov    %eax,0x3c(%esp)
mov    0x8074c60,%eax
mov    %eax,0x40(%esp)
mov    0x8074c64,%eax
mov    %eax,0x44(%esp)
mov    0x8074c68,%eax
mov    0x28(%esp,%edx,4),%ebx
mov    %eax,0x48(%esp)
mov    0x8074c6c,%eax
mov    %eax,0x4c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
xor    %ebx,%eax
mov    %eax,0x28(%esp,%edx,4)
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    8061ace <__sprintf_chk@plt+0x1798e>
cmp    $0x80742b4,%ebx
jne    8061b88 <__sprintf_chk@plt+0x17a48>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8061b70 <__sprintf_chk@plt+0x17a30>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%esi
mov    %ebp,(%ebx)
je     8061b2b <__sprintf_chk@plt+0x179eb>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edi
mov    %edi,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    8061a9d <__sprintf_chk@plt+0x1795d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8074c40,%eax
mov    0x74(%esp),%ecx
mov    %eax,0x20(%esp)
mov    0x8074c44,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x24(%esp)
mov    0x8074c48,%eax
mov    %eax,0x28(%esp)
mov    0x8074c4c,%eax
mov    %eax,0x2c(%esp)
mov    0x8074c50,%eax
mov    %eax,0x30(%esp)
mov    0x8074c54,%eax
mov    %eax,0x34(%esp)
mov    0x8074c58,%eax
mov    %eax,0x38(%esp)
mov    0x8074c5c,%eax
mov    %eax,0x3c(%esp)
mov    0x8074c60,%eax
mov    %eax,0x40(%esp)
mov    0x8074c64,%eax
mov    %eax,0x44(%esp)
mov    0x8074c68,%eax
mov    0x28(%esp,%edx,4),%ebx
mov    %eax,0x48(%esp)
mov    0x8074c6c,%eax
mov    %eax,0x4c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
xor    %ebx,%eax
mov    %eax,0x28(%esp,%edx,4)
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    8061cce <__sprintf_chk@plt+0x17b8e>
cmp    $0x80742b4,%ebx
jne    8061d88 <__sprintf_chk@plt+0x17c48>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8061d70 <__sprintf_chk@plt+0x17c30>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%esi
mov    %ebp,(%ebx)
je     8061d2b <__sprintf_chk@plt+0x17beb>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edi
mov    %edi,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    8061c9d <__sprintf_chk@plt+0x17b5d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8074c40,%eax
mov    0x8074c4c,%edx
mov    %eax,0x20(%esp)
mov    0x8074c44,%eax
mov    %eax,0x24(%esp)
mov    0x8074c48,%eax
mov    %eax,0x28(%esp)
mov    0x8074c50,%eax
mov    %eax,0x30(%esp)
mov    0x8074c54,%eax
mov    %eax,0x34(%esp)
mov    0x8074c58,%eax
mov    %eax,0x38(%esp)
mov    0x8074c5c,%eax
mov    %eax,0x3c(%esp)
mov    0x8074c60,%eax
mov    %eax,0x40(%esp)
mov    0x8074c64,%eax
mov    %eax,0x44(%esp)
mov    0x8074c68,%eax
mov    %eax,0x48(%esp)
mov    0x8074c6c,%eax
mov    %eax,0x4c(%esp)
mov    %edx,%eax
not    %eax
and    $0x4000000,%eax
xor    %edx,%eax
mov    %eax,0x2c(%esp)
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    8061eb5 <__sprintf_chk@plt+0x17d75>
cmp    $0x80742b4,%ebx
jne    8061f70 <__sprintf_chk@plt+0x17e30>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
movl   $0xffffffff,(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8061f57 <__sprintf_chk@plt+0x17e17>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%esi
mov    %ebp,(%ebx)
je     8061f12 <__sprintf_chk@plt+0x17dd2>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    8061e84 <__sprintf_chk@plt+0x17d44>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8074c40,%eax
mov    0x8074c4c,%edx
mov    %eax,0x20(%esp)
mov    0x8074c44,%eax
mov    %eax,0x24(%esp)
mov    0x8074c48,%eax
mov    %eax,0x28(%esp)
mov    0x8074c50,%eax
mov    %eax,0x30(%esp)
mov    0x8074c54,%eax
mov    %eax,0x34(%esp)
mov    0x8074c58,%eax
mov    %eax,0x38(%esp)
mov    0x8074c5c,%eax
mov    %eax,0x3c(%esp)
mov    0x8074c60,%eax
mov    %eax,0x40(%esp)
mov    0x8074c64,%eax
mov    %eax,0x44(%esp)
mov    0x8074c68,%eax
mov    %eax,0x48(%esp)
mov    0x8074c6c,%eax
mov    %eax,0x4c(%esp)
mov    %edx,%eax
not    %eax
and    $0x4000000,%eax
xor    %edx,%eax
mov    %eax,0x2c(%esp)
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    8062095 <__sprintf_chk@plt+0x17f55>
cmp    $0x80742b4,%ebx
jne    8062150 <__sprintf_chk@plt+0x18010>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    0x4c(%esp),%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x24(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    0x70(%esp),%ecx
mov    %ebp,%edx
or     $0x1,%edi
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8062137 <__sprintf_chk@plt+0x17ff7>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%esi
mov    %ebp,(%ebx)
je     80620f2 <__sprintf_chk@plt+0x17fb2>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x70(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    8062064 <__sprintf_chk@plt+0x17f24>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x8074c44,%eax
mov    0x84(%esp),%edi
mov    0x80(%esp),%ebx
mov    0x88(%esp),%ebp
mov    %eax,0x34(%esp)
mov    0x8074c48,%eax
test   %edi,%edi
movl   $0x8,0x30(%esp)
mov    %eax,0x38(%esp)
mov    0x8074c4c,%eax
mov    %eax,0x3c(%esp)
mov    0x8074c50,%eax
mov    %eax,0x40(%esp)
mov    0x8074c54,%eax
mov    %eax,0x44(%esp)
mov    0x8074c58,%eax
mov    %eax,0x48(%esp)
mov    0x8074c5c,%eax
mov    %eax,0x4c(%esp)
mov    0x8074c60,%eax
mov    %eax,0x50(%esp)
mov    0x8074c64,%eax
mov    %eax,0x54(%esp)
mov    0x8074c68,%eax
mov    %eax,0x58(%esp)
mov    0x8074c6c,%eax
mov    %eax,0x5c(%esp)
je     806239c <__sprintf_chk@plt+0x1825c>
test   %ebp,%ebp
je     806239c <__sprintf_chk@plt+0x1825c>
mov    %edi,0x58(%esp)
mov    %ebp,0x5c(%esp)
call   8049e90 <__errno_location@plt>
test   %ebx,%ebx
mov    0x80742b0,%esi
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
js     806239c <__sprintf_chk@plt+0x1825c>
cmp    0x80742bc,%ebx
jb     8062390 <__sprintf_chk@plt+0x18250>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     80623a1 <__sprintf_chk@plt+0x18261>
cmp    $0x80742b4,%esi
lea    0x0(,%edi,8),%eax
je     8062360 <__sprintf_chk@plt+0x18220>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%esi
mov    %eax,0x80742b0
mov    0x80742bc,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    0x5c(%esp),%ebp
mov    0x58(%esp),%ecx
mov    0x30(%esp),%edx
mov    %edi,0x80742bc
mov    0x34(%esp),%eax
lea    (%esi,%ebx,8),%esi
mov    (%esi),%edi
mov    0x4(%esi),%ebx
mov    %ecx,0x10(%esp)
mov    0x8c(%esp),%ecx
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
mov    0x24(%esp),%eax
mov    %ebp,0x14(%esp)
lea    0x38(%esp),%ebp
mov    %edx,0x4(%esp)
mov    %edi,%edx
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,%eax
movl   $0xffffffff,(%esp)
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%edi
ja     806234b <__sprintf_chk@plt+0x1820b>
lea    0x1(%eax),%edi
cmp    $0x8074b40,%ebx
mov    %edi,(%esi)
je     8062303 <__sprintf_chk@plt+0x181c3>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    %edi,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x8c(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%esi)
mov    %eax,%ebx
mov    0x5c(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%esi
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    806226d <__sprintf_chk@plt+0x1812d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    $0x8,%edx
jmp    80622a2 <__sprintf_chk@plt+0x18162>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x8074c44,%eax
mov    0x84(%esp),%edi
mov    0x80(%esp),%ebx
mov    0x88(%esp),%ebp
mov    %eax,0x34(%esp)
mov    0x8074c48,%eax
test   %edi,%edi
movl   $0x8,0x30(%esp)
mov    %eax,0x38(%esp)
mov    0x8074c4c,%eax
mov    %eax,0x3c(%esp)
mov    0x8074c50,%eax
mov    %eax,0x40(%esp)
mov    0x8074c54,%eax
mov    %eax,0x44(%esp)
mov    0x8074c58,%eax
mov    %eax,0x48(%esp)
mov    0x8074c5c,%eax
mov    %eax,0x4c(%esp)
mov    0x8074c60,%eax
mov    %eax,0x50(%esp)
mov    0x8074c64,%eax
mov    %eax,0x54(%esp)
mov    0x8074c68,%eax
mov    %eax,0x58(%esp)
mov    0x8074c6c,%eax
mov    %eax,0x5c(%esp)
je     80625e4 <__sprintf_chk@plt+0x184a4>
test   %ebp,%ebp
je     80625e4 <__sprintf_chk@plt+0x184a4>
mov    %edi,0x58(%esp)
mov    %ebp,0x5c(%esp)
call   8049e90 <__errno_location@plt>
test   %ebx,%ebx
mov    0x80742b0,%esi
mov    %eax,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
js     80625e4 <__sprintf_chk@plt+0x184a4>
cmp    0x80742bc,%ebx
jb     80625d8 <__sprintf_chk@plt+0x18498>
lea    0x1(%ebx),%edi
cmp    $0x1fffffff,%edi
ja     80625e9 <__sprintf_chk@plt+0x184a9>
cmp    $0x80742b4,%esi
lea    0x0(,%edi,8),%eax
je     80625a8 <__sprintf_chk@plt+0x18468>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%esi
mov    %eax,0x80742b0
mov    0x80742bc,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    0x5c(%esp),%ebp
mov    0x58(%esp),%ecx
mov    0x30(%esp),%edx
mov    %edi,0x80742bc
mov    0x34(%esp),%eax
lea    (%esi,%ebx,8),%esi
mov    (%esi),%edi
mov    0x4(%esi),%ebx
mov    %ecx,0x10(%esp)
mov    0x8c(%esp),%ecx
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
mov    0x24(%esp),%eax
mov    %ebp,0x14(%esp)
lea    0x38(%esp),%ebp
mov    %edx,0x4(%esp)
mov    %edi,%edx
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%edi
ja     8062591 <__sprintf_chk@plt+0x18451>
lea    0x1(%eax),%edi
cmp    $0x8074b40,%ebx
mov    %edi,(%esi)
je     8062546 <__sprintf_chk@plt+0x18406>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    %edi,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x8c(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%esi)
mov    %eax,%ebx
mov    0x5c(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x6c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%esi
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    80624ad <__sprintf_chk@plt+0x1836d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ecx
mov    $0x8,%edx
jmp    80624e2 <__sprintf_chk@plt+0x183a2>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8074c44,%eax
mov    0x70(%esp),%esi
mov    0x74(%esp),%edi
movl   $0x8,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x8074c48,%eax
test   %esi,%esi
mov    %eax,0x28(%esp)
mov    0x8074c4c,%eax
mov    %eax,0x2c(%esp)
mov    0x8074c50,%eax
mov    %eax,0x30(%esp)
mov    0x8074c54,%eax
mov    %eax,0x34(%esp)
mov    0x8074c58,%eax
mov    %eax,0x38(%esp)
mov    0x8074c5c,%eax
mov    %eax,0x3c(%esp)
mov    0x8074c60,%eax
mov    %eax,0x40(%esp)
mov    0x8074c64,%eax
mov    %eax,0x44(%esp)
mov    0x8074c68,%eax
mov    %eax,0x48(%esp)
mov    0x8074c6c,%eax
mov    %eax,0x4c(%esp)
je     80627f6 <__sprintf_chk@plt+0x186b6>
test   %edi,%edi
je     80627f6 <__sprintf_chk@plt+0x186b6>
mov    %esi,0x48(%esp)
mov    %edi,0x4c(%esp)
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    80627e8 <__sprintf_chk@plt+0x186a8>
cmp    $0x80742b4,%ebx
jne    80627c8 <__sprintf_chk@plt+0x18688>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   8049e50 <memset@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x1,0x80742bc
00
mov    0x24(%esp),%ebp
mov    (%ebx),%edi
mov    0x4(%ebx),%esi
mov    %ecx,0x14(%esp)
lea    0x28(%esp),%ecx
mov    %ecx,0xc(%esp)
mov    0x78(%esp),%ecx
or     $0x1,%ebp
mov    %edx,0x10(%esp)
mov    %edi,%edx
mov    %eax,0x4(%esp)
mov    %esi,%eax
mov    %ebp,0x8(%esp)
movl   $0xffffffff,(%esp)
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%edi
ja     80627ae <__sprintf_chk@plt+0x1866e>
lea    0x1(%eax),%edi
cmp    $0x8074b40,%esi
mov    %edi,(%ebx)
je     8062769 <__sprintf_chk@plt+0x18629>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %edi,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x78(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    80626db <__sprintf_chk@plt+0x1859b>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    %edi,%ecx
mov    $0x8,%eax
jmp    8062718 <__sprintf_chk@plt+0x185d8>
call   804a080 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x8074c44,%eax
mov    0x70(%esp),%esi
mov    0x74(%esp),%edi
movl   $0x8,0x20(%esp)
mov    %eax,0x24(%esp)
mov    0x8074c48,%eax
test   %esi,%esi
mov    %eax,0x28(%esp)
mov    0x8074c4c,%eax
mov    %eax,0x2c(%esp)
mov    0x8074c50,%eax
mov    %eax,0x30(%esp)
mov    0x8074c54,%eax
mov    %eax,0x34(%esp)
mov    0x8074c58,%eax
mov    %eax,0x38(%esp)
mov    0x8074c5c,%eax
mov    %eax,0x3c(%esp)
mov    0x8074c60,%eax
mov    %eax,0x40(%esp)
mov    0x8074c64,%eax
mov    %eax,0x44(%esp)
mov    0x8074c68,%eax
mov    %eax,0x48(%esp)
mov    0x8074c6c,%eax
mov    %eax,0x4c(%esp)
je     8062a06 <__sprintf_chk@plt+0x188c6>
test   %edi,%edi
je     8062a06 <__sprintf_chk@plt+0x188c6>
mov    %esi,0x48(%esp)
mov    %edi,0x4c(%esp)
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    80629f8 <__sprintf_chk@plt+0x188b8>
cmp    $0x80742b4,%ebx
jne    80629d8 <__sprintf_chk@plt+0x18898>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   8049e50 <memset@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x1,0x80742bc
00
mov    0x24(%esp),%ebp
mov    (%ebx),%edi
mov    0x4(%ebx),%esi
mov    %ecx,0x14(%esp)
lea    0x28(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x7c(%esp),%eax
or     $0x1,%ebp
mov    %ecx,0xc(%esp)
mov    0x78(%esp),%ecx
mov    %edx,0x10(%esp)
mov    %edi,%edx
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%edi
ja     80629be <__sprintf_chk@plt+0x1887e>
lea    0x1(%eax),%edi
cmp    $0x8074b40,%esi
mov    %edi,(%ebx)
je     8062979 <__sprintf_chk@plt+0x18839>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %edi,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x78(%esp),%ecx
mov    %edi,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    80628eb <__sprintf_chk@plt+0x187ab>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    %edi,%ecx
mov    $0x8,%eax
jmp    8062928 <__sprintf_chk@plt+0x187e8>
call   804a080 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049e90 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x80742b0,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8062b8c <__sprintf_chk@plt+0x18a4c>
cmp    0x80742bc,%esi
jb     8062a9e <__sprintf_chk@plt+0x1895e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8062b91 <__sprintf_chk@plt+0x18a51>
cmp    $0x80742b4,%ebx
lea    0x0(,%edi,8),%eax
je     8062b60 <__sprintf_chk@plt+0x18a20>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742bc,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    %edi,0x80742bc
mov    0x80742ac,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8074284,%esi
mov    %eax,0x14(%esp)
mov    0x80742a8,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8074288,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8074280,%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8062b4b <__sprintf_chk@plt+0x18a0b>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%ebx
mov    %ebp,(%edi)
je     8062b03 <__sprintf_chk@plt+0x189c3>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x80742ac,%eax
movl   $0x8074288,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x80742a8,%eax
mov    %eax,0x10(%esp)
mov    0x8074280,%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8062a75 <__sprintf_chk@plt+0x18935>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    8062c2d <__sprintf_chk@plt+0x18aed>
cmp    $0x80742b4,%ebx
jne    8062cf0 <__sprintf_chk@plt+0x18bb0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    0x80742ac,%eax
mov    (%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x8074284,%edi
mov    %eax,0x14(%esp)
mov    0x80742a8,%eax
mov    0x40(%esp),%ecx
mov    %ebp,%edx
movl   $0x8074288,0xc(%esp)
or     $0x1,%edi
mov    %eax,0x10(%esp)
mov    0x8074280,%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8062cd7 <__sprintf_chk@plt+0x18b97>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%esi
mov    %ebp,(%ebx)
je     8062c8f <__sprintf_chk@plt+0x18b4f>
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x40(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x80742ac,%eax
movl   $0x8074288,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x80742a8,%eax
mov    %eax,0x10(%esp)
mov    0x8074280,%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    8062bfc <__sprintf_chk@plt+0x18abc>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049e90 <__errno_location@plt>
mov    0x40(%esp),%esi
mov    0x80742b0,%ebx
test   %esi,%esi
mov    %eax,0x18(%esp)
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
js     8062e8c <__sprintf_chk@plt+0x18d4c>
cmp    0x80742bc,%esi
jb     8062d9e <__sprintf_chk@plt+0x18c5e>
lea    0x1(%esi),%edi
cmp    $0x1fffffff,%edi
ja     8062e91 <__sprintf_chk@plt+0x18d51>
cmp    $0x80742b4,%ebx
lea    0x0(,%edi,8),%eax
je     8062e60 <__sprintf_chk@plt+0x18d20>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742bc,%eax
mov    %edi,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%ebx,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
mov    %edi,0x80742bc
mov    0x80742ac,%eax
lea    (%ebx,%esi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%ebx
mov    0x8074284,%esi
mov    %eax,0x14(%esp)
mov    0x80742a8,%eax
mov    0x44(%esp),%ecx
mov    %ebp,%edx
movl   $0x8074288,0xc(%esp)
or     $0x1,%esi
mov    %eax,0x10(%esp)
mov    0x8074280,%eax
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,%ebp
ja     8062e4b <__sprintf_chk@plt+0x18d0b>
lea    0x1(%eax),%ebp
cmp    $0x8074b40,%ebx
mov    %ebp,(%edi)
je     8062e03 <__sprintf_chk@plt+0x18cc3>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x44(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%ebx
mov    0x80742ac,%eax
movl   $0x8074288,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x80742a8,%eax
mov    %eax,0x10(%esp)
mov    0x8074280,%eax
mov    %eax,0x4(%esp)
mov    %ebx,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
jmp    8062d75 <__sprintf_chk@plt+0x18c35>
call   804a080 <abort@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   8049e90 <__errno_location@plt>
mov    0x80742b0,%ebx
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,0x18(%esp)
mov    0x80742bc,%eax
test   %eax,%eax
jne    8062f2b <__sprintf_chk@plt+0x18deb>
cmp    $0x80742b4,%ebx
jne    8063000 <__sprintf_chk@plt+0x18ec0>
movl   $0x8,0x4(%esp)
movl   $0x0,(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    0x80742b8,%edx
mov    %eax,%ebx
mov    %eax,0x80742b0
mov    0x80742b4,%eax
mov    %edx,0x4(%ebx)
mov    %eax,(%ebx)
mov    0x80742bc,%edx
mov    $0x1,%eax
movl   $0x0,0x4(%esp)
sub    %edx,%eax
shl    $0x3,%eax
lea    (%ebx,%edx,8),%edx
mov    %eax,0x8(%esp)
mov    %edx,(%esp)
call   8049e50 <memset@plt>
movl   $0x1,0x80742bc
00
mov    (%ebx),%eax
mov    0x4(%ebx),%esi
mov    0x8074284,%edi
mov    0x40(%esp),%ecx
mov    %eax,%edx
mov    0x80742ac,%eax
movl   $0x8074288,0xc(%esp)
or     $0x1,%edi
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x80742a8,%eax
movl   $0xffffffff,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x8074280,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
cmp    %eax,0x1c(%esp)
ja     8062fe9 <__sprintf_chk@plt+0x18ea9>
lea    0x1(%eax),%edx
cmp    $0x8074b40,%esi
mov    %edx,(%ebx)
je     8062f9b <__sprintf_chk@plt+0x18e5b>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   80499d0 <free@plt>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   80650d0 <__sprintf_chk@plt+0x1af90>
mov    0x40(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %eax,0x4(%ebx)
mov    %eax,%esi
mov    0x80742ac,%eax
movl   $0x8074288,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0xffffffff,(%esp)
mov    %eax,0x14(%esp)
mov    0x80742a8,%eax
mov    %eax,0x10(%esp)
mov    0x8074280,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805fdb0 <__sprintf_chk@plt+0x15c70>
mov    0x18(%esp),%eax
mov    %eax,0x0(%ebp)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
movl   $0x8,0x4(%esp)
call   8065100 <__sprintf_chk@plt+0x1afc0>
mov    %eax,%ebx
mov    %eax,0x80742b0
jmp    8062efa <__sprintf_chk@plt+0x18dba>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    0x38(%esp),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049970 <read@plt>
test   %eax,%eax
mov    %eax,%ebp
jns    8063070 <__sprintf_chk@plt+0x18f30>
call   8049e90 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x4,%edx
je     8063038 <__sprintf_chk@plt+0x18ef8>
cmp    $0x16,%edx
jne    8063070 <__sprintf_chk@plt+0x18f30>
cmp    $0x7fffe000,%ebx
jbe    8063070 <__sprintf_chk@plt+0x18f30>
mov    $0x7fffe000,%ebx
jmp    8063038 <__sprintf_chk@plt+0x18ef8>
xchg   %ax,%ax
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,0x8(%esp)
call   8049ea0 <memchr@plt>
test   %eax,%eax
je     80630b0 <__sprintf_chk@plt+0x18f70>
sub    %ebx,%eax
add    $0x14,%esp
add    $0x1,%eax
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049e80 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8063635 <__sprintf_chk@plt+0x194f5>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    80633a8 <__sprintf_chk@plt+0x19268>
mov    0x84(%esp),%eax
test   %eax,%eax
jne    8063458 <__sprintf_chk@plt+0x19318>
mov    0x18(%esp),%esi
xor    %ebx,%ebx
mov    %esi,(%esp)
mov    %esi,0x34(%esp)
call   8049d70 <strlen@plt>
mov    %esi,%ecx
movb   $0x0,0x24(%esp)
mov    %ecx,%edi
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%esi,%eax,1),%esi
cmp    %esi,%ecx
mov    %esi,0x20(%esp)
jb     80631db <__sprintf_chk@plt+0x1909b>
jmp    80632b7 <__sprintf_chk@plt+0x19177>
nop
movzbl (%edi),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806e580(,%edx,4),%edx
bt     %eax,%edx
jae    80632d8 <__sprintf_chk@plt+0x19198>
movl   $0x1,0x38(%esp)
movsbl (%edi),%eax
mov    %edi,%ebp
movb   $0x1,0x3c(%esp)
mov    $0x1,%edi
mov    %eax,0x40(%esp)
test   %ebx,%ebx
movb   $0x1,0x30(%esp)
je     8063278 <__sprintf_chk@plt+0x19138>
cmp    $0x1,%ebx
je     80632f8 <__sprintf_chk@plt+0x191b8>
cmp    $0x2,%ebx
jne    8063330 <__sprintf_chk@plt+0x191f0>
cmpb   $0x0,0x3c(%esp)
je     8063330 <__sprintf_chk@plt+0x191f0>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049cd0 <iswspace@plt>
test   %eax,%eax
mov    $0x1,%eax
cmove  %eax,%ebx
xchg   %ax,%ax
add    %ebp,%edi
cmp    %esi,%edi
mov    %edi,0x34(%esp)
movb   $0x0,0x30(%esp)
jae    80632ae <__sprintf_chk@plt+0x1916e>
cmpb   $0x0,0x24(%esp)
lea    0x28(%esp),%ebp
je     8063150 <__sprintf_chk@plt+0x19010>
sub    %edi,%esi
lea    0x40(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8063340 <__sprintf_chk@plt+0x19200>
cmp    $0xfffffffe,%eax
je     8063388 <__sprintf_chk@plt+0x19248>
test   %eax,%eax
jne    8063378 <__sprintf_chk@plt+0x19238>
mov    0x34(%esp),%edx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%edx)
jne    8063663 <__sprintf_chk@plt+0x19523>
mov    0x40(%esp),%ecx
test   %ecx,%ecx
jne    806363f <__sprintf_chk@plt+0x194ff>
mov    $0x1,%edi
mov    %ebp,(%esp)
mov    %edx,0x14(%esp)
movb   $0x1,0x3c(%esp)
call   8049a00 <mbsinit@plt>
mov    0x14(%esp),%edx
test   %eax,%eax
jne    8063360 <__sprintf_chk@plt+0x19220>
test   %ebx,%ebx
mov    0x20(%esp),%esi
mov    %edx,%ebp
movb   $0x1,0x30(%esp)
jne    8063193 <__sprintf_chk@plt+0x19053>
cmpb   $0x0,0x3c(%esp)
mov    $0x1,%ebx
je     80631c8 <__sprintf_chk@plt+0x19088>
mov    0x40(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   8049cd0 <iswspace@plt>
movb   $0x0,0x30(%esp)
test   %eax,%eax
sete   %bl
add    %ebp,%edi
cmp    %esi,%edi
mov    %edi,0x34(%esp)
jb     80631db <__sprintf_chk@plt+0x1909b>
cmp    $0x2,%ebx
je     8063605 <__sprintf_chk@plt+0x194c5>
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    0x18(%esp),%eax
jne    806363a <__sprintf_chk@plt+0x194fa>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%ebp
mov    %ebp,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     8063611 <__sprintf_chk@plt+0x194d1>
movb   $0x1,0x24(%esp)
jmp    80631ea <__sprintf_chk@plt+0x190aa>
xchg   %ax,%ax
cmpb   $0x0,0x3c(%esp)
je     80631c8 <__sprintf_chk@plt+0x19088>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8049cd0 <iswspace@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
mov    $0x2,%eax
cmovne %ebp,%ecx
cmovne %eax,%ebx
mov    %ecx,0x1c(%esp)
jmp    80631c8 <__sprintf_chk@plt+0x19088>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    80631c8 <__sprintf_chk@plt+0x19088>
lea    0x0(%esi),%esi
movl   $0x1,0x38(%esp)
mov    0x20(%esp),%esi
mov    $0x1,%edi
movb   $0x0,0x3c(%esp)
mov    0x34(%esp),%ebp
jmp    8063186 <__sprintf_chk@plt+0x19046>
nop
movb   $0x0,0x24(%esp)
mov    0x20(%esp),%esi
mov    %edx,%ebp
mov    0x38(%esp),%edi
jmp    8063186 <__sprintf_chk@plt+0x19046>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
mov    %eax,%edi
jmp    8063248 <__sprintf_chk@plt+0x19108>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%esi
mov    0x34(%esp),%edx
movb   $0x0,0x3c(%esp)
mov    %esi,%edi
sub    %edx,%edi
mov    %edx,%ebp
mov    %edi,0x38(%esp)
jmp    8063186 <__sprintf_chk@plt+0x19046>
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
test   %eax,%eax
je     8063411 <__sprintf_chk@plt+0x192d1>
mov    0x18(%esp),%ebx
movzbl (%ebx),%edx
test   %dl,%dl
mov    %edx,0x14(%esp)
je     80633e4 <__sprintf_chk@plt+0x192a4>
call   804a120 <__ctype_b_loc@plt>
mov    0x14(%esp),%edx
mov    (%eax),%eax
jmp    80633da <__sprintf_chk@plt+0x1929a>
nop
add    $0x1,%ebx
movzbl (%ebx),%edx
test   %dl,%dl
je     80633e4 <__sprintf_chk@plt+0x192a4>
movzbl %dl,%edx
testb  $0x20,0x1(%eax,%edx,2)
jne    80633d0 <__sprintf_chk@plt+0x19290>
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80499c0 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     80632b7 <__sprintf_chk@plt+0x19177>
mov    0x18(%esp),%esi
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
lea    -0x1(%esi,%eax,1),%ebx
cmp    %ebx,%esi
ja     80632b7 <__sprintf_chk@plt+0x19177>
call   804a120 <__ctype_b_loc@plt>
xchg   %ax,%ax
jmp    8063446 <__sprintf_chk@plt+0x19306>
lea    0x0(%esi),%esi
movb   $0x0,(%ebx)
sub    $0x1,%ebx
cmp    %ebx,%esi
ja     80632b7 <__sprintf_chk@plt+0x19177>
movzbl (%ebx),%ecx
mov    (%eax),%edx
testb  $0x20,0x1(%edx,%ecx,2)
jne    8063438 <__sprintf_chk@plt+0x192f8>
jmp    80632b7 <__sprintf_chk@plt+0x19177>
nop
mov    0x18(%esp),%ebx
mov    %ebx,(%esp)
mov    %ebx,0x34(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x0,0x30(%esp)
lea    (%ebx,%eax,1),%edx
cmp    %edx,%ebx
mov    %edx,0x20(%esp)
jae    80635ae <__sprintf_chk@plt+0x1946e>
lea    0x40(%esp),%edi
mov    %edx,%ebp
lea    0x28(%esp),%esi
jmp    8063501 <__sprintf_chk@plt+0x193c1>
lea    0x0(%esi),%esi
movzbl (%ebx),%eax
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806e580(,%edx,4),%edx
bt     %eax,%edx
jae    8063578 <__sprintf_chk@plt+0x19438>
movl   $0x1,0x38(%esp)
movsbl (%ebx),%eax
movb   $0x1,0x3c(%esp)
mov    %eax,0x40(%esp)
mov    0x40(%esp),%eax
movb   $0x1,0x30(%esp)
mov    %eax,(%esp)
call   8049cd0 <iswspace@plt>
test   %eax,%eax
je     80635ae <__sprintf_chk@plt+0x1946e>
mov    0x20(%esp),%ebp
add    0x38(%esp),%ebx
movb   $0x0,0x30(%esp)
cmp    %ebx,%ebp
mov    %ebx,0x34(%esp)
jbe    80635ae <__sprintf_chk@plt+0x1946e>
cmpb   $0x0,0x24(%esp)
je     80634a0 <__sprintf_chk@plt+0x19360>
sub    %ebx,%ebp
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x38(%esp)
je     8063598 <__sprintf_chk@plt+0x19458>
cmp    $0xfffffffe,%eax
je     80635f0 <__sprintf_chk@plt+0x194b0>
test   %eax,%eax
jne    80635e0 <__sprintf_chk@plt+0x194a0>
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
cmpb   $0x0,(%ebx)
jne    8063663 <__sprintf_chk@plt+0x19523>
mov    0x40(%esp),%ebp
test   %ebp,%ebp
jne    806363f <__sprintf_chk@plt+0x194ff>
mov    %esi,(%esp)
movb   $0x1,0x3c(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     80634cf <__sprintf_chk@plt+0x1938f>
movb   $0x0,0x24(%esp)
jmp    80634cf <__sprintf_chk@plt+0x1938f>
mov    %esi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     8063611 <__sprintf_chk@plt+0x194d1>
movb   $0x1,0x24(%esp)
jmp    8063508 <__sprintf_chk@plt+0x193c8>
lea    0x0(%esi),%esi
mov    0x34(%esp),%ebx
movl   $0x1,0x38(%esp)
movb   $0x0,0x3c(%esp)
movb   $0x1,0x30(%esp)
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
mov    %ebx,0x4(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80499c0 <memmove@plt>
cmpl   $0x1,0x84(%esp)
je     80632b7 <__sprintf_chk@plt+0x19177>
jmp    806310b <__sprintf_chk@plt+0x18fcb>
mov    0x34(%esp),%ebx
jmp    8063559 <__sprintf_chk@plt+0x19419>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%ebx
mov    0x20(%esp),%eax
movb   $0x0,0x3c(%esp)
sub    %ebx,%eax
mov    %eax,0x38(%esp)
jmp    80635a9 <__sprintf_chk@plt+0x19469>
mov    0x1c(%esp),%eax
movb   $0x0,(%eax)
jmp    80632b7 <__sprintf_chk@plt+0x19177>
movl   $0x806e96d,0xc(%esp)
movl   $0x8e,0x8(%esp)
movl   $0x806e964,0x4(%esp)
movl   $0x806e491,(%esp)
call   804a110 <__assert_fail@plt>
call   80652b0 <__sprintf_chk@plt+0x1b170>
call   8049ac0 <__stack_chk_fail@plt>
movl   $0x806e96d,0xc(%esp)
movl   $0xaa,0x8(%esp)
movl   $0x806e964,0x4(%esp)
movl   $0x806e4bf,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806e96d,0xc(%esp)
movl   $0xa9,0x8(%esp)
movl   $0x806e964,0x4(%esp)
movl   $0x806e4a8,(%esp)
call   804a110 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
cmp    $0x2,%ebx
ja     80636bf <__sprintf_chk@plt+0x1957f>
mov    %ebx,(%esp)
call   806b900 <fts_children+0x2a00>
mov    %eax,%edi
call   8049e90 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %ebx,(%esp)
mov    %edi,%ebx
call   804a0e0 <close@plt>
mov    %ebp,(%esi)
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     8063b88 <__sprintf_chk@plt+0x19a48>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x806e97f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e992,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x806eca0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   804a010 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e9f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     8063bb0 <__sprintf_chk@plt+0x19a70>
jmp    *0x806ebf4(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eb54,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   804a010 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eb84,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8049a90 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a010 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804a080 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806e996,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806e9a6,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806e9bd,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eabc,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    806382f <__sprintf_chk@plt+0x196ef>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eadc,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    806382f <__sprintf_chk@plt+0x196ef>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eb00,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    806382f <__sprintf_chk@plt+0x196ef>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eb28,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    806382f <__sprintf_chk@plt+0x196ef>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x806e98b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8063721 <__sprintf_chk@plt+0x195e1>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806ebb8,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8049a90 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    80638ba <__sprintf_chk@plt+0x1977a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x80(%esp),%ebx
mov    0x70(%esp),%esi
mov    0x74(%esp),%eax
mov    0x78(%esp),%edx
mov    (%ebx),%ebp
mov    0x7c(%esp),%ecx
test   %ebp,%ebp
je     8063c72 <__sprintf_chk@plt+0x19b32>
xchg   %ax,%ax
add    $0x1,%edi
mov    (%ebx,%edi,4),%ebp
test   %ebp,%ebp
jne    8063c68 <__sprintf_chk@plt+0x19b28>
test   %eax,%eax
je     80640e8 <__sprintf_chk@plt+0x19fa8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x806e97f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e992,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x806eca0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   804a010 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e9f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     806410d <__sprintf_chk@plt+0x19fcd>
jmp    *0x806ec1c(,%edi,4)
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%eax
mov    0x1c(%ebx),%ecx
mov    0x14(%ebx),%ebp
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x4(%ebx),%eax
mov    0x10(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eb54,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x40(%esp)
call   8049a90 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x1c(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x18(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x10(%esp)
call   804a010 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0xc(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0x10(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x40(%esp)
mov    0x4(%ebx),%edi
mov    %ecx,0x4c(%esp)
mov    (%ebx),%ebx
mov    %edx,0x3c(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806eb84,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x18(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
call   804a010 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804a080 <abort@plt>
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806e996,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <__fprintf_chk@plt>
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806e9a6,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806e9bd,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8063da8 <__sprintf_chk@plt+0x19c68>
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eabc,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8063da8 <__sprintf_chk@plt+0x19c68>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eadc,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8063da8 <__sprintf_chk@plt+0x19c68>
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eb00,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8063da8 <__sprintf_chk@plt+0x19c68>
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x806eb28,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8063da8 <__sprintf_chk@plt+0x19c68>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x806e98b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8063c9e <__sprintf_chk@plt+0x19b5e>
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0xc(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0x10(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x40(%esp)
mov    0x4(%ebx),%edi
mov    %ecx,0x4c(%esp)
mov    (%ebx),%ebx
mov    %edx,0x3c(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806ebb8,0x4(%esp)
jmp    8063df2 <__sprintf_chk@plt+0x19cb2>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xb0(%esp),%eax
mov    0xa0(%esp),%ebx
mov    0xa4(%esp),%ecx
mov    0xa8(%esp),%edi
mov    (%eax),%edx
mov    0xac(%esp),%ebp
test   %edx,%edx
mov    %edx,0x58(%esp)
je     8064788 <__sprintf_chk@plt+0x1a648>
mov    0x4(%eax),%edx
test   %edx,%edx
mov    %edx,0x5c(%esp)
je     8064790 <__sprintf_chk@plt+0x1a650>
mov    0x8(%eax),%edx
test   %edx,%edx
mov    %edx,0x60(%esp)
je     80647a0 <__sprintf_chk@plt+0x1a660>
mov    0xc(%eax),%edx
test   %edx,%edx
mov    %edx,0x64(%esp)
je     80647b0 <__sprintf_chk@plt+0x1a670>
mov    0x10(%eax),%edx
test   %edx,%edx
mov    %edx,0x68(%esp)
je     80647c0 <__sprintf_chk@plt+0x1a680>
mov    0x14(%eax),%edx
test   %edx,%edx
mov    %edx,0x6c(%esp)
je     80647d0 <__sprintf_chk@plt+0x1a690>
mov    0x18(%eax),%edx
test   %edx,%edx
mov    %edx,0x70(%esp)
je     80647e0 <__sprintf_chk@plt+0x1a6a0>
mov    0x1c(%eax),%edx
test   %edx,%edx
mov    %edx,0x74(%esp)
je     80647f0 <__sprintf_chk@plt+0x1a6b0>
mov    0x20(%eax),%edx
test   %edx,%edx
mov    %edx,0x78(%esp)
je     8064800 <__sprintf_chk@plt+0x1a6c0>
cmpl   $0x1,0x24(%eax)
sbb    %esi,%esi
add    $0xa,%esi
test   %ecx,%ecx
je     8064708 <__sprintf_chk@plt+0x1a5c8>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x806e97f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a010 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e992,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x806eca0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   804a010 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e9f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
cmp    $0x9,%esi
ja     8064730 <__sprintf_chk@plt+0x1a5f0>
jmp    *0x806ec44(,%esi,4)
mov    0x74(%esp),%ecx
mov    0x70(%esp),%edx
mov    0x60(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x68(%esp),%edi
mov    %ecx,0x48(%esp)
mov    0x5c(%esp),%ecx
mov    %edx,0x44(%esp)
mov    0x58(%esp),%edx
movl   $0x806eb54,0x4(%esp)
mov    0x6c(%esp),%ebp
movl   $0x0,(%esp)
mov    0x64(%esp),%esi
mov    %ecx,0x3c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %edi,0x1c(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x20(%esp)
mov    %ecx,0x28(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %esi,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a010 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%ecx
mov    0x74(%esp),%edx
mov    0x64(%esp),%esi
mov    0x68(%esp),%eax
mov    %ecx,0x4c(%esp)
mov    0x60(%esp),%ecx
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %esi,0x3c(%esp)
mov    0x70(%esp),%ebp
mov    0x6c(%esp),%edi
mov    0x58(%esp),%esi
mov    %eax,0x38(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806eb84,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %edi,0x20(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x44(%esp),%edx
mov    %edi,0x1c(%esp)
mov    0x3c(%esp),%edi
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
mov    %ecx,0x14(%esp)
mov    %edi,0x18(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a010 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a080 <abort@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x58(%esp),%esi
movl   $0x806e996,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0xac(%esp)
mov    %ebx,0xa0(%esp)
movl   $0x1,0xa4(%esp)
00
mov    %eax,0xa8(%esp)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <__fprintf_chk@plt>
nop
movl   $0x5,0x8(%esp)
mov    0x5c(%esp),%edi
movl   $0x806e9a6,0x4(%esp)
mov    0x58(%esp),%esi
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %edi,0xb0(%esp)
mov    %esi,0xac(%esp)
mov    %ebx,0xa0(%esp)
movl   $0x1,0xa4(%esp)
00
mov    %eax,0xa8(%esp)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804a010 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806e9bd,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
call   8049a90 <dcgettext@plt>
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064358 <__sprintf_chk@plt+0x1a218>
lea    0x0(%esi),%esi
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806eabc,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
mov    %edx,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064358 <__sprintf_chk@plt+0x1a218>
lea    0x0(%esi),%esi
mov    0x68(%esp),%ecx
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%ebp
movl   $0x806eadc,0x4(%esp)
mov    0x5c(%esp),%edi
movl   $0x0,(%esp)
mov    0x58(%esp),%esi
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064358 <__sprintf_chk@plt+0x1a218>
lea    0x0(%esi),%esi
mov    0x6c(%esp),%ecx
mov    0x68(%esp),%edx
mov    0x58(%esp),%eax
mov    0x60(%esp),%edi
movl   $0x5,0x8(%esp)
mov    0x64(%esp),%ebp
movl   $0x806eb00,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %edi,0x14(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x18(%esp)
mov    %ecx,0x20(%esp)
mov    %edx,0x1c(%esp)
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064358 <__sprintf_chk@plt+0x1a218>
lea    0x0(%esi),%esi
mov    0x70(%esp),%ecx
mov    0x6c(%esp),%edx
mov    0x5c(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x64(%esp),%edi
mov    %ecx,0x44(%esp)
mov    0x58(%esp),%ecx
movl   $0x806eb28,0x4(%esp)
mov    0x68(%esp),%ebp
movl   $0x0,(%esp)
mov    0x60(%esp),%esi
mov    %edx,0x40(%esp)
mov    %ecx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %edi,0x18(%esp)
mov    0x38(%esp),%edi
mov    %ebp,0x1c(%esp)
mov    %ecx,0x24(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x20(%esp)
mov    %esi,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064358 <__sprintf_chk@plt+0x1a218>
lea    0x0(%esi),%esi
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x806e98b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064248 <__sprintf_chk@plt+0x1a108>
lea    0x0(%esi),%esi
mov    0x78(%esp),%ecx
mov    0x74(%esp),%edx
mov    0x64(%esp),%esi
mov    0x68(%esp),%eax
mov    %ecx,0x4c(%esp)
mov    0x60(%esp),%ecx
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %esi,0x3c(%esp)
mov    0x70(%esp),%ebp
mov    0x6c(%esp),%edi
mov    %eax,0x38(%esp)
mov    0x58(%esp),%esi
mov    %ecx,0x40(%esp)
mov    %edx,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806ebb8,0x4(%esp)
jmp    80643b4 <__sprintf_chk@plt+0x1a274>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
nop
mov    $0x1,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
lea    0x0(%esi),%esi
mov    $0x2,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
lea    0x0(%esi),%esi
mov    $0x3,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
lea    0x0(%esi),%esi
mov    $0x4,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
lea    0x0(%esi),%esi
mov    $0x5,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
lea    0x0(%esi),%esi
mov    $0x6,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
lea    0x0(%esi),%esi
mov    $0x7,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
lea    0x0(%esi),%esi
mov    $0x8,%esi
jmp    806421c <__sprintf_chk@plt+0x1a0dc>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xb0(%esp),%eax
mov    0xa0(%esp),%ebp
mov    0xa4(%esp),%edx
mov    0xa8(%esp),%ecx
test   %eax,%eax
mov    0xac(%esp),%esi
mov    %eax,0x58(%esp)
je     8064e38 <__sprintf_chk@plt+0x1acf8>
mov    0xb4(%esp),%eax
test   %eax,%eax
mov    %eax,0x5c(%esp)
je     8064e40 <__sprintf_chk@plt+0x1ad00>
mov    0xb8(%esp),%eax
test   %eax,%eax
mov    %eax,0x60(%esp)
je     8064e50 <__sprintf_chk@plt+0x1ad10>
mov    0xbc(%esp),%eax
test   %eax,%eax
mov    %eax,0x64(%esp)
je     8064e60 <__sprintf_chk@plt+0x1ad20>
mov    0xc0(%esp),%eax
test   %eax,%eax
mov    %eax,0x68(%esp)
je     8064e70 <__sprintf_chk@plt+0x1ad30>
mov    0xc4(%esp),%eax
test   %eax,%eax
mov    %eax,0x6c(%esp)
je     8064e80 <__sprintf_chk@plt+0x1ad40>
mov    0xc8(%esp),%eax
test   %eax,%eax
mov    %eax,0x70(%esp)
je     8064e90 <__sprintf_chk@plt+0x1ad50>
mov    0xcc(%esp),%eax
test   %eax,%eax
mov    %eax,0x74(%esp)
je     8064ea0 <__sprintf_chk@plt+0x1ad60>
mov    0xd0(%esp),%eax
test   %eax,%eax
mov    %eax,0x78(%esp)
je     8064eb0 <__sprintf_chk@plt+0x1ad70>
cmpl   $0x1,0xd4(%esp)
sbb    %ebx,%ebx
add    $0xa,%ebx
test   %edx,%edx
je     8064db8 <__sprintf_chk@plt+0x1ac78>
mov    %esi,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x806e97f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a010 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e992,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x7de,0x10(%esp)
movl   $0x806eca0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
call   804a010 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e9f0,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
cmp    $0x9,%ebx
ja     8064de0 <__sprintf_chk@plt+0x1aca0>
jmp    *0x806ec6c(,%ebx,4)
lea    0x0(%esi),%esi
mov    0x74(%esp),%edx
mov    0x70(%esp),%eax
mov    0x60(%esp),%ecx
movl   $0x5,0x8(%esp)
mov    0x6c(%esp),%edi
mov    %edx,0x48(%esp)
mov    0x5c(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x58(%esp),%eax
movl   $0x806eb54,0x4(%esp)
mov    0x68(%esp),%esi
movl   $0x0,(%esp)
mov    0x64(%esp),%ebx
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x40(%esp)
call   8049a90 <dcgettext@plt>
mov    0x48(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x20(%esp)
mov    0x40(%esp),%edi
mov    %esi,0x1c(%esp)
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x24(%esp)
mov    0x44(%esp),%ecx
mov    %ebx,0x18(%esp)
mov    %edi,0xc(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a010 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%edx
mov    0x74(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%ecx
mov    %edx,0x4c(%esp)
mov    0x60(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x5c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    0x70(%esp),%edi
mov    0x6c(%esp),%esi
mov    0x58(%esp),%ebx
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806eb84,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    0x4c(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x24(%esp)
mov    0x3c(%esp),%edi
mov    %esi,0x20(%esp)
mov    %edx,0x2c(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x28(%esp)
mov    0x48(%esp),%ecx
mov    %edi,0x18(%esp)
mov    0x44(%esp),%edi
mov    %ebx,0xc(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edi,0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   804a010 <__fprintf_chk@plt>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a080 <abort@plt>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x58(%esp),%ebx
movl   $0x806e996,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064a30 <__sprintf_chk@plt+0x1a8f0>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x5c(%esp),%esi
movl   $0x806e9a6,0x4(%esp)
mov    0x58(%esp),%ebx
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064a30 <__sprintf_chk@plt+0x1a8f0>
lea    0x0(%esi),%esi
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806e9bd,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
call   8049a90 <dcgettext@plt>
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064a30 <__sprintf_chk@plt+0x1a8f0>
lea    0x0(%esi),%esi
mov    0x64(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806eabc,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064a30 <__sprintf_chk@plt+0x1a8f0>
lea    0x0(%esi),%esi
mov    0x68(%esp),%edx
mov    0x64(%esp),%ecx
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806eadc,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x3c(%esp)
mov    %ecx,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064a30 <__sprintf_chk@plt+0x1a8f0>
lea    0x0(%esi),%esi
mov    0x6c(%esp),%ecx
mov    0x68(%esp),%edx
mov    0x64(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x60(%esp),%edi
movl   $0x806eb00,0x4(%esp)
mov    0x5c(%esp),%esi
movl   $0x0,(%esp)
mov    0x58(%esp),%ebx
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064a30 <__sprintf_chk@plt+0x1a8f0>
lea    0x0(%esi),%esi
mov    0x70(%esp),%edx
mov    0x5c(%esp),%ecx
mov    0x6c(%esp),%eax
movl   $0x5,0x8(%esp)
mov    0x68(%esp),%edi
mov    %edx,0x44(%esp)
mov    0x58(%esp),%edx
movl   $0x806eb28,0x4(%esp)
mov    0x64(%esp),%esi
movl   $0x0,(%esp)
mov    0x60(%esp),%ebx
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8049a90 <dcgettext@plt>
mov    0x44(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edi,0x1c(%esp)
mov    %esi,0x18(%esp)
mov    %edx,0x24(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %ebx,0x14(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    8064a30 <__sprintf_chk@plt+0x1a8f0>
lea    0x0(%esi),%esi
mov    %esi,0x10(%esp)
mov    %ecx,0xc(%esp)
movl   $0x806e98b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   804a010 <__fprintf_chk@plt>
jmp    806491a <__sprintf_chk@plt+0x1a7da>
lea    0x0(%esi),%esi
mov    0x78(%esp),%edx
mov    0x74(%esp),%eax
mov    0x64(%esp),%ebx
mov    0x68(%esp),%ecx
mov    %edx,0x4c(%esp)
mov    0x60(%esp),%edx
mov    %eax,0x38(%esp)
mov    0x5c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    0x70(%esp),%edi
mov    0x6c(%esp),%esi
mov    %ecx,0x48(%esp)
mov    0x58(%esp),%ebx
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
movl   $0x5,0x8(%esp)
movl   $0x806ebb8,0x4(%esp)
jmp    8064a8c <__sprintf_chk@plt+0x1a94c>
lea    0x0(%esi,%eiz,1),%esi
xor    %ebx,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
nop
mov    $0x1,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
lea    0x0(%esi),%esi
mov    $0x2,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
lea    0x0(%esi),%esi
mov    $0x3,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
lea    0x0(%esi),%esi
mov    $0x4,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
lea    0x0(%esi),%esi
mov    $0x5,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
lea    0x0(%esi),%esi
mov    $0x6,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
lea    0x0(%esi),%esi
mov    $0x7,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
lea    0x0(%esi),%esi
mov    $0x8,%ebx
jmp    80648ee <__sprintf_chk@plt+0x1a7ae>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x806c3d2,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x806c3e7,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x806e9d9,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
movl   $0x806d70c,0xc(%esp)
movl   $0x806c4e3,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
mov    0x8074320,%ebx
movl   $0x5,0x8(%esp)
movl   $0x806d730,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049d10 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
xor    %edx,%edx
sub    $0x18,%esp
mov    $0xffffffff,%eax
mov    0x24(%esp),%ecx
mov    0x20(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     8064fa2 <__sprintf_chk@plt+0x1ae62>
imul   %ecx,%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
je     8064f9d <__sprintf_chk@plt+0x1ae5d>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
nop
je     8064f98 <__sprintf_chk@plt+0x1ae58>
call   80652b0 <__sprintf_chk@plt+0x1b170>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x14,%esp
mov    0x28(%esp),%ecx
mov    0x24(%esp),%ebx
mov    0x20(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     8065008 <__sprintf_chk@plt+0x1aec8>
imul   %ecx,%ebx
test   %ebx,%ebx
je     8064ff0 <__sprintf_chk@plt+0x1aeb0>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     8065004 <__sprintf_chk@plt+0x1aec4>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     8064fd5 <__sprintf_chk@plt+0x1ae95>
mov    %esi,(%esp)
call   80499d0 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
test   %ebx,%ebx
je     8064fe5 <__sprintf_chk@plt+0x1aea5>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     8065060 <__sprintf_chk@plt+0x1af20>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    8065095 <__sprintf_chk@plt+0x1af55>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
imul   %ecx,%ebx
mov    %ecx,(%edi)
test   %ebx,%ebx
je     8065080 <__sprintf_chk@plt+0x1af40>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049c80 <realloc@plt>
test   %ebx,%ebx
jne    8065091 <__sprintf_chk@plt+0x1af51>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ecx,%ecx
jne    8065076 <__sprintf_chk@plt+0x1af36>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ecx,%ebx
jmp    8065045 <__sprintf_chk@plt+0x1af05>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   80499d0 <free@plt>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %eax,%eax
jne    8065055 <__sprintf_chk@plt+0x1af15>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
je     80650b9 <__sprintf_chk@plt+0x1af79>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     80650b4 <__sprintf_chk@plt+0x1af74>
lea    0x0(%esi),%esi
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
je     80650e9 <__sprintf_chk@plt+0x1afa9>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     80650e4 <__sprintf_chk@plt+0x1afa4>
lea    0x0(%esi),%esi
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     8065128 <__sprintf_chk@plt+0x1afe8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     806513b <__sprintf_chk@plt+0x1affb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     8065110 <__sprintf_chk@plt+0x1afd0>
mov    %eax,(%esp)
call   80499d0 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     8065120 <__sprintf_chk@plt+0x1afe0>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     8065190 <__sprintf_chk@plt+0x1b050>
cmp    $0xaaaaaaa9,%eax
ja     80651b7 <__sprintf_chk@plt+0x1b077>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
test   %eax,%eax
mov    %eax,(%ebx)
je     80651a8 <__sprintf_chk@plt+0x1b068>
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     80651b7 <__sprintf_chk@plt+0x1b077>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
jne    8065176 <__sprintf_chk@plt+0x1b036>
movl   $0x40,(%ebx)
mov    $0x40,%eax
jmp    8065176 <__sprintf_chk@plt+0x1b036>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,(%esp)
call   80499d0 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
je     80651ed <__sprintf_chk@plt+0x1b0ad>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049e50 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     80651d4 <__sprintf_chk@plt+0x1b094>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a130 <calloc@plt>
test   %eax,%eax
je     806521f <__sprintf_chk@plt+0x1b0df>
add    $0x1c,%esp
ret
nop
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
je     806525d <__sprintf_chk@plt+0x1b11d>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80499f0 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8065244 <__sprintf_chk@plt+0x1b104>
call   80652b0 <__sprintf_chk@plt+0x1b170>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
lea    0x1(%eax),%ebx
mov    %ebx,(%esp)
call   8049c90 <malloc@plt>
test   %ebx,%ebx
jne    80652a6 <__sprintf_chk@plt+0x1b166>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80499f0 <memcpy@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
test   %eax,%eax
jne    8065290 <__sprintf_chk@plt+0x1b150>
call   80652b0 <__sprintf_chk@plt+0x1b170>
nop
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x806c224,0x4(%esp)
movl   $0x0,(%esp)
call   8049a90 <dcgettext@plt>
mov    0x807426c,%edx
movl   $0x806e484,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8049c40 <error@plt>
call   804a080 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b350 <fts_children+0x2450>
test   %eax,%eax
mov    %eax,%ebx
js     8065340 <__sprintf_chk@plt+0x1b200>
add    $0x28,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049e90 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    8065336 <__sprintf_chk@plt+0x1b1f6>
call   80652b0 <__sprintf_chk@plt+0x1b170>
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806b640 <fts_children+0x2740>
test   %eax,%eax
mov    %eax,%ebx
je     8065378 <__sprintf_chk@plt+0x1b238>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049e90 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    806536e <__sprintf_chk@plt+0x1b22e>
call   80652b0 <__sprintf_chk@plt+0x1b170>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806b830 <fts_children+0x2930>
test   %eax,%eax
mov    %eax,%ebx
je     80653c0 <__sprintf_chk@plt+0x1b280>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8049e90 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    80653b6 <__sprintf_chk@plt+0x1b276>
call   80652b0 <__sprintf_chk@plt+0x1b170>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%ebp
mov    0x70(%esp),%esi
mov    0x74(%esp),%ebx
cmp    $0x24,%ebp
ja     8066691 <__sprintf_chk@plt+0x1c551>
test   %ebx,%ebx
lea    0x4c(%esp),%eax
cmove  %eax,%ebx
call   8049e90 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
mov    %ebp,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049ff0 <__strtoll_internal@plt>
mov    (%ebx),%ebp
cmp    %esi,%ebp
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
je     8065540 <__sprintf_chk@plt+0x1b400>
mov    (%edi),%eax
test   %eax,%eax
jne    8065468 <__sprintf_chk@plt+0x1b328>
xor    %edi,%edi
mov    0x80(%esp),%esi
test   %esi,%esi
je     806544b <__sprintf_chk@plt+0x1b30b>
movsbl 0x0(%ebp),%eax
test   %al,%al
mov    %al,0x24(%esp)
jne    8065488 <__sprintf_chk@plt+0x1b348>
mov    0x7c(%esp),%eax
mov    %edi,%esi
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x22,%eax
mov    $0x4,%esi
mov    $0x1,%edi
je     8065434 <__sprintf_chk@plt+0x1b2f4>
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     8065520 <__sprintf_chk@plt+0x1b3e0>
mov    0x80(%esp),%eax
movl   $0x30,0x4(%esp)
mov    %eax,(%esp)
call   8049d40 <strchr@plt>
test   %eax,%eax
je     80654da <__sprintf_chk@plt+0x1b39a>
movzbl 0x1(%ebp),%eax
cmp    $0x44,%al
je     8065598 <__sprintf_chk@plt+0x1b458>
cmp    $0x69,%al
je     8065ab0 <__sprintf_chk@plt+0x1b970>
cmp    $0x42,%al
je     8065598 <__sprintf_chk@plt+0x1b458>
movl   $0xffffffff,0x38(%esp)
mov    $0x1,%esi
movl   $0x1fffff,0x28(%esp)
movl   $0x0,0x34(%esp)
movl   $0xffe00000,0x2c(%esp)
movl   $0x400,0x30(%esp)
movzbl 0x24(%esp),%eax
sub    $0x42,%eax
cmp    $0x35,%al
ja     8065520 <__sprintf_chk@plt+0x1b3e0>
movzbl %al,%eax
jmp    *0x806ed04(,%eax,4)
lea    0x0(%esi),%esi
mov    0x7c(%esp),%eax
or     $0x2,%edi
mov    0x18(%esp),%edx
mov    %edi,%esi
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    %ecx,0x4(%eax)
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x80(%esp),%edi
mov    $0x4,%esi
test   %edi,%edi
je     806545e <__sprintf_chk@plt+0x1b31e>
movsbl 0x0(%ebp),%eax
test   %al,%al
mov    %al,0x24(%esp)
je     806545e <__sprintf_chk@plt+0x1b31e>
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   8049d40 <strchr@plt>
movl   $0x1,0x18(%esp)
movl   $0x0,0x1c(%esp)
test   %eax,%eax
jne    80654a3 <__sprintf_chk@plt+0x1b363>
jmp    806545e <__sprintf_chk@plt+0x1b31e>
xchg   %ax,%ax
movl   $0xa5e353f7,0x38(%esp)
mov    $0x2,%esi
movl   $0x20c49b,0x28(%esp)
movl   $0x5a1cac09,0x34(%esp)
movl   $0xffdf3b64,0x2c(%esp)
movl   $0x3e8,0x30(%esp)
jmp    8065507 <__sprintf_chk@plt+0x1b3c7>
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
or     %eax,%edi
add    %esi,%ebp
mov    %edi,%eax
or     $0x2,%eax
mov    %ebp,(%ebx)
cmpb   $0x0,0x0(%ebp)
cmovne %eax,%edi
jmp    806544b <__sprintf_chk@plt+0x1b30b>
cmpl   $0xffc00000,0x1c(%esp)
jl     8065af0 <__sprintf_chk@plt+0x1b9b0>
cmpl   $0x3fffff,0x1c(%esp)
jg     8065b0a <__sprintf_chk@plt+0x1b9ca>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x9,%eax,%edx
shl    $0x9,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    80655d0 <__sprintf_chk@plt+0x1b490>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065b2e <__sprintf_chk@plt+0x1b9ee>
jl     806563c <__sprintf_chk@plt+0x1b4fc>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065b2e <__sprintf_chk@plt+0x1b9ee>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80662c6 <__sprintf_chk@plt+0x1c186>
jg     806565a <__sprintf_chk@plt+0x1b51a>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80662c6 <__sprintf_chk@plt+0x1c186>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jle    80665c5 <__sprintf_chk@plt+0x1c485>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
orl    $0x1,0x24(%esp)
movl   $0x0,0x18(%esp)
mov    $0x1,%eax
movl   $0x80000000,0x1c(%esp)
or     0x24(%esp),%eax
jmp    80655d0 <__sprintf_chk@plt+0x1b490>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065b24 <__sprintf_chk@plt+0x1b9e4>
jl     80656e6 <__sprintf_chk@plt+0x1b5a6>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065b24 <__sprintf_chk@plt+0x1b9e4>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065be4 <__sprintf_chk@plt+0x1baa4>
jg     8065704 <__sprintf_chk@plt+0x1b5c4>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065be4 <__sprintf_chk@plt+0x1baa4>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jle    80665e3 <__sprintf_chk@plt+0x1c4a3>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
orl    $0x1,0x24(%esp)
jmp    8065696 <__sprintf_chk@plt+0x1b556>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065b56 <__sprintf_chk@plt+0x1ba16>
jl     8065768 <__sprintf_chk@plt+0x1b628>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065b56 <__sprintf_chk@plt+0x1ba16>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8066547 <__sprintf_chk@plt+0x1c407>
jg     8065786 <__sprintf_chk@plt+0x1b646>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8066547 <__sprintf_chk@plt+0x1c407>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    8066674 <__sprintf_chk@plt+0x1c534>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    80656a5 <__sprintf_chk@plt+0x1b565>
cmpl   $0xc0000000,0x1c(%esp)
jl     8065af0 <__sprintf_chk@plt+0x1b9b0>
cmpl   $0x3fffffff,0x1c(%esp)
jg     8065b0a <__sprintf_chk@plt+0x1b9ca>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0x1,%eax,%edx
add    %eax,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    80655d0 <__sprintf_chk@plt+0x1b490>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065b4c <__sprintf_chk@plt+0x1ba0c>
jl     806581e <__sprintf_chk@plt+0x1b6de>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065b4c <__sprintf_chk@plt+0x1ba0c>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065ffa <__sprintf_chk@plt+0x1beba>
jg     806583c <__sprintf_chk@plt+0x1b6fc>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065ffa <__sprintf_chk@plt+0x1beba>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    806663a <__sprintf_chk@plt+0x1c4fa>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    80656a0 <__sprintf_chk@plt+0x1b560>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065b60 <__sprintf_chk@plt+0x1ba20>
jl     806589b <__sprintf_chk@plt+0x1b75b>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065b60 <__sprintf_chk@plt+0x1ba20>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065b82 <__sprintf_chk@plt+0x1ba42>
jg     80658b9 <__sprintf_chk@plt+0x1b779>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065b82 <__sprintf_chk@plt+0x1ba42>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    8066600 <__sprintf_chk@plt+0x1c4c0>
movl   $0x0,0x24(%esp)
mov    $0x1,%eax
movl   $0x0,0x18(%esp)
movl   $0x80000000,0x1c(%esp)
jmp    80656bf <__sprintf_chk@plt+0x1b57f>
xchg   %ax,%ax
cmpl   $0xffe00000,0x1c(%esp)
jl     8065af0 <__sprintf_chk@plt+0x1b9b0>
cmpl   $0x1fffff,0x1c(%esp)
jg     8065b0a <__sprintf_chk@plt+0x1b9ca>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
shld   $0xa,%eax,%edx
shl    $0xa,%eax
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
jmp    80655d0 <__sprintf_chk@plt+0x1b490>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065b42 <__sprintf_chk@plt+0x1ba02>
jl     8065968 <__sprintf_chk@plt+0x1b828>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065b42 <__sprintf_chk@plt+0x1ba02>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806624a <__sprintf_chk@plt+0x1c10a>
jg     8065986 <__sprintf_chk@plt+0x1b846>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806624a <__sprintf_chk@plt+0x1c10a>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    806661d <__sprintf_chk@plt+0x1c4dd>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    80656aa <__sprintf_chk@plt+0x1b56a>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065b38 <__sprintf_chk@plt+0x1b9f8>
jl     80659e5 <__sprintf_chk@plt+0x1b8a5>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065b38 <__sprintf_chk@plt+0x1b9f8>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065e5a <__sprintf_chk@plt+0x1bd1a>
jg     8065a03 <__sprintf_chk@plt+0x1b8c3>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065e5a <__sprintf_chk@plt+0x1bd1a>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x2c(%esp),%eax
cmp    %eax,0x1c(%esp)
jge    8066657 <__sprintf_chk@plt+0x1c517>
xor    %eax,%eax
or     $0x1,%eax
mov    %eax,0x24(%esp)
jmp    806569b <__sprintf_chk@plt+0x1b55b>
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065af0 <__sprintf_chk@plt+0x1b9b0>
jl     8065a62 <__sprintf_chk@plt+0x1b922>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065af0 <__sprintf_chk@plt+0x1b9b0>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065b0a <__sprintf_chk@plt+0x1b9ca>
jg     8065a80 <__sprintf_chk@plt+0x1b940>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065b0a <__sprintf_chk@plt+0x1b9ca>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x24(%esp)
mov    %ecx,%eax
mull   0x18(%esp)
mov    %eax,0x18(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
xor    %eax,%eax
jmp    80655d0 <__sprintf_chk@plt+0x1b490>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x42,0x2(%ebp)
movl   $0xffffffff,0x38(%esp)
movl   $0x1fffff,0x28(%esp)
sete   %al
mov    %eax,%esi
movl   $0x0,0x34(%esp)
lea    0x1(%esi,%esi,1),%esi
movl   $0xffe00000,0x2c(%esp)
movl   $0x400,0x30(%esp)
jmp    8065507 <__sprintf_chk@plt+0x1b3c7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x18(%esp)
mov    $0x1,%eax
movl   $0x80000000,0x1c(%esp)
jmp    80655d0 <__sprintf_chk@plt+0x1b490>
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0x7fffffff,0x1c(%esp)
jmp    80655d0 <__sprintf_chk@plt+0x1b490>
mov    $0x1,%eax
jmp    8065739 <__sprintf_chk@plt+0x1b5f9>
mov    $0x1,%eax
jmp    806568f <__sprintf_chk@plt+0x1b54f>
mov    $0x1,%eax
jmp    8065a38 <__sprintf_chk@plt+0x1b8f8>
mov    $0x1,%eax
jmp    80659bb <__sprintf_chk@plt+0x1b87b>
mov    $0x1,%eax
jmp    8065871 <__sprintf_chk@plt+0x1b731>
mov    $0x1,%eax
jmp    80657bb <__sprintf_chk@plt+0x1b67b>
movl   $0x1,0x24(%esp)
mov    $0x1,%eax
movl   $0x0,0x18(%esp)
movl   $0x80000000,0x1c(%esp)
jmp    80656bf <__sprintf_chk@plt+0x1b57f>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065e40 <__sprintf_chk@plt+0x1bd00>
jg     8065bb8 <__sprintf_chk@plt+0x1ba78>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065e40 <__sprintf_chk@plt+0x1bd00>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x28(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
xor    %eax,%eax
jmp    80656bf <__sprintf_chk@plt+0x1b57f>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8066230 <__sprintf_chk@plt+0x1c0f0>
jg     8065c1a <__sprintf_chk@plt+0x1bada>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8066230 <__sprintf_chk@plt+0x1c0f0>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065740 <__sprintf_chk@plt+0x1b600>
jl     8065c57 <__sprintf_chk@plt+0x1bb17>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065740 <__sprintf_chk@plt+0x1b600>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8066216 <__sprintf_chk@plt+0x1c0d6>
jg     8065c75 <__sprintf_chk@plt+0x1bb35>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8066216 <__sprintf_chk@plt+0x1c0d6>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065696 <__sprintf_chk@plt+0x1b556>
jl     8065cb2 <__sprintf_chk@plt+0x1bb72>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065696 <__sprintf_chk@plt+0x1b556>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80661fc <__sprintf_chk@plt+0x1c0bc>
jg     8065cd0 <__sprintf_chk@plt+0x1bb90>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80661fc <__sprintf_chk@plt+0x1c0bc>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     806569b <__sprintf_chk@plt+0x1b55b>
jl     8065d0d <__sprintf_chk@plt+0x1bbcd>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     806569b <__sprintf_chk@plt+0x1b55b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80661e2 <__sprintf_chk@plt+0x1c0a2>
jg     8065d2b <__sprintf_chk@plt+0x1bbeb>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80661e2 <__sprintf_chk@plt+0x1c0a2>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     80656a0 <__sprintf_chk@plt+0x1b560>
jl     8065d68 <__sprintf_chk@plt+0x1bc28>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     80656a0 <__sprintf_chk@plt+0x1b560>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80661c8 <__sprintf_chk@plt+0x1c088>
jg     8065d86 <__sprintf_chk@plt+0x1bc46>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80661c8 <__sprintf_chk@plt+0x1c088>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     80656a5 <__sprintf_chk@plt+0x1b565>
jl     8065dc3 <__sprintf_chk@plt+0x1bc83>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     80656a5 <__sprintf_chk@plt+0x1b565>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80661ae <__sprintf_chk@plt+0x1c06e>
jg     8065de1 <__sprintf_chk@plt+0x1bca1>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80661ae <__sprintf_chk@plt+0x1c06e>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     80656aa <__sprintf_chk@plt+0x1b56a>
jl     8065e1e <__sprintf_chk@plt+0x1bcde>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     80656aa <__sprintf_chk@plt+0x1b56a>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065e40 <__sprintf_chk@plt+0x1bd00>
jg     8065fd4 <__sprintf_chk@plt+0x1be94>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jae    8065fd4 <__sprintf_chk@plt+0x1be94>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x18(%esp)
mov    $0x1,%eax
movl   $0x7fffffff,0x1c(%esp)
jmp    80656bf <__sprintf_chk@plt+0x1b57f>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8066160 <__sprintf_chk@plt+0x1c020>
jg     8065e90 <__sprintf_chk@plt+0x1bd50>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8066160 <__sprintf_chk@plt+0x1c020>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     806569b <__sprintf_chk@plt+0x1b55b>
jg     8065ecd <__sprintf_chk@plt+0x1bd8d>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     806569b <__sprintf_chk@plt+0x1b55b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8066146 <__sprintf_chk@plt+0x1c006>
jg     8065eeb <__sprintf_chk@plt+0x1bdab>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8066146 <__sprintf_chk@plt+0x1c006>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     80656a0 <__sprintf_chk@plt+0x1b560>
jg     8065f28 <__sprintf_chk@plt+0x1bde8>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80656a0 <__sprintf_chk@plt+0x1b560>
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     806612c <__sprintf_chk@plt+0x1bfec>
jl     8065f46 <__sprintf_chk@plt+0x1be06>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
ja     806612c <__sprintf_chk@plt+0x1bfec>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     80656a5 <__sprintf_chk@plt+0x1b565>
jg     8065f83 <__sprintf_chk@plt+0x1be43>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80656a5 <__sprintf_chk@plt+0x1b565>
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     8065fa1 <__sprintf_chk@plt+0x1be61>
jl     80660e6 <__sprintf_chk@plt+0x1bfa6>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
jbe    80660e6 <__sprintf_chk@plt+0x1bfa6>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x28(%esp),%eax
cmp    %eax,0x1c(%esp)
jg     8065e40 <__sprintf_chk@plt+0x1bd00>
jl     8065fd4 <__sprintf_chk@plt+0x1be94>
mov    0x38(%esp),%eax
cmp    %eax,0x18(%esp)
ja     8065e40 <__sprintf_chk@plt+0x1bd00>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
mov    %edx,0x1c(%esp)
add    %ecx,0x1c(%esp)
jmp    80656bf <__sprintf_chk@plt+0x1b57f>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8066194 <__sprintf_chk@plt+0x1c054>
jg     8066030 <__sprintf_chk@plt+0x1bef0>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8066194 <__sprintf_chk@plt+0x1c054>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     80656a0 <__sprintf_chk@plt+0x1b560>
jg     806606d <__sprintf_chk@plt+0x1bf2d>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80656a0 <__sprintf_chk@plt+0x1b560>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806617a <__sprintf_chk@plt+0x1c03a>
jg     806608b <__sprintf_chk@plt+0x1bf4b>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806617a <__sprintf_chk@plt+0x1c03a>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     80656a5 <__sprintf_chk@plt+0x1b565>
jg     80660c8 <__sprintf_chk@plt+0x1bf88>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80656a5 <__sprintf_chk@plt+0x1b565>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8065fa1 <__sprintf_chk@plt+0x1be61>
jg     80660e6 <__sprintf_chk@plt+0x1bfa6>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8065fa1 <__sprintf_chk@plt+0x1be61>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     80656aa <__sprintf_chk@plt+0x1b56a>
jg     8065fb6 <__sprintf_chk@plt+0x1be76>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80656aa <__sprintf_chk@plt+0x1b56a>
jmp    8065fb6 <__sprintf_chk@plt+0x1be76>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065f83 <__sprintf_chk@plt+0x1be43>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065f28 <__sprintf_chk@plt+0x1bde8>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065ecd <__sprintf_chk@plt+0x1bd8d>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    80660c8 <__sprintf_chk@plt+0x1bf88>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    806606d <__sprintf_chk@plt+0x1bf2d>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065e1e <__sprintf_chk@plt+0x1bcde>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065dc3 <__sprintf_chk@plt+0x1bc83>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065d68 <__sprintf_chk@plt+0x1bc28>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065d0d <__sprintf_chk@plt+0x1bbcd>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065cb2 <__sprintf_chk@plt+0x1bb72>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065c57 <__sprintf_chk@plt+0x1bb17>
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
movl   $0x1,0x24(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80661ae <__sprintf_chk@plt+0x1c06e>
jg     8066280 <__sprintf_chk@plt+0x1c140>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80661ae <__sprintf_chk@plt+0x1c06e>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     80656aa <__sprintf_chk@plt+0x1b56a>
jg     8065e1e <__sprintf_chk@plt+0x1bcde>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80656aa <__sprintf_chk@plt+0x1b56a>
jmp    8065e1e <__sprintf_chk@plt+0x1bcde>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     806652d <__sprintf_chk@plt+0x1c3ed>
jg     80662fc <__sprintf_chk@plt+0x1c1bc>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     806652d <__sprintf_chk@plt+0x1c3ed>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     8065696 <__sprintf_chk@plt+0x1b556>
jl     806633f <__sprintf_chk@plt+0x1c1ff>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065696 <__sprintf_chk@plt+0x1b556>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     8066513 <__sprintf_chk@plt+0x1c3d3>
jg     806635d <__sprintf_chk@plt+0x1c21d>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     8066513 <__sprintf_chk@plt+0x1c3d3>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     806569b <__sprintf_chk@plt+0x1b55b>
jl     80663a0 <__sprintf_chk@plt+0x1c260>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     806569b <__sprintf_chk@plt+0x1b55b>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80664f9 <__sprintf_chk@plt+0x1c3b9>
jg     80663be <__sprintf_chk@plt+0x1c27e>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80664f9 <__sprintf_chk@plt+0x1c3b9>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     80656a0 <__sprintf_chk@plt+0x1b560>
jl     8066401 <__sprintf_chk@plt+0x1c2c1>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     80656a0 <__sprintf_chk@plt+0x1b560>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80664df <__sprintf_chk@plt+0x1c39f>
jg     806641f <__sprintf_chk@plt+0x1c2df>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80664df <__sprintf_chk@plt+0x1c39f>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     80656a5 <__sprintf_chk@plt+0x1b565>
jl     8066462 <__sprintf_chk@plt+0x1c322>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     80656a5 <__sprintf_chk@plt+0x1b565>
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80664c5 <__sprintf_chk@plt+0x1c385>
jg     8066478 <__sprintf_chk@plt+0x1c338>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80664c5 <__sprintf_chk@plt+0x1c385>
mov    0x1c(%esp),%eax
mov    0x30(%esp),%ecx
imul   %ecx,%eax
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mul    %ecx
mov    %eax,0x18(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x1c(%esp)
add    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x2c(%esp)
jg     80656aa <__sprintf_chk@plt+0x1b56a>
jl     8065b9a <__sprintf_chk@plt+0x1ba5a>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     80656aa <__sprintf_chk@plt+0x1b56a>
nop
jmp    8065b9a <__sprintf_chk@plt+0x1ba5a>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8065b9a <__sprintf_chk@plt+0x1ba5a>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8066462 <__sprintf_chk@plt+0x1c322>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    8066401 <__sprintf_chk@plt+0x1c2c1>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    80663a0 <__sprintf_chk@plt+0x1c260>
orl    $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
jmp    806633f <__sprintf_chk@plt+0x1c1ff>
movl   $0x1,0x24(%esp)
movl   $0xffffffff,0x18(%esp)
movl   $0x7fffffff,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x28(%esp)
jl     80661c8 <__sprintf_chk@plt+0x1c088>
jg     806657d <__sprintf_chk@plt+0x1c43d>
mov    0x18(%esp),%eax
cmp    %eax,0x38(%esp)
jb     80661c8 <__sprintf_chk@plt+0x1c088>
mov    0x30(%esp),%eax
imul   0x1c(%esp),%eax
mov    %eax,%ecx
mov    0x18(%esp),%eax
mull   0x30(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    0x2c(%esp),%eax
add    %ecx,0x1c(%esp)
cmp    %eax,0x1c(%esp)
jl     80656a5 <__sprintf_chk@plt+0x1b565>
jg     8065dc3 <__sprintf_chk@plt+0x1bc83>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80656a5 <__sprintf_chk@plt+0x1b565>
xchg   %ax,%ax
jmp    8065dc3 <__sprintf_chk@plt+0x1bc83>
jl     80665d6 <__sprintf_chk@plt+0x1c496>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
nop
ja     806568d <__sprintf_chk@plt+0x1b54d>
movl   $0x0,0x24(%esp)
jmp    80662de <__sprintf_chk@plt+0x1c19e>
jl     80665f3 <__sprintf_chk@plt+0x1c4b3>
mov    0x18(%esp),%eax
cmp    %eax,0x34(%esp)
ja     8065737 <__sprintf_chk@plt+0x1b5f7>
movl   $0x0,0x24(%esp)
jmp    8065bfc <__sprintf_chk@plt+0x1babc>
jg     8066610 <__sprintf_chk@plt+0x1c4d0>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80658ec <__sprintf_chk@plt+0x1b7ac>
movl   $0x0,0x24(%esp)
jmp    8065b9a <__sprintf_chk@plt+0x1ba5a>
jg     806662d <__sprintf_chk@plt+0x1c4ed>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80659b9 <__sprintf_chk@plt+0x1b879>
movl   $0x0,0x24(%esp)
jmp    8066262 <__sprintf_chk@plt+0x1c122>
jg     806664a <__sprintf_chk@plt+0x1c50a>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     806586f <__sprintf_chk@plt+0x1b72f>
movl   $0x0,0x24(%esp)
jmp    8066012 <__sprintf_chk@plt+0x1bed2>
jg     8066667 <__sprintf_chk@plt+0x1c527>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     8065a36 <__sprintf_chk@plt+0x1b8f6>
movl   $0x0,0x24(%esp)
jmp    8065e72 <__sprintf_chk@plt+0x1bd32>
jg     8066684 <__sprintf_chk@plt+0x1c544>
mov    0x34(%esp),%eax
cmp    %eax,0x18(%esp)
jb     80657b9 <__sprintf_chk@plt+0x1b679>
movl   $0x0,0x24(%esp)
jmp    806655f <__sprintf_chk@plt+0x1c41f>
movl   $0x806eddc,0xc(%esp)
movl   $0x60,0x8(%esp)
movl   $0x806eccf,0x4(%esp)
movl   $0x806ecdc,(%esp)
call   804a110 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
sub    $0x14,%esp
movl   $0x806ede7,(%esp)
call   8049c70 <getenv@plt>
test   %eax,%eax
je     80666f0 <__sprintf_chk@plt+0x1c5b0>
mov    %eax,%esi
mov    $0x806edec,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
setne  %al
add    $0x14,%esp
movzbl %al,%eax
pop    %esi
pop    %edi
ret
nop
add    $0x14,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8049ef0 <__printf_chk@plt>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x8074320,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804a0b0 <fputs@plt>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
mov    0xc(%esp),%esi
mov    0x10(%esp),%ebx
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
xor    0xc(%ebx),%ecx
xor    0x8(%ebx),%edx
or     %edx,%ecx
je     8066780 <__sprintf_chk@plt+0x1c640>
pop    %ebx
pop    %esi
ret
nop
mov    (%esi),%edx
mov    0x4(%esi),%eax
xor    0x4(%ebx),%eax
xor    (%ebx),%edx
pop    %ebx
pop    %esi
or     %eax,%edx
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0xc(%eax),%edx
mov    0x8(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806be70 <fts_children+0x2f70>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax),%edx
mov    (%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806be70 <fts_children+0x2f70>
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%ecx
mov    (%eax),%edx
mov    0x4(%eax),%eax
xor    0x4(%ecx),%eax
xor    (%ecx),%edx
or     %eax,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%eax
mov    0xa0(%eax),%ecx
mov    0x9c(%eax),%ebx
mov    0x10(%esp),%eax
mov    (%eax),%eax
mov    0xa0(%eax),%edx
mov    0x9c(%eax),%esi
cmp    %edx,%ecx
jae    8066858 <__sprintf_chk@plt+0x1c718>
mov    $0xffffffff,%eax
nop
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jbe    8066878 <__sprintf_chk@plt+0x1c738>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     8066850 <__sprintf_chk@plt+0x1c710>
jb     8066869 <__sprintf_chk@plt+0x1c729>
cmp    %esi,%ebx
ja     8066850 <__sprintf_chk@plt+0x1c710>
xor    %eax,%eax
pop    %ebx
pop    %esi
lea    0x0(%esi),%esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ebx
jb     806684a <__sprintf_chk@plt+0x1c70a>
cmp    %edx,%ecx
mov    $0x1,%eax
ja     8066850 <__sprintf_chk@plt+0x1c710>
jmp    8066863 <__sprintf_chk@plt+0x1c723>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x2c,%esp
mov    0x30(%ecx),%ebp
lea    0x44(%ecx),%edi
mov    0x40(%esp),%edx
mov    (%esi),%ecx
test   %ebp,%ebp
jne    80668b0 <__sprintf_chk@plt+0x1c770>
test   $0x1,%cl
jne    80668b9 <__sprintf_chk@plt+0x1c779>
and    $0x2,%ecx
jne    80668b9 <__sprintf_chk@plt+0x1c779>
test   %dl,%dl
je     8066938 <__sprintf_chk@plt+0x1c7f8>
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a090 <__xstat64@plt>
test   %eax,%eax
je     8066960 <__sprintf_chk@plt+0x1c820>
call   8049e90 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebp
cmp    $0x2,%esi
je     8066a30 <__sprintf_chk@plt+0x1c8f0>
mov    %esi,0x20(%ebx)
test   $0x1,%edi
mov    $0x60,%edx
jne    8066a20 <__sprintf_chk@plt+0x1c8e0>
test   $0x2,%edi
jne    8066a08 <__sprintf_chk@plt+0x1c8c8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
je     8066921 <__sprintf_chk@plt+0x1c7e1>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     8066929 <__sprintf_chk@plt+0x1c7e9>
movb   $0x0,(%edi)
mov    $0xa,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x18(%ebx),%edx
movl   $0x100,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
call   8049b50 <__fxstatat64@plt>
test   %eax,%eax
jne    8066998 <__sprintf_chk@plt+0x1c858>
nop
mov    0x54(%ebx),%ecx
and    $0xf000,%ecx
cmp    $0x4000,%ecx
je     80669a8 <__sprintf_chk@plt+0x1c868>
cmp    $0xa000,%ecx
mov    $0xc,%eax
je     806692e <__sprintf_chk@plt+0x1c7ee>
xor    %eax,%eax
cmp    $0x8000,%ecx
sete   %al
add    $0x2c,%esp
pop    %ebx
lea    0x3(%eax,%eax,4),%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049e90 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
jmp    80668ed <__sprintf_chk@plt+0x1c7ad>
nop
mov    (%esi),%edx
mov    0x58(%ebx),%eax
and    $0x20,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0x2,%edx
sub    %edx,%eax
cmpb   $0x2e,0xa4(%ebx)
mov    %eax,0x38(%ebx)
mov    $0x1,%eax
jne    806692e <__sprintf_chk@plt+0x1c7ee>
cmpb   $0x0,0xa5(%ebx)
je     80669f0 <__sprintf_chk@plt+0x1c8b0>
mov    0xa4(%ebx),%edx
and    $0xffff00,%edx
cmp    $0x2e00,%edx
jne    806692e <__sprintf_chk@plt+0x1c7ee>
cmpl   $0x1,0x30(%ebx)
sbb    %eax,%eax
and    $0xfffffffc,%eax
add    $0x5,%eax
jmp    806692e <__sprintf_chk@plt+0x1c7ee>
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    806690a <__sprintf_chk@plt+0x1c7ca>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x44(%ebx)
add    $0x1,%edi
mov    $0x5f,%dl
jmp    80668fe <__sprintf_chk@plt+0x1c7be>
xchg   %ax,%ax
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804a0d0 <__lxstat64@plt>
test   %eax,%eax
jne    80668ea <__sprintf_chk@plt+0x1c7aa>
movl   $0x0,0x0(%ebp)
mov    $0xd,%al
jmp    806692e <__sprintf_chk@plt+0x1c7ee>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
test   $0x102,%eax
jne    8066aa8 <__sprintf_chk@plt+0x1c968>
mov    0x4(%ecx),%esi
test   %esi,%esi
je     8066a9d <__sprintf_chk@plt+0x1c95d>
mov    0x30(%esi),%eax
test   %eax,%eax
js     8066a9d <__sprintf_chk@plt+0x1c95d>
mov    (%edx),%ebx
mov    0x14(%ebx),%eax
or     0x10(%ebx),%eax
je     8066b22 <__sprintf_chk@plt+0x1c9e2>
mov    (%ebx),%eax
mov    0x4(%ebx),%edx
xor    0xa0(%ecx),%edx
xor    0x9c(%ecx),%eax
or     %eax,%edx
je     8066af0 <__sprintf_chk@plt+0x1c9b0>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%ecx),%ebx
lea    0x1c(%esp),%eax
mov    0x48(%ecx),%esi
mov    %ebx,0x1c(%esp)
mov    0xa0(%ecx),%ebx
mov    0x9c(%ecx),%ecx
mov    %eax,0x4(%esp)
mov    (%edx),%eax
mov    %esi,0x20(%esp)
mov    %ebx,0x28(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   805e3e0 <__sprintf_chk@plt+0x142a0>
test   %eax,%eax
je     8066b22 <__sprintf_chk@plt+0x1c9e2>
mov    %eax,(%esp)
call   80499d0 <free@plt>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x8(%ebx),%eax
mov    0xc(%ebx),%edx
xor    0x48(%ecx),%edx
xor    0x44(%ecx),%eax
or     %eax,%edx
jne    8066a9d <__sprintf_chk@plt+0x1c95d>
mov    0x44(%esi),%eax
mov    0x48(%esi),%edx
mov    %eax,0x8(%ebx)
mov    0x9c(%esi),%eax
mov    %edx,0xc(%ebx)
mov    0xa0(%esi),%edx
mov    %eax,(%ebx)
mov    %edx,0x4(%ebx)
jmp    8066a9d <__sprintf_chk@plt+0x1c95d>
call   804a080 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
mov    0x2c(%eax),%eax
lea    0x38(%edi),%ebx
test   $0x4,%al
jne    8066b8c <__sprintf_chk@plt+0x1ca4c>
test   $0x2,%ah
je     8066bb8 <__sprintf_chk@plt+0x1ca78>
mov    0x1c(%edi),%eax
lea    0x38(%edi),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8069430 <fts_children+0x530>
test   %eax,%eax
js     8066b67 <__sprintf_chk@plt+0x1ca27>
mov    %eax,(%esp)
call   804a0e0 <close@plt>
movl   $0xffffff9c,0x1c(%edi)
xor    %esi,%esi
mov    %ebx,(%esp)
call   8069420 <fts_children+0x520>
test   %al,%al
jne    8066b98 <__sprintf_chk@plt+0x1ca58>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8069470 <fts_children+0x570>
test   %eax,%eax
jns    8066ba8 <__sprintf_chk@plt+0x1ca68>
mov    %ebx,(%esp)
call   8069420 <fts_children+0x520>
test   %al,%al
je     8066b80 <__sprintf_chk@plt+0x1ca40>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   804a0e0 <close@plt>
jmp    8066b8c <__sprintf_chk@plt+0x1ca4c>
lea    0x0(%esi),%esi
mov    0x18(%edi),%eax
lea    0x38(%edi),%ebx
mov    %eax,(%esp)
call   8049fa0 <fchdir@plt>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
jmp    8066b8c <__sprintf_chk@plt+0x1ca4c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
mov    %edx,0xc(%esp)
test   %esi,%esi
je     8066c11 <__sprintf_chk@plt+0x1cad1>
cmpb   $0x2e,(%esi)
jne    8066c11 <__sprintf_chk@plt+0x1cad1>
cmpb   $0x2e,0x1(%esi)
jne    8066c11 <__sprintf_chk@plt+0x1cad1>
cmpb   $0x0,0x2(%esi)
sete   %al
mov    %eax,%ebp
mov    0x2c(%edi),%ebx
mov    %ebx,%edx
and    $0x4,%edx
je     8066c50 <__sprintf_chk@plt+0x1cb10>
and    $0x200,%ebx
mov    %ebx,%edx
je     8066c40 <__sprintf_chk@plt+0x1cb00>
xor    %edx,%edx
test   %ecx,%ecx
js     8066c40 <__sprintf_chk@plt+0x1cb00>
mov    %ecx,(%esp)
mov    %edx,0xc(%esp)
call   804a0e0 <close@plt>
mov    0xc(%esp),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x8c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,%eax
shr    $0x1f,%eax
mov    %eax,0x10(%esp)
mov    %ebp,%eax
test   %al,%al
jne    8066d08 <__sprintf_chk@plt+0x1cbc8>
cmpb   $0x0,0x10(%esp)
jne    8066f32 <__sprintf_chk@plt+0x1cdf2>
mov    %ecx,0x10(%esp)
test   $0x2,%bl
jne    8066c9c <__sprintf_chk@plt+0x1cb5c>
test   %esi,%esi
je     8066de8 <__sprintf_chk@plt+0x1cca8>
cmpb   $0x2e,(%esi)
jne    8066de8 <__sprintf_chk@plt+0x1cca8>
cmpb   $0x2e,0x1(%esi)
jne    8066de8 <__sprintf_chk@plt+0x1cca8>
cmpb   $0x0,0x2(%esi)
jne    8066de8 <__sprintf_chk@plt+0x1cca8>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
movl   $0x3,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
call   8049bb0 <__fxstat64@plt>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
je     8066e10 <__sprintf_chk@plt+0x1ccd0>
mov    $0xffffffff,%eax
test   %ecx,%ecx
mov    %eax,%edx
jns    8066c40 <__sprintf_chk@plt+0x1cb00>
mov    %eax,0xc(%esp)
call   8049e90 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebx
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   804a0e0 <close@plt>
mov    0xc(%esp),%edx
mov    %esi,(%ebx)
jmp    8066c40 <__sprintf_chk@plt+0x1cb00>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x10(%esp)
je     8066c6e <__sprintf_chk@plt+0x1cb2e>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jne    8066e40 <__sprintf_chk@plt+0x1cd00>
mov    $0x1,%ebp
mov    0x1c(%edi),%eax
mov    %eax,0x1c(%esp)
mov    %ebx,%eax
and    $0x10,%eax
cmp    $0x1,%eax
mov    %eax,0x18(%esp)
sbb    %eax,%eax
mov    %eax,0x14(%esp)
and    $0xfffe0000,%eax
andl   $0xfffe0000,0x14(%esp)
add    $0x30900,%eax
addl   $0x70900,0x14(%esp)
and    $0x8,%bh
mov    0x10(%esp),%ebx
cmovne 0x14(%esp),%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
test   %ebx,%ebx
je     8066ed8 <__sprintf_chk@plt+0x1cd98>
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   805eed0 <__sprintf_chk@plt+0x14d90>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
mov    %eax,0x10(%esp)
test   %eax,%eax
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
js     8066f18 <__sprintf_chk@plt+0x1cdd8>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8069180 <fts_children+0x280>
mov    0x2c(%edi),%ebx
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
jmp    8066c72 <__sprintf_chk@plt+0x1cb32>
mov    0x9c(%esi),%eax
mov    0xa0(%esi),%ebx
xor    0x7c(%esp),%ebx
xor    0x78(%esp),%eax
or     %eax,%ebx
jne    8066e26 <__sprintf_chk@plt+0x1cce6>
mov    0x2c(%edi),%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x2,%bh
jne    8066ea0 <__sprintf_chk@plt+0x1cd60>
mov    0x10(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   8049fa0 <fchdir@plt>
mov    0xc(%esp),%ecx
jmp    8066cd5 <__sprintf_chk@plt+0x1cb95>
lea    0x0(%esi),%esi
mov    0xc(%esp),%esi
mov    0x44(%esi),%eax
mov    0x48(%esi),%ebx
xor    0x24(%esp),%ebx
xor    0x20(%esp),%eax
or     %eax,%ebx
je     8066dc8 <__sprintf_chk@plt+0x1cc88>
mov    %ecx,0xc(%esp)
call   8049e90 <__errno_location@plt>
mov    0xc(%esp),%ecx
movl   $0x2,(%eax)
jmp    8066cd0 <__sprintf_chk@plt+0x1cb90>
xchg   %ax,%ax
lea    0x38(%edi),%ebp
mov    %ebp,(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
call   8069420 <fts_children+0x520>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %al,%al
jne    8066d24 <__sprintf_chk@plt+0x1cbe4>
mov    %ebp,(%esp)
call   8069470 <fts_children+0x570>
mov    0x2c(%edi),%ebx
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,0x10(%esp)
js     8066f22 <__sprintf_chk@plt+0x1cde2>
test   $0x2,%bl
mov    0x10(%esp),%ecx
mov    $0x1,%ebp
je     8066de8 <__sprintf_chk@plt+0x1cca8>
jmp    8066c9c <__sprintf_chk@plt+0x1cb5c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%edi),%eax
cmp    %eax,0x10(%esp)
je     8066f42 <__sprintf_chk@plt+0x1ce02>
mov    %ebp,%ecx
test   %cl,%cl
je     8066ef8 <__sprintf_chk@plt+0x1cdb8>
and    $0x4,%ebx
jne    8066ecc <__sprintf_chk@plt+0x1cd8c>
test   %eax,%eax
js     8066ecc <__sprintf_chk@plt+0x1cd8c>
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   804a0e0 <close@plt>
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    %eax,0x1c(%edi)
jmp    8066c40 <__sprintf_chk@plt+0x1cb00>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   80693b0 <fts_children+0x4b0>
mov    0x18(%esp),%ecx
mov    0x14(%esp),%edx
mov    %eax,0x10(%esp)
jmp    8066d98 <__sprintf_chk@plt+0x1cc58>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
lea    0x38(%edi),%eax
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   8069430 <fts_children+0x530>
mov    0xc(%esp),%edx
test   %eax,%eax
jns    8066ec0 <__sprintf_chk@plt+0x1cd80>
jmp    8066ecc <__sprintf_chk@plt+0x1cd8c>
lea    0x0(%esi),%esi
mov    $0xffffffff,%edx
jmp    8066c40 <__sprintf_chk@plt+0x1cb00>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jmp    8066d24 <__sprintf_chk@plt+0x1cbe4>
mov    %ebx,%eax
and    $0x200,%eax
mov    %eax,0x10(%esp)
jmp    8066d29 <__sprintf_chk@plt+0x1cbe9>
cmp    $0xffffff9c,%eax
je     8066ead <__sprintf_chk@plt+0x1cd6d>
call   804a080 <abort@plt>
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
mov    (%eax),%eax
mov    %edx,0x48(%esp)
mov    %eax,0x24(%esp)
mov    0xc(%eax),%eax
test   %eax,%eax
setne  0x4e(%esp)
jne    8067688 <__sprintf_chk@plt+0x1d548>
mov    0x2c(%ebp),%edx
test   $0x10,%dl
jne    80672b8 <__sprintf_chk@plt+0x1d178>
mov    $0x50900,%ecx
mov    $0x10900,%eax
and    $0x8,%dh
mov    0x2c(%ebp),%edx
mov    0x24(%esp),%edi
cmovne %ecx,%eax
mov    $0xffffff9c,%ecx
and    $0x204,%edx
cmp    $0x200,%edx
mov    0x18(%edi),%ebx
je     80677c0 <__sprintf_chk@plt+0x1d680>
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   805eed0 <__sprintf_chk@plt+0x14d90>
test   %eax,%eax
mov    %eax,%ebx
js     806794d <__sprintf_chk@plt+0x1d80d>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8069180 <fts_children+0x280>
mov    %ebx,(%esp)
call   8049f90 <fdopendir@plt>
test   %eax,%eax
je     806793a <__sprintf_chk@plt+0x1d7fa>
mov    0x24(%esp),%edi
cmpw   $0xb,0x3c(%edi)
mov    %eax,0xc(%edi)
je     8067981 <__sprintf_chk@plt+0x1d841>
mov    0x2c(%ebp),%eax
test   $0x1,%ah
jne    8067880 <__sprintf_chk@plt+0x1d740>
cmpl   $0x1,0x28(%ebp)
sbb    %edi,%edi
xor    %ecx,%ecx
mov    %edi,0x38(%esp)
andl   $0x186a1,0x38(%esp)
subl   $0x1,0x38(%esp)
cmpl   $0x2,0x48(%esp)
je     806703f <__sprintf_chk@plt+0x1ceff>
mov    0x2c(%ebp),%edx
mov    $0xffffffff,%ecx
and    $0x18,%edx
cmp    $0x18,%edx
je     8067860 <__sprintf_chk@plt+0x1d720>
cmpb   $0x0,0x4e(%esp)
movb   $0x1,0x4f(%esp)
jne    8067078 <__sprintf_chk@plt+0x1cf38>
test   %ecx,%ecx
setne  %dl
cmpl   $0x3,0x48(%esp)
mov    %edx,%esi
sete   %dl
mov    %edx,%edi
mov    %esi,%edx
test   %dl,%dl
jne    80672d0 <__sprintf_chk@plt+0x1d190>
mov    %edi,%edx
test   %dl,%dl
movb   $0x0,0x4f(%esp)
jne    80672d0 <__sprintf_chk@plt+0x1d190>
lea    0x0(%esi),%esi
mov    0x24(%esp),%edi
movl   $0x0,0x40(%esp)
mov    0x28(%edi),%edx
mov    0x1c(%edi),%ebx
lea    -0x1(%edx),%ecx
cmpb   $0x2f,-0x1(%ebx,%edx,1)
cmove  %ecx,%edx
test   $0x4,%al
je     80670a8 <__sprintf_chk@plt+0x1cf68>
mov    0x14(%ebp),%eax
add    %edx,%eax
lea    0x1(%eax),%esi
mov    %esi,0x40(%esp)
movb   $0x2f,(%eax)
mov    0x20(%ebp),%esi
lea    0x1(%edx),%eax
mov    %eax,0x2c(%esp)
movb   $0x0,0x4d(%esp)
movl   $0x0,0x20(%esp)
mov    %esi,0x30(%esp)
sub    %eax,0x30(%esp)
mov    0x24(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x34(%esp)
mov    0x30(%eax),%eax
mov    %eax,0x18(%esp)
add    $0x1,%eax
mov    %eax,0x3c(%esp)
lea    0x2c(%ebp),%eax
mov    %eax,0x44(%esp)
jmp    806718b <__sprintf_chk@plt+0x1d04b>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    %eax,0x18(%ebx)
mov    0x28(%ebp),%eax
test   %eax,%eax
je     8067110 <__sprintf_chk@plt+0x1cfd0>
testb  $0x4,0x2d(%ebp)
je     80673f0 <__sprintf_chk@plt+0x1d2b0>
mov    0x2c(%ebp),%eax
xor    %ecx,%ecx
and    $0x18,%eax
cmp    $0x18,%eax
je     8067540 <__sprintf_chk@plt+0x1d400>
mov    $0xb,%edi
xor    %eax,%eax
mov    %di,0x3c(%ebx)
movzbl 0x12(%esi),%edx
sub    $0x1,%edx
cmp    $0xb,%edx
ja     806713f <__sprintf_chk@plt+0x1cfff>
mov    0x806ee00(,%edx,4),%eax
xor    %edx,%edx
test   %ecx,%ecx
mov    %eax,0x54(%ebx)
mov    $0x1,%eax
jne    8067154 <__sprintf_chk@plt+0x1d014>
mov    $0x2,%eax
xor    %edx,%edx
mov    0x34(%esp),%esi
mov    %eax,0x70(%ebx)
mov    %edx,0x74(%ebx)
movl   $0x0,0x8(%ebx)
test   %esi,%esi
je     806741c <__sprintf_chk@plt+0x1d2dc>
mov    0x20(%esp),%eax
addl   $0x1,0x1c(%esp)
mov    %ebx,0x8(%eax)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
jbe    8067438 <__sprintf_chk@plt+0x1d2f8>
mov    %ebx,0x20(%esp)
mov    0x24(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     8067438 <__sprintf_chk@plt+0x1d2f8>
mov    %eax,(%esp)
call   8049fd0 <readdir64@plt>
test   %eax,%eax
mov    %eax,%esi
je     80677c8 <__sprintf_chk@plt+0x1d688>
testb  $0x20,0x2c(%ebp)
jne    80671bc <__sprintf_chk@plt+0x1d07c>
cmpb   $0x2e,0x13(%eax)
je     8067520 <__sprintf_chk@plt+0x1d3e0>
lea    0x13(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   8049d70 <strlen@plt>
mov    %eax,%edi
lea    0xa8(%eax),%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8067678 <__sprintf_chk@plt+0x1d538>
lea    0xa4(%eax),%edx
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
call   80499f0 <memcpy@plt>
xor    %eax,%eax
movb   $0x0,0xa4(%ebx,%edi,1)
mov    %edi,0x34(%ebx)
mov    0x14(%ebp),%edi
mov    %ax,0x3e(%ebx)
mov    $0x3,%eax
mov    %ax,0x40(%ebx)
mov    0x18(%esp),%eax
mov    %ebp,0x2c(%ebx)
mov    %edi,0x1c(%ebx)
movl   $0x0,0x20(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0x14(%ebx)
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
cmp    %eax,0x30(%esp)
mov    %eax,%ecx
jbe    8067308 <__sprintf_chk@plt+0x1d1c8>
add    0x2c(%esp),%ecx
jb     8067378 <__sprintf_chk@plt+0x1d238>
mov    0x3c(%esp),%eax
mov    0x4(%esi),%edx
testb  $0x4,0x2c(%ebp)
mov    %eax,0x30(%ebx)
mov    0x0(%ebp),%eax
mov    %ecx,0x28(%ebx)
mov    %eax,0x4(%ebx)
mov    (%esi),%eax
mov    %edx,0xa0(%ebx)
mov    %eax,0x9c(%ebx)
je     80670f8 <__sprintf_chk@plt+0x1cfb8>
mov    0x1c(%ebx),%eax
mov    %eax,0x18(%ebx)
mov    0x34(%ebx),%eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   80499c0 <memmove@plt>
jmp    80670ff <__sprintf_chk@plt+0x1cfbf>
test   $0x1,%dl
jne    8067708 <__sprintf_chk@plt+0x1d5c8>
mov    $0x70900,%ecx
mov    $0x30900,%eax
jmp    8066f8c <__sprintf_chk@plt+0x1ce4c>
test   $0x2,%ah
jne    8067733 <__sprintf_chk@plt+0x1d5f3>
mov    0x24(%esp),%edx
mov    %ebx,%ecx
mov    %ebp,%eax
movl   $0x0,(%esp)
call   8066be0 <__sprintf_chk@plt+0x1caa0>
test   %eax,%eax
jne    8067758 <__sprintf_chk@plt+0x1d618>
mov    0x2c(%ebp),%eax
movb   $0x1,0x4f(%esp)
jmp    8067078 <__sprintf_chk@plt+0x1cf38>
lea    0x0(%esi),%esi
mov    0x20(%ebp),%edx
mov    0x2c(%esp),%ecx
lea    0x101(%ecx,%edx,1),%ecx
add    %ecx,%eax
cmp    %eax,%edx
ja     8067550 <__sprintf_chk@plt+0x1d410>
mov    %eax,0x20(%ebp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     80679f7 <__sprintf_chk@plt+0x1d8b7>
cmp    %eax,%edi
mov    %eax,0x14(%ebp)
je     8067351 <__sprintf_chk@plt+0x1d211>
testb  $0x4,0x2c(%ebp)
movb   $0x1,0x4d(%esp)
je     8067351 <__sprintf_chk@plt+0x1d211>
add    0x2c(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x20(%ebp),%eax
mov    %eax,0x30(%esp)
mov    0x2c(%esp),%eax
sub    %eax,0x30(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    %eax,%ecx
add    0x2c(%esp),%ecx
jae    8067264 <__sprintf_chk@plt+0x1d124>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    0x34(%esp),%ecx
mov    0x34(%esp),%ebx
test   %ecx,%ecx
jne    8067392 <__sprintf_chk@plt+0x1d252>
jmp    80673b0 <__sprintf_chk@plt+0x1d270>
xchg   %ax,%ax
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     80673a4 <__sprintf_chk@plt+0x1d264>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %esi,%esi
jne    8067390 <__sprintf_chk@plt+0x1d250>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    $0x7,%edx
movl   $0x0,0xc(%edi)
mov    %dx,0x3c(%edi)
orl    $0x4000,0x2c(%ebp)
call   8049e90 <__errno_location@plt>
movl   $0x24,(%eax)
xor    %eax,%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
mov    0x44(%esp),%edx
movl   $0x0,(%esp)
call   8066890 <__sprintf_chk@plt+0x1c750>
mov    0x34(%esp),%esi
movl   $0x0,0x8(%ebx)
test   %esi,%esi
mov    %ax,0x3c(%ebx)
jne    806716d <__sprintf_chk@plt+0x1d02d>
addl   $0x1,0x1c(%esp)
mov    0x1c(%esp),%eax
cmp    %eax,0x38(%esp)
mov    %ebx,0x34(%esp)
ja     8067187 <__sprintf_chk@plt+0x1d047>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x4d(%esp)
jne    80677f1 <__sprintf_chk@plt+0x1d6b1>
testb  $0x4,0x2c(%ebp)
je     8067466 <__sprintf_chk@plt+0x1d326>
mov    0x2c(%esp),%eax
cmp    %eax,0x20(%ebp)
je     806745a <__sprintf_chk@plt+0x1d31a>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    806745f <__sprintf_chk@plt+0x1d31f>
subl   $0x1,0x40(%esp)
mov    0x40(%esp),%eax
movb   $0x0,(%eax)
cmpb   $0x0,0x4f(%esp)
je     8067478 <__sprintf_chk@plt+0x1d338>
cmpb   $0x0,0x4e(%esp)
je     80675f0 <__sprintf_chk@plt+0x1d4b0>
mov    0x1c(%esp),%ebx
test   %ebx,%ebx
je     8067a17 <__sprintf_chk@plt+0x1d8d7>
cmpl   $0x2710,0x1c(%esp)
jbe    80676a8 <__sprintf_chk@plt+0x1d568>
mov    0x28(%ebp),%ebx
test   %ebx,%ebx
je     8067a57 <__sprintf_chk@plt+0x1d917>
mov    0x1c(%esp),%eax
cmp    0x24(%ebp),%eax
ja     80676d0 <__sprintf_chk@plt+0x1d590>
mov    0x8(%ebp),%eax
mov    0x34(%esp),%edx
test   %edx,%edx
je     80674c8 <__sprintf_chk@plt+0x1d388>
lea    0x0(%esi),%esi
add    $0x4,%eax
mov    %edx,-0x4(%eax)
mov    0x8(%edx),%edx
test   %edx,%edx
jne    80674b8 <__sprintf_chk@plt+0x1d378>
mov    0x8(%ebp),%eax
mov    0x1c(%esp),%esi
mov    %eax,(%esp)
mov    %ebx,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %esi,0x4(%esp)
call   8049fe0 <qsort@plt>
mov    0x8(%ebp),%edi
lea    -0x1(%esi),%ecx
mov    (%edi),%eax
mov    %edi,%edx
xchg   %ax,%ax
mov    (%edx),%ebx
add    $0x4,%edx
mov    (%edx),%esi
sub    $0x1,%ecx
mov    %esi,0x8(%ebx)
jne    80674f0 <__sprintf_chk@plt+0x1d3b0>
mov    0x1c(%esp),%esi
mov    -0x4(%edi,%esi,4),%edx
movl   $0x0,0x8(%edx)
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x14(%eax)
je     8067531 <__sprintf_chk@plt+0x1d3f1>
cmpw   $0x2e,0x14(%eax)
jne    80671bc <__sprintf_chk@plt+0x1d07c>
mov    0x20(%esp),%ebx
jmp    8067187 <__sprintf_chk@plt+0x1d047>
lea    0x0(%esi),%esi
xor    %ecx,%ecx
testb  $0xfb,0x12(%esi)
setne  %cl
jmp    8067121 <__sprintf_chk@plt+0x1cfe1>
xchg   %ax,%ax
mov    %edi,(%esp)
mov    $0x24,%edi
call   80499d0 <free@plt>
movl   $0x0,0x14(%ebp)
call   8049e90 <__errno_location@plt>
mov    %eax,%esi
movl   $0x24,(%eax)
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    0x34(%esp),%eax
test   %eax,%eax
je     80675b4 <__sprintf_chk@plt+0x1d474>
mov    %esi,0x18(%esp)
mov    0x34(%esp),%esi
jmp    8067592 <__sprintf_chk@plt+0x1d452>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%esi
mov    0xc(%esi),%eax
mov    0x8(%esi),%ebx
test   %eax,%eax
je     80675a4 <__sprintf_chk@plt+0x1d464>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %esi,(%esp)
call   80499d0 <free@plt>
test   %ebx,%ebx
jne    8067590 <__sprintf_chk@plt+0x1d450>
mov    0x18(%esp),%esi
mov    0x24(%esp),%ebx
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %ebx,%eax
movl   $0x0,0xc(%ebx)
mov    $0x7,%ebx
mov    %bx,0x3c(%eax)
xor    %eax,%eax
orl    $0x4000,0x2c(%ebp)
mov    %edi,(%esi)
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
test   %eax,%eax
je     8067603 <__sprintf_chk@plt+0x1d4c3>
cmpl   $0x1,0x48(%esp)
jne    8067484 <__sprintf_chk@plt+0x1d344>
mov    0x24(%esp),%eax
mov    0x30(%eax),%edi
test   %edi,%edi
jne    80679d7 <__sprintf_chk@plt+0x1d897>
mov    %ebp,%eax
call   8066b30 <__sprintf_chk@plt+0x1c9f0>
test   %eax,%eax
setne  %al
test   %al,%al
je     8067478 <__sprintf_chk@plt+0x1d338>
mov    0x24(%esp),%eax
mov    $0x7,%esi
mov    0x34(%esp),%ebx
mov    %si,0x3c(%eax)
orl    $0x4000,0x2c(%ebp)
test   %ebx,%ebx
jne    806764a <__sprintf_chk@plt+0x1d50a>
jmp    8067668 <__sprintf_chk@plt+0x1d528>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     806765c <__sprintf_chk@plt+0x1d51c>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %esi,%esi
jne    8067648 <__sprintf_chk@plt+0x1d508>
xor    %eax,%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8049e90 <__errno_location@plt>
xor    %ebx,%ebx
mov    %eax,%esi
mov    (%eax),%edi
jmp    8067571 <__sprintf_chk@plt+0x1d431>
mov    %eax,(%esp)
call   80499a0 <dirfd@plt>
test   %eax,%eax
mov    %eax,%ebx
js     8067a9b <__sprintf_chk@plt+0x1d95b>
mov    0x2c(%ebp),%eax
jmp    806700b <__sprintf_chk@plt+0x1cecb>
lea    0x0(%esi),%esi
mov    0x28(%ebp),%ebx
mov    0x34(%esp),%eax
test   %ebx,%ebx
je     80673e3 <__sprintf_chk@plt+0x1d2a3>
cmpl   $0x1,0x1c(%esp)
ja     806749d <__sprintf_chk@plt+0x1d35d>
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x28,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     8067a79 <__sprintf_chk@plt+0x1d939>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     8067a79 <__sprintf_chk@plt+0x1d939>
mov    %eax,0x8(%ebp)
jmp    80674ad <__sprintf_chk@plt+0x1d36d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
cmpl   $0x1,0x30(%eax)
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x70900,%ecx
cmpl   $0x1,0x30(%eax)
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
jmp    8066f8c <__sprintf_chk@plt+0x1ce4c>
mov    %ebx,(%esp)
call   806b900 <fts_children+0x2a00>
test   %eax,%eax
mov    %eax,%ebx
js     8067758 <__sprintf_chk@plt+0x1d618>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8069180 <fts_children+0x280>
jmp    80672d9 <__sprintf_chk@plt+0x1d199>
xchg   %ax,%ax
mov    %esi,%eax
test   %al,%al
je     8067764 <__sprintf_chk@plt+0x1d624>
mov    %edi,%eax
test   %al,%al
jne    80677ab <__sprintf_chk@plt+0x1d66b>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
orw    $0x1,0x3e(%edi)
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    0x2c(%ebp),%eax
movl   $0x0,0xc(%edi)
test   $0x2,%ah
je     8067796 <__sprintf_chk@plt+0x1d656>
test   %ebx,%ebx
js     8067796 <__sprintf_chk@plt+0x1d656>
mov    %ebx,(%esp)
call   804a0e0 <close@plt>
mov    0x2c(%ebp),%eax
mov    0x24(%esp),%edi
movb   $0x0,0x4f(%esp)
movl   $0x0,0xc(%edi)
jmp    8067078 <__sprintf_chk@plt+0x1cf38>
call   8049e90 <__errno_location@plt>
mov    0x24(%esp),%edi
mov    (%eax),%eax
mov    %eax,0x20(%edi)
jmp    8067764 <__sprintf_chk@plt+0x1d624>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebp),%ecx
jmp    8066fb3 <__sprintf_chk@plt+0x1ce73>
mov    0x24(%esp),%esi
mov    0xc(%esi),%eax
test   %eax,%eax
je     8067438 <__sprintf_chk@plt+0x1d2f8>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
cmpb   $0x0,0x4d(%esp)
movl   $0x0,0xc(%esi)
je     8067443 <__sprintf_chk@plt+0x1d303>
mov    0x4(%ebp),%eax
mov    0x14(%ebp),%edx
test   %eax,%eax
je     806781f <__sprintf_chk@plt+0x1d6df>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%eax),%ecx
lea    0xa4(%eax),%ebx
cmp    %ebx,%ecx
je     8067815 <__sprintf_chk@plt+0x1d6d5>
sub    0x1c(%eax),%ecx
add    %edx,%ecx
mov    %ecx,0x18(%eax)
mov    %edx,0x1c(%eax)
mov    0x8(%eax),%eax
test   %eax,%eax
jne    8067800 <__sprintf_chk@plt+0x1d6c0>
mov    0x34(%esp),%eax
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%eax),%ecx
test   %ecx,%ecx
js     8067443 <__sprintf_chk@plt+0x1d303>
mov    0x18(%eax),%ecx
lea    0xa4(%eax),%ebx
cmp    %ebx,%ecx
je     8067848 <__sprintf_chk@plt+0x1d708>
sub    0x1c(%eax),%ecx
add    %edx,%ecx
mov    %ecx,0x18(%eax)
mov    0x8(%eax),%ecx
mov    %edx,0x1c(%eax)
test   %ecx,%ecx
je     8067930 <__sprintf_chk@plt+0x1d7f0>
mov    %ecx,%eax
jmp    8067828 <__sprintf_chk@plt+0x1d6e8>
lea    0x0(%esi),%esi
mov    0x24(%esp),%edi
mov    %eax,%edx
and    $0x20,%edx
cmp    $0x1,%edx
sbb    %edx,%edx
mov    0x58(%edi),%ecx
and    $0x2,%edx
sub    %edx,%ecx
jmp    806703f <__sprintf_chk@plt+0x1ceff>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%edi
lea    0x34(%ebp),%edx
mov    %edi,%ecx
call   8066a60 <__sprintf_chk@plt+0x1c920>
mov    0x1c(%ebp),%eax
lea    0x2c(%ebp),%edx
movl   $0x0,(%esp)
mov    %edi,%ecx
call   8066890 <__sprintf_chk@plt+0x1c750>
testl  $0x102,0x2c(%ebp)
je     80679a5 <__sprintf_chk@plt+0x1d865>
movl   $0x14,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8067ada <__sprintf_chk@plt+0x1d99a>
mov    0x24(%esp),%edi
mov    0x48(%edi),%edx
mov    0x44(%edi),%eax
mov    %edx,0x4(%esi)
mov    0xa0(%edi),%edx
mov    %eax,(%esi)
mov    0x9c(%edi),%eax
mov    %edi,0x10(%esi)
mov    %edx,0xc(%esi)
mov    %eax,0x8(%esi)
mov    %esi,0x4(%esp)
mov    0x34(%ebp),%eax
mov    %eax,(%esp)
call   805e160 <__sprintf_chk@plt+0x14020>
cmp    %eax,%esi
mov    %eax,%edi
je     806769a <__sprintf_chk@plt+0x1d55a>
mov    %esi,(%esp)
call   80499d0 <free@plt>
test   %edi,%edi
je     8067ada <__sprintf_chk@plt+0x1d99a>
mov    0x10(%edi),%eax
mov    $0x2,%ecx
mov    0x24(%esp),%esi
mov    %eax,(%esi)
mov    %cx,0x3c(%esi)
jmp    806769a <__sprintf_chk@plt+0x1d55a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%ecx
mov    %ecx,%eax
jmp    8067828 <__sprintf_chk@plt+0x1d6e8>
call   8049e90 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   804a0e0 <close@plt>
mov    %edi,(%esi)
mov    0x24(%esp),%eax
cmpl   $0x3,0x48(%esp)
movl   $0x0,0xc(%eax)
jne    8067668 <__sprintf_chk@plt+0x1d528>
mov    0x24(%esp),%esi
mov    $0x4,%ebx
mov    %bx,0x3c(%esi)
call   8049e90 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%esi)
xor    %eax,%eax
jmp    80673e3 <__sprintf_chk@plt+0x1d2a3>
mov    0x24(%esp),%esi
lea    0x2c(%ebp),%edx
mov    0x1c(%ebp),%eax
movl   $0x0,(%esp)
mov    %esi,%ecx
call   8066890 <__sprintf_chk@plt+0x1c750>
mov    %ax,0x3c(%esi)
mov    0x2c(%ebp),%eax
jmp    806700b <__sprintf_chk@plt+0x1cecb>
mov    0x24(%esp),%edi
mov    %edi,%eax
add    $0x44,%eax
mov    %eax,0x4(%esp)
mov    0x34(%ebp),%eax
mov    %eax,(%esp)
call   80692c0 <fts_children+0x3c0>
test   %al,%al
je     806769a <__sprintf_chk@plt+0x1d55a>
mov    %edi,%eax
mov    $0x2,%edx
mov    %edi,(%eax)
mov    %dx,0x3c(%edi)
jmp    806769a <__sprintf_chk@plt+0x1d55a>
mov    0x4(%eax),%edx
mov    $0xffffffff,%ecx
mov    %ebp,%eax
movl   $0x806edf1,(%esp)
call   8066be0 <__sprintf_chk@plt+0x1caa0>
test   %eax,%eax
setne  %al
jmp    806761e <__sprintf_chk@plt+0x1d4de>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,0x14(%ebp)
call   8049e90 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%edi
jmp    8067571 <__sprintf_chk@plt+0x1d431>
cmpl   $0x3,0x48(%esp)
je     8067a6a <__sprintf_chk@plt+0x1d92a>
mov    0x34(%esp),%ebx
test   %ebx,%ebx
jne    8067a32 <__sprintf_chk@plt+0x1d8f2>
xor    %eax,%eax
jmp    806766a <__sprintf_chk@plt+0x1d52a>
lea    0x0(%esi),%esi
mov    %esi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%esi
test   %eax,%eax
je     8067a44 <__sprintf_chk@plt+0x1d904>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %esi,%esi
jne    8067a30 <__sprintf_chk@plt+0x1d8f0>
xor    %eax,%eax
jmp    806766a <__sprintf_chk@plt+0x1d52a>
testb  $0x2,0x2d(%ebp)
jne    8067aec <__sprintf_chk@plt+0x1d9ac>
mov    0x34(%esp),%eax
jmp    80673e3 <__sprintf_chk@plt+0x1d2a3>
mov    0x24(%esp),%eax
mov    $0x6,%ecx
mov    %cx,0x3c(%eax)
jmp    8067a1e <__sprintf_chk@plt+0x1d8de>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x34(%esp),%eax
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    80673e3 <__sprintf_chk@plt+0x1d2a3>
mov    0x24(%esp),%edi
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
cmpl   $0x3,0x48(%esp)
movl   $0x0,0xc(%edi)
jne    8067668 <__sprintf_chk@plt+0x1d528>
mov    0x24(%esp),%edi
mov    $0x4,%esi
mov    %si,0x3c(%edi)
call   8049e90 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%edi)
xor    %eax,%eax
jmp    806766a <__sprintf_chk@plt+0x1d52a>
call   8049e90 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    80673e3 <__sprintf_chk@plt+0x1d2a3>
lea    0x5c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   8049d30 <fstatfs64@plt>
test   %eax,%eax
jne    8067b1d <__sprintf_chk@plt+0x1d9dd>
mov    0x5c(%esp),%eax
cmp    $0x6969,%eax
je     80676a8 <__sprintf_chk@plt+0x1d568>
cmp    $0x1021994,%eax
je     80676a8 <__sprintf_chk@plt+0x1d568>
mov    0x1c(%esp),%eax
cmp    0x24(%ebp),%eax
movl   $0x8066820,0x28(%ebp)
jbe    8067bcf <__sprintf_chk@plt+0x1da8f>
add    $0x28,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     8067bd4 <__sprintf_chk@plt+0x1da94>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     8067bd4 <__sprintf_chk@plt+0x1da94>
mov    %eax,0x8(%ebp)
mov    0x34(%esp),%edx
test   %edx,%edx
je     8067b74 <__sprintf_chk@plt+0x1da34>
mov    0x34(%esp),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
mov    0x8(%edx),%edx
test   %edx,%edx
jne    8067b67 <__sprintf_chk@plt+0x1da27>
mov    0x1c(%esp),%edi
movl   $0x8066820,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049fe0 <qsort@plt>
mov    0x8(%ebp),%ecx
lea    -0x1(%edi),%edx
mov    (%ecx),%eax
mov    %eax,0x34(%esp)
mov    %ecx,%eax
mov    (%eax),%ebx
add    $0x4,%eax
mov    (%eax),%esi
sub    $0x1,%edx
mov    %esi,0x8(%ebx)
jne    8067ba5 <__sprintf_chk@plt+0x1da65>
mov    0x1c(%esp),%eax
mov    -0x4(%ecx,%eax,4),%eax
movl   $0x0,0x8(%eax)
movl   $0x0,0x28(%ebp)
jmp    8067a61 <__sprintf_chk@plt+0x1d921>
mov    0x8(%ebp),%eax
jmp    8067b5b <__sprintf_chk@plt+0x1da1b>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    8067bc3 <__sprintf_chk@plt+0x1da83>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%ebx
mov    %ebx,%esi
and    $0xffffe000,%esi
jne    8067f70 <fts_open+0x380>
mov    %ebx,%eax
and    $0x204,%eax
cmp    $0x204,%eax
je     8067f70 <fts_open+0x380>
test   $0x12,%bl
je     8067f70 <fts_open+0x380>
movl   $0x58,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     806824e <fts_open+0x65e>
mov    %eax,%edi
mov    $0x16,%ecx
mov    %esi,%eax
test   $0x2,%bl
rep stos %eax,%es:(%edi)
mov    0x68(%esp),%eax
mov    %eax,0x28(%ebp)
jne    8067f00 <fts_open+0x310>
mov    %ebx,0x2c(%ebp)
mov    0x60(%esp),%eax
movl   $0xffffff9c,0x1c(%ebp)
mov    (%eax),%eax
test   %eax,%eax
je     80681ba <fts_open+0x5ca>
mov    0x60(%esp),%edi
xor    %esi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
cmp    %eax,%esi
cmovb  %eax,%esi
add    $0x4,%edi
mov    (%edi),%eax
test   %eax,%eax
jne    8067c78 <fts_open+0x88>
add    $0x1,%esi
mov    $0x1000,%ax
cmp    $0x1000,%esi
cmovb  %eax,%esi
mov    0x20(%ebp),%edx
lea    0x100(%edx,%esi,1),%eax
cmp    %eax,%edx
ja     8068058 <fts_open+0x468>
mov    %eax,0x20(%ebp)
mov    %eax,0x4(%esp)
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806827a <fts_open+0x68a>
mov    %eax,0x14(%ebp)
mov    0x60(%esp),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     80681a0 <fts_open+0x5b0>
movl   $0xa8,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x30(%esp)
je     8067f4f <fts_open+0x35f>
mov    $0x3,%edx
xor    %edi,%edi
mov    %dx,0x40(%eax)
movb   $0x0,0xa4(%eax)
movl   $0x0,0x34(%eax)
mov    %ebp,0x2c(%eax)
mov    %esi,0x1c(%eax)
movl   $0x0,0x20(%eax)
movl   $0x0,0xc(%eax)
mov    %di,0x3e(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0xffffffff,0x30(%eax)
mov    0x60(%esp),%eax
mov    (%eax),%edx
mov    0x68(%esp),%esi
test   %esi,%esi
je     80681b0 <fts_open+0x5c0>
mov    0x2c(%ebp),%eax
shr    $0xa,%eax
and    $0x1,%eax
mov    %al,0x37(%esp)
test   %edx,%edx
je     8068255 <fts_open+0x665>
xor    %edi,%edi
and    $0x1000,%ebx
lea    0x2c(%ebp),%eax
mov    %edi,0x20(%esp)
mov    %edx,%edi
mov    %ebx,0x2c(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,0x38(%esp)
jmp    8067de3 <fts_open+0x1f3>
lea    0x0(%esi),%esi
cmpb   $0x0,0x37(%esp)
je     8067e9a <fts_open+0x2aa>
mov    $0xb,%eax
mov    %ax,0x3c(%ebx)
mov    0x68(%esp),%eax
movl   $0x2,0x70(%ebx)
movl   $0x0,0x74(%ebx)
test   %eax,%eax
je     8067ebf <fts_open+0x2cf>
mov    0x20(%esp),%eax
mov    %ebx,0x20(%esp)
mov    %eax,0x8(%ebx)
mov    0x24(%esp),%eax
lea    0x1(%eax),%ebx
mov    0x60(%esp),%eax
mov    (%eax,%ebx,4),%edi
test   %edi,%edi
je     8067f88 <fts_open+0x398>
mov    %ebx,0x24(%esp)
mov    %edi,(%esp)
call   8049d70 <strlen@plt>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
mov    %eax,%esi
jne    8067e08 <fts_open+0x218>
cmp    $0x2,%eax
jbe    8067e08 <fts_open+0x218>
cmpb   $0x2f,-0x1(%edi,%eax,1)
je     8067ee8 <fts_open+0x2f8>
lea    0x0(%esi),%esi
lea    0xa8(%esi),%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8067f10 <fts_open+0x320>
lea    0xa4(%eax),%ecx
mov    %ecx,(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x28(%esp)
call   80499f0 <memcpy@plt>
mov    0x14(%ebp),%eax
movb   $0x0,0xa4(%ebx,%esi,1)
mov    0x20(%esp),%edx
mov    0x28(%esp),%ecx
mov    %esi,0x34(%ebx)
mov    %eax,0x1c(%ebx)
xor    %eax,%eax
mov    %ax,0x3e(%ebx)
mov    $0x3,%eax
test   %edx,%edx
mov    %ax,0x40(%ebx)
mov    0x30(%esp),%eax
mov    %ebp,0x2c(%ebx)
movl   $0x0,0x20(%ebx)
movl   $0x0,0xc(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0x14(%ebx)
movl   $0x0,0x30(%ebx)
mov    %eax,0x4(%ebx)
mov    %ecx,0x18(%ebx)
jne    8067d90 <fts_open+0x1a0>
mov    0x1c(%ebp),%eax
mov    %ebx,%ecx
mov    0x38(%esp),%edx
movl   $0x0,(%esp)
call   8066890 <__sprintf_chk@plt+0x1c750>
mov    %ax,0x3c(%ebx)
mov    0x68(%esp),%eax
test   %eax,%eax
jne    8067dbe <fts_open+0x1ce>
mov    0x20(%esp),%eax
movl   $0x0,0x8(%ebx)
test   %eax,%eax
je     8068190 <fts_open+0x5a0>
mov    0x3c(%esp),%eax
mov    %ebx,0x3c(%esp)
mov    %ebx,0x8(%eax)
jmp    8067dc9 <fts_open+0x1d9>
lea    0x0(%esi),%esi
cmpb   $0x2f,-0x2(%edi,%esi,1)
jne    8067e08 <fts_open+0x218>
sub    $0x1,%esi
cmp    $0x1,%esi
jne    8067ee8 <fts_open+0x2f8>
jmp    8067e08 <fts_open+0x218>
mov    %ebx,%eax
and    $0xfd,%ah
or     $0x4,%eax
mov    %eax,0x2c(%ebp)
jmp    8067c58 <fts_open+0x68>
mov    0x20(%esp),%edi
test   %edi,%edi
jne    8067f22 <fts_open+0x332>
jmp    8067f40 <fts_open+0x350>
lea    0x0(%esi),%esi
mov    %ebx,%edi
mov    0xc(%edi),%eax
mov    0x8(%edi),%ebx
test   %eax,%eax
je     8067f34 <fts_open+0x344>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %edi,(%esp)
call   80499d0 <free@plt>
test   %ebx,%ebx
jne    8067f20 <fts_open+0x330>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x14(%ebp),%esi
mov    %esi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esp)
call   80499d0 <free@plt>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049e90 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x1,%ebx
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
ja     8068138 <fts_open+0x548>
movl   $0xa8,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
je     8068291 <fts_open+0x6a1>
mov    0x14(%ebp),%edx
mov    $0x3,%ecx
mov    $0x9,%ebx
movb   $0x0,0xa4(%eax)
movl   $0x0,0x34(%eax)
mov    %ebp,0x2c(%eax)
mov    %edx,0x1c(%eax)
xor    %edx,%edx
testl  $0x102,0x2c(%ebp)
movl   $0x0,0x20(%eax)
movl   $0x0,0xc(%eax)
mov    %dx,0x3e(%eax)
mov    %cx,0x40(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
mov    %eax,0x0(%ebp)
mov    %edi,0x8(%eax)
mov    %bx,0x3c(%eax)
jne    8068080 <fts_open+0x490>
movl   $0x1c,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x34(%ebp)
je     8067f14 <fts_open+0x324>
mov    %eax,(%esp)
call   80692a0 <fts_children+0x3a0>
mov    0x2c(%ebp),%eax
test   $0x204,%eax
je     80680c5 <fts_open+0x4d5>
lea    0x38(%ebp),%eax
mov    %eax,(%esp)
movl   $0xffffffff,0x4(%esp)
call   80693f0 <fts_children+0x4f0>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,0x14(%ebp)
call   8049e90 <__errno_location@plt>
movl   $0x24,(%eax)
jmp    8067f57 <fts_open+0x367>
lea    0x0(%esi),%esi
movl   $0x80499d0,0x10(%esp)
movl   $0x8066760,0xc(%esp)
movl   $0x80667a0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1f,(%esp)
call   805d840 <__sprintf_chk@plt+0x13700>
test   %eax,%eax
mov    %eax,0x34(%ebp)
je     8067f14 <fts_open+0x324>
mov    0x2c(%ebp),%eax
test   $0x204,%eax
jne    8068034 <fts_open+0x444>
mov    %eax,%edx
mov    0x1c(%ebp),%ebx
and    $0x10,%edx
cmp    $0x1,%edx
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x70900,%ecx
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x30900,%edx
test   $0x8,%ah
cmovne %ecx,%edx
test   $0x2,%ah
je     80681c4 <fts_open+0x5d4>
mov    %ebx,(%esp)
mov    %edx,0x8(%esp)
movl   $0x806edf2,0x4(%esp)
call   805eed0 <__sprintf_chk@plt+0x14d90>
mov    %eax,%ebx
test   %ebx,%ebx
js     8068242 <fts_open+0x652>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8069180 <fts_children+0x280>
mov    %ebx,0x18(%ebp)
jmp    8068034 <fts_open+0x444>
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%eax
test   %eax,%eax
je     8067f99 <fts_open+0x3a9>
cmp    %ebx,0x24(%ebp)
mov    0x28(%ebp),%edx
jae    80681db <fts_open+0x5eb>
mov    0x24(%esp),%eax
add    $0x29,%eax
cmp    $0x3fffffff,%eax
mov    %eax,0x24(%ebp)
ja     806825c <fts_open+0x66c>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
je     806825c <fts_open+0x66c>
mov    %eax,0x8(%ebp)
mov    0x20(%esp),%edx
jmp    80681e0 <fts_open+0x5f0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x3c(%esp)
mov    %ebx,0x20(%esp)
jmp    8067dc9 <fts_open+0x1d9>
lea    0x0(%esi),%esi
xor    %edx,%edx
movl   $0x0,0x30(%esp)
jmp    8067d41 <fts_open+0x151>
nop
movb   $0x1,0x37(%esp)
jmp    8067d5a <fts_open+0x16a>
mov    $0x1000,%esi
jmp    8067c9e <fts_open+0xae>
mov    %edx,0x4(%esp)
movl   $0x806edf2,(%esp)
call   80693b0 <fts_children+0x4b0>
mov    %eax,%ebx
jmp    8068114 <fts_open+0x524>
mov    0x8(%ebp),%eax
xchg   %ax,%ax
add    $0x4,%eax
mov    %edi,-0x4(%eax)
mov    0x8(%edi),%edi
test   %edi,%edi
jne    80681e0 <fts_open+0x5f0>
mov    %edx,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8049fe0 <qsort@plt>
mov    0x24(%esp),%edx
mov    0x8(%ebp),%ecx
test   %edx,%edx
mov    (%ecx),%edi
je     806829d <fts_open+0x6ad>
mov    %ecx,%eax
mov    %ecx,0x20(%esp)
nop
mov    (%eax),%ebx
add    $0x4,%eax
mov    (%eax),%ecx
sub    $0x1,%edx
mov    %ecx,0x8(%ebx)
jne    8068220 <fts_open+0x630>
mov    0x20(%esp),%ecx
mov    (%ecx,%esi,4),%eax
movl   $0x0,0x8(%eax)
jmp    8067f99 <fts_open+0x3a9>
mov    %ebx,0x18(%ebp)
orl    $0x4,0x2c(%ebp)
jmp    8068034 <fts_open+0x444>
xor    %eax,%eax
jmp    8067f61 <fts_open+0x371>
xor    %edi,%edi
jmp    8067f99 <fts_open+0x3a9>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,0x8(%ebp)
movl   $0x0,0x24(%ebp)
jmp    8067f99 <fts_open+0x3a9>
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
movl   $0x0,0x14(%ebp)
jmp    8067f57 <fts_open+0x367>
movl   $0x0,0x0(%ebp)
jmp    8067f14 <fts_open+0x324>
mov    %edi,%eax
jmp    8068236 <fts_open+0x646>
jmp    80682b0 <fts_close>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%eax
test   %eax,%eax
je     8068308 <fts_close+0x58>
mov    0x30(%eax),%edx
test   %edx,%edx
jns    80682e1 <fts_close+0x31>
jmp    8068436 <fts_close+0x186>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
js     8068300 <fts_close+0x50>
mov    %ebx,%eax
mov    0x8(%eax),%ebx
test   %ebx,%ebx
jne    80682d0 <fts_close+0x20>
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
jns    80682df <fts_close+0x2f>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   80499d0 <free@plt>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
jne    806831a <fts_close+0x6a>
jmp    8068338 <fts_close+0x88>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%edi
test   %eax,%eax
je     806832c <fts_close+0x7c>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %edi,%edi
jne    8068318 <fts_close+0x68>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    0x2c(%esi),%eax
test   $0x2,%ah
je     80683e8 <fts_close+0x138>
mov    0x1c(%esi),%eax
test   %eax,%eax
js     8068378 <fts_close+0xc8>
mov    %eax,(%esp)
call   804a0e0 <close@plt>
test   %eax,%eax
jne    806842a <fts_close+0x17a>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
lea    0x38(%esi),%ebx
jmp    806838c <fts_close+0xdc>
nop
mov    %ebx,(%esp)
call   8069470 <fts_children+0x570>
test   %eax,%eax
jns    80683d8 <fts_close+0x128>
mov    %ebx,(%esp)
call   8069420 <fts_children+0x520>
test   %al,%al
je     8068380 <fts_close+0xd0>
mov    0x30(%esi),%eax
test   %eax,%eax
je     80683a7 <fts_close+0xf7>
mov    %eax,(%esp)
call   805db40 <__sprintf_chk@plt+0x13a00>
testl  $0x102,0x2c(%esi)
mov    0x34(%esi),%eax
je     8068420 <fts_close+0x170>
test   %eax,%eax
je     80683bf <fts_close+0x10f>
mov    %eax,(%esp)
call   805db40 <__sprintf_chk@plt+0x13a00>
mov    %esi,(%esp)
call   80499d0 <free@plt>
xor    %eax,%eax
test   %edi,%edi
jne    806846b <fts_close+0x1bb>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %eax,(%esp)
call   804a0e0 <close@plt>
jmp    806838c <fts_close+0xdc>
lea    0x0(%esi),%esi
test   $0x4,%al
jne    8068378 <fts_close+0xc8>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049fa0 <fchdir@plt>
test   %eax,%eax
jne    806843d <fts_close+0x18d>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a0e0 <close@plt>
test   %eax,%eax
je     8068378 <fts_close+0xc8>
call   8049e90 <__errno_location@plt>
mov    %eax,%ebx
mov    (%ebx),%edi
jmp    806837a <fts_close+0xca>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   80499d0 <free@plt>
jmp    80683bf <fts_close+0x10f>
call   8049e90 <__errno_location@plt>
mov    (%eax),%edi
jmp    806837a <fts_close+0xca>
mov    %eax,%ebx
jmp    8068300 <fts_close+0x50>
lea    0x0(%esi),%esi
call   8049e90 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   804a0e0 <close@plt>
test   %eax,%eax
je     806837a <fts_close+0xca>
test   %edi,%edi
jne    806837a <fts_close+0xca>
mov    (%ebx),%edi
jmp    806837a <fts_close+0xca>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e90 <__errno_location@plt>
mov    %edi,(%eax)
mov    $0xffffffff,%eax
jmp    80683d1 <fts_close+0x121>
jmp    8068490 <fts_read>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%esi
mov    (%esi),%edi
test   %edi,%edi
je     80685ca <fts_read+0x13a>
mov    0x2c(%esi),%edx
test   $0x40,%dh
jne    80685ca <fts_read+0x13a>
movzwl 0x40(%edi),%eax
mov    $0x3,%ebp
mov    %bp,0x40(%edi)
cmp    $0x1,%ax
je     8068940 <fts_read+0x4b0>
cmp    $0x2,%ax
je     80685d8 <fts_read+0x148>
cmpw   $0x1,0x3c(%edi)
jne    806850d <fts_read+0x7d>
nop
jmp    8068672 <fts_read+0x1e2>
lea    0x0(%esi),%esi
mov    %ebx,(%esi)
mov    %edi,(%esp)
call   80499d0 <free@plt>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     80686b0 <fts_read+0x220>
movzwl 0x40(%ebx),%eax
cmp    $0x4,%ax
jne    8068840 <fts_read+0x3b0>
mov    %ebx,%edi
mov    0x8(%edi),%ebx
test   %ebx,%ebx
jne    80684e8 <fts_read+0x58>
mov    0x4(%edi),%ebx
mov    0xc(%ebx),%eax
test   %eax,%eax
jne    8068b48 <fts_read+0x6b8>
mov    %ebx,(%esi)
mov    %edi,(%esp)
call   80499d0 <free@plt>
cmpl   $0xffffffff,0x30(%ebx)
je     8068a28 <fts_read+0x598>
cmpw   $0xb,0x3c(%ebx)
je     8068e4e <fts_read+0x9be>
mov    0x14(%esi),%edx
mov    0x28(%ebx),%eax
movb   $0x0,(%edx,%eax,1)
mov    0x30(%ebx),%ecx
test   %ecx,%ecx
je     80689c5 <fts_read+0x535>
movzwl 0x3e(%ebx),%eax
test   $0x2,%al
je     8068987 <fts_read+0x4f7>
mov    0x2c(%esi),%eax
test   $0x4,%al
jne    806859f <fts_read+0x10f>
test   $0x2,%ah
je     8068b9f <fts_read+0x70f>
mov    0x1c(%esi),%eax
mov    0x24(%ebx),%edi
cmp    $0xffffff9c,%eax
jne    8068e99 <fts_read+0xa09>
mov    %eax,0x4(%esp)
lea    0x38(%esi),%eax
mov    %eax,(%esp)
call   8069430 <fts_children+0x530>
test   %eax,%eax
js     806859c <fts_read+0x10c>
mov    %eax,(%esp)
call   804a0e0 <close@plt>
mov    %edi,0x1c(%esi)
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   804a0e0 <close@plt>
mov    0x2c(%esi),%eax
mov    0x20(%ebx),%edx
test   %edx,%edx
je     8068920 <fts_read+0x490>
mov    $0x7,%edx
mov    %dx,0x3c(%ebx)
test   $0x40,%ah
je     80686a1 <fts_read+0x211>
xor    %eax,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movzwl 0x3c(%edi),%eax
lea    -0xc(%eax),%ecx
cmp    $0x1,%cx
jbe    80689dd <fts_read+0x54d>
sub    $0x1,%ax
jne    806850d <fts_read+0x7d>
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x40,%dl
je     80688b8 <fts_read+0x428>
mov    0x44(%edi),%eax
mov    0x48(%edi),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%eax
or     %eax,%ecx
je     80688b8 <fts_read+0x428>
testb  $0x2,0x3e(%edi)
jne    8068b38 <fts_read+0x6a8>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
jne    806862a <fts_read+0x19a>
jmp    806864f <fts_read+0x1bf>
mov    %ebp,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%ebp
test   %eax,%eax
je     806863c <fts_read+0x1ac>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %ebp,%ebp
jne    8068628 <fts_read+0x198>
movl   $0x0,0x4(%esi)
mov    0x2c(%esi),%eax
mov    $0x6,%ebx
mov    %edi,%ecx
mov    %bx,0x3c(%edi)
lea    0x34(%esi),%edx
call   8066a60 <__sprintf_chk@plt+0x1c920>
add    $0x8c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    $0x4,%ax
jne    80685f8 <fts_read+0x168>
jmp    8068615 <fts_read+0x185>
lea    0x0(%esi),%esi
lea    0x44(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   80692c0 <fts_children+0x3c0>
test   %al,%al
je     80686a1 <fts_read+0x211>
mov    $0x2,%esi
mov    %ebx,(%ebx)
mov    %si,0x3c(%ebx)
mov    %ebx,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,%eax
call   8066b30 <__sprintf_chk@plt+0x1c9f0>
test   %eax,%eax
jne    8068aa5 <fts_read+0x615>
testl  $0x102,0x2c(%esi)
mov    0x34(%esi),%eax
je     8068a48 <fts_read+0x5b8>
test   %eax,%eax
je     80686db <fts_read+0x24b>
mov    %eax,(%esp)
call   805db40 <__sprintf_chk@plt+0x13a00>
mov    0x34(%ebx),%eax
lea    0xa4(%ebx),%edi
mov    %eax,0x28(%ebx)
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   80499c0 <memmove@plt>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049f50 <strrchr@plt>
test   %eax,%eax
je     8068744 <fts_read+0x2b4>
cmp    %eax,%edi
je     8068ab3 <fts_read+0x623>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   8049d70 <strlen@plt>
mov    0x18(%esp),%edx
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%ebp
lea    0x1(%eax),%eax
mov    %eax,0x8(%esp)
call   80499c0 <memmove@plt>
mov    %ebp,0x34(%ebx)
mov    0x14(%esi),%eax
mov    %eax,0x1c(%ebx)
mov    %eax,0x18(%ebx)
testl  $0x102,0x2c(%esi)
je     806895f <fts_read+0x4cf>
movl   $0x80499d0,0x10(%esp)
movl   $0x8066760,0xc(%esp)
movl   $0x80667a0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1f,(%esp)
call   805d840 <__sprintf_chk@plt+0x13700>
movzwl 0x3c(%ebx),%edx
mov    %eax,0x34(%esi)
cmp    $0xb,%dx
mov    %ebx,(%esi)
je     8068893 <fts_read+0x403>
cmp    $0x1,%dx
mov    %ebx,%eax
jne    80685cc <fts_read+0x13c>
mov    0x30(%ebx),%ebp
test   %ebp,%ebp
jne    80687b8 <fts_read+0x328>
mov    0x44(%ebx),%eax
mov    0x48(%ebx),%edx
mov    %eax,0xc(%esi)
mov    %edx,0x10(%esi)
testl  $0x102,0x2c(%esi)
je     8068680 <fts_read+0x1f0>
movl   $0x14,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     8068a18 <fts_read+0x588>
mov    0x44(%ebx),%eax
mov    0x48(%ebx),%edx
mov    %eax,(%edi)
mov    0x9c(%ebx),%eax
mov    %edx,0x4(%edi)
mov    0xa0(%ebx),%edx
mov    %ebx,0x10(%edi)
mov    %eax,0x8(%edi)
mov    %edx,0xc(%edi)
mov    %edi,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   805e160 <__sprintf_chk@plt+0x14020>
cmp    %eax,%edi
mov    %eax,%esi
je     80686a1 <fts_read+0x211>
mov    %edi,(%esp)
call   80499d0 <free@plt>
test   %esi,%esi
je     8068a18 <fts_read+0x588>
mov    0x10(%esi),%eax
mov    $0x2,%edi
mov    %di,0x3c(%ebx)
mov    %eax,(%ebx)
mov    %ebx,%eax
jmp    80686a3 <fts_read+0x213>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2,%ax
je     8068b73 <fts_read+0x6e3>
mov    0x4(%ebx),%ecx
mov    0x28(%ecx),%edx
mov    0x1c(%ecx),%ecx
lea    -0x1(%edx),%eax
cmpb   $0x2f,-0x1(%ecx,%edx,1)
cmovne %edx,%eax
add    0x14(%esi),%eax
movb   $0x2f,(%eax)
mov    0x34(%ebx),%ecx
add    $0x1,%eax
mov    %eax,(%esp)
lea    0x1(%ecx),%edx
mov    %edx,0x8(%esp)
lea    0xa4(%ebx),%edx
mov    %edx,0x4(%esp)
call   80499c0 <memmove@plt>
movzwl 0x3c(%ebx),%edx
mov    %ebx,(%esi)
cmp    $0xb,%dx
jne    8068799 <fts_read+0x309>
mov    0x70(%ebx),%edx
mov    0x74(%ebx),%eax
mov    %edx,%ecx
xor    $0x2,%ecx
or     %eax,%ecx
je     8068ac5 <fts_read+0x635>
xor    $0x1,%edx
or     %eax,%edx
jne    8068e4e <fts_read+0x9be>
mov    %ebx,%eax
jmp    80686a3 <fts_read+0x213>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
je     8068a87 <fts_read+0x5f7>
test   $0x20,%dh
jne    8068a55 <fts_read+0x5c5>
mov    0x18(%edi),%eax
mov    $0xffffffff,%ecx
mov    %edi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   8066be0 <__sprintf_chk@plt+0x1caa0>
test   %eax,%eax
je     80689d5 <fts_read+0x545>
call   8049e90 <__errno_location@plt>
mov    0x4(%esi),%edx
mov    %edx,%ebx
mov    (%eax),%eax
orw    $0x1,0x3e(%edi)
test   %edx,%edx
mov    %eax,0x20(%edi)
je     8068912 <fts_read+0x482>
mov    0x4(%ebx),%eax
mov    0x18(%eax),%eax
mov    %eax,0x18(%ebx)
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    8068900 <fts_read+0x470>
mov    %edx,%ebx
movl   $0x0,0x4(%esi)
jmp    806884a <fts_read+0x3ba>
xchg   %ax,%ax
mov    $0x6,%ecx
mov    %cx,0x3c(%ebx)
lea    0x34(%esi),%edx
mov    %ebx,%ecx
call   8066a60 <__sprintf_chk@plt+0x1c920>
mov    0x2c(%esi),%eax
jmp    80685c1 <fts_read+0x131>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %edi,%ecx
movl   $0x0,(%esp)
call   8066890 <__sprintf_chk@plt+0x1c750>
mov    %ax,0x3c(%edi)
mov    %edi,%eax
jmp    80685cc <fts_read+0x13c>
movl   $0x1c,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x34(%esi)
je     8068883 <fts_read+0x3f3>
mov    %eax,(%esp)
call   80692a0 <fts_children+0x3a0>
movzwl 0x3c(%ebx),%edx
jmp    806878d <fts_read+0x2fd>
test   $0x1,%al
jne    80685aa <fts_read+0x11a>
mov    0x4(%ebx),%edx
mov    $0xffffffff,%ecx
mov    %esi,%eax
movl   $0x806edf1,(%esp)
call   8066be0 <__sprintf_chk@plt+0x1caa0>
test   %eax,%eax
je     80685aa <fts_read+0x11a>
call   8049e90 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,0x20(%ebx)
mov    0x2c(%esi),%eax
or     $0x40,%ah
mov    %eax,0x2c(%esi)
jmp    80685ad <fts_read+0x11d>
mov    %esi,%eax
call   8066b30 <__sprintf_chk@plt+0x1c9f0>
test   %eax,%eax
jne    80689ad <fts_read+0x51d>
jmp    80685aa <fts_read+0x11a>
mov    0x4(%esi),%ebx
jmp    8068912 <fts_read+0x482>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %edi,%ecx
movl   $0x1,(%esp)
mov    %edi,%ebx
call   8066890 <__sprintf_chk@plt+0x1c750>
cmp    $0x1,%ax
mov    %eax,%edx
mov    %ax,0x3c(%edi)
jne    806878d <fts_read+0x2fd>
mov    0x2c(%esi),%ecx
test   $0x4,%cl
je     8068cf3 <fts_read+0x863>
mov    %edi,(%esi)
mov    %edi,%ebx
jmp    8068799 <fts_read+0x309>
call   8049e90 <__errno_location@plt>
movl   $0xc,(%eax)
jmp    80685ca <fts_read+0x13a>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
call   8049e90 <__errno_location@plt>
movl   $0x0,(%eax)
xor    %eax,%eax
movl   $0x0,(%esi)
jmp    80685cc <fts_read+0x13c>
mov    %eax,(%esp)
call   80499d0 <free@plt>
jmp    80686db <fts_read+0x24b>
and    $0xdf,%dh
mov    %edx,0x2c(%esi)
jmp    8068a62 <fts_read+0x5d2>
lea    0x0(%esi),%esi
mov    %ebp,%ebx
mov    0xc(%ebx),%eax
mov    0x8(%ebx),%ebp
test   %eax,%eax
je     8068a74 <fts_read+0x5e4>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %ebx,(%esp)
call   80499d0 <free@plt>
test   %ebp,%ebp
jne    8068a60 <fts_read+0x5d0>
movl   $0x0,0x4(%esi)
mov    $0x3,%edx
mov    %esi,%eax
call   8066f50 <__sprintf_chk@plt+0x1ce10>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     8068cbf <fts_read+0x82f>
mov    %eax,%ebx
jmp    8068912 <fts_read+0x482>
orl    $0x4000,0x2c(%esi)
xor    %eax,%eax
jmp    80685cc <fts_read+0x13c>
cmpb   $0x0,0xa5(%ebx)
jne    8068719 <fts_read+0x289>
jmp    8068744 <fts_read+0x2b4>
mov    0x30(%ebx),%eax
mov    0x4(%ebx),%edi
test   %eax,%eax
jle    8068ae5 <fts_read+0x655>
mov    0x38(%edi),%eax
test   %eax,%eax
jne    8068ae5 <fts_read+0x655>
mov    0x2c(%esi),%eax
and    $0x18,%eax
cmp    $0x18,%eax
je     8068c64 <fts_read+0x7d4>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %ebx,%ecx
movl   $0x0,(%esp)
call   8066890 <__sprintf_chk@plt+0x1c750>
mov    %eax,%edx
mov    %ax,0x3c(%ebx)
mov    0x54(%ebx),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
jne    8068799 <fts_read+0x309>
mov    0x30(%ebx),%eax
test   %eax,%eax
je     8068799 <fts_read+0x309>
mov    0x38(%edi),%eax
test   %eax,%eax
je     8068799 <fts_read+0x309>
sub    $0x1,%eax
mov    %eax,0x38(%edi)
jmp    8068799 <fts_read+0x309>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   804a0e0 <close@plt>
jmp    806861f <fts_read+0x18f>
mov    0x28(%ebx),%eax
mov    0x14(%esi),%edx
mov    %ebx,(%esi)
movb   $0x0,(%edx,%eax,1)
mov    $0x3,%edx
mov    %esi,%eax
call   8066f50 <__sprintf_chk@plt+0x1ce10>
test   %eax,%eax
mov    %eax,%ebx
je     8068bd8 <fts_read+0x748>
mov    %edi,(%esp)
call   80499d0 <free@plt>
jmp    806884a <fts_read+0x3ba>
mov    0x1c(%esi),%eax
lea    0x2c(%esi),%edx
mov    %ebx,%ecx
movl   $0x1,(%esp)
call   8066890 <__sprintf_chk@plt+0x1c750>
cmp    $0x1,%ax
mov    %ax,0x3c(%ebx)
je     8068bea <fts_read+0x75a>
mov    $0x3,%eax
mov    %ax,0x40(%ebx)
jmp    806884a <fts_read+0x3ba>
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   8049fa0 <fchdir@plt>
test   %eax,%eax
je     806859f <fts_read+0x10f>
call   8049e90 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebp
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   804a0e0 <close@plt>
mov    %edi,0x0(%ebp)
mov    %edi,0x20(%ebx)
orl    $0x4000,0x2c(%esi)
jmp    806859f <fts_read+0x10f>
testb  $0x40,0x2d(%esi)
jne    80685ca <fts_read+0x13a>
mov    0x4(%edi),%ebx
jmp    8068522 <fts_read+0x92>
mov    0x2c(%esi),%ecx
test   $0x4,%cl
jne    8068b91 <fts_read+0x701>
mov    %ecx,%eax
mov    0x1c(%esi),%edi
and    $0x10,%eax
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
test   $0x8,%ch
cmovne %edx,%eax
and    $0x2,%ch
je     8068d82 <fts_read+0x8f2>
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x806edf2,0x4(%esp)
call   805eed0 <__sprintf_chk@plt+0x14d90>
mov    %eax,%edi
test   %edi,%edi
js     8068d67 <fts_read+0x8d7>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8069180 <fts_children+0x280>
mov    %edi,0x24(%ebx)
orw    $0x2,0x3e(%ebx)
jmp    8068b91 <fts_read+0x701>
mov    0x2c(%edi),%edx
testb  $0x2,0x2d(%edx)
mov    0x30(%edx),%ebp
je     8068ae5 <fts_read+0x655>
test   %ebp,%ebp
je     8068e53 <fts_read+0x9c3>
mov    0x44(%edi),%eax
mov    %edx,0x18(%esp)
mov    0x48(%edi),%edx
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edx,0x24(%esp)
call   805d5c0 <__sprintf_chk@plt+0x13480>
mov    0x18(%esp),%edx
test   %eax,%eax
je     8068dd0 <fts_read+0x940>
movzbl 0x8(%eax),%edx
test   %dl,%dl
je     8068ae5 <fts_read+0x655>
movzwl 0x3c(%ebx),%edx
jmp    8068799 <fts_read+0x309>
mov    0x2c(%esi),%eax
test   $0x40,%ah
jne    80685ca <fts_read+0x13a>
mov    0x20(%edi),%ecx
test   %ecx,%ecx
je     8068ce2 <fts_read+0x852>
cmpw   $0x4,0x3c(%edi)
je     8068ce2 <fts_read+0x852>
mov    $0x7,%edx
mov    %dx,0x3c(%edi)
lea    0x34(%esi),%edx
mov    %edi,%ecx
call   8066a60 <__sprintf_chk@plt+0x1c920>
mov    %edi,%eax
jmp    80685cc <fts_read+0x13c>
mov    %ecx,%eax
mov    0x1c(%esi),%ebx
and    $0x10,%eax
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0xfffe0000,%eax
add    $0x30900,%eax
test   $0x8,%ch
cmovne %edx,%eax
and    $0x2,%ch
je     8068db9 <fts_read+0x929>
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x806edf2,0x4(%esp)
call   805eed0 <__sprintf_chk@plt+0x14d90>
mov    %eax,%ebx
test   %ebx,%ebx
js     8068d99 <fts_read+0x909>
mov    %ebx,(%esp)
movl   $0x1,0x4(%esp)
call   8069180 <fts_children+0x280>
movzwl 0x3c(%edi),%edx
mov    %ebx,0x24(%edi)
mov    %edi,%ebx
orw    $0x2,0x3e(%edi)
jmp    806878d <fts_read+0x2fd>
mov    %edi,0x24(%ebx)
mov    $0x7,%edi
call   8049e90 <__errno_location@plt>
mov    (%eax),%eax
mov    %di,0x3c(%ebx)
mov    %eax,0x20(%ebx)
jmp    8068b91 <fts_read+0x701>
mov    %eax,0x4(%esp)
movl   $0x806edf2,(%esp)
call   80693b0 <fts_children+0x4b0>
mov    %eax,%edi
jmp    8068c3f <fts_read+0x7af>
mov    %ebx,0x24(%edi)
mov    $0x7,%ebp
call   8049e90 <__errno_location@plt>
mov    $0x7,%edx
mov    (%eax),%eax
mov    %bp,0x3c(%edi)
mov    %eax,0x20(%edi)
jmp    8068a0f <fts_read+0x57f>
mov    %eax,0x4(%esp)
movl   $0x806edf2,(%esp)
call   80693b0 <fts_children+0x4b0>
mov    %eax,%ebx
jmp    8068d40 <fts_read+0x8b0>
movl   $0xc,(%esp)
mov    %edx,0x1c(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8068ae5 <fts_read+0x655>
mov    0x1c(%esp),%edx
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%edx),%eax
mov    %eax,(%esp)
call   8049d30 <fstatfs64@plt>
xor    %edx,%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
jne    8068e18 <fts_read+0x988>
cmpl   $0x52654973,0x2c(%esp)
sete   %dl
mov    %dl,0x8(%ecx)
mov    0x44(%edi),%eax
mov    %edx,0x1c(%esp)
mov    0x48(%edi),%edx
mov    %ecx,0x18(%esp)
mov    %eax,(%ecx)
mov    %edx,0x4(%ecx)
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
call   805e160 <__sprintf_chk@plt+0x14020>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8068ea3 <fts_read+0xa13>
cmp    %eax,%ecx
je     8068cae <fts_read+0x81e>
call   804a080 <abort@plt>
movl   $0x80499d0,0x10(%esp)
movl   $0x8066800,0xc(%esp)
movl   $0x80667d0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
mov    %edx,0x18(%esp)
call   805d840 <__sprintf_chk@plt+0x13700>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
mov    %eax,0x30(%edx)
jne    8068c7c <fts_read+0x7ec>
jmp    8068ae5 <fts_read+0x655>
cmp    %eax,%edi
jne    8068581 <fts_read+0xf1>
jmp    8068e4e <fts_read+0x9be>
mov    %ecx,(%esp)
call   80499d0 <free@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    8068ae5 <fts_read+0x655>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
mov    0x18(%esp),%eax
cmp    $0x4,%eax
ja     8068ee0 <fts_set+0x20>
mov    0x14(%esp),%edx
mov    %ax,0x40(%edx)
xor    %eax,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
call   8049e90 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0x1,%eax
add    $0xc,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
testl  $0xffffdfff,0x34(%esp)
mov    0x30(%esp),%esi
jne    80690d0 <fts_children+0x1d0>
call   8049e90 <__errno_location@plt>
mov    (%esi),%edi
movl   $0x0,(%eax)
testb  $0x40,0x2d(%esi)
mov    %eax,0xc(%esp)
jne    8068fd0 <fts_children+0xd0>
movzwl 0x3c(%edi),%eax
cmp    $0x9,%ax
je     80690c0 <fts_children+0x1c0>
cmp    $0x1,%ax
jne    8068fd0 <fts_children+0xd0>
mov    0x4(%esi),%ebp
test   %ebp,%ebp
jne    8068f92 <fts_children+0x92>
cmpl   $0x2000,0x34(%esp)
mov    $0x1,%ebx
je     8068fe0 <fts_children+0xe0>
mov    0x30(%edi),%eax
test   %eax,%eax
jne    8068f7c <fts_children+0x7c>
mov    0x18(%edi),%eax
cmpb   $0x2f,(%eax)
je     8068f7c <fts_children+0x7c>
mov    0x2c(%esi),%eax
test   $0x4,%al
je     8069000 <fts_children+0x100>
mov    %ebx,%edx
mov    %esi,%eax
call   8066f50 <__sprintf_chk@plt+0x1ce10>
mov    %eax,0x4(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebx,%ebp
mov    0xc(%ebp),%eax
mov    0x8(%ebp),%ebx
test   %eax,%eax
je     8068fa4 <fts_children+0xa4>
mov    %eax,(%esp)
call   804a0f0 <closedir@plt>
mov    %ebp,(%esp)
call   80499d0 <free@plt>
test   %ebx,%ebx
jne    8068f90 <fts_children+0x90>
cmpl   $0x2000,0x34(%esp)
mov    $0x1,%ebx
jne    8068f62 <fts_children+0x62>
jmp    8068fe0 <fts_children+0xe0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esi)
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x30(%edi),%eax
mov    $0x2,%ebx
orl    $0x2000,0x2c(%esi)
test   %eax,%eax
je     8068f69 <fts_children+0x69>
jmp    8068f7c <fts_children+0x7c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
mov    0x1c(%esi),%edi
and    $0x10,%ecx
cmp    $0x1,%ecx
sbb    %edx,%edx
and    $0xfffe0000,%edx
add    $0x70900,%edx
cmp    $0x1,%ecx
sbb    %ecx,%ecx
and    $0xfffe0000,%ecx
add    $0x30900,%ecx
test   $0x8,%ah
cmovne %edx,%ecx
test   $0x2,%ah
je     80690e8 <fts_children+0x1e8>
mov    %edi,(%esp)
mov    %ecx,0x8(%esp)
movl   $0x806edf2,0x4(%esp)
call   805eed0 <__sprintf_chk@plt+0x14d90>
mov    %eax,%edi
test   %edi,%edi
js     8068fc8 <fts_children+0xc8>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8069180 <fts_children+0x280>
mov    %ebx,%edx
mov    %esi,%eax
call   8066f50 <__sprintf_chk@plt+0x1ce10>
testb  $0x2,0x2d(%esi)
mov    %eax,0x4(%esi)
jne    8069098 <fts_children+0x198>
mov    %edi,(%esp)
call   8049fa0 <fchdir@plt>
test   %eax,%eax
jne    80690ff <fts_children+0x1ff>
mov    %edi,(%esp)
call   804a0e0 <close@plt>
mov    0x4(%esi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x1c(%esi),%eax
cmp    %eax,%edi
je     8069116 <fts_children+0x216>
mov    %eax,0x4(%esp)
lea    0x38(%esi),%eax
mov    %eax,(%esp)
call   8069430 <fts_children+0x530>
test   %eax,%eax
js     80690ba <fts_children+0x1ba>
mov    %eax,(%esp)
call   804a0e0 <close@plt>
mov    %edi,0x1c(%esi)
jmp    806908d <fts_children+0x18d>
nop
mov    0x8(%edi),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e90 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
movl   $0x806edf2,(%esp)
call   80693b0 <fts_children+0x4b0>
mov    %eax,%edi
jmp    806904f <fts_children+0x14f>
mov    0xc(%esp),%esi
mov    (%esi),%ebx
mov    %edi,(%esp)
call   804a0e0 <close@plt>
xor    %eax,%eax
mov    %ebx,(%esi)
jmp    8068f88 <fts_children+0x88>
cmp    $0xffffff9c,%eax
je     806909f <fts_children+0x19f>
call   804a080 <abort@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebx
mov    0x18(%esp),%ecx
cmp    %ecx,%ebx
jne    8069142 <fts_children+0x242>
jmp    8069175 <fts_children+0x275>
lea    0x0(%esi),%esi
add    $0x1,%ebx
add    $0x1,%ecx
cmp    %dl,%al
jne    8069166 <fts_children+0x266>
movzbl (%ebx),%eax
lea    -0x41(%eax),%edx
cmp    $0x19,%edx
movzbl (%ecx),%edx
lea    0x20(%eax),%esi
cmova  %eax,%esi
mov    %esi,%eax
lea    -0x41(%edx),%ebp
cmp    $0x19,%ebp
lea    0x20(%edx),%edi
cmovbe %edi,%edx
test   %al,%al
jne    8069138 <fts_children+0x238>
mov    %esi,%eax
movzbl %dl,%edx
movzbl %al,%eax
pop    %ebx
sub    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
movl   $0x0,0x8(%esp)
mov    0x24(%esp),%esi
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   806b930 <fts_children+0x2a30>
test   %eax,%eax
mov    %eax,%edx
js     80691e8 <fts_children+0x2e8>
mov    %eax,%ecx
mov    %esi,%ebx
and    $0xfffffffe,%eax
or     $0x1,%ecx
test   %bl,%bl
cmove  %eax,%ecx
xor    %eax,%eax
cmp    %edx,%ecx
je     80691e0 <fts_children+0x2e0>
mov    %ecx,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   806b930 <fts_children+0x2a30>
cmp    $0xffffffff,%eax
sete   %al
movzbl %al,%eax
neg    %eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0xffffffff,%eax
jmp    80691e0 <fts_children+0x2e0>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x406,0x4(%esp)
mov    %eax,(%esp)
call   806b930 <fts_children+0x2a30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8049c10 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   8049a40 <fclose@plt>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    8069260 <fts_children+0x360>
test   %dl,%dl
je     8069257 <fts_children+0x357>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     8069280 <fts_children+0x380>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    8069257 <fts_children+0x357>
call   8049e90 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8049e90 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
movl   $0x95f616,0x18(%eax)
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
cmpl   $0x95f616,0x18(%esi)
jne    806937d <fts_children+0x47d>
mov    0x14(%esi),%edx
mov    0x10(%esi),%eax
mov    %edx,%ebx
or     %eax,%ebx
je     8069330 <fts_children+0x430>
mov    0x58(%edi),%ebx
mov    %ebx,%ecx
mov    %ebx,0x18(%esp)
mov    0x5c(%edi),%ebx
xor    (%esi),%ecx
mov    %ebx,0x1c(%esp)
xor    0x4(%esi),%ebx
or     %ecx,%ebx
je     8069360 <fts_children+0x460>
mov    %eax,%ecx
mov    %edx,%ebx
add    $0x1,%ecx
adc    $0x0,%ebx
mov    %ecx,%ebp
and    %eax,%ebp
and    %ebx,%edx
xor    %eax,%eax
or     %ebp,%edx
mov    %ecx,0x10(%esi)
mov    %ebx,0x14(%esi)
jne    8069356 <fts_children+0x456>
mov    %ebx,%eax
or     %ecx,%eax
je     8069370 <fts_children+0x470>
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%ecx
jmp    8069344 <fts_children+0x444>
lea    0x0(%esi),%esi
mov    0x58(%edi),%ebx
mov    0x5c(%edi),%ecx
movl   $0x1,0x10(%esi)
movl   $0x0,0x14(%esi)
mov    (%edi),%eax
mov    0x4(%edi),%edx
mov    %ebx,(%esi)
mov    %ecx,0x4(%esi)
mov    %eax,0x8(%esi)
xor    %eax,%eax
mov    %edx,0xc(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    (%edi),%ecx
mov    0x4(%edi),%ebx
xor    0xc(%esi),%ebx
xor    0x8(%esi),%ecx
or     %ecx,%ebx
jne    8069301 <fts_children+0x401>
nop
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x806ee56,0xc(%esp)
movl   $0x3c,0x8(%esp)
movl   $0x806ee30,0x4(%esp)
movl   $0x806ee3e,(%esp)
call   804a110 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
xor    %eax,%eax
mov    0x24(%esp),%edx
test   $0x40,%dl
cmovne 0x28(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049960 <open64@plt>
mov    %eax,(%esp)
call   8063690 <__sprintf_chk@plt+0x19550>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movb   $0x1,0x1c(%eax)
movl   $0x0,0x14(%eax)
movl   $0x0,0x18(%eax)
mov    %edx,(%eax)
mov    %edx,0x4(%eax)
mov    %edx,0x8(%eax)
mov    %edx,0xc(%eax)
mov    %edx,0x10(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x1c(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edx
mov    0x14(%esp),%edi
movzbl 0x1c(%edx),%eax
mov    0x14(%edx),%ecx
xor    $0x1,%eax
movzbl %al,%esi
add    %esi,%ecx
and    $0x3,%ecx
lea    (%edx,%ecx,4),%ebx
mov    (%ebx),%eax
mov    %edi,(%ebx)
mov    0x18(%edx),%ebx
mov    %ecx,0x14(%edx)
cmp    %ecx,%ebx
jne    8069466 <fts_children+0x566>
add    %esi,%ebx
and    $0x3,%ebx
mov    %ebx,0x18(%edx)
movb   $0x0,0x1c(%edx)
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%edx
cmpb   $0x0,0x1c(%edx)
jne    80694aa <fts_children+0x5aa>
mov    0x14(%edx),%ecx
mov    0x10(%edx),%esi
lea    (%edx,%ecx,4),%ebx
mov    (%ebx),%eax
mov    %esi,(%ebx)
cmp    0x18(%edx),%ecx
je     80694a0 <fts_children+0x5a0>
add    $0x3,%ecx
and    $0x3,%ecx
mov    %ecx,0x14(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
movb   $0x1,0x1c(%edx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
call   804a080 <abort@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049f30 <nl_langinfo@plt>
mov    0x8074c70,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x806c360,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     806957c <fts_children+0x67c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     8069547 <fts_children+0x647>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    8069520 <fts_children+0x620>
nop
mov    %ebp,(%esp)
call   8049d70 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049d70 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     8069578 <fts_children+0x678>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8049950 <strcmp@plt>
test   %eax,%eax
je     806953b <fts_children+0x63b>
cmp    $0x2a,%bl
jne    8069500 <fts_children+0x600>
cmpb   $0x0,0x1(%ebp)
jne    8069500 <fts_children+0x600>
mov    %ebp,(%esp)
call   8049d70 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x806ee68,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    806983d <fts_children+0x93d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    8069547 <fts_children+0x647>
movl   $0x806ee6e,(%esp)
call   8049c70 <getenv@plt>
test   %eax,%eax
je     8069595 <fts_children+0x695>
cmpb   $0x0,(%eax)
jne    80697a3 <fts_children+0x8a3>
mov    $0x4,%eax
mov    $0x5,%esi
mov    $0x806ee62,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     8069794 <fts_children+0x894>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8069833 <fts_children+0x933>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   80499f0 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     80695fc <fts_children+0x6fc>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8049960 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     8069778 <fts_children+0x878>
movl   $0x806c613,0x4(%esp)
mov    %eax,(%esp)
call   8049d00 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8069770 <fts_children+0x870>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    8069756 <fts_children+0x856>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     8069660 <fts_children+0x760>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    8069660 <fts_children+0x760>
cmp    $0x23,%eax
je     80697cd <fts_children+0x8cd>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049e60 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x806ee7e,0x4(%esp)
mov    %esi,(%esp)
call   8049d60 <fscanf@plt>
cmp    $0x1,%eax
jle    80697f0 <fts_children+0x8f0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    806980e <fts_children+0x90e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049c90 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     8069842 <fts_children+0x942>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8049c00 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8049c00 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     806966c <fts_children+0x76c>
mov    %esi,(%esp)
call   8049f20 <__uflow@plt>
cmp    $0xffffffff,%eax
je     80697f0 <fts_children+0x8f0>
jmp    8069675 <fts_children+0x775>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   804a0e0 <close@plt>
mov    $0x806c360,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   80499d0 <free@plt>
mov    %ebp,0x8074c70
jmp    80694ef <fts_children+0x5ef>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    80695bb <fts_children+0x6bb>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8049d70 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     8069794 <fts_children+0x894>
lea    -0x1(%eax),%eax
jmp    80695a4 <fts_children+0x6a4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     80697e7 <fts_children+0x8e7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    806985c <fts_children+0x95c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    80697c8 <fts_children+0x8c8>
cmp    $0xffffffff,%eax
jne    8069660 <fts_children+0x760>
mov    %esi,(%esp)
call   8049a40 <fclose@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     8069778 <fts_children+0x878>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    806977d <fts_children+0x87d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8049c80 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    806970c <fts_children+0x80c>
mov    $0x806c360,%ebp
jmp    8069789 <fts_children+0x889>
call   8049ac0 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x806c360,%ebp
call   80499d0 <free@plt>
mov    %esi,(%esp)
call   8049a40 <fclose@plt>
jmp    806977d <fts_children+0x87d>
mov    %esi,(%esp)
call   8049f20 <__uflow@plt>
jmp    80697e2 <fts_children+0x8e2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8(%ebp),%eax
mov    %ecx,-0x30(%ebp)
mov    %eax,-0x34(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
cmp    $0x3fffffff,%ecx
jbe    80698b1 <fts_children+0x9b1>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    80699be <fts_children+0xabe>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ecx,%eax
shl    $0x2,%eax
cmp    $0xfb7,%eax
jbe    8069959 <fts_children+0xa59>
mov    %eax,(%esp)
mov    %edx,-0x2c(%ebp)
call   806ba50 <fts_children+0x2b50>
mov    -0x2c(%ebp),%edx
test   %eax,%eax
je     8069897 <fts_children+0x997>
xor    %ecx,%ecx
mov    $0x2,%esi
cmpl   $0x2,-0x30(%ebp)
movl   $0x1,0x4(%eax)
jbe    806991b <fts_children+0xa1b>
mov    %edi,-0x2c(%ebp)
mov    -0x30(%ebp),%edi
lea    0x0(%esi),%esi
movzbl -0x1(%edx,%esi,1),%ebx
cmp    %bl,(%edx,%ecx,1)
jne    8069908 <fts_children+0xa08>
jmp    8069980 <fts_children+0xa80>
nop
sub    (%eax,%ecx,4),%ecx
cmp    %bl,(%edx,%ecx,1)
je     8069980 <fts_children+0xa80>
test   %ecx,%ecx
jne    8069900 <fts_children+0xa00>
mov    %esi,(%eax,%esi,4)
xor    %ecx,%ecx
add    $0x1,%esi
cmp    %edi,%esi
jne    80698f0 <fts_children+0x9f0>
mov    -0x2c(%ebp),%edi
mov    -0x34(%ebp),%esi
xor    %ecx,%ecx
movl   $0x0,(%esi)
movzbl (%edi),%ebx
mov    %edi,%esi
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bl,%bl
je     8069947 <fts_children+0xa47>
cmp    %bl,(%edx,%ecx,1)
je     8069990 <fts_children+0xa90>
test   %ecx,%ecx
je     8069970 <fts_children+0xa70>
add    (%eax,%ecx,4),%edi
sub    (%eax,%ecx,4),%ecx
test   %bl,%bl
jne    8069934 <fts_children+0xa34>
mov    %eax,(%esp)
call   806bab0 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    8069899 <fts_children+0x999>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x13(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
jmp    80698cf <fts_children+0x9cf>
movzbl 0x1(%esi),%ebx
add    $0x1,%edi
add    $0x1,%esi
jmp    8069930 <fts_children+0xa30>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
mov    %esi,%ebx
sub    %ecx,%ebx
mov    %ebx,(%eax,%esi,4)
jmp    8069911 <fts_children+0xa11>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ecx
cmp    %ecx,-0x30(%ebp)
lea    0x1(%esi),%ebx
mov    %ebx,-0x2c(%ebp)
je     80699a7 <fts_children+0xaa7>
movzbl 0x1(%esi),%ebx
mov    -0x2c(%ebp),%esi
jmp    8069930 <fts_children+0xa30>
mov    -0x34(%ebp),%esi
mov    %edi,(%esi)
mov    %eax,(%esp)
call   806bab0 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    8069899 <fts_children+0x999>
call   8049ac0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0xec,%esp
mov    %edx,(%esp)
mov    %eax,-0xe8(%ebp)
mov    %ecx,-0xe4(%ebp)
mov    %gs:0x14,%eax
mov    %eax,-0x1c(%ebp)
xor    %eax,%eax
call   806bb20 <fts_children+0x2c20>
cmp    $0x5d1745d,%eax
mov    %eax,-0xdc(%ebp)
jbe    8069a24 <fts_children+0xb24>
xor    %eax,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    806a347 <fts_children+0x1447>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
imul   $0x2c,-0xdc(%ebp),%eax
cmp    $0xfb7,%eax
jbe    8069d2f <fts_children+0xe2f>
mov    %eax,(%esp)
call   806ba50 <fts_children+0x2b50>
mov    %eax,-0xd8(%ebp)
mov    %eax,%edi
test   %edi,%edi
je     8069a0a <fts_children+0xb0a>
mov    -0xdc(%ebp),%eax
mov    %esi,%edx
mov    %esi,-0xb4(%ebp)
lea    0x10(%edi),%ebx
movb   $0x0,-0xc4(%ebp)
lea    -0xc0(%ebp),%esi
movl   $0x0,-0xc0(%ebp)
00
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
mov    %eax,-0xd4(%ebp)
movl   $0x0,-0xbc(%ebp)
00
movb   $0x0,-0xb8(%ebp)
nop
cmpb   $0x0,-0xc4(%ebp)
jne    8069d8f <fts_children+0xe8f>
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8069d78 <fts_children+0xe78>
movl   $0x1,-0xb0(%ebp)
00
movsbl (%edx),%eax
movb   $0x1,-0xac(%ebp)
mov    %eax,-0xa8(%ebp)
mov    -0xa8(%ebp),%eax
movb   $0x1,-0xb8(%ebp)
test   %eax,%eax
jne    806a050 <fts_children+0x1150>
mov    -0xd4(%ebp),%eax
cmpl   $0x2,-0xdc(%ebp)
movl   $0x1,0x4(%eax)
jbe    8069bb5 <fts_children+0xcb5>
mov    -0xd8(%ebp),%eax
mov    $0x2,%esi
xor    %ebx,%ebx
mov    %esi,-0xcc(%ebp)
mov    %eax,%edi
mov    %eax,%esi
cmpb   $0x0,0x30(%edi)
jne    8069cda <fts_children+0xdda>
mov    0x2c(%edi),%edx
mov    %edi,%ecx
mov    %esi,%edi
mov    %edx,%esi
mov    -0xd4(%ebp),%edx
jmp    8069b43 <fts_children+0xc43>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     806a0e9 <fts_children+0x11e9>
sub    (%edx,%ebx,4),%ebx
lea    (%ebx,%ebx,4),%eax
lea    (%edi,%eax,8),%eax
cmp    0x4(%eax),%esi
jne    8069b38 <fts_children+0xc38>
mov    %esi,0x8(%esp)
mov    (%eax),%eax
mov    %edx,-0xe0(%ebp)
mov    %ecx,-0xd0(%ebp)
mov    %eax,0x4(%esp)
mov    0x28(%ecx),%eax
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
mov    -0xd0(%ebp),%ecx
mov    -0xe0(%ebp),%edx
test   %eax,%eax
jne    8069b38 <fts_children+0xc38>
mov    %edi,%esi
mov    %ecx,%edi
mov    -0xcc(%ebp),%ecx
add    $0x1,%ebx
mov    -0xd4(%ebp),%edx
mov    %ecx,%eax
sub    %ebx,%eax
mov    %eax,(%edx,%ecx,4)
addl   $0x1,-0xcc(%ebp)
add    $0x28,%edi
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xcc(%ebp)
jne    8069b18 <fts_children+0xc18>
mov    -0xe4(%ebp),%eax
xor    %ebx,%ebx
movb   $0x0,-0x8c(%ebp)
movl   $0x0,-0x88(%ebp)
00
movl   $0x0,-0x84(%ebp)
00
movl   $0x0,(%eax)
mov    -0xe8(%ebp),%eax
movb   $0x0,-0x80(%ebp)
movb   $0x0,-0x54(%ebp)
movl   $0x0,-0x50(%ebp)
mov    %eax,-0x7c(%ebp)
mov    %eax,-0x44(%ebp)
movl   $0x0,-0x4c(%ebp)
movb   $0x0,-0x48(%ebp)
movl   $0x0,-0xd0(%ebp)
00
xchg   %ax,%ax
test   %bl,%bl
je     8069c6f <fts_children+0xd6f>
movzbl -0x3c(%ebp),%ebx
mov    -0xd0(%ebp),%eax
test   %bl,%bl
mov    -0xd8(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
jne    806a1f3 <fts_children+0x12f3>
mov    0x4(%eax),%ecx
xor    %edx,%edx
cmp    -0x40(%ebp),%ecx
je     8069d10 <fts_children+0xe10>
mov    %edx,%eax
test   %al,%al
je     8069e28 <fts_children+0xf28>
mov    -0x40(%ebp),%eax
add    %eax,-0x44(%ebp)
addl   $0x1,-0xd0(%ebp)
mov    -0xdc(%ebp),%eax
cmp    %eax,-0xd0(%ebp)
movb   $0x0,-0x48(%ebp)
je     8069d4e <fts_children+0xe4e>
xor    %ebx,%ebx
cmpb   $0x0,-0x54(%ebp)
jne    8069fbf <fts_children+0x10bf>
mov    -0x44(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8069fa8 <fts_children+0x10a8>
movl   $0x1,-0x40(%ebp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,-0x3c(%ebp)
mov    %eax,-0x38(%ebp)
movb   $0x1,-0x48(%ebp)
jmp    8069c18 <fts_children+0xd18>
xchg   %ax,%ax
mov    0xc(%eax),%eax
cmp    %eax,0x34(%edi)
sete   %dl
test   %dl,%dl
jne    8069b83 <fts_children+0xc83>
test   %ebx,%ebx
je     806a0ed <fts_children+0x11ed>
mov    -0xd4(%ebp),%eax
sub    (%eax,%ebx,4),%ebx
lea    (%ebx,%ebx,4),%eax
lea    (%esi,%eax,8),%eax
movzbl 0x8(%eax),%edx
test   %dl,%dl
jne    8069cb8 <fts_children+0xdb8>
mov    0x2c(%edi),%ecx
cmp    0x4(%eax),%ecx
jne    8069cc1 <fts_children+0xdc1>
mov    %ecx,0x8(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x28(%edi),%eax
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    8069cc1 <fts_children+0xdc1>
lea    0x0(%esi,%eiz,1),%esi
mov    -0x44(%ebp),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
test   %eax,%eax
sete   %dl
jmp    8069c40 <fts_children+0xd40>
add    $0x26,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1f(%esp),%eax
and    $0xfffffff0,%eax
add    $0x8,%eax
mov    %eax,-0xd8(%ebp)
mov    %eax,%edi
jmp    8069a46 <fts_children+0xb46>
mov    -0x7c(%ebp),%eax
mov    -0xe4(%ebp),%edi
mov    %eax,(%edi)
mov    -0xd8(%ebp),%eax
mov    %eax,(%esp)
call   806bab0 <fts_children+0x2bb0>
mov    $0x1,%eax
jmp    8069a0c <fts_children+0xb0c>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806a2ff <fts_children+0x13ff>
movb   $0x1,-0xc4(%ebp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    -0xb4(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0xa8(%ebp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0xb0(%ebp)
je     806a108 <fts_children+0x1208>
cmp    $0xfffffffe,%eax
je     806a1c3 <fts_children+0x12c3>
test   %eax,%eax
jne    8069e03 <fts_children+0xf03>
mov    -0xb4(%ebp),%eax
movl   $0x1,-0xb0(%ebp)
00
cmpb   $0x0,(%eax)
jne    806a34c <fts_children+0x144c>
mov    -0xa8(%ebp),%eax
test   %eax,%eax
jne    806a323 <fts_children+0x1423>
mov    %esi,(%esp)
movb   $0x1,-0xac(%ebp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     8069ad2 <fts_children+0xbd2>
movb   $0x0,-0xc4(%ebp)
jmp    8069ad2 <fts_children+0xbd2>
xchg   %ax,%ax
mov    -0xd0(%ebp),%eax
test   %eax,%eax
je     806a0a8 <fts_children+0x11a8>
mov    -0xd0(%ebp),%edi
mov    -0xd4(%ebp),%eax
mov    (%eax,%edi,4),%ebx
sub    %ebx,-0xd0(%ebp)
test   %ebx,%ebx
je     8069c14 <fts_children+0xd14>
movzbl -0x80(%ebp),%esi
lea    -0x88(%ebp),%edi
mov    %esi,%eax
test   %al,%al
je     8069e82 <fts_children+0xf82>
movzbl -0x74(%ebp),%esi
mov    %esi,%eax
test   %al,%al
jne    8069ec5 <fts_children+0xfc5>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
sub    $0x1,%ebx
movb   $0x0,-0x80(%ebp)
je     806a0e0 <fts_children+0x11e0>
xor    %esi,%esi
cmpb   $0x0,-0x8c(%ebp)
jne    8069eef <fts_children+0xfef>
mov    -0x7c(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    8069ed8 <fts_children+0xfd8>
movl   $0x1,-0x78(%ebp)
movsbl (%edx),%eax
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
mov    %esi,%eax
test   %al,%al
movb   $0x1,-0x80(%ebp)
je     8069e6d <fts_children+0xf6d>
mov    -0x70(%ebp),%esi
test   %esi,%esi
jne    8069e6d <fts_children+0xf6d>
call   804a080 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806a2ff <fts_children+0x13ff>
movb   $0x1,-0x8c(%ebp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%edx
mov    %edx,(%esp)
mov    %edx,-0xcc(%ebp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    -0xcc(%ebp),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     8069f80 <fts_children+0x1080>
cmp    $0xfffffffe,%eax
je     8069f90 <fts_children+0x1090>
test   %eax,%eax
jne    8069f55 <fts_children+0x1055>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    806a34c <fts_children+0x144c>
mov    -0x70(%ebp),%eax
test   %eax,%eax
jne    806a323 <fts_children+0x1423>
mov    %edi,(%esp)
mov    $0x1,%esi
movb   $0x1,-0x74(%ebp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     8069ebb <fts_children+0xfbb>
movb   $0x0,-0x8c(%ebp)
jmp    8069ebb <fts_children+0xfbb>
lea    0x0(%esi),%esi
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    8069ebb <fts_children+0xfbb>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    8069ebb <fts_children+0xfbb>
nop
lea    -0x50(%ebp),%eax
mov    %eax,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806a2ff <fts_children+0x13ff>
movb   $0x1,-0x54(%ebp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    -0x44(%ebp),%esi
lea    -0x50(%ebp),%edi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x38(%ebp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x40(%ebp)
je     806a1e3 <fts_children+0x12e3>
cmp    $0xfffffffe,%eax
je     806a2c1 <fts_children+0x13c1>
test   %eax,%eax
jne    806a024 <fts_children+0x1124>
mov    -0x44(%ebp),%eax
movl   $0x1,-0x40(%ebp)
cmpb   $0x0,(%eax)
jne    806a34c <fts_children+0x144c>
mov    -0x38(%ebp),%edx
test   %edx,%edx
jne    806a323 <fts_children+0x1423>
lea    -0x50(%ebp),%eax
mov    $0x1,%ebx
mov    %eax,(%esp)
movb   $0x1,-0x3c(%ebp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     8069cad <fts_children+0xdad>
movb   $0x0,-0x54(%ebp)
jmp    8069cad <fts_children+0xdad>
lea    0x0(%esi,%eiz,1),%esi
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
mov    $0x1,%eax
cmp    %ecx,%edx
je     806a136 <fts_children+0x1236>
mov    %edx,-0x10(%ebx)
mov    -0xb0(%ebp),%edx
test   %al,%al
mov    %al,-0x8(%ebx)
mov    %edx,-0xc(%ebx)
je     806a085 <fts_children+0x1185>
mov    -0xa8(%ebp),%eax
mov    %eax,-0x4(%ebx)
mov    -0xb4(%ebp),%edx
add    $0x28,%ebx
add    -0xb0(%ebp),%edx
movb   $0x0,-0xb8(%ebp)
mov    %edx,-0xb4(%ebp)
jmp    8069a90 <fts_children+0xb90>
xchg   %ax,%ax
movzbl -0x80(%ebp),%ebx
test   %bl,%bl
je     806a160 <fts_children+0x1260>
movzbl -0x74(%ebp),%ebx
test   %bl,%bl
jne    806a1b3 <fts_children+0x12b3>
mov    -0x78(%ebp),%eax
add    %eax,-0x7c(%ebp)
mov    -0x40(%ebp),%eax
movb   $0x0,-0x80(%ebp)
add    %eax,-0x44(%ebp)
movb   $0x0,-0x48(%ebp)
jmp    8069c6d <fts_children+0xd6d>
lea    0x0(%esi,%eiz,1),%esi
movzbl -0x48(%ebp),%ebx
jmp    8069c10 <fts_children+0xd10>
mov    %edi,%esi
mov    %ecx,%edi
mov    -0xcc(%ebp),%ebx
mov    -0xd4(%ebp),%eax
mov    %ebx,(%eax,%ebx,4)
xor    %ebx,%ebx
jmp    8069b99 <fts_children+0xc99>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,-0xb0(%ebp)
00
movb   $0x0,-0xac(%ebp)
mov    -0xb4(%ebp),%edx
lea    -0xa4(%ebp),%ecx
xor    %eax,%eax
movb   $0x1,-0xb8(%ebp)
cmp    %ecx,%edx
jne    806a069 <fts_children+0x1169>
mov    -0xb0(%ebp),%eax
mov    %edx,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80499f0 <memcpy@plt>
mov    %ebx,-0x10(%ebx)
movzbl -0xac(%ebp),%eax
jmp    806a06c <fts_children+0x116c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,-0x8c(%ebp)
lea    -0x88(%ebp),%esi
jne    806a242 <fts_children+0x1342>
mov    -0x7c(%ebp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    806a225 <fts_children+0x1325>
movl   $0x1,-0x78(%ebp)
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,-0x74(%ebp)
mov    %eax,-0x70(%ebp)
test   %bl,%bl
movb   $0x1,-0x80(%ebp)
je     806a0c0 <fts_children+0x11c0>
mov    -0x70(%ebp),%ecx
test   %ecx,%ecx
jne    806a0c0 <fts_children+0x11c0>
jmp    8069ecc <fts_children+0xfcc>
mov    -0xb4(%ebp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,-0xac(%ebp)
mov    %eax,-0xb0(%ebp)
jmp    806a119 <fts_children+0x1219>
movl   $0x1,-0x40(%ebp)
movb   $0x0,-0x3c(%ebp)
jmp    8069cad <fts_children+0xdad>
mov    -0x38(%ebp),%edx
test   %edx,%edx
je     8069d59 <fts_children+0xe59>
mov    -0xd0(%ebp),%eax
mov    -0xd8(%ebp),%edi
lea    (%eax,%eax,4),%eax
lea    (%edi,%eax,8),%eax
cmpb   $0x0,0x8(%eax)
je     8069c32 <fts_children+0xd32>
cmp    0xc(%eax),%edx
sete   %al
jmp    8069c42 <fts_children+0xd42>
lea    -0x88(%ebp),%esi
mov    %esi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806a2ff <fts_children+0x13ff>
movb   $0x1,-0x8c(%ebp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    -0x7c(%ebp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x70(%ebp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,-0x78(%ebp)
je     806a2d8 <fts_children+0x13d8>
cmp    $0xfffffffe,%eax
je     806a2e8 <fts_children+0x13e8>
test   %eax,%eax
jne    806a29c <fts_children+0x139c>
mov    -0x7c(%ebp),%eax
movl   $0x1,-0x78(%ebp)
cmpb   $0x0,(%eax)
jne    806a34c <fts_children+0x144c>
mov    -0x70(%ebp),%ebx
test   %ebx,%ebx
jne    806a323 <fts_children+0x1423>
mov    %esi,(%esp)
mov    $0x1,%ebx
movb   $0x1,-0x74(%ebp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806a1a7 <fts_children+0x12a7>
movb   $0x0,-0x8c(%ebp)
jmp    806a1a7 <fts_children+0x12a7>
mov    -0x44(%ebp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,-0x3c(%ebp)
mov    %eax,-0x40(%ebp)
jmp    8069cad <fts_children+0xdad>
movl   $0x1,-0x78(%ebp)
movb   $0x0,-0x74(%ebp)
jmp    806a1a7 <fts_children+0x12a7>
mov    -0x7c(%ebp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,-0x74(%ebp)
mov    %eax,-0x78(%ebp)
jmp    806a1a7 <fts_children+0x12a7>
movl   $0x806ee88,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e491,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806ee88,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4bf,(%esp)
call   804a110 <__assert_fail@plt>
call   8049ac0 <__stack_chk_fail@plt>
movl   $0x806ee88,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4a8,(%esp)
call   804a110 <__assert_fail@plt>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x15c,%esp
mov    0x170(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x174(%esp),%eax
mov    %eax,0x20(%esp)
mov    %eax,%edi
mov    %gs:0x14,%eax
mov    %eax,0x14c(%esp)
xor    %eax,%eax
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    806a7b0 <fts_children+0x18b0>
movsbl (%edi),%eax
lea    0x38(%esp),%ebx
mov    %edi,0x44(%esp)
movb   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806e580(,%edx,4),%edx
movl   $0x0,0x3c(%esp)
movb   $0x0,0x40(%esp)
bt     %eax,%edx
jae    806a710 <fts_children+0x1810>
movl   $0x1,0x48(%esp)
mov    %eax,0x50(%esp)
movb   $0x1,0x4c(%esp)
mov    0x50(%esp),%ebx
movb   $0x1,0x40(%esp)
test   %ebx,%ebx
je     806a9a8 <fts_children+0x1aa8>
mov    0x20(%esp),%eax
movb   $0x0,0xa4(%esp)
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0x6c(%esp)
mov    %eax,0x7c(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0x70(%esp)
movl   $0x0,0x74(%esp)
movb   $0x0,0x78(%esp)
mov    %eax,0xb4(%esp)
movl   $0x0,0xa8(%esp)
00
movl   $0x0,0xac(%esp)
00
movb   $0x0,0xb0(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x24(%esp)
movb   $0x1,0x28(%esp)
jne    806a660 <fts_children+0x1760>
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %edx,%ecx
jae    806a9b8 <fts_children+0x1ab8>
movl   $0x1,0xb8(%esp)
00
movsbl (%eax),%eax
movb   $0x1,0xbc(%esp)
mov    %eax,0xc0(%esp)
mov    0xc0(%esp),%ecx
movb   $0x1,0xb0(%esp)
test   %ecx,%ecx
je     806a9a0 <fts_children+0x1aa0>
mov    $0x1,%edx
cmpl   $0x9,0x24(%esp)
seta   %al
and    0x28(%esp),%al
mov    %al,0x14(%esp)
je     806ac75 <fts_children+0x1d75>
mov    0x24(%esp),%eax
lea    (%eax,%eax,4),%eax
cmp    %eax,0x1c(%esp)
jb     806ac70 <fts_children+0x1d70>
mov    0x1c(%esp),%esi
sub    0x2c(%esp),%esi
je     806adbf <fts_children+0x1ebf>
movzbl 0x78(%esp),%ebx
lea    0x70(%esp),%edi
test   %bl,%bl
je     806a549 <fts_children+0x1649>
movzbl 0x84(%esp),%ebx
test   %bl,%bl
jne    806a59e <fts_children+0x169e>
mov    0x80(%esp),%eax
add    %eax,0x7c(%esp)
sub    $0x1,%esi
movb   $0x0,0x78(%esp)
je     806add0 <fts_children+0x1ed0>
xor    %ebx,%ebx
cmpb   $0x0,0x6c(%esp)
jne    806aa3d <fts_children+0x1b3d>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    806aa28 <fts_children+0x1b28>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movzbl 0x14(%esp),%ebx
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
test   %bl,%bl
movb   $0x1,0x78(%esp)
je     806a52e <fts_children+0x162e>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    806a52e <fts_children+0x162e>
movzbl 0x84(%esp),%eax
mov    %al,0x14(%esp)
cmpb   $0x0,0x14(%esp)
je     806acb8 <fts_children+0x1db8>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    806acb8 <fts_children+0x1db8>
mov    0x20(%esp),%edx
lea    0x30(%esp),%ecx
mov    0x18(%esp),%eax
call   80699d0 <fts_children+0xad0>
test   %al,%al
jne    806b315 <fts_children+0x2415>
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x0,0x28(%esp)
mov    %eax,0x2c(%esp)
lea    0x0(%esi),%esi
addl   $0x1,0x24(%esp)
test   %dl,%dl
lea    0x1(%eax),%ebx
je     806aad8 <fts_children+0x1bd8>
cmpb   $0x0,0x4c(%esp)
je     806aad8 <fts_children+0x1bd8>
mov    0x50(%esp),%eax
cmp    %eax,0xc0(%esp)
sete   %al
test   %al,%al
jne    806ab13 <fts_children+0x1c13>
mov    0xb4(%esp),%eax
add    0xb8(%esp),%eax
cmpb   $0x0,0xa4(%esp)
movb   $0x0,0xb0(%esp)
mov    %eax,0xb4(%esp)
mov    %ebx,0x1c(%esp)
je     806a48c <fts_children+0x158c>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0xb4(%esp),%ebx
lea    0xa8(%esp),%esi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %esi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xc0(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xb8(%esp)
je     806b190 <fts_children+0x2290>
cmp    $0xfffffffe,%eax
je     806a9f8 <fts_children+0x1af8>
test   %eax,%eax
jne    806a6e1 <fts_children+0x17e1>
mov    0xb4(%esp),%eax
movl   $0x1,0xb8(%esp)
00
cmpb   $0x0,(%eax)
jne    806b323 <fts_children+0x2423>
mov    0xc0(%esp),%ecx
test   %ecx,%ecx
jne    806ad66 <fts_children+0x1e66>
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
movb   $0x1,0xbc(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806a4c4 <fts_children+0x15c4>
movb   $0x0,0xa4(%esp)
jmp    806a4c4 <fts_children+0x15c4>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806b2f1 <fts_children+0x23f1>
movb   $0x1,0x34(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x44(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x48(%esp)
je     806a9e0 <fts_children+0x1ae0>
cmp    $0xfffffffe,%eax
je     806b253 <fts_children+0x2353>
test   %eax,%eax
jne    806a78d <fts_children+0x188d>
mov    0x44(%esp),%eax
movl   $0x1,0x48(%esp)
cmpb   $0x0,(%eax)
jne    806b323 <fts_children+0x2423>
mov    0x50(%esp),%esi
test   %esi,%esi
jne    806ad66 <fts_children+0x1e66>
mov    %ebx,(%esp)
movb   $0x1,0x4c(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806a3fd <fts_children+0x14fd>
movb   $0x0,0x34(%esp)
jmp    806a3fd <fts_children+0x14fd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
mov    0x18(%esp),%edi
movzbl (%ecx),%eax
mov    %eax,%ebx
test   %bl,%bl
mov    %al,0x14(%esp)
mov    %edi,%eax
je     806a928 <fts_children+0x1a28>
cmpb   $0x0,(%edi)
je     806a9a0 <fts_children+0x1aa0>
lea    0x1(%edi),%esi
xor    %ebx,%ebx
mov    %ecx,0x28(%esp)
xor    %edi,%edi
movl   $0x0,0x2c(%esp)
movb   $0x1,0x24(%esp)
mov    0x18(%esp),%eax
add    %ebx,%eax
add    $0x1,%ebx
mov    %eax,0x1c(%esp)
movzbl 0x14(%esp),%eax
cmp    -0x1(%esi),%al
je     806a948 <fts_children+0x1a48>
cmpb   $0x0,(%esi)
je     806a9a0 <fts_children+0x1aa0>
add    $0x1,%edi
cmp    $0x9,%ebx
jbe    806a88d <fts_children+0x198d>
cmpb   $0x0,0x24(%esp)
je     806a88d <fts_children+0x198d>
lea    (%ebx,%ebx,4),%eax
cmp    %eax,%edi
jb     806a888 <fts_children+0x1988>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
je     806a851 <fts_children+0x1951>
mov    %edi,%eax
sub    0x2c(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049f10 <strnlen@plt>
mov    %edi,0x2c(%esp)
add    %eax,0x28(%esp)
mov    0x28(%esp),%eax
cmpb   $0x0,(%eax)
jne    806a888 <fts_children+0x1988>
mov    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   8049d70 <strlen@plt>
lea    0x30(%esp),%ecx
mov    %ebp,%edx
mov    %ecx,(%esp)
mov    %eax,%ecx
mov    %esi,%eax
call   8069870 <fts_children+0x970>
test   %al,%al
jne    806b315 <fts_children+0x2415>
movl   $0x0,0x28(%esp)
movb   $0x0,0x24(%esp)
jmp    806a88d <fts_children+0x198d>
xchg   %ax,%ax
movb   $0x1,0x24(%esp)
add    $0x1,%esi
jmp    806a7ec <fts_children+0x18ec>
lea    0x0(%esi),%esi
mov    0x124(%esp),%ebx
mov    0x128(%esp),%eax
movb   $0x0,0x120(%esp)
add    %ebx,%eax
mov    0x1c(%esp),%ebx
mov    %eax,0x124(%esp)
add    $0x2,%ebx
cmpb   $0x0,0x114(%esp)
mov    %ebx,%esi
jne    806aeca <fts_children+0x1fca>
xchg   %ax,%ax
movzbl (%eax),%edx
mov    %edx,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %edx,%ecx
jae    806b100 <fts_children+0x2200>
movl   $0x1,0x128(%esp)
00
movsbl (%eax),%eax
movb   $0x1,0x12c(%esp)
mov    %eax,0x130(%esp)
mov    0x130(%esp),%eax
movb   $0x1,0x120(%esp)
test   %eax,%eax
jne    806ae43 <fts_children+0x1f43>
mov    0xb4(%esp),%eax
xchg   %ax,%ax
mov    0x14c(%esp),%edi
xor    %gs:0x14,%edi
jne    806b31e <fts_children+0x241e>
add    $0x15c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x20(%esp),%ebp
movzbl 0x1(%ebp),%eax
test   %al,%al
je     806a994 <fts_children+0x1a94>
movzbl (%esi),%ecx
test   %cl,%cl
je     806a9a0 <fts_children+0x1aa0>
cmp    %cl,%al
lea    0x2(%edi),%edx
jne    806adb8 <fts_children+0x1eb8>
neg    %edi
lea    0x0(%ebp,%edi,1),%ebp
add    0x1c(%esp),%edi
jmp    806a98b <fts_children+0x1a8b>
lea    0x0(%esi),%esi
movzbl (%edi,%edx,1),%ecx
test   %cl,%cl
je     806a9a0 <fts_children+0x1aa0>
add    $0x1,%edx
cmp    %cl,%al
jne    806adb8 <fts_children+0x1eb8>
movzbl 0x0(%ebp,%edx,1),%eax
test   %al,%al
jne    806a978 <fts_children+0x1a78>
mov    0x1c(%esp),%eax
jmp    806a928 <fts_children+0x1a28>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    806a928 <fts_children+0x1a28>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
jmp    806a928 <fts_children+0x1a28>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806b2f1 <fts_children+0x23f1>
movb   $0x1,0xa4(%esp)
jmp    806a660 <fts_children+0x1760>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x48(%esp)
movb   $0x0,0x4c(%esp)
movb   $0x1,0x40(%esp)
jmp    806a40e <fts_children+0x150e>
nop
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0xbc(%esp)
mov    %eax,0xb8(%esp)
movb   $0x1,0xb0(%esp)
xor    %edx,%edx
jmp    806a4e0 <fts_children+0x15e0>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806b2f1 <fts_children+0x23f1>
movb   $0x1,0x6c(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     806ac80 <fts_children+0x1d80>
cmp    $0xfffffffe,%eax
je     806ac98 <fts_children+0x1d98>
test   %eax,%eax
jne    806aab1 <fts_children+0x1bb1>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    806b323 <fts_children+0x2423>
mov    0x88(%esp),%edx
test   %edx,%edx
jne    806ad66 <fts_children+0x1e66>
mov    %edi,(%esp)
movb   $0x1,0x84(%esp)
call   8049a00 <mbsinit@plt>
movzbl 0x14(%esp),%ebx
test   %eax,%eax
je     806a595 <fts_children+0x1695>
movb   $0x0,0x6c(%esp)
jmp    806a595 <fts_children+0x1695>
mov    0xb8(%esp),%edx
xor    %eax,%eax
cmp    0x48(%esp),%edx
jne    806a629 <fts_children+0x1729>
mov    0x44(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
test   %eax,%eax
sete   %al
test   %al,%al
je     806a631 <fts_children+0x1731>
mov    0xbc(%esp),%edx
lea    0x118(%esp),%edi
mov    0xa4(%esp),%eax
mov    %edx,0xf4(%esp)
mov    0xc0(%esp),%edx
mov    %eax,0xdc(%esp)
mov    0xa8(%esp),%eax
mov    %edx,0xf8(%esp)
mov    0xc4(%esp),%edx
mov    %eax,0xe0(%esp)
mov    0xac(%esp),%eax
mov    %edx,0xfc(%esp)
mov    0xc8(%esp),%edx
mov    %eax,0xe4(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x100(%esp)
mov    0xcc(%esp),%edx
mov    %eax,0xe8(%esp)
mov    0xb4(%esp),%eax
movb   $0x0,0xe8(%esp)
mov    %edx,0x104(%esp)
mov    0xd0(%esp),%edx
mov    %eax,0xec(%esp)
mov    0xb8(%esp),%eax
add    %eax,0xec(%esp)
mov    %edx,0x108(%esp)
mov    0xd4(%esp),%edx
mov    %eax,0xf0(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x10c(%esp)
mov    0xd8(%esp),%edx
mov    %eax,0x124(%esp)
mov    %edx,0x110(%esp)
movb   $0x0,0x114(%esp)
movsbl (%eax),%eax
movl   $0x0,0x118(%esp)
00
movl   $0x0,0x11c(%esp)
00
movb   $0x0,0x120(%esp)
mov    %eax,%edx
shr    $0x5,%dl
movzbl %dl,%edx
mov    0x806e580(,%edx,4),%edx
bt     %eax,%edx
jae    806acd8 <fts_children+0x1dd8>
movl   $0x1,0x128(%esp)
00
mov    %eax,0x130(%esp)
movb   $0x1,0x12c(%esp)
mov    0x130(%esp),%edx
movb   $0x1,0x120(%esp)
test   %edx,%edx
jne    806a898 <fts_children+0x1998>
call   804a080 <abort@plt>
nop
movb   $0x1,0x28(%esp)
mov    0x1c(%esp),%eax
jmp    806a600 <fts_children+0x1700>
xchg   %ax,%ax
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
jmp    806a595 <fts_children+0x1695>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x84(%esp)
mov    %eax,0x80(%esp)
jmp    806a595 <fts_children+0x1695>
mov    0x1c(%esp),%eax
movzbl 0xbc(%esp),%edx
movb   $0x1,0x28(%esp)
mov    %eax,0x2c(%esp)
jmp    806a600 <fts_children+0x1700>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806b2f1 <fts_children+0x23f1>
movb   $0x1,0x114(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     806b292 <fts_children+0x2392>
cmp    $0xfffffffe,%eax
je     806b2b1 <fts_children+0x23b1>
test   %eax,%eax
jne    806ad90 <fts_children+0x1e90>
mov    0x124(%esp),%ebx
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%ebx)
jne    806b323 <fts_children+0x2423>
mov    0x130(%esp),%eax
test   %eax,%eax
je     806ad90 <fts_children+0x1e90>
movl   $0x806ee88,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4bf,(%esp)
call   804a110 <__assert_fail@plt>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806ac53 <fts_children+0x1d53>
movb   $0x0,0x114(%esp)
jmp    806ac53 <fts_children+0x1d53>
lea    0x0(%esi),%esi
mov    %edx,%edi
jmp    806a813 <fts_children+0x1913>
cmpb   $0x0,0x78(%esp)
jne    806a5a9 <fts_children+0x16a9>
lea    0x0(%esi),%esi
cmpb   $0x0,0x6c(%esp)
lea    0x70(%esp),%ebx
jne    806b1c1 <fts_children+0x22c1>
mov    0x7c(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    806b1a8 <fts_children+0x22a8>
movl   $0x1,0x80(%esp)
00
movsbl (%edx),%eax
movb   $0x1,0x84(%esp)
mov    %eax,0x88(%esp)
movb   $0x1,0x78(%esp)
jmp    806a5b5 <fts_children+0x16b5>
lea    0x0(%esi),%esi
movl   $0x1,0x128(%esp)
00
movb   $0x0,0x12c(%esp)
movb   $0x1,0x120(%esp)
movzbl 0xe8(%esp),%ebx
test   %bl,%bl
je     806af70 <fts_children+0x2070>
movzbl 0xf4(%esp),%ebx
test   %bl,%bl
jne    806afd5 <fts_children+0x20d5>
mov    0xf0(%esp),%edx
mov    $0x1,%eax
cmp    0x128(%esp),%edx
je     806b0d8 <fts_children+0x21d8>
test   %al,%al
lea    0x1(%esi),%edx
jne    806b188 <fts_children+0x2288>
mov    0xf0(%esp),%eax
mov    %edx,%esi
add    %eax,0xec(%esp)
mov    0x124(%esp),%eax
add    0x128(%esp),%eax
cmpb   $0x0,0x114(%esp)
movb   $0x0,0xe8(%esp)
mov    %eax,0x124(%esp)
movb   $0x0,0x120(%esp)
je     806a8d0 <fts_children+0x19d0>
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %edi,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x130(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x128(%esp)
je     806ae28 <fts_children+0x1f28>
cmp    $0xfffffffe,%eax
je     806b138 <fts_children+0x2238>
test   %eax,%eax
jne    806af44 <fts_children+0x2044>
mov    0x124(%esp),%eax
movl   $0x1,0x128(%esp)
00
cmpb   $0x0,(%eax)
jne    806b323 <fts_children+0x2423>
mov    0x130(%esp),%eax
test   %eax,%eax
jne    806ad66 <fts_children+0x1e66>
mov    %edi,(%esp)
movb   $0x1,0x12c(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806a908 <fts_children+0x1a08>
movb   $0x0,0x114(%esp)
jmp    806a908 <fts_children+0x1a08>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0xdc(%esp)
lea    0xe0(%esp),%ebp
jne    806b027 <fts_children+0x2127>
mov    0xec(%esp),%edx
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    806b008 <fts_children+0x2108>
movl   $0x1,0xf0(%esp)
00
movsbl (%edx),%eax
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
mov    %eax,0xf8(%esp)
test   %bl,%bl
movb   $0x1,0xe8(%esp)
je     806ae63 <fts_children+0x1f63>
mov    0xf8(%esp),%eax
test   %eax,%eax
je     806a928 <fts_children+0x1a28>
cmpb   $0x0,0x12c(%esp)
je     806ae63 <fts_children+0x1f63>
cmp    0x130(%esp),%eax
setne  %al
jmp    806ae7c <fts_children+0x1f7c>
lea    0x0(%esi,%eiz,1),%esi
lea    0xe0(%esp),%ebp
mov    %ebp,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806b2f1 <fts_children+0x23f1>
movb   $0x1,0xdc(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0xec(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    0x14(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xf8(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0xf0(%esp)
je     806b120 <fts_children+0x2220>
cmp    $0xfffffffe,%eax
je     806b160 <fts_children+0x2260>
test   %eax,%eax
jne    806b0a9 <fts_children+0x21a9>
mov    0xec(%esp),%eax
movl   $0x1,0xf0(%esp)
00
cmpb   $0x0,(%eax)
jne    806b323 <fts_children+0x2423>
mov    0xf8(%esp),%eax
test   %eax,%eax
jne    806ad66 <fts_children+0x1e66>
mov    %ebp,(%esp)
mov    $0x1,%ebx
movb   $0x1,0xf4(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806afc5 <fts_children+0x20c5>
movb   $0x0,0xdc(%esp)
jmp    806afc5 <fts_children+0x20c5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x124(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   8049a50 <memcmp@plt>
test   %eax,%eax
setne  %al
jmp    806ae7c <fts_children+0x1f7c>
mov    %edi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806b2f1 <fts_children+0x23f1>
movb   $0x1,0x114(%esp)
jmp    806aeca <fts_children+0x1fca>
lea    0x0(%esi),%esi
movl   $0x1,0xf0(%esp)
00
movb   $0x0,0xf4(%esp)
jmp    806afc5 <fts_children+0x20c5>
mov    0x124(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    806ae3b <fts_children+0x1f3b>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xec(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0xf4(%esp)
mov    %eax,0xf0(%esp)
jmp    806afc5 <fts_children+0x20c5>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebx
jmp    806a631 <fts_children+0x1731>
nop
movl   $0x1,0xb8(%esp)
00
movb   $0x0,0xbc(%esp)
jmp    806aa16 <fts_children+0x1b16>
lea    0x70(%esp),%ebx
mov    %ebx,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806b2f1 <fts_children+0x23f1>
movb   $0x1,0x6c(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x7c(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x88(%esp),%eax
mov    %eax,(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x80(%esp)
je     806b2d4 <fts_children+0x23d4>
cmp    $0xfffffffe,%eax
je     806b26d <fts_children+0x236d>
test   %eax,%eax
jne    806b231 <fts_children+0x2331>
mov    0x7c(%esp),%eax
movl   $0x1,0x80(%esp)
00
cmpb   $0x0,(%eax)
jne    806b323 <fts_children+0x2423>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    806ad66 <fts_children+0x1e66>
mov    %ebx,(%esp)
movb   $0x1,0x84(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806ae1b <fts_children+0x1f1b>
movb   $0x0,0x6c(%esp)
jmp    806ae1b <fts_children+0x1f1b>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x4c(%esp)
mov    %eax,0x48(%esp)
jmp    806a9ed <fts_children+0x1aed>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
mov    %eax,0x80(%esp)
jmp    806ae1b <fts_children+0x1f1b>
movl   $0x1,0x128(%esp)
00
mov    0x124(%esp),%ebx
movb   $0x0,0x12c(%esp)
jmp    806a89f <fts_children+0x199f>
mov    0x124(%esp),%ebx
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x12c(%esp)
mov    %eax,0x128(%esp)
jmp    806a89f <fts_children+0x199f>
movl   $0x1,0x80(%esp)
00
movb   $0x0,0x84(%esp)
movb   $0x0,0x14(%esp)
jmp    806ae1b <fts_children+0x1f1b>
movl   $0x806ee88,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e491,(%esp)
call   804a110 <__assert_fail@plt>
mov    0x30(%esp),%eax
jmp    806a928 <fts_children+0x1a28>
call   8049ac0 <__stack_chk_fail@plt>
movl   $0x806ee88,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4a8,(%esp)
call   804a110 <__assert_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    0x1070(%esp),%eax
lea    0x4c(%esp),%ebx
mov    0x1078(%esp),%edi
lea    0x44(%esp),%ebp
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,%esi
mov    %eax,0x2c(%esp)
mov    0x107c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
mov    0x1080(%esp),%eax
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x104c(%esp)
xor    %eax,%eax
call   8049d80 <iconv@plt>
mov    0x1074(%esp),%eax
mov    %esi,0x3c(%esp)
xor    %esi,%esi
mov    %eax,0x40(%esp)
test   %eax,%eax
lea    0x48(%esp),%eax
mov    %eax,0x18(%esp)
jne    806b3f8 <fts_children+0x24f8>
jmp    806b448 <fts_children+0x2548>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
mov    0x40(%esp),%edx
sub    %ebx,%eax
add    %eax,%esi
test   %edx,%edx
je     806b448 <fts_children+0x2548>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
mov    %eax,0x10(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x1000,0x48(%esp)
call   8049d80 <iconv@plt>
cmp    $0xffffffff,%eax
jne    806b3e8 <fts_children+0x24e8>
call   8049e90 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x7,%eax
je     806b3e8 <fts_children+0x24e8>
cmp    $0x16,%eax
jne    806b5db <fts_children+0x26db>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
mov    %ebx,0x44(%esp)
movl   $0x1000,0x48(%esp)
call   8049d80 <iconv@plt>
cmp    $0xffffffff,%eax
je     806b5db <fts_children+0x26db>
mov    0x44(%esp),%eax
sub    %ebx,%eax
add    %eax,%esi
mov    %esi,0x1c(%esp)
je     806b5e8 <fts_children+0x26e8>
mov    0x24(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
je     806b5b8 <fts_children+0x26b8>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%edx
cmp    (%eax),%edx
ja     806b5b8 <fts_children+0x26b8>
movl   $0x0,0x10(%esp)
lea    0x40(%esp),%esi
movl   $0x0,0xc(%esp)
lea    0x3c(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8049d80 <iconv@plt>
mov    0x2c(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x1074(%esp),%eax
mov    %eax,0x40(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x44(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x48(%esp)
mov    0x1074(%esp),%eax
jmp    806b541 <fts_children+0x2641>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   8049d80 <iconv@plt>
cmp    $0xffffffff,%eax
je     806b5f8 <fts_children+0x26f8>
mov    0x40(%esp),%eax
test   %eax,%eax
jne    806b518 <fts_children+0x2618>
mov    0x18(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %edi,(%esp)
call   8049d80 <iconv@plt>
cmp    $0xffffffff,%eax
je     806b606 <fts_children+0x2706>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    806b633 <fts_children+0x2733>
mov    0x24(%esp),%eax
xor    %ebx,%ebx
mov    0x28(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,(%eax)
mov    0x20(%esp),%eax
mov    %ecx,(%eax)
mov    0x104c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    806b638 <fts_children+0x2738>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
jne    806b4b5 <fts_children+0x25b5>
call   8049e90 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%ebx
jmp    806b594 <fts_children+0x2694>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
xor    %ebx,%ebx
movl   $0x0,(%eax)
jmp    806b594 <fts_children+0x2694>
xchg   %ax,%ax
call   8049e90 <__errno_location@plt>
cmpl   $0x16,(%eax)
je     806b545 <fts_children+0x2645>
mov    0x24(%esp),%ecx
mov    $0xffffffff,%ebx
mov    0x28(%esp),%edi
cmp    %edi,(%ecx)
je     806b594 <fts_children+0x2694>
call   8049e90 <__errno_location@plt>
mov    (%eax),%ebp
mov    %eax,%esi
mov    %edi,(%esp)
call   80499d0 <free@plt>
mov    %ebp,(%esi)
jmp    806b594 <fts_children+0x2694>
call   804a080 <abort@plt>
call   8049ac0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   8049d70 <strlen@plt>
mov    %eax,%ebx
shl    $0x4,%ebx
cmp    $0xfff,%eax
cmova  %eax,%ebx
lea    0x1(%ebx),%edi
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     806b809 <fts_children+0x2909>
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049d80 <iconv@plt>
mov    %esi,0x28(%esp)
mov    %ebx,0x2c(%esp)
jmp    806b714 <fts_children+0x2814>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e90 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x16,%ebx
je     806b79b <fts_children+0x289b>
cmp    $0x7,%ebx
jne    806b7f4 <fts_children+0x28f4>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    806b7e8 <fts_children+0x28e8>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049c80 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     806b7e8 <fts_children+0x28e8>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8049d80 <iconv@plt>
cmp    $0xffffffff,%eax
je     806b6b8 <fts_children+0x27b8>
jmp    806b79b <fts_children+0x289b>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049e90 <__errno_location@plt>
mov    (%eax),%ebx
mov    %eax,%ebp
cmp    $0x7,%ebx
jne    806b7f4 <fts_children+0x28f4>
mov    0x28(%esp),%ebx
lea    (%edi,%edi,1),%edx
sub    %esi,%ebx
cmp    %edx,%edi
jae    806b7e8 <fts_children+0x28e8>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   8049c80 <realloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     806b7e8 <fts_children+0x28e8>
lea    (%eax,%ebx,1),%ecx
mov    %edx,%edi
mov    %ecx,0x28(%esp)
lea    -0x1(%edx),%ecx
mov    %eax,%esi
sub    %ebx,%ecx
mov    %ecx,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049d80 <iconv@plt>
cmp    $0xffffffff,%eax
je     806b750 <fts_children+0x2850>
mov    0x28(%esp),%eax
lea    0x1(%eax),%edx
mov    %edx,0x28(%esp)
movb   $0x0,(%eax)
mov    0x28(%esp),%eax
sub    %esi,%eax
cmp    %edi,%eax
jb     806b818 <fts_children+0x2918>
mov    %esi,%eax
jmp    806b801 <fts_children+0x2901>
movl   $0xc,0x0(%ebp)
mov    $0xc,%ebx
mov    %esi,(%esp)
call   80499d0 <free@plt>
xor    %eax,%eax
mov    %ebx,0x0(%ebp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049e90 <__errno_location@plt>
movl   $0xc,(%eax)
xor    %eax,%eax
jmp    806b801 <fts_children+0x2901>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8049c80 <realloc@plt>
test   %eax,%eax
cmove  %esi,%eax
jmp    806b801 <fts_children+0x2901>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
cmpb   $0x0,(%ebx)
je     806b857 <fts_children+0x2957>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8069120 <fts_children+0x220>
test   %eax,%eax
jne    806b870 <fts_children+0x2970>
mov    %ebx,(%esp)
call   8049e80 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     806b8c0 <fts_children+0x29c0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804a0a0 <iconv_open@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     806b8d4 <fts_children+0x29d4>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   806b640 <fts_children+0x2740>
test   %eax,%eax
mov    %eax,%ebx
je     806b8d8 <fts_children+0x29d8>
mov    %esi,(%esp)
call   8049d90 <iconv_close@plt>
test   %eax,%eax
jns    806b865 <fts_children+0x2965>
call   8049e90 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   80499d0 <free@plt>
mov    %edi,(%esi)
jmp    806b865 <fts_children+0x2965>
call   8049e90 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %ebx,%ebx
jmp    806b865 <fts_children+0x2965>
call   8049e90 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
call   8049d90 <iconv_close@plt>
mov    %edi,(%ebx)
xor    %ebx,%ebx
jmp    806b865 <fts_children+0x2965>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806b930 <fts_children+0x2a30>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
cmp    $0x406,%eax
jne    806b990 <fts_children+0x2a90>
mov    0x8074c74,%eax
mov    0x28(%esp),%edi
test   %eax,%eax
mov    %edi,0x8(%esp)
js     806ba38 <fts_children+0x2b38>
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   8049e30 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebx
js     806b9b0 <fts_children+0x2ab0>
movl   $0x1,0x8074c74
00
test   %ebx,%ebx
js     806b987 <fts_children+0x2a87>
cmpl   $0xffffffff,0x8074c74
je     806b9e0 <fts_children+0x2ae0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x28(%esp),%edx
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   8049e30 <fcntl@plt>
add    $0x10,%esp
mov    %eax,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   8049e90 <__errno_location@plt>
cmpl   $0x16,(%eax)
jne    806b970 <fts_children+0x2a70>
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   806b930 <fts_children+0x2a30>
test   %eax,%eax
mov    %eax,%ebx
js     806b987 <fts_children+0x2a87>
movl   $0xffffffff,0x8074c74
ff
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   8049e30 <fcntl@plt>
test   %eax,%eax
js     806ba14 <fts_children+0x2b14>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8049e30 <fcntl@plt>
cmp    $0xffffffff,%eax
jne    806b987 <fts_children+0x2a87>
call   8049e90 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
mov    $0xffffffff,%ebx
call   804a0e0 <close@plt>
mov    %edi,(%esi)
jmp    806b987 <fts_children+0x2a87>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   806b930 <fts_children+0x2a30>
mov    %eax,%ebx
jmp    806b97a <fts_children+0x2a7a>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
lea    0x8(%eax),%edx
cmp    %edx,%eax
ja     806baa8 <fts_children+0x2ba8>
mov    %edx,(%esp)
call   8049c90 <malloc@plt>
test   %eax,%eax
mov    %eax,%ecx
je     806baa8 <fts_children+0x2ba8>
lea    0x8(%eax),%ebx
mov    $0xff00ff01,%edx
movl   $0x1415fb4a,0x4(%eax)
mov    %ebx,%eax
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    %eax,%edx
mov    0x8074c80(,%eax,4),%eax
mov    %ebx,0x8074c80(,%edx,4)
mov    %eax,(%ecx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
nop
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %ebx
mov    0x8(%esp),%ebx
test   %ebx,%ebx
je     806bac2 <fts_children+0x2bc2>
cmpl   $0x1415fb4a,-0x4(%ebx)
je     806bac8 <fts_children+0x2bc8>
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    $0xff00ff01,%edx
mul    %edx
shr    $0x8,%edx
mov    %edx,%eax
shl    $0x8,%eax
add    %eax,%edx
mov    %ebx,%eax
sub    %edx,%eax
mov    0x8074c80(,%eax,4),%ecx
test   %ecx,%ecx
je     806bac2 <fts_children+0x2bc2>
cmp    %ecx,%ebx
jne    806baf6 <fts_children+0x2bf6>
jmp    806bb15 <fts_children+0x2c15>
cmp    %edx,%ebx
je     806bb00 <fts_children+0x2c00>
mov    %edx,%ecx
mov    -0x8(%ecx),%edx
test   %edx,%edx
jne    806baf0 <fts_children+0x2bf0>
jmp    806bac2 <fts_children+0x2bc2>
nop
sub    $0x8,%ecx
mov    -0x8(%ebx),%eax
sub    $0x8,%ebx
mov    %eax,(%ecx)
mov    %ebx,0x8(%esp)
pop    %ebx
jmp    80499d0 <free@plt>
lea    0x8074c80(,%eax,4),%ecx
jmp    806bb03 <fts_children+0x2c03>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
mov    0x70(%esp),%ebx
call   8049bc0 <__ctype_get_mb_cur_max@plt>
cmp    $0x1,%eax
jbe    806bcc0 <fts_children+0x2dc0>
mov    %ebx,0x24(%esp)
mov    %ebx,%edx
xor    %ebx,%ebx
movb   $0x0,0x14(%esp)
lea    0x30(%esp),%edi
movl   $0x0,0x18(%esp)
lea    0x18(%esp),%esi
movl   $0x0,0x1c(%esp)
movb   $0x0,0x20(%esp)
nop
cmpb   $0x0,0x14(%esp)
jne    806bbe5 <fts_children+0x2ce5>
movzbl (%edx),%eax
mov    %eax,%ecx
shr    $0x5,%cl
movzbl %cl,%ecx
mov    0x806e580(,%ecx,4),%ecx
bt     %eax,%ecx
jae    806bbd0 <fts_children+0x2cd0>
movl   $0x1,0x28(%esp)
movsbl (%edx),%eax
movb   $0x1,0x2c(%esp)
mov    %eax,0x30(%esp)
mov    0x30(%esp),%eax
movb   $0x1,0x20(%esp)
test   %eax,%eax
jne    806bc71 <fts_children+0x2d71>
mov    %ebx,%eax
mov    0x4c(%esp),%edi
xor    %gs:0x14,%edi
jne    806bd39 <fts_children+0x2e39>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806bccd <fts_children+0x2dcd>
movb   $0x1,0x14(%esp)
call   8049bc0 <__ctype_get_mb_cur_max@plt>
mov    0x24(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8063080 <__sprintf_chk@plt+0x18f40>
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   8049c20 <mbrtowc@plt>
cmp    $0xffffffff,%eax
mov    %eax,0x28(%esp)
je     806bc90 <fts_children+0x2d90>
cmp    $0xfffffffe,%eax
je     806bca8 <fts_children+0x2da8>
test   %eax,%eax
jne    806bc46 <fts_children+0x2d46>
mov    0x24(%esp),%ebp
movl   $0x1,0x28(%esp)
cmpb   $0x0,0x0(%ebp)
jne    806bd15 <fts_children+0x2e15>
mov    0x30(%esp),%edx
test   %edx,%edx
jne    806bcf1 <fts_children+0x2df1>
mov    %esi,(%esp)
movb   $0x1,0x2c(%esp)
call   8049a00 <mbsinit@plt>
test   %eax,%eax
je     806bba2 <fts_children+0x2ca2>
mov    0x30(%esp),%eax
movb   $0x0,0x14(%esp)
movb   $0x1,0x20(%esp)
test   %eax,%eax
je     806bbb3 <fts_children+0x2cb3>
mov    0x24(%esp),%ebp
mov    0x28(%esp),%edx
add    $0x1,%ebx
movb   $0x0,0x20(%esp)
add    %ebp,%edx
mov    %edx,0x24(%esp)
jmp    806bb70 <fts_children+0x2c70>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x28(%esp)
mov    0x24(%esp),%ebp
movb   $0x0,0x2c(%esp)
jmp    806bc75 <fts_children+0x2d75>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%ebp
mov    %ebp,(%esp)
call   8049d70 <strlen@plt>
movb   $0x0,0x2c(%esp)
mov    %eax,0x28(%esp)
jmp    806bc75 <fts_children+0x2d75>
nop
mov    %ebx,(%esp)
call   8049d70 <strlen@plt>
jmp    806bbb5 <fts_children+0x2cb5>
movl   $0x806ee9b,0xc(%esp)
movl   $0x96,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e491,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806ee9b,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4bf,(%esp)
call   804a110 <__assert_fail@plt>
movl   $0x806ee9b,0xc(%esp)
movl   $0xb2,0x8(%esp)
movl   $0x806e487,0x4(%esp)
movl   $0x806e4a8,(%esp)
call   804a110 <__assert_fail@plt>
call   8049ac0 <__stack_chk_fail@plt>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x28(%esp),%eax
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ebp
mov    0x24(%esp),%ecx
test   %eax,%eax
mov    %edi,0x4(%esp)
mov    %ebp,%edx
mov    %ecx,(%esp)
jne    806bd90 <fts_children+0x2e90>
cmp    %ebp,%ecx
ja     806bdc8 <fts_children+0x2ec8>
test   %ecx,%ecx
mov    %ecx,%esi
jne    806bd78 <fts_children+0x2e78>
mov    $0x1,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,%esi
xor    %edx,%edx
mov    %ebp,%eax
div    %esi
mov    %eax,%ebp
mov    %edi,%eax
div    %esi
mov    %ebp,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ebp,%eax
ja     806bdb8 <fts_children+0x2eb8>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    806bdd8 <fts_children+0x2ed8>
mov    0x4(%esp),%esi
cmp    %esi,(%esp)
jbe    806be48 <fts_children+0x2f48>
cmp    %edx,%eax
jb     806be48 <fts_children+0x2f48>
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
xor    %eax,%eax
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
div    %ecx
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%ecx
mov    (%esp),%edi
shl    %cl,%eax
mov    %eax,%esi
mov    $0x20,%eax
sub    %ebp,%eax
mov    %eax,%ecx
shr    %cl,%edi
mov    %ebp,%ecx
mov    %edi,0x8(%esp)
mov    (%esp),%edi
or     %esi,0x8(%esp)
mov    %edx,%esi
shl    %cl,%edi
mov    %eax,%ecx
mov    %edi,(%esp)
mov    0x4(%esp),%edi
shr    %cl,%esi
mov    %ebp,%ecx
shl    %cl,%edx
mov    %eax,%ecx
shr    %cl,%edi
or     %edx,%edi
mov    %esi,%edx
mov    %edi,%eax
divl   0x8(%esp)
mov    %edx,%esi
mov    %eax,%edi
mull   (%esp)
cmp    %edx,%esi
mov    %edx,(%esp)
jb     806be58 <fts_children+0x2f58>
mov    0x4(%esp),%edx
mov    %ebp,%ecx
shl    %cl,%edx
cmp    %eax,%edx
jae    806be39 <fts_children+0x2f39>
cmp    (%esp),%esi
je     806be58 <fts_children+0x2f58>
mov    %edi,%eax
xor    %edx,%edx
jmp    806bdbc <fts_children+0x2ebc>
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    $0x1,%eax
jmp    806bdbc <fts_children+0x2ebc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1(%edi),%eax
xor    %edx,%edx
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    806beb8 <fts_children+0x2fb8>
cmp    %edi,%esi
jbe    806bef0 <fts_children+0x2ff0>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     806bf10 <fts_children+0x3010>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    806bf20 <fts_children+0x3020>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     806bfb8 <fts_children+0x30b8>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    806bf01 <fts_children+0x3001>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    806beab <fts_children+0x2fab>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     806bfa4 <fts_children+0x30a4>
cmp    %eax,0xc(%esp)
jb     806bfa0 <fts_children+0x30a0>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    806bf7e <fts_children+0x307e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    806bf7e <fts_children+0x307e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     806bed1 <fts_children+0x2fd1>
jmp    806bee1 <fts_children+0x2fe1>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804b170 <__sprintf_chk@plt+0x1030>
add    $0x8025,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x104(%ebx),%esi
call   80498f0 <_init>
lea    -0x108(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     806c029 <fts_children+0x3129>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x108(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    806c008 <fts_children+0x3108>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    806c040 <fts_children+0x3140>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804b170 <__sprintf_chk@plt+0x1030>
add    $0x7faa,%ebx
sub    $0x18,%esp
lea    0x224(%ebx),%eax
test   %eax,%eax
je     806c088 <fts_children+0x3188>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049c30 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    806c06b <fts_children+0x316b>
push   %ebx
sub    $0x8,%esp
call   804b170 <__sprintf_chk@plt+0x1030>
add    $0x7f6b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
daa
gs
addr16 jb 806c12a <_IO_stdin_used+0x86>
jo     806c0ee <_IO_stdin_used+0x4a>
and    %ch,0x65(%ebp)
popa
outsb  %ds:(%esi),(%dx)
jae    806c0ee <_IO_stdin_used+0x4a>
daa
addr16 jb 806c137 <_IO_stdin_used+0x93>
jo     806c0f4 <_IO_stdin_used+0x50>
sub    $0x202e2745,%eax
and    %ah,(%edi)
data16
addr16 jb 806c144 <_IO_stdin_used+0xa0>
jo     806c108 <_IO_stdin_used+0x64>
and    %ch,0x65(%ebp)
popa
outsb  %ds:(%esi),(%dx)
jae    806c108 <_IO_stdin_used+0x64>
daa
addr16 jb 806c151 <_IO_stdin_used+0xad>
jo     806c10e <_IO_stdin_used+0x6a>
sub    $0xa2e2746,%eax
inc    %esp
imul   $0x69207463,0x65(%edx),%esi
outsb  %ds:(%esi),(%dx)
jbe    806c16d <_IO_stdin_used+0xc9>
arpl   %sp,0x74(%ecx)
imul   $0x20736120,0x6e(%edi),%ebp
imul   $0x65272072,%gs:0x65(%eax,%ebp,2),%esi
65
addr16 jb 806c179 <_IO_stdin_used+0xd5>
jo     806c13d <_IO_stdin_used+0x99>
and    %ch,0x72(%edi)
and    %ah,(%edi)
data16
addr16 jb 806c184 <_IO_stdin_used+0xe0>
jo     806c148 <_IO_stdin_used+0xa4>
and    %ch,0x73(%ecx)
and    %ah,0x70(%ebp,%eiz,2)
jb     806c18f <_IO_stdin_used+0xeb>
arpl   %sp,0x74(%ecx)
gs fs or %cs:%fs:%gs:(%eax),%al
add    %al,(%eax)
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
sub    $0x20,%al
bound  %edi,0x20(%ecx)
fs
gs
popaw
jne    806c1c1 <_IO_stdin_used+0x11d>
je     806c183 <_IO_stdin_used+0xdf>
and    %ah,0x20(%ecx)
bound  %esp,0x73(%ecx)
imul   $0x75676572,0x20(%ebx),%esp
insb   (%dx),%es:(%edi)
popa
jb     806c188 <_IO_stdin_used+0xe4>
gs
js     806c1db <_IO_stdin_used+0x137>
jb     806c1d2 <_IO_stdin_used+0x12e>
jae    806c1e2 <_IO_stdin_used+0x13e>
imul   $0x52422820,0x6e(%edi),%ebp
inc    %ebp
sub    %ebp,(%esi)
or     (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %ah,%bh
les    (%esi),%eax
or     %ah,0x500804b2(%eax)
mov    $0xc1c80804,%eax
push   %es
or     %dh,-0x4e(%eax)
add    $0x8,%al
push   %eax
mov    $0xc1ce0804,%eax
push   %es
or     %al,-0x4e(%eax)
add    $0x8,%al
push   %eax
mov    $0xc1d20804,%eax
push   %es
or     %dl,%al
mov    $0xc0000804,%esi
add    $0x8,%al
fadd   %st(1),%st
push   %es
or     %ah,%al
ret
add    $0x8,%al
rol    $0x4,%bh
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x67(%ebp)
jb     806c231 <_IO_stdin_used+0x18d>
jo     806c1ce <_IO_stdin_used+0x12a>
popa
ja     806c23c <_IO_stdin_used+0x198>
add    %ah,0x67(%esi)
jb     806c23b <_IO_stdin_used+0x197>
jo     806c1d8 <_IO_stdin_used+0x134>
jo     806c23f <_IO_stdin_used+0x19b>
jb     806c248 <_IO_stdin_used+0x1a4>
add    %dl,0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
add    %ch,(%ecx)
sub    %bl,0x5e(%ebx)
pop    %ebx
cmp    0x6c(%ecx),%ah
outsb  %ds:(%esi),(%dx)
jne    806c265 <_IO_stdin_used+0x1c1>
cmp    0x5f(%ebp),%bl
pop    %ebp
jl     806c222 <_IO_stdin_used+0x17e>
sub    %eax,(%eax)
pop    %esp
sub    %ebx,0x5b(%eax,%ebp,1)
pop    %esi
pop    %ebx
cmp    0x6c(%ecx),%ah
outsb  %ds:(%esi),(%dx)
jne    806c27a <_IO_stdin_used+0x1d6>
cmp    0x5f(%ebp),%bl
pop    %ebp
pop    %esp
jl     806c238 <_IO_stdin_used+0x194>
pop    %esp
sub    %eax,(%eax)
sub    %esp,(%eax,%eax,1)
pop    %esp
sub    %esp,(%eax,%eax,1)
push   %ebp
push   %esp
inc    %esi
sub    $0x656d0038,%eax
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806c2a3 <_IO_stdin_used+0x1ff>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:0x6e(%ecx)
je     806c29e <_IO_stdin_used+0x1fa>
jb     806c2a9 <_IO_stdin_used+0x205>
popa
insb   (%dx),%es:(%edi)
and    %dl,0x43(%eax)
push   %edx
inc    %ebp
and    %ah,0x72(%ebp)
jb     806c2b6 <_IO_stdin_used+0x212>
jb     806c283 <_IO_stdin_used+0x1df>
and    %ah,0x64
add    %dh,0x65(%eax,%ebp,2)
and    %ch,0x706f2050
je     806c2c4 <_IO_stdin_used+0x220>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806c283 <_IO_stdin_used+0x1df>
jae    806c2da <_IO_stdin_used+0x236>
jo     806c2d7 <_IO_stdin_used+0x233>
outsl  %ds:(%esi),(%dx)
jb     806c2de <_IO_stdin_used+0x23a>
jae    806c28c <_IO_stdin_used+0x1e8>
popa
and    %dh,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
and    %dh,%gs:0x61(%eax)
je     806c2ed <_IO_stdin_used+0x249>
gs
jb     806c2ea <_IO_stdin_used+0x246>
add    %al,(%eax)
add    %al,(%eax)
imul   $0x616e7265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
and    %ah,0x72(%ebp)
jb     806c2fc <_IO_stdin_used+0x258>
jb     806c2af <_IO_stdin_used+0x20b>
sub    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    806c301 <_IO_stdin_used+0x25d>
and    %ch,%fs:0x65(%esi)
jbe    806c300 <_IO_stdin_used+0x25c>
jb     806c2bd <_IO_stdin_used+0x219>
push   $0x65707061
outsb  %ds:(%esi),(%dx)
sub    %eax,(%eax)
add    %al,(%eax)
add    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806c33a <_IO_stdin_used+0x296>
and    %ah,0x6f(%esi)
jb     806c2e6 <_IO_stdin_used+0x242>
je     806c330 <_IO_stdin_used+0x28c>
and    %dl,%gs:0x43(%eax)
push   %edx
inc    %ebp
and    %cl,0x49(%edx)
push   %esp
and    %dh,0x74(%ebx)
popa
arpl   %bp,0x0(%ebx)
add    %al,(%eax)
add    %ah,0x78(%ebp)
arpl   %sp,0x65(%ebp)
fs gs and %dl,%fs:%gs:0x43(%eax)
push   %edx
inc    %ebp
daa
jae    806c30c <_IO_stdin_used+0x268>
bound  %esp,0x63(%ecx)
imul   $0x63,0x61(%edx,%esi,2),%esi
imul   $0x67,0x6e(%ecx),%ebp
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x61766e69,0x0(%eax,%eax,1),%esi
insb   (%dx),%es:(%edi)
imul   $0x382d4654,0x55(%eax,%eiz,1),%esp
and    %ah,0x79(%edx)
je     806c377 <_IO_stdin_used+0x2d3>
and    %dh,0x65(%ebx)
jno    806c38c <_IO_stdin_used+0x2e8>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
imul   $0x75706e69,0x20(%esi),%ebp
je     806c325 <_IO_stdin_used+0x281>
sbb    0x25(%ebx),%ebx
jae    806c397 <_IO_stdin_used+0x2f3>
add    %bl,(%ebx)
pop    %ebx
insl   (%dx),%es:(%edi)
add    %ch,0x6e(%ecx)
jbe    806c394 <_IO_stdin_used+0x2f0>
insb   (%dx),%es:(%edi)
imul   $0x68637461,0x6d(%eax,%eiz,1),%esp
gs
jb     806c35f <_IO_stdin_used+0x2bb>
and    $0x6e690073,%eax
jo     806c3bb <_IO_stdin_used+0x317>
je     806c368 <_IO_stdin_used+0x2c4>
imul   $0x206f6f74,0x20(%ebx),%esi
insb   (%dx),%es:(%edi)
popa
jb     806c3ba <_IO_stdin_used+0x316>
and    %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806c35e <_IO_stdin_used+0x2ba>
or     %ecx,(%eax)
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     806c36d <_IO_stdin_used+0x2c9>
jb     806c3d4 <_IO_stdin_used+0x330>
arpl   %si,0x72(%ebp)
jae    806c3dd <_IO_stdin_used+0x339>
jbe    806c3db <_IO_stdin_used+0x337>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    806c3a1 <_IO_stdin_used+0x2fd>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     806c386 <_IO_stdin_used+0x2e2>
ja     806c3e9 <_IO_stdin_used+0x345>
jb     806c3f8 <_IO_stdin_used+0x354>
imul   $0x7325203a,0x67(%esi),%ebp
cmp    (%eax),%ah
and    $0x736c0073,%eax
gs imul $0x66,%gs:(%eax),%esp
popa
imul   $0x6e694200,0x64(%ebp,%eiz,2),%ebp
popa
jb     806c422 <_IO_stdin_used+0x37e>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x616d2073
je     806c419 <_IO_stdin_used+0x375>
push   $0xa7365
and    $0xa646c6c,%eax
add    %ch,(%eax)
jae    806c438 <_IO_stdin_used+0x394>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806c42e <_IO_stdin_used+0x38a>
and    %ch,0x6e(%ecx)
jo     806c444 <_IO_stdin_used+0x3a0>
je     806c3fa <_IO_stdin_used+0x356>
add    %cl,(%edx)
push   %edx
gs
jo     806c446 <_IO_stdin_used+0x3a2>
jb     806c44d <_IO_stdin_used+0x3a9>
and    %ah,0x75(%edx)
addr16 jae 806c3ff <_IO_stdin_used+0x35b>
je     806c450 <_IO_stdin_used+0x3ac>
cmp    (%eax),%ah
and    $0x62000a73,%eax
jne    806c451 <_IO_stdin_used+0x3ad>
sub    $0x70657267,%eax
inc    %eax
outsb  %ds:(%si),(%dx)
jne    806c422 <_IO_stdin_used+0x37e>
outsl  %ds:(%esi),(%dx)
jb     806c45e <_IO_stdin_used+0x3ba>
add    %al,0x4e(%edi)
push   %ebp
and    %al,0x72(%edi)
gs
jo     806c421 <_IO_stdin_used+0x37d>
push   $0x20656d6f
jo     806c469 <_IO_stdin_used+0x3c5>
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    806c44e <_IO_stdin_used+0x3aa>
or     (%eax),%al
insl   (%dx),%es:(%edi)
je     806c415 <_IO_stdin_used+0x371>
das
jne    806c48b <_IO_stdin_used+0x3e7>
jb     806c449 <_IO_stdin_used+0x3a5>
jae    806c484 <_IO_stdin_used+0x3e0>
popa
jb     806c484 <_IO_stdin_used+0x3e0>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:0x52(%edi)
inc    %ebp
push   %eax
pop    %edi
dec    %edi
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
push   %ebx
add    %dh,0x65(%edx)
popa
add    %dh,%fs:0x6b(%ebx)
imul   $0x6e6b6e75,0x0(%eax),%esi
outsl  %ds:(%esi),(%dx)
ja     806c4b3 <_IO_stdin_used+0x40f>
and    %ah,0x76(%ebp,%eiz,2)
imul   $0x656d2073,0x65(%ebx),%esp
je     806c4ba <_IO_stdin_used+0x416>
outsl  %ds:(%esi),(%dx)
add    %ch,%fs:0x7269642d
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x766e6900,0x73(%ebp),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x63207861,0x6d(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jne    806c4e1 <_IO_stdin_used+0x43d>
je     806c475 <_IO_stdin_used+0x3d1>
bound  %ebp,0x6e(%ecx)
popa
jb     806c4f4 <_IO_stdin_used+0x450>
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     806c503 <_IO_stdin_used+0x45f>
sub    $0x656c6966,%eax
jae    806c4b1 <_IO_stdin_used+0x40d>
je     806c50c <_IO_stdin_used+0x468>
jo     806c4fa <_IO_stdin_used+0x456>
add    %bh,0x65(%ecx)
jae    806c49a <_IO_stdin_used+0x3f6>
outsw  %ds:(%esi),(%dx)
jb     806c501 <_IO_stdin_used+0x45d>
add    %ch,%gs:0x65(%esi)
jbe    806c509 <_IO_stdin_used+0x465>
jb     806c4a6 <_IO_stdin_used+0x402>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %ah,%gs:0x75(%ecx)
je     806c521 <_IO_stdin_used+0x47d>
add    %ch,0x66(%ecx)
sub    $0x797474,%eax
inc    %edi
push   %edx
inc    %ebp
push   %eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
push   %edx
add    %al,0x52(%edi)
inc    %ebp
push   %eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esp
dec    %edi
push   %edx
push   %ebx
add    %cl,0x69(%ebp)
imul   $0x48,0x20(%ebp),%esp
popa
gs
jb     806c54f <_IO_stdin_used+0x4ab>
gs
insb   (%dx),%es:(%edi)
add    %dh,(%edx)
xor    %esi,%cs:(%esi)
add    %al,0x4e(%edi)
push   %ebp
and    %ah,0x72(%edi)
gs
jo     806c4ec <_IO_stdin_used+0x448>
jb     806c553 <_IO_stdin_used+0x4af>
arpl   %si,0x72(%ebp)
jae    806c558 <_IO_stdin_used+0x4b4>
add    %ah,0x61(%edx)
jae    806c561 <_IO_stdin_used+0x4bd>
arpl   %bp,0x65676572
js     806c570 <_IO_stdin_used+0x4cc>
add    %ah,0x78(%ebp)
je     806c56a <_IO_stdin_used+0x4c6>
outsb  %ds:(%esi),(%dx)
fs
gs
fs
sub    $0x65676572,%eax
js     806c580 <_IO_stdin_used+0x4dc>
add    %ah,0x69(%esi)
js     806c57a <_IO_stdin_used+0x4d6>
fs
sub    $0x65676572,%eax
js     806c58d <_IO_stdin_used+0x4e9>
add    %ah,0x69(%esi)
js     806c587 <_IO_stdin_used+0x4e3>
fs
sub    $0x69727473,%eax
outsb  %ds:(%esi),(%dx)
addr16 jae 806c52c <_IO_stdin_used+0x488>
jo     806c593 <_IO_stdin_used+0x4ef>
jb     806c59c <_IO_stdin_used+0x4f8>
sub    $0x65676572,%eax
js     806c5a7 <_IO_stdin_used+0x503>
add    %ah,0x66(%ecx)
je     806c5a1 <_IO_stdin_used+0x4fd>
jb     806c56b <_IO_stdin_used+0x4c7>
arpl   %bp,0x6e(%edi)
je     806c5a8 <_IO_stdin_used+0x504>
js     806c5b9 <_IO_stdin_used+0x515>
add    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     806c5b1 <_IO_stdin_used+0x50d>
sub    $0x746e6f63,%eax
gs
js     806c5c8 <_IO_stdin_used+0x524>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     806c5d4 <_IO_stdin_used+0x530>
sub    $0x656c6966,%eax
jae    806c562 <_IO_stdin_used+0x4be>
bound  %edi,0x74(%ecx)
gs
sub    $0x7366666f,%eax
gs
je     806c56e <_IO_stdin_used+0x4ca>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jb     806c574 <_IO_stdin_used+0x4d0>
arpl   %bp,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
jne    806c5ec <_IO_stdin_used+0x548>
add    %ah,0x76(%ebp,%eiz,2)
imul   $0x78650073,0x65(%ebx),%esp
arpl   %bp,0x64(%ebp,%esi,2)
add    %ah,%gs:0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x6d6f7266,%eax
add    %ah,0x78(%ebp)
arpl   %bp,0x64(%ebp,%esi,2)
gs
sub    $0x726964,%eax
imul   $0x6966,0x0(%ebp,%eiz,2),%bp
insb   (%dx),%es:(%edi)
gs
jae    806c5dc <_IO_stdin_used+0x538>
ja     806c61a <_IO_stdin_used+0x576>
je     806c61b <_IO_stdin_used+0x577>
sub    $0x6374616d,%eax
push   $0x66007365
imul   $0x7469772d,0x73(%ebp,%eiz,2),%ebp
push   $0x2d74756f
insl   (%dx),%es:(%edi)
popa
je     806c631 <_IO_stdin_used+0x58d>
push   $0x6c656800
jo     806c5d5 <_IO_stdin_used+0x531>
imul   $0x6564756c,0x63(%esi),%ebp
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806c648 <_IO_stdin_used+0x5a4>
sub    $0x65736163,%eax
add    %ch,0x6e(%ecx)
imul   $0x61742d6c,0x61(%ecx,%ebp,2),%esi
bound  %eax,(%eax)
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
add    %ch,0x6e(%ecx,%ebp,2)
gs
sub    $0x66667562,%eax
gs
jb     806c66c <_IO_stdin_used+0x5c8>
add    %ch,%fs:0x6e(%ecx,%ebp,2)
gs
sub    $0x626d756e,%eax
gs
jb     806c615 <_IO_stdin_used+0x571>
insb   (%dx),%es:(%edi)
imul   $0x6765722d,0x65(%esi),%ebp
gs
js     806c690 <_IO_stdin_used+0x5ec>
add    %ch,0x61(%ebp)
js     806c652 <_IO_stdin_used+0x5ae>
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806c62b <_IO_stdin_used+0x587>
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
jo     806c630 <_IO_stdin_used+0x58c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ch,%gs:0x6f(%esi)
sub    $0x756f7267,%eax
jo     806c672 <_IO_stdin_used+0x5ce>
jae    806c6ac <_IO_stdin_used+0x608>
jo     806c6aa <_IO_stdin_used+0x606>
jb     806c6ac <_IO_stdin_used+0x608>
je     806c6bc <_IO_stdin_used+0x618>
jb     806c64f <_IO_stdin_used+0x5ab>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x7373656d,%eax
popa
addr16
gs
jae    806c65b <_IO_stdin_used+0x5b7>
outsb  %ds:(%esi),(%dx)
jne    806c6ca <_IO_stdin_used+0x626>
insb   (%dx),%es:(%edi)
add    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61746164,%eax
add    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806c69c <_IO_stdin_used+0x5f8>
insl   (%dx),%es:(%edi)
popa
je     806c6d6 <_IO_stdin_used+0x632>
push   $0x676e69
jno    806c6ef <_IO_stdin_used+0x64b>
imul   $0x72656400,0x74(%ebp),%esp
gs
data16
gs
jb     806c6eb <_IO_stdin_used+0x647>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
jb     806c6f1 <_IO_stdin_used+0x64d>
arpl   %si,0x72(%ebp)
jae    806c6fa <_IO_stdin_used+0x656>
jbe    806c6f8 <_IO_stdin_used+0x654>
add    %ch,0x6e(%ecx)
jbe    806c6fd <_IO_stdin_used+0x659>
jb     806c70e <_IO_stdin_used+0x66a>
sub    $0x6374616d,%eax
push   $0x6c697300
outsb  %gs:(%esi),(%dx)
je     806c6a8 <_IO_stdin_used+0x604>
jne    806c718 <_IO_stdin_used+0x674>
imul   $0x65747962,0x2d(%eax),%edi
sub    $0x7366666f,%eax
gs
je     806c72c <_IO_stdin_used+0x688>
add    %dh,0x65(%esi)
jb     806c731 <_IO_stdin_used+0x68d>
imul   $0x74697700,0x6e(%edi),%ebp
push   $0x6c69662d
outsb  %gs:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x6f(%edi)
jb     806c738 <_IO_stdin_used+0x694>
sub    $0x65676572,%eax
js     806c74b <_IO_stdin_used+0x6a7>
add    %ch,0x73(%ebp)
add    %ch,0x63(%ebp)
add    %ah,0x6e(%esi)
add    %ch,0x0(%esi,%ebp,2)
bound  %ebp,0x0(%esi)
jae    806c759 <_IO_stdin_used+0x6b5>
add    %ah,0x78(%ebx)
add    %dh,0x76(%edx)
add    %bl,(%ebx)
pop    %ebx
insl   (%dx),%es:(%edi)
sbb    0x4b(%ebx),%ebx
add    %bl,(%ebx)
pop    %ebx
and    $0x5b1b6d73,%eax
dec    %ebx
add    %dh,(%ebx)
add    %dh,%ss:(%ebx)
xor    (%eax),%al
xor    0x3b313000,%esi
xor    (%ecx),%esi
add    %ch,0x2d
and    $0x61632073,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    806c744 <_IO_stdin_used+0x6a0>
jne    806c799 <_IO_stdin_used+0x6f5>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,0x61702073
je     806c7a7 <_IO_stdin_used+0x703>
gs
jb     806c7a4 <_IO_stdin_used+0x700>
and    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     806c79d <_IO_stdin_used+0x6f9>
js     806c73e <_IO_stdin_used+0x69a>
add    %al,(%eax)
arpl   %bp,0x6e(%edi)
data16
insb   (%dx),%es:(%edi)
imul   $0x20676e69,0x74(%ebx),%esp
insl   (%dx),%es:(%edi)
popa
je     806c7b3 <_IO_stdin_used+0x70f>
push   $0x20737265
jae    806c7c7 <_IO_stdin_used+0x723>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6e690000,0x64(%ebp),%esp
jbe    806c7c5 <_IO_stdin_used+0x721>
insb   (%dx),%es:(%edi)
imul   $0x65746e6f,0x63(%eax,%eiz,1),%esp
js     806c7e3 <_IO_stdin_used+0x73f>
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 806c7de <_IO_stdin_used+0x73a>
and    %ah,0x72(%ecx)
addr16 jne 806c7e9 <_IO_stdin_used+0x745>
outsb  %gs:(%esi),(%dx)
je     806c780 <_IO_stdin_used+0x6dc>
imul   $0x66207475,0x70(%esi),%ebp
imul   $0x69207325,0x20(%ebp,%eiz,2),%ebp
jae    806c7b1 <_IO_stdin_used+0x70d>
popa
insb   (%dx),%es:(%edi)
jae    806c804 <_IO_stdin_used+0x760>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x75(%edi)
je     806c80e <_IO_stdin_used+0x76a>
jne    806c814 <_IO_stdin_used+0x770>
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    806c808 <_IO_stdin_used+0x764>
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %dl,%cs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %bl,0x46(%ebx)
dec    %ecx
dec    %esp
inc    %ebp
pop    %ebp
cs cs or %cs:(%eax),%al
add    %al,(%eax)
add    %dl,0x79(%edx,%esi,2)
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     806c804 <_IO_stdin_used+0x760>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     806c84d <_IO_stdin_used+0x7a9>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     806c85c <_IO_stdin_used+0x7b8>
popa
je     806c85b <_IO_stdin_used+0x7b7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x65(%ebx)
popa
jb     806c860 <_IO_stdin_used+0x7bc>
push   $0x726f6620
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x6e(%ecx)
and    %ah,0x61(%ebp)
arpl   %bp,0x20(%eax)
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %ch,0x72(%edi)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806c887 <_IO_stdin_used+0x7e3>
and    %ch,0x6e(%ecx)
jo     806c89d <_IO_stdin_used+0x7f9>
je     806c858 <_IO_stdin_used+0x7b4>
or     (%eax),%al
inc    %ebp
js     806c890 <_IO_stdin_used+0x7ec>
insl   (%dx),%es:(%edi)
jo     806c89e <_IO_stdin_used+0x7fa>
cmp    %gs:(%eax),%ah
and    $0x692d2073,%eax
and    %ah,(%edi)
push   $0x6f6c6c65
and    %dh,0x6f(%edi)
jb     806c8b2 <_IO_stdin_used+0x80e>
fs
daa
and    %ch,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
jne    806c87c <_IO_stdin_used+0x7d8>
push   $0x69616d20
outsb  %ds:(%esi),(%dx)
arpl   %cx,%cs:(%edx)
or     0x65(%edx),%dl
addr16
gs
js     806c8ce <_IO_stdin_used+0x82a>
and    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x6e(%ecx)
je     806c8d6 <_IO_stdin_used+0x832>
jb     806c8e3 <_IO_stdin_used+0x83f>
jb     806c8da <_IO_stdin_used+0x836>
je     806c8d8 <_IO_stdin_used+0x834>
je     806c8e2 <_IO_stdin_used+0x83e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%edx),%cl
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c45
sub    $0x65747865,%eax
outsb  %ds:(%esi),(%dx)
fs
gs
fs
sub    $0x65676572,%eax
js     806c907 <_IO_stdin_used+0x863>
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x6e(%ecx)
and    %ah,0x78(%ebp)
je     806c913 <_IO_stdin_used+0x86f>
outsb  %ds:(%esi),(%dx)
fs gs and %dh,%fs:%gs:0x65(%edx)
addr16 jne 806c924 <_IO_stdin_used+0x880>
popa
jb     806c8db <_IO_stdin_used+0x837>
gs
js     806c92e <_IO_stdin_used+0x88a>
jb     806c925 <_IO_stdin_used+0x881>
jae    806c935 <_IO_stdin_used+0x891>
imul   $0x52452820,0x6e(%edi),%ebp
inc    %ebp
sub    %ecx,(%edx)
and    %ah,(%eax)
sub    $0x2d202c46,%eax
sub    $0x65786966,%eax
fs
sub    $0x69727473,%eax
outsb  %ds:(%esi),(%dx)
addr16 jae 806c902 <_IO_stdin_used+0x85e>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    806c95c <_IO_stdin_used+0x8b8>
je     806c919 <_IO_stdin_used+0x875>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%esi)
ja     806c96c <_IO_stdin_used+0x8c8>
imul   $0x7065732d,0x65(%esi),%ebp
popa
jb     806c96b <_IO_stdin_used+0x8c7>
je     806c971 <_IO_stdin_used+0x8cd>
and    %ah,%fs:0x69(%esi)
js     806c977 <_IO_stdin_used+0x8d3>
and    %dh,%fs:0x74(%ebx)
jb     806c981 <_IO_stdin_used+0x8dd>
outsb  %ds:(%esi),(%dx)
addr16 jae 806c926 <_IO_stdin_used+0x882>
and    %ah,(%eax)
sub    $0x2d202c47,%eax
sub    $0x69736162,%eax
arpl   %bp,0x65676572
js     806c9a0 <_IO_stdin_used+0x8fc>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
bound  %esp,0x73(%ecx)
imul   $0x75676572,0x20(%ebx),%esp
insb   (%dx),%es:(%edi)
popa
jb     806c973 <_IO_stdin_used+0x8cf>
gs
js     806c9c6 <_IO_stdin_used+0x922>
jb     806c9bd <_IO_stdin_used+0x919>
jae    806c9cd <_IO_stdin_used+0x929>
imul   $0x52422820,0x6e(%edi),%ebp
inc    %ebp
sub    %ecx,(%edx)
and    %ah,(%eax)
sub    $0x2d202c50,%eax
sub    $0x6c726570,%eax
sub    $0x65676572,%eax
js     806c9e7 <_IO_stdin_used+0x943>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,0x20(%ecx)
push   %eax
gs
jb     806c9fd <_IO_stdin_used+0x959>
and    %dh,0x65(%edx)
addr16 jne 806ca03 <_IO_stdin_used+0x95f>
popa
jb     806c9ba <_IO_stdin_used+0x916>
gs
js     806ca0d <_IO_stdin_used+0x969>
jb     806ca04 <_IO_stdin_used+0x960>
jae    806ca14 <_IO_stdin_used+0x970>
imul   $0xa,0x6e(%edi),%ebp
and    %ah,(%eax)
sub    $0x2d202c65,%eax
sub    $0x65676572,%eax
js     806ca26 <_IO_stdin_used+0x982>
cmp    $0x54544150,%eax
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    806ca39 <_IO_stdin_used+0x995>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,0x6f(%esi)
jb     806c9f4 <_IO_stdin_used+0x950>
insl   (%dx),%es:(%edi)
popa
je     806ca3b <_IO_stdin_used+0x997>
push   $0xa676e69
and    %ah,(%eax)
sub    $0x2d202c66,%eax
sub    $0x656c6966,%eax
cmp    $0x454c4946,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x62(%edi)
je     806ca5e <_IO_stdin_used+0x9ba>
imul   $0x54544150,0x20(%esi),%ebp
inc    %ebp
push   %edx
dec    %esi
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ch,0x2d202c69
sub    $0x6f6e6769,%eax
jb     806ca85 <_IO_stdin_used+0x9e1>
sub    $0x65736163,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     806ca99 <_IO_stdin_used+0x9f5>
and    %ah,0x61(%ebx)
jae    806ca9e <_IO_stdin_used+0x9fa>
and    %ah,0x73(%ecx,%ebp,2)
je     806caa8 <_IO_stdin_used+0xa04>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    806ca51 <_IO_stdin_used+0x9ad>
and    %ah,(%eax)
sub    $0x2d202c77,%eax
sub    $0x64726f77,%eax
sub    $0x65676572,%eax
js     806caca <_IO_stdin_used+0xa26>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     806caca <_IO_stdin_used+0xa26>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
popa
je     806cadb <_IO_stdin_used+0xa37>
push   $0x6c6e6f20
jns    806ca9f <_IO_stdin_used+0x9fb>
ja     806cae9 <_IO_stdin_used+0xa45>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi)
jb     806caed <_IO_stdin_used+0xa49>
jae    806ca95 <_IO_stdin_used+0x9f1>
and    %ah,(%eax)
sub    $0x2d202c78,%eax
sub    $0x656e696c,%eax
sub    $0x65676572,%eax
js     806cb0e <_IO_stdin_used+0xa6a>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
jb     806cb0e <_IO_stdin_used+0xa6a>
and    %dl,%gs:0x41(%eax)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x20(%edi,%ebp,2)
insl   (%dx),%es:(%edi)
popa
je     806cb1f <_IO_stdin_used+0xa7b>
push   $0x6c6e6f20
jns    806cae3 <_IO_stdin_used+0xa3f>
ja     806cb2d <_IO_stdin_used+0xa89>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx,%ebp,2)
gs
jae    806cad9 <_IO_stdin_used+0xa35>
and    %ah,(%eax)
sub    $0x2d202c7a,%eax
sub    $0x6c6c756e,%eax
sub    $0x61746164,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20(%ecx)
fs
popa
je     806cb52 <_IO_stdin_used+0xaae>
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x6e(%ebp)
fs
jae    806cb1c <_IO_stdin_used+0xa78>
imul   $0x79622030,0x20(%esi),%ebp
je     806cb6a <_IO_stdin_used+0xac6>
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806cb2b <_IO_stdin_used+0xa87>
outsb  %ds:(%esi),(%dx)
gs
ja     806cb7b <_IO_stdin_used+0xad7>
imul   $0x4d0a000a,0x65(%esi),%ebp
imul   $0x616c6c65,0x63(%ebx),%esi
outsb  %ds:(%esi),(%dx)
outsl  %gs:(%esi),(%dx)
jne    806cb95 <_IO_stdin_used+0xaf1>
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c73,%eax
sub    $0x6d2d6f6e,%eax
gs
jae    806cba6 <_IO_stdin_used+0xb02>
popa
addr16
gs
jae    806cb58 <_IO_stdin_used+0xab4>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    806cbb7 <_IO_stdin_used+0xb13>
jo     806cbb4 <_IO_stdin_used+0xb10>
jb     806cbab <_IO_stdin_used+0xb07>
jae    806cbbb <_IO_stdin_used+0xb17>
and    %ah,0x72(%ebp)
jb     806cbbc <_IO_stdin_used+0xb18>
jb     806cb6f <_IO_stdin_used+0xacb>
insl   (%dx),%es:(%edi)
gs
jae    806cbc6 <_IO_stdin_used+0xb22>
popa
addr16
gs
jae    806cb62 <_IO_stdin_used+0xabe>
and    %ah,(%eax)
sub    $0x2d202c76,%eax
sub    $0x65766e69,%eax
jb     806cbda <_IO_stdin_used+0xb36>
sub    $0x6374616d,%eax
push   $0x20202020
and    %ah,(%eax)
and    %ah,(%eax)
jae    806cbdb <_IO_stdin_used+0xb37>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6e(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x6374616d,%eax
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x20200a73,0x65(%esi),%ebp
sub    $0x2d202c56,%eax
sub    $0x73726576,%eax
imul   $0x20202020,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x72657620,0x74(%esi),%ebp
jae    806cc1e <_IO_stdin_used+0xb7a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     806cc2b <_IO_stdin_used+0xb87>
popa
je     806cc2a <_IO_stdin_used+0xb86>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20202020,0x20(%edx,%ecx,1),%esi
and    %ch,0x6c65682d
jo     806cbfa <_IO_stdin_used+0xb56>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
jo     806cc5a <_IO_stdin_used+0xbb6>
popa
jns    806cc11 <_IO_stdin_used+0xb6d>
je     806cc5b <_IO_stdin_used+0xbb7>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20202020,0x20(%edx,%ecx,1),%esi
and    %ch,0x616d6d2d
jo     806cc31 <_IO_stdin_used+0xb8d>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x70(%ebp,%eiz,2)
jb     806cc8a <_IO_stdin_used+0xbe6>
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:0x6f(%esi)
sub    $0x203b706f,%eax
gs
jbe    806cca4 <_IO_stdin_used+0xc00>
imul   $0x20,0x73(%ebp),%esp
popa
and    %dh,0x61(%edi)
jb     806ccad <_IO_stdin_used+0xc09>
imul   $0x4f0a000a,0x67(%esi),%ebp
jne    806ccbc <_IO_stdin_used+0xc18>
jo     806ccbf <_IO_stdin_used+0xc1b>
je     806cc6c <_IO_stdin_used+0xbc8>
arpl   %bp,0x6e(%edi)
je     806ccc3 <_IO_stdin_used+0xc1f>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c6d,%eax
sub    $0x2d78616d,%eax
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     806cca4 <_IO_stdin_used+0xc00>
dec    %esi
push   %ebp
dec    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x74(%ebx)
outsl  %ds:(%esi),(%dx)
jo     806cc96 <_IO_stdin_used+0xbf2>
popa
data16
je     806ccdf <_IO_stdin_used+0xc3b>
jb     806cc9c <_IO_stdin_used+0xbf8>
dec    %esi
push   %ebp
dec    %ebp
and    %ch,0x61(%ebp)
je     806cce7 <_IO_stdin_used+0xc43>
push   $0x200a7365
and    %ch,0x2d202c62
sub    $0x65747962,%eax
sub    $0x7366666f,%eax
gs
je     806ccbc <_IO_stdin_used+0xc18>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806cd18 <_IO_stdin_used+0xc74>
imul   $0x65687420,0x74(%esi),%ebp
and    %ah,0x79(%edx)
je     806cd17 <_IO_stdin_used+0xc73>
and    %ch,0x66(%edi)
data16
jae    806cd1d <_IO_stdin_used+0xc79>
je     806ccda <_IO_stdin_used+0xc36>
ja     806cd25 <_IO_stdin_used+0xc81>
je     806cd26 <_IO_stdin_used+0xc82>
and    %ch,0x75(%edi)
je     806cd33 <_IO_stdin_used+0xc8f>
jne    806cd39 <_IO_stdin_used+0xc95>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806ccd6 <_IO_stdin_used+0xc32>
and    %ah,(%eax)
sub    $0x2d202c6e,%eax
sub    $0x656e696c,%eax
sub    $0x626d756e,%eax
gs
jb     806cd00 <_IO_stdin_used+0xc5c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806cd5c <_IO_stdin_used+0xcb8>
imul   $0x6e696c20,0x74(%esi),%ebp
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dh,0x69(%edi)
je     806cd66 <_IO_stdin_used+0xcc2>
and    %ch,0x75(%edi)
je     806cd73 <_IO_stdin_used+0xccf>
jne    806cd79 <_IO_stdin_used+0xcd5>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806cd16 <_IO_stdin_used+0xc72>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6e696c2d,%eax
gs
sub    $0x66667562,%eax
gs
jb     806cd85 <_IO_stdin_used+0xce1>
and    %ah,%fs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%esi)
jne    806cd9f <_IO_stdin_used+0xcfb>
push   $0x74756f20
jo     806cda8 <_IO_stdin_used+0xd04>
je     806cd55 <_IO_stdin_used+0xcb1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%ebp)
gs
jb     806cdb6 <_IO_stdin_used+0xd12>
and    %ch,0x6e(%ecx,%ebp,2)
or     %gs:(%eax),%ah
and    %ch,0x2d202c48
sub    $0x68746977,%eax
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x72(%eax)
imul   $0x65687420,0x74(%esi),%ebp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     806cd97 <_IO_stdin_used+0xcf3>
gs
popa
arpl   %bp,0x20(%eax)
insl   (%dx),%es:(%edi)
popa
je     806cde3 <_IO_stdin_used+0xd3f>
push   $0x2d20200a
push   $0x2d2d202c
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x656c6966,%eax
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ebx)
jo     806ce12 <_IO_stdin_used+0xd6e>
jb     806ce09 <_IO_stdin_used+0xd65>
jae    806ce19 <_IO_stdin_used+0xd75>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x72(%eax)
imul   $0x6e6f,%gs:0x20(%eax),%di
and    %ch,0x75(%edi)
je     806ce33 <_IO_stdin_used+0xd8f>
jne    806ce39 <_IO_stdin_used+0xd95>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x62616c2d
gs
insb   (%dx),%es:(%edi)
cmp    $0x4542414c,%eax
dec    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %cl,%gs:0x42(%ecx,%eax,2)
inc    %ebp
dec    %esp
and    %ah,0x73(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806ce5f <_IO_stdin_used+0xdbb>
and    %ch,0x6e(%ecx)
jo     806ce75 <_IO_stdin_used+0xdd1>
je     806ce22 <_IO_stdin_used+0xd7e>
imul   $0x616e,0x20(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x72(%eax)
imul   $0x2000,%gs:0xa(%eax),%di
and    %ch,0x2d202c6f
sub    $0x796c6e6f,%eax
sub    $0x6374616d,%eax
push   $0x20676e69
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    806ce9a <_IO_stdin_used+0xdf6>
outsl  %ds:(%esi),(%dx)
ja     806ce55 <_IO_stdin_used+0xdb1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    806ce5a <_IO_stdin_used+0xdb6>
je     806cea4 <_IO_stdin_used+0xe00>
and    %dh,%gs:0x61(%eax)
jb     806ceb6 <_IO_stdin_used+0xe12>
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
imul   $0x74616d20,0x65(%esi),%ebp
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
and    %dl,0x41(%bx,%si)
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ch,0x2d202c71
sub    $0x65697571,%eax
je     806ce98 <_IO_stdin_used+0xdf4>
and    %ch,0x6c69732d
outsb  %gs:(%esi),(%dx)
je     806ce96 <_IO_stdin_used+0xdf2>
and    %ah,(%eax)
and    %ah,(%eax)
jae    806cef1 <_IO_stdin_used+0xe4d>
jo     806ceee <_IO_stdin_used+0xe4a>
jb     806cee5 <_IO_stdin_used+0xe41>
jae    806cef5 <_IO_stdin_used+0xe51>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
jb     806cef8 <_IO_stdin_used+0xe54>
popa
insb   (%dx),%es:(%edi)
and    %ch,0x75(%edi)
je     806cf02 <_IO_stdin_used+0xe5e>
jne    806cf08 <_IO_stdin_used+0xe64>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6e69622d
popa
jb     806cf1c <_IO_stdin_used+0xe78>
sub    $0x656c6966,%eax
jae    806cee7 <_IO_stdin_used+0xe43>
push   %esp
pop    %ecx
push   %eax
inc    %ebp
and    %ah,(%eax)
and    %ah,0x73(%ecx)
jae    806cf2a <_IO_stdin_used+0xe86>
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax,%ebp,2)
je     806cedd <_IO_stdin_used+0xe39>
bound  %ebp,0x6e(%ecx)
popa
jb     806cf3c <_IO_stdin_used+0xe98>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    806ceea <_IO_stdin_used+0xe46>
popa
jb     806cf32 <_IO_stdin_used+0xe8e>
and    %dl,0x50(%ecx,%ebx,2)
inc    %ebp
cmp    (%edx),%ecx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   %esp
pop    %ecx
push   %eax
inc    %ebp
and    %ch,0x73(%ecx)
and    %ah,(%edi)
bound  %ebp,0x6e(%ecx)
popa
jb     806cf78 <_IO_stdin_used+0xed4>
daa
sub    $0x20,%al
daa
je     806cf6a <_IO_stdin_used+0xec6>
js     806cf7b <_IO_stdin_used+0xed7>
daa
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806cf2d <_IO_stdin_used+0xe89>
daa
ja     806cf79 <_IO_stdin_used+0xed5>
je     806cf7a <_IO_stdin_used+0xed6>
outsl  %ds:(%esi),(%dx)
jne    806cf89 <_IO_stdin_used+0xee5>
sub    $0x6374616d,%eax
push   $0x20200a27
sub    $0x2d202c61,%eax
sub    $0x74786574,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
jno    806cfb1 <_IO_stdin_used+0xf0d>
imul   $0x746e656c,0x61(%esi),%esi
and    %dh,0x20(%edi,%ebp,2)
sub    $0x6e69622d,%eax
popa
jb     806cfc8 <_IO_stdin_used+0xf24>
sub    $0x656c6966,%eax
jae    806cf93 <_IO_stdin_used+0xeef>
je     806cfbd <_IO_stdin_used+0xf19>
js     806cfce <_IO_stdin_used+0xf2a>
or     (%eax),%al
and    %ah,(%eax)
sub    $0x20202049,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x71(%ebp)
jne    806cfe5 <_IO_stdin_used+0xf41>
jbe    806cfdf <_IO_stdin_used+0xf3b>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     806cfa3 <_IO_stdin_used+0xeff>
je     806cff4 <_IO_stdin_used+0xf50>
and    %ch,0x6e69622d
popa
jb     806d007 <_IO_stdin_used+0xf63>
sub    $0x656c6966,%eax
jae    806cfd2 <_IO_stdin_used+0xf2e>
ja     806d000 <_IO_stdin_used+0xf5c>
je     806d001 <_IO_stdin_used+0xf5d>
outsl  %ds:(%esi),(%dx)
jne    806d010 <_IO_stdin_used+0xf6c>
sub    $0x6374616d,%eax
push   $0x2d20200a
fs
sub    $0x20,%al
sub    $0x7269642d,%eax
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x5443413d,0x73(%ebp),%esp
dec    %ecx
dec    %edi
dec    %esi
and    %ah,(%eax)
push   $0x7420776f
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x20200a3b,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ecx
inc    %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
jb     806d068 <_IO_stdin_used+0xfc4>
popa
fs
daa
sub    $0x20,%al
daa
jb     806d070 <_IO_stdin_used+0xfcc>
arpl   %si,0x72(%ebp)
jae    806d075 <_IO_stdin_used+0xfd1>
daa
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806d036 <_IO_stdin_used+0xf92>
daa
jae    806d084 <_IO_stdin_used+0xfe0>
imul   $0x2d20200a,0x27(%eax),%esi
inc    %esp
sub    $0x20,%al
sub    $0x7665642d,%eax
imul   $0x43413d73,0x65(%ebx),%esp
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
push   $0x7420776f
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x76(%ebp,%eiz,2)
imul   $0x46202c73,0x65(%ebx),%esp
dec    %ecx
inc    %esi
dec    %edi
jae    806d076 <_IO_stdin_used+0xfd2>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     806d0d4 <_IO_stdin_used+0x1030>
cmp    (%edx),%ecx
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
inc    %ecx
inc    %ebx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
jb     806d0f1 <_IO_stdin_used+0x104d>
popa
fs
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
jae    806d101 <_IO_stdin_used+0x105d>
imul   $0x2d20200a,0x27(%eax),%esi
jb     806d0cb <_IO_stdin_used+0x1027>
and    %ch,0x6365722d
jne    806d119 <_IO_stdin_used+0x1075>
jae    806d112 <_IO_stdin_used+0x106e>
jbe    806d110 <_IO_stdin_used+0x106c>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6b(%ecx,%ebp,2)
and    %ch,%gs:0x7269642d
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x6365723d,0x73(%ebp),%esp
jne    806d140 <_IO_stdin_used+0x109c>
jae    806d135 <_IO_stdin_used+0x1091>
or     (%eax),%ah
and    %ch,0x2d202c52
sub    $0x65726564,%eax
data16
gs
jb     806d146 <_IO_stdin_used+0x10a2>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
jb     806d14c <_IO_stdin_used+0x10a8>
arpl   %si,0x72(%ebp)
jae    806d155 <_IO_stdin_used+0x10b1>
jbe    806d153 <_IO_stdin_used+0x10af>
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x65736977,0x65(%ebx),%ebp
sub    $0x20,%al
bound  %esi,0x74(%ebp)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806d125 <_IO_stdin_used+0x1081>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0xa73,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x636e692d,%eax
insb   (%dx),%es:(%edi)
jne    806d186 <_IO_stdin_used+0x10e2>
gs
cmp    $0x454c4946,%eax
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
jae    806d199 <_IO_stdin_used+0x10f5>
popa
jb     806d19a <_IO_stdin_used+0x10f6>
push   $0x6c6e6f20
jns    806d15e <_IO_stdin_used+0x10ba>
imul   $0x7420,0x73(%ebp,%eiz,2),%bp
push   $0x6d207461
popa
je     806d1b0 <_IO_stdin_used+0x110c>
push   $0x4c494620
inc    %ebp
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    806d1ce <_IO_stdin_used+0x112a>
gs
cmp    $0x454c4946,%eax
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
jae    806d1e7 <_IO_stdin_used+0x1143>
imul   $0x656c6966,0x20(%eax),%esi
jae    806d1a5 <_IO_stdin_used+0x1101>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
imul   $0x74616d20,0x73(%ebp),%esp
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
and    %al,0x49(%bp)
dec    %esp
inc    %ebp
pop    %edi
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    806d21d <_IO_stdin_used+0x1179>
gs
sub    $0x6d6f7266,%eax
cmp    $0x454c4946,%eax
and    %ah,(%eax)
and    %dh,0x6b(%ebx)
imul   $0x656c6966,0x20(%eax),%esi
jae    806d1f2 <_IO_stdin_used+0x114e>
insl   (%dx),%es:(%edi)
popa
je     806d239 <_IO_stdin_used+0x1195>
push   $0x20676e69
popa
outsb  %ds:(%esi),(%dx)
jns    806d1ff <_IO_stdin_used+0x115b>
imul   $0x6170,0x20(%ebp,%eiz,2),%bp
je     806d25c <_IO_stdin_used+0x11b8>
gs
jb     806d259 <_IO_stdin_used+0x11b5>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x6378652d
insb   (%dx),%es:(%edi)
jne    806d268 <_IO_stdin_used+0x11c4>
gs
sub    $0x3d726964,%eax
push   %eax
inc    %ecx
push   %esp
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %ah,(%eax)
imul   $0x726f7463,%fs:0x65(%edx),%esi
imul   $0x61687420,0x73(%ebp),%esp
je     806d244 <_IO_stdin_used+0x11a0>
insl   (%dx),%es:(%edi)
popa
je     806d28b <_IO_stdin_used+0x11e7>
push   $0x54415020
push   %esp
inc    %ebp
push   %edx
dec    %esi
and    %dh,0x69(%edi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x65(%edx)
and    %dh,0x6b(%ebx)
imul   $0xa2e6465,0x70(%eax),%esi
add    %ah,(%eax)
and    %ch,0x2d202c4c
sub    $0x656c6966,%eax
jae    806d27f <_IO_stdin_used+0x11db>
ja     806d2bd <_IO_stdin_used+0x1219>
je     806d2be <_IO_stdin_used+0x121a>
outsl  %ds:(%esi),(%dx)
jne    806d2cd <_IO_stdin_used+0x1229>
sub    $0x6374616d,%eax
push   $0x72702020
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    806d28c <_IO_stdin_used+0x11e8>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    806d292 <_IO_stdin_used+0x11ee>
outsl  %ds:(%esi),(%dx)
data16
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    806d29b <_IO_stdin_used+0x11f7>
arpl   %bp,0x6e(%edi)
je     806d2e1 <_IO_stdin_used+0x123d>
imul   $0x6e20676e,0x69(%esi),%ebp
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     806d2f0 <_IO_stdin_used+0x124c>
push   $0x2d20200a
insb   (%dx),%es:(%edi)
sub    $0x20,%al
sub    $0x6c69662d,%eax
gs
jae    806d2ca <_IO_stdin_used+0x1226>
ja     806d308 <_IO_stdin_used+0x1264>
je     806d309 <_IO_stdin_used+0x1265>
sub    $0x6374616d,%eax
push   $0x20207365
jo     806d31f <_IO_stdin_used+0x127b>
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    806d2d6 <_IO_stdin_used+0x1232>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    806d2dc <_IO_stdin_used+0x1238>
outsl  %ds:(%esi),(%dx)
data16
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    806d2e5 <_IO_stdin_used+0x1241>
arpl   %bp,0x6e(%edi)
je     806d32b <_IO_stdin_used+0x1287>
imul   $0x6d20676e,0x69(%esi),%ebp
popa
je     806d337 <_IO_stdin_used+0x1293>
push   $0x200a7365
and    %ch,0x2d202c63
sub    $0x6e756f63,%eax
je     806d306 <_IO_stdin_used+0x1262>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806d368 <_IO_stdin_used+0x12c4>
imul   $0x6c6e6f20,0x74(%esi),%ebp
jns    806d31f <_IO_stdin_used+0x127b>
popa
and    %ah,0x6f(%ebx)
jne    806d373 <_IO_stdin_used+0x12cf>
je     806d327 <_IO_stdin_used+0x1283>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x61(%ebp)
je     806d371 <_IO_stdin_used+0x12cd>
push   $0x20676e69
insb   (%dx),%es:(%edi)
imul   $0x65702073,0x65(%esi),%ebp
jb     806d33d <_IO_stdin_used+0x1299>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
or     (%eax),%ah
and    %ch,0x2d202c54
sub    $0x74696e69,%eax
imul   $0x6261742d,0x6c(%ecx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x61(%ebp)
imul   $0x74,0x20(%ebp),%esp
popa
bound  %esi,0x20(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x20707520,0x65(%esi),%ebp
sub    %ch,0x66(%ecx)
and    %ch,0x65(%esi)
gs fs gs sub %ecx,%fs:%gs:(%edx)
and    %ah,(%eax)
sub    $0x2d202c5a,%eax
sub    $0x6c6c756e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806d3ec <_IO_stdin_used+0x1348>
imul   $0x62203020,0x74(%esi),%ebp
jns    806d3f7 <_IO_stdin_used+0x1353>
and    %ah,%gs:0x66(%ecx)
je     806d3ee <_IO_stdin_used+0x134a>
jb     806d3ab <_IO_stdin_used+0x1307>
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
or     0x6f(%ebx),%al
outsb  %ds:(%esi),(%dx)
je     806d403 <_IO_stdin_used+0x135f>
js     806d414 <_IO_stdin_used+0x1370>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806d418 <_IO_stdin_used+0x1374>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
cmp    (%edx),%cl
and    %ah,(%eax)
sub    $0x2d202c42,%eax
sub    $0x6f666562,%eax
jb     806d41d <_IO_stdin_used+0x1379>
sub    $0x746e6f63,%eax
gs
js     806d434 <_IO_stdin_used+0x1390>
cmp    $0x204d554e,%eax
and    %dh,0x72(%eax)
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806d3f6 <_IO_stdin_used+0x1352>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x61(%ebp,%eiz,2)
imul   $0x6e6f6320,%fs:0x67(%esi),%ebp
je     806d44b <_IO_stdin_used+0x13a7>
js     806d45c <_IO_stdin_used+0x13b8>
or     (%eax),%ah
and    %ch,0x2d202c41
sub    $0x65746661,%eax
jb     806d424 <_IO_stdin_used+0x1380>
arpl   %bp,0x6e(%edi)
je     806d461 <_IO_stdin_used+0x13bd>
js     806d472 <_IO_stdin_used+0x13ce>
cmp    $0x204d554e,%eax
and    %ah,(%eax)
jo     806d479 <_IO_stdin_used+0x13d5>
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806d435 <_IO_stdin_used+0x1391>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%edx,%esi,2)
imul   $0x6f632067,0x6e(%ecx,%ebp,2),%ebp
outsb  %ds:(%esi),(%dx)
je     806d48b <_IO_stdin_used+0x13e7>
js     806d49c <_IO_stdin_used+0x13f8>
or     (%eax),%ah
and    %ch,0x2d202c43
sub    $0x746e6f63,%eax
gs
js     806d4ac <_IO_stdin_used+0x1408>
cmp    $0x204d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jo     806d4b9 <_IO_stdin_used+0x1415>
imul   $0x4d554e20,0x74(%esi),%ebp
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    806d475 <_IO_stdin_used+0x13d1>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x75(%edi)
je     806d4cc <_IO_stdin_used+0x1428>
jne    806d4d2 <_IO_stdin_used+0x142e>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     806d4c9 <_IO_stdin_used+0x1425>
js     806d4da <_IO_stdin_used+0x1436>
or     (%eax),%al
and    %ah,(%eax)
sub    $0x204d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6e6f632d
je     806d4f8 <_IO_stdin_used+0x1454>
js     806d509 <_IO_stdin_used+0x1465>
cmp    $0xa4d554e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c6f632d,%eax
outsl  %ds:(%esi),(%dx)
jb     806d503 <_IO_stdin_used+0x145f>
cmp    $0x4e454857,%eax
pop    %ebp
sub    $0xa,%al
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c6f632d,%eax
outsl  %ds:(%esi),(%dx)
jne    806d530 <_IO_stdin_used+0x148c>
pop    %ebx
cmp    $0x4e454857,%eax
pop    %ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %ch,%gs:0x61(%ebp)
jb     806d53f <_IO_stdin_used+0x149b>
gs
jb     806d54a <_IO_stdin_used+0x14a6>
and    %dh,0x20(%edi,%ebp,2)
push   $0x6c686769
imul   $0x68742074,0x68(%edi),%esp
and    %ch,%gs:0x61(%ebp)
je     806d550 <_IO_stdin_used+0x14ac>
push   $0x20676e69
jae    806d568 <_IO_stdin_used+0x14c4>
jb     806d55f <_IO_stdin_used+0x14bb>
outsb  %ds:(%esi),(%dx)
addr16 jae 806d535 <_IO_stdin_used+0x1491>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dl,0x48(%edi)
inc    %ebp
dec    %esi
and    %ch,0x73(%ecx)
and    %ah,(%edi)
popa
insb   (%dx),%es:(%edi)
ja     806d585 <_IO_stdin_used+0x14e1>
jns    806d599 <_IO_stdin_used+0x14f5>
daa
sub    $0x20,%al
daa
outsb  %ds:(%esi),(%dx)
gs
jbe    806d593 <_IO_stdin_used+0x14ef>
jb     806d557 <_IO_stdin_used+0x14b3>
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     806d555 <_IO_stdin_used+0x14b1>
daa
popa
jne    806d5ad <_IO_stdin_used+0x1509>
outsl  %ds:(%esi),(%dx)
daa
or     (%eax),%ah
and    %ch,0x2d202c55
sub    $0x616e6962,%eax
jb     806d5c3 <_IO_stdin_used+0x151f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     806d57f <_IO_stdin_used+0x14db>
jae    806d5d5 <_IO_stdin_used+0x1531>
jb     806d5cc <_IO_stdin_used+0x1528>
jo     806d585 <_IO_stdin_used+0x14e1>
inc    %ebx
push   %edx
and    %ah,0x68(%ebx)
popa
jb     806d5ce <_IO_stdin_used+0x152a>
arpl   %si,0x72(%ebp,%eiz,2)
jae    806d593 <_IO_stdin_used+0x14ef>
popa
je     806d596 <_IO_stdin_used+0x14f2>
inc    %ebp
dec    %edi
dec    %esp
and    %ch,(%eax)
dec    %ebp
push   %ebx
inc    %esp
dec    %edi
push   %ebx
das
push   %edi
imul   $0x2973776f,0x64(%esi),%ebp
or     (%eax),%ah
and    %ch,0x2d202c75
sub    $0x78696e75,%eax
sub    $0x65747962,%eax
sub    $0x7366666f,%eax
gs
je     806d616 <_IO_stdin_used+0x1572>
and    %ah,(%eax)
and    %dh,0x65(%edx)
jo     806d619 <_IO_stdin_used+0x1575>
jb     806d620 <_IO_stdin_used+0x157c>
and    %ch,0x66(%edi)
data16
jae    806d617 <_IO_stdin_used+0x1573>
je     806d627 <_IO_stdin_used+0x1583>
and    %ah,0x73(%ecx)
and    %ch,0x66(%ecx)
and    %al,0x52(%ebx)
jae    806d5df <_IO_stdin_used+0x153b>
ja     806d626 <_IO_stdin_used+0x1582>
jb     806d628 <_IO_stdin_used+0x1584>
and    %ch,0x6f(%esi)
je     806d5e8 <_IO_stdin_used+0x1544>
je     806d632 <_IO_stdin_used+0x158e>
gs
jb     806d632 <_IO_stdin_used+0x158e>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,(%eax)
dec    %ebp
push   %ebx
inc    %esp
dec    %edi
push   %ebx
das
push   %edi
imul   $0x2973776f,0x64(%esi),%ebp
or     (%edx),%cl
add    %dl,0x68(%edi)
outsb  %gs:(%esi),(%dx)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
and    %ch,0x73(%ecx)
and    %ch,0x6572202c
popa
and    %dh,%fs:0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     806d67d <_IO_stdin_used+0x15d9>
and    %ch,0x6e(%ecx)
jo     806d693 <_IO_stdin_used+0x15ef>
je     806d64e <_IO_stdin_used+0x15aa>
and    %ah,(%eax)
push   %edi
imul   $0x46206f6e,0x20(%eax,%ebp,2),%esi
dec    %ecx
dec    %esp
inc    %ebp
sub    $0x20,%al
jb     806d697 <_IO_stdin_used+0x15f3>
popa
and    %ch,%fs:(%esi)
and    %ch,0x66(%ecx)
and    %ah,0x20(%ecx)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
sub    $0x656e696c,%eax
or     0x73692072,%ch
and    %ah,0x69(%edi)
jbe    806d6b8 <_IO_stdin_used+0x1614>
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
sub    $0x68746f20,%eax
gs
jb     806d6d5 <_IO_stdin_used+0x1631>
imul   $0x4920202e,0x65(%ebx),%esi
data16
and    %ah,0x65(%esi)
ja     806d6d0 <_IO_stdin_used+0x162c>
jb     806d68d <_IO_stdin_used+0x15e9>
je     806d6d7 <_IO_stdin_used+0x1633>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%edi,%esi,2)
and    %al,0x49(%esi)
dec    %esp
inc    %ebp
jae    806d69c <_IO_stdin_used+0x15f8>
popa
jb     806d6e4 <_IO_stdin_used+0x1640>
and    %ah,0x69(%edi)
jbe    806d6e9 <_IO_stdin_used+0x1645>
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
popa
jae    806d6fd <_IO_stdin_used+0x1659>
jne    806d6f9 <_IO_stdin_used+0x1655>
and    %ch,%gs:0x450a2e68
js     806d6fe <_IO_stdin_used+0x165a>
je     806d6b7 <_IO_stdin_used+0x1613>
jae    806d70d <_IO_stdin_used+0x1669>
popa
je     806d711 <_IO_stdin_used+0x166d>
jae    806d6be <_IO_stdin_used+0x161a>
imul   $0x66692030,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
jns    806d6ca <_IO_stdin_used+0x1626>
insb   (%dx),%es:(%edi)
imul   $0x20736920,0x65(%esi),%ebp
jae    806d719 <_IO_stdin_used+0x1675>
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x64(%ebp,%eiz,2)
sub    $0x20,%al
xor    %esp,(%eax)
outsl  %ds:(%esi),(%dx)
je     806d729 <_IO_stdin_used+0x1685>
gs
jb     806d73b <_IO_stdin_used+0x1697>
imul   $0x66690a3b,0x65(%ebx),%esi
and    %ah,0x6e(%ecx)
jns    806d6f0 <_IO_stdin_used+0x164c>
gs
jb     806d745 <_IO_stdin_used+0x16a1>
outsl  %ds:(%esi),(%dx)
jb     806d6f6 <_IO_stdin_used+0x1652>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x75(%ebx)
jb     806d74f <_IO_stdin_used+0x16ab>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x73692071
and    %ch,0x6f(%esi)
je     806d70b <_IO_stdin_used+0x1667>
imul   $0x74202c6e,0x65(%bp),%esi
push   $0x78652065
imul   $0x75746174,0x73(%eax,%eiz,1),%esi
jae    806d722 <_IO_stdin_used+0x167e>
imul   $0xa2e32,0x20(%ebx),%esi
add    %al,(%eax)
add    %ch,0x74(%eax)
je     806d780 <_IO_stdin_used+0x16dc>
cmp    (%edi),%ch
das
ja     806d78c <_IO_stdin_used+0x16e8>
ja     806d745 <_IO_stdin_used+0x16a1>
outsb  %ds:(%si),(%dx)
jne    806d749 <_IO_stdin_used+0x16a5>
outsl  %ds:(%esi),(%dx)
jb     806d785 <_IO_stdin_used+0x16e1>
das
jae    806d790 <_IO_stdin_used+0x16ec>
data16
je     806d79b <_IO_stdin_used+0x16f7>
popa
jb     806d78c <_IO_stdin_used+0x16e8>
das
addr16 jb 806d790 <_IO_stdin_used+0x16ec>
jo     806d75c <_IO_stdin_used+0x16b8>
add    %al,(%eax)
add    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     806d797 <_IO_stdin_used+0x16f3>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     806d75d <_IO_stdin_used+0x16b9>
jne    806d7b2 <_IO_stdin_used+0x170e>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     806d7c3 <_IO_stdin_used+0x171f>
popa
jb     806d7b4 <_IO_stdin_used+0x1710>
cmp    (%eax),%ah
cmp    $0x68,%al
je     806d7c9 <_IO_stdin_used+0x1725>
jo     806d791 <_IO_stdin_used+0x16ed>
das
das
ja     806d7d2 <_IO_stdin_used+0x172e>
ja     806d78b <_IO_stdin_used+0x16e7>
outsb  %ds:(%si),(%dx)
jne    806d78f <_IO_stdin_used+0x16eb>
outsl  %ds:(%esi),(%dx)
jb     806d7cb <_IO_stdin_used+0x1727>
das
addr16
gs
je     806d7d1 <_IO_stdin_used+0x172d>
gs
insb   (%dx),%es:(%edi)
jo     806d79c <_IO_stdin_used+0x16f8>
or     %ds:(%eax),%al
je     806d7da <_IO_stdin_used+0x1736>
and    %ch,%gs:0x616d6d2d
jo     806d79b <_IO_stdin_used+0x16f7>
outsl  %ds:(%esi),(%dx)
jo     806d7f2 <_IO_stdin_used+0x174e>
imul   $0x73616820,0x6e(%edi),%ebp
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
sub    $0x7320706f,%eax
imul   $0x30322065,0x63(%esi),%ebp
xor    %esi,(%eax)
add    %al,(%eax)
add    %ch,0x74(%edi)
push   $0x2c737265
and    %dh,0x65(%ebx)
and    %bh,%gs:(%eax,%ebp,2)
je     806d824 <_IO_stdin_used+0x1780>
jo     806d7ec <_IO_stdin_used+0x1748>
das
das
imul   $0x672e7673,0x2e(%si),%esi
outsb  %ds:(%esi),(%dx)
jne    806d7ed <_IO_stdin_used+0x1749>
outsl  %ds:(%esi),(%dx)
jb     806d829 <_IO_stdin_used+0x1785>
das
arpl   %sp,0x69(%edi)
je     806d7f7 <_IO_stdin_used+0x1753>
addr16 jb 806d830 <_IO_stdin_used+0x178c>
jo     806d7fb <_IO_stdin_used+0x1757>
imul   $0x65657274,0x2f(%si),%esi
das
inc    %ecx
push   %ebp
push   %esp
dec    %eax
dec    %edi
push   %edx
push   %ebx
add    %al,%ds:(%eax)
jb     806d7d5 <_IO_stdin_used+0x1731>
add    $0x8,%al
jmp    806d7de <_IO_stdin_used+0x173a>
add    $0x8,%al
jp     806d7e2 <_IO_stdin_used+0x173e>
add    $0x8,%al
jge    806d7e4 <_IO_stdin_used+0x1740>
add    $0x8,%al
adc    %eax,%edi
add    $0x8,%al
jb     806d7e9 <_IO_stdin_used+0x1745>
add    $0x8,%al
jb     806d7ed <_IO_stdin_used+0x1749>
add    $0x8,%al
adc    %eax,%edi
add    $0x8,%al
adc    %esi,%edi
add    $0x8,%al
jb     806d7f9 <_IO_stdin_used+0x1755>
add    $0x8,%al
adc    %eax,%edi
add    $0x8,%al
jge    806d804 <_IO_stdin_used+0x1760>
add    $0x8,%al
add    %esi,%eax
add    $0x8,%al
adc    %esi,%edi
add    $0x8,%al
add    %esi,%eax
add    $0x8,%al
nop
mov    %al,0xac940804
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
jno    806d8ce <_IO_stdin_used+0x182a>
add    $0x8,%al
pop    %ebp
lods   %ds:(%esi),%al
add    $0x8,%al
dec    %edx
lods   %ds:(%esi),%al
add    $0x8,%al
sbb    $0xe0804ac,%eax
lods   %ds:(%esi),%al
add    $0x8,%al
ljmp   *-0x540ff7fc(%ebx)
add    $0x8,%al
fldcw  -0x5bfcf7fc(%ebx)
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
lret   $0x4ab
or     %dl,-0x536bf7fc(%esp,%ebp,4)
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
mov    $0x940804ab,%ebx
lods   %ds:(%esi),%al
add    $0x8,%al
cmpsl  %es:(%edi),%ds:(%esi)
mov    %eax,0xac940804
add    $0x8,%al
lods   %ds:(%esi),%al
stos   %eax,%es:(%edi)
add    $0x8,%al
nop
mov    %al,0xab9d0804
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
mov    -0x536bf7fc(%ebx),%gs
add    $0x8,%al
jg     806d931 <_IO_stdin_used+0x188d>
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
fsubl  -0x548ff7fc(%ebx)
add    $0x8,%al
popa
stos   %eax,%es:(%edi)
add    $0x8,%al
or     -0x5549f7fc(%ebx),%ch
add    $0x8,%al
xlat   %ds:(%ebx)
test   $0xac940804,%eax
add    $0x8,%al
shrb   $0x4,-0x564ef7fc(%ecx)
or     %dl,-0x536bf7fc(%esp,%ebp,4)
add    $0x8,%al
mov    %al,0x330804a9
test   $0xa9240804,%eax
add    $0x8,%al
adc    $0x940804a9,%eax
lods   %ds:(%esi),%al
add    $0x8,%al
cld
test   $0x4,%al
or     %dh,-0x12f7fb5d(%ecx)
test   $0x4,%al
or     %dl,-0x5d6ff7fc(%esp,%ebp,4)
add    $0x8,%al
movsl  %ds:(%esi),%es:(%edi)
test   $0x4,%al
or     %dl,-0x78f7fb58(%esi)
test   $0x4,%al
or     %dh,0x7b0804a9(%ecx)
test   $0x4,%al
or     %dl,-0x536bf7fc(%esp,%ebp,4)
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
xchg   %eax,%esp
lods   %ds:(%esi),%al
add    $0x8,%al
dec    %esi
test   $0x4,%al
or     %bl,-0x59(%ecx)
add    $0x8,%al
sbb    -0x58e5f7fc(%edi),%ah
add    $0x8,%al
test   $0x9a0804a6,%eax
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x8,%al
mov    -0x59a4f7fc(%esi),%esp
add    $0x8,%al
test   %ebp,0x4a8b408(%esp,%eax,1)
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
xor    $0xc4,%al
push   %es
or     %ch,%ah
les    (%esi),%eax
or     %bh,(%ecx)
les    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %dh,%ah
les    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edi)
add    %al,(%eax)
add    %eax,%ebp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebp)
add    %al,(%eax)
adc    %eax,%ebp
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
push   %ds
lds    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
sub    $0xc5,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
cmp    %al,%ch
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,(%eax)
inc    %esi
lds    (%esi),%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%edx)
add    %al,(%eax)
push   %ebp
lds    (%esi),%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x62000000(%eax)
lds    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
dec    %ebp
lds    (%esi),%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ebx)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
lds    (%esi),%eax
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x74000000(%ecx)
lds    (%esi),%eax
or     %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x58000000(%ecx)
ret
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
jnp    806daf7 <_IO_stdin_used+0x1a53>
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %dl,-0x3c(%edi)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax,%eax,1)
add    %al,0x10806c5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x75000000(%ebx)
lds    (%esi),%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x3a680000(%eax,%eax,1)
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x5c000000(%edi)
lds    (%esi),%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
test   $0x806c5,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %bh,0x806(%ebp,%eax,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
dec    %esp
add    %al,(%eax)
add    %bh,(%edi)
movb   $0x8,(%esi)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
rol    %ch
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x1080744(%eax)
add    %al,(%eax)
add    %dl,%ch
lds    (%esi),%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x23000000(%edx)
lds    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
jmp    80ee2ba <_end+0x79226>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dh,%ch
lds    (%esi),%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,-0x5000000(%esi)
lds    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x9000000(%ebp)
movb   $0x8,(%esi)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,0x806c6
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%eax)
add    %al,(%eax)
and    %eax,%esi
push   %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
sub    %esi,%eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x30000000(%ecx)
movb   $0x8,(%esi)
push   $0x3c000000
movb   $0x8,(%esi)
mov    %al,(%eax)
add    %al,(%eax)
dec    %edi
movb   $0x8,(%esi)
jae    806dc8e <_IO_stdin_used+0x1bea>
add    %al,(%eax)
pop    %ebx
movb   $0x8,(%esi)
pop    %edx
add    %al,(%eax)
add    %ah,-0x3a(%eax)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
push   $0xffffffc6
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
js     806dc88 <_IO_stdin_used+0x1be4>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
mov    %dh,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
jle    806dca8 <_IO_stdin_used+0x1c04>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
cli
les    (%esi),%eax
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
xchg   %eax,%esp
movb   $0x8,(%esi)
jbe    806dd0e <_IO_stdin_used+0x1c6a>
add    %al,(%eax)
mov    0x806c6,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
push   %eax
lds    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ecx)
add    %al,(%eax)
jne    806dcf6 <_IO_stdin_used+0x1c52>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
test   $0xc6,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
mov    $0x806c6,%edx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
ret    $0x6c6
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
rol    %dh
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
inc    %ecx
cmp    0x3a(%edx),%al
inc    %ebx
cmp    0x45(%edx,%edi,1),%al
inc    %esi
inc    %edi
dec    %eax
dec    %ecx
push   %eax
push   %esp
push   %ebp
push   %esi
pop    %eax
cmp    0x62(%ecx),%ah
arpl   %sp,0x65(%edx,%edi,1)
cmp    0x3a(%esi),%ah
push   $0x6d6c4c69
cmp    0x6f(%esi),%ch
jno    806de22 <_IO_stdin_used+0x1d7e>
jb     806de45 <_IO_stdin_used+0x1da1>
jne    806de4a <_IO_stdin_used+0x1da6>
ja     806de4e <_IO_stdin_used+0x1daa>
jns    806de32 <_IO_stdin_used+0x1d8e>
jp     806ddda <_IO_stdin_used+0x1d36>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %ah,%al
push   %es
or     %bl,0x42(%eax)
pop    %es
or     %al,-0x23f7fb36(%eax)
movb   $0x8,(%esi)
pop    %eax
inc    %edx
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %bl,%bh
movb   $0x8,(%esi)
push   %esp
inc    %edx
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%dl
movb   $0x8,(%esi)
push   %eax
inc    %edx
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%ch
movb   $0x8,(%esi)
dec    %esp
inc    %edx
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%al
movb   $0x8,(%esi)
dec    %eax
inc    %edx
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ah,%dh
lds    (%esi),%eax
or     %al,0x7(%edx,%eax,2)
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%bl
movb   $0x8,(%esi)
inc    %eax
inc    %edx
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,%dh
movb   $0x8,(%esi)
cmp    $0x42,%al
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %dh,%cl
movb   $0x8,(%esi)
add    %al,(%eax)
add    %al,(%eax)
nop
lret   $0x804
stos   %eax,%es:(%edi)
les    (%esi),%eax
or     %al,(%eax)
add    %al,(%eax)
add    %ah,0x804ca(%eax)
add    %al,(%eax)
add    %ah,(%ebx,%edi,1)
add    $0x53b2008,%eax
or     %ah,(%eax)
cmp    0x53b2008,%eax
or     %ah,(%eax)
cmp    0x53b2008,%eax
or     %ah,(%eax)
cmp    0x53b2008,%eax
or     %bl,0x3b(%eax)
add    $0x53b5808,%eax
or     %bl,0x3b(%eax)
add    $0x53b2008,%eax
or     %cl,0x3b(%eax)
add    $0x53b4808,%eax
or     %bl,-0x3ff7faa5(%eax)
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x55bc808,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %dh,%al
pop    %ebx
add    $0x55c0808,%eax
or     %cl,0x5c(%eax)
add    $0x55c9808,%eax
or     %bh,(%eax)
pop    %esi
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x55dc008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,(%eax)
pop    %esi
add    $0x55e0008,%eax
or     %al,(%eax)
pop    %esi
add    $0x55e0008,%eax
or     %al,(%eax)
pop    %esi
add    $0x55e0008,%eax
or     %al,(%eax)
pop    %esi
add    $0x55e0008,%eax
or     %al,(%eax)
pop    %esi
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x55d4808,%eax
or     %al,%al
pusha
add    $0x55ee008,%eax
or     %bh,0x5e(%eax)
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x55f1008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %cl,%al
pop    %esp
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,0x60(%eax)
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %bh,-0x5ff7faa2(%eax)
pusha
add    $0x560c008,%eax
or     %bh,0x5d(%eax)
add    $0x560c008,%eax
or     %ch,-0x3ff7faa3(%eax)
pusha
add    $0x55f4008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %cl,%al
pop    %esp
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %al,0x60(%eax)
add    $0x560c008,%eax
or     %al,%al
pusha
add    $0x560c008,%eax
or     %dh,0x5f(%eax)
add    $0x55b4808,%eax
or     %dh,%cl
imul   $0x8,0x56db308,%eax
test   $0x9c08056d,%eax
insl   (%dx),%es:(%edi)
add    $0x56d8f08,%eax
or     %al,%al
insl   (%dx),%es:(%edi)
add    $0x57ee208,%eax
or     %bl,%ch
addl   $0x581dd08,0x581dd08
05
or     %bl,%ch
addl   $0x581dd08,0x581dd08
05
or     %bl,%ch
addl   $0x580ad08,0x57c4008
05
or     %ch,-0x22f7fa80(%ebp)
addl   $0x57f1a08,0x57f6608
05
or     %ah,0x61(%esi,%eiz,2)
insl   (%dx),%es:(%edi)
jne    806e14d <_IO_stdin_used+0x20a9>
je     806e0dc <_IO_stdin_used+0x2038>
popa
fs
fs
je     806e150 <_IO_stdin_used+0x20ac>
imul   $0x0,(%eax),%eax
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,%ah
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,%bh
incl   (%eax)
add    %al,(%eax)
add    %bh,%bh
add    %dh,0x61(%eax)
jb     806e217 <_IO_stdin_used+0x2173>
gs
pop    %edi
bound  %esi,0x61(%edx)
arpl   %bp,0x65(%ebx)
je     806e20d <_IO_stdin_used+0x2169>
gs
js     806e221 <_IO_stdin_used+0x217d>
add    %al,(%eax)
add    %bl,0x6(%edx,%eiz,8)
or     %al,(%eax)
lahf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
loop   806e1d5 <_IO_stdin_used+0x2131>
or     %dh,(%eax)
mov    0x804,%al
add    %al,(%eax)
jne    806e1bc <_IO_stdin_used+0x2118>
push   %es
or     %dh,0x8049a(%eax)
add    %al,(%eax)
add    %cl,-0x1d(%esi)
push   %es
or     %al,(%eax)
sahf
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
dec    %ebp
jecxz  806e1f9 <_IO_stdin_used+0x2155>
or     %dl,%al
lcall  $0x0,$0x10804
push   %esp
jecxz  806e205 <_IO_stdin_used+0x2161>
or     %dh,(%eax)
lcall  $0x0,$0x804
pop    %edx
jecxz  806e211 <_IO_stdin_used+0x216d>
or     %al,(%eax)
fwait
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
pusha
jecxz  806e21d <_IO_stdin_used+0x2179>
or     %dh,%al
fwait
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
data16
jecxz  806e229 <_IO_stdin_used+0x2185>
or     %ah,-0x66(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jecxz  806e235 <_IO_stdin_used+0x2191>
or     %al,%al
pushf
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jb     806e21d <_IO_stdin_used+0x2179>
push   %es
or     %dh,0x8049f(%eax)
add    %al,(%eax)
add    %bh,-0x1d(%eax)
push   %es
or     %dl,(%eax)
lcall  $0x0,$0x804
popa
insb   (%dx),%es:(%edi)
jo     806e2c8 <_IO_stdin_used+0x2224>
popa
add    %dh,0x6e(%ebp)
bound  %esp,0x6c(%ecx)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %bl,0x0(%ebx)
jne    806e2e1 <_IO_stdin_used+0x223d>
jo     806e2d8 <_IO_stdin_used+0x2234>
jb     806e275 <_IO_stdin_used+0x21d1>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     806e2de <_IO_stdin_used+0x223a>
jb     806e27b <_IO_stdin_used+0x21d7>
fs
popaw
arpl   %ax,%cs:(%eax)
pop    %esi
pop    %ebx
cmp    0x70(%ebx),%dh
popa
arpl   %sp,0x3a(%ebp)
pop    %ebp
pop    %ebp
add    %dh,0x6e(%ebp)
imul   $0x6873,0x69(%esi),%bp
gs and %bl,%fs:%gs:0x65(%eax,%eiz,1)
jae    806e300 <_IO_stdin_used+0x225c>
popa
jo     806e305 <_IO_stdin_used+0x2261>
add    %cl,0x6e(%ecx)
jbe    806e306 <_IO_stdin_used+0x2262>
insb   (%dx),%es:(%edi)
imul   $0x65746e6f,0x63(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
je     806e2d1 <_IO_stdin_used+0x222d>
outsl  %ds:(%esi),(%dx)
data16
and    %bl,0x5c(%ebx,%edi,2)
jge    806e2b9 <_IO_stdin_used+0x2215>
push   %edx
gs
addr16 jne 806e32a <_IO_stdin_used+0x2286>
popa
jb     806e2e1 <_IO_stdin_used+0x223d>
gs
js     806e334 <_IO_stdin_used+0x2290>
jb     806e32b <_IO_stdin_used+0x2287>
jae    806e33b <_IO_stdin_used+0x2297>
imul   $0x6f6f7420,0x6e(%edi),%ebp
and    %ah,0x69(%edx)
add    %dh,0x73(%di)
imul   $0x6674755f,0x67(%esi),%ebp
cmp    %ah,(%eax)
sub    %ch,(%ecx)
add    %dh,0x6e(%ebp)
bound  %esp,0x6c(%ecx)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %ch,(%eax)
add    %ch,0x6f(%esi)
and    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     806e358 <_IO_stdin_used+0x22b4>
js     806e319 <_IO_stdin_used+0x2275>
jae    806e36b <_IO_stdin_used+0x22c7>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x626e7500,0x64(%ebp),%esp
popa
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %ch,(%ecx)
add    %ch,0x75(%ebp)
jae    806e388 <_IO_stdin_used+0x22e4>
jae    806e336 <_IO_stdin_used+0x2292>
cmp    $0x20,%al
insl   (%dx),%es:(%edi)
jo     806e31b <_IO_stdin_used+0x2277>
es
insl   (%dx),%es:(%edi)
jne    806e392 <_IO_stdin_used+0x22ee>
je     806e394 <_IO_stdin_used+0x22f0>
pop    %ebx
xor    0x20(%ebp),%bl
cmp    $0x3d,%al
and    %ch,0x70(%ebp)
add    %ch,0x70(%ebp)
and    %bh,0x6d26203d
jne    806e3a8 <_IO_stdin_used+0x2304>
je     806e3aa <_IO_stdin_used+0x2306>
pop    %ebx
xor    %ebx,0x0(%ebp)
and    %esp,(%edx)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jo     806e3b4 <_IO_stdin_used+0x2310>
and    %esp,(%eax)
je     806e365 <_IO_stdin_used+0x22c1>
ds
cmp    $0x444e4520,%eax
and    (%eax),%al
js     806e3b3 <_IO_stdin_used+0x230f>
imul   $0x70730074,0x69(%edi),%esp
popa
arpl   %sp,0x0(%ebp)
jo     806e3d1 <_IO_stdin_used+0x232d>
outsb  %ds:(%esi),(%dx)
arpl   %si,0x61(%eax,%eax,1)
insb   (%dx),%es:(%edi)
outsb  %ds:(%esi),(%dx)
jne    806e3d2 <_IO_stdin_used+0x232e>
add    %dh,0x72(%eax)
imul   $0x61726700,0x74(%esi),%ebp
jo     806e3d9 <_IO_stdin_used+0x2335>
add    %ah,0x6e(%ebx)
je     806e3e8 <_IO_stdin_used+0x2344>
insb   (%dx),%es:(%edi)
add    %ah,0x6c(%edx)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x0,(%eax),%eax
add    %ah,0x68(%ebx)
popa
jb     806e3e6 <_IO_stdin_used+0x2342>
arpl   %si,0x72(%ebp,%eiz,2)
and    %ah,0x6c(%ebx)
popa
jae    806e402 <_IO_stdin_used+0x235e>
and    %dh,0x79(%ebx)
outsb  %ds:(%esi),(%dx)
je     806e3f6 <_IO_stdin_used+0x2352>
js     806e3b7 <_IO_stdin_used+0x2313>
imul   $0x733a5b5b,0x20(%ebx),%esi
jo     806e401 <_IO_stdin_used+0x235d>
arpl   %sp,0x3a(%ebp)
pop    %ebp
pop    %ebp
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     806e3cb <_IO_stdin_used+0x2327>
pop    %ebx
cmp    0x70(%ebx),%dh
popa
arpl   %sp,0x3a(%ebp)
pop    %ebp
add    %al,(%eax)
add    %al,(%eax)
sub    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     806e424 <_IO_stdin_used+0x2380>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    806e43d <_IO_stdin_used+0x2399>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     806e3f0 <_IO_stdin_used+0x234c>
sub    %ch,(%ecx)
sub    %esp,(%eax)
cmp    $0x31203d,%eax
add    %al,(%eax)
add    %ah,(%ecx)
and    0x65(%esi),%ch
imul   $0x504c2072,0x65(%eax,%ebp,2),%esi
inc    %ecx
push   %edx
inc    %ebp
dec    %esi
and    %ch,0x6f(%esi)
jb     806e411 <_IO_stdin_used+0x236d>
push   %edx
push   %eax
inc    %ecx
push   %edx
inc    %ebp
dec    %esi
and    %ch,0x61(%ebp)
jns    806e41c <_IO_stdin_used+0x2378>
popa
jo     806e46f <_IO_stdin_used+0x23cb>
gs
popa
jb     806e423 <_IO_stdin_used+0x237f>
push   $0x22657265
add    %dh,0x65(%ebx)
popa
jb     806e471 <_IO_stdin_used+0x23cd>
push   $0x6c697475
jae    806e443 <_IO_stdin_used+0x239f>
arpl   %ax,(%eax)
outsl  %ds:(%esi),(%dx)
jne    806e48e <_IO_stdin_used+0x23ea>
add    %ch,0x6e(%ebp,%eiz,2)
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     806e423 <_IO_stdin_used+0x237f>
insl   (%dx),%es:(%edi)
bound  %esi,0x6c(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
ja     806e490 <_IO_stdin_used+0x23ec>
jb     806e42d <_IO_stdin_used+0x2389>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x72(%ecx)
addr16 jne 806e4a7 <_IO_stdin_used+0x2403>
outsb  %gs:(%esi),(%dx)
je     806e45e <_IO_stdin_used+0x23ba>
and    $0x6f662073,%eax
jb     806e465 <_IO_stdin_used+0x23c1>
and    $0x6d610073,%eax
bound  %ebp,0x67(%ecx)
jne    806e4be <_IO_stdin_used+0x241a>
jne    806e4c4 <_IO_stdin_used+0x2420>
and    %ah,0x72(%ecx)
addr16 jne 806e4c4 <_IO_stdin_used+0x2420>
outsb  %gs:(%esi),(%dx)
je     806e47b <_IO_stdin_used+0x23d7>
and    $0x6f662073,%eax
jb     806e482 <_IO_stdin_used+0x23de>
and    $0x61560073,%eax
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     806e4e7 <_IO_stdin_used+0x2443>
and    %ah,0x72(%ecx)
cmp    %gs:(%eax),%al
or     (%eax),%ah
and    %ch,0x732520
sub    $0x20,%al
and    $0x626d0073,%eax
jne    806e4f4 <_IO_stdin_used+0x2450>
je     806e4f2 <_IO_stdin_used+0x244e>
jb     806e4bd <_IO_stdin_used+0x2419>
push   $0x73626d00
imul   $0x26282074,0x69(%esi),%ebp
imul   $0x74733e2d,0x72(%ebp,%eiz,2),%esi
popa
je     806e50b <_IO_stdin_used+0x2467>
sub    %eax,(%eax)
sub    0x74(%ecx),%ch
gs
jb     806e4db <_IO_stdin_used+0x2437>
arpl   %si,%ds:0x72(%ebp)
jo,pn  806e529 <_IO_stdin_used+0x2485>
jb     806e4d7 <_IO_stdin_used+0x2433>
cmp    $0x5c27203d,%eax
xor    %ah,(%edi)
add    %ch,0x74(%ecx)
gs
jb     806e4f1 <_IO_stdin_used+0x244d>
arpl   %si,%ds:0x72(%ebp)
ja,pn  806e52e <_IO_stdin_used+0x248a>
and    %bh,0x30203d
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     806e53c <_IO_stdin_used+0x2498>
jb     806e538 <_IO_stdin_used+0x2494>
insl   (%dx),%es:(%edi)
jne    806e548 <_IO_stdin_used+0x24a4>
je     806e547 <_IO_stdin_used+0x24a3>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806e557 <_IO_stdin_used+0x24b3>
add    %ah,(%ebx)
and    %ah,0x6e(%ebp)
je     806e55c <_IO_stdin_used+0x24b8>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     806e538 <_IO_stdin_used+0x2494>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 806e58d <_IO_stdin_used+0x24e9>
cmp    (%eax),%ah
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
enter  $0xcd42,$0xcc
dec    %esp
aas
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
orb    $0x0,0x0(%edi)
add    %al,(%eax)
add    %bl,(%edx)
add    %al,(%eax)
out    %eax,(%dx)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg     806e591 <_IO_stdin_used+0x24ed>
add    %al,(%eax)
add    %ch,0x62(%ebp)
jne    806e60d <_IO_stdin_used+0x2569>
je     806e60b <_IO_stdin_used+0x2567>
jb     806e607 <_IO_stdin_used+0x2563>
insl   (%dx),%es:(%edi)
jne    806e617 <_IO_stdin_used+0x2573>
je     806e616 <_IO_stdin_used+0x2572>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806e626 <_IO_stdin_used+0x2582>
add    %al,(%eax)
inc    %ecx
and    %cl,0x55(%esi)
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 806e61b <_IO_stdin_used+0x2577>
xor    %bl,0x20(%ebp)
ja     806e626 <_IO_stdin_used+0x2582>
jae    806e5e7 <_IO_stdin_used+0x2543>
jo     806e62a <_IO_stdin_used+0x2586>
jae    806e63e <_IO_stdin_used+0x259a>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    806e63b <_IO_stdin_used+0x2597>
push   $0x206e6120
gs
js     806e641 <_IO_stdin_used+0x259d>
arpl   %sp,(%eax)
jae    806e659 <_IO_stdin_used+0x25b5>
jae    806e656 <_IO_stdin_used+0x25b2>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x20732500,%eax
sub    %ah,0x6d002973
bound  %esi,0x69(%ebp)
je     806e66b <_IO_stdin_used+0x25c7>
jb     806e667 <_IO_stdin_used+0x25c3>
insl   (%dx),%es:(%edi)
jne    806e677 <_IO_stdin_used+0x25d3>
je     806e676 <_IO_stdin_used+0x25d2>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806e686 <_IO_stdin_used+0x25e2>
add    %ah,%dl
sbbb   $0xa1,0xafa100(%ecx)
pop    %es
gs
add    %ah,%dl
sbbb   $0x38,0x31424700(%eax)
xor    %dh,(%ebx)
xor    %al,(%eax)
pusha
add    %ch,0x74(%ecx,%ebp,2)
gs
jb     806e693 <_IO_stdin_used+0x25ef>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    806e6b9 <_IO_stdin_used+0x2615>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    806e6af <_IO_stdin_used+0x260b>
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
xor    %bh,%dh
add    $0x6032808,%eax
or     %ah,0x3(%eax)
push   %es
or     %ah,-0x1ff7f9fd(%eax)
add    (%esi),%eax
or     %dl,(%eax)
add    $0x6,%al
or     %bh,(%eax)
add    $0x6,%al
or     %bh,(%eax)
add    $0x6,%al
or     %bh,(%eax)
add    $0x6,%al
or     %al,0x68080601(%eax)
add    (%esi),%al
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x1(%eax)
push   %es
or     %dl,0x1(%eax)
push   %es
or     %bh,0x1(%eax)
push   %es
or     %dh,0x1(%eax)
push   %es
or     %ah,0x1(%eax)
push   %es
or     %bl,0x1(%eax)
push   %es
or     %dh,(%eax)
add    %eax,(%esi)
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %ch,0x2(%eax)
push   %es
or     %dh,-0x48f7fa00(%edi)
add    %al,(%esi)
or     %dh,-0x50f7fa00(%edi)
add    %al,(%esi)
or     %dh,-0x3ff7fa00(%edi)
incl   0x600b708
or     %bl,(%eax)
add    (%esi),%al
or     %dh,-0x48f7fa00(%edi)
add    %al,(%esi)
or     %dh,-0x3ff7fa00(%edi)
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %dh,-0x48f7fa00(%edi)
add    %al,(%esi)
or     %dh,-0x48f7fa00(%edi)
add    %al,(%esi)
or     %cl,(%eax)
incl   0x6026808
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %dh,-0x7f7fa00(%edi)
add    %eax,(%esi)
or     %al,%al
incl   0x600b708
or     %al,%al
incl   0x600b708
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %al,%al
incl   0x5ffc008
or     %bl,-0x48f7fa00(%eax)
add    %al,(%esi)
or     %bl,-0x50f7fa00(%eax)
add    %al,(%esi)
or     %cl,%al
add    %al,(%esi)
or     %cl,%al
add    %al,(%esi)
or     %bl,%al
add    $0xc80806,%eax
push   %es
or     %bl,%al
add    $0xc80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0x5d80806,%eax
push   %es
or     %bl,%al
add    $0xc80806,%eax
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %ch,(%esi,%eiz,8)
push   %es
or     %dh,(%esi,%eiz,8)
push   %es
or     %bh,(%edx)
out    %al,$0x6
or     %bh,-0x1e(%edi)
push   %es
or     %al,-0x1a(%edi)
push   %es
or     %bl,0x200806e2(%edx)
les    (%esi),%eax
or     %cl,-0x1a(%edi)
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x62(%ebp)
imul   $0x6d00682e,0x72(%ebp,%eiz,2),%esi
bound  %ebp,0x74(%ecx)
gs
jb     806e9d3 <_IO_stdin_used+0x292f>
insl   (%dx),%es:(%edi)
jne    806e9e3 <_IO_stdin_used+0x293f>
je     806e9e2 <_IO_stdin_used+0x293e>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806e9f2 <_IO_stdin_used+0x294e>
add    %ah,0x25282073
jae    806e9af <_IO_stdin_used+0x290b>
and    %ah,0x25000a73
jae    806e9ae <_IO_stdin_used+0x290a>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     806ea02 <_IO_stdin_used+0x295e>
je     806ea0f <_IO_stdin_used+0x296b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     806ea12 <_IO_stdin_used+0x296e>
je     806ea1f <_IO_stdin_used+0x297b>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     806ea29 <_IO_stdin_used+0x2985>
je     806ea36 <_IO_stdin_used+0x2992>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806e9fb <_IO_stdin_used+0x2957>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
and    $0x6f682073,%eax
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    806ea29 <_IO_stdin_used+0x2985>
or     (%eax),%al
add    %al,(%eax)
add    %cl,(%edx)
dec    %esp
imul   $0x2065736e,0x65(%ebx),%esp
inc    %edi
push   %eax
dec    %esp
jbe    806ea31 <_IO_stdin_used+0x298d>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     806ea80 <_IO_stdin_used+0x29dc>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     806ea36 <_IO_stdin_used+0x2992>
insb   (%dx),%es:(%edi)
popa
je     806ea7f <_IO_stdin_used+0x29db>
jb     806ea3c <_IO_stdin_used+0x2998>
cmp    $0x68,%al
je     806ea94 <_IO_stdin_used+0x29f0>
jo     806ea5c <_IO_stdin_used+0x29b8>
das
das
outsb  %ds:(%si),(%dx)
jne    806ea56 <_IO_stdin_used+0x29b2>
outsl  %ds:(%esi),(%dx)
jb     806ea92 <_IO_stdin_used+0x29ee>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 806eaa4 <_IO_stdin_used+0x2a00>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    806ea65 <_IO_stdin_used+0x29c1>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     806eac9 <_IO_stdin_used+0x2a25>
popa
jb     806eaba <_IO_stdin_used+0x2a16>
cmp    (%eax),%ah
jns    806eac8 <_IO_stdin_used+0x2a24>
jne    806ea7b <_IO_stdin_used+0x29d7>
popa
jb     806eac3 <_IO_stdin_used+0x2a1f>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     806eae3 <_IO_stdin_used+0x2a3f>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     806eaed <_IO_stdin_used+0x2a49>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     806eb0a <_IO_stdin_used+0x2a66>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     806eb09 <_IO_stdin_used+0x2a65>
outsb  %ds:(%esi),(%dx)
je     806eac7 <_IO_stdin_used+0x2a23>
jo     806eb0e <_IO_stdin_used+0x2a6a>
jb     806eb18 <_IO_stdin_used+0x2a74>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     806eb28 <_IO_stdin_used+0x2a84>
je     806eb35 <_IO_stdin_used+0x2a91>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806eafa <_IO_stdin_used+0x2a56>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806eb48 <_IO_stdin_used+0x2aa4>
je     806eb55 <_IO_stdin_used+0x2ab1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806eb1a <_IO_stdin_used+0x2a76>
and    %ah,0x250a2c73
jae    806eb22 <_IO_stdin_used+0x2a7e>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806eb6c <_IO_stdin_used+0x2ac8>
je     806eb79 <_IO_stdin_used+0x2ad5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806eb3e <_IO_stdin_used+0x2a9a>
and    %ah,0x250a2c73
jae    806eb46 <_IO_stdin_used+0x2aa2>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806eb94 <_IO_stdin_used+0x2af0>
je     806eba1 <_IO_stdin_used+0x2afd>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806eb66 <_IO_stdin_used+0x2ac2>
and    %ah,0x250a2c73
jae    806eb6e <_IO_stdin_used+0x2aca>
and    %ah,0x25202c73
jae    806eb76 <_IO_stdin_used+0x2ad2>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806ebc0 <_IO_stdin_used+0x2b1c>
je     806ebcd <_IO_stdin_used+0x2b29>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806eb92 <_IO_stdin_used+0x2aee>
and    %ah,0x250a2c73
jae    806eb9a <_IO_stdin_used+0x2af6>
and    %ah,0x25202c73
jae    806eba2 <_IO_stdin_used+0x2afe>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806ebf0 <_IO_stdin_used+0x2b4c>
je     806ebfd <_IO_stdin_used+0x2b59>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806ebc2 <_IO_stdin_used+0x2b1e>
and    %ah,0x250a2c73
jae    806ebca <_IO_stdin_used+0x2b26>
and    %ah,0x25202c73
jae    806ebd2 <_IO_stdin_used+0x2b2e>
and    %ah,0x250a2c73
jae    806ebda <_IO_stdin_used+0x2b36>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     806ec24 <_IO_stdin_used+0x2b80>
je     806ec31 <_IO_stdin_used+0x2b8d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    806ebf6 <_IO_stdin_used+0x2b52>
and    %ah,0x250a2c73
jae    806ebfe <_IO_stdin_used+0x2b5a>
and    %ah,0x25202c73
jae    806ec06 <_IO_stdin_used+0x2b62>
and    %ah,0x250a2c73
jae    806ec0e <_IO_stdin_used+0x2b6a>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
loopne 806ec2e <_IO_stdin_used+0x2b8a>
push   %es
or     %ch,%al
cmp    %al,(%esi)
or     %ch,(%eax)
cmp    %eax,(%esi)
or     %dh,0x39(%eax)
push   %es
or     %cl,%al
cmp    %eax,(%esi)
or     %ah,(%eax)
cmp    (%esi),%al
or     %cl,0x8063a(%eax)
cmp    (%esi),%eax
or     %ah,0x38080637(%eax)
cmp    %al,(%esi)
or     %dl,0x3e(%esi)
push   %es
or     %bl,0x3e(%ebx)
push   %es
or     %bl,-0x1ef7f9c2(%ecx)
ds
push   %es
or     %ch,(%edx)
aas
push   %es
or     %al,-0x16f7f9c1(%edx)
aas
push   %es
or     %bl,0x40(%edi)
push   %es
or     %dl,(%esi)
cmp    $0x3db00806,%eax
push   %es
or     %ah,(%eax)
inc    %esp
push   %es
or     %ch,(%eax)
inc    %esp
push   %es
or     %bh,0x44(%eax)
push   %es
or     %bl,%al
inc    %esp
push   %es
or     %ch,(%eax)
inc    %ebp
push   %es
or     %cl,-0x7f7f9bb(%eax)
inc    %ebp
push   %es
or     %bh,0x46(%eax)
push   %es
or     %al,%al
inc    %edx
push   %es
or     %ch,0x43(%eax)
push   %es
or     %bh,%al
dec    %edx
push   %es
or     %al,(%eax)
dec    %ebx
push   %es
or     %al,0x4b(%eax)
push   %es
or     %cl,-0x27f7f9b5(%eax)
dec    %ebx
push   %es
or     %bh,(%eax)
dec    %esp
push   %es
or     %ch,0x2808064c(%eax)
dec    %ebp
push   %es
or     %bl,0x40080649(%eax)
dec    %edx
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,0x6f(%ebx)
jo     806ed1d <_IO_stdin_used+0x2c79>
jb     806ed0f <_IO_stdin_used+0x2c6b>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     806ed31 <_IO_stdin_used+0x2c8d>
popa
jb     806ed22 <_IO_stdin_used+0x2c7e>
and    %al,0x6f(%esi)
jne    806ed30 <_IO_stdin_used+0x2c8c>
fs
popa
je     806ed2f <_IO_stdin_used+0x2c8b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %bh,0x73(%eax)
je     806ed45 <_IO_stdin_used+0x2ca1>
je     806ed44 <_IO_stdin_used+0x2ca0>
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
add    %dh,(%eax)
and    %bh,0x72747320(,%edi,1)
je     806ed55 <_IO_stdin_used+0x2cb1>
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %ah,%gs:(%esi)
and    %dh,%es:0x74(%ebx)
jb     806ed68 <_IO_stdin_used+0x2cc4>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esp,0x73(%ecx)
and    %bh,%gs:0x363320(,%edi,1)
add    %al,(%eax)
adc    %bl,0x6(%ecx)
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %al,%bh
pop    %ecx
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %cl,0x59(%edx)
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %al,0x6(%edx,%ebx,2)
or     %ah,(%eax)
push   %ebp
push   %es
or     %bh,0x58(%ebp)
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %al,(%eax)
pop    %eax
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %cl,0x57(%edx)
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %cl,%al
push   %esi
push   %es
or     %bl,(%esi)
push   %esi
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,%bh
push   %ebp
push   %es
or     %cl,%dl
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %cl,0x59(%edx)
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %al,0x6(%edx,%ebx,2)
or     %ah,(%eax)
push   %ebp
push   %es
or     %bh,0x58(%ebp)
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %cl,0x57(%edx)
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %ah,(%eax)
push   %ebp
push   %es
or     %al,%bh
push   %edi
push   %es
or     %bh,0x73(%eax)
je     806ee52 <_IO_stdin_used+0x2dae>
je     806ee51 <_IO_stdin_used+0x2dad>
imul   $0x45540078,0x61(%ebp),%ebp
push   %edx
dec    %ebp
add    %ah,0x6d(%ebp,%esi,2)
bound  %eax,(%eax)
cs add %al,%cs:(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
sub    $0x63656863,%eax
imul   $0x63,(%esi),%ebp
add    %dh,0x74(%ebx)
popa
je     806eea8 <_IO_stdin_used+0x2e04>
sub    $0x67616d3e,%eax
imul   $0x39203d3d,0x20(%ebx),%esp
cmp    %dh,(%edx)
aaa
cmp    %dh,(%esi)
xor    (%eax),%al
arpl   %di,0x63(%ecx)
insb   (%dx),%es:(%edi)
gs
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x0(%ebx)
das
das
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebp)
je     806eef3 <_IO_stdin_used+0x2e4f>
jb     806eeef <_IO_stdin_used+0x2e4b>
insl   (%dx),%es:(%edi)
jne    806eeff <_IO_stdin_used+0x2e5b>
je     806eefe <_IO_stdin_used+0x2e5a>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806ef0e <_IO_stdin_used+0x2e6a>
add    %ch,0x62(%ebp)
jne    806ef08 <_IO_stdin_used+0x2e64>
je     806ef06 <_IO_stdin_used+0x2e62>
jb     806ef02 <_IO_stdin_used+0x2e5e>
insl   (%dx),%es:(%edi)
jne    806ef12 <_IO_stdin_used+0x2e6e>
je     806ef11 <_IO_stdin_used+0x2e6d>
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     806ef21 <_IO_stdin_used+0x2e7d>
add    %ebx,(%ebx)
add    (%ebx),%edi
jo     806eebd <_IO_stdin_used+0x2e19>
add    %al,(%eax)
in     (%dx),%eax
add    %al,(%eax)
add    %dh,-0x56(%eax)
std
decl   -0x4d600000(%edi,%eax,1)
std
ljmp   *0xd(%eax)
add    %al,(%eax)
nop
ret
std
pushl  -0x3ffffff9(%eax)
ret
std
dec    %eax
pop    %es
add    %al,(%eax)
lock ret
std
jmp    *%eax
pop    %es
add    %al,(%eax)
and    %al,%ah
std
(bad)
clc
pop    %es
add    %al,(%eax)
push   %eax
(bad)
std
decl   (%eax,%ecx,1)
add    %al,(%eax)
mov    0x28fffdc4,%al
or     %al,(%eax)
add    %ah,0x68fffdc9(%eax)
or     %al,(%eax)
add    %ah,(%eax)
sar    %ch
inc    %eax
or     %al,(%eax)
add    %dl,-0x2f(%eax)
std
push   %eax
or     %al,(%eax)
add    %dh,(%eax)
aad    $0xfd
pushl  (%eax)
or     %eax,(%eax)
add    %dl,(%eax)
fscale
pushl  0x9(%eax)
add    %al,(%eax)
rcr    %bl
std
dec    %eax
or     %eax,(%eax)
add    %ah,%al
(bad)
(bad)
fmull  (%ecx)
add    %al,(%eax)
lock (bad)
push   %eax
or     %eax,(%eax)
add    %dl,(%eax)
fdivr  %st,%st(5)
incl   (%edx,%ecx,1)
add    %al,(%eax)
rcr    $0xfd,%ah
incl   0x0(%edx,%ecx,1)
add    %dl,-0x22(%eax)
std
pushl  0x0(%edx,%ecx,1)
add    %dh,-0x22(%eax)
std
decl   -0x3ffffff6(%eax)
loopne 806ef5c <_IO_stdin_used+0x2eb8>
dec    %eax
or     (%eax),%al
add    %dl,-0x1f(%eax)
std
incl   (%eax)
or     (%eax),%eax
add    %dh,0x40fffde2(%eax)
or     (%eax),%eax
add    %ah,-0x18(%eax)
std
incl   -0xffffff5(%eax)
in     (%dx),%al
std
inc    %eax
or     (%eax),%eax
add    %al,-0x12(%eax)
std
lcall  *(%eax)
or     $0x0,%al
add    %dh,%al
icebp
std
lcall  *0xc(%eax)
add    %al,(%eax)
mov    $0xf6,%al
std
dec    %eax
or     $0x0,%al
add    %al,0x20fffe0a(%eax)
or     $0xb500000,%eax
(bad)
decl   0xd(%eax)
add    %al,(%eax)
push   %eax
paddd  %mm7,%mm7
mov    %cl,0x16e00000
(bad)
dec    %eax
or     $0x1c700000,%eax
(bad)
decl   (%eax)
push   %cs
add    %al,(%eax)
mov    0x48fffe21,%al
push   %cs
add    %al,(%eax)
shrb   (%ebx)
(bad)
jmp    *-0x4ffffff2(%eax)
xor    $0xfe,%al
(bad)
clc
push   %cs
add    %al,(%eax)
add    %dh,(%esi)
(bad)
(bad)
cmp    %cl,(%edi)
add    %al,(%eax)
sarb   (%esi,%edi,8)
call   *-0x3ffffff1(%eax)
inc    %ecx
(bad)
call   *%esp
sldt   (%eax)
rolb   -0x2(%edi)
incl   0x0(%eax,%edx,1)
add    %al,(%eax)
dec    %eax
(bad)
jmp    *0x0(%eax,%edx,1)
add    %dl,0x49(%eax)
(bad)
jmp    *0x4a900000(%eax,%edx,1)
(bad)
(bad)
cld
adc    %al,(%eax)
add    %al,0x2cfffe4b(%eax)
adc    %eax,(%eax)
add    %dh,%al
dec    %esp
(bad)
ljmp   *0x0(%ecx,%edx,1)
add    %dh,(%eax)
dec    %esi
(bad)
inc    %esp
adc    %eax,(%eax)
add    %dh,(%eax)
dec    %edi
(bad)
incl   (%eax)
adc    (%eax),%al
add    %ah,0x50(%eax)
(bad)
(bad)
cmp    %dl,(%edx)
add    %al,(%eax)
nop
push   %ecx
(bad)
pushl  0x12(%eax)
add    %al,(%eax)
push   %eax
push   %esi
(bad)
pushl  0x5a400000(%edx,%edx,1)
(bad)
push   %esp
adc    (%eax),%al
add    %dh,0x6b(%eax)
(bad)
(bad)
cmp    %dl,(%ebx)
add    %al,(%eax)
mov    $0x76,%al
(bad)
(bad)
js     806f075 <_IO_stdin_used+0x2fd1>
add    %al,(%eax)
jo     806f0de <_IO_stdin_used+0x303a>
(bad)
call   *%eax
adc    (%eax),%eax
add    %al,(%eax)
jl     806f06d <_IO_stdin_used+0x2fc9>
call   *(%eax)
adc    $0x0,%al
add    %al,0x7f(%eax)
(bad)
call   *0x14(%eax)
add    %al,(%eax)
push   %eax
cmp    $0x1490ff,%esi
add    %dh,-0x7f(%eax)
(bad)
ljmp   *0x40000014(%eax)
cmp    $0xffffffff,%esi
sbb    %dl,0x83600000
(bad)
pushl  (%eax)
adc    $0x88800000,%eax
(bad)
pushl  0x15(%eax)
add    %al,(%eax)
push   %eax
mov    %edi,%esi
ljmp   *-0x2fffffeb(%eax)
mov    %dh,%bh
call   *%eax
adc    $0x96d00000,%eax
(bad)
call   *(%esi,%edx,1)
add    %al,(%eax)
lock cmpsb %es:(%edi),%ds:(%esi)
(bad)
lcall  *0x16(%eax)
add    %al,(%eax)
subb   $0x0,0x16b0fffe(%ecx)
add    %al,(%eax)
scas   %es:(%edi),%al
(bad)
push   %eax
push   %ss
add    %al,(%eax)
jo     806f088 <_IO_stdin_used+0x2fe4>
(bad)
decl   0x17(%eax)
add    %al,(%eax)
(bad)
mov    $0xfe,%bh
(bad)
mov    $0xa0000017,%eax
mov    $0x17e8fffe,%eax
add    %al,(%eax)
pusha
(bad)
(bad)
ljmp   *(%eax)
sbb    %al,(%eax)
add    %dl,0x5cfffec8(%eax)
sbb    %al,(%eax)
add    %dh,0x74fffec8(%eax)
sbb    %al,(%eax)
add    %al,%al
enter  $0xfffe,$0x88
sbb    %al,(%eax)
add    %dh,(%eax)
leave
(bad)
jmp    *-0x33d00000(%eax,%ebx,1)
(bad)
jmp    *%esp
sbb    %al,(%eax)
add    %dh,(%eax)
int    $0xfe
jmp    *(%ecx,%ebx,1)
add    %al,(%eax)
push   %eax
int    $0xfe
(bad)
cmp    $0x19,%al
add    %al,(%eax)
mov    $0xce,%al
(bad)
call   *-0x30b00000(%ecx,%ebx,1)
(bad)
inc    %esp
sbb    %eax,(%eax)
add    %dh,-0x30(%eax)
(bad)
lcall  *(%eax)
sbb    (%eax),%al
add    %dl,0x70fffed2(%eax)
sbb    (%eax),%al
add    %ah,%al
sar    %cl,%dh
ljmp   *-0x2d100000(%edx,%ebx,1)
(bad)
inc    %eax
sbb    (%eax),%al
add    %al,(%eax)
sar    %cl,%esi
call   *%esp
sbb    (%eax),%al
add    %dl,%al
sar    %cl,%esi
incl   (%eax)
sbb    (%eax),%eax
add    %ah,%al
sar    %cl,%esi
call   *(%ebx,%ebx,1)
add    %al,(%eax)
add    %dl,%ah
(bad)
ljmp   *(%ebx,%ebx,1)
add    %al,(%eax)
and    %dl,%ah
(bad)
incl   0x0(%ebx,%ebx,1)
add    %dh,(%eax)
aam    $0xfe
lcall  *0x1b(%eax)
add    %al,(%eax)
xor    %dl,%ch
(bad)
(bad)
in     (%dx),%al
sbb    (%eax),%eax
add    %al,0x2cfffed7(%eax)
sbb    $0x0,%al
add    %ah,-0x27(%eax)
(bad)
call   *0x0(%esp,%ebx,1)
add    %al,0x6cfffed9(%eax)
sbb    $0x0,%al
add    %dh,%al
fsin
jmp    *-0x6fffffe4(%eax)
(bad)
jmp    *%eax
sbb    $0x0,%al
add    %dl,%al
fdivr  %st,%st(6)
pushl  -0x1f500000(,%ebx,1)
(bad)
decl   -0x1d200000(%ebp,%ebx,1)
(bad)
jmp    *%esp
sbb    $0xe2f00000,%eax
(bad)
(bad)
clc
sbb    $0xe3000000,%eax
(bad)
decl   (%esi,%ebx,1)
add    %al,(%eax)
loopne 806f1c9 <_IO_stdin_used+0x3125>
(bad)
(bad)
js     806f208 <_IO_stdin_used+0x3164>
add    %al,(%eax)
and    %ah,%ch
(bad)
call   *%eax
push   %ds
add    %al,(%eax)
xor    %ah,%ch
(bad)
jmp    *%esp
push   %ds
add    %al,(%eax)
inc    %eax
in     $0xfe,%eax
(bad)
clc
push   %ds
add    %al,(%eax)
push   %eax
in     $0xfe,%eax
decl   (%edi,%ebx,1)
add    %al,(%eax)
mov    0x30fffee5,%al
pop    %ds
add    %al,(%eax)
add    %ah,%dh
(bad)
ljmp   *0x0(%edi,%ebx,1)
add    %dl,(%eax)
out    %eax,$0xfe
ljmp   *-0x7fffffe1(%eax)
out    %eax,$0xfe
push   %eax
pop    %ds
add    %al,(%eax)
shl    $0xfe,%bh
call   *(%eax)
and    %al,(%eax)
add    %dh,(%eax)
call   2853f238 <_end+0x204ca1a4>
add    %al,(%eax)
mov    0x88fffee8,%al
and    %al,(%eax)
add    %ah,(%eax)
jmp    28cbf248 <_end+0x20c4a1b4>
add    %al,(%eax)
pusha
jmp    28eff250 <_end+0x20e8a1bc>
add    %al,(%eax)
nop
jmp    2903f258 <_end+0x20fca1c4>
add    %al,(%eax)
add    %ch,%ah
(bad)
call   *0x0(%ecx,%eiz,1)
add    %dl,-0x77000114(%eax)
and    %eax,(%eax)
add    %ah,-0x13(%eax)
(bad)
(bad)
mov    $0xf0000021,%esp
out    %eax,(%dx)
(bad)
incl   0x22(%eax)
add    %al,(%eax)
mov    0xacfffef2,%al
and    (%eax),%al
add    %dh,-0x3f00010e(%eax)
and    (%eax),%al
add    %dh,(%eax)
cmc
(bad)
decl   (%ebx,%eiz,1)
add    %al,(%eax)
add    %bh,%al
(bad)
jmp    *0x0(%ebx,%eiz,1)
add    %dh,(%eax)
clc
(bad)
incl   -0x7700000(%ebx,%eiz,1)
(bad)
(bad)
mov    $0xb0000023,%esp
clc
(bad)
call   *%eax
and    (%eax),%eax
add    %ah,(%eax)
add    %bh,%bh
call   *(%eax)
and    $0x0,%al
add    %ah,0x0(%eax)
(bad)
ljmp   *(%eax)
and    $0x0,%al
add    %dl,(%eax)
add    %edi,%edi
ljmp   *0x24(%eax)
add    %al,(%eax)
rorb   $0xff,(%ecx)
ljmp   *0xa600000(%esp)
(bad)
push   %esp
and    $0x0,%al
add    %dl,(%eax)
or     $0x2560ffff,%eax
add    %al,(%eax)
add    %cl,(%esi)
(bad)
jmp    *0x25(%eax)
(bad)
(bad)
fsubs  0x19100000
(bad)
lcall  *(%esi,%eiz,1)
add    %al,(%eax)
push   %eax
sbb    %edi,%edi
call   *0x26(%eax)
add    %al,(%eax)
jo     806f31f <_IO_stdin_used+0x327b>
(bad)
jmp    *0x0(%esi,%eiz,1)
add    %dl,0x78ffff19(%eax)
add    %al,%es:(%eax)
rcrb   (%ecx)
(bad)
lcall  *0x19f00000(%esi,%eiz,1)
(bad)
pushl  0x30000026(%eax)
sbb    %bh,%bh
call   *%esp
add    %al,%es:(%eax)
nop
sbb    %bh,%bh
decl   (%eax)
daa
add    %al,(%eax)
push   %eax
sbb    %edi,%edi
incl   0x0(%edi,%eiz,1)
add    %dh,(%eax)
sbb    $0xff,%al
incl   -0x3fffffd9(%eax)
sbb    $0xff,%al
pushl  0x1e500000(%edi,%eiz,1)
(bad)
push   %esp
daa
add    %al,(%eax)
loopne 806f375 <_IO_stdin_used+0x32d1>
(bad)
pushl  (%eax,%ebp,1)
add    %al,(%eax)
pusha
and    %edi,%edi
pushl  0x0(%eax,%ebp,1)
add    %dl,%al
and    %bh,%bh
pushl  0x24e00000(%eax,%ebp,1)
(bad)
(bad)
clc
sub    %al,(%eax)
add    %al,(%eax)
daa
(bad)
(bad)
cmp    $0x29,%al
add    %al,(%eax)
add    %ch,(%ecx)
(bad)
incl   0x29(%eax)
sub    %edi,%edi
inc    %esp
sub    %eax,(%eax)
add    %al,(%eax)
sub    $0x2a04ffff,%eax
add    %al,(%eax)
add    %ch,(%edi)
(bad)
incl   0x0(%edx,%ebp,1)
add    %ah,%al
xor    %bh,%bh
incl   0x32c00000(%edx,%ebp,1)
(bad)
inc    %esp
sub    (%eax),%al
add    %al,(%eax)
xor    $0x2b08ffff,%eax
add    %al,(%eax)
inc    %eax
aaa
(bad)
decl   0x0(%ebx,%ebp,1)
add    %dl,0x39(%eax)
(bad)
decl   0x3b600000(%ebx,%ebp,1)
(bad)
dec    %esp
sub    (%eax),%eax
add    %dh,%al
cmp    $0xff,%al
decl   (%esp,%ebp,1)
add    %al,(%eax)
pusha
ds
(bad)
decl   0x0(%esp,%ebp,1)
add    %dh,%al
aas
(bad)
decl   0x41700000(%esp,%ebp,1)
(bad)
dec    %esp
sub    $0x0,%al
add    %dl,%al
inc    %ecx
(bad)
decl   (%eax)
sub    $0x42100000,%eax
(bad)
incl   0x2d(%eax)
add    %al,(%eax)
loopne 806f445 <_IO_stdin_used+0x33a1>
(bad)
incl   0x48200000(%ebp,%ebp,1)
(bad)
inc    %eax
sub    $0x4d900000,%eax
(bad)
lcall  *0x0(%esi,%ebp,1)
add    %dh,-0x1f0000ae(%eax)
add    %al,%cs:(%eax)
pusha
pop    %ecx
(bad)
ljmp   *0x2f(%eax)
add    %al,(%eax)
adc    %ah,-0x1(%eax)
inc    %eax
das
add    %al,(%eax)
shlb   $0xff,-0x1(%eax)
in     $0x2f,%al
add    %al,(%eax)
add    %ah,-0x1(%ecx)
decl   (%eax)
xor    %al,(%eax)
add    %ah,0x61(%eax)
(bad)
incl   0x0(%eax,%esi,1)
add    %dh,%al
popa
(bad)
decl   0x62200000(%eax,%esi,1)
(bad)
pushl  0x50000030(%eax)
(bad)
(bad)
call   *%esp
xor    %al,(%eax)
add    %ah,0x4ffff62(%eax)
xor    %eax,(%eax)
add    %dl,(%eax)
arpl   %di,%di
pushl  (%ecx,%esi,1)
add    %al,(%eax)
push   %eax
arpl   %di,%di
lcall  *0x31(%eax)
add    %al,(%eax)
andb   $0xff,-0x1(%ebx)
je     806f4ab <_IO_stdin_used+0x3407>
add    %al,(%eax)
shlb   $0xff,-0x1(%ebx)
cwtl
xor    %eax,(%eax)
add    %al,(%eax)
fs
(bad)
inc    %esp
xor    %eax,(%eax)
add    %dl,0x64(%eax)
(bad)
(bad)
fdivs  (%ecx)
add    %al,(%eax)
mov    0xfcffff64,%al
xor    %eax,(%eax)
add    %ah,%al
fs
(bad)
jmp    *(%eax)
xor    (%eax),%al
add    %ah,(%eax)
gs
(bad)
incl   0x0(%edx,%esi,1)
add    %dl,(%eax)
js     806f4ae <_IO_stdin_used+0x340a>
pushl  0x50000032(%eax)
js     806f4b6 <_IO_stdin_used+0x3412>
(bad)
call   6806f4ef <_end+0x5fffa45b>
js     806f4be <_IO_stdin_used+0x341a>
(bad)
cld
xor    (%eax),%al
add    %dl,0x14ffff78(%eax)
xor    (%eax),%eax
add    %dh,0x2cffff78(%eax)
xor    (%eax),%eax
add    %dh,%al
js     806f4d6 <_IO_stdin_used+0x3432>
lcall  *0x0(%ebx,%esi,1)
add    %ah,(%eax)
jns    806f4de <_IO_stdin_used+0x343a>
pushl  0x0(%ebx,%esi,1)
add    %dl,0x79(%eax)
(bad)
decl   0x79700000(%ebx,%esi,1)
(bad)
jmp    *-0x1fffffcd(%eax)
jns    806f4f6 <_IO_stdin_used+0x3452>
call   *%esp
xor    (%eax),%eax
add    %dh,0x2cffff7b(%eax)
xor    $0x0,%al
add    %al,0x68ffff7c(%eax)
xor    $0x0,%al
add    %dh,(%eax)
jge    806f50e <_IO_stdin_used+0x346a>
jmp    *-0x5fffffcc(%eax)
cmp    $0xff,%bh
loopne 806f54e <_IO_stdin_used+0x34aa>
add    %al,(%eax)
inc    %eax
(bad)
(bad)
incl   0x35(%eax)
xchg   %eax,%esp
(bad)
push   %eax
xor    $0x95e00000,%eax
(bad)
ljmp   *(%eax)
add    %al,%ss:(%eax)
adc    %ah,0x3698ffff(%eax)
add    %al,(%eax)
push   %eax
mov    0x36b8ffff,%al
add    %al,(%eax)
jo     806f4e8 <_IO_stdin_used+0x3444>
(bad)
call   *0x0(%edi,%esi,1)
add    %dl,%al
mov    %al,0x37a0ffff
add    %al,(%eax)
inc    %eax
mov    %eax,0x37d8ffff
add    %al,(%eax)
jo     806f501 <_IO_stdin_used+0x345d>
(bad)
push   %eax
aaa
add    %al,(%eax)
lock mov %eax,0x3848ffff
add    %al,(%eax)
adc    %ah,0x385cff(%edi,%edi,8)
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
(bad)
pushl  -0x5ac00000(%eax,%edi,1)
(bad)
dec    %esp
cmp    %al,(%eax)
add    %dh,-0x5b(%eax)
(bad)
jmp    *%eax
cmp    %al,(%eax)
add    %al,-0xb00005b(%eax)
cmp    %al,(%eax)
add    %al,%al
movsl  %ds:(%esi),%es:(%edi)
(bad)
jmp    *(%eax)
cmp    %eax,(%eax)
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
lcall  *0x0(%ecx,%edi,1)
add    %al,%al
test   $0x399cffff,%eax
add    %al,(%eax)
and    %ch,0x39ccffff(%ebx)
add    %al,(%eax)
(bad)
mov    $0xff,%ah
(bad)
cld
cmp    %eax,(%eax)
add    %ah,0x40ffffc4(%eax)
cmp    (%eax),%al
add    %dl,-0x7b000039(%eax)
cmp    (%eax),%al
add    %al,-0x3b000037(%eax)
cmp    (%eax),%al
add    %dl,-0x36(%eax)
(bad)
decl   (%ebx,%edi,1)
add    %al,(%eax)
or     $0xff,%dl
jmp    *(%ebx,%edi,1)
add    %al,(%eax)
mov    0x6cffffcb,%al
cmp    (%eax),%eax
add    %al,(%eax)
int3
(bad)
lcall  *0x7000003b(%eax)
int3
(bad)
inc    %eax
cmp    (%eax),%eax
add    %dl,0xffffce(%eax)
cmp    $0x0,%al
add    %al,%al
iret
(bad)
ljmp   *0x0(%esp,%edi,1)
add    %ah,(%eax)
sar    %edi
(bad)
fdivrs (%eax,%eax,1)
add    %dl,0x14ffffd1(%eax)
cmp    $0xd1a00000,%eax
(bad)
ljmp   *(%eax)
.byte 0x3d
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     806f63b <_IO_stdin_used+0x3597>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
fsubl  0x830fffd(%edx)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     806f65b <_IO_stdin_used+0x35b7>
js     806f659 <_IO_stdin_used+0x35b5>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,%al
mov    $0x23fffd,%ebx
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %dh,%al
mov    $0x23fffd,%ebx
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
jo     806f696 <_IO_stdin_used+0x35f2>
add    %al,(%eax)
or     %bh,0x23ff(%ebp,%edi,8)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
and    %bh,0x2cff(%ebp,%edi,8)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,(%eax)
add    %al,(%eax)
add    %bl,-0x43c40000(%eax,%eax,1)
std
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x70000000,%eax
mov    $0x4f9fffd,%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1,0x3500e43
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,%al
add    %al,(%eax)
add    %dh,(%eax)
sar    $0xff,%ebp
jle    806f72c <_IO_stdin_used+0x3688>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
in     (%dx),%al
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    $0xa,%bl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
push   %eax
add    %eax,(%eax)
add    %bl,-0x39(%eax)
std
ljmp   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
lock or (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
addb   $0x0,(%ecx)
add    %bl,-0x38(%eax)
std
jmp    *%eax
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x38,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
rolb   $0x0,(%ecx)
add    %bh,%al
lret
std
call   *%ecx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x68,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0x0(%eax,%eax,1),%edx
add    %al,(%eax)
add    (%eax),%al
add    %bl,-0x41000231(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0xa800e46
test   %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
fwait
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
add    (%eax),%al
add    %al,(%eax)
sar    %cl,%ch
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edx,%eax,1)
add    %bh,%ah
sar    %ebp
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,-0x7fffffe(%eax)
sar    %ebp
call   *0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
add    (%eax),%al
add    %al,(%edx,%edx,8)
std
ljmp   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff9b,0x2180e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
aam    $0x2
add    %al,(%eax)
je     806f8d0 <_IO_stdin_used+0x382c>
std
incl   0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
data16
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    $0x3,%al
add    %al,(%eax)
aam    $0xd3
std
call   *0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbb    %al,(%ebx)
add    %al,(%eax)
loopne 806f915 <_IO_stdin_used+0x3871>
std
decl   0x2(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
pop    %eax
add    (%eax),%eax
add    %dh,%al
aad    $0xfd
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
xor    %dh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
inc    %ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,0x48000003(%eax)
(bad)
std
lcall  *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1900e45
out    %eax,(%dx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
rolb   (%ebx)
add    %al,(%eax)
push   $0xa7fffdd7
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x30,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
adc    %al,(%eax,%eax,1)
add    %bl,%al
fdivr  %st,%st(5)
decl   0x41000000(%esp,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffbf,0x3500e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,0x4(%eax)
add    %al,(%eax)
sub    %ah,%cl
std
decl   0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffe,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
test   $0x4,%al
add    %al,(%eax)
and    %ah,%dl
std
ljmp   *0x3(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb2,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%ebp
add    %ch,%al
add    $0x0,%al
add    %dl,-0x4200021b(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc0,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    $0x1,%ch
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
incl   (%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bl,0x5(%eax)
add    %al,(%eax)
loopne 806fb6b <_IO_stdin_used+0x3ac7>
std
dec    %esp
adc    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2b00e46
adc    0x43140e0a,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    (%edx),%cs
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
mov    $0x5,%al
add    %al,(%eax)
pop    %eax
std
std
inc    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xa(%esi),%ebx
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %ebp
or     (%esi),%cl
add    $0x43,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
fadds  0xfe000000
std
push   %edx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
clc
add    $0xa5300000,%eax
std
(bad)
cld
sldt   (%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x3c,%eax
sbb    %al,(%esi)
add    %al,(%eax)
rolb   $0xfe,(%ecx)
incl   0x7(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffae,0x3300e43
push   %es
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pop    %eax
push   %es
add    %al,(%eax)
adc    %cl,(%ecx)
(bad)
decl   0x5(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x3300e43
add    $0xc341140e,%eax
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
cwtl
push   %es
add    %al,(%eax)
pusha
push   %cs
(bad)
ljmp   *(%edx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1e,0x3300e43
add    $0xc341140e,%eax
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,%al
push   %es
add    %al,(%eax)
push   %eax
adc    %esi,%edi
jmp    *0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
sti
add    $0xa,%al
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,(%eax)
pop    %es
add    %al,(%eax)
sub    %bl,0x8ddfffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x9,0x3400e43
add    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    $0x41140e03,%edi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %al,(%edi)
add    %al,(%eax)
mov    $0x25,%al
(bad)
call   *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,%al
pop    %es
add    %al,(%eax)
shlb   $0xfe,(%esi)
inc    %ecx
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
cmpsb  %es:(%edi),%ds:(%esi)
add    $0x43140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jmp    806fe36 <_IO_stdin_used+0x3d92>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax),%eax
add    %al,(%eax)
and    %cl,(%eax)
add    %al,(%eax)
cmp    %ch,0x4e3fffe
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0xad00e46
js     806fe6e <_IO_stdin_used+0x3dca>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ah,0x0(%eax,%ecx,1)
add    %ah,%ah
xor    %edi,%esi
decl   (%eax)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x63500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
mov    0x140e0a02,%eax
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
lock add %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
aam    $0x8
add    %al,(%eax)
test   %dh,(%edi)
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,%ah
or     %al,(%eax)
add    %dl,0x148fffe(%edi,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffde,0x2600e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,(%ecx,%ecx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    %bh,%dh
pushl  (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff7,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    %cs,(%ecx)
add    %al,(%eax)
mov    %?,(%ecx)
(bad)
(bad)
jmp    806ffbd <_IO_stdin_used+0x3f19>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
fimull (%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x4c000009,%esp
cmp    %dh,%bh
jmp    *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x1,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,%ah
or     %eax,(%eax)
add    %bh,-0x2(%ebx,%edi,1)
pushl  (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x42,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
stos   %al,%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,0x0(%edx,%ecx,1)
add    %ah,-0x2(%esp,%edi,1)
push   %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe7,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dl,0x2800000a(%eax)
cmp    $0x12cfffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    %dh,%ch
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
enter  $0xa,$0x0
and    %bh,(%esi)
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%ecx),%bh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
sbb    %bh,(%edi)
(bad)
pushl  0x4(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x2800e46
stc
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %esp
or     (%eax),%eax
add    %dl,0x3ebfffe(%ebx,%eax,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x3600e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%ebp,%eax,8)
add    $0x42,%al
or     0x0(%eax),%eax
add    %al,(%eax)
test   %cl,(%ebx)
add    %al,(%eax)
inc    %esp
inc    %edi
(bad)
ljmp   *(%ebx)
adc    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1e00e46
dec    %ebx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
enter  $0xb,$0x0
xor    %bl,-0x2(%eax)
pushl  (%ebx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,(%eax)
or     $0x0,%al
add    %dh,(%eax)
arpl   %di,%si
pushl  0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
rorb   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pusha
or     $0x0,%al
add    %bl,-0x7000019c(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    0xe800000c,%al
addr16 (bad)
pushl  0x3
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffde,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
loopne 8070312 <_IO_stdin_used+0x426e>
add    %al,(%eax)
call   17070177 <_end+0xeffb0e3>
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc1,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
and    %cl,0x6cb80000
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %dl,0xe(%edx)
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,(%eax)
or     $0x6cc00000,%eax
(bad)
inc    %ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb7,0x2300e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jne    80703bb <_IO_stdin_used+0x4317>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
test   $0xd,%al
add    %al,(%eax)
and    %ch,-0x2(%esi)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %dl,0xe(%edx)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
rorb   $0xfe,0x6e280000
call   *(%edi)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb8,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
add    %cl,(%esi)
add    %al,(%eax)
or     %dh,-0x2(%ebx)
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x41100e0a(%esi),%bl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
cmp    %cl,(%esi)
add    %al,(%eax)
mov    0x79fffe73,%al
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    (%ebx),%ebp
add    %ecx,(%edx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,0xe(%eax)
add    %al,(%eax)
clc
je     8070489 <_IO_stdin_used+0x43e5>
(bad)
sti
or     (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
push   %esi
add    $0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,-0x7f4c0000(%esi,%ecx,1)
(bad)
lcall  *(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2800e46
xchg   %eax,%esi
or     (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,%al
push   %cs
add    %al,(%eax)
nop
nop
(bad)
decl   0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe5,0x3400e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
nop
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
sldt   (%eax)
enter  $0xfe92,$0xff
jle    8070572 <_IO_stdin_used+0x44ce>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff9,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %al,0x800000f(%eax)
xchg   %eax,%edi
(bad)
ljmp   *0x4(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e45
data16
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
lret   $0xa03
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%ebp
add    %bl,%al
sldt   (%eax)
and    %bl,0x54cfffe(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffea,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    $0x43140e0a,%ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
insl   (%dx),%es:(%edi)
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
dec    %eax
adc    %al,(%eax)
add    %al,(%eax)
mov    0xd9fffe,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    0x410c0e0a,%eax
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
js     80706ae <_IO_stdin_used+0x460a>
add    %al,(%eax)
mov    $0xa0,%al
(bad)
(bad)
mov    $0xe,%esp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6b,0x3700e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bh,0x30000010(%eax)
scas   %es:(%edi),%eax
(bad)
ljmp   *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    (%ecx),%esp
add    %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ch,%ah
adc    %al,(%eax)
add    %ch,(%eax,%esi,4)
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
add    $0x11,%al
add    %al,(%eax)
xor    $0xb0,%al
(bad)
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
adc    %eax,(%eax)
add    %dh,(%eax)
mov    $0xfe,%al
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xor    $0x11,%al
add    %al,(%eax)
test   %dh,0x2fffffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
je     80707ab <_IO_stdin_used+0x4707>
add    %al,(%eax)
inc    %esp
mov    $0xfe,%bl
(bad)
clc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb5,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
adc    $0x0,%al
add    %al,(%eax)
mov    $0x11,%ah
add    %al,(%eax)
add    $0xb4,%al
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %cl,%ah
adc    %eax,(%eax)
add    %cl,(%esp,%esi,4)
(bad)
lcall  *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd3,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
and    $0x12,%al
add    %al,(%eax)
adc    $0xb5,%al
(bad)
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jp     807086f <_IO_stdin_used+0x47cb>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,0x0(%edx,%edx,1)
add    %al,0x11efffe(%ebp,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %ch,0x50000012(%eax)
mov    $0xfe,%dh
call   *0x2
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffde,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
sbb    %bh,0x4dfffe(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
cmp    $0x13,%al
add    %al,(%eax)
sub    $0xb8,%al
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x13(%eax)
add    %al,(%eax)
sub    %bh,0xafffe(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
adc    %fs:(%eax),%eax
add    %ah,(%eax,%edi,4)
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,-0x37ffffed(%eax)
mov    $0x5fffe,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    (%eax),%eax
add    %al,%ah
mov    $0x20fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xcc000013,%esp
mov    $0x20fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0x4(%esi,%ecx,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%ah
adc    (%eax),%eax
add    %dl,%ah
mov    $0x5fffe,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
nop
add    %al,(%eax)
add    %ch,%al
adc    (%eax),%eax
add    %dl,%al
mov    $0xf4fffe,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x57300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,0x0(%esp,%edx,1)
add    %bh,(%ecx,%edi,4)
(bad)
decl   0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e45
xchg   %eax,%ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
mov    $0x4c000014,%esp
mov    $0x1d7fffe,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xab00202(%ebx)
ret
push   %cs
add    $0x47,%al
or     (%edx),%eax
into
or     %bl,%al
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0x14,%al
add    %al,(%eax)
add    $0xbd,%al
(bad)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %cl,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
cld
adc    $0x0,%al
add    %cl,0x65fffe(,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edi),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
xor    %dl,0xbd480000
(bad)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %dh,0x15(%eax)
add    %al,(%eax)
test   $0xbd,%al
(bad)
(bad)
cmp    %al,(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffaa,0x2400e43
or     (%esi),%cl
adc    $0x4c,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
jo     8070bd3 <_IO_stdin_used+0x4b2f>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %al,%ah
adc    $0xbf940000,%eax
(bad)
call   *%ecx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
push   %cs
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,(%esi,%edx,1)
add    %al,(%eax)
sbb    $0xc3,%al
(bad)
ljmp   *(%ecx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2600e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
or     (%ecx),%al
or     (%esi),%cl
adc    $0x44,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
je     8070cb0 <_IO_stdin_used+0x4c0c>
add    %al,(%eax)
hlt
(bad)
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,-0xfffffea(%eax)
(bad)
(bad)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   $0x9c000000
push   %ss
add    %al,(%eax)
in     (%dx),%al
(bad)
(bad)
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x6c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,(%eax)
pop    %ss
add    %al,(%eax)
pusha
(bad)
xor    (%ecx),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffa4,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x17(%eax)
add    %al,(%eax)
dec    %eax
(bad)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi,%edx,1)
add    %al,-0x2(%esi,%eax,8)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x40000017(%eax)
(bad)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,-0x39c40000(%edi,%edx,1)
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %al,%al
pop    %ss
add    %al,(%eax)
push   $0x56fffec6
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %bh,%ah
pop    %ss
add    %al,(%eax)
mov    %es,%esi
(bad)
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bh,(%eax)
sbb    %al,(%eax)
add    %ah,-0x39(%eax)
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
sbbb   $0x0,(%eax)
add    %cl,0x3cfffec7(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ah,-0x57ffffe8(%eax)
(bad)
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
fcompl (%eax)
add    %al,(%eax)
fadd   %st,%st(7)
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a5d02
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
sbb    %bl,(%ecx)
add    %al,(%eax)
adc    %cl,%al
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,0x0(%ecx,%ebx,1)
add    %dl,-0x2(%eax,%ecx,8)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
js     8070fb7 <_IO_stdin_used+0x4f13>
add    %al,(%eax)
jo     8070f6a <_IO_stdin_used+0x4ec6>
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,-0x37740000(%ecx,%ebx,1)
(bad)
ljmp   *0x2(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffed,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
inc    %esp
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
in     $0x19,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
lret   $0xfffe
lea    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ebx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
sbb    %bl,(%edx)
add    %al,(%eax)
add    %cl,%bl
(bad)
inc    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xec34110(%esi,%ecx,1),%dh
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
addb   $0x0,(%eax)
add    %cl,0x0(%edx,%ebx,1)
add    %bl,0x284fffe(%ebx,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd2,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
push   %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%esi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   $0xd0000000
sbb    (%eax),%al
add    %ch,-0x56000133(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
sahf
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bh,(%ebx,%ebx,1)
add    %al,(%eax)
in     (%dx),%al
iret
(bad)
incl   0x0
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
push   %eax
sbb    (%eax),%eax
add    %ch,%al
iret
(bad)
(bad)
jnp    8071180 <_IO_stdin_used+0x50dc>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%esi),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
fwait
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,-0x2de40000(%ebx,%ebx,1)
(bad)
dec    %edx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x14,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
imul   $0xa,(%ecx),%eax
push   %cs
adc    $0x45,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
hlt
sbb    (%eax),%eax
add    %dl,0x29fffe(%esp,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dl,(%esp,%ebx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
aam    $0xfe
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
sbb    $0x0,%al
add    %cl,%ah
aam    $0xfe
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pusha
sbb    $0x0,%al
add    %bl,%al
aam    $0xfe
ljmp   *0x0(%edi,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
clc
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
mov    0x800001c,%al
fdivr  %st,%st(6)
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xe(%ebp)
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x3000001c,%eax
fdivr  %st,%st(6)
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %bh,%al
sbb    $0x0,%al
add    %ah,-0x54000124(%eax)
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e48
dec    %ecx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,-0x1af40000(,%ebx,1)
(bad)
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jo     807138b <_IO_stdin_used+0x52e7>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x84000000
sbb    $0xe5640000,%eax
(bad)
ljmp   *0x2(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
lock sbb $0xe7a80000,%eax
(bad)
(bad)
ljmp   $0xe41,$0x0
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2300e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
xor    %bl,(%esi)
add    %al,(%eax)
pop    %eax
call   900145c <_end+0xf8c3c8>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,0x1e(%eax)
add    %al,(%eax)
and    %ch,%cl
(bad)
decl   0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
push   $0x3
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %ds
add    %al,(%eax)
in     (%dx),%al
repnz (bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
push   %ds
add    %al,(%eax)
clc
repnz (bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
push   %ds
add    %al,(%eax)
add    $0xf3,%al
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
pop    %ds
add    %al,(%eax)
adc    %dh,%bl
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sub    $0x1f,%al
add    %al,(%eax)
sub    $0xf3,%al
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x1f(%eax)
add    %al,(%eax)
cmp    %dh,%bl
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
fs
pop    %ds
add    %al,(%eax)
push   %esp
repz (bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
cwtl
pop    %ds
add    %al,(%eax)
xor    $0xfe,%bl
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x2500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dl,%ah
pop    %ds
add    %al,(%eax)
add    $0xf4,%al
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %dl,(%eax)
and    %al,(%eax)
add    %ch,-0x7b00010c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
inc    %esp
and    %al,(%eax)
add    %al,0x186fffe(,%esi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
test   %ah,(%eax)
add    %al,(%eax)
push   %esp
idiv   %dh
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
les    (%eax),%esp
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
idiv   %esi
(bad)
jl     80716f3 <_IO_stdin_used+0x564f>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
add    $0x21,%al
add    %al,(%eax)
in     $0xf8,%al
(bad)
ljmp   *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3d,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%eax
add    %al,(%eax)
inc    %esp
and    %eax,(%eax)
add    %dl,(%edx,%edi,8)
(bad)
decl   (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x140e0a01,%ebx
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,-0x1fffffdf(%eax)
sti
(bad)
call   *(%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
roll   $0xa,(%ecx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,%ah
and    %eax,(%eax)
add    %bh,0x1f1fffe(%ebp,%edi,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x1,%ah
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%eax)
and    (%eax),%al
add    %bh,-0x1(%eax)
(bad)
(bad)
stc
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
mov    $0x140e0a01,%edx
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   %esp
and    (%eax),%al
add    %dh,(%ecx,%eax,1)
(bad)
push   %esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc6,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
xchg   %eax,%esp
and    (%eax),%al
add    %dh,%ah
add    %bh,%bh
push   %esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc6,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
aam    $0x22
add    %al,(%eax)
mov    $0x4,%ah
(bad)
(bad)
faddl  (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
adc    $0x23,%al
add    %al,(%eax)
push   %esp
push   %es
(bad)
(bad)
faddl  (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax),%eax
add    %al,(%eax)
push   %esp
and    (%eax),%eax
add    %dh,%ah
pop    %es
(bad)
pushl  (%esi)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
loope  80719a1 <_IO_stdin_used+0x58fd>
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,-0xfffffdd(%eax)
or     %edi,%edi
(bad)
add    %ds:(%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
out    %eax,$0x1
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
fsubl  (%ebx)
add    %al,(%eax)
in     (%dx),%al
or     %edi,%edi
decl   (%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sbb    $0x24,%al
add    %al,(%eax)
mov    $0xbffff0d,%esp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc4,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pop    %esp
and    $0x0,%al
add    %cl,0x186ffff(%edi,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pushf
and    $0x0,%al
add    %bl,%ah
adc    %bh,%bh
ljmp   *0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3d,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
fsubl  (%eax,%eax,1)
add    %cl,(%edx,%edx,1)
(bad)
incl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sbb    $0x25,%al
add    %al,(%eax)
pop    %esp
adc    %edi,%edi
(bad)
jl     8071b4b <_IO_stdin_used+0x5aa7>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bl,0x0(%ebp,%eiz,1)
add    %bl,0x5affff(%esp,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4c,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,-0x3fffffdb(%eax)
adc    $0xff,%al
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%ebp)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %dl,%al
and    $0x14c80000,%eax
(bad)
inc    %edi
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
or     %al,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
adc    $0x26,%al
add    %al,(%eax)
push   %esp
sbb    %bh,%bh
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x6b300e43
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cwtl
add    %al,(%eax)
add    %dl,0x26(%eax)
add    %al,(%eax)
pop    %eax
sbb    %bh,%bh
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,-0x14000000(%eax)
add    %al,%es:(%eax)
sub    $0x1f,%al
(bad)
call   *0x41000000(,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
test   %al,(%eax)
add    %al,(%eax)
jo     8071dbd <_IO_stdin_used+0x5d19>
add    %al,(%eax)
enter  $0xff23,$0xff
stos   %al,%es:(%edi)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
hlt
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
dec    %esi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,%al
daa
add    %al,(%eax)
lock sub %edi,%edi
ljmp   *0x6(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
sbb    $0x2,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,0x28(%eax)
add    %al,(%eax)
dec    %eax
xor    %bh,%bh
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
je     8071ec2 <_IO_stdin_used+0x5e1e>
add    %al,(%eax)
aam    $0x30
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
cwtl
sub    %al,(%eax)
add    %dh,%al
xor    %bh,%bh
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
and    %ch,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%ecx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %dl,%ah
sub    %al,(%eax)
add    %dl,(%ecx,%esi,1)
(bad)
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bl,(%ecx,%ebp,1)
add    %al,(%eax)
pop    %esp
xor    %edi,%edi
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
inc    %eax
sub    %eax,(%eax)
add    %ch,0x31(%eax)
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
sub    %eax,%fs:(%eax)
add    %dh,-0x1(%ecx,%esi,1)
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
sub    %eax,(%eax)
add    %dl,0x6cffff(%ecx,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jne    8071fd9 <_IO_stdin_used+0x5f35>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%esp
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
les    (%ecx),%ebp
add    %al,(%eax)
aam    $0x31
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
call   f807203a <_end+0xefffcfa6>
xor    %edi,%edi
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%edx,%ebp,1)
add    %al,(%eax)
add    $0x32,%al
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
sub    %ch,(%edx)
add    %al,(%eax)
and    %dh,(%edx)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,0x0(%edx,%ebp,1)
add    %dh,(%edx,%esi,1)
(bad)
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x2a(%eax)
add    %al,(%eax)
jo     80720c4 <_IO_stdin_used+0x6020>
(bad)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jne    80720ad <_IO_stdin_used+0x6009>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    %gs,(%edx)
add    %al,(%eax)
pushf
xor    %bh,%bh
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    $0x2a,%al
add    %al,(%eax)
mov    $0x3fffff32,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0xd4000000
sub    (%eax),%al
add    %dl,%ah
xor    %bh,%bh
jmp    *%ebp
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8a,0x2700e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
mov    $0xa,%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
inc    %eax
sub    (%eax),%eax
add    %bl,0x45(%eax)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %ah,0xe(%edx,%ecx,1)
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
js     80721c9 <_IO_stdin_used+0x6125>
add    %al,(%eax)
pusha
inc    %ebp
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    %gs,(%ebx)
add    %al,(%eax)
pop    %esp
inc    %ebp
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sub    (%eax),%eax
add    %dh,-0x1(%ebp,%eax,2)
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%eax)
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
mov    $0x7c00002b,%esp
inc    %ebp
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x59,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     -0x3d(%ebx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
sub    (%eax),%eax
add    %cl,0x2dffff(%ebp,%eax,2)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    $0x2c,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
inc    %ebp
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sbb    $0x2c,%al
add    %al,(%eax)
mov    $0x18ffff45,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
sub    $0x0,%al
add    %cl,%al
inc    %ebp
(bad)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x6f,(%ebx)
or     %bl,%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     -0x3d(%edx,%ecx,1),%edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,0x0(%esp,%ebp,1)
add    %al,(%esi,%eax,2)
(bad)
dec    %ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff96,0x2400e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,0x477c0000(%esp,%ebp,1)
(bad)
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jnp    8072306 <_IO_stdin_used+0x6262>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
clc
sub    $0x0,%al
add    %dl,(%eax)
dec    %eax
(bad)
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%ah
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xor    %ch,0x48880000
(bad)
pushl  0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
pop    %eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x2d700000(%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0x9fffff4b,%eax
or     $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1d00e46
lea    (%edx,%ecx,1),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
and    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
orb    $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %dl,(%eax)
add    %al,%cs:(%eax)
mov    $0xb1ffff57,%eax
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6d,0x3600e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
ret    $0xe0a
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
subb   $0x0,(%esi)
add    %cl,(%eax)
pop    %esi
(bad)
call   *%ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    (%esi),%ebx
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,-0x4fffffd2(%eax)
pop    %edi
(bad)
jmp    *0xa
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
cmp    %al,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
xchg   %eax,%ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    %ch,(%edi)
add    %al,(%eax)
jo     80725bb <_IO_stdin_used+0x6517>
(bad)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xa(%esi)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%edx
add    $0x0,%al
add    %al,(%eax)
cwtl
add    %al,(%eax)
add    %cl,0x2f(%eax)
add    %al,(%eax)
nop
imul   $0x220ff,%edi,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff84,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    $0xa,%bl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %ah,%ah
das
add    %al,(%eax)
adc    $0x6b,%al
(bad)
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a4b02
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
xor    %dh,(%eax)
add    %al,(%eax)
sub    %ch,-0x1(%ebx)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
push   $0x60000030
imul   $0xffffffff,%edi,%edi
and    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %al,0x78000030(%eax)
imul   $0xffffffff,%edi,%edi
js     80726ae <_IO_stdin_used+0x660a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     80726cf <_IO_stdin_used+0x662b>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%al
xor    %al,(%eax)
add    %ah,0x1affff6b(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %ch,%ah
xor    %al,(%eax)
add    %ch,0xe1ffff(%ebx,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
inc    %esp
xor    %eax,(%eax)
add    %al,-0x1(%esp,%ebp,2)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%ebp)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
pop    %esp
xor    %eax,(%eax)
add    %ch,-0x1(%esp,%ebp,2)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x31(%eax)
add    %al,(%eax)
mov    %ch,-0x1(%edi,%edi,8)
or     %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
test   %dh,(%ecx)
add    %al,(%eax)
test   %ch,-0x1(%edi,%edi,8)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec37804(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,-0x67ffffcf(%eax)
insb   (%dx),%es:(%edi)
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ch,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
xor    %eax,(%eax)
add    %bl,0x3b9ffff(%esp,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
sub    $0x32,%al
add    %al,(%eax)
sbb    $0x70,%al
(bad)
call   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %edi
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a72,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
pop    %esp
xor    (%eax),%al
add    %cl,-0x1(%ecx,%esi,2)
jmp    *0x9(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %edx
xchg   %eax,(%ebx)
xchg   %al,(%ecx,%ecx,2)
addl   $0x41,0xc30a4202
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
mov    %?,(%edx)
add    %al,(%eax)
mov    $0xd7ffff7a,%esp
sldt   (%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2f00e46
enter  $0xa05,$0xe
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,%al
xor    (%eax),%al
add    %bl,-0x76(%eax)
(bad)
(bad)
in     (%dx),%eax
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
push   %esi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
adc    $0x33,%al
add    %al,(%eax)
add    $0x8d,%al
(bad)
(bad)
jmp    8072943 <_IO_stdin_used+0x689f>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbd,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %dl,0x0(%ebx,%esi,1)
add    %dh,0xc2ffff(%esi,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     80729a3 <_IO_stdin_used+0x68ff>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %esi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
pushf
xor    (%eax),%eax
add    %bh,(%edi,%ecx,4)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %dh,-0x70ac0000(%ebx,%esi,1)
(bad)
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bh,%ah
xor    (%eax),%eax
add    %ch,(%eax,%edx,4)
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%cl
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
and    $0x0,%al
add    %al,(%eax)
sub    %dh,(%eax,%eax,1)
add    %ah,-0x70(%eax)
(bad)
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5adfe(%ebx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %eax
or     %bl,%al
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
push   %eax
xor    $0x0,%al
add    %ch,0x1effff90(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa2,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   $0x90000000
xor    $0x0,%al
add    %cl,0x24ffff92(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    %cl,(%esi)
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
cld
xor    $0x0,%al
add    %cl,-0x1(%ebx,%edx,4)
call   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     8072b4b <_IO_stdin_used+0x6aa7>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    8072b82 <_IO_stdin_used+0x6ade>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,0x35(%eax)
add    %al,(%eax)
inc    %eax
xchg   %eax,%esp
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,-0x6b8c0000(%ebp,%esi,1)
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x70000035(%eax)
xchg   %eax,%esp
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
.byte 0x10
mov    $0x4,%dl
.byte 0x8
lock mov $0x4,%cl
.byte 0x8
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
fiadd  (%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
jmp    14073f1d <_end+0xbffee89>
add    %al,(%eax)
add    %dh,%al
cwtl
add    $0x8,%al
or     $0x8c000000,%eax
rolb   $0x8,(%esi)
sbb    %eax,(%eax)
add    %al,(%eax)
clc
ds
pop    %es
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
cld
ds
pop    %es
or     %bl,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
dec    %eax
mov    %es,(%eax,%ecx,1)
push   %es
add    %al,(%eax)
add    %ch,0xa080482(%eax)
add    %al,(%eax)
add    %dl,0xb000006(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
pop    %es
or     %al,(%edx)
add    %al,(%eax)
add    %dl,(%eax)
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %ah,%al
xchg   %eax,%esp
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
mov    0x12080494,%al
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x10(%edi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x26(%edi)
xchg   %eax,%edx
add    $0x8,%al
add    %al,(%eax)
add    $0x3f,%al
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%esi)
cltd
add    $0x8,%al
inc    %esi
cltd
add    $0x8,%al
push   %esi
cltd
add    $0x8,%al
cwtd
add    $0x8,%al
jbe    8073fb7 <_IO_stdin_used+0x7f13>
add    $0x8,%al
xchg   %bl,-0x6669f7fc(%ecx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cltd
add    $0x8,%al
mov    $0x99,%dh
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
(bad)
cltd
add    $0x8,%al
out    %al,$0x99
add    $0x8,%al
negb   -0x65f9f7fc(%ecx)
add    $0x8,%al
push   %ss
lcall  $0x804,$0x9a260804
ss
lcall  $0x804,$0x9a460804
push   %esi
lcall  $0x804,$0x9a660804
jbe    8073ff8 <_IO_stdin_used+0x7f54>
add    $0x8,%al
xchg   %bl,-0x6569f7fc(%edx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lcall  $0x804,$0x9ab60804
(bad)
lcall  $0x804,$0x9ad60804
out    %al,$0x9a
add    $0x8,%al
negb   -0x64f9f7fc(%edx)
add    $0x8,%al
push   %ss
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
inc    %esi
fwait
add    $0x8,%al
push   %esi
fwait
add    $0x8,%al
fwait
fwait
add    $0x8,%al
jbe    8074039 <_IO_stdin_used+0x7f95>
add    $0x8,%al
xchg   %bl,-0x6469f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
mov    $0x9b,%dh
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
out    %al,$0x9b
add    $0x8,%al
negb   -0x63f9f7fc(%ebx)
add    $0x8,%al
push   %ss
pushf
add    $0x8,%al
es
pushf
add    $0x8,%al
ss
pushf
add    $0x8,%al
inc    %esi
pushf
add    $0x8,%al
push   %esi
pushf
add    $0x8,%al
pushfw
add    $0x8,%al
jbe    807407a <_IO_stdin_used+0x7fd6>
add    $0x8,%al
xchg   %bl,0x49c9608(%esp,%eax,1)
or     %ah,-0x49f7fb64(%esi)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
(bad)
pushf
add    $0x8,%al
out    %al,$0x9c
add    $0x8,%al
negb   0x49d0608(%esp,%eax,1)
or     %dl,(%esi)
popf
add    $0x8,%al
es
popf
add    $0x8,%al
ss
popf
add    $0x8,%al
inc    %esi
popf
add    $0x8,%al
push   %esi
popf
add    $0x8,%al
popfw
add    $0x8,%al
jbe    80740bb <_IO_stdin_used+0x8017>
add    $0x8,%al
xchg   %bl,-0x6269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popf
add    $0x8,%al
mov    $0x9d,%dh
add    $0x8,%al
(bad)
popf
add    $0x8,%al
(bad)
popf
add    $0x8,%al
out    %al,$0x9d
add    $0x8,%al
negb   -0x61f9f7fc(%ebp)
add    $0x8,%al
push   %ss
sahf
add    $0x8,%al
es
sahf
add    $0x8,%al
ss
sahf
add    $0x8,%al
inc    %esi
sahf
add    $0x8,%al
push   %esi
sahf
add    $0x8,%al
data16
sahf
add    $0x8,%al
jbe    80740fc <_IO_stdin_used+0x8058>
add    $0x8,%al
xchg   %bl,-0x6169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
sahf
add    $0x8,%al
mov    $0x9e,%dh
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
(bad)
sahf
add    $0x8,%al
out    %al,$0x9e
add    $0x8,%al
negb   -0x60f9f7fc(%esi)
add    $0x8,%al
push   %ss
lahf
add    $0x8,%al
es
lahf
add    $0x8,%al
ss
lahf
add    $0x8,%al
inc    %esi
lahf
add    $0x8,%al
push   %esi
lahf
add    $0x8,%al
data16
lahf
add    $0x8,%al
jbe    807413d <_IO_stdin_used+0x8099>
add    $0x8,%al
xchg   %bl,-0x6069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lahf
add    $0x8,%al
mov    $0x9f,%dh
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
(bad)
lahf
add    $0x8,%al
out    %al,$0x9f
add    $0x8,%al
negb   -0x5ff9f7fc(%edi)
add    $0x8,%al
push   %ss
mov    0xa0260804,%al
add    $0x8,%al
mov    %ss:0xa0460804,%al
add    $0x8,%al
push   %esi
mov    0xa0660804,%al
add    $0x8,%al
jbe    807417e <_IO_stdin_used+0x80da>
add    $0x8,%al
xchg   %ah,-0x5f69f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    0xa0b60804,%al
add    $0x8,%al
(bad)
mov    0xa0d60804,%al
add    $0x8,%al
out    %al,$0xa0
add    $0x8,%al
mulb   -0x5ef9f7fc(%eax)
add    $0x8,%al
push   %ss
mov    0xa1260804,%eax
add    $0x8,%al
mov    %ss:0xa1460804,%eax
add    $0x8,%al
(bad)
(bad)
(bad)
lcall  *(%ecx)
add    (%eax),%eax
add    %al,(%edx)
add    %al,(%eax)
add    %dh,%ah
movb   $0x8,(%esi)
sti
movb   $0x8,(%esi)
pusha
ret
push   %es
or     %ah,-0x3d(%eax)
push   %es
or     %al,(%edi,%eax,8)
push   %es
or     %al,(%edi)
movl   $0x6c70708,(%esi)
or     %cl,(%edx)
movl   $0x6c70d08,(%esi)
or     %cl,0x130806c7
movl   $0xffffff08,(%esi)
incl   (%ecx)
add    %al,(%eax)
add    %ah,%al
mov    $0x10805,%ebx
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %dh,0x1000807(%edx,%eax,2)
add    %al,(%eax)
inc    %eax
dec    %ebx
pop    %es
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
addr16 jb 68 <_init-0x8049888>
jo     5 <_init-0x80498eb>
add    %al,(%eax)
add    %al,%dl
dec    %ebp
mov    $0x1f,%dh
