das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %dl,0x23abcdf4
sub    %ebp,%esp
lret   $0xa58e
aaa
add    $0x16a11b00,%eax
.byte 0x30
.byte 0x3d
.byte 0x2a
.byte 0x70
add    (%eax),%eax
add    %al,(%eax)
data16
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %al,-0x50000000(%edx)
and    %ecx,0x1000408(%edi,%ecx,1)
addb   $0x0,(%eax,%eax,1)
data16
add    %al,(%eax)
add    %ch,0x0(%ecx)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,0x45(%edx)
aad    $0xec
mov    $0x297c92e3,%edx
sbb    $0xf2381c8c,%eax
mov    (%esi,%eax,4),%ebx
lock xchg %eax,%esi
jl     8048199 <_init-0x10e7>
dec    %ebx
jecxz  80481b0 <_init-0x10d0>
push   %bp
popa
adc    %bl,%al
jno    804824f <_init-0x1031>
sbb    $0xb9,%al
(bad)
icebp
push   %cs
ljmp   $0xf7c4,$0x320eefd3
.byte 0x12
mov    $0xa2,%bl
notl   (%edx)
stos   %al,%es:(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     804823a <_init-0x1046>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fldl   (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
loopne 804828a <_init-0xff6>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x3
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edi
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%esp,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     80483fc <_init-0xe84>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x1,%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jne    804841d <_init-0xe63>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,$0x0
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    (%ecx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ss
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ebx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebx
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
(bad)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x3,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x1,%dh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %eax,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %esi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%cl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%eax,%eax,1),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
popa
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%bl
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repz add (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pop    %es
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lahf
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x4(%edx)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
addl   $0x0,0x8
adc    %al,(%eax)
sbb    %al,(%eax)
pop    %ebp
add    $0x0,%al
add    %dl,(%eax)
aad    $0x5
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %dl,0x2(%eax)
test   %al,0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,(%ecx)
add    (%eax),%eax
add    %al,%al
addl   $0x0,0x408
adc    %eax,(%eax)
sbb    %eax,(%eax)
inc    %ebp
add    $0x0,%al
add    %al,-0x6d(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   (%eax)
add    %al,(%eax)
inc    %esp
cs
add    $0x408,%eax
add    %dl,(%ecx)
add    %cl,(%edi)
add    %cl,%bl
add    %eax,(%eax)
add    %ah,%ah
addl   $0x0,0x408
adc    %eax,(%eax)
sbb    %eax,(%eax)
push   %ecx
add    $0x0,%al
add    %ah,0x805(%ebx,%eax,4)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %eax,(%eax)
push   $0x0
add    %al,(%eax)
adcb   $0x0,0x804(%edx)
add    %dl,(%edx)
add    %cl,(%ebx)
add    %al,%cl
add    %al,(%eax)
add    %dl,(%esi,%ebp,1)
add    $0x8,%eax
add    %dl,(%edx)
add    %cl,(%esi)
add    %bl,0x1(%esi)
add    %al,(%eax)
loopne 8048891 <_init-0x9ef>
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,(%edx)
add    (%eax),%eax
add    %al,(%esp,%eax,4)
add    $0x408,%eax
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
jae    8048993 <_init-0x8ed>
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %eax,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     80489a7 <_init-0x8d9>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    80489d2 <_init-0x8ae>
popa
jb     80489d5 <_init-0x8ab>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    80489c7 <_init-0x8b9>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    80489e8 <_init-0x898>
gs
jae    8048978 <_init-0x908>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     80489e4 <_init-0x89c>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
imul   $0x73690074,0x69(%esi),%ebp
pop    %edi
jae    8048a02 <_init-0x87e>
insb   (%dx),%es:(%edi)
imul   $0x6e655f78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x65(%edi)
je     8048a15 <_init-0x86b>
jae    8048a14 <_init-0x86c>
jb     8048a18 <_init-0x868>
popa
je     8048a1b <_init-0x865>
arpl   %bp,0x6e(%edi)
add    %ah,0x67(%esi)
gs
je     8048a25 <_init-0x85b>
imul   $0x66006e6f,0x63(%ebp,%eiz,2),%ebp
jb     8048a2e <_init-0x852>
arpl   %bp,%gs:0x6e(%edi)
add    %ch,0x65(%edi,%eiz,2)
je     8048a39 <_init-0x847>
imul   $0x73006e6f,0x63(%ebp,%eiz,2),%ebp
gs
je     8048a44 <_init-0x83c>
jae    8048a43 <_init-0x83d>
jb     8048a47 <_init-0x839>
popa
je     8048a4a <_init-0x836>
arpl   %bp,0x6e(%edi)
add    %bl,0x66(%edi)
imul   $0x62696c00,0x69(%esi),%ebp
arpl   %bp,(%esi)
jae    8048a65 <_init-0x81b>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048a73 <_init-0x80d>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    8048a80 <_init-0x800>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
push   $0x646f6d
pop    %edi
pop    %edi
jo     8048a93 <_init-0x7ed>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8048a96 <_init-0x7ea>
je     8048a2f <_init-0x851>
jb     8048a96 <_init-0x7ea>
pop    %edi
jae    8048a99 <_init-0x7e7>
je     8048a95 <_init-0x7eb>
jae    8048ab1 <_init-0x7cf>
outsb  %ds:(%esi),(%dx)
je     8048a9c <_init-0x7e4>
js     8048a3d <_init-0x843>
arpl   %bp,0x61(%ebp,%eiz,2)
jb     8048aa8 <_init-0x7d8>
jb     8048ab7 <_init-0x7c9>
pop    %edi
jne    8048ab6 <_init-0x7ca>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %bl,%fs:0x49(%edi)
dec    %edi
pop    %edi
jo     8048aca <_init-0x7b6>
je     8048aba <_init-0x7c6>
add    %dh,0x65(%ebx)
je     8048ac8 <_init-0x7b8>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     8048ada <_init-0x7a6>
outsl  %ds:(%esi),(%dx)
ja     8048acc <_init-0x7b4>
add    %dh,0x77(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048ad6 <_init-0x7aa>
jb     8048a73 <_init-0x80d>
jae    8048ae9 <_init-0x797>
jb     8048ae5 <_init-0x79b>
arpl   %bp,0x70(%ebp)
add    %ah,0x6e(%ebx,%eiz,2)
addr16
gs
je     8048af6 <_init-0x78a>
gs
js     8048af9 <_init-0x787>
add    %ch,0x70(%edi)
je     8048af3 <_init-0x78d>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048b03 <_init-0x77d>
arpl   %bp,0x72(%eax)
add    %ah,0x67(%ebx,%eiz,2)
gs
je     8048b0f <_init-0x771>
gs
js     8048b12 <_init-0x76e>
add    %dh,0x63(%edi)
jb     8048b17 <_init-0x769>
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
bound  %eax,(%eax)
data16
je     8048b0f <_init-0x771>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048b1f <_init-0x761>
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jae    8048b2d <_init-0x753>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6e696c6e,0x75(%eax,%eax,1),%ebp
imul   $0x69,(%eax),%eax
jae    8048b47 <_init-0x739>
jo     8048b44 <_init-0x73c>
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
bound  %esi,0x77(%edi,%ebp,2)
arpl   %ax,(%eax)
je     8048b55 <_init-0x72b>
ja     8048b5d <_init-0x723>
jo     8048b5a <_init-0x726>
gs
jb     8048aed <_init-0x793>
popa
bound  %ebp,0x72(%edi)
je     8048af3 <_init-0x78d>
jae    8048b69 <_init-0x717>
imul   $0x636d656d,%fs:0x0(%esi),%ebp
push   $0x6f700072
jo     8048b69 <_init-0x717>
outsb  %ds:(%esi),(%dx)
add    %dh,0x65(%edx)
ja     8048b73 <_init-0x70d>
outsb  %ds:(%esi),(%dx)
add    %bl,%fs:0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     8048b78 <_init-0x708>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048b91 <_init-0x6ef>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     8048b24 <_init-0x75c>
jae    8048b9a <_init-0x6e6>
jb     8048b9c <_init-0x6e4>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     8048ba4 <_init-0x6dc>
jns    8048b32 <_init-0x74e>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048baf <_init-0x6d1>
jb     8048ba9 <_init-0x6d7>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     8048ba9 <_init-0x6d7>
add    %bl,0x5f(%edi)
data16
ja     8048bbe <_init-0x6c2>
imul   $0x72660067,0x6e(%ecx,%ebp,2),%esi
gs
popa
fs
pop    %edi
jne    8048bc8 <_init-0x6b8>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048bcb <_init-0x6b5>
je     8048b68 <_init-0x718>
pop    %edi
pop    %edi
gs
jb     8048bdf <_init-0x6a1>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x6d656d00,0x6e(%edi),%ebp
arpl   %bp,0x70(%ebp)
add    %ah,0x65(%edi)
je     8048be8 <_init-0x698>
gs
insb   (%dx),%es:(%edi)
imul   $0x61656c63,0x0(%ebp),%ebp
jb     8048bf4 <_init-0x68c>
jb     8048c03 <_init-0x67d>
add    %dh,0x63(%edi)
je     8048c05 <_init-0x67b>
bound  %eax,(%eax)
pop    %edi
pop    %edi
data16
js     8048c10 <_init-0x670>
je     8048c00 <_init-0x680>
je     8048bd7 <_init-0x6a9>
xor    $0x0,%al
pop    %edi
pop    %edi
data16
jo     8048c1a <_init-0x666>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
arpl   %bp,0x6f(%eax)
ja     8048c25 <_init-0x65b>
add    %dh,0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    8048c32 <_init-0x64e>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048c31 <_init-0x64f>
add    %bl,0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048c3b <_init-0x645>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x6b(%ebp)
outsl  %ds:(%esi),(%dx)
jae    8048c54 <_init-0x62c>
gs
insl   (%dx),%es:(%edi)
jo     8048c1a <_init-0x666>
xor    $0x0,%al
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    8048c5c <_init-0x624>
popa
jae    8048c5d <_init-0x623>
add    %ch,0x62(%ebp)
jae    8048c60 <_init-0x620>
outsb  %ds:(%esi),(%dx)
imul   $0x6f635f65,0x72(%eax,%eax,1),%esi
insl   (%dx),%es:(%edi)
jo     8048c6c <_init-0x614>
insb   (%dx),%es:(%edi)
gs
pop    %edi
jo     8048c69 <_init-0x617>
je     8048c7e <_init-0x602>
gs
jb     8048c7b <_init-0x605>
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
js     8048c86 <_init-0x5fa>
je     8048c76 <_init-0x60a>
je     8048c4d <_init-0x633>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    8048c83 <_init-0x5fd>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048c21 <_init-0x65f>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048ca4 <_init-0x5dc>
outsb  %ds:(%esi),(%dx)
jbe    8048c42 <_init-0x63e>
outsl  %ds:(%esi),(%dx)
jo     8048cb9 <_init-0x5c7>
popa
jb     8048caf <_init-0x5d1>
add    %dh,0x74(%ebx)
fs
gs
jb     8048cc1 <_init-0x5bf>
add    %bl,0x6f(%edi)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
outsb  %ds:(%esi),(%dx)
gs
ja     8048cc0 <_init-0x5c0>
push   $0x6b6e75
jb     8048cc9 <_init-0x5b7>
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x63736600,0x6b(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8048ce5 <_init-0x59b>
jo     8048cec <_init-0x594>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %dh,0x63(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    8048cf0 <_init-0x590>
add    %dh,0x65(%edx)
pop    %edi
jae    8048cf6 <_init-0x58a>
popa
jb     8048cf7 <_init-0x589>
push   $0x72776600
imul   $0x61657266,0x0(%ebp,%eiz,2),%esi
add    %dh,%fs:0x65(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebx)
jb     8048d24 <_init-0x55c>
gs
jb     8048d24 <_init-0x55c>
arpl   %bp,0x70(%ebp)
add    %dh,0x74(%ebx)
jb     8048d1c <_init-0x564>
push   $0x5f5f0072
jbe    8048d26 <_init-0x55a>
jo     8048d34 <_init-0x54c>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
outsl  %fs:(%esi),(%dx)
jo     8048d35 <_init-0x54b>
outsb  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
je     8048d4b <_init-0x535>
jne    8048d4e <_init-0x532>
jo     8048d45 <_init-0x53b>
jb     8048d41 <_init-0x53f>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048d4d <_init-0x533>
je     8048d60 <_init-0x520>
bound  %esi,0x66(%ebp)
add    %bl,0x5f(%edi)
jae    8048d62 <_init-0x51e>
jb     8048d5d <_init-0x523>
outsb  %ds:(%esi),(%dx)
je     8048d5d <_init-0x523>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048d68 <_init-0x518>
add    %ah,0x6f(%esi)
jo     8048d6d <_init-0x513>
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
pop    %edi
outsl  %ds:(%esi),(%dx)
bound  %esi,0x74(%ebx)
popa
arpl   %bp,0x5f(%ebx)
bound  %esp,0x67(%ebp)
imul   $0x646e6962,0x0(%esi),%ebp
je     8048d86 <_init-0x4fa>
js     8048d97 <_init-0x4e9>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x63727473,0x0(%esi),%ebp
insl   (%dx),%es:(%edi)
jo     8048d31 <_init-0x54f>
jae    8048da7 <_init-0x4d9>
jb     8048d9a <_init-0x4e6>
jb     8048da9 <_init-0x4d7>
outsl  %ds:(%esi),(%dx)
jb     8048d3a <_init-0x546>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048dba <_init-0x4c6>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8048d53 <_init-0x52d>
pop    %edi
pop    %edi
outsl  %ds:(%esi),(%dx)
jbe    8048dbd <_init-0x4c3>
jb     8048dc0 <_init-0x4c0>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048d5e <_init-0x522>
data16
jo     8048dd6 <_init-0x4aa>
je     8048dd6 <_init-0x4aa>
pop    %edi
jne    8048dd4 <_init-0x4ac>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x65(%edi)
fs
popa
je     8048dd9 <_init-0x4a7>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8048df5 <_init-0x48b>
popa
jb     8048df8 <_init-0x488>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
aaa
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    $0x3000000,%eax
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000300
add    %al,(%ebx)
add    %al,0x3000600
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000700
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000300
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    (%eax),%eax
or     %al,(%eax)
add    $0x5000500,%eax
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0x3000000
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
or     %al,(%eax)
or     %al,(%eax)
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %eax,(%eax)
pop    %es
add    %al,%bh
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x80000,0xd(%ecx),%ebp
bound  %eax,(%eax,%eax,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edi)
imul   $0x70000,0xd(%ecx),%ebp
insb   (%dx),%es:(%edi)
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x476,0x60000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x50000,%eax
addb   $0x0,(%eax,%eax,1)
adc    %al,(%eax)
add    %al,(%eax)
je     8048f23 <_init-0x35d>
imul   $0x40000,(%ecx),%ecx
mov    (%eax,%eax,1),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
xchg   %eax,%esi
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x20000,0xd(%ecx),%ebp
mov    0x4,%al
add    %al,(%eax)
cld
jg     8048f40 <_init-0x340>
or     %al,(%esi)
sub    $0x0,%al
add    %al,%al
addl   $0x0,0x690508
loopne 8048ecd <_init-0x3b3>
add    $0x700508,%eax
add    %ah,%ah
addl   $0x0,0x6c0508
add    %al,0x680508(%ebp,%eax,1)
add    %al,(%esp,%eax,4)
add    $0x710508,%eax
or     $0x80,%al
add    $0x10708,%eax
add    %dl,(%eax)
addb   $0x0,0x20708
adc    $0x80,%al
add    $0x30708,%eax
add    %bl,(%eax)
addb   $0x0,0x40708
sbb    $0x80,%al
add    $0x50708,%eax
add    %ah,(%eax)
addb   $0x0,0x60708
and    $0x80,%al
add    $0x80708,%eax
add    %ch,(%eax)
addb   $0x0,0x90708
sub    $0x80,%al
add    $0x6a0708,%eax
add    %dh,(%eax)
addb   $0x0,0xa0708
xor    $0x80,%al
add    $0xb0708,%eax
add    %bh,(%eax)
addb   $0x0,0xc0708
cmp    $0x80,%al
add    $0xd0708,%eax
add    %al,-0x80(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%eax,4)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
addb   $0x0,0x100708
dec    %esp
addb   $0x0,0x110708
push   %eax
addb   $0x0,0x120708
push   %esp
addb   $0x0,0x130708
pop    %eax
addb   $0x0,0x140708
pop    %esp
addb   $0x0,0x150708
pusha
addb   $0x0,0x160708
addb   $0x0,%fs:0x170708
push   $0x7080580
sbb    %al,(%eax)
add    %ch,0x5(%eax,%eax,4)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,-0x80(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%eax,4)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,-0x80(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%eax,4)
or     %al,(%edi)
sbb    $0x80800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%eax,4)
add    %al,(%eax)
mov    %al,0x20070805(%eax)
add    %al,(%eax)
mov    %es,0x21070805(%eax)
add    %al,(%eax)
nop
addb   $0x0,0x220708
xchg   %eax,%esp
addb   $0x0,0x230708
cwtl
addb   $0x0,0x240708
pushf
addb   $0x0,0x250708
mov    0x7080580,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
addb   $0x0,0x270708
test   $0x80,%al
add    $0x280708,%eax
add    %ch,0x29070805(%eax,%eax,4)
add    %al,(%eax)
mov    $0x80,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%eax,4)
add    %al,(%eax)
mov    $0x7080580,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%eax,4)
add    %al,(%eax)
rolb   $0x0,0x2e070805(%eax)
add    %al,%ah
addb   $0x0,0x2f0708
enter  $0x580,$0x8
pop    %es
xor    %al,(%eax)
add    %cl,%ah
addb   $0x0,0x310708
rolb   0x32070805(%eax)
add    %al,(%eax)
aam    $0x80
add    $0x330708,%eax
add    %bl,%al
addb   $0x0,0x340708
faddl  0x35070805(%eax)
add    %al,(%eax)
loopne 8049092 <_init-0x1ee>
add    $0x360708,%eax
add    %ah,%ah
addb   $0x0,0x370708
call   f0c96a5 <_end+0x706c195>
cmp    %al,(%eax)
add    %ch,%ah
addb   $0x0,0x390708
lock addb $0x0,0x3a0708
hlt
addb   $0x0,0x3b0708
clc
addb   $0x0,0x3c0708
cld
addb   $0x0,0x3d0708
add    %al,0x3e070805(%ecx)
add    %al,(%eax)
add    $0x81,%al
add    $0x3f0708,%eax
add    %cl,(%eax)
addl   $0x5810c00,0x400708
05
or     %al,(%edi)
inc    %ecx
add    %al,(%eax)
adc    %al,0x42070805(%ecx)
add    %al,(%eax)
adc    $0x81,%al
add    $0x430708,%eax
add    %bl,(%eax)
addl   $0x5811c00,0x440708
05
or     %al,(%edi)
inc    %ebp
add    %al,(%eax)
and    %al,0x46070805(%ecx)
add    %al,(%eax)
and    $0x81,%al
add    $0x470708,%eax
add    %ch,(%eax)
addl   $0x5812c00,0x480708
05
or     %al,(%edi)
dec    %ecx
add    %al,(%eax)
xor    %al,0x4a070805(%ecx)
add    %al,(%eax)
xor    $0x81,%al
add    $0x4b0708,%eax
add    %bh,(%eax)
addl   $0x5813c00,0x4c0708
05
or     %al,(%edi)
dec    %ebp
add    %al,(%eax)
inc    %eax
addl   $0x5814400,0x4e0708
05
or     %al,(%edi)
push   %eax
add    %al,(%eax)
dec    %eax
addl   $0x5814c00,0x510708
05
or     %al,(%edi)
push   %edx
add    %al,(%eax)
push   %eax
addl   $0x5815400,0x530708
05
or     %al,(%edi)
push   %esp
add    %al,(%eax)
pop    %eax
addl   $0x5815c00,0x560708
05
or     %al,(%edi)
push   %edi
add    %al,(%eax)
pusha
addl   $0x5816400,0x580708
05
or     %al,(%edi)
pop    %ecx
add    %al,(%eax)
push   $0x7080581
pop    %edx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
addl   $0x5817000,0x5b0708
05
or     %al,(%edi)
pop    %esp
add    %al,(%eax)
je     80491bb <_init-0xc5>
add    $0x5d0708,%eax
add    %bh,-0x7f(%eax)
add    $0x5e0708,%eax
add    %bh,0x5(%ecx,%eax,4)
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
addb   $0x0,0x60070805(%ecx)
add    %al,0x61070805(%ecx,%eax,4)
add    %al,(%eax)
mov    %al,0x62070805(%ecx)
add    %al,(%eax)
mov    %es,0x63070805(%ecx)
add    %al,(%eax)
nop
addl   $0x5819400,0x640708
05
or     %al,(%edi)
add    %al,%gs:(%eax)
push   %ebx
sub    $0x8,%esp
call   8049d50 <fchmod@plt+0x470>
add    $0xed77,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804929e <_init+0x1e>
call   8049570 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8058004
jmp    *0x8058008
add    %al,(%eax)
jmp    *0x805800c
push   $0x0
jmp    80492b0 <_init+0x30>
jmp    *0x8058010
push   $0x8
jmp    80492b0 <_init+0x30>
jmp    *0x8058014
push   $0x10
jmp    80492b0 <_init+0x30>
jmp    *0x8058018
push   $0x18
jmp    80492b0 <_init+0x30>
jmp    *0x805801c
push   $0x20
jmp    80492b0 <_init+0x30>
jmp    *0x8058020
push   $0x28
jmp    80492b0 <_init+0x30>
jmp    *0x8058024
push   $0x30
jmp    80492b0 <_init+0x30>
jmp    *0x8058028
push   $0x38
jmp    80492b0 <_init+0x30>
jmp    *0x805802c
push   $0x40
jmp    80492b0 <_init+0x30>
jmp    *0x8058030
push   $0x48
jmp    80492b0 <_init+0x30>
jmp    *0x8058034
push   $0x50
jmp    80492b0 <_init+0x30>
jmp    *0x8058038
push   $0x58
jmp    80492b0 <_init+0x30>
jmp    *0x805803c
push   $0x60
jmp    80492b0 <_init+0x30>
jmp    *0x8058040
push   $0x68
jmp    80492b0 <_init+0x30>
jmp    *0x8058044
push   $0x70
jmp    80492b0 <_init+0x30>
jmp    *0x8058048
push   $0x78
jmp    80492b0 <_init+0x30>
jmp    *0x805804c
push   $0x80
jmp    80492b0 <_init+0x30>
jmp    *0x8058050
push   $0x88
jmp    80492b0 <_init+0x30>
jmp    *0x8058054
push   $0x90
jmp    80492b0 <_init+0x30>
jmp    *0x8058058
push   $0x98
jmp    80492b0 <_init+0x30>
jmp    *0x805805c
push   $0xa0
jmp    80492b0 <_init+0x30>
jmp    *0x8058060
push   $0xa8
jmp    80492b0 <_init+0x30>
jmp    *0x8058064
push   $0xb0
jmp    80492b0 <_init+0x30>
jmp    *0x8058068
push   $0xb8
jmp    80492b0 <_init+0x30>
jmp    *0x805806c
push   $0xc0
jmp    80492b0 <_init+0x30>
jmp    *0x8058070
push   $0xc8
jmp    80492b0 <_init+0x30>
jmp    *0x8058074
push   $0xd0
jmp    80492b0 <_init+0x30>
jmp    *0x8058078
push   $0xd8
jmp    80492b0 <_init+0x30>
jmp    *0x805807c
push   $0xe0
jmp    80492b0 <_init+0x30>
jmp    *0x8058080
push   $0xe8
jmp    80492b0 <_init+0x30>
jmp    *0x8058084
push   $0xf0
jmp    80492b0 <_init+0x30>
jmp    *0x8058088
push   $0xf8
jmp    80492b0 <_init+0x30>
jmp    *0x805808c
push   $0x100
jmp    80492b0 <_init+0x30>
jmp    *0x8058090
push   $0x108
jmp    80492b0 <_init+0x30>
jmp    *0x8058094
push   $0x110
jmp    80492b0 <_init+0x30>
jmp    *0x8058098
push   $0x118
jmp    80492b0 <_init+0x30>
jmp    *0x805809c
push   $0x120
jmp    80492b0 <_init+0x30>
jmp    *0x80580a0
push   $0x128
jmp    80492b0 <_init+0x30>
jmp    *0x80580a4
push   $0x130
jmp    80492b0 <_init+0x30>
jmp    *0x80580a8
push   $0x138
jmp    80492b0 <_init+0x30>
jmp    *0x80580ac
push   $0x140
jmp    80492b0 <_init+0x30>
jmp    *0x80580b0
push   $0x148
jmp    80492b0 <_init+0x30>
jmp    *0x80580b4
push   $0x150
jmp    80492b0 <_init+0x30>
jmp    *0x80580b8
push   $0x158
jmp    80492b0 <_init+0x30>
jmp    *0x80580bc
push   $0x160
jmp    80492b0 <_init+0x30>
jmp    *0x80580c0
push   $0x168
jmp    80492b0 <_init+0x30>
jmp    *0x80580c4
push   $0x170
jmp    80492b0 <_init+0x30>
jmp    *0x80580c8
push   $0x178
jmp    80492b0 <_init+0x30>
jmp    *0x80580cc
push   $0x180
jmp    80492b0 <_init+0x30>
jmp    *0x80580d0
push   $0x188
jmp    80492b0 <_init+0x30>
jmp    *0x80580d4
push   $0x190
jmp    80492b0 <_init+0x30>
jmp    *0x80580d8
push   $0x198
jmp    80492b0 <_init+0x30>
jmp    *0x80580dc
push   $0x1a0
jmp    80492b0 <_init+0x30>
jmp    *0x80580e0
push   $0x1a8
jmp    80492b0 <_init+0x30>
jmp    *0x80580e4
push   $0x1b0
jmp    80492b0 <_init+0x30>
jmp    *0x80580e8
push   $0x1b8
jmp    80492b0 <_init+0x30>
jmp    *0x80580ec
push   $0x1c0
jmp    80492b0 <_init+0x30>
jmp    *0x80580f0
push   $0x1c8
jmp    80492b0 <_init+0x30>
jmp    *0x80580f4
push   $0x1d0
jmp    80492b0 <_init+0x30>
jmp    *0x80580f8
push   $0x1d8
jmp    80492b0 <_init+0x30>
jmp    *0x80580fc
push   $0x1e0
jmp    80492b0 <_init+0x30>
jmp    *0x8058100
push   $0x1e8
jmp    80492b0 <_init+0x30>
jmp    *0x8058104
push   $0x1f0
jmp    80492b0 <_init+0x30>
jmp    *0x8058108
push   $0x1f8
jmp    80492b0 <_init+0x30>
jmp    *0x805810c
push   $0x200
jmp    80492b0 <_init+0x30>
jmp    *0x8058110
push   $0x208
jmp    80492b0 <_init+0x30>
jmp    *0x8058114
push   $0x210
jmp    80492b0 <_init+0x30>
jmp    *0x8058118
push   $0x218
jmp    80492b0 <_init+0x30>
jmp    *0x805811c
push   $0x220
jmp    80492b0 <_init+0x30>
jmp    *0x8058120
push   $0x228
jmp    80492b0 <_init+0x30>
jmp    *0x8058124
push   $0x230
jmp    80492b0 <_init+0x30>
jmp    *0x8058128
push   $0x238
jmp    80492b0 <_init+0x30>
jmp    *0x805812c
push   $0x240
jmp    80492b0 <_init+0x30>
jmp    *0x8058130
push   $0x248
jmp    80492b0 <_init+0x30>
jmp    *0x8058134
push   $0x250
jmp    80492b0 <_init+0x30>
jmp    *0x8058138
push   $0x258
jmp    80492b0 <_init+0x30>
jmp    *0x805813c
push   $0x260
jmp    80492b0 <_init+0x30>
jmp    *0x8058140
push   $0x268
jmp    80492b0 <_init+0x30>
jmp    *0x8058144
push   $0x270
jmp    80492b0 <_init+0x30>
jmp    *0x8058148
push   $0x278
jmp    80492b0 <_init+0x30>
jmp    *0x805814c
push   $0x280
jmp    80492b0 <_init+0x30>
jmp    *0x8058150
push   $0x288
jmp    80492b0 <_init+0x30>
jmp    *0x8058154
push   $0x290
jmp    80492b0 <_init+0x30>
jmp    *0x8058158
push   $0x298
jmp    80492b0 <_init+0x30>
jmp    *0x805815c
push   $0x2a0
jmp    80492b0 <_init+0x30>
jmp    *0x8058160
push   $0x2a8
jmp    80492b0 <_init+0x30>
jmp    *0x8058164
push   $0x2b0
jmp    80492b0 <_init+0x30>
jmp    *0x8058168
push   $0x2b8
jmp    80492b0 <_init+0x30>
jmp    *0x805816c
push   $0x2c0
jmp    80492b0 <_init+0x30>
jmp    *0x8058170
push   $0x2c8
jmp    80492b0 <_init+0x30>
jmp    *0x8058174
push   $0x2d0
jmp    80492b0 <_init+0x30>
jmp    *0x8058178
push   $0x2d8
jmp    80492b0 <_init+0x30>
jmp    *0x805817c
push   $0x2e0
jmp    80492b0 <_init+0x30>
jmp    *0x8058180
push   $0x2e8
jmp    80492b0 <_init+0x30>
jmp    *0x8058184
push   $0x2f0
jmp    80492b0 <_init+0x30>
jmp    *0x8058188
push   $0x2f8
jmp    80492b0 <_init+0x30>
jmp    *0x805818c
push   $0x300
jmp    80492b0 <_init+0x30>
jmp    *0x8058190
push   $0x308
jmp    80492b0 <_init+0x30>
jmp    *0x8058194
push   $0x310
jmp    80492b0 <_init+0x30>
mov    0x805d3a8,%edx
mov    %eax,%ecx
test   %edx,%edx
je     8049909 <fchmod@plt+0x29>
cmp    %ecx,(%edx)
jne    8049904 <fchmod@plt+0x24>
mov    0x4(%edx),%eax
ret
mov    0x8(%edx),%edx
jmp    80498f8 <fchmod@plt+0x18>
cmp    0x80583e4,%ecx
je     8049933 <fchmod@plt+0x53>
cmp    %ecx,0x8058400
je     804992d <fchmod@plt+0x4d>
cmp    0x80583c0,%ecx
mov    $0x805479d,%edx
mov    $0x80537d3,%eax
cmovne %edx,%eax
ret
mov    $0x80537c7,%eax
ret
mov    $0x80537bc,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x30,%esp
mov    0xc(%ebp),%ebx
movl   $0x8053527,(%esp)
mov    0x8(%ebp),%esi
call   8049510 <getenv@plt>
mov    %eax,%edi
mov    (%ebx),%eax
movl   $0x80543e7,0x4(%esp)
movl   $0x6,(%esp)
mov    %eax,0x805d4f4
call   8049750 <setlocale@plt>
call   804fc20 <fchmod@plt+0x6340>
movl   $0x805352c,0x4(%esp)
movl   $0x8053590,(%esp)
call   80497e0 <bindtextdomain@plt>
movl   $0x8053590,(%esp)
call   8049430 <textdomain@plt>
movl   $0x805353e,(%esp)
call   8049510 <getenv@plt>
test   %eax,%eax
setne  %al
test   %edi,%edi
movzbl %al,%eax
mov    %eax,0x805d4f0
je     80499e2 <fchmod@plt+0x102>
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8049870 <strtol@plt>
cmp    $0x1,%eax
jbe    80499e2 <fchmod@plt+0x102>
sub    $0x1,%eax
mov    %eax,0x80582d0
mov    (%ebx),%eax
mov    %eax,0x805d50c
movl   $0x0,0x10(%esp)
movl   $0x80581c0,0xc(%esp)
movl   $0x8053594,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   80495d0 <getopt_long@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ecx
je     8049c41 <fchmod@plt+0x361>
sub    $0x45,%ecx
cmp    $0x35,%ecx
ja     8049c37 <fchmod@plt+0x357>
jmp    *0x8053644(,%ecx,4)
movb   $0x0,0x80582dc
jmp    80499e9 <fchmod@plt+0x109>
movl   $0x5,0x8(%esp)
movl   $0x8053556,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x8053564,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   80493c0 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x8053570,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   80493c0 <dcgettext@plt>
movl   $0x5,0x8(%esp)
movl   $0x8053579,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   80493c0 <dcgettext@plt>
movl   $0x0,0x20(%esp)
mov    %edi,0x1c(%esp)
mov    %esi,0x18(%esp)
mov    %ebx,0x14(%esp)
movl   $0x8053586,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x805d4f4,%eax
movl   $0x805358c,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8058400,%eax
mov    %eax,(%esp)
call   8052850 <fchmod@plt+0x8f70>
xor    %eax,%eax
call   8049e20 <fchmod@plt+0x540>
movl   $0x0,(%esp)
call   8050030 <fchmod@plt+0x6750>
movl   $0x0,(%esp)
call   8049580 <exit@plt>
movb   $0x1,0x8058413
jmp    80499e9 <fchmod@plt+0x109>
movb   $0x1,0x8058411
jmp    80499e9 <fchmod@plt+0x109>
movl   $0x2,0x805d4f0
00
jmp    80499e9 <fchmod@plt+0x109>
movb   $0x1,0x8058412
jmp    80499e9 <fchmod@plt+0x109>
mov    0x8058404,%eax
movl   $0xa,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049870 <strtol@plt>
mov    %eax,0x80582d0
jmp    80499e9 <fchmod@plt+0x109>
mov    0x8058404,%edi
movb   $0x1,0x8058411
test   %edi,%edi
je     8049d12 <fchmod@plt+0x432>
movl   $0x2a,0x4(%esp)
mov    %edi,(%esp)
call   8049600 <strchr@plt>
test   %eax,%eax
je     8049c99 <fchmod@plt+0x3b9>
mov    %edi,(%esp)
call   80504d0 <fchmod@plt+0x6bf0>
mov    %eax,0x805840c
jmp    80499e9 <fchmod@plt+0x109>
xor    %eax,%eax
call   8049ee0 <fchmod@plt+0x600>
mov    0x8058404,%eax
mov    %eax,0x4(%esp)
mov    0x8058418,%eax
mov    %eax,(%esp)
call   804c400 <fchmod@plt+0x2b20>
mov    %eax,0x8058418
jmp    80499e9 <fchmod@plt+0x109>
mov    0x8058404,%edx
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %edx,%edi
repnz scas %es:(%edi),%al
mov    0x8058418,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
not    %ecx
sub    $0x1,%ecx
mov    %ecx,0x8(%esp)
call   804c380 <fchmod@plt+0x2aa0>
mov    %eax,0x8058418
jmp    80499e9 <fchmod@plt+0x109>
movl   $0x8053550,0x80582d8
08
movl   $0x8053553,0x80582d4
08
jmp    80499e9 <fchmod@plt+0x109>
movb   $0x1,0x8058410
jmp    80499e9 <fchmod@plt+0x109>
cmpl   $0x0,0x8058414
jne    8049c37 <fchmod@plt+0x357>
movl   $0x1,0x8058414
00
jmp    80499e9 <fchmod@plt+0x109>
mov    $0x4,%eax
call   8049ee0 <fchmod@plt+0x600>
cmpl   $0x0,0x8058418
je     8049cd0 <fchmod@plt+0x3f0>
mov    0x8058418,%eax
mov    %eax,(%esp)
call   804c490 <fchmod@plt+0x2bb0>
mov    0x80583e0,%eax
lea    (%ebx,%eax,4),%eax
mov    %eax,0x4(%esp)
mov    0x8058418,%eax
mov    %eax,(%esp)
call   804ee20 <fchmod@plt+0x5540>
mov    %eax,%ebx
mov    0x8058418,%eax
mov    %eax,(%esp)
call   804c6c0 <fchmod@plt+0x2de0>
movl   $0x0,(%esp)
call   8050030 <fchmod@plt+0x6750>
lea    -0xc(%ebp),%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
or     $0xffffffff,%ecx
repnz scas %es:(%edi),%al
neg    %ecx
mov    %ecx,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    %eax,0x805840c
movb   $0x2a,(%eax)
mov    0x8058404,%eax
mov    %eax,0x4(%esp)
mov    0x805840c,%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   80494d0 <strcpy@plt>
jmp    80499e9 <fchmod@plt+0x109>
mov    0x80583e0,%eax
cmp    %eax,%esi
jle    8049c37 <fchmod@plt+0x357>
lea    0x1(%eax),%edx
mov    %edx,0x80583e0
mov    (%ebx,%eax,4),%edx
xor    %eax,%eax
mov    %edx,%edi
repnz scas %es:(%edi),%al
mov    %edx,0x4(%esp)
movl   $0x0,(%esp)
not    %ecx
sub    $0x1,%ecx
mov    %ecx,0x8(%esp)
call   804c380 <fchmod@plt+0x2aa0>
mov    %eax,0x8058418
jmp    8049c4e <fchmod@plt+0x36e>
movl   $0x805354e,(%esp)
call   80504d0 <fchmod@plt+0x6bf0>
mov    %eax,0x805840c
jmp    80499e9 <fchmod@plt+0x109>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x8052e10
push   $0x8052da0
push   %ecx
push   %esi
push   $0x8049940
call   8049640 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80583a7,%eax
sub    $0x80583a4,%eax
cmp    $0x6,%eax
ja     8049d70 <fchmod@plt+0x490>
ret
mov    $0x0,%eax
test   %eax,%eax
je     8049d6f <fchmod@plt+0x48f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80583a4,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80583a4,%eax
sub    $0x80583a4,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049da9 <fchmod@plt+0x4c9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049da8 <fchmod@plt+0x4c8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80583a4,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x8058408
jne    8049dec <fchmod@plt+0x50c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049d60 <fchmod@plt+0x480>
movb   $0x1,0x8058408
leave
repz ret
xchg   %ax,%ax
mov    0x8057f08,%eax
test   %eax,%eax
je     8049e18 <fchmod@plt+0x538>
mov    $0x0,%eax
test   %eax,%eax
je     8049e18 <fchmod@plt+0x538>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8057f08,(%esp)
call   *%eax
leave
jmp    8049d90 <fchmod@plt+0x4b0>
nop
jmp    8049d90 <fchmod@plt+0x4b0>
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
test   %eax,%eax
je     8049e63 <fchmod@plt+0x583>
movl   $0x5,0x8(%esp)
mov    0x80583c0,%ebx
movl   $0x8052e48,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
add    $0x28,%esp
pop    %ebx
ret
movl   $0x5,0x8(%esp)
mov    0x8058400,%ebx
movl   $0x8052e48,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8052ec0,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x8053590,0x10(%esp)
movl   $0x8053517,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
jmp    8049e5e <fchmod@plt+0x57e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
mov    0x80583c0,%ebx
test   %eax,%eax
movl   $0x5,0x8(%esp)
mov    0x805d50c,%edi
movl   $0x8052f28,0x4(%esp)
movl   $0x0,(%esp)
cmove  0x8058400,%ebx
call   80493c0 <dcgettext@plt>
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8052f74,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8052fcc,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8053030,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80530a8,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80530f8,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8053164,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80531c8,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8053200,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805325c,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80532dc,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805336c,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80533b4,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x80533e4,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x805341c,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80497d0 <__fprintf_chk@plt>
mov    %esi,%eax
call   8049e20 <fchmod@plt+0x540>
movl   $0x0,(%esp)
call   8050030 <fchmod@plt+0x6750>
mov    %esi,(%esp)
call   8049580 <exit@plt>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8058450,%esi
mov    0x805844c,%ebx
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %esi,%eax
sub    %ebx,%eax
cmp    $0x13,%eax
jle    804a278 <fchmod@plt+0x998>
mov    0x8058448,%eax
add    $0x14,%ebx
cmp    %eax,%ebx
je     804a2b0 <fchmod@plt+0x9d0>
mov    0x8058458,%ebp
mov    %esi,%edx
add    %ebp,%ebx
not    %ebp
and    %ebp,%ebx
mov    0x8058444,%ebp
mov    %ebx,%edi
mov    %ebx,0x805844c
sub    %ebp,%edi
sub    %ebp,%edx
cmp    %edx,%edi
jle    804a250 <fchmod@plt+0x970>
mov    %esi,0x805844c
mov    %esi,%ebx
mov    0x14(%esp),%esi
mov    0x18(%esp),%edx
mov    %ebx,0x8058448
mov    %ecx,0xc(%eax)
mov    %esi,(%eax)
mov    %edx,0x4(%eax)
movl   $0xffffffff,0x8(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x14,0x4(%esp)
movl   $0x8058440,(%esp)
mov    %ecx,0x1c(%esp)
call   80493b0 <_obstack_newchunk@plt>
mov    0x805844c,%ebx
mov    0x8058448,%eax
mov    0x8058450,%esi
mov    0x1c(%esp),%ecx
add    $0x14,%ebx
cmp    %eax,%ebx
jne    804a224 <fchmod@plt+0x944>
orb    $0x2,0x8058468
jmp    804a224 <fchmod@plt+0x944>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8058450,%esi
mov    %ecx,0x1c(%esp)
mov    0x805844c,%ecx
mov    %eax,0x14(%esp)
mov    0x40(%esp),%ebx
mov    %edx,0x18(%esp)
mov    %esi,%eax
sub    %ecx,%eax
cmp    $0x17,%eax
jle    804a360 <fchmod@plt+0xa80>
mov    0x8058448,%eax
add    $0x18,%ecx
cmp    %eax,%ecx
je     804a390 <fchmod@plt+0xab0>
mov    0x8058458,%edi
mov    %esi,%edx
add    %edi,%ecx
not    %edi
and    %edi,%ecx
mov    0x8058444,%edi
mov    %ecx,%ebp
mov    %ecx,0x805844c
sub    %edi,%ebp
sub    %edi,%edx
cmp    %edx,%ebp
jle    804a328 <fchmod@plt+0xa48>
mov    %esi,0x805844c
mov    %esi,%ecx
mov    0x18(%esp),%esi
test   %ebx,%ebx
mov    %ecx,0x8058448
mov    %esi,(%eax)
mov    0x1c(%esp),%esi
mov    %esi,0x4(%eax)
je     804a350 <fchmod@plt+0xa70>
mov    (%ebx),%ecx
mov    %ecx,0x8(%eax)
mov    0x4(%ebx),%ecx
mov    %ecx,0xc(%eax)
mov    0x8(%ebx),%ecx
mov    %ecx,0x10(%eax)
mov    0x14(%esp),%ebx
mov    %ebx,0x14(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x18,0x4(%esp)
movl   $0x8058440,(%esp)
call   80493b0 <_obstack_newchunk@plt>
mov    0x805844c,%ecx
mov    0x8058448,%eax
mov    0x8058450,%esi
add    $0x18,%ecx
cmp    %eax,%ecx
jne    804a2fc <fchmod@plt+0xa1c>
orb    $0x2,0x8058468
jmp    804a2fc <fchmod@plt+0xa1c>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x8058490,%eax
test   %eax,%eax
je     804a3d0 <fchmod@plt+0xaf0>
cmp    0x8058494,%eax
jae    804a3f8 <fchmod@plt+0xb18>
lea    0x1(%eax),%edx
movzbl (%eax),%eax
mov    %edx,0x8058490
cmp    $0xa,%eax
jne    804a3cc <fchmod@plt+0xaec>
addl   $0x1,0x8058484
add    $0x1c,%esp
ret
mov    0x8058498,%eax
test   %eax,%eax
je     804a3f8 <fchmod@plt+0xb18>
testb  $0x10,(%eax)
jne    804a3f8 <fchmod@plt+0xb18>
mov    0x4(%eax),%edx
cmp    0x8(%eax),%edx
jae    804a3ff <fchmod@plt+0xb1f>
lea    0x1(%edx),%ecx
mov    %ecx,0x4(%eax)
movzbl (%edx),%eax
jmp    804a3c0 <fchmod@plt+0xae0>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    804a3cc <fchmod@plt+0xaec>
mov    %eax,(%esp)
call   8049730 <__uflow@plt>
jmp    804a3c0 <fchmod@plt+0xae0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x8,%esp
call   80498b0 <__ctype_b_loc@plt>
mov    %eax,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a3a0 <fchmod@plt+0xac0>
mov    (%ebx),%ecx
testb  $0x1,(%ecx,%eax,2)
jne    804a420 <fchmod@plt+0xb40>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   80507e0 <fchmod@plt+0x6f00>
mov    %eax,%ebx
call   804a410 <fchmod@plt+0xb30>
cmp    $0xa,%eax
jne    804a46e <fchmod@plt+0xb8e>
jmp    804a473 <fchmod@plt+0xb93>
nop
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xa,%eax
je     804a473 <fchmod@plt+0xb93>
cmp    $0xffffffff,%eax
jne    804a458 <fchmod@plt+0xb78>
mov    %ebx,(%esp)
movl   $0x0,0x4(%esp)
call   8050890 <fchmod@plt+0x6fb0>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
mov    %edx,0x14(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,0x10(%esp)
call   804a440 <fchmod@plt+0xb60>
mov    %eax,(%esp)
mov    %eax,%edi
call   8050820 <fchmod@plt+0x6f40>
mov    (%ebx),%ebx
test   %ebx,%ebx
mov    %eax,%esi
jne    804a4c7 <fchmod@plt+0xbe7>
jmp    804a4d9 <fchmod@plt+0xbf9>
xchg   %ax,%ax
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
je     804a4d9 <fchmod@plt+0xbf9>
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80492f0 <strcmp@plt>
test   %eax,%eax
jne    804a4c0 <fchmod@plt+0xbe0>
mov    0x805d4f0,%eax
test   %eax,%eax
jne    804a548 <fchmod@plt+0xc68>
mov    0x80583e4,%eax
mov    %eax,0x805d500
mov    0x8058400,%eax
mov    %eax,0x805d4f8
mov    0x80583c0,%eax
mov    %eax,0x805d4fc
mov    0x8058300,%eax
test   %eax,%eax
je     804a548 <fchmod@plt+0xc68>
mov    $0x8058300,%ebp
jmp    804a51a <fchmod@plt+0xc3a>
add    $0x14,%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     804a548 <fchmod@plt+0xc68>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80492f0 <strcmp@plt>
test   %eax,%eax
jne    804a510 <fchmod@plt+0xc30>
mov    0x10(%ebp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%ebp)
mov    %edi,(%esp)
call   80508e0 <fchmod@plt+0x7000>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     804a560 <fchmod@plt+0xc80>
mov    %edi,(%esp)
call   80508e0 <fchmod@plt+0x7000>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x8058450,%ecx
mov    0x805844c,%eax
mov    %ecx,%edx
sub    %eax,%edx
cmp    $0xf,%edx
jle    804a5f8 <fchmod@plt+0xd18>
mov    0x8058448,%ebx
add    $0x10,%eax
cmp    %ebx,%eax
je     804a61c <fchmod@plt+0xd3c>
mov    0x8058458,%edx
add    %edx,%eax
not    %edx
and    %edx,%eax
mov    0x8058444,%edx
mov    %eax,%ebp
mov    %eax,0x805844c
sub    %edx,%ebp
mov    %ebp,0x1c(%esp)
mov    %ecx,%ebp
sub    %edx,%ebp
cmp    %ebp,0x1c(%esp)
jle    804a5ba <fchmod@plt+0xcda>
mov    %ecx,0x805844c
mov    %ecx,%eax
mov    %esi,(%esp)
mov    %eax,0x8058448
call   80504d0 <fchmod@plt+0x6bf0>
mov    0x18(%esp),%ecx
mov    %eax,(%ebx)
mov    %ecx,0x8(%esp)
mov    0x14(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8050570 <fchmod@plt+0x6c90>
mov    0x10(%esp),%ecx
movb   $0x0,0x4(%ebx)
mov    %eax,0x8(%ebx)
mov    (%ecx),%eax
mov    %eax,0xc(%ebx)
mov    %ebx,(%ecx)
jmp    804a54c <fchmod@plt+0xc6c>
movl   $0x10,0x4(%esp)
movl   $0x8058440,(%esp)
call   80493b0 <_obstack_newchunk@plt>
mov    0x805844c,%eax
mov    0x8058450,%ecx
jmp    804a578 <fchmod@plt+0xc98>
orb    $0x2,0x8058468
jmp    804a589 <fchmod@plt+0xca9>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
cmp    $0xffffffff,%eax
je     804a673 <fchmod@plt+0xd93>
cmp    $0xa,%eax
je     804a678 <fchmod@plt+0xd98>
mov    0x8058490,%edx
test   %edx,%edx
je     804a690 <fchmod@plt+0xdb0>
cmp    0x805848c,%edx
jbe    804a660 <fchmod@plt+0xd80>
lea    -0x1(%edx),%ecx
movzbl -0x1(%edx),%edx
mov    %ecx,0x8058490
cmp    %eax,%edx
je     804a673 <fchmod@plt+0xd93>
movzbl %al,%eax
mov    %eax,0x4(%esp)
movl   $0x805371c,(%esp)
call   804fc50 <fchmod@plt+0x6370>
add    $0x1c,%esp
ret
nop
mov    0x8058484,%edx
test   %edx,%edx
je     804a63d <fchmod@plt+0xd5d>
sub    $0x1,%edx
mov    %edx,0x8058484
jmp    804a63d <fchmod@plt+0xd5d>
lea    0x0(%esi),%esi
mov    0x8058498,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80496c0 <ungetc@plt>
jmp    804a673 <fchmod@plt+0xd93>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   80507e0 <fchmod@plt+0x6f00>
mov    %eax,%esi
call   804a410 <fchmod@plt+0xb30>
cmp    $0xa,%eax
mov    %eax,%ebx
je     804a710 <fchmod@plt+0xe30>
cmp    $0xffffffff,%eax
je     804a710 <fchmod@plt+0xe30>
call   80498b0 <__ctype_b_loc@plt>
mov    %eax,%edi
jmp    804a704 <fchmod@plt+0xe24>
nop
cmp    $0x7d,%ebx
je     804a710 <fchmod@plt+0xe30>
cmp    $0x3b,%ebx
je     804a710 <fchmod@plt+0xe30>
cmp    $0x23,%ebx
je     804a710 <fchmod@plt+0xe30>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xa,%eax
mov    %eax,%ebx
je     804a710 <fchmod@plt+0xe30>
cmp    $0xffffffff,%eax
je     804a710 <fchmod@plt+0xe30>
mov    (%edi),%edx
testb  $0x1,(%edx,%ebx,2)
je     804a6d8 <fchmod@plt+0xdf8>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   804a630 <fchmod@plt+0xd50>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   8050890 <fchmod@plt+0x6fb0>
mov    %esi,(%esp)
call   8050820 <fchmod@plt+0x6f40>
mov    %eax,(%esp)
call   80504d0 <fchmod@plt+0x6bf0>
mov    %esi,(%esp)
mov    %eax,%ebx
call   80508e0 <fchmod@plt+0x7000>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
mov    %eax,%ebx
call   80498b0 <__ctype_b_loc@plt>
mov    %eax,%edi
jmp    804a76e <fchmod@plt+0xe8e>
lea    (%esi,%esi,4),%eax
lea    -0x30(%ebx,%eax,2),%esi
call   804a3a0 <fchmod@plt+0xac0>
mov    %eax,%ebx
mov    (%edi),%edx
movzbl %bl,%ecx
testb  $0x8,0x1(%edx,%ecx,2)
jne    804a760 <fchmod@plt+0xe80>
mov    %ebx,%eax
call   804a630 <fchmod@plt+0xd50>
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x8058480,%ebx
test   %ebx,%ebx
je     804a801 <fchmod@plt+0xf21>
movl   $0x5,0x8(%esp)
mov    0x8058484,%edi
movl   $0x8053796,0x4(%esp)
mov    0x805d50c,%esi
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    0x30(%esp),%edx
mov    %edi,0x14(%esp)
mov    %ebx,0x10(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x8(%esp)
mov    0x80583c0,%eax
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   8049580 <exit@plt>
mov    0x8058490,%ebx
movl   $0x5,0x8(%esp)
mov    0x8058488,%edi
movl   $0x805374c,0x4(%esp)
mov    0x805d50c,%esi
movl   $0x0,(%esp)
sub    0x805848c,%ebx
call   80493c0 <dcgettext@plt>
mov    0x30(%esp),%ecx
mov    %edi,0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x18(%esp)
jmp    804a7d8 <fchmod@plt+0xef8>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
movl   $0x5,0x8(%esp)
mov    0x30(%esp),%edi
movl   $0x8054391,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
mov    %eax,%esi
call   8049620 <strlen@plt>
mov    %eax,(%esp)
call   8052940 <fchmod@plt+0x9060>
mov    %esi,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,%ebx
mov    %edi,%eax
movsbl %al,%edi
mov    %edi,0x10(%esp)
mov    %ebx,(%esp)
call   80498d0 <__sprintf_chk@plt>
mov    %ebx,(%esp)
call   804a790 <fchmod@plt+0xeb0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %gs:0x14,%ecx
mov    %ecx,0x2c(%esp)
xor    %ecx,%ecx
lea    0x24(%esp),%ebx
cmpl   $0x1,0x805d508
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
je     804a90e <fchmod@plt+0x102e>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804fbc0 <fchmod@plt+0x62e0>
cmp    $0xfffffffe,%eax
je     804ab9e <fchmod@plt+0x12be>
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
call   80507e0 <fchmod@plt+0x6f00>
mov    %eax,%esi
jmp    804a953 <fchmod@plt+0x1073>
nop
mov    %ebx,(%esp)
call   8049360 <mbsinit@plt>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,%edi
call   804fbc0 <fchmod@plt+0x62e0>
cmp    $0x1,%eax
je     804aa70 <fchmod@plt+0x1190>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     804aaca <fchmod@plt+0x11ea>
cmp    $0xa,%eax
je     804aac0 <fchmod@plt+0x11e0>
cmpl   $0x1,0x805d508
jne    804a928 <fchmod@plt+0x1048>
cmp    0x14(%esp),%ebp
je     804aa82 <fchmod@plt+0x11a2>
cmp    $0x5c,%ebp
je     804aaf0 <fchmod@plt+0x1210>
cmp    $0x5b,%ebp
jne    804a947 <fchmod@plt+0x1067>
mov    0x18(%esp),%eax
test   %eax,%eax
je     804a947 <fchmod@plt+0x1067>
movl   $0x5b,0x4(%esp)
mov    %esi,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0x5e,%eax
mov    %eax,%ebp
je     804ab68 <fchmod@plt+0x1288>
cmp    $0x5d,%ebp
je     804ab48 <fchmod@plt+0x1268>
xor    %edi,%edi
xor    %eax,%eax
cmpl   $0x1,0x805d508
movl   $0x0,0x1c(%esp)
je     804a9e5 <fchmod@plt+0x1105>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   804fbc0 <fchmod@plt+0x62e0>
cmp    $0x1,%eax
setne  %al
cmp    $0x3a,%ebp
je     804aa50 <fchmod@plt+0x1170>
jle    804aa88 <fchmod@plt+0x11a8>
cmp    $0x5b,%ebp
je     804aaa0 <fchmod@plt+0x11c0>
cmp    $0x5d,%ebp
lea    0x0(%esi,%eiz,1),%esi
jne    804aab8 <fchmod@plt+0x11d8>
test   %al,%al
jne    804aa28 <fchmod@plt+0x1148>
cmp    $0x1,%edi
lea    0x0(%esi),%esi
jbe    804a947 <fchmod@plt+0x1067>
mov    %edi,%eax
and    $0xfffffffe,%eax
cmp    $0x3,%edi
mov    $0x0,%edi
cmovne %eax,%edi
xchg   %ax,%ax
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
mov    %eax,%ebp
xor    %eax,%eax
cmpl   $0x1,0x805d508
jne    804a9d3 <fchmod@plt+0x10f3>
cmp    $0x3a,%ebp
jne    804a9ea <fchmod@plt+0x110a>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    804aa28 <fchmod@plt+0x1148>
cmp    $0x1,%edi
je     804ab38 <fchmod@plt+0x1258>
cmp    0x1c(%esp),%ebp
jne    804aa97 <fchmod@plt+0x11b7>
cmp    $0x2,%edi
jne    804aa97 <fchmod@plt+0x11b7>
mov    $0x3,%edi
jmp    804aa28 <fchmod@plt+0x1148>
nop
test   %edi,%edi
je     804a947 <fchmod@plt+0x1067>
cmp    0x14(%esp),%ebp
jne    804a97f <fchmod@plt+0x109f>
mov    %esi,%eax
jmp    804aad4 <fchmod@plt+0x11f4>
xchg   %ax,%ax
cmp    $0xa,%ebp
je     804aac0 <fchmod@plt+0x11e0>
cmp    $0x2e,%ebp
je     804aa50 <fchmod@plt+0x1170>
cmp    $0xffffffff,%ebp
je     804aaca <fchmod@plt+0x11ea>
and    $0xfffffffe,%edi
jmp    804aa28 <fchmod@plt+0x1148>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    804aa28 <fchmod@plt+0x1148>
test   %edi,%edi
mov    $0x1,%eax
cmove  %eax,%edi
jmp    804aa28 <fchmod@plt+0x1148>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3d,%ebp
jne    804aa97 <fchmod@plt+0x11b7>
jmp    804aa50 <fchmod@plt+0x1170>
nop
mov    $0xa,%eax
call   804a630 <fchmod@plt+0xd50>
mov    %esi,(%esp)
call   80508e0 <fchmod@plt+0x7000>
xor    %eax,%eax
mov    0x2c(%esp),%edx
xor    %gs:0x14,%edx
jne    804abaa <fchmod@plt+0x12ca>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
je     804aaca <fchmod@plt+0x11ea>
cmp    $0x6e,%eax
jne    804ab09 <fchmod@plt+0x1229>
mov    0x18(%esp),%ecx
test   %ecx,%ecx
jne    804ab2d <fchmod@plt+0x124d>
cmp    $0xa,%ebp
je     804a947 <fchmod@plt+0x1067>
cmp    0x14(%esp),%ebp
je     804ab84 <fchmod@plt+0x12a4>
movl   $0x5c,0x4(%esp)
mov    %esi,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
jmp    804a947 <fchmod@plt+0x1067>
mov    $0xa,%ebp
jmp    804a947 <fchmod@plt+0x1067>
nop
mov    %ebp,0x1c(%esp)
mov    $0x2,%edi
jmp    804aa28 <fchmod@plt+0x1148>
xchg   %ax,%ax
movl   $0x5d,0x4(%esp)
mov    %esi,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
mov    %eax,%ebp
jmp    804a9be <fchmod@plt+0x10de>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5e,0x4(%esp)
mov    %esi,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
mov    %eax,%ebp
jmp    804a9b5 <fchmod@plt+0x10d5>
cmp    $0x26,%ebp
jne    804a947 <fchmod@plt+0x1067>
mov    0x18(%esp),%edx
test   %edx,%edx
jne    804a947 <fchmod@plt+0x1067>
jmp    804ab18 <fchmod@plt+0x1238>
movl   $0x8054320,(%esp)
call   804a790 <fchmod@plt+0xeb0>
call   80493e0 <__stack_chk_fail@plt>
nop
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x1c,%esp
cmp    $0x5c,%edx
movl   $0x0,(%eax)
movl   $0x0,0x8(%eax)
movl   $0xffffffff,0x4(%eax)
movl   $0x0,0xc(%eax)
sete   %al
cmp    $0x2f,%edx
sete   %dl
or     %al,%dl
mov    %edx,%edi
je     804ac70 <fchmod@plt+0x1390>
test   %al,%al
movl   $0x1,(%ebx)
jne    804ad40 <fchmod@plt+0x1460>
mov    $0x1,%edx
mov    %esi,%eax
call   804a8c0 <fchmod@plt+0xfe0>
test   %eax,%eax
mov    %eax,%ebp
je     804ad6d <fchmod@plt+0x148d>
xor    %esi,%esi
call   804a410 <fchmod@plt+0xb30>
cmpl   $0x2,0x805d4f0
je     804ac40 <fchmod@plt+0x1360>
cmp    $0x49,%eax
je     804acf0 <fchmod@plt+0x1410>
cmp    $0x4d,%eax
jne    804ac40 <fchmod@plt+0x1360>
or     $0x4,%esi
call   804a410 <fchmod@plt+0xb30>
cmpl   $0x2,0x805d4f0
jne    804ac20 <fchmod@plt+0x1340>
nop
call   804a630 <fchmod@plt+0xd50>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804f0c0 <fchmod@plt+0x57e0>
mov    %ebp,(%esp)
mov    %eax,0xc(%ebx)
call   80508e0 <fchmod@plt+0x7000>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   80498b0 <__ctype_b_loc@plt>
mov    %esi,%ecx
movzbl %cl,%edx
mov    (%eax),%eax
testb  $0x8,0x1(%eax,%edx,2)
jne    804acf8 <fchmod@plt+0x1418>
cmp    $0x2b,%esi
sete   %dl
cmp    $0x7e,%esi
sete   %al
or     %dl,%al
mov    %eax,%ebp
je     804acd0 <fchmod@plt+0x13f0>
cmpl   $0x2,0x805d4f0
mov    %edx,0xc(%esp)
je     804acd0 <fchmod@plt+0x13f0>
call   804a410 <fchmod@plt+0xb30>
call   804a750 <fchmod@plt+0xe70>
test   %eax,%eax
mov    %eax,0x8(%ebx)
je     804acdb <fchmod@plt+0x13fb>
mov    0xc(%esp),%edx
test   %dl,%dl
jne    804ad60 <fchmod@plt+0x1480>
movl   $0x5,(%ebx)
mov    %ebp,%edi
jmp    804ac64 <fchmod@plt+0x1384>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x24,%esi
jne    804ac64 <fchmod@plt+0x1384>
movl   $0x6,(%ebx)
add    $0x1c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
or     $0x2,%esi
jmp    804ac12 <fchmod@plt+0x1332>
mov    %esi,%eax
call   804a750 <fchmod@plt+0xe70>
movl   $0x2,(%ebx)
mov    %eax,0x4(%ebx)
call   804a410 <fchmod@plt+0xb30>
cmp    $0x7e,%eax
jne    804ad50 <fchmod@plt+0x1470>
cmpl   $0x2,0x805d4f0
je     804ad50 <fchmod@plt+0x1470>
call   804a410 <fchmod@plt+0xb30>
call   804a750 <fchmod@plt+0xe70>
test   %eax,%eax
je     804acdb <fchmod@plt+0x13fb>
mov    %eax,0x8(%ebx)
mov    $0x1,%edi
movl   $0x3,(%ebx)
jmp    804ac64 <fchmod@plt+0x1384>
lea    0x0(%esi,%eiz,1),%esi
call   804a3a0 <fchmod@plt+0xac0>
mov    %eax,%esi
jmp    804abfa <fchmod@plt+0x131a>
lea    0x0(%esi,%eiz,1),%esi
call   804a630 <fchmod@plt+0xd50>
mov    $0x1,%edi
jmp    804ac64 <fchmod@plt+0x1384>
nop
movl   $0x4,(%ebx)
mov    %edx,%edi
jmp    804ac64 <fchmod@plt+0x1384>
movl   $0x5,0x8(%esp)
movl   $0x80541f3,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
jmp    804ada0 <fchmod@plt+0x14c0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x64(%esp),%edi
mov    %gs:0x14,%ecx
mov    %ecx,0x3c(%esp)
xor    %ecx,%ecx
movl   $0x0,0x34(%esp)
mov    %eax,%ebx
add    %eax,%edi
cmp    %edi,%eax
mov    %eax,0x18(%esp)
movl   $0x0,0x38(%esp)
jae    804af08 <fchmod@plt+0x1628>
mov    %eax,%ebp
movl   $0x0,0x20(%esp)
jmp    804ae35 <fchmod@plt+0x1555>
lea    0x34(%esp),%eax
mov    %eax,0xc(%esp)
mov    %edi,%eax
sub    %ebx,%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   80494e0 <mbrtowc@plt>
cmp    $0x1,%eax
mov    %eax,%esi
je     804ae3e <fchmod@plt+0x155e>
lea    -0x1(%eax),%eax
cmp    $0xfffffffc,%eax
mov    $0x1,%eax
cmova  %eax,%esi
mov    %ebx,0x4(%esp)
add    %esi,%ebx
mov    %ebp,(%esp)
add    %esi,%ebp
mov    %esi,0x8(%esp)
call   8049330 <memmove@plt>
cmp    %edi,%ebx
jae    804ae5b <fchmod@plt+0x157b>
cmpl   $0x1,0x805d508
jne    804ade8 <fchmod@plt+0x1508>
movzbl (%ebx),%eax
lea    0x1(%ebx),%edx
cmp    $0x5c,%al
je     804aea0 <fchmod@plt+0x15c0>
cmpl   $0x2,0x68(%esp)
je     804ae80 <fchmod@plt+0x15a0>
mov    %edx,%ebx
mov    %al,0x0(%ebp)
add    $0x1,%ebp
cmp    %edi,%ebx
jb     804ae35 <fchmod@plt+0x1555>
mov    %ebp,%eax
sub    0x18(%esp),%eax
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804b106 <fchmod@plt+0x1826>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x805d4f0,%ecx
test   %ecx,%ecx
je     804ae4f <fchmod@plt+0x156f>
lea    -0x2e(%eax),%ecx
cmp    $0x2f,%cl
ja     804ae4f <fchmod@plt+0x156f>
movzbl %cl,%ecx
jmp    *0x80537e0(,%ecx,4)
lea    0x0(%esi,%eiz,1),%esi
cmp    %edx,%edi
jbe    804ae48 <fchmod@plt+0x1568>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
jne    804ae48 <fchmod@plt+0x1568>
movzbl 0x1(%ebx),%eax
mov    %al,0x2f(%esp)
sub    $0xa,%eax
cmp    $0x6e,%al
ja     804b09f <fchmod@plt+0x17bf>
movzbl %al,%eax
jmp    *0x80538a0(,%eax,4)
mov    %edx,%ebx
mov    0x20(%esp),%edx
test   %edx,%edx
jne    804ae51 <fchmod@plt+0x1571>
movl   $0xffffffff,0x20(%esp)
jmp    804ae51 <fchmod@plt+0x1571>
cmpl   $0xffffffff,0x20(%esp)
jne    804ae4f <fchmod@plt+0x156f>
cmpb   $0x5b,-0x1(%ebx)
jne    804ae4f <fchmod@plt+0x156f>
movsbl %al,%ecx
mov    %edx,%ebx
mov    %ecx,0x20(%esp)
jmp    804ae51 <fchmod@plt+0x1571>
nop
xor    %eax,%eax
jmp    804ae61 <fchmod@plt+0x1581>
mov    0x20(%esp),%esi
mov    %esi,%ecx
add    $0x1,%ecx
cmp    $0x1,%ecx
jbe    804b0cb <fchmod@plt+0x17eb>
movsbl -0x2(%ebx),%ecx
cmp    %esi,%ecx
je     804ae4f <fchmod@plt+0x156f>
movsbl -0x1(%ebx),%ecx
mov    %edx,%ebx
cmp    %esi,%ecx
jne    804ae51 <fchmod@plt+0x1571>
jmp    804aed7 <fchmod@plt+0x15f7>
mov    $0x10,%esi
lea    0x2(%ebx),%eax
cmp    %eax,%edi
mov    %eax,0x24(%esp)
jbe    804afea <fchmod@plt+0x170a>
movzbl 0x2(%ebx),%eax
sub    $0x30,%eax
cmp    $0x36,%al
ja     804afea <fchmod@plt+0x170a>
movzbl %al,%eax
movsbl 0x8054080(%eax),%ecx
cmp    %ecx,%esi
jle    804afea <fchmod@plt+0x170a>
mov    %ecx,%eax
shr    $0x1f,%eax
test   %al,%al
jne    804afea <fchmod@plt+0x170a>
mov    0x24(%esp),%eax
mov    $0x1,%edx
xor    %ebx,%ebx
mov    %ebp,0x28(%esp)
mov    %edx,0x1c(%esp)
lea    0x0(%esi),%esi
imul   %esi,%ebx
add    $0x1,%eax
add    %ecx,%ebx
mov    0x1c(%esp),%ecx
imul   %esi,%ecx
cmp    $0xff,%ecx
mov    %ecx,0x1c(%esp)
jg     804afd8 <fchmod@plt+0x16f8>
cmp    %eax,%edi
jbe    804afd8 <fchmod@plt+0x16f8>
movzbl (%eax),%ecx
sub    $0x30,%ecx
cmp    $0x36,%cl
ja     804afd8 <fchmod@plt+0x16f8>
movzbl %cl,%ecx
movsbl 0x8054080(%ecx),%ecx
cmp    %ecx,%esi
jle    804afd8 <fchmod@plt+0x16f8>
mov    %ecx,%ebp
shr    $0x1f,%ebp
mov    %ebp,%edx
test   %dl,%dl
je     804af90 <fchmod@plt+0x16b0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %eax,0x24(%esp)
mov    0x28(%esp),%ebp
je     804afea <fchmod@plt+0x170a>
mov    %bl,0x2f(%esp)
mov    %eax,0x24(%esp)
cmpl   $0x1,0x68(%esp)
je     804b0b4 <fchmod@plt+0x17d4>
movzbl 0x2f(%esp),%eax
add    $0x1,%ebp
mov    0x24(%esp),%ebx
mov    %al,-0x1(%ebp)
jmp    804ae31 <fchmod@plt+0x1551>
movb   $0xb,0x0(%ebp)
add    $0x2,%ebx
add    $0x1,%ebp
jmp    804ae31 <fchmod@plt+0x1551>
movb   $0x9,0x0(%ebp)
add    $0x2,%ebx
add    $0x1,%ebp
jmp    804ae31 <fchmod@plt+0x1551>
movb   $0xd,0x0(%ebp)
add    $0x2,%ebx
add    $0x1,%ebp
jmp    804ae31 <fchmod@plt+0x1551>
mov    $0x8,%esi
jmp    804af42 <fchmod@plt+0x1662>
movb   $0xc,0x0(%ebp)
add    $0x2,%ebx
add    $0x1,%ebp
jmp    804ae31 <fchmod@plt+0x1551>
mov    $0xa,%esi
jmp    804af42 <fchmod@plt+0x1662>
lea    0x2(%ebx),%eax
cmp    %eax,%edi
jbe    804b0da <fchmod@plt+0x17fa>
call   80492c0 <__ctype_toupper_loc@plt>
movzbl 0x2(%ebx),%edx
lea    0x1(%ebp),%esi
add    $0x3,%ebx
mov    (%eax),%eax
mov    (%eax,%edx,4),%eax
xor    $0x40,%eax
mov    %al,0x0(%ebp)
mov    %esi,%ebp
jmp    804ae31 <fchmod@plt+0x1551>
movb   $0x7,0x0(%ebp)
add    $0x2,%ebx
add    $0x1,%ebp
jmp    804ae31 <fchmod@plt+0x1551>
movb   $0xa,0x0(%ebp)
add    $0x2,%ebx
add    $0x1,%ebp
jmp    804ae31 <fchmod@plt+0x1551>
mov    0x68(%esp),%esi
test   %esi,%esi
jne    804b0f3 <fchmod@plt+0x1813>
add    $0x2,%ebx
movzbl 0x2f(%esp),%eax
jmp    804ae51 <fchmod@plt+0x1571>
cmpb   $0x26,0x2f(%esp)
jne    804aff5 <fchmod@plt+0x1715>
movb   $0x5c,0x0(%ebp)
add    $0x1,%ebp
jmp    804aff5 <fchmod@plt+0x1715>
mov    %edx,%ebx
movl   $0x0,0x20(%esp)
jmp    804ae51 <fchmod@plt+0x1571>
mov    0x68(%esp),%edi
mov    %ebp,%eax
test   %edi,%edi
je     804ae5b <fchmod@plt+0x157b>
add    $0x1,%ebp
movb   $0x5c,(%eax)
jmp    804ae5b <fchmod@plt+0x157b>
movb   $0x5c,0x0(%ebp)
add    $0x2,%ebx
movzbl -0x1(%ebx),%eax
add    $0x1,%ebp
jmp    804ae51 <fchmod@plt+0x1571>
call   80493e0 <__stack_chk_fail@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x14,%esp
test   %eax,%eax
je     804b14b <fchmod@plt+0x186b>
mov    0x8058474,%eax
test   %eax,%eax
je     804b12e <fchmod@plt+0x184e>
mov    %eax,(%esp)
call   80508e0 <fchmod@plt+0x7000>
call   80507e0 <fchmod@plt+0x6f00>
movl   $0x0,(%esi)
movl   $0x0,0x4(%esi)
mov    %esi,0x8058470
mov    %eax,0x8058474
cmp    $0xffffffff,%ebx
je     804b255 <fchmod@plt+0x1975>
cmp    $0xa,%ebx
je     804b16a <fchmod@plt+0x188a>
mov    0x8058474,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     804b1d0 <fchmod@plt+0x18f0>
cmp    $0xa,%eax
jne    804b1a3 <fchmod@plt+0x18c3>
jmp    804b1d0 <fchmod@plt+0x18f0>
lea    0x0(%esi),%esi
mov    0x8058474,%edx
mov    %ebx,0x4(%esp)
mov    %edx,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xa,%eax
mov    %eax,%ebx
je     804b1d0 <fchmod@plt+0x18f0>
cmp    $0xffffffff,%eax
je     804b1d0 <fchmod@plt+0x18f0>
cmp    $0x5c,%ebx
jne    804b180 <fchmod@plt+0x18a0>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     804b260 <fchmod@plt+0x1980>
mov    0x8058474,%eax
movl   $0x5c,0x4(%esp)
mov    %eax,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
jmp    804b180 <fchmod@plt+0x18a0>
nop
mov    0x8058474,%eax
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
mov    0x8058474,%eax
test   %esi,%esi
cmove  0x8058470,%esi
mov    %eax,(%esp)
call   8050830 <fchmod@plt+0x6f50>
mov    %eax,%ebx
mov    0x8058474,%eax
mov    %eax,(%esp)
call   8050820 <fchmod@plt+0x6f40>
mov    %ebx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   804ada0 <fchmod@plt+0x14c0>
mov    %eax,0x4(%esi)
mov    %eax,%ebx
mov    0x8058474,%eax
mov    %eax,(%esp)
call   8050820 <fchmod@plt+0x6f40>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80507b0 <fchmod@plt+0x6ed0>
mov    %eax,(%esi)
mov    0x8058474,%eax
mov    %eax,(%esp)
call   80508e0 <fchmod@plt+0x7000>
movl   $0x0,0x8058474
00
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8058474,%eax
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8050890 <fchmod@plt+0x6fb0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
test   %edi,%edi
je     804beba <fchmod@plt+0x25da>
mov    0x8058474,%eax
test   %eax,%eax
je     804b2b2 <fchmod@plt+0x19d2>
mov    $0xa,%edx
xor    %eax,%eax
call   804b110 <fchmod@plt+0x1830>
call   80498b0 <__ctype_b_loc@plt>
mov    %edi,%ebp
mov    %eax,0x18(%esp)
lea    0x0(%esi),%esi
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0x3b,%eax
mov    %eax,%ebx
je     804b2c0 <fchmod@plt+0x19e0>
mov    0x18(%esp),%eax
mov    (%eax),%eax
testb  $0x20,0x1(%eax,%ebx,2)
jne    804b2c0 <fchmod@plt+0x19e0>
cmp    $0xffffffff,%ebx
je     804be90 <fchmod@plt+0x25b0>
mov    0x8(%ebp),%edx
cmp    0x4(%ebp),%edx
je     804b3a0 <fchmod@plt+0x1ac0>
mov    0x0(%ebp),%eax
lea    (%edx,%edx,2),%edx
lea    (%eax,%edx,8),%edi
mov    %ebx,%edx
movl   $0x0,(%edi)
lea    0x40(%esp),%eax
movl   $0x0,0x4(%edi)
movl   $0x0,0x8(%edi)
movb   $0x0,0xc(%edi)
movb   $0x0,0xd(%edi)
call   804abb0 <fchmod@plt+0x12d0>
test   %al,%al
je     804b35f <fchmod@plt+0x1a7f>
mov    0x40(%esp),%eax
sub    $0x4,%eax
cmp    $0x1,%eax
jbe    804c156 <fchmod@plt+0x2876>
lea    0x40(%esp),%eax
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   80507b0 <fchmod@plt+0x6ed0>
mov    %eax,(%edi)
call   804a410 <fchmod@plt+0xb30>
cmp    $0x2c,%eax
mov    %eax,%ebx
je     804bb60 <fchmod@plt+0x2280>
mov    (%edi),%eax
cmpl   $0x2,(%eax)
je     804b3c8 <fchmod@plt+0x1ae8>
cmp    $0x21,%ebx
je     804b410 <fchmod@plt+0x1b30>
cmpl   $0x2,0x805d4f0
je     804b390 <fchmod@plt+0x1ab0>
lea    0x1(%ebx),%eax
cmp    $0x7e,%eax
mov    %bl,0xd(%edi)
ja     804b388 <fchmod@plt+0x1aa8>
jmp    *0x8053a5c(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   804a850 <fchmod@plt+0xf70>
lea    -0x3d(%ebx),%eax
cmp    $0x3d,%eax
ja     804b371 <fchmod@plt+0x1a91>
jmp    *0x8053c58(,%eax,4)
nop
add    $0x28,%edx
lea    (%edx,%edx,2),%eax
shl    $0x3,%eax
mov    %edx,0x4(%ebp)
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80501e0 <fchmod@plt+0x6900>
mov    0x8(%ebp),%edx
mov    %eax,0x0(%ebp)
jmp    804b2f1 <fchmod@plt+0x1a11>
xchg   %ax,%ax
mov    0x4(%eax),%eax
test   %eax,%eax
jne    804b35f <fchmod@plt+0x1a7f>
mov    0x4(%edi),%eax
test   %eax,%eax
je     804b3e8 <fchmod@plt+0x1b08>
cmpl   $0x1,(%eax)
jne    804b3e8 <fchmod@plt+0x1b08>
cmpl   $0x2,0x805d4f0
jne    804b35f <fchmod@plt+0x1a7f>
movl   $0x5,0x8(%esp)
movl   $0x8054371,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0xc(%edi)
call   804a410 <fchmod@plt+0xb30>
cmp    $0x21,%eax
mov    %eax,%ebx
jne    804b368 <fchmod@plt+0x1a88>
movl   $0x5,0x8(%esp)
movl   $0x80540c0,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
mov    0x4(%edi),%eax
test   %eax,%eax
je     804b371 <fchmod@plt+0x1a91>
movl   $0x5,0x8(%esp)
movl   $0x80541d5,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
nop
mov    0x4(%edi),%ecx
test   %ecx,%ecx
jne    804b453 <fchmod@plt+0x1b73>
call   804a410 <fchmod@plt+0xb30>
mov    0x18(%esp),%esi
mov    (%esi),%edx
movzbl %al,%ecx
testb  $0x8,0x1(%edx,%ecx,2)
je     804bb50 <fchmod@plt+0x2270>
cmpl   $0x2,0x805d4f0
je     804bb50 <fchmod@plt+0x2270>
call   804a750 <fchmod@plt+0xe70>
mov    %eax,0x10(%edi)
call   804a410 <fchmod@plt+0xb30>
cmp    $0x23,%eax
jne    804b97e <fchmod@plt+0x209e>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a630 <fchmod@plt+0xd50>
jmp    804b6a0 <fchmod@plt+0x1dc0>
lea    0x0(%esi),%esi
call   804a6b0 <fchmod@plt+0xdd0>
mov    %eax,%ebx
mov    $0x80537b0,%eax
cmpb   $0x0,(%ebx)
movl   $0x8053586,0x4(%esp)
cmovne %ebx,%eax
mov    %eax,(%esp)
call   8049660 <strverscmp@plt>
test   %eax,%eax
jg     804c2a7 <fchmod@plt+0x29c7>
mov    %ebx,(%esp)
call   8049340 <free@plt>
movl   $0x0,0x805d4f0
00
jmp    804b2c0 <fchmod@plt+0x19e0>
lea    0x0(%esi,%eiz,1),%esi
call   804a3a0 <fchmod@plt+0xac0>
mov    $0x1,%edx
mov    %eax,%ebx
call   804a8c0 <fchmod@plt+0xfe0>
test   %eax,%eax
mov    %eax,0x30(%esp)
je     804c1eb <fchmod@plt+0x290b>
xor    %edx,%edx
mov    %ebx,%eax
call   804a8c0 <fchmod@plt+0xfe0>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     804c1eb <fchmod@plt+0x290b>
mov    0x8058450,%edx
mov    0x805844c,%eax
mov    %edx,%ecx
sub    %eax,%ecx
cmp    $0x13,%ecx
jle    804bd94 <fchmod@plt+0x24b4>
mov    0x8058448,%ecx
add    $0x14,%eax
cmp    %ecx,%eax
je     804c012 <fchmod@plt+0x2732>
mov    0x8058458,%ebx
add    %ebx,%eax
not    %ebx
and    %ebx,%eax
mov    0x8058444,%ebx
mov    %eax,%esi
mov    %eax,0x805844c
sub    %ebx,%esi
mov    %esi,0x1c(%esp)
mov    %edx,%esi
sub    %ebx,%esi
cmp    %esi,0x1c(%esp)
jg     804bc2b <fchmod@plt+0x234b>
mov    0x20(%esp),%ebx
mov    %ecx,0x10(%edi)
mov    %eax,0x8058448
mov    %ebx,(%esp)
call   8050830 <fchmod@plt+0x6f50>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8050820 <fchmod@plt+0x6f40>
mov    0x10(%edi),%ecx
andb   $0xf,0x10(%ecx)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x24(%esp)
call   80507b0 <fchmod@plt+0x6ed0>
mov    %esi,0x4(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   804ada0 <fchmod@plt+0x14c0>
lea    (%ebx,%eax,1),%esi
cmp    %esi,%ebx
jae    804c115 <fchmod@plt+0x2835>
lea    0x50(%esp),%eax
xor    %ecx,%ecx
mov    %edi,0x28(%esp)
mov    %ebx,%edi
mov    %ebp,0x2c(%esp)
mov    %eax,%ebp
movl   $0x0,0x1c(%esp)
jmp    804b62b <fchmod@plt+0x1d4b>
lea    0x0(%esi),%esi
cmp    $0x26,%al
je     804bba0 <fchmod@plt+0x22c0>
add    $0x1,%ebx
cmp    %ebx,%esi
jbe    804bbc8 <fchmod@plt+0x22e8>
movzbl (%ebx),%eax
cmp    $0x5c,%al
jne    804b618 <fchmod@plt+0x1d38>
mov    %ebx,%edx
mov    %edi,%eax
sub    %edi,%edx
call   804a1f0 <fchmod@plt+0x910>
lea    0x1(%ebx),%edx
cmp    %edx,%esi
mov    %eax,0x10(%ebp)
je     804bd4c <fchmod@plt+0x246c>
cmpl   $0x2,0x805d4f0
movsbl 0x1(%ebx),%edx
je     804bd36 <fchmod@plt+0x2456>
lea    -0x30(%edx),%ecx
cmp    $0x45,%cl
ja     804bd4a <fchmod@plt+0x246a>
movzbl %cl,%ecx
jmp    *0x8053d50(,%ecx,4)
lea    0x0(%esi),%esi
call   804a440 <fchmod@plt+0xb60>
mov    %eax,(%esp)
mov    %eax,%ebx
call   8050820 <fchmod@plt+0x6f40>
mov    %eax,(%esp)
call   80504d0 <fchmod@plt+0x6bf0>
mov    %eax,0x10(%edi)
mov    %ebx,(%esp)
call   80508e0 <fchmod@plt+0x7000>
lea    0x0(%esi),%esi
addl   $0x1,0x8(%ebp)
jmp    804b2c0 <fchmod@plt+0x19e0>
lea    0x0(%esi,%eiz,1),%esi
call   804a410 <fchmod@plt+0xb30>
cmp    $0xa,%eax
je     804b6c3 <fchmod@plt+0x1de3>
cmp    $0xffffffff,%eax
jne    804b9ee <fchmod@plt+0x210e>
movl   $0x0,0x14(%edi)
jmp    804b6a0 <fchmod@plt+0x1dc0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebp),%edx
xor    %ecx,%ecx
mov    0x805846c,%eax
movl   $0x8058480,(%esp)
call   804a2c0 <fchmod@plt+0x9e0>
cmpb   $0x0,0xc(%edi)
sete   0xc(%edi)
mov    %eax,0x805846c
jmp    804b6a0 <fchmod@plt+0x1dc0>
lea    0x0(%esi),%esi
call   804a3a0 <fchmod@plt+0xac0>
xor    %edx,%edx
mov    %eax,%ebx
call   804a8c0 <fchmod@plt+0xfe0>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     804c2ef <fchmod@plt+0x2a0f>
mov    0x34(%esp),%esi
mov    %esi,(%esp)
call   8050820 <fchmod@plt+0x6f40>
mov    %esi,(%esp)
mov    %eax,0x20(%esp)
call   8050830 <fchmod@plt+0x6f50>
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804ada0 <fchmod@plt+0x14c0>
xor    %edx,%edx
mov    %eax,0x1c(%esp)
mov    %ebx,%eax
call   804a8c0 <fchmod@plt+0xfe0>
test   %eax,%eax
mov    %eax,0x38(%esp)
je     804c2ef <fchmod@plt+0x2a0f>
mov    0x38(%esp),%esi
mov    %esi,(%esp)
call   8050820 <fchmod@plt+0x6f40>
mov    %esi,(%esp)
mov    %eax,%ebx
mov    %eax,0x2c(%esp)
call   8050830 <fchmod@plt+0x6f50>
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   804ada0 <fchmod@plt+0x14c0>
cmpl   $0x1,0x805d508
mov    %eax,0x28(%esp)
jle    804bc38 <fchmod@plt+0x2358>
mov    0x1c(%esp),%esi
mov    %esi,%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
test   %esi,%esi
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
mov    %eax,%ebx
mov    %esi,%eax
je     804c12c <fchmod@plt+0x284c>
xor    %ecx,%ecx
xor    %esi,%esi
mov    %edi,0x1c(%esp)
mov    %ecx,%edi
mov    %ebp,0x24(%esp)
mov    %ebx,%ebp
mov    %eax,%ebx
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x805d508
mov    $0x1,%eax
je     804b822 <fchmod@plt+0x1f42>
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    %ebx,%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,(%esp)
add    %esi,%eax
mov    %eax,0x4(%esp)
call   80494e0 <mbrtowc@plt>
lea    -0x1(%eax),%ecx
cmp    $0xfffffffc,%ecx
mov    $0x1,%ecx
cmova  %ecx,%eax
add    %eax,%esi
add    $0x1,%edi
cmp    %esi,%ebx
mov    %eax,-0x4(%ebp,%edi,4)
ja     804b7e0 <fchmod@plt+0x1f00>
mov    %edi,%eax
mov    %ebp,%ebx
mov    0x24(%esp),%ebp
lea    0x4(,%eax,8),%eax
mov    %eax,(%esp)
mov    %edi,0x30(%esp)
mov    0x1c(%esp),%edi
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    %eax,0x10(%edi)
mov    0x28(%esp),%edi
mov    %eax,%esi
test   %edi,%edi
je     804be69 <fchmod@plt+0x2589>
movl   $0x0,0x1c(%esp)
xor    %edi,%edi
mov    %ebp,0x3c(%esp)
jmp    804b8d9 <fchmod@plt+0x1ff9>
nop
add    0x1c(%esp),%eax
mov    $0x1,%ebp
mov    %eax,0x24(%esp)
mov    $0x2,%eax
mov    %eax,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    0x24(%esp),%ecx
mov    %eax,0x4(%esi,%edi,8)
mov    %ebp,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049700 <strncpy@plt>
mov    0x4(%esi,%edi,8),%eax
add    $0x1,%edi
movb   $0x0,(%eax,%ebp,1)
add    0x1c(%esp),%ebp
cmp    0x30(%esp),%edi
je     804be4b <fchmod@plt+0x256b>
cmp    %ebp,0x28(%esp)
jbe    804be69 <fchmod@plt+0x2589>
mov    %ebp,0x1c(%esp)
mov    (%ebx,%edi,4),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    (%ebx,%edi,4),%edx
mov    0x20(%esp),%ecx
mov    %eax,(%esi,%edi,8)
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8049700 <strncpy@plt>
mov    (%ebx,%edi,4),%eax
mov    (%esi,%edi,8),%edx
movb   $0x0,(%edx,%eax,1)
mov    (%ebx,%edi,4),%eax
add    %eax,0x20(%esp)
cmpl   $0x1,0x805d508
mov    0x2c(%esp),%eax
je     804b880 <fchmod@plt+0x1fa0>
mov    0x1c(%esp),%edx
movl   $0x0,(%esp)
add    %edx,%eax
mov    %eax,%ecx
mov    %eax,0x24(%esp)
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %ecx,0x4(%esp)
sub    %edx,%eax
mov    %eax,0x8(%esp)
call   80494e0 <mbrtowc@plt>
mov    %eax,%ebp
lea    -0x1(%eax),%eax
cmp    $0xfffffffc,%eax
jbe    804c0e8 <fchmod@plt+0x2808>
mov    $0x2,%eax
mov    $0x1,%ebp
jmp    804b892 <fchmod@plt+0x1fb2>
xchg   %ax,%ax
call   804a410 <fchmod@plt+0xb30>
cmp    $0x23,%eax
je     804b4c0 <fchmod@plt+0x1be0>
cmp    $0x7d,%eax
je     804b4c0 <fchmod@plt+0x1be0>
cmp    $0xffffffff,%eax
je     804b6a0 <fchmod@plt+0x1dc0>
cmp    $0xa,%eax
je     804b6a0 <fchmod@plt+0x1dc0>
cmp    $0x3b,%eax
je     804b6a0 <fchmod@plt+0x1dc0>
jmp    804c25f <fchmod@plt+0x297f>
nop
mov    (%edi),%ebx
test   %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
jne    804c17a <fchmod@plt+0x289a>
call   804a6b0 <fchmod@plt+0xdd0>
mov    0x8(%ebp),%edx
movl   $0x0,(%esp)
mov    %eax,%ecx
mov    0x8058478,%eax
call   804a2c0 <fchmod@plt+0x9e0>
mov    %eax,0x8058478
jmp    804b6a0 <fchmod@plt+0x1dc0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804a410 <fchmod@plt+0xb30>
cmp    $0xffffffff,%eax
je     804c19e <fchmod@plt+0x28be>
cmp    $0x5c,%eax
je     804c0a5 <fchmod@plt+0x27c5>
cmpl   $0x2,0x805d4f0
je     804c19e <fchmod@plt+0x28be>
call   804a630 <fchmod@plt+0xd50>
mov    $0xa,%edx
lea    0x10(%edi),%eax
call   804b110 <fchmod@plt+0x1830>
jmp    804b6a0 <fchmod@plt+0x1dc0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80582d4,%edx
mov    $0x1,%ecx
mov    $0x8058424,%eax
call   804a490 <fchmod@plt+0xbb0>
mov    %eax,0x10(%edi)
jmp    804b6a0 <fchmod@plt+0x1dc0>
lea    0x0(%esi),%esi
call   804a6b0 <fchmod@plt+0xdd0>
mov    0x8(%ebp),%edx
movl   $0x0,(%esp)
mov    %eax,%ecx
mov    0x805847c,%eax
call   804a2c0 <fchmod@plt+0x9e0>
mov    %eax,0x805847c
jmp    804b6a0 <fchmod@plt+0x1dc0>
lea    0x0(%esi),%esi
mov    0x80582d8,%edx
xor    %ecx,%ecx
mov    $0x8058428,%eax
call   804a490 <fchmod@plt+0xbb0>
mov    0x8(%eax),%eax
mov    %eax,0x10(%edi)
jmp    804b6a0 <fchmod@plt+0x1dc0>
lea    0x0(%esi),%esi
mov    0x805846c,%eax
test   %eax,%eax
je     804c283 <fchmod@plt+0x29a3>
mov    (%edi),%edi
test   %edi,%edi
jne    804c313 <fchmod@plt+0x2a33>
call   804a410 <fchmod@plt+0xb30>
cmp    $0x23,%eax
je     804bd60 <fchmod@plt+0x2480>
cmp    $0x7d,%eax
je     804bd60 <fchmod@plt+0x2480>
cmp    $0xffffffff,%eax
je     804bd65 <fchmod@plt+0x2485>
cmp    $0xa,%eax
je     804bd65 <fchmod@plt+0x2485>
cmp    $0x3b,%eax
je     804bd65 <fchmod@plt+0x2485>
jmp    804c25f <fchmod@plt+0x297f>
xchg   %ax,%ax
mov    (%edi),%eax
test   %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
jne    804c20f <fchmod@plt+0x292f>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0x6e,%eax
je     804bdb8 <fchmod@plt+0x24d8>
cmp    $0xffffffff,%eax
je     804b2c0 <fchmod@plt+0x19e0>
cmp    $0xa,%eax
jne    804bb16 <fchmod@plt+0x2236>
jmp    804b2c0 <fchmod@plt+0x19e0>
nop
cmp    $0xffffffff,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
je     804b2c0 <fchmod@plt+0x19e0>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xa,%eax
xchg   %ax,%ax
jne    804bb08 <fchmod@plt+0x2228>
jmp    804b2c0 <fchmod@plt+0x19e0>
nop
movl   $0x5,0x8(%esp)
movl   $0x80541c5,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x10(%edi)
jmp    804b975 <fchmod@plt+0x2095>
lea    0x0(%esi,%eiz,1),%esi
call   804a410 <fchmod@plt+0xb30>
mov    %eax,%edx
lea    0x40(%esp),%eax
call   804abb0 <fchmod@plt+0x12d0>
test   %al,%al
je     804c2cb <fchmod@plt+0x29eb>
lea    0x40(%esp),%eax
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   80507b0 <fchmod@plt+0x6ed0>
mov    %eax,0x4(%edi)
call   804a410 <fchmod@plt+0xb30>
mov    %eax,%ebx
jmp    804b358 <fchmod@plt+0x1a78>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    %edi,%eax
sub    %edi,%edx
call   804a1f0 <fchmod@plt+0x910>
lea    0x1(%ebx),%edi
mov    0x1c(%esp),%ecx
mov    %edi,%ebx
cmp    %ebx,%esi
mov    %eax,0x10(%ebp)
mov    %eax,%ebp
movl   $0x0,0x8(%eax)
ja     804b62b <fchmod@plt+0x1d4b>
mov    %edi,%eax
mov    %ebp,%ebx
mov    0x28(%esp),%edi
cmp    %eax,%esi
mov    %ebp,%edx
mov    0x2c(%esp),%ebp
ja     804bd23 <fchmod@plt+0x2443>
movl   $0x0,0x10(%edx)
mov    0x24(%esp),%ecx
xor    %esi,%esi
mov    0x60(%esp),%eax
mov    %eax,0x4(%ecx)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80508e0 <fchmod@plt+0x7000>
mov    0x10(%edi),%ebx
andb   $0xf0,0x10(%ebx)
movl   $0x0,0x8(%ebx)
movl   $0x0,0xc(%ebx)
call   804a410 <fchmod@plt+0xb30>
lea    0x1(%eax),%edx
cmp    $0x7e,%edx
ja     804bf1b <fchmod@plt+0x263b>
jmp    *0x8053e68(,%edx,4)
mov    %edx,0x805844c
mov    %edx,%eax
jmp    804b5a0 <fchmod@plt+0x1cc0>
mov    0x8058450,%esi
mov    0x805844c,%edx
mov    %esi,%eax
sub    %edx,%eax
cmp    $0xff,%eax
jle    804c0f0 <fchmod@plt+0x2810>
mov    0x8058448,%eax
add    $0x100,%edx
cmp    %eax,%edx
je     804c120 <fchmod@plt+0x2840>
mov    0x8058458,%ecx
add    %ecx,%edx
not    %ecx
and    %ecx,%edx
mov    0x8058444,%ecx
mov    %edx,%ebx
mov    %edx,0x805844c
sub    %ecx,%ebx
mov    %ebx,0x24(%esp)
mov    %esi,%ebx
sub    %ecx,%ebx
cmp    %ebx,0x24(%esp)
jle    804bc98 <fchmod@plt+0x23b8>
mov    %esi,0x805844c
mov    %esi,%edx
mov    0x28(%esp),%ecx
cmp    %ecx,0x1c(%esp)
mov    %edx,0x8058448
jne    804be69 <fchmod@plt+0x2589>
xor    %edx,%edx
xchg   %ax,%ax
mov    %dl,(%eax,%edx,1)
add    $0x1,%edx
cmp    $0x100,%edx
jne    804bcb0 <fchmod@plt+0x23d0>
mov    0x1c(%esp),%ecx
xor    %dx,%dx
test   %ecx,%ecx
je     804bcf0 <fchmod@plt+0x2410>
mov    %edi,0x24(%esp)
mov    0x2c(%esp),%esi
mov    0x20(%esp),%edi
lea    0x0(%esi),%esi
movzbl (%edi,%edx,1),%ecx
movzbl (%esi,%edx,1),%ebx
add    $0x1,%edx
cmp    0x1c(%esp),%edx
mov    %bl,(%eax,%ecx,1)
jne    804bcd8 <fchmod@plt+0x23f8>
mov    0x24(%esp),%edi
mov    %eax,0x10(%edi)
call   804a410 <fchmod@plt+0xb30>
cmp    $0xffffffff,%eax
je     804bd06 <fchmod@plt+0x2426>
cmp    $0xa,%eax
jne    804c256 <fchmod@plt+0x2976>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80508e0 <fchmod@plt+0x7000>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   80508e0 <fchmod@plt+0x7000>
jmp    804b6a0 <fchmod@plt+0x1dc0>
sub    %eax,%esi
mov    %esi,%edx
call   804a1f0 <fchmod@plt+0x910>
mov    %eax,%edx
mov    %eax,0x10(%ebx)
jmp    804bbde <fchmod@plt+0x22fe>
mov    0x18(%esp),%ecx
movzbl %dl,%edi
mov    (%ecx),%ecx
testb  $0x8,0x1(%ecx,%edi,2)
jne    804b65c <fchmod@plt+0x1d7c>
mov    %dl,(%ebx)
addl   $0x1,0x4(%eax)
mov    0x1c(%esp),%ecx
lea    0x2(%ebx),%edi
mov    %eax,%ebp
mov    %edi,%ebx
jmp    804b623 <fchmod@plt+0x1d43>
call   804a630 <fchmod@plt+0xd50>
mov    0x805846c,%eax
mov    0x0(%ebp),%esi
mov    0x8(%ebp),%ecx
mov    (%eax),%edx
lea    (%edx,%edx,2),%edx
lea    (%esi,%edx,8),%edx
mov    %ecx,0x10(%edx)
mov    0x14(%eax),%ebx
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8049340 <free@plt>
mov    %ebx,0x805846c
jmp    804b6a0 <fchmod@plt+0x1dc0>
movl   $0x14,0x4(%esp)
movl   $0x8058440,(%esp)
call   80493b0 <_obstack_newchunk@plt>
mov    0x805844c,%eax
mov    0x8058450,%edx
jmp    804b562 <fchmod@plt+0x1c82>
cmpb   $0x0,0x80582e0
je     804bb16 <fchmod@plt+0x2236>
cmpl   $0x1,0x8058484
ja     804bb16 <fchmod@plt+0x2236>
mov    0x805848c,%eax
test   %eax,%eax
je     804c233 <fchmod@plt+0x2953>
add    $0x2,%eax
cmp    %eax,0x8058490
jne    804bb16 <fchmod@plt+0x2236>
movb   $0x1,0x8058412
jmp    804bb16 <fchmod@plt+0x2236>
lea    0x0(%esi),%esi
mov    0x80582d4,%edx
mov    $0x1,%ecx
mov    $0x8058424,%eax
call   804a490 <fchmod@plt+0xbb0>
mov    %eax,0xc(%ebx)
mov    0x10(%edi),%ebx
movzbl 0x10(%ebx),%eax
mov    %esi,0x4(%esp)
mov    0x30(%esp),%esi
shr    $0x4,%al
movzbl %al,%eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   804f0c0 <fchmod@plt+0x57e0>
mov    %eax,(%ebx)
mov    %esi,(%esp)
call   80508e0 <fchmod@plt+0x7000>
jmp    804b6a0 <fchmod@plt+0x1dc0>
mov    %ebp,%eax
mov    0x3c(%esp),%ebp
lea    0x0(,%edi,8),%edx
cmp    %eax,0x28(%esp)
movl   $0x0,(%esi,%edx,1)
je     804bcf3 <fchmod@plt+0x2413>
movl   $0x5,0x8(%esp)
movl   $0x80542f2,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
lea    0x0(%esi),%esi
cmpl   $0x2,0x805d4f0
mov    %ebp,%edi
je     804c0b1 <fchmod@plt+0x27d1>
mov    0x6c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
jne    804c1e6 <fchmod@plt+0x2906>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0xc,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
movl   $0x0,(%eax)
mov    %eax,%edi
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x8049340,0x10(%esp)
movl   $0x80501a0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x8058440,(%esp)
call   8049400 <_obstack_begin@plt>
jmp    804b29d <fchmod@plt+0x19bd>
call   804a3a0 <fchmod@plt+0xac0>
cmp    $0xa,%eax
je     804be18 <fchmod@plt+0x2538>
movl   $0x5,0x8(%esp)
movl   $0x8054240,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movzbl 0x10(%ebx),%edx
test   $0x6,%dl
jne    804c1c2 <fchmod@plt+0x28e2>
mov    %edx,%ecx
mov    $0x1,%eax
shr    $0x3,%cl
and    $0x1,%ecx
shl    %cl,%eax
mov    %eax,%ecx
mov    %edx,%eax
shr    %al
and    $0xfffffff9,%edx
or     %ecx,%eax
and    $0x3,%eax
add    %eax,%eax
or     %eax,%edx
mov    %dl,0x10(%ebx)
jmp    804bc13 <fchmod@plt+0x2333>
orb    $0x8,0x10(%ebx)
jmp    804bc13 <fchmod@plt+0x2333>
movzbl 0x10(%ebx),%eax
test   $0x1,%al
jne    804c337 <fchmod@plt+0x2a57>
or     $0x1,%eax
mov    %al,0x10(%ebx)
jmp    804bc13 <fchmod@plt+0x2333>
call   804a630 <fchmod@plt+0xd50>
jmp    804be18 <fchmod@plt+0x2538>
mov    0x8(%ebx),%edx
test   %edx,%edx
jne    804c35b <fchmod@plt+0x2a7b>
lea    0x0(%esi),%esi
call   804a750 <fchmod@plt+0xe70>
test   %eax,%eax
mov    %eax,0x8(%ebx)
jne    804bc13 <fchmod@plt+0x2333>
movl   $0x5,0x8(%esp)
movl   $0x80542c5,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x2,0x805d4f0
je     804bf1b <fchmod@plt+0x263b>
or     $0x2,%esi
jmp    804bc13 <fchmod@plt+0x2333>
cmpl   $0x2,0x805d4f0
je     804bf1b <fchmod@plt+0x263b>
or     $0x4,%esi
jmp    804bc13 <fchmod@plt+0x2333>
orb    $0x2,0x8058468
jmp    804b573 <fchmod@plt+0x1c93>
movl   $0x1,0x1c(%esp)
mov    $0x1,%ecx
jmp    804bd54 <fchmod@plt+0x2474>
mov    0x1c(%esp),%ecx
or     $0x4,%ecx
jmp    804bd54 <fchmod@plt+0x2474>
mov    0x24(%esp),%ecx
lea    -0x30(%edx),%edi
mov    %edi,0x8(%eax)
movzbl 0x10(%ecx),%ebp
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
shr    $0x4,%dl
movzbl %dl,%edx
cmp    %edx,%edi
jle    804bd54 <fchmod@plt+0x2474>
mov    0x24(%esp),%ecx
mov    %ebp,%edx
shl    $0x4,%edi
and    $0xf,%edx
or     %edi,%edx
mov    %dl,0x10(%ecx)
mov    0x1c(%esp),%ecx
jmp    804bd54 <fchmod@plt+0x2474>
mov    0x1c(%esp),%ecx
or     $0x8,%ecx
jmp    804bd54 <fchmod@plt+0x2474>
movl   $0x0,0x1c(%esp)
xor    %ecx,%ecx
jmp    804bd54 <fchmod@plt+0x2474>
movl   $0x2,0x1c(%esp)
mov    $0x2,%ecx
jmp    804bd54 <fchmod@plt+0x2474>
call   804a3a0 <fchmod@plt+0xac0>
mov    %eax,%edx
jmp    804ba0e <fchmod@plt+0x212e>
mov    0x8058474,%eax
test   %eax,%eax
je     804be9f <fchmod@plt+0x25bf>
movl   $0x5,0x8(%esp)
movl   $0x80543a7,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
lea    0x0(%esi),%esi
lea    0x1(%ebp),%eax
jmp    804b892 <fchmod@plt+0x1fb2>
movl   $0x100,0x4(%esp)
movl   $0x8058440,(%esp)
call   80493b0 <_obstack_newchunk@plt>
mov    0x805844c,%edx
mov    0x8058450,%esi
jmp    804bc53 <fchmod@plt+0x2373>
lea    0x50(%esp),%eax
mov    %eax,%edx
jmp    804bbde <fchmod@plt+0x22fe>
orb    $0x2,0x8058468
jmp    804bc66 <fchmod@plt+0x2386>
movl   $0x4,(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
call   80501a0 <fchmod@plt+0x68c0>
xor    %edx,%edx
mov    %eax,%esi
mov    %eax,0x10(%edi)
xor    %eax,%eax
jmp    804be58 <fchmod@plt+0x2578>
movl   $0x5,0x8(%esp)
movl   $0x80540dd,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x8054184,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x8054144,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x8054256,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
call   80493e0 <__stack_chk_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x805420e,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x80541a1,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
mov    0x8058498,%eax
test   %eax,%eax
je     804bb16 <fchmod@plt+0x2236>
mov    %eax,(%esp)
call   8049690 <ftell@plt>
cmp    $0x2,%eax
jne    804bb16 <fchmod@plt+0x2236>
jmp    804bdee <fchmod@plt+0x250e>
cmp    $0x3b,%eax
je     804bd06 <fchmod@plt+0x2426>
movl   $0x5,0x8(%esp)
movl   $0x8054125,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x8054116,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x8054353,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x80540ce,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x8054227,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x8054165,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x805427a,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
movl   $0x5,0x8(%esp)
movl   $0x805429e,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
nop
sub    $0xc,%esp
mov    0x14(%esp),%eax
movl   $0x0,0x8058498
00
movl   $0x0,0x8058484
00
movl   $0x0,0x8058480
00
mov    %eax,0x805848c
mov    %eax,0x8058490
add    0x18(%esp),%eax
mov    %eax,0x8058494
mov    0x8058420,%eax
add    $0x1,%eax
mov    %eax,0x8058420
mov    %eax,0x8058488
mov    0x10(%esp),%eax
call   804b280 <fchmod@plt+0x19a0>
movl   $0x0,0x805848c
00
movl   $0x0,0x8058490
00
movl   $0x0,0x8058494
00
movb   $0x0,0x80582e0
add    $0xc,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x80583e4,%eax
mov    0x24(%esp),%ebx
mov    %eax,0x8058498
cmpb   $0x2d,(%ebx)
je     804c488 <fchmod@plt+0x2ba8>
movl   $0x1,0x8(%esp)
movl   $0x80537b4,0x4(%esp)
mov    %ebx,(%esp)
call   8050570 <fchmod@plt+0x6c90>
mov    %eax,0x8058498
mov    0x20(%esp),%eax
mov    %ebx,0x8058480
movl   $0x1,0x8058484
00
movl   $0x0,0x8058488
00
call   804b280 <fchmod@plt+0x19a0>
mov    0x8058498,%edx
cmp    0x80583e4,%edx
mov    %eax,%ebx
je     804c46f <fchmod@plt+0x2b8f>
mov    %edx,(%esp)
call   8050030 <fchmod@plt+0x6750>
movl   $0x0,0x8058498
00
mov    %ebx,%eax
movb   $0x0,0x80582e0
add    $0x18,%esp
pop    %ebx
ret
nop
cmpb   $0x0,0x1(%ebx)
je     804c434 <fchmod@plt+0x2b54>
jmp    804c417 <fchmod@plt+0x2b37>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x805846c,%eax
test   %eax,%eax
jne    804c64b <fchmod@plt+0x2d6b>
mov    0x8058474,%eax
test   %eax,%eax
je     804c4e6 <fchmod@plt+0x2c06>
mov    %eax,(%esp)
mov    0x8058470,%ebx
call   8050830 <fchmod@plt+0x6f50>
mov    %eax,0x4(%ebx)
mov    0x8058470,%ebx
mov    0x4(%ebx),%esi
test   %esi,%esi
jne    804c62b <fchmod@plt+0x2d4b>
mov    0x8058474,%eax
mov    %eax,(%esp)
call   80508e0 <fchmod@plt+0x7000>
movl   $0x0,0x8058474
00
mov    0x805847c,%esi
mov    0x8058478,%edi
test   %esi,%esi
je     804c56a <fchmod@plt+0x2c8a>
test   %edi,%edi
mov    0x4(%esi),%ebx
je     804c558 <fchmod@plt+0x2c78>
lea    0x0(%esi),%esi
mov    %edi,%ebp
jmp    804c50f <fchmod@plt+0x2c2f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebp),%ebp
test   %ebp,%ebp
je     804c558 <fchmod@plt+0x2c78>
mov    %ebx,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   80492f0 <strcmp@plt>
test   %eax,%eax
jne    804c508 <fchmod@plt+0x2c28>
mov    0x0(%ebp),%edx
mov    (%esi),%eax
mov    0x30(%esp),%ecx
lea    (%eax,%eax,2),%eax
shl    $0x3,%eax
add    (%ecx),%eax
mov    %edx,0x10(%eax)
mov    0x4(%esi),%eax
mov    0x14(%esi),%ebx
mov    %eax,(%esp)
call   8049340 <free@plt>
test   %ebx,%ebx
je     804c56a <fchmod@plt+0x2c8a>
mov    %ebx,%esi
test   %edi,%edi
mov    0x4(%esi),%ebx
jne    804c500 <fchmod@plt+0x2c20>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ebx)
jne    804c5f8 <fchmod@plt+0x2d18>
mov    0x30(%esp),%eax
mov    0x8(%eax),%edx
jmp    804c525 <fchmod@plt+0x2c45>
test   %edi,%edi
movl   $0x0,0x805847c
00
jne    804c582 <fchmod@plt+0x2ca2>
jmp    804c594 <fchmod@plt+0x2cb4>
lea    0x0(%esi),%esi
mov    %ebx,%edi
mov    0x4(%edi),%eax
mov    0x14(%edi),%ebx
mov    %eax,(%esp)
call   8049340 <free@plt>
test   %ebx,%ebx
jne    804c580 <fchmod@plt+0x2ca0>
mov    0x8058428,%ebx
movl   $0x0,0x8058478
00
test   %ebx,%ebx
je     804c5c3 <fchmod@plt+0x2ce3>
mov    (%ebx),%eax
test   %eax,%eax
je     804c5bc <fchmod@plt+0x2cdc>
mov    %eax,(%esp)
call   8049340 <free@plt>
movl   $0x0,(%ebx)
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
jne    804c5a8 <fchmod@plt+0x2cc8>
mov    0x8058424,%ebx
test   %ebx,%ebx
je     804c5eb <fchmod@plt+0x2d0b>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
test   %eax,%eax
je     804c5e4 <fchmod@plt+0x2d04>
mov    %eax,(%esp)
call   8049340 <free@plt>
movl   $0x0,(%ebx)
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
jne    804c5d0 <fchmod@plt+0x2cf0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x8053774,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
mov    0x8058478,%edi
jmp    804c561 <fchmod@plt+0x2c81>
mov    0x8058474,%eax
mov    %eax,(%esp)
call   8050820 <fchmod@plt+0x6f40>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80507b0 <fchmod@plt+0x6ed0>
mov    %eax,(%ebx)
jmp    804c4cf <fchmod@plt+0x2bef>
lea    0x8(%eax),%edx
mov    0x8(%eax),%eax
mov    %eax,0x8058480
mov    0x4(%edx),%eax
mov    %eax,0x8058484
mov    0x8(%edx),%eax
movl   $0x5,0x8(%esp)
movl   $0x8054108,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8058488
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x8058428,%ebx
test   %ebx,%ebx
je     804c6b6 <fchmod@plt+0x2dd6>
xchg   %ax,%ax
mov    0x8(%ebx),%eax
test   %eax,%eax
je     804c6af <fchmod@plt+0x2dcf>
mov    %eax,(%esp)
call   80493f0 <rewind@plt>
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
jne    804c6a0 <fchmod@plt+0x2dc0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x8058428,%ebx
test   %ebx,%ebx
je     804c6e6 <fchmod@plt+0x2e06>
xchg   %ax,%ax
mov    0x8(%ebx),%eax
test   %eax,%eax
je     804c6df <fchmod@plt+0x2dff>
mov    %eax,(%esp)
call   8050030 <fchmod@plt+0x6750>
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
jne    804c6d0 <fchmod@plt+0x2df0>
mov    0x8058424,%ebx
test   %ebx,%ebx
je     804c706 <fchmod@plt+0x2e26>
mov    0x8(%ebx),%eax
test   %eax,%eax
je     804c6ff <fchmod@plt+0x2e1f>
mov    %eax,(%esp)
call   8050030 <fchmod@plt+0x6750>
mov    0xc(%ebx),%ebx
test   %ebx,%ebx
jne    804c6f0 <fchmod@plt+0x2e10>
movl   $0x0,0x8058424
00
movl   $0x0,0x8058428
00
add    $0x18,%esp
pop    %ebx
ret
nop
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x14,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    0x80584b0,%edx
test   %edx,%edx
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
movb   $0x0,0x10(%eax)
je     804c778 <fchmod@plt+0x2e98>
mov    %eax,0xc(%edx)
mov    %eax,0x80584b0
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x80584b4
mov    %eax,0x80584b0
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    0x4(%eax),%edi
mov    (%eax),%ecx
mov    0xc(%eax),%eax
mov    %edi,%esi
sub    %ecx,%esi
add    %eax,%eax
cmp    %eax,%esi
ja     804c7e8 <fchmod@plt+0x2f08>
cmp    %eax,%edx
ja     804c7e0 <fchmod@plt+0x2f00>
mov    %eax,0xc(%ebx)
cmp    $0x31,%eax
ja     804c7c2 <fchmod@plt+0x2ee2>
movl   $0x32,0xc(%ebx)
mov    $0x32,%eax
add    %esi,%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   80501e0 <fchmod@plt+0x6900>
add    %eax,%esi
mov    %eax,(%ebx)
mov    %esi,0x4(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %edx,0xc(%ebx)
mov    %edx,%eax
jmp    804c7b1 <fchmod@plt+0x2ed1>
nop
mov    0x8(%ebx),%eax
mov    %ecx,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
call   8049330 <memmove@plt>
mov    (%ebx),%ecx
mov    0x4(%ebx),%eax
mov    0xc(%esp),%edx
mov    %ecx,0x4(%ebx)
sub    %ecx,%eax
add    0xc(%ebx),%eax
cmp    %edx,%eax
mov    %eax,0xc(%ebx)
ja     804c7d7 <fchmod@plt+0x2ef7>
add    %eax,%eax
xor    %esi,%esi
jmp    804c7aa <fchmod@plt+0x2eca>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x3c,%esp
movl   $0x0,0x80584c0
00
cmpb   $0x2d,(%eax)
je     804ca98 <fchmod@plt+0x31b8>
mov    0x80582d8,%eax
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8050570 <fchmod@plt+0x6c90>
test   %eax,%eax
mov    %eax,0x7c(%ebx)
je     804cbb8 <fchmod@plt+0x32d8>
cmpb   $0x0,0x8058410
movl   $0x804d040,0x10(%ebx)
jne    804caf8 <fchmod@plt+0x3218>
mov    %esi,0x18(%ebx)
mov    0x805840c,%ecx
test   %ecx,%ecx
je     804cad0 <fchmod@plt+0x31f0>
mov    0x18(%ebx),%eax
movl   $0x0,0x28(%esp)
mov    %eax,(%esp)
call   80504d0 <fchmod@plt+0x6bf0>
movl   $0x2f,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   8049770 <strrchr@plt>
test   %eax,%eax
je     804cba8 <fchmod@plt+0x32c8>
movb   $0x0,(%eax)
mov    0x7c(%ebx),%eax
mov    %eax,(%esp)
call   8049710 <fileno@plt>
mov    %eax,(%esp)
call   8049820 <isatty@plt>
test   %eax,%eax
jne    804cb08 <fchmod@plt+0x3228>
mov    0x7c(%ebx),%eax
mov    %eax,(%esp)
call   8049710 <fileno@plt>
lea    0x1c(%ebx),%edx
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   80494a0 <__fxstat64@plt>
mov    0x2c(%ebx),%eax
and    $0xf000,%eax
cmp    $0x8000,%eax
je     804c92e <fchmod@plt+0x304e>
mov    0x18(%ebx),%edi
movl   $0x5,0x8(%esp)
movl   $0x8054440,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
call   80492e0 <is_selinux_enabled@plt>
test   %eax,%eax
jle    804ca48 <fchmod@plt+0x3168>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8052c60 <fchmod@plt+0x9380>
cmp    $0xffffffff,%eax
je     804c9e0 <fchmod@plt+0x3100>
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049810 <getfscreatecon@plt>
mov    %eax,%edi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8049670 <setfscreatecon@plt>
test   %eax,%eax
js     804cc20 <fchmod@plt+0x3340>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80497b0 <freecon@plt>
mov    0x80582d4,%eax
movl   $0x8053590,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8050670 <fchmod@plt+0x6d90>
mov    %esi,(%esp)
movb   $0x0,0x805852c
mov    %eax,0x8058530
call   8049340 <free@plt>
test   %edi,%edi
js     804ca7c <fchmod@plt+0x319c>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049670 <setfscreatecon@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80497b0 <freecon@plt>
jmp    804ca7c <fchmod@plt+0x319c>
xchg   %ax,%ax
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x26,%eax
je     804ca48 <fchmod@plt+0x3168>
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    0x18(%ebx),%ebp
movl   $0x5,0x8(%esp)
mov    0x805d50c,%edi
movl   $0x80544ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x18(%esp)
call   80493c0 <dcgettext@plt>
mov    0x18(%esp),%edx
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x8(%esp)
mov    0x80583c0,%eax
mov    %eax,(%esp)
call   80497d0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x80582d4,%eax
movl   $0x8053590,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8050670 <fchmod@plt+0x6d90>
mov    %esi,(%esp)
movb   $0x0,0x805852c
mov    %eax,0x8058530
call   8049340 <free@plt>
mov    0x8058530,%eax
test   %eax,%eax
je     804cb60 <fchmod@plt+0x3280>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x1(%eax)
jne    804c83e <fchmod@plt+0x2f5e>
mov    0x805840c,%edi
test   %edi,%edi
jne    804c83e <fchmod@plt+0x2f5e>
mov    0x80583e4,%eax
mov    %eax,(%esp)
call   8049760 <clearerr_unlocked@plt>
mov    0x80583e4,%eax
mov    %eax,0x7c(%ebx)
jmp    804c862 <fchmod@plt+0x2f82>
lea    0x0(%esi),%esi
mov    0x7c(%ebx),%eax
test   %eax,%eax
je     804cae0 <fchmod@plt+0x3200>
cmpb   $0x0,0x8058413
jne    804cb38 <fchmod@plt+0x3258>
mov    0x8058400,%eax
mov    %eax,0x8058530
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8050230 <fchmod@plt+0x6950>
mov    %eax,0x18(%ebx)
jmp    804c879 <fchmod@plt+0x2f99>
mov    0x18(%ebx),%edi
movl   $0x5,0x8(%esp)
movl   $0x8054420,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
jmp    804c8d2 <fchmod@plt+0x2ff2>
movl   $0x0,0xc(%esp)
movl   $0x2,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80496a0 <setvbuf@plt>
jmp    804cae0 <fchmod@plt+0x3200>
lea    0x0(%esi),%esi
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    0x14(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80544e4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   80493c0 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
jmp    804ca89 <fchmod@plt+0x31a9>
lea    0x0(%esi),%esi
mov    $0x2e,%edx
mov    %dx,(%esi)
jmp    804c8b7 <fchmod@plt+0x2fd7>
lea    0x0(%esi),%esi
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    0x805d50c,%edi
movl   $0x5,0x8(%esp)
movl   $0x80543ba,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   80493c0 <dcgettext@plt>
mov    %ebp,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80583c0,%eax
mov    %eax,(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x804c720,0x10(%ebx)
addl   $0x1,0x4(%ebx)
jmp    804ca89 <fchmod@plt+0x31a9>
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    0x2c(%esp),%edx
movl   $0x5,0x8(%esp)
mov    0x805d50c,%ebp
movl   $0x8054468,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x1c(%esp)
call   80493c0 <dcgettext@plt>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %ebp,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x80583c0,%eax
mov    %eax,(%esp)
call   80497d0 <__fprintf_chk@plt>
jmp    804c979 <fchmod@plt+0x3099>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x3c,%esp
movl   $0x804c720,0x10(%eax)
mov    0x7c(%eax),%eax
test   %eax,%eax
je     804cd79 <fchmod@plt+0x3499>
mov    0x805840c,%ecx
test   %ecx,%ecx
je     804cd88 <fchmod@plt+0x34a8>
mov    0x8058530,%edx
test   %edx,%edx
je     804cd88 <fchmod@plt+0x34a8>
mov    0x18(%ebx),%ecx
mov    %eax,(%esp)
mov    %ecx,0x20(%esp)
call   8049710 <fileno@plt>
mov    %eax,%edi
mov    0x8058530,%eax
mov    %eax,(%esp)
call   8049710 <fileno@plt>
mov    %eax,%esi
mov    0x38(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x34(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049630 <fchown@plt>
cmp    $0xffffffff,%eax
je     804ce80 <fchmod@plt+0x35a0>
mov    0x2c(%ebx),%eax
mov    %esi,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   8050930 <fchmod@plt+0x7050>
mov    0x7c(%ebx),%eax
mov    %eax,(%esp)
call   8050030 <fchmod@plt+0x6750>
mov    0x8058530,%eax
mov    %eax,(%esp)
call   8050030 <fchmod@plt+0x6750>
mov    0x805840c,%edx
cmpb   $0x2a,(%edx)
jne    804cd98 <fchmod@plt+0x34b8>
cmpb   $0x0,0x1(%edx)
jne    804cd98 <fchmod@plt+0x34b8>
mov    0x14(%ebx),%eax
mov    0x20(%esp),%ecx
mov    %eax,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   80500c0 <fchmod@plt+0x67e0>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049340 <free@plt>
movl   $0x0,0x7c(%ebx)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8050030 <fchmod@plt+0x6750>
jmp    804cd72 <fchmod@plt+0x3492>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    0x28(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%edi
mov    %eax,0x24(%esp)
lea    -0x1(%edi),%edi
call   8049620 <strlen@plt>
mov    0x28(%esp),%edx
mov    %eax,%esi
mov    %edx,%eax
jmp    804cdcd <fchmod@plt+0x34ed>
nop
add    %edi,%esi
add    $0x1,%eax
movl   $0x2a,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <strchr@plt>
test   %eax,%eax
jne    804cdc8 <fchmod@plt+0x34e8>
add    $0x1,%esi
mov    %esi,(%esp)
call   8052940 <fchmod@plt+0x9060>
mov    0x805840c,%esi
mov    %ebx,0x2c(%esp)
mov    %eax,0x28(%esp)
mov    %eax,%edi
jmp    804ce2d <fchmod@plt+0x354d>
xchg   %ax,%ax
mov    %ebx,%ebp
sub    %esi,%ebp
mov    %esi,0x4(%esp)
lea    0x1(%ebx),%esi
mov    %edi,(%esp)
add    %ebp,%edi
mov    %ebp,0x8(%esp)
call   8049350 <memcpy@plt>
mov    0x20(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80494d0 <strcpy@plt>
add    0x24(%esp),%edi
movl   $0x2a,0x4(%esp)
mov    %esi,(%esp)
call   8049600 <strchr@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804ce00 <fchmod@plt+0x3520>
mov    0x2c(%esp),%ebx
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   80494d0 <strcpy@plt>
mov    0x28(%esp),%esi
mov    0x14(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80500c0 <fchmod@plt+0x67e0>
mov    %esi,(%esp)
call   8049340 <free@plt>
jmp    804cd50 <fchmod@plt+0x3470>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%ebx),%eax
movl   $0xffffffff,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049630 <fchown@plt>
jmp    804cd06 <fchmod@plt+0x3426>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
jmp    804cebd <fchmod@plt+0x35dd>
lea    0x4(%eax),%edx
mov    %edx,(%ebx)
mov    (%eax),%eax
mov    %ebx,%edx
call   804c820 <fchmod@plt+0x2f40>
mov    0x7c(%ebx),%edx
test   %edx,%edx
jne    804ced8 <fchmod@plt+0x35f8>
mov    %ebx,%eax
call   804cc90 <fchmod@plt+0x33b0>
mov    (%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    804cea8 <fchmod@plt+0x35c8>
mov    $0x1,%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    0x4(%edx),%eax
cmp    0x8(%edx),%eax
jae    804cef9 <fchmod@plt+0x3619>
lea    0x1(%eax),%ecx
mov    %ecx,0x4(%edx)
movzbl (%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80496c0 <ungetc@plt>
xor    %eax,%eax
jmp    804ced1 <fchmod@plt+0x35f1>
mov    %edx,(%esp)
call   8049730 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804cebd <fchmod@plt+0x35dd>
mov    0x7c(%ebx),%edx
jmp    804cee9 <fchmod@plt+0x3609>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    %ecx,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
test   %esi,%esi
mov    %edi,0xc(%ebx)
movl   $0x0,0x8(%ebx)
movb   $0x1,0x10(%ebx)
mov    %eax,(%ebx)
mov    %eax,0x4(%ebx)
je     804cf50 <fchmod@plt+0x3670>
mov    0x14(%esi),%eax
mov    %eax,0x14(%ebx)
mov    0x18(%esi),%eax
mov    %eax,0x18(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x0,0x14(%ebx)
movl   $0x0,0x18(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x1c,%esp
mov    0x8(%eax),%eax
lea    (%ecx,%eax,1),%ebp
cmp    0xc(%edi),%ebp
ja     804d020 <fchmod@plt+0x3740>
add    0x4(%edi),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049350 <memcpy@plt>
mov    0x805d508,%edx
mov    %ebp,0x8(%edi)
cmp    $0x1,%edx
jle    804d000 <fchmod@plt+0x3720>
cmpb   $0x0,0x805d504
jne    804d000 <fchmod@plt+0x3720>
test   %ebx,%ebx
je     804d000 <fchmod@plt+0x3720>
add    $0x14,%edi
jmp    804cff0 <fchmod@plt+0x3710>
nop
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x0,(%esp)
call   80494e0 <mbrtowc@plt>
lea    0x2(%eax),%edx
cmp    $0x1,%edx
jbe    804d008 <fchmod@plt+0x3728>
test   %eax,%eax
je     804d000 <fchmod@plt+0x3720>
add    %eax,%esi
sub    %eax,%ebx
je     804d000 <fchmod@plt+0x3720>
mov    0x805d508,%edx
cmp    $0x1,%edx
jne    804cfc0 <fchmod@plt+0x36e0>
mov    $0x1,%eax
add    %eax,%esi
sub    %eax,%ebx
jne    804cfea <fchmod@plt+0x370a>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%edi)
mov    $0x1,%eax
movl   $0x0,0x4(%edi)
jmp    804cfe4 <fchmod@plt+0x3704>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
mov    %ebp,%edx
call   804c790 <fchmod@plt+0x2eb0>
mov    0x8(%edi),%eax
jmp    804cf8c <fchmod@plt+0x36ac>
jmp    804d040 <fchmod@plt+0x3760>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x7c(%eax),%eax
movl   $0x80584a8,0x4(%esp)
movl   $0x80584ac,(%esp)
mov    %eax,0xc(%esp)
movsbl 0x80582dc,%eax
mov    %eax,0x8(%esp)
call   804fec0 <fchmod@plt+0x65e0>
test   %eax,%eax
jle    804d0a8 <fchmod@plt+0x37c8>
mov    0x80584ac,%edx
movzbl 0x80582dc,%ecx
cmp    %cl,-0x1(%edx,%eax,1)
je     804d0a0 <fchmod@plt+0x37c0>
movb   $0x0,0x805851c
mov    %eax,%ecx
mov    $0x805850c,%eax
call   804cf70 <fchmod@plt+0x3690>
mov    $0x1,%eax
add    $0x1c,%esp
ret
sub    $0x1,%eax
jmp    804d08b <fchmod@plt+0x37ab>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x7c(%eax),%edx
test   %edx,%edx
je     804d0e8 <fchmod@plt+0x3808>
testb  $0x10,(%edx)
jne    804d0e8 <fchmod@plt+0x3808>
mov    0x4(%edx),%eax
cmp    0x8(%edx),%eax
jae    804d101 <fchmod@plt+0x3821>
lea    0x1(%eax),%ecx
mov    %ecx,0x4(%edx)
movzbl (%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80496c0 <ungetc@plt>
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
cmpb   $0x0,0x8058411
mov    $0x1,%eax
jne    804d0e1 <fchmod@plt+0x3801>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
jmp    804cea0 <fchmod@plt+0x35c0>
mov    %edx,(%esp)
call   8049730 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804d0e8 <fchmod@plt+0x3808>
mov    0x7c(%ebx),%edx
jmp    804d0d3 <fchmod@plt+0x37f3>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ecx
sub    $0x28,%esp
cmpl   $0x6,(%eax)
ja     804d1d8 <fchmod@plt+0x38f8>
mov    (%eax),%eax
jmp    *0x805455c(,%eax,4)
mov    $0x1,%eax
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x8058514,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8058510,%eax
mov    %eax,0x4(%esp)
mov    0xc(%ecx),%eax
mov    %eax,(%esp)
call   804f180 <fchmod@plt+0x58a0>
test   %eax,%eax
setne  %al
add    $0x28,%esp
pop    %ebx
ret
nop
mov    0x8(%edx),%ebx
xor    %eax,%eax
mov    0x4(%ecx),%edx
cmp    %edx,%ebx
jb     804d13d <fchmod@plt+0x385d>
mov    %ebx,%eax
sub    %edx,%eax
xor    %edx,%edx
divl   0x8(%ecx)
test   %edx,%edx
sete   %al
jmp    804d13d <fchmod@plt+0x385d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edx),%eax
cmp    %eax,0x4(%ecx)
setbe  %al
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    0x80584c0,%ecx
xor    %eax,%eax
test   %ecx,%ecx
jne    804d13d <fchmod@plt+0x385d>
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
jmp    804d0b0 <fchmod@plt+0x37d0>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8054508,(%esp)
call   804fc50 <fchmod@plt+0x6370>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    $0x1,%ecx
push   %ebx
mov    %edx,%ebx
mov    %eax,%esi
sub    $0x4,%esp
mov    %ebx,%eax
mov    $0x80582dc,%edx
call   804cf70 <fchmod@plt+0x3690>
mov    0x8(%esi),%ecx
mov    %ebx,%eax
mov    0x4(%esi),%edx
call   804cf70 <fchmod@plt+0x3690>
movzbl 0x10(%esi),%eax
mov    %al,0x10(%ebx)
mov    0x14(%esi),%eax
mov    %eax,0x14(%ebx)
mov    0x18(%esi),%eax
mov    %eax,0x18(%ebx)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x10,%esp
mov    (%edx),%eax
mov    0x4(%edx),%edx
mov    0x8(%esi),%ecx
sub    %eax,%edx
add    0xc(%ebx),%edx
mov    %ecx,%edi
cmp    %ecx,%edx
mov    %edx,0xc(%ebx)
jae    804d27d <fchmod@plt+0x399d>
add    %edx,%edx
cmp    %edx,%ecx
ja     804d2b8 <fchmod@plt+0x39d8>
mov    %edx,0xc(%ebx)
cmp    $0x31,%edx
ja     804d265 <fchmod@plt+0x3985>
movl   $0x32,0xc(%ebx)
mov    %eax,(%esp)
call   8049340 <free@plt>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    0x8(%esi),%edi
mov    %eax,(%ebx)
movzbl 0x10(%esi),%edx
mov    %edi,0x8(%ebx)
mov    0x8(%esi),%ecx
mov    %eax,0x4(%ebx)
mov    %eax,(%esp)
mov    %dl,0x10(%ebx)
mov    0x4(%esi),%edx
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
call   8049350 <memcpy@plt>
mov    0x14(%esi),%eax
mov    %eax,0x14(%ebx)
mov    0x18(%esi),%eax
mov    %eax,0x18(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0xc(%ebx)
mov    %ecx,%edx
jmp    804d259 <fchmod@plt+0x3979>
nop
mov    0x80584fc,%edx
test   %edx,%edx
je     804d2f0 <fchmod@plt+0x3a10>
test   %eax,%eax
movl   $0x0,0x80584f8
00
je     804d308 <fchmod@plt+0x3a28>
mov    0x14(%eax),%edx
mov    %edx,0x8058504
mov    0x18(%eax),%eax
mov    %eax,0x8058508
ret
lea    0x0(%esi),%esi
mov    %eax,%edx
mov    $0x32,%ecx
mov    $0x80584f0,%eax
jmp    804cf10 <fchmod@plt+0x3630>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8058504
00
movl   $0x0,0x8058508
00
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x805851c,%ecx
mov    0x805850c,%ebp
mov    0x8058510,%edi
mov    0x8058514,%esi
mov    %ecx,0x8(%esp)
mov    0x8058520,%edx
mov    %ecx,0x20(%esp)
mov    (%eax),%ecx
mov    %gs:0x14,%ebx
mov    %ebx,0x2c(%esp)
xor    %ebx,%ebx
mov    0x8058518,%ebx
mov    %edi,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x805850c
mov    0x4(%eax),%ecx
mov    %edx,0x24(%esp)
mov    0x8058524,%edx
mov    %esi,0x18(%esp)
mov    %ebp,0x10(%esp)
mov    %ecx,0x8058510
mov    0x8(%eax),%ecx
mov    %ebx,0x1c(%esp)
mov    %edx,0x28(%esp)
mov    %ecx,0x8058514
mov    0xc(%eax),%ecx
mov    %ecx,0x8058518
mov    0x10(%eax),%ecx
mov    %ecx,0x805851c
mov    0x14(%eax),%ecx
mov    %ecx,0x8058520
mov    0x18(%eax),%ecx
mov    %ecx,0x8058524
mov    %edi,0x4(%eax)
mov    0x8(%esp),%edi
mov    %esi,0x8(%eax)
mov    0xc(%esp),%esi
mov    %ebp,(%eax)
mov    %ebx,0xc(%eax)
mov    %edi,0x10(%eax)
mov    %esi,0x14(%eax)
mov    %edx,0x18(%eax)
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    804d3f1 <fchmod@plt+0x3b11>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   80493e0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
test   %eax,%eax
mov    0x30(%esp),%ebx
je     804d449 <fchmod@plt+0x3b69>
cmpb   $0x0,0x4(%ebx)
mov    %ecx,%esi
jne    804d478 <fchmod@plt+0x3b98>
test   %edx,%edx
jne    804d4b7 <fchmod@plt+0x3bd7>
test   %esi,%esi
jne    804d450 <fchmod@plt+0x3b70>
movb   $0x1,0x4(%ebx)
mov    0x8(%ebx),%eax
cmp    0x8058400,%eax
je     804d440 <fchmod@plt+0x3b60>
mov    %eax,0x30(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    804ff60 <fchmod@plt+0x6680>
xchg   %ax,%ax
cmpb   $0x0,0x8058413
jne    804d430 <fchmod@plt+0x3b50>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x8(%ebx),%eax
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80582dc,(%esp)
mov    %eax,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
jmp    804d425 <fchmod@plt+0x3b45>
lea    0x0(%esi),%esi
mov    0x8(%ebx),%ecx
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80582dc,(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   804fd80 <fchmod@plt+0x64a0>
mov    0x1c(%esp),%edx
movb   $0x0,0x4(%ebx)
mov    0x18(%esp),%eax
test   %edx,%edx
je     804d41d <fchmod@plt+0x3b3d>
mov    0x8(%ebx),%ecx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
jmp    804d41d <fchmod@plt+0x3b3d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x2020,%esp
mov    %gs:0x14,%eax
mov    %eax,0x201c(%esp)
xor    %eax,%eax
cmpb   $0x0,0x805852c
jne    804d64e <fchmod@plt+0x3d6e>
mov    0x80584b4,%edi
lea    0x1c(%esp),%ebx
test   %edi,%edi
je     804d5b9 <fchmod@plt+0x3cd9>
nop
mov    0x4(%edi),%eax
test   %eax,%eax
je     804d540 <fchmod@plt+0x3c60>
mov    0x8058530,%edx
mov    %edx,0xc(%esp)
mov    0x8(%edi),%edx
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   804fd80 <fchmod@plt+0x64a0>
mov    (%edi),%eax
test   %eax,%eax
je     804d5ae <fchmod@plt+0x3cce>
mov    0x80582d8,%edx
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8050570 <fchmod@plt+0x6c90>
test   %eax,%eax
mov    %eax,%esi
jne    804d586 <fchmod@plt+0x3ca6>
jmp    804d5ae <fchmod@plt+0x3cce>
mov    0x8058530,%edx
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
mov    %esi,0xc(%esp)
movl   $0x2000,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   804fe20 <fchmod@plt+0x6540>
test   %eax,%eax
jne    804d568 <fchmod@plt+0x3c88>
mov    %esi,(%esp)
call   8050030 <fchmod@plt+0x6750>
mov    0xc(%edi),%edi
test   %edi,%edi
jne    804d518 <fchmod@plt+0x3c38>
mov    0x8058530,%eax
cmp    0x8058400,%eax
je     804d63f <fchmod@plt+0x3d5f>
mov    %eax,(%esp)
call   804ff60 <fchmod@plt+0x6680>
mov    0x80584b4,%ebx
test   %ebx,%ebx
jne    804d5f1 <fchmod@plt+0x3d11>
jmp    804d611 <fchmod@plt+0x3d31>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%esi
mov    %ebx,(%esp)
call   8049340 <free@plt>
test   %esi,%esi
je     804d611 <fchmod@plt+0x3d31>
mov    %esi,%ebx
cmpb   $0x0,0x10(%ebx)
je     804d5e0 <fchmod@plt+0x3d00>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049340 <free@plt>
mov    0xc(%ebx),%esi
mov    %ebx,(%esp)
call   8049340 <free@plt>
test   %esi,%esi
jne    804d5ef <fchmod@plt+0x3d0f>
mov    0x201c(%esp),%eax
xor    %gs:0x14,%eax
movl   $0x0,0x80584b0
00
movl   $0x0,0x80584b4
00
jne    804d67f <fchmod@plt+0x3d9f>
add    $0x2020,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
cmpb   $0x0,0x8058413
jne    804d5c6 <fchmod@plt+0x3ce6>
jmp    804d5ce <fchmod@plt+0x3cee>
mov    0x8058530,%eax
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80582dc,(%esp)
mov    %eax,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
movb   $0x0,0x805852c
jmp    804d505 <fchmod@plt+0x3c25>
call   80493e0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
mov    0x80584b4,%eax
test   %eax,%eax
je     804d6aa <fchmod@plt+0x3dca>
call   804d4e0 <fchmod@plt+0x3c00>
test   %ebx,%ebx
movb   $0x0,0x8058538
jne    804d6bf <fchmod@plt+0x3ddf>
movl   $0x0,0x8058514
00
movb   $0x1,0x805851c
jmp    804d6d6 <fchmod@plt+0x3df6>
lea    0x4(%ecx),%eax
mov    %esi,%edx
mov    %eax,(%esi)
mov    (%ecx),%eax
call   804c820 <fchmod@plt+0x2f40>
mov    %esi,(%esp)
call   *0x10(%esi)
test   %al,%al
mov    %eax,%ebx
jne    804d780 <fchmod@plt+0x3ea0>
mov    %esi,%eax
call   804cc90 <fchmod@plt+0x33b0>
mov    (%esi),%ecx
mov    (%ecx),%eax
test   %eax,%eax
je     804d784 <fchmod@plt+0x3ea4>
cmpb   $0x0,0xc(%esi)
je     804d6c8 <fchmod@plt+0x3de8>
movl   $0x0,0x8(%esi)
movl   $0x0,0x80584dc
00
mov    0x8(%edi),%eax
mov    (%edi),%ecx
test   %eax,%eax
lea    -0x1(%eax),%ebx
jne    804d732 <fchmod@plt+0x3e52>
jmp    804d758 <fchmod@plt+0x3e78>
xchg   %ax,%ax
sub    $0x1,%ebx
add    $0x18,%ecx
movl   $0x0,-0x10(%ecx)
cmp    $0xffffffff,%ebx
je     804d758 <fchmod@plt+0x3e78>
mov    (%ecx),%eax
test   %eax,%eax
je     804d720 <fchmod@plt+0x3e40>
cmpl   $0x2,(%eax)
jne    804d720 <fchmod@plt+0x3e40>
mov    0x4(%eax),%eax
test   %eax,%eax
jne    804d720 <fchmod@plt+0x3e40>
sub    $0x1,%ebx
add    $0x18,%ecx
movl   $0x1,-0x10(%ecx)
cmp    $0xffffffff,%ebx
jne    804d732 <fchmod@plt+0x3e52>
xchg   %ax,%ax
call   804c690 <fchmod@plt+0x2db0>
mov    0x805840c,%edx
test   %edx,%edx
je     804d76e <fchmod@plt+0x3e8e>
movb   $0x0,0x805852c
movzbl 0x8058411,%eax
mov    (%esi),%ecx
mov    %al,0xc(%esi)
jmp    804d6c8 <fchmod@plt+0x3de8>
nop
addl   $0x1,0x8(%esi)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x3c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
test   %ecx,%ecx
je     804d988 <fchmod@plt+0x40a8>
mov    0x805d508,%ecx
mov    0x80584f8,%edx
mov    0x80584fc,%eax
imul   %ebx,%ecx
sub    %edx,%eax
cmp    %ecx,%eax
jb     804d9d0 <fchmod@plt+0x40f0>
mov    0x8058504,%eax
test   %ebx,%ebx
mov    0x8058508,%edx
mov    %eax,0x24(%esp)
mov    %edx,0x28(%esp)
je     804d928 <fchmod@plt+0x4048>
lea    0x24(%esp),%ebp
jmp    804d883 <fchmod@plt+0x3fa3>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi),%eax
mov    %eax,(%esp)
call   80496f0 <btowc@plt>
mov    $0x1,%edx
mov    %eax,0x20(%esp)
add    %edx,%edi
sub    %edx,%ebx
test   $0xc,%esi
je     804d8cf <fchmod@plt+0x3fef>
test   $0x4,%esi
mov    %eax,(%esp)
je     804d948 <fchmod@plt+0x4068>
call   8049830 <towupper@plt>
and    $0xfffffff3,%esi
mov    %eax,0x20(%esp)
je     804d95a <fchmod@plt+0x407a>
cmpl   $0x1,0x805d508
je     804d8f4 <fchmod@plt+0x4014>
mov    %eax,0x4(%esp)
mov    0x80584f4,%eax
add    0x80584f8,%eax
movl   $0x8058504,0x8(%esp)
mov    %eax,(%esp)
call   80492d0 <wcrtomb@plt>
add    %eax,0x80584f8
add    $0x2,%eax
cmp    $0x1,%eax
jbe    804d9fe <fchmod@plt+0x411e>
test   %ebx,%ebx
je     804d928 <fchmod@plt+0x4048>
cmpl   $0x1,0x805d508
je     804d7f8 <fchmod@plt+0x3f18>
lea    0x20(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80494e0 <mbrtowc@plt>
cmp    $0xffffffff,%eax
je     804d9a8 <fchmod@plt+0x40c8>
test   %eax,%eax
jle    804d988 <fchmod@plt+0x40a8>
mov    %eax,%edx
mov    0x20(%esp),%eax
add    %edx,%edi
sub    %edx,%ebx
test   $0xc,%esi
jne    804d81c <fchmod@plt+0x3f3c>
test   $0x1,%esi
mov    %eax,(%esp)
je     804d998 <fchmod@plt+0x40b8>
call   8049830 <towupper@plt>
cmpl   $0x1,0x805d508
mov    %eax,0x20(%esp)
jne    804d84a <fchmod@plt+0x3f6a>
mov    0x80584f4,%edx
add    0x80584f8,%edx
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   8049650 <wctob@plt>
mov    0x1c(%esp),%edx
mov    %al,(%edx)
addl   $0x1,0x80584f8
test   %ebx,%ebx
jne    804d883 <fchmod@plt+0x3fa3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    804da28 <fchmod@plt+0x4148>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049380 <towlower@plt>
and    $0xfffffff3,%esi
mov    %eax,0x20(%esp)
jne    804d83d <fchmod@plt+0x3f5d>
cmpl   $0x1,0x805d508
je     804d9e1 <fchmod@plt+0x4101>
mov    %eax,0x4(%esp)
mov    0x80584f4,%eax
add    0x80584f8,%eax
movl   $0x8058504,0x8(%esp)
mov    %eax,(%esp)
call   80492d0 <wcrtomb@plt>
add    %eax,0x80584f8
mov    %ebx,%ecx
mov    %edi,%edx
mov    $0x80584f0,%eax
call   804cf70 <fchmod@plt+0x3690>
jmp    804d928 <fchmod@plt+0x4048>
call   8049380 <towlower@plt>
mov    %eax,0x20(%esp)
jmp    804d83d <fchmod@plt+0x3f5d>
xchg   %ax,%ax
movl   $0x0,0x8058504
00
mov    0x20(%esp),%eax
mov    $0x1,%edx
movl   $0x0,0x8058508
00
jmp    804d80c <fchmod@plt+0x3f2c>
lea    0x0(%esi),%esi
add    %ecx,%edx
mov    $0x80584f0,%eax
call   804c790 <fchmod@plt+0x2eb0>
jmp    804d7cf <fchmod@plt+0x3eef>
mov    0x80584f4,%esi
mov    %eax,(%esp)
add    0x80584f8,%esi
call   8049650 <wctob@plt>
mov    %al,(%esi)
mov    $0x1,%eax
jmp    804d982 <fchmod@plt+0x40a2>
mov    0x80583c0,%eax
movl   $0x2e,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x805452c,(%esp)
mov    %eax,0xc(%esp)
call   8049490 <fwrite@plt>
call   8049850 <abort@plt>
call   80493e0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x105c,%esp
mov    (%eax),%edi
mov    %eax,0x38(%esp)
mov    0x8(%eax),%eax
mov    %gs:0x14,%esi
mov    %esi,0x104c(%esp)
xor    %esi,%esi
mov    %edx,0x20(%esp)
lea    (%eax,%eax,2),%eax
lea    (%edi,%eax,8),%eax
cmp    %eax,%edi
mov    %eax,0x28(%esp)
jae    804dbb5 <fchmod@plt+0x42d5>
mov    %edi,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
test   %eax,%eax
je     804dc06 <fchmod@plt+0x4326>
mov    0x8(%ebp),%edx
cmp    $0x1,%edx
je     804dc10 <fchmod@plt+0x4330>
cmpl   $0x2,(%eax)
je     804dc40 <fchmod@plt+0x4360>
mov    0x4(%ebp),%ecx
mov    0x20(%esp),%edx
test   %ecx,%ecx
je     804e6e8 <fchmod@plt+0x4e08>
call   804d120 <fchmod@plt+0x3840>
test   %al,%al
je     804dc60 <fchmod@plt+0x4380>
mov    0x4(%ebp),%ecx
mov    (%ecx),%edx
movl   $0x1,0x8(%ebp)
cmp    $0x2,%edx
je     804dc90 <fchmod@plt+0x43b0>
jbe    804dc68 <fchmod@plt+0x4388>
cmp    $0x4,%edx
je     804dc78 <fchmod@plt+0x4398>
cmp    $0x5,%edx
jne    804dc15 <fchmod@plt+0x4335>
mov    0x20(%esp),%eax
xor    %edx,%edx
mov    0x8(%ecx),%esi
mov    0x8(%eax),%eax
lea    (%esi,%eax,1),%ebx
div    %esi
mov    $0x1,%eax
sub    %edx,%ebx
mov    %ebx,0x4(%ecx)
lea    0x0(%esi,%eiz,1),%esi
movsbl 0xc(%ebp),%edx
cmp    %eax,%edx
je     804dba8 <fchmod@plt+0x42c8>
movsbl 0xd(%ebp),%edx
lea    -0x23(%edx),%eax
cmp    $0x5a,%al
ja     804e690 <fchmod@plt+0x4db0>
movzbl %al,%eax
jmp    *0x8054578(,%eax,4)
lea    0x0(%esi),%esi
cmpb   $0x0,0x805852c
je     804db55 <fchmod@plt+0x4275>
mov    0x8058530,%eax
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80582dc,(%esp)
mov    %eax,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
movb   $0x0,0x805852c
mov    0x10(%ebp),%eax
mov    0x8058530,%ecx
cmp    $0xffffffff,%eax
cmove  0x80582d0,%eax
mov    %ecx,0xc(%esp)
mov    %eax,%edx
mov    0x8058510,%eax
mov    %edx,0x8(%esp)
mov    0x8058514,%edx
mov    %eax,(%esp)
add    %eax,%edx
mov    %edx,0x4(%esp)
call   804f9b0 <fchmod@plt+0x60d0>
mov    0x8058530,%eax
cmp    0x8058400,%eax
je     804df3e <fchmod@plt+0x465e>
mov    %eax,(%esp)
call   804ff60 <fchmod@plt+0x6680>
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%ebp
cmp    0x28(%esp),%ebp
jb     804da70 <fchmod@plt+0x4190>
cmpb   $0x0,0x8058412
jne    804dcba <fchmod@plt+0x43da>
mov    0x8058510,%eax
movzbl 0x805851c,%ecx
mov    0x8058514,%edx
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
mov    $0xffffffff,%eax
jmp    804dcbf <fchmod@plt+0x43df>
lea    0x0(%esi),%esi
mov    0x20(%esp),%edx
mov    %ecx,%eax
call   804d120 <fchmod@plt+0x3840>
test   %al,%al
je     804dc06 <fchmod@plt+0x4326>
movl   $0x2,0x8(%ebp)
mov    $0x1,%eax
jmp    804daf8 <fchmod@plt+0x4218>
mov    0x4(%ebp),%ecx
mov    (%ecx),%edx
cmp    $0x2,%edx
jne    804dbf0 <fchmod@plt+0x4310>
mov    0x20(%esp),%eax
mov    0x8(%eax),%edx
mov    0x4(%ecx),%eax
cmp    %eax,%edx
jb     804dc2f <fchmod@plt+0x434f>
movl   $0x2,0x8(%ebp)
cmp    %eax,%edx
setbe  %al
movzbl %al,%eax
jmp    804daf8 <fchmod@plt+0x4218>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     804eb38 <fchmod@plt+0x5258>
cmp    $0x2,%edx
je     804dc60 <fchmod@plt+0x4380>
mov    0x20(%esp),%edi
mov    0x4(%eax),%eax
cmp    %eax,0x8(%edi)
jae    804daaf <fchmod@plt+0x41cf>
xor    %eax,%eax
jmp    804daf8 <fchmod@plt+0x4218>
nop
cmp    $0x1,%edx
mov    $0x1,%eax
je     804daf8 <fchmod@plt+0x4218>
jmp    804dc15 <fchmod@plt+0x4335>
mov    0x20(%esp),%edi
mov    0x8(%ecx),%eax
add    0x8(%edi),%eax
mov    %eax,0x4(%ecx)
mov    $0x1,%eax
jmp    804daf8 <fchmod@plt+0x4218>
nop
mov    0x20(%esp),%eax
mov    0x4(%ecx),%esi
cmp    %esi,0x8(%eax)
jae    804dbff <fchmod@plt+0x431f>
mov    $0x1,%eax
jmp    804daf8 <fchmod@plt+0x4218>
lea    0x0(%esi),%esi
cmpl   $0x1,0x8(%ebp)
jne    804e766 <fchmod@plt+0x4e86>
mov    $0xffffffff,%eax
mov    0x104c(%esp),%edi
xor    %gs:0x14,%edi
jne    804ede4 <fchmod@plt+0x5504>
add    $0x105c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmpb   $0x0,0x8058538
je     804dba8 <fchmod@plt+0x42c8>
movb   $0x0,0x8058538
mov    0x10(%ebp),%eax
lea    (%eax,%eax,2),%edx
mov    0x38(%esp),%eax
mov    (%eax),%eax
lea    (%eax,%edx,8),%ebp
jmp    804dbab <fchmod@plt+0x42cb>
call   804c730 <fchmod@plt+0x2e50>
mov    0x10(%ebp),%edx
mov    %edx,0x4(%eax)
mov    0x14(%ebp),%edx
mov    %edx,0x8(%eax)
jmp    804dba8 <fchmod@plt+0x42c8>
xchg   %ax,%ax
mov    0x10(%ebp),%esi
test   %esi,%esi
je     804dba8 <fchmod@plt+0x42c8>
mov    0x8058510,%ebx
movsbl 0x80582dc,%eax
mov    0x8058514,%edi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %edi,0x8(%esp)
call   80496e0 <memchr@plt>
mov    $0x1,%ecx
mov    %eax,%edx
sub    %ebx,%edx
test   %eax,%eax
je     804ebff <fchmod@plt+0x531f>
mov    %esi,(%esp)
mov    %ebx,%eax
call   804d400 <fchmod@plt+0x3b20>
jmp    804dba8 <fchmod@plt+0x42c8>
xchg   %ax,%ax
cmpb   $0x0,0x8058538
je     804dcf4 <fchmod@plt+0x4414>
movb   $0x0,0x8058538
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebp),%eax
test   %eax,%eax
je     804dba8 <fchmod@plt+0x42c8>
testb  $0x10,(%eax)
jne    804dba8 <fchmod@plt+0x42c8>
mov    %eax,0xc(%esp)
movsbl 0x80582dc,%eax
movl   $0x0,0x48(%esp)
mov    %eax,0x8(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   804fec0 <fchmod@plt+0x65e0>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
je     804dba8 <fchmod@plt+0x42c8>
call   804c730 <fchmod@plt+0x2e50>
mov    0x48(%esp),%edx
movb   $0x1,0x10(%eax)
mov    %edx,0x4(%eax)
mov    %ebx,0x8(%eax)
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi),%esi
mov    %ebp,%edi
mov    0x10(%edi),%eax
mov    $0x0,%edx
cmp    $0xffffffff,%eax
cmove  %edx,%eax
jmp    804dcbf <fchmod@plt+0x43df>
lea    0x0(%esi),%esi
mov    0x8058510,%ebx
movsbl 0x80582dc,%eax
mov    0x8058514,%esi
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,0x8(%esp)
call   80496e0 <memchr@plt>
mov    $0x1,%ecx
mov    %eax,%edx
sub    %ebx,%edx
test   %eax,%eax
je     804ebac <fchmod@plt+0x52cc>
movl   $0x8058528,(%esp)
mov    %ebx,%eax
call   804d400 <fchmod@plt+0x3b20>
jmp    804dba8 <fchmod@plt+0x42c8>
nop
mov    $0x805850c,%eax
mov    $0x1,%ecx
mov    $0x80582dc,%edx
call   804cf70 <fchmod@plt+0x3690>
mov    0x80584c0,%eax
test   %eax,%eax
je     804e8e6 <fchmod@plt+0x5006>
mov    0x38(%esp),%edx
mov    $0x1,%ecx
mov    0x20(%esp),%eax
call   804d690 <fchmod@plt+0x3db0>
test   %al,%al
jne    804dba8 <fchmod@plt+0x42c8>
mov    0x8058514,%eax
mov    0x805d4f0,%edi
lea    -0x1(%eax),%edx
test   %edi,%edi
mov    %edx,0x8058514
jne    804dcba <fchmod@plt+0x43da>
cmpb   $0x0,0x8058412
jne    804dcba <fchmod@plt+0x43da>
mov    0x8058510,%eax
movzbl 0x805851c,%ecx
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
mov    $0xffffffff,%eax
jmp    804dcbf <fchmod@plt+0x43df>
xchg   %ax,%ax
mov    $0x80584d4,%edx
mov    $0x805850c,%eax
call   804d1f0 <fchmod@plt+0x3910>
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x805852c
jne    804e8b5 <fchmod@plt+0x4fd5>
mov    0x20(%esp),%eax
mov    0x8(%eax),%eax
movl   $0x80543f0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x8058530,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   80497d0 <__fprintf_chk@plt>
mov    0x8058530,%eax
cmp    0x8058400,%eax
jne    804db9c <fchmod@plt+0x42bc>
cmpb   $0x0,0x8058413
jne    804db9c <fchmod@plt+0x42bc>
jmp    804dba8 <fchmod@plt+0x42c8>
cmpb   $0x0,0x805852c
jne    804e884 <fchmod@plt+0x4fa4>
mov    0x20(%esp),%eax
mov    0x18(%eax),%eax
movl   $0x8054cac,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    804df18 <fchmod@plt+0x4638>
lea    0x0(%esi),%esi
mov    $0x805850c,%edx
mov    $0x80584d4,%eax
call   804d1f0 <fchmod@plt+0x3910>
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi,%eiz,1),%esi
movsbl 0x80582dc,%eax
mov    0x8058514,%ebx
mov    0x8058510,%esi
mov    %eax,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
call   80496e0 <memchr@plt>
test   %eax,%eax
je     804dcba <fchmod@plt+0x43da>
add    $0x1,%eax
sub    %eax,%esi
mov    %eax,0x8058510
mov    0x38(%esp),%eax
add    %esi,0x8058518
add    %ebx,%esi
mov    %esi,0x8058514
mov    (%eax),%ebp
jmp    804dbab <fchmod@plt+0x42cb>
xchg   %ax,%ax
movl   $0x0,0x8058514
00
jmp    804dba8 <fchmod@plt+0x42c8>
nop
mov    0x805d508,%edx
cmp    $0x1,%edx
jle    804e7ba <fchmod@plt+0x4eda>
mov    0x8058514,%eax
movl   $0x0,0x4c(%esp)
movl   $0x0,0x50(%esp)
movl   $0x0,0x2c(%esp)
test   %eax,%eax
movl   $0x0,0x30(%esp)
je     804dba8 <fchmod@plt+0x42c8>
mov    %ebp,0x3c(%esp)
cmp    $0x1,%edx
mov    $0x1,%ebx
je     804e070 <fchmod@plt+0x4790>
mov    0x2c(%esp),%edi
lea    0x4c(%esp),%esi
mov    %esi,0xc(%esp)
movl   $0x0,(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
mov    0x8058510,%eax
add    %edi,%eax
mov    %eax,0x4(%esp)
call   80494e0 <mbrtowc@plt>
lea    0x2(%eax),%edx
cmp    $0x1,%edx
jbe    804e070 <fchmod@plt+0x4790>
test   %eax,%eax
cmovne %eax,%ebx
mov    0x3c(%esp),%eax
mov    0x10(%eax),%esi
mov    (%esi),%eax
test   %eax,%eax
je     804e161 <fchmod@plt+0x4881>
mov    0x8058510,%edi
mov    $0x8,%ebp
movl   $0x0,0x24(%esp)
mov    %edi,0x34(%esp)
add    0x2c(%esp),%edi
jmp    804e0b4 <fchmod@plt+0x47d4>
xchg   %ax,%ax
mov    (%esi,%ebp,1),%eax
lea    0x8(%ebp),%ecx
test   %eax,%eax
je     804e161 <fchmod@plt+0x4881>
mov    %ebp,0x24(%esp)
mov    %ecx,%ebp
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8049800 <strncmp@plt>
test   %eax,%eax
jne    804e0a0 <fchmod@plt+0x47c0>
mov    0x24(%esp),%eax
lea    0x4(%esi,%eax,1),%ebp
mov    0x0(%ebp),%edx
mov    %edx,(%esp)
mov    %edx,0x24(%esp)
call   8049620 <strlen@plt>
mov    0x24(%esp),%edx
cmp    %eax,%ebx
mov    %eax,%esi
jge    804eac8 <fchmod@plt+0x51e8>
mov    0x8058514,%ecx
lea    0x1(%ecx,%eax,1),%edx
sub    %ebx,%edx
cmp    0x8058518,%edx
ja     804eb8e <fchmod@plt+0x52ae>
mov    0x2c(%esp),%edx
mov    $0x1,%eax
mov    %esi,%edi
sub    %ebx,%edi
sub    %edx,%eax
sub    %ebx,%eax
add    %ecx,%eax
mov    %edx,%ecx
mov    %eax,0x8(%esp)
mov    %edx,%eax
mov    0x34(%esp),%edx
add    %ebx,%eax
add    %edx,%eax
mov    %eax,0x4(%esp)
mov    %ecx,%eax
add    %esi,%eax
add    %edx,%eax
mov    %eax,(%esp)
call   8049330 <memmove@plt>
mov    0x0(%ebp),%edx
add    %edi,0x8058514
add    %edi,0x30(%esp)
mov    0x2c(%esp),%edi
add    0x8058510,%edi
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8049700 <strncpy@plt>
add    %ebx,0x30(%esp)
mov    0x30(%esp),%esi
mov    0x8058514,%eax
mov    %esi,0x2c(%esp)
cmp    %eax,%esi
jae    804eb5e <fchmod@plt+0x527e>
mov    0x805d508,%edx
jmp    804e030 <fchmod@plt+0x4750>
lea    0x0(%esi),%esi
mov    0x80584d4,%edi
mov    0x805850c,%esi
mov    0x8058510,%ebx
mov    0x8058514,%ecx
mov    %edi,0x805850c
mov    0x80584d8,%edi
mov    0x8058518,%edx
mov    0x805851c,%eax
mov    %esi,0x4c(%esp)
mov    %edi,0x8058510
mov    0x80584dc,%edi
mov    %ebx,0x50(%esp)
mov    %ecx,0x54(%esp)
mov    %edx,0x58(%esp)
mov    %edi,0x8058514
mov    0x80584e0,%edi
mov    %eax,0x5c(%esp)
mov    %esi,0x80584d4
mov    %ebx,0x80584d8
mov    %edi,0x8058518
mov    0x80584e4,%edi
mov    %ecx,0x80584dc
mov    %edx,0x80584e0
mov    %eax,0x80584e4
mov    %edi,0x805851c
jmp    804dba8 <fchmod@plt+0x42c8>
nop
mov    0x10(%ebp),%eax
test   %eax,%eax
je     804dba8 <fchmod@plt+0x42c8>
mov    %eax,(%esp)
movzbl 0x805851c,%ecx
mov    0x8058514,%edx
mov    0x8058510,%eax
call   804d400 <fchmod@plt+0x3b20>
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi),%esi
mov    0x10(%ebp),%eax
mov    %eax,%esi
mov    %eax,0x30(%esp)
mov    $0x805850c,%eax
call   804d2c0 <fchmod@plt+0x39e0>
movzbl 0x10(%esi),%eax
movl   $0x805849c,0x10(%esp)
movl   $0x0,0xc(%esp)
shr    $0x4,%al
movzbl %al,%eax
add    $0x1,%eax
mov    %eax,0x14(%esp)
mov    0x8058514,%eax
mov    %eax,0x8(%esp)
mov    0x8058510,%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804f180 <fchmod@plt+0x58a0>
test   %eax,%eax
je     804dba8 <fchmod@plt+0x42c8>
mov    0x4(%esi),%ebx
test   %ebx,%ebx
je     804ed24 <fchmod@plt+0x5444>
mov    0x80584a0,%eax
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x80584a4,%eax
mov    (%eax),%eax
movl   $0x0,0x34(%esp)
xor    %esi,%esi
xor    %ebx,%ebx
mov    %ebp,0x3c(%esp)
jmp    804e387 <fchmod@plt+0x4aa7>
lea    0x0(%esi),%esi
mov    0x34(%esp),%edx
test   %edx,%edx
je     804e3a5 <fchmod@plt+0x4ac5>
cmp    %esi,0x2c(%esp)
ja     804e3a5 <fchmod@plt+0x4ac5>
cmp    0x8058514,%ebx
jae    804ed1b <fchmod@plt+0x543b>
movl   $0x1,0x24(%esp)
mov    0x24(%esp),%esi
mov    $0x80584f0,%eax
mov    0x2c(%esp),%ebx
mov    0x8058510,%edx
mov    %esi,%ecx
add    %ebx,%edx
add    %esi,%ebx
call   804cf70 <fchmod@plt+0x3690>
mov    0x80584a4,%eax
mov    (%eax),%esi
mov    0x8058514,%edx
cmp    %ebx,%edx
jb     804ebc5 <fchmod@plt+0x52e5>
mov    0x30(%esp),%edi
movzbl 0x10(%edi),%eax
movl   $0x805849c,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x8(%esp)
shr    $0x4,%al
movzbl %al,%eax
add    $0x1,%eax
mov    %eax,0x14(%esp)
mov    0x8058510,%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   804f180 <fchmod@plt+0x58a0>
test   %eax,%eax
je     804e9c5 <fchmod@plt+0x50e5>
mov    0x80584a0,%eax
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x80584a4,%eax
mov    (%eax),%eax
mov    0x2c(%esp),%edi
sub    %edi,%eax
cmp    %ebx,%edi
mov    %eax,0x24(%esp)
ja     804e900 <fchmod@plt+0x5020>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
je     804e2d8 <fchmod@plt+0x49f8>
mov    0x30(%esp),%eax
addl   $0x1,0x34(%esp)
mov    0x34(%esp),%esi
cmp    0x8(%eax),%esi
jae    804e920 <fchmod@plt+0x5040>
mov    0x24(%esp),%eax
test   %eax,%eax
je     804e2ee <fchmod@plt+0x4a0e>
jmp    804e302 <fchmod@plt+0x4a22>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebp),%esi
test   %esi,%esi
je     804dba8 <fchmod@plt+0x42c8>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804c730 <fchmod@plt+0x2e50>
mov    0x10(%ebp),%edx
mov    %edx,(%eax)
jmp    804dba8 <fchmod@plt+0x42c8>
nop
cmpb   $0x0,0x8058412
mov    %ebp,%edi
je     804e81e <fchmod@plt+0x4f3e>
call   804d4e0 <fchmod@plt+0x3c00>
jmp    804ddfa <fchmod@plt+0x451a>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x805851c,%ecx
mov    0x8058514,%edx
mov    0x8058510,%eax
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
jmp    804dba8 <fchmod@plt+0x42c8>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x8058412
je     804e7fb <fchmod@plt+0x4f1b>
mov    0x80584c0,%eax
test   %eax,%eax
je     804e841 <fchmod@plt+0x4f61>
mov    0x38(%esp),%edx
xor    %ecx,%ecx
mov    0x20(%esp),%eax
call   804d690 <fchmod@plt+0x3db0>
test   %al,%al
jne    804dba8 <fchmod@plt+0x42c8>
jmp    804dcba <fchmod@plt+0x43da>
xchg   %ax,%ax
mov    0x10(%ebp),%eax
mov    0x8058510,%ebx
mov    0x8058514,%esi
cmp    $0xffffffff,%eax
cmove  0x80582d0,%eax
cmpb   $0x0,0x805852c
mov    %eax,0x24(%esp)
mov    0x8058530,%eax
mov    %eax,0x2c(%esp)
jne    804e858 <fchmod@plt+0x4f78>
mov    %esi,%eax
xor    %esi,%esi
test   %eax,%eax
je     804e6ac <fchmod@plt+0x4dcc>
mov    %ebp,0x34(%esp)
mov    %eax,%edi
jmp    804e558 <fchmod@plt+0x4c78>
lea    0x0(%esi),%esi
mov    %edx,0x30(%esp)
call   80498b0 <__ctype_b_loc@plt>
mov    0x30(%esp),%edx
mov    (%eax),%eax
testb  $0x40,0x1(%eax,%ebp,2)
je     804e56a <fchmod@plt+0x4c8a>
mov    %dl,0x4c(%esp)
lea    0x4d(%esp),%ebp
cmpb   $0x5c,(%ebx)
je     804eb50 <fchmod@plt+0x5270>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x4c(%esp),%eax
sub    %eax,%ebp
add    %ebp,%esi
cmp    0x24(%esp),%esi
jb     804e52c <fchmod@plt+0x4c4c>
mov    0x24(%esp),%eax
test   %eax,%eax
jle    804e52c <fchmod@plt+0x4c4c>
mov    0x2c(%esp),%eax
mov    %ebp,%esi
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80543ed,(%esp)
mov    %eax,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
mov    0x2c(%esp),%eax
add    $0x1,%ebx
mov    %ebp,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804fd80 <fchmod@plt+0x64a0>
sub    $0x1,%edi
je     804e6a8 <fchmod@plt+0x4dc8>
movzbl (%ebx),%edx
movzbl %dl,%ebp
test   $0x80,%ebp
je     804e4c0 <fchmod@plt+0x4be0>
movb   $0x5c,0x4c(%esp)
movzbl (%ebx),%edx
lea    -0x7(%edx),%eax
cmp    $0x6,%al
ja     804eae0 <fchmod@plt+0x5200>
movzbl %al,%eax
jmp    *0x80546e4(,%eax,4)
nop
mov    0x14(%ebp),%eax
mov    $0x1,%ecx
lea    -0x1(%eax),%edx
mov    0x10(%ebp),%eax
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
jmp    804dba8 <fchmod@plt+0x42c8>
nop
mov    $0x805850c,%edx
mov    $0x80584d4,%eax
call   804d230 <fchmod@plt+0x3950>
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%ebp),%esi
xor    %eax,%eax
call   804d2c0 <fchmod@plt+0x39e0>
test   %esi,%esi
je     804e78a <fchmod@plt+0x4eaa>
mov    0x10(%ebp),%eax
movb   $0x0,-0x1(%eax,%esi,1)
movl   $0x80537d8,0x4(%esp)
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   80493d0 <popen@plt>
cmpb   $0x0,0x805852c
mov    %eax,%ebx
jne    804ebce <fchmod@plt+0x52ee>
test   %ebx,%ebx
jne    804e630 <fchmod@plt+0x4d50>
jmp    804ed77 <fchmod@plt+0x5497>
lea    0x0(%esi),%esi
lea    0x4c(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x1000,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049500 <fread_unlocked@plt>
test   %eax,%eax
jg     804eb18 <fchmod@plt+0x5238>
testb  $0x10,(%ebx)
je     804e608 <fchmod@plt+0x4d28>
mov    %ebx,(%esp)
call   80495b0 <pclose@plt>
test   %esi,%esi
jne    804db8b <fchmod@plt+0x42ab>
mov    0x80584f8,%eax
test   %eax,%eax
je     804e668 <fchmod@plt+0x4d88>
mov    0x80584f4,%edx
lea    -0x1(%eax),%ecx
movzbl 0x80582dc,%ebx
cmp    %bl,-0x1(%edx,%eax,1)
je     804ebba <fchmod@plt+0x52da>
mov    $0x80584f0,%eax
call   804d320 <fchmod@plt+0x3a40>
jmp    804dba8 <fchmod@plt+0x42c8>
nop
mov    $0x80584d4,%edx
mov    $0x805850c,%eax
call   804d230 <fchmod@plt+0x3950>
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x4(%esp)
movl   $0x80543f5,(%esp)
call   804fc50 <fchmod@plt+0x6370>
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi),%esi
mov    0x34(%esp),%ebp
mov    0x2c(%esp),%edi
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80543e5,(%esp)
mov    %edi,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
cmp    0x8058400,%edi
je     804e7e9 <fchmod@plt+0x4f09>
mov    0x2c(%esp),%eax
jmp    804db9c <fchmod@plt+0x42bc>
lea    0x0(%esi),%esi
call   804d120 <fchmod@plt+0x3840>
movzbl %al,%eax
jmp    804daf8 <fchmod@plt+0x4218>
lea    0x0(%esi),%esi
movb   $0x66,0x4d(%esp)
lea    0x4e(%esp),%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
xchg   %ax,%ax
movb   $0x76,0x4d(%esp)
lea    0x4e(%esp),%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
xchg   %ax,%ax
movb   $0x6e,0x4d(%esp)
lea    0x4e(%esp),%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
xchg   %ax,%ax
movb   $0x74,0x4d(%esp)
lea    0x4e(%esp),%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
xchg   %ax,%ax
movb   $0x62,0x4d(%esp)
lea    0x4e(%esp),%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
xchg   %ax,%ax
movb   $0x61,0x4d(%esp)
lea    0x4e(%esp),%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
xchg   %ax,%ax
movb   $0x72,0x4d(%esp)
lea    0x4e(%esp),%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
mov    0x14(%ebp),%eax
mov    $0x1,%ecx
lea    -0x1(%eax),%edx
mov    0x10(%ebp),%eax
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
mov    $0xffffffff,%eax
jmp    804dcbf <fchmod@plt+0x43df>
mov    $0x1,%ecx
mov    $0x80543e7,%edx
mov    $0x805850c,%eax
call   804cf70 <fchmod@plt+0x3690>
mov    0x8058510,%eax
movl   $0x80537d8,0x4(%esp)
mov    %eax,(%esp)
call   80493d0 <popen@plt>
mov    %eax,%ebx
jmp    804e5fc <fchmod@plt+0x4d1c>
mov    0x8058510,%eax
mov    0x8058514,%ebx
add    %eax,%ebx
cmp    %ebx,%eax
jae    804dba8 <fchmod@plt+0x42c8>
nop
movzbl (%eax),%edx
add    $0x1,%eax
mov    0x10(%ebp),%ecx
movzbl (%ecx,%edx,1),%edx
mov    %dl,-0x1(%eax)
cmp    %ebx,%eax
jne    804e7d0 <fchmod@plt+0x4ef0>
jmp    804dba8 <fchmod@plt+0x42c8>
cmpb   $0x0,0x8058413
jne    804e6dc <fchmod@plt+0x4dfc>
jmp    804dba8 <fchmod@plt+0x42c8>
movzbl 0x805851c,%ecx
mov    0x8058514,%edx
mov    0x8058510,%eax
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
jmp    804e445 <fchmod@plt+0x4b65>
movzbl 0x805851c,%ecx
mov    0x8058514,%edx
mov    0x8058510,%eax
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
jmp    804e3ff <fchmod@plt+0x4b1f>
mov    0x20(%esp),%eax
call   804d0b0 <fchmod@plt+0x37d0>
test   %al,%al
je     804e452 <fchmod@plt+0x4b72>
jmp    804dcba <fchmod@plt+0x43da>
nop
mov    %eax,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80582dc,(%esp)
call   804fd80 <fchmod@plt+0x64a0>
movb   $0x0,0x805852c
jmp    804e4a3 <fchmod@plt+0x4bc3>
mov    0x8058530,%eax
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80582dc,(%esp)
mov    %eax,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
movb   $0x0,0x805852c
jmp    804df5d <fchmod@plt+0x467d>
mov    0x8058530,%eax
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80582dc,(%esp)
mov    %eax,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
movb   $0x0,0x805852c
jmp    804df05 <fchmod@plt+0x4625>
mov    0x20(%esp),%eax
call   804d0b0 <fchmod@plt+0x37d0>
test   %al,%al
je     804de79 <fchmod@plt+0x4599>
jmp    804de93 <fchmod@plt+0x45b3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8058510,%edx
mov    %edi,%ecx
mov    $0x80584f0,%eax
sub    %ebx,%ecx
add    %ebx,%edx
call   804cf70 <fchmod@plt+0x3690>
jmp    804e399 <fchmod@plt+0x4ab9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%ebx
xor    %ebp,%ebp
movb   $0x1,0x8058538
test   %ebx,%ebx
jne    804e968 <fchmod@plt+0x5088>
jmp    804e9a8 <fchmod@plt+0x50c8>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
test   %edi,%edi
js     804e961 <fchmod@plt+0x5081>
mov    0x80584a4,%eax
mov    (%eax,%edi,4),%edx
mov    0x80584a0,%eax
mov    (%eax,%edi,4),%eax
cmp    %eax,%edx
je     804e990 <fchmod@plt+0x50b0>
sub    %eax,%edx
mov    %esi,%ecx
add    0x8058510,%eax
call   804d790 <fchmod@plt+0x3eb0>
mov    0x10(%ebx),%ebx
test   %ebx,%ebx
je     804e9a8 <fchmod@plt+0x50c8>
mov    0xc(%ebx),%esi
mov    0x4(%ebx),%edx
mov    0x8(%ebx),%edi
or     %esi,%ebp
test   $0xc,%esi
cmove  %ebp,%esi
test   %edx,%edx
je     804e938 <fchmod@plt+0x5058>
mov    (%ebx),%eax
mov    %esi,%ecx
and    $0xfffffff3,%esi
call   804d790 <fchmod@plt+0x3eb0>
jmp    804e938 <fchmod@plt+0x5058>
xchg   %ax,%ax
and    $0xc,%esi
testb  $0xc,0xc(%ebx)
mov    0x10(%ebx),%ebx
cmovne %esi,%ebp
test   %ebx,%ebx
jne    804e968 <fchmod@plt+0x5088>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80584a4,%eax
mov    0x2c(%esp),%ebx
add    0x24(%esp),%ebx
mov    (%eax),%esi
mov    0x30(%esp),%eax
testb  $0x1,0x10(%eax)
jne    804e327 <fchmod@plt+0x4a47>
mov    0x3c(%esp),%ebp
mov    0x8058514,%edx
cmp    %edx,%ebx
jae    804e9e9 <fchmod@plt+0x5109>
mov    %edx,%ecx
mov    $0x80584f0,%eax
sub    %ebx,%ecx
add    0x8058510,%ebx
mov    %ebx,%edx
call   804cf70 <fchmod@plt+0x3690>
mov    0x80584f0,%edi
mov    0x805850c,%ecx
movzbl 0x805851c,%eax
mov    0x8058510,%ebx
mov    %edi,0x805850c
mov    0x80584f4,%edi
mov    0x8058514,%esi
mov    %al,0x8058500
mov    0x805851c,%eax
mov    0x8058518,%edx
mov    %edi,0x8058510
mov    0x80584f8,%edi
mov    %esi,0x54(%esp)
mov    %eax,0x5c(%esp)
mov    %esi,0x80584f8
mov    0x34(%esp),%esi
mov    %edi,0x8058514
mov    0x80584fc,%edi
mov    %ecx,0x4c(%esp)
mov    %ebx,0x50(%esp)
mov    %edx,0x58(%esp)
mov    %edi,0x8058518
mov    0x8058500,%edi
mov    %eax,0x8058500
mov    0x30(%esp),%eax
mov    %ecx,0x80584f0
mov    %ebx,0x80584f4
mov    %edi,0x805851c
mov    %edx,0x80584fc
cmp    0x8(%eax),%esi
jb     804dba8 <fchmod@plt+0x42c8>
movzbl 0x10(%eax),%eax
test   $0x2,%al
jne    804ecf0 <fchmod@plt+0x5410>
test   $0x8,%al
jne    804ec30 <fchmod@plt+0x5350>
shr    %al
test   $0x2,%al
jne    804ec0d <fchmod@plt+0x532d>
mov    0x30(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
jne    804e223 <fchmod@plt+0x4943>
jmp    804dba8 <fchmod@plt+0x42c8>
lea    0x0(%esi),%esi
jle    804e151 <fchmod@plt+0x4871>
mov    0x8058514,%ecx
jmp    804e105 <fchmod@plt+0x4825>
lea    0x0(%esi,%eiz,1),%esi
lea    0x4d(%esp),%ebp
mov    %edx,0x10(%esp)
mov    %ebp,(%esp)
movl   $0x80543e8,0xc(%esp)
movl   $0xb3,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80498d0 <__sprintf_chk@plt>
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
add    %eax,%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
nop
test   %esi,%esi
jne    804eb67 <fchmod@plt+0x5287>
mov    %eax,%ecx
mov    $0x80584f0,%eax
lea    0x4c(%esp),%edx
call   804cf70 <fchmod@plt+0x3690>
jmp    804e630 <fchmod@plt+0x4d50>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%edi
mov    0x4(%eax),%eax
cmp    %eax,0x8(%edi)
sete   %al
movzbl %al,%eax
jmp    804daf8 <fchmod@plt+0x4218>
lea    0x0(%esi),%esi
movb   $0x5c,0x4d(%esp)
lea    0x4e(%esp),%ebp
jmp    804e4f0 <fchmod@plt+0x4c10>
mov    0x3c(%esp),%ebp
jmp    804dba8 <fchmod@plt+0x42c8>
mov    0x8058530,%edx
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
jmp    804e630 <fchmod@plt+0x4d50>
mov    $0x805850c,%eax
call   804c790 <fchmod@plt+0x2eb0>
mov    0x8058510,%eax
mov    0x8058514,%ecx
mov    %eax,0x34(%esp)
jmp    804e105 <fchmod@plt+0x4825>
movzbl 0x805851c,%ecx
mov    %esi,%edx
jmp    804de44 <fchmod@plt+0x4564>
mov    %ecx,0x80584f8
jmp    804e668 <fchmod@plt+0x4d88>
mov    0x3c(%esp),%ebp
jmp    804e9cf <fchmod@plt+0x50ef>
mov    0x8058530,%eax
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x80582dc,(%esp)
mov    %eax,0xc(%esp)
call   804fd80 <fchmod@plt+0x64a0>
movb   $0x0,0x805852c
jmp    804e5fc <fchmod@plt+0x4d1c>
movzbl 0x805851c,%ecx
mov    %edi,%edx
jmp    804dd5f <fchmod@plt+0x447f>
movzbl 0x805851c,%ecx
mov    0x8058514,%edx
mov    0x8058510,%eax
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
jmp    804eaae <fchmod@plt+0x51ce>
xor    %eax,%eax
call   804d2c0 <fchmod@plt+0x39e0>
mov    $0x1,%ecx
mov    $0x80543e7,%edx
mov    $0x805850c,%eax
call   804cf70 <fchmod@plt+0x3690>
mov    0x8058510,%eax
movl   $0x80537d8,0x4(%esp)
mov    %eax,(%esp)
call   80493d0 <popen@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804ede9 <fchmod@plt+0x5509>
lea    0x0(%esi),%esi
testb  $0x10,(%ebx)
jne    804ecae <fchmod@plt+0x53ce>
lea    0x4c(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x1000,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8049500 <fread_unlocked@plt>
test   %eax,%eax
jle    804ec70 <fchmod@plt+0x5390>
mov    %eax,%ecx
mov    $0x80584f0,%eax
lea    0x4c(%esp),%edx
call   804cf70 <fchmod@plt+0x3690>
testb  $0x10,(%ebx)
je     804ec75 <fchmod@plt+0x5395>
mov    %ebx,(%esp)
call   80495b0 <pclose@plt>
mov    $0x80584f0,%eax
call   804d320 <fchmod@plt+0x3a40>
mov    0x8058514,%eax
test   %eax,%eax
je     804ece3 <fchmod@plt+0x5403>
mov    0x8058510,%ecx
lea    -0x1(%eax),%edx
movzbl 0x80582dc,%ebx
cmp    %bl,-0x1(%ecx,%eax,1)
je     804edd1 <fchmod@plt+0x54f1>
mov    0x30(%esp),%eax
movzbl 0x10(%eax),%eax
jmp    804eaa4 <fchmod@plt+0x51c4>
mov    0x8058510,%eax
movzbl 0x805851c,%ecx
mov    0x8058514,%edx
movl   $0x8058528,(%esp)
call   804d400 <fchmod@plt+0x3b20>
mov    0x30(%esp),%eax
movzbl 0x10(%eax),%eax
jmp    804ea9c <fchmod@plt+0x51bc>
mov    0x3c(%esp),%ebp
jmp    804e9e9 <fchmod@plt+0x5109>
mov    0x30(%esp),%eax
cmpl   $0x1,0x8(%eax)
ja     804e2ab <fchmod@plt+0x49cb>
mov    0x80584a0,%eax
mov    (%eax),%edx
test   %edx,%edx
jne    804eda0 <fchmod@plt+0x54c0>
mov    0x30(%esp),%eax
movzbl 0x10(%eax),%eax
test   $0x1,%al
jne    804eda0 <fchmod@plt+0x54c0>
mov    0x80584a4,%ecx
movb   $0x1,0x8058538
mov    (%ecx),%edx
sub    %edx,0x8058514
add    %edx,0x8058510
mov    0x8058518,%edx
sub    (%ecx),%edx
mov    %edx,0x8058518
jmp    804ea94 <fchmod@plt+0x51b4>
movl   $0x5,0x8(%esp)
movl   $0x80543d1,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
jmp    804dba8 <fchmod@plt+0x42c8>
mov    0x80584a4,%eax
mov    %edx,0x2c(%esp)
mov    (%eax),%eax
cmp    0x8058514,%eax
jne    804e2bd <fchmod@plt+0x49dd>
mov    0x30(%esp),%eax
movb   $0x1,0x8058538
mov    %edx,0x8058514
movzbl 0x10(%eax),%eax
jmp    804ea94 <fchmod@plt+0x51b4>
mov    0x30(%esp),%eax
mov    %edx,0x8058514
movzbl 0x10(%eax),%eax
jmp    804eaa4 <fchmod@plt+0x51c4>
call   80493e0 <__stack_chk_fail@plt>
movl   $0x5,0x8(%esp)
movl   $0x80543d1,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
jmp    804ece3 <fchmod@plt+0x5403>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0x32,%ecx
sub    $0xa4,%esp
mov    $0x805850c,%eax
mov    0xb4(%esp),%ebx
mov    0xb0(%esp),%esi
call   804cf10 <fchmod@plt+0x3630>
xor    %ecx,%ecx
xor    %edx,%edx
mov    $0x80584d4,%eax
call   804cf10 <fchmod@plt+0x3630>
xor    %ecx,%ecx
xor    %edx,%edx
mov    $0x80584b8,%eax
call   804cf10 <fchmod@plt+0x3630>
test   %ebx,%ebx
movb   $0x1,0x28(%esp)
je     804eee8 <fchmod@plt+0x5608>
mov    (%ebx),%ecx
test   %ecx,%ecx
je     804eee8 <fchmod@plt+0x5608>
mov    %ebx,0x1c(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
movl   $0x804c720,0x2c(%esp)
movl   $0x0,0x98(%esp)
00
jmp    804eeb2 <fchmod@plt+0x55d2>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x1c(%esp),%edx
mov    %esi,%eax
call   804da30 <fchmod@plt+0x4150>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    804eec5 <fchmod@plt+0x55e5>
xor    %ecx,%ecx
mov    %esi,%edx
lea    0x1c(%esp),%eax
call   804d690 <fchmod@plt+0x3db0>
test   %al,%al
jne    804eea0 <fchmod@plt+0x55c0>
xor    %ebx,%ebx
lea    0x1c(%esp),%eax
call   804cc90 <fchmod@plt+0x33b0>
mov    0x20(%esp),%eax
test   %eax,%eax
mov    $0x2,%eax
cmovne %eax,%ebx
add    $0xa4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
mov    0x805840c,%edx
test   %edx,%edx
je     804ef1b <fchmod@plt+0x563b>
movl   $0x5,0x8(%esp)
movl   $0x8054410,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
jmp    804ee76 <fchmod@plt+0x5596>
movl   $0x8058354,0x1c(%esp)
jmp    804ee76 <fchmod@plt+0x5596>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0xfc,%esp
mov    0x8058414,%edx
mov    %gs:0x14,%eax
mov    %eax,0xec(%esp)
xor    %eax,%eax
mov    0x805d4f0,%ecx
and    $0x1,%edx
cmp    $0x1,%edx
sbb    %eax,%eax
and    $0xfd4fca,%eax
add    $0x7b27c,%eax
cmp    $0x1,%edx
sbb    %edx,%edx
and    $0xfd4fca,%edx
add    $0x3b27c,%edx
cmp    $0x1,%ecx
je     804f058 <fchmod@plt+0x5778>
jb     804f048 <fchmod@plt+0x5768>
or     $0xe0400,%edx
cmp    $0x2,%ecx
cmove  %edx,%eax
mov    0x20(%ebx),%ebp
movl   $0x100,(%esp)
mov    %ebp,%esi
shl    $0x15,%esi
and    $0x400000,%esi
or     %eax,%esi
cmp    $0x1,%edi
sbb    %eax,%eax
and    $0x2000000,%eax
or     %eax,%esi
call   8049540 <malloc@plt>
and    $0x4,%ebp
mov    %eax,0x10(%ebx)
je     804efd0 <fchmod@plt+0x56f0>
and    $0xffffffbf,%esi
or     $0x100,%esi
mov    %esi,(%esp)
call   80497f0 <re_set_syntax@plt>
mov    %ebx,0x8(%esp)
mov    0x24(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x28(%ebx),%eax
mov    %eax,(%esp)
call   80497c0 <re_compile_pattern@plt>
mov    0x20(%ebx),%edx
movl   $0x0,0x14(%ebx)
shr    $0x2,%edx
mov    %edx,%ecx
movzbl 0x1c(%ebx),%edx
shl    $0x7,%ecx
and    $0x7f,%edx
or     %ecx,%edx
test   %eax,%eax
mov    %dl,0x1c(%ebx)
je     804f018 <fchmod@plt+0x5738>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
test   %edi,%edi
je     804f02d <fchmod@plt+0x574d>
sub    $0x1,%edi
cmp    %edi,0x18(%ebx)
jae    804f02d <fchmod@plt+0x574d>
mov    0x805d4f0,%eax
test   %eax,%eax
je     804f068 <fchmod@plt+0x5788>
mov    0xec(%esp),%eax
xor    %gs:0x14,%eax
jne    804f0b5 <fchmod@plt+0x57d5>
add    $0xfc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
and    $0xfffdffff,%eax
jmp    804ef97 <fchmod@plt+0x56b7>
lea    0x0(%esi),%esi
mov    %edx,%eax
or     $0x60000,%eax
jmp    804ef97 <fchmod@plt+0x56b7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
lea    0x24(%esp),%ebx
movl   $0x8054700,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %edi,0x10(%esp)
movl   $0xc8,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   80498d0 <__sprintf_chk@plt>
mov    %ebx,(%esp)
call   804a790 <fchmod@plt+0xeb0>
jmp    804f02d <fchmod@plt+0x574d>
call   80493e0 <__stack_chk_fail@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8050830 <fchmod@plt+0x6f50>
test   %eax,%eax
jne    804f110 <fchmod@plt+0x5830>
mov    0x24(%esp),%eax
xor    %ebx,%ebx
test   %eax,%eax
jle    804f104 <fchmod@plt+0x5824>
movl   $0x5,0x8(%esp)
movl   $0x805475f,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8050830 <fchmod@plt+0x6f50>
mov    %eax,%edi
lea    0x2b(%eax),%eax
mov    %eax,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    %eax,%esi
mov    0x24(%esp),%eax
mov    %eax,0x20(%esi)
mov    %ebx,(%esp)
lea    0x28(%esi),%ebx
call   8050820 <fchmod@plt+0x6f40>
mov    %edi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049350 <memcpy@plt>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
mov    %esi,%ebx
movl   $0x2,0x8(%esp)
call   804ada0 <fchmod@plt+0x14c0>
mov    0x28(%esp),%edx
mov    %eax,0x24(%esi)
mov    %esi,%eax
call   804ef30 <fchmod@plt+0x5650>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
mov    0x38(%esp),%esi
mov    0x3c(%esp),%edi
mov    0x44(%esp),%edx
test   %ebx,%ebx
je     804f220 <fchmod@plt+0x5940>
mov    %ebx,0x805853c
movzbl 0x1c(%ebx),%eax
test   $0x10,%al
je     804f1c0 <fchmod@plt+0x58e0>
test   %edx,%edx
jne    804f208 <fchmod@plt+0x5928>
and    $0xfffffff9,%eax
or     $0x2,%eax
mov    %al,0x1c(%ebx)
xor    %eax,%eax
jmp    804f1d1 <fchmod@plt+0x58f1>
lea    0x0(%esi),%esi
and    $0xfffffff9,%eax
or     $0x2,%eax
test   %edx,%edx
mov    %al,0x1c(%ebx)
je     804f1b9 <fchmod@plt+0x58d9>
mov    0x40(%esp),%eax
mov    %eax,0x14(%esp)
mov    %esi,%eax
sub    %edi,%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8049680 <re_search@plt>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
not    %eax
shr    $0x1f,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
call   804ef30 <fchmod@plt+0x5650>
movzbl 0x1c(%ebx),%eax
and    $0xfffffff9,%eax
or     $0x2,%eax
mov    %al,0x1c(%ebx)
jmp    804f1cd <fchmod@plt+0x58ed>
xchg   %ax,%ax
mov    0x805853c,%ebx
test   %ebx,%ebx
jne    804f1a4 <fchmod@plt+0x58c4>
movl   $0x5,0x8(%esp)
movl   $0x8054740,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x1c(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,(%esp)
call   804a790 <fchmod@plt+0xeb0>
mov    0x1c(%esp),%edx
jmp    804f1a4 <fchmod@plt+0x58c4>
nop
push   %ebx
mov    0x805d384,%edx
mov    0x805d394,%ecx
mov    0x805d390,%ebx
cmp    $0x20,%eax
je     804f2a8 <fchmod@plt+0x59c8>
cmp    $0x9,%eax
jne    804f2b8 <fchmod@plt+0x59d8>
test   %edx,%edx
lea    0x7(%edx),%eax
cmovs  %eax,%edx
sar    $0x3,%edx
cmp    %ebx,%ecx
lea    0x8(,%edx,8),%edx
jne    804f2af <fchmod@plt+0x59cf>
mov    $0xffffffff,%eax
mov    %edx,0x805d384
mov    %ecx,0x805d394
pop    %ebx
ret
xchg   %ax,%ax
add    $0x1,%edx
cmp    %ebx,%ecx
je     804f293 <fchmod@plt+0x59b3>
movsbl (%ecx),%eax
add    $0x1,%ecx
jmp    804f273 <fchmod@plt+0x5993>
nop
mov    %edx,0x805d384
mov    %ecx,0x805d394
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8058550,%esi
movzwl 0x4(%esi),%eax
movl   $0x0,0xc(%esi)
mov    %ax,0x2a(%esp)
mov    0x805d398,%eax
mov    %eax,0x8(%esp)
mov    %ax,0x4(%esi)
lea    -0x14(%esi),%eax
cmp    $0x8058560,%eax
mov    %eax,0x20(%esp)
jb     804f461 <fchmod@plt+0x5b81>
mov    0x805854c,%eax
mov    0x20(%esp),%ecx
movl   $0xffffffec,0x24(%esp)
sub    %ecx,0x24(%esp)
mov    %eax,0x18(%esp)
mov    0x8058548,%eax
mov    %eax,0x1c(%esp)
mov    0x805d388,%eax
mov    %eax,0xc(%esp)
mov    0x8058540,%eax
mov    %eax,0x10(%esp)
mov    %ecx,%eax
neg    %eax
mov    %eax,0x4(%esp)
movswl 0x4(%ecx),%eax
cmp    $0x8058560,%ecx
mov    $0x7fffffff,%ebx
mov    0x18(%esp),%edx
cmovne 0x1c(%esp),%edx
mov    %ebx,(%esp)
mov    %eax,0x14(%esp)
add    %eax,%edx
mov    %ecx,%eax
jmp    804f3c7 <fchmod@plt+0x5ae7>
lea    0x0(%esi),%esi
mov    0xc(%esp),%ebp
sub    %edx,%ebp
imul   %ebp,%ebp
imul   $0x64,%ebp,%ebp
cmp    0x10(%eax),%esi
je     804f3f8 <fchmod@plt+0x5b18>
movswl 0xa(%eax),%edi
mov    %edx,%ebx
sub    %edi,%ebx
mov    %ebx,%edi
imul   %ebx,%edi
imul   $0x32,%edi,%edi
add    %ebp,%edi
add    0xc(%eax),%edi
cmp    $0x8058560,%ecx
je     804f3e0 <fchmod@plt+0x5b00>
cmp    (%esp),%edi
jge    804f3ad <fchmod@plt+0x5acd>
mov    %eax,0x10(%ecx)
mov    %dx,0xa(%ecx)
mov    %edi,(%esp)
mov    0x4(%esp),%ebx
lea    (%eax,%ebx,1),%edi
movswl -0xe(%ecx,%edi,1),%ebp
movswl 0x4(%eax),%edi
add    %ebp,%edi
add    %edi,%edx
cmp    %edx,0x8(%esp)
jle    804f400 <fchmod@plt+0x5b20>
add    $0x14,%eax
cmp    %eax,%esi
jne    804f370 <fchmod@plt+0x5a90>
xor    %edi,%edi
add    0xc(%eax),%edi
cmp    $0x8058560,%ecx
jne    804f39e <fchmod@plt+0x5abe>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%ebx
test   %ebx,%ebx
jle    804f39e <fchmod@plt+0x5abe>
mov    %edx,%ebp
sub    %ebx,%ebp
imul   %ebp,%ebp
imul   $0x32,%ebp,%ebp
add    %ebp,%edi
jmp    804f39e <fchmod@plt+0x5abe>
xchg   %ax,%ax
mov    %ebp,%edi
jmp    804f393 <fchmod@plt+0x5ab3>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x8058560,%ecx
mov    (%esp),%ebx
mov    $0x1324,%ebp
jbe    804f42b <fchmod@plt+0x5b4b>
movzbl -0xc(%ecx),%eax
test   $0x2,%al
je     804f480 <fchmod@plt+0x5ba0>
and    $0x8,%eax
cmp    $0x1,%al
sbb    %ebp,%ebp
and    $0x58804,%ebp
add    $0x960,%ebp
movzbl 0x8(%ecx),%eax
test   $0x1,%al
jne    804f478 <fchmod@plt+0x5b98>
test   $0x8,%al
je     804f448 <fchmod@plt+0x5b68>
mov    0x14(%esp),%edi
mov    $0x57e4,%eax
cltd
add    $0x2,%edi
idiv   %edi
add    %eax,%ebp
add    %ebp,%ebx
sub    $0x14,%ecx
mov    %ebx,0x20(%ecx)
addl   $0x14,0x4(%esp)
cmp    $0x8058560,%ecx
jae    804f348 <fchmod@plt+0x5a68>
movzwl 0x2a(%esp),%eax
mov    %ax,0x4(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
sub    $0x640,%ebp
jmp    804f448 <fchmod@plt+0x5b68>
test   $0x4,%al
mov    $0xce4,%ebp
jne    804f42b <fchmod@plt+0x5b4b>
cmp    $0x8058574,%ecx
mov    $0x1324,%bp
jbe    804f42b <fchmod@plt+0x5b4b>
testb  $0x8,-0x20(%ecx)
je     804f42b <fchmod@plt+0x5b4b>
mov    0x24(%esp),%eax
mov    0x20(%esp),%edx
add    %ecx,%eax
movswl 0x4(%edx,%eax,1),%edi
mov    $0x9c40,%eax
cltd
add    $0x2,%edi
idiv   %edi
lea    0x1324(%eax),%ebp
jmp    804f42b <fchmod@plt+0x5b4b>
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
add    %eax,0x805d380
jmp    804f4ea <fchmod@plt+0x5c0a>
xchg   %ax,%ax
mov    0x805d38c,%edx
mov    0x14(%edx),%ecx
cmp    0x18(%edx),%ecx
jae    804f4f3 <fchmod@plt+0x5c13>
lea    0x1(%ecx),%eax
mov    %eax,0x14(%edx)
movb   $0x20,(%ecx)
sub    $0x1,%ebx
test   %ebx,%ebx
jne    804f4d0 <fchmod@plt+0x5bf0>
add    $0x18,%esp
pop    %ebx
ret
movl   $0x20,0x4(%esp)
mov    %edx,(%esp)
call   8049780 <__overflow@plt>
jmp    804f4e7 <fchmod@plt+0x5c07>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
movswl (%edx),%esi
test   %esi,%esi
je     804f552 <fchmod@plt+0x5c72>
mov    %eax,%edi
mov    0x805d38c,%ecx
movzbl (%edi),%eax
mov    0x14(%ecx),%ebx
cmp    0x18(%ecx),%ebx
jae    804f556 <fchmod@plt+0x5c76>
lea    0x1(%ebx),%ebp
mov    %ebp,0x14(%ecx)
mov    %al,(%ebx)
add    $0x1,%edi
sub    $0x1,%esi
jne    804f520 <fchmod@plt+0x5c40>
movswl (%edx),%eax
add    %eax,0x805d380
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    804f544 <fchmod@plt+0x5c64>
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
mov    %edx,0xc(%esp)
call   8049780 <__overflow@plt>
mov    0xc(%esp),%edx
jmp    804f539 <fchmod@plt+0x5c59>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    %edx,%eax
movl   $0x0,0x805d380
00
call   804f4c0 <fchmod@plt+0x5be0>
mov    0x10(%ebx),%eax
lea    -0x14(%eax),%esi
cmp    %esi,%ebx
je     804f5b2 <fchmod@plt+0x5cd2>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
lea    0x4(%ebx),%edx
add    $0x14,%ebx
call   804f510 <fchmod@plt+0x5c30>
movswl -0xe(%ebx),%eax
call   804f4c0 <fchmod@plt+0x5be0>
cmp    %ebx,%esi
jne    804f598 <fchmod@plt+0x5cb8>
mov    (%ebx),%eax
lea    0x4(%ebx),%edx
call   804f510 <fchmod@plt+0x5c30>
mov    0x805d380,%eax
mov    %eax,0x8058540
mov    0x805d38c,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804f5e2 <fchmod@plt+0x5d02>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049780 <__overflow@plt>
jmp    804f5dc <fchmod@plt+0x5cfc>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    $0x8058560,%eax
sub    $0x4,%esp
mov    0x805854c,%edx
call   804f570 <fchmod@plt+0x5c90>
mov    0x8058570,%ebx
cmp    %esi,%ebx
je     804f63c <fchmod@plt+0x5d5c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8058548,%edx
mov    %ebx,%eax
call   804f570 <fchmod@plt+0x5c90>
mov    0x10(%ebx),%ebx
cmp    %ebx,%esi
jne    804f628 <fchmod@plt+0x5d48>
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x8058550,%esi
call   80498b0 <__ctype_b_loc@plt>
mov    %eax,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    0x805d394,%ebx
mov    0x805d390,%ecx
lea    -0x1(%ebx),%eax
mov    %ebx,%edx
mov    %eax,0x14(%esp)
mov    %eax,(%esi)
mov    %ebx,%eax
jmp    804f6a7 <fchmod@plt+0x5dc7>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
movsbl -0x1(%eax),%edx
cmp    $0xffffffff,%edx
je     804f994 <fchmod@plt+0x60b4>
mov    (%edi),%ebp
testb  $0x20,0x1(%ebp,%edx,2)
jne    804f828 <fchmod@plt+0x5f48>
mov    %eax,%edx
cmp    %ecx,%eax
jne    804f688 <fchmod@plt+0x5da8>
mov    %edx,0x805d394
xor    %ecx,%ecx
movl   $0xffffffff,0x18(%esp)
mov    0x14(%esp),%edx
sub    %edx,%eax
sub    %ecx,%eax
mov    0x805d384,%ecx
mov    %ax,0x4(%esi)
cwtl
lea    -0x1(%edx,%eax,1),%ebp
add    %eax,%ecx
movsbl -0x1(%ebx),%eax
movl   $0x8054788,(%esp)
mov    %ecx,0x1c(%esp)
mov    %ecx,0x805d384
mov    %eax,0x4(%esp)
call   8049600 <strchr@plt>
mov    0x14(%esp),%ebx
mov    %esi,0x14(%esp)
test   %eax,%eax
movzbl 0x8(%esi),%eax
setne  %dl
and    $0xfffffffe,%eax
or     %edx,%eax
mov    %al,0x8(%esi)
movsbl 0x0(%ebp),%ecx
and    $0xfffffffb,%eax
mov    (%edi),%edx
movzwl (%edx,%ecx,2),%edx
shr    $0x2,%dx
and    $0x1,%edx
shl    $0x2,%edx
or     %edx,%eax
mov    %al,0x8(%esi)
jmp    804f737 <fchmod@plt+0x5e57>
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%ebx
jae    804f74f <fchmod@plt+0x5e6f>
sub    $0x1,%ebp
movsbl 0x0(%ebp),%esi
movl   $0x805478e,(%esp)
mov    %esi,0x4(%esp)
call   8049600 <strchr@plt>
test   %eax,%eax
jne    804f730 <fchmod@plt+0x5e50>
mov    %esi,%ebx
mov    0x14(%esp),%esi
mov    %ebx,0x4(%esp)
movl   $0x8054793,(%esp)
call   8049600 <strchr@plt>
test   %eax,%eax
movzbl 0x8(%esi),%eax
setne  %dl
add    %edx,%edx
and    $0xfffffffd,%eax
or     %edx,%eax
mov    %al,0x8(%esi)
mov    0x18(%esp),%eax
call   804f260 <fchmod@plt+0x5980>
mov    %eax,%ebx
movzwl 0x805d384,%eax
sub    0x1c(%esp),%ax
cmp    $0xffffffff,%ebx
mov    %ax,0x6(%esi)
je     804f840 <fchmod@plt+0x5f60>
movzbl 0x8(%esi),%edx
test   $0x2,%dl
je     804f8d8 <fchmod@plt+0x5ff8>
cmp    $0xa,%ebx
je     804f840 <fchmod@plt+0x5f60>
cmp    $0x1,%ax
jle    804f8ee <fchmod@plt+0x600e>
or     $0x8,%edx
xor    %ecx,%ecx
mov    %dl,0x8(%esi)
cmp    $0x805d358,%esi
je     804f868 <fchmod@plt+0x5f88>
mov    0x8058550,%esi
add    $0x14,%esi
test   %cl,%cl
mov    %esi,0x8058550
jne    804f966 <fchmod@plt+0x6086>
cmp    $0xa,%ebx
jne    804f668 <fchmod@plt+0x5d88>
mov    0x805d394,%eax
cmp    0x805d390,%eax
movl   $0x0,0x805d384
00
je     804f97d <fchmod@plt+0x609d>
lea    0x1(%eax),%edx
movsbl (%eax),%eax
mov    %edx,0x805d394
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804f260 <fchmod@plt+0x5980>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x805d394
mov    $0x1,%ecx
mov    %edx,0x18(%esp)
jmp    804f6bb <fchmod@plt+0x5ddb>
nop
lea    0x0(%esi,%eiz,1),%esi
orb    $0x8,0x8(%esi)
cmp    $0xffffffff,%ebx
sete   %cl
movzbl 0x8(%esi),%eax
and    $0x8,%eax
cmp    $0x1,%al
sbb    %eax,%eax
add    $0x2,%eax
cmp    $0x805d358,%esi
mov    %ax,0x6(%esi)
jne    804f7d0 <fchmod@plt+0x5ef0>
mov    %ecx,0x14(%esp)
call   804f2d0 <fchmod@plt+0x59f0>
mov    0x8058570,%esi
mov    0x14(%esp),%ecx
cmp    $0x805d358,%esi
je     804f987 <fchmod@plt+0x60a7>
mov    0xc(%esi),%eax
mov    $0x7fffffff,%edx
mov    %edi,0x1c(%esp)
mov    %edx,%edi
movl   $0x805d358,0x14(%esp)
mov    %ebx,0x18(%esp)
mov    %eax,%ebp
jmp    804f8c3 <fchmod@plt+0x5fe3>
lea    0x0(%esi),%esi
mov    %edi,%eax
cmp    $0x7ffffff6,%eax
lea    0x9(%eax),%esi
cmovbe %esi,%eax
cmp    $0x805d358,%edx
je     804f8fb <fchmod@plt+0x601b>
mov    %edx,%esi
mov    %ebx,%ebp
mov    %eax,%edi
mov    0x10(%esi),%edx
mov    %ebp,%eax
mov    0xc(%edx),%ebx
sub    %ebx,%eax
cmp    %eax,%edi
jle    804f8a8 <fchmod@plt+0x5fc8>
mov    %esi,0x14(%esp)
jmp    804f8aa <fchmod@plt+0x5fca>
nop
and    $0xfffffff7,%edx
xor    %ecx,%ecx
cmp    $0xa,%ebx
mov    %dl,0x8(%esi)
jne    804f7c4 <fchmod@plt+0x5ee4>
jmp    804f84a <fchmod@plt+0x5f6a>
and    $0xfffffff7,%edx
xor    %ecx,%ecx
mov    %dl,0x8(%esi)
jmp    804f7c4 <fchmod@plt+0x5ee4>
mov    0x18(%esp),%ebx
mov    0x1c(%esp),%edi
mov    0x14(%esp),%ebp
mov    %ecx,0x18(%esp)
mov    %ebp,%eax
call   804f600 <fchmod@plt+0x5d20>
mov    0x8058550,%esi
movl   $0x4e20,0xc(%esp)
mov    %ebp,0x4(%esp)
movl   $0x8058560,(%esp)
mov    %esi,%eax
sub    %ebp,%eax
sar    $0x2,%eax
imul   $0xcccccccd,%eax,%eax
lea    0x5(%eax,%eax,4),%eax
shl    $0x2,%eax
mov    %eax,0x8(%esp)
call   8049560 <__memmove_chk@plt>
mov    0x18(%esp),%ecx
mov    %ebp,%eax
sub    $0x8058560,%eax
sub    %eax,%esi
add    $0x14,%esi
test   %cl,%cl
mov    %esi,0x8058550
je     804f7e7 <fchmod@plt+0x5f07>
mov    0x805854c,%eax
mov    %eax,0x805d384
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%eax
jmp    804f817 <fchmod@plt+0x5f37>
movl   $0x805d358,0x14(%esp)
jmp    804f903 <fchmod@plt+0x6023>
mov    %eax,0x805d394
xor    %ecx,%ecx
movl   $0xffffffff,0x18(%esp)
jmp    804f6bb <fchmod@plt+0x5ddb>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    $0x51eb851f,%edx
push   %ebx
sub    $0x14,%esp
mov    0x28(%esp),%esi
mov    0x2c(%esp),%eax
mov    0x20(%esp),%ecx
mov    0x24(%esp),%ebx
mov    %esi,0x805d398
imul   $0xbb,%esi,%esi
mov    %eax,0x805d38c
mov    %ecx,0x805d394
mov    %ebx,0x805d390
mov    %esi,%eax
imul   %edx
sar    $0x1f,%esi
movl   $0x0,0x805d384
00
movl   $0x0,0x8058548
00
sar    $0x6,%edx
sub    %esi,%edx
cmp    %ebx,%ecx
mov    %edx,0x805d388
je     804fb96 <fchmod@plt+0x62b6>
lea    0x1(%ecx),%eax
mov    %eax,0x805d394
movsbl (%ecx),%eax
mov    %eax,0x8058544
movl   $0x0,0x8058540
00
cmp    $0xffffffff,%eax
jne    804fad1 <fchmod@plt+0x61f1>
movl   $0x0,0x805d380
00
cmp    $0xffffffff,%eax
je     804fa88 <fchmod@plt+0x61a8>
cmp    $0xa,%eax
je     804fa88 <fchmod@plt+0x61a8>
mov    0x805d38c,%edx
mov    0x14(%edx),%ecx
cmp    0x18(%edx),%ecx
jae    804fb82 <fchmod@plt+0x62a2>
lea    0x1(%ecx),%ebx
mov    %ebx,0x14(%edx)
mov    %al,(%ecx)
mov    0x805d394,%eax
cmp    0x805d390,%eax
je     804fb58 <fchmod@plt+0x6278>
lea    0x1(%eax),%edx
movsbl (%eax),%eax
mov    %edx,0x805d394
cmp    $0xffffffff,%eax
jne    804fa47 <fchmod@plt+0x6167>
cmp    $0xffffffff,%eax
je     804fb72 <fchmod@plt+0x6292>
mov    0x805d38c,%eax
mov    0x14(%eax),%edx
cmp    0x18(%eax),%edx
jae    804fba0 <fchmod@plt+0x62c0>
lea    0x1(%edx),%ecx
mov    %ecx,0x14(%eax)
movb   $0xa,(%edx)
mov    0x805d394,%eax
cmp    0x805d390,%eax
je     804fb68 <fchmod@plt+0x6288>
lea    0x1(%eax),%edx
movsbl (%eax),%eax
mov    %edx,0x805d394
cmp    $0xffffffff,%eax
je     804fa38 <fchmod@plt+0x6158>
cmp    $0xa,%eax
je     804fa38 <fchmod@plt+0x6158>
mov    0x805d384,%eax
movl   $0x8058560,0x8058550
08
mov    %eax,0x805854c
call   804f650 <fchmod@plt+0x5d70>
mov    0x805d384,%edx
mov    %edx,0x8058548
cmp    $0xffffffff,%eax
je     804fb2d <fchmod@plt+0x624d>
cmp    $0xa,%eax
jne    804fb23 <fchmod@plt+0x6243>
jmp    804fb2d <fchmod@plt+0x624d>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%eax
je     804fb2d <fchmod@plt+0x624d>
mov    0x8058548,%esi
cmp    %esi,0x805d384
jne    804fb2d <fchmod@plt+0x624d>
call   804f650 <fchmod@plt+0x5d70>
cmp    $0xffffffff,%eax
jne    804fb10 <fchmod@plt+0x6230>
mov    0x8058550,%ebx
mov    %eax,0x8058544
orb    $0xa,-0xc(%ebx)
call   804f2d0 <fchmod@plt+0x59f0>
mov    %ebx,%eax
call   804f600 <fchmod@plt+0x5d20>
mov    0x8058544,%eax
jmp    804fa25 <fchmod@plt+0x6145>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    804fa42 <fchmod@plt+0x6162>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    804fa2f <fchmod@plt+0x614f>
movl   $0xffffffff,0x8058544
ff
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
movzbl %al,%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049780 <__overflow@plt>
jmp    804fa66 <fchmod@plt+0x6186>
mov    $0xffffffff,%eax
jmp    804fa20 <fchmod@plt+0x6140>
movl   $0xa,0x4(%esp)
mov    %eax,(%esp)
call   8049780 <__overflow@plt>
jmp    804faab <fchmod@plt+0x61cb>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%ebx
movl   $0x1,0x8(%esp)
movl   $0x0,(%esp)
mov    %al,0x1f(%esp)
lea    0x1f(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %eax,0x4(%esp)
call   80494e0 <mbrtowc@plt>
cmp    $0xffffffff,%eax
je     804fc00 <fchmod@plt+0x6320>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
movl   $0x0,(%ebx)
mov    $0x1,%eax
movl   $0x0,0x4(%ebx)
add    $0x28,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    $0x8054797,%edi
push   %esi
sub    $0x4,%esp
call   80509f0 <fchmod@plt+0x7110>
mov    $0x6,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   0x805d504
call   80494b0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x805d508
add    $0x4,%esp
pop    %esi
pop    %edi
ret
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x805d50c,%eax
movl   $0x80547a7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x80583c0,%eax
mov    %eax,(%esp)
call   80497d0 <__fprintf_chk@plt>
lea    0x34(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80583c0,%eax
mov    %eax,(%esp)
call   8049300 <__vfprintf_chk@plt>
mov    0x80583c0,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049440 <_IO_putc@plt>
mov    0x805d3a8,%eax
test   %eax,%eax
jne    804fcdd <fchmod@plt+0x63fd>
jmp    804fd68 <fchmod@plt+0x6488>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x805d3a8,%eax
mov    0x8(%eax),%eax
test   %eax,%eax
mov    %eax,0x805d3a8
je     804fd68 <fchmod@plt+0x6488>
testb  $0x1,0xc(%eax)
je     804fcc8 <fchmod@plt+0x63e8>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049390 <fclose@plt>
call   80496d0 <__errno_location@plt>
mov    0x805d3a8,%ebx
movl   $0x0,(%eax)
mov    %eax,%esi
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049410 <unlink@plt>
mov    (%esi),%edx
mov    %ebx,%eax
test   %edx,%edx
je     804fccd <fchmod@plt+0x63ed>
mov    %edx,(%esp)
call   8049550 <strerror@plt>
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x80547ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   80493c0 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80583c0,%eax
mov    %eax,(%esp)
call   80497d0 <__fprintf_chk@plt>
jmp    804fcc8 <fchmod@plt+0x63e8>
lea    0x0(%esi),%esi
movl   $0x4,(%esp)
call   8049580 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x3c(%esp),%ebx
mov    0x34(%esp),%esi
mov    %ebx,(%esp)
call   80497a0 <clearerr@plt>
test   %esi,%esi
jne    804fda0 <fchmod@plt+0x64c0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x38(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049490 <fwrite@plt>
cmp    %eax,0x38(%esp)
je     804fd99 <fchmod@plt+0x64b9>
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    %eax,%esi
mov    %ebx,%eax
call   80498f0 <fchmod@plt+0x10>
movl   $0x5,0x10(%esp)
movl   $0x80548b0,0x8(%esp)
movl   $0x80548d4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
call   8049890 <dcngettext@plt>
mov    0x38(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x2c(%esp),%esi
mov    0x24(%esp),%edi
mov    0x28(%esp),%ebx
mov    %esi,(%esp)
call   80497a0 <clearerr@plt>
test   %edi,%edi
je     804fe5c <fchmod@plt+0x657c>
mov    0x20(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80494c0 <fread@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804fe68 <fchmod@plt+0x6588>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8049370 <ferror@plt>
test   %eax,%eax
je     804fe5c <fchmod@plt+0x657c>
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    %eax,%edi
mov    %esi,%eax
call   80498f0 <fchmod@plt+0x10>
movl   $0x5,0x8(%esp)
movl   $0x80547c1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   80493c0 <dcgettext@plt>
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x2c(%esp),%ebx
mov    0x28(%esp),%esi
mov    %ebx,(%esp)
call   8049370 <ferror@plt>
test   %eax,%eax
je     804ff20 <fchmod@plt+0x6640>
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    %eax,%esi
mov    %ebx,%eax
call   80498f0 <fchmod@plt+0x10>
movl   $0x5,0x8(%esp)
movl   $0x80547c1,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   80493c0 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
nop
mov    %esi,%eax
movsbl %al,%esi
mov    0x24(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8049790 <getdelim@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049370 <ferror@plt>
test   %eax,%eax
jne    804fed9 <fchmod@plt+0x65f9>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049590 <__fwriting@plt>
test   %eax,%eax
jne    804ff80 <fchmod@plt+0x66a0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80497a0 <clearerr@plt>
mov    %ebx,(%esp)
call   8049320 <fflush@plt>
cmp    $0xffffffff,%eax
jne    804ff75 <fchmod@plt+0x6695>
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x9,%eax
je     804ff75 <fchmod@plt+0x6695>
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    %eax,%esi
mov    %ebx,%eax
call   80498f0 <fchmod@plt+0x10>
mov    %esi,0x8(%esp)
movl   $0x80547d6,(%esp)
mov    %eax,0x4(%esp)
call   804fc50 <fchmod@plt+0x6370>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   804ff60 <fchmod@plt+0x6680>
mov    %ebx,(%esp)
call   80497a0 <clearerr@plt>
mov    %ebx,(%esp)
call   8049390 <fclose@plt>
cmp    $0xffffffff,%eax
je     804fffa <fchmod@plt+0x671a>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
mov    %eax,%esi
mov    %ebx,%eax
call   80498f0 <fchmod@plt+0x10>
mov    %esi,0x8(%esp)
movl   $0x80547ec,(%esp)
mov    %eax,0x4(%esp)
call   804fc50 <fchmod@plt+0x6370>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x805d3a8,%ebx
mov    0x30(%esp),%esi
lea    0x10(%esp),%edi
mov    %ebx,0x18(%esp)
jmp    8050055 <fchmod@plt+0x6775>
lea    0x0(%esi),%esi
mov    %ebx,%edi
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
je     8050088 <fchmod@plt+0x67a8>
test   %esi,%esi
mov    (%ebx),%eax
je     8050063 <fchmod@plt+0x6783>
cmp    %esi,%eax
jne    8050050 <fchmod@plt+0x6770>
call   804ffd0 <fchmod@plt+0x66f0>
mov    0x8(%ebx),%eax
mov    %eax,0x8(%edi)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049340 <free@plt>
mov    %ebx,(%esp)
mov    %edi,%ebx
call   8049340 <free@plt>
jmp    8050050 <fchmod@plt+0x6770>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
test   %esi,%esi
mov    %eax,0x805d3a8
je     805009c <fchmod@plt+0x67bc>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x8058400,%eax
call   804ffd0 <fchmod@plt+0x66f0>
mov    0x80583c0,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    804ffd0 <fchmod@plt+0x66f0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80495f0 <rename@plt>
cmp    $0xffffffff,%eax
je     80500e8 <fchmod@plt+0x6808>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x28(%esp),%eax
test   %eax,%eax
je     805018a <fchmod@plt+0x68aa>
call   80496d0 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x0,(%eax)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8049410 <unlink@plt>
mov    (%esi),%eax
test   %eax,%eax
jne    8050150 <fchmod@plt+0x6870>
mov    %edi,(%esi)
mov    %edi,(%esp)
call   8049550 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054802,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   80493c0 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8049550 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x80547ac,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   80493c0 <dcgettext@plt>
mov    0x28(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
call   80496d0 <__errno_location@plt>
mov    (%eax),%edi
jmp    8050117 <fchmod@plt+0x6837>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    $0x1,%eax
mov    0x20(%esp),%edx
movl   $0x1,(%esp)
test   %edx,%edx
cmovne %edx,%eax
mov    %eax,0x4(%esp)
call   80498c0 <calloc@plt>
test   %eax,%eax
je     80501c9 <fchmod@plt+0x68e9>
add    $0x1c,%esp
ret
movl   $0x8054817,(%esp)
call   804fc50 <fchmod@plt+0x6370>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%edx
test   %eax,%eax
je     8050218 <fchmod@plt+0x6938>
test   %edx,%edx
je     8050208 <fchmod@plt+0x6928>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8049520 <realloc@plt>
test   %eax,%eax
je     8050224 <fchmod@plt+0x6944>
add    $0x1c,%esp
ret
nop
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    80501a0 <fchmod@plt+0x68c0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   8049340 <free@plt>
xor    %eax,%eax
jmp    8050203 <fchmod@plt+0x6923>
movl   $0x8054830,(%esp)
call   804fc50 <fchmod@plt+0x6370>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0x805d3a4,%eax
mov    0xa0(%esp),%edi
test   %eax,%eax
je     80503e9 <fchmod@plt+0x6b09>
xchg   %ax,%ax
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x3,(%esp)
call   8049880 <__lxstat64@plt>
test   %eax,%eax
jne    80503da <fchmod@plt+0x6afa>
mov    0x30(%esp),%eax
and    $0xa000,%eax
cmp    $0xa000,%eax
jne    80503dc <fchmod@plt+0x6afc>
mov    0x805d39c,%ebx
cmp    %ebx,%edi
je     80503c1 <fchmod@plt+0x6ae1>
mov    0x805d3a4,%esi
jmp    80502d2 <fchmod@plt+0x69f2>
lea    0x0(%esi),%esi
mov    0x805d3a0,%eax
lea    (%ecx,%ecx,1),%esi
mov    %esi,0x4(%esp)
mov    %esi,0x805d3a4
mov    %eax,(%esp)
call   80501e0 <fchmod@plt+0x6900>
mov    %ebx,(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x805d3a0
call   80501e0 <fchmod@plt+0x6900>
mov    %eax,0x805d39c
mov    %eax,%ebx
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8049450 <readlink@plt>
mov    0x805d3a4,%ecx
cmp    %eax,%ecx
mov    %eax,%esi
je     80502a0 <fchmod@plt+0x69c0>
test   %eax,%eax
js     8050457 <fchmod@plt+0x6b77>
mov    0x805d39c,%ebp
mov    %ecx,0x18(%esp)
movb   $0x0,0x0(%ebp,%eax,1)
cmpb   $0x2f,0x0(%ebp)
je     8050370 <fchmod@plt+0x6a90>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   8049770 <strrchr@plt>
test   %eax,%eax
je     8050370 <fchmod@plt+0x6a90>
mov    0x18(%esp),%ecx
sub    %edi,%eax
lea    0x1(%eax),%edx
mov    0x805d3a0,%ebp
lea    (%edx,%esi,1),%eax
cmp    %ecx,%eax
jge    8050378 <fchmod@plt+0x6a98>
cmp    %edi,%ebp
je     8050351 <fchmod@plt+0x6a71>
mov    %edx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x18(%esp)
call   8049350 <memcpy@plt>
mov    0x18(%esp),%edx
add    %ebp,%edx
add    $0x1,%esi
mov    %esi,0x8(%esp)
mov    %ebp,%edi
mov    %ebx,0x4(%esp)
mov    %edx,(%esp)
call   8049350 <memcpy@plt>
jmp    8050250 <fchmod@plt+0x6970>
lea    0x0(%esi),%esi
mov    %ebp,%edi
jmp    8050250 <fchmod@plt+0x6970>
nop
lea    0x1(%eax),%ecx
mov    0x805d3a0,%eax
mov    %ecx,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x805d3a4
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   80501e0 <fchmod@plt+0x6900>
mov    0x18(%esp),%ecx
mov    %ebx,(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,%ebp
mov    %eax,0x805d3a0
call   80501e0 <fchmod@plt+0x6900>
mov    0x1c(%esp),%edx
mov    %eax,0x805d39c
mov    %eax,%ebx
jmp    8050335 <fchmod@plt+0x6a55>
mov    0x805d3a0,%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %esi,%edi
call   80494d0 <strcpy@plt>
jmp    8050292 <fchmod@plt+0x69b2>
js     805041a <fchmod@plt+0x6b3a>
add    $0x8c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x1001,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
movl   $0x1001,(%esp)
mov    %eax,0x805d3a0
call   80501a0 <fchmod@plt+0x68c0>
movl   $0x1001,0x805d3a4
00
mov    %eax,0x805d39c
jmp    8050250 <fchmod@plt+0x6970>
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805484c,0x4(%esp)
mov    %eax,%ebx
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x80548f8,0x4(%esp)
mov    %eax,%ebx
jmp    805043b <fchmod@plt+0x6b5b>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x1c,%esp
mov    (%eax),%eax
cmp    %ecx,%eax
jae    80504ac <fchmod@plt+0x6bcc>
lea    (%eax,%eax,1),%ebp
mov    %edx,%edi
cmp    %ebp,%ecx
jb     80504b8 <fchmod@plt+0x6bd8>
mov    %ebx,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   80501e0 <fchmod@plt+0x6900>
mov    %ebx,(%esi)
mov    %eax,(%edi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8049520 <realloc@plt>
test   %eax,%eax
je     805049a <fchmod@plt+0x6bba>
mov    %ebp,%ebx
jmp    80504a8 <fchmod@plt+0x6bc8>
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80494d0 <strcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x805d3a8,%edi
test   %edi,%edi
je     805052b <fchmod@plt+0x6c4b>
cmp    %eax,(%edi)
mov    %edi,%ebx
jne    8050524 <fchmod@plt+0x6c44>
jmp    805055a <fchmod@plt+0x6c7a>
lea    0x0(%esi),%esi
cmp    %esi,(%ebx)
je     8050560 <fchmod@plt+0x6c80>
mov    0x8(%ebx),%ebx
test   %ebx,%ebx
jne    8050520 <fchmod@plt+0x6c40>
movl   $0x10,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    %eax,%ebx
mov    %edi,0x8(%eax)
mov    %eax,0x805d3a8
mov    %ebp,(%esp)
call   80504d0 <fchmod@plt+0x6bf0>
mov    %esi,(%ebx)
andb   $0xfe,0xc(%ebx)
mov    %eax,0x4(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8049340 <free@plt>
jmp    8050541 <fchmod@plt+0x6c61>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8049470 <fopen64@plt>
test   %eax,%eax
mov    %eax,%ebx
je     80505a0 <fchmod@plt+0x6cc0>
mov    %esi,%edx
call   8050500 <fchmod@plt+0x6c20>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x28(%esp),%eax
test   %eax,%eax
jne    80505b0 <fchmod@plt+0x6cd0>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x805485f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   80493c0 <dcgettext@plt>
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80495a0 <fdopen@plt>
test   %eax,%eax
mov    %eax,%ebx
je     8050620 <fchmod@plt+0x6d40>
mov    0x24(%esp),%edx
call   8050500 <fchmod@plt+0x6c20>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
xchg   %ax,%ax
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    805062f <fchmod@plt+0x6d4f>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054879,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebx
call   80493c0 <dcgettext@plt>
mov    0x24(%esp),%ecx
mov    %ebx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%esi
mov    0x48(%esp),%ebp
test   %esi,%esi
je     8050728 <fchmod@plt+0x6e48>
mov    %esi,(%esp)
call   8049620 <strlen@plt>
mov    %eax,%ebx
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
lea    0x8(%ebx,%eax,1),%eax
mov    %eax,(%esp)
call   8052940 <fchmod@plt+0x9060>
mov    %ebp,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x80548a3,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebx
call   80498d0 <__sprintf_chk@plt>
movl   $0x1c0,(%esp)
call   8049860 <umask@plt>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8049480 <mkostemp64@plt>
mov    %ebp,(%esp)
mov    %eax,%esi
call   8049860 <umask@plt>
cmp    $0xffffffff,%esi
je     805075f <fchmod@plt+0x6e7f>
mov    0x40(%esp),%eax
mov    %ebx,(%eax)
mov    0x4c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80495a0 <fdopen@plt>
mov    %ebx,%edx
mov    %eax,%esi
call   8050500 <fchmod@plt+0x6c20>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x8054898,(%esp)
call   8049510 <getenv@plt>
test   %eax,%eax
mov    %eax,%esi
jne    805079c <fchmod@plt+0x6ebc>
movl   $0x805489f,(%esp)
call   8049510 <getenv@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8050687 <fchmod@plt+0x6da7>
mov    $0x4,%ebx
mov    $0x8054893,%esi
jmp    8050691 <fchmod@plt+0x6db1>
call   80496d0 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8049550 <strerror@plt>
movl   $0x5,0x8(%esp)
movl   $0x80544e4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   80493c0 <dcgettext@plt>
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804fc50 <fchmod@plt+0x6370>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %esi,%edi
repnz scas %es:(%edi),%al
not    %ecx
lea    -0x1(%ecx),%ebx
jmp    8050691 <fchmod@plt+0x6db1>
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049350 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
movl   $0xc,(%esp)
call   80501a0 <fchmod@plt+0x68c0>
movl   $0x32,(%esp)
mov    %eax,%ebx
call   80501a0 <fchmod@plt+0x68c0>
movl   $0x32,(%ebx)
movl   $0x0,0x4(%ebx)
mov    %eax,0x8(%ebx)
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x28(%esp),%esi
mov    0x4(%ebx),%ecx
mov    (%ebx),%eax
sub    %ecx,%eax
cmp    %esi,%eax
jae    8050867 <fchmod@plt+0x6f87>
add    %esi,%ecx
mov    %ebx,%eax
lea    0x8(%ebx),%edx
call   8050480 <fchmod@plt+0x6ba0>
mov    0x4(%ebx),%ecx
mov    0x24(%esp),%eax
add    0x8(%ebx),%ecx
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   8049350 <memcpy@plt>
add    %esi,0x4(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x14(%esp),%esi
mov    0x10(%esp),%ebx
cmp    $0xffffffff,%esi
je     80508d8 <fchmod@plt+0x6ff8>
mov    0x4(%ebx),%ecx
cmp    %ecx,(%ebx)
je     80508c0 <fchmod@plt+0x6fe0>
mov    0x8(%ebx),%eax
lea    0x1(%ecx),%edx
mov    %edx,0x4(%ebx)
mov    %esi,%edx
add    %ecx,%eax
mov    %dl,(%eax)
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x1,%ecx
mov    %ebx,%eax
lea    0x8(%ebx),%edx
call   8050480 <fchmod@plt+0x6ba0>
mov    0x4(%ebx),%ecx
jmp    80508a9 <fchmod@plt+0x6fc9>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80508b8 <fchmod@plt+0x6fd8>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     80508f7 <fchmod@plt+0x7017>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049340 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8049340 <free@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x14(%esp),%edx
mov    0xc(%esp),%eax
mov    %edx,0xc(%esp)
mov    0x10(%esp),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
jmp    8052d10 <fchmod@plt+0x9430>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x30(%esp),%eax
mov    0x28(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8052d10 <fchmod@plt+0x9430>
cmp    $0xfffffffe,%eax
mov    %eax,%ebx
je     80509b0 <fchmod@plt+0x70d0>
cmp    $0xffffffff,%eax
jne    80509a5 <fchmod@plt+0x70c5>
mov    %esi,(%esp)
call   8052210 <fchmod@plt+0x8930>
movl   $0x5,0x8(%esp)
movl   $0x8054917,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   80493c0 <dcgettext@plt>
mov    %eax,%esi
call   80496d0 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80494f0 <error@plt>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8052210 <fchmod@plt+0x8930>
mov    %eax,%esi
call   80496d0 <__errno_location@plt>
mov    %esi,0xc(%esp)
movl   $0x8054876,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80494f0 <error@plt>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8049740 <nl_langinfo@plt>
mov    0x805d3ac,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x80543e7,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     8050abc <fchmod@plt+0x71dc>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     8050a87 <fchmod@plt+0x71a7>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    8050a60 <fchmod@plt+0x7180>
nop
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8049620 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     8050ab8 <fchmod@plt+0x71d8>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   80492f0 <strcmp@plt>
test   %eax,%eax
je     8050a7b <fchmod@plt+0x719b>
cmp    $0x2a,%bl
jne    8050a40 <fchmod@plt+0x7160>
cmpb   $0x0,0x1(%ebp)
jne    8050a40 <fchmod@plt+0x7160>
mov    %ebp,(%esp)
call   8049620 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x805493b,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    8050d7d <fchmod@plt+0x749d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    8050a87 <fchmod@plt+0x71a7>
movl   $0x8054941,(%esp)
call   8049510 <getenv@plt>
test   %eax,%eax
je     8050ad5 <fchmod@plt+0x71f5>
cmpb   $0x0,(%eax)
jne    8050ce3 <fchmod@plt+0x7403>
mov    $0x4,%eax
mov    $0x5,%esi
mov    $0x8054935,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     8050cd4 <fchmod@plt+0x73f4>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8049540 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8050d73 <fchmod@plt+0x7493>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8049350 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     8050b3c <fchmod@plt+0x725c>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8049310 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     8050cb8 <fchmod@plt+0x73d8>
movl   $0x80537d8,0x4(%esp)
mov    %eax,(%esp)
call   80495a0 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8050cb0 <fchmod@plt+0x73d0>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    8050c96 <fchmod@plt+0x73b6>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     8050ba0 <fchmod@plt+0x72c0>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    8050ba0 <fchmod@plt+0x72c0>
cmp    $0x23,%eax
je     8050d0d <fchmod@plt+0x742d>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80496c0 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8054951,0x4(%esp)
mov    %esi,(%esp)
call   8049610 <fscanf@plt>
cmp    $0x1,%eax
jle    8050d30 <fchmod@plt+0x7450>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    8050d4e <fchmod@plt+0x746e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8049540 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     8050d82 <fchmod@plt+0x74a2>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   80494d0 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   80494d0 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     8050bac <fchmod@plt+0x72cc>
mov    %esi,(%esp)
call   8049730 <__uflow@plt>
cmp    $0xffffffff,%eax
je     8050d30 <fchmod@plt+0x7450>
jmp    8050bb5 <fchmod@plt+0x72d5>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   80498a0 <close@plt>
mov    $0x80543e7,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8049340 <free@plt>
mov    %ebp,0x805d3ac
jmp    8050a2f <fchmod@plt+0x714f>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    8050afb <fchmod@plt+0x721b>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8049620 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     8050cd4 <fchmod@plt+0x73f4>
lea    -0x1(%eax),%eax
jmp    8050ae4 <fchmod@plt+0x7204>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     8050d27 <fchmod@plt+0x7447>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    8050d9c <fchmod@plt+0x74bc>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    8050d08 <fchmod@plt+0x7428>
cmp    $0xffffffff,%eax
jne    8050ba0 <fchmod@plt+0x72c0>
mov    %esi,(%esp)
call   8049390 <fclose@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     8050cb8 <fchmod@plt+0x73d8>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    8050cbd <fchmod@plt+0x73dd>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8049520 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    8050c4c <fchmod@plt+0x736c>
mov    $0x80543e7,%ebp
jmp    8050cc9 <fchmod@plt+0x73e9>
call   80493e0 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x80543e7,%ebp
call   8049340 <free@plt>
mov    %esi,(%esp)
call   8049390 <fclose@plt>
jmp    8050cbd <fchmod@plt+0x73dd>
mov    %esi,(%esp)
call   8049730 <__uflow@plt>
jmp    8050d22 <fchmod@plt+0x7442>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     8050dd1 <fchmod@plt+0x74f1>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   8049850 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     8050e10 <fchmod@plt+0x7530>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   80509f0 <fchmod@plt+0x7110>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    8050e78 <fchmod@plt+0x7598>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    8050e60 <fchmod@plt+0x7580>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x2d,0x3(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x38,0x4(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x0,0x5(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x60,(%esi)
mov    $0x8054968,%eax
mov    $0x805495b,%edx
cmovne %edx,%eax
jmp    8050e08 <fchmod@plt+0x7528>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x8054791,%eax
cmp    $0x7,%edi
mov    $0x8054962,%edx
cmovne %edx,%eax
jmp    8050e08 <fchmod@plt+0x7528>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    8050e60 <fchmod@plt+0x7580>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x31,0x2(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x38,0x3(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x30,0x4(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x33,0x5(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x30,0x6(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x0,0x7(%eax)
jne    8050e60 <fchmod@plt+0x7580>
cmpb   $0x60,(%esi)
mov    $0x8054964,%eax
mov    $0x805495f,%edx
cmovne %edx,%eax
jmp    8050e08 <fchmod@plt+0x7528>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   80494b0 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     80517a8 <fchmod@plt+0x7ec8>
mov    0x94(%esp),%eax
jmp    *0x80549a0(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     80515b0 <fchmod@plt+0x7cd0>
test   %al,%al
je     80515c3 <fchmod@plt+0x7ce3>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     8051598 <fchmod@plt+0x7cb8>
cmpb   $0x0,0x58(%esp)
je     8051598 <fchmod@plt+0x7cb8>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     8051598 <fchmod@plt+0x7cb8>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   80493a0 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    8051630 <fchmod@plt+0x7d50>
cmpb   $0x0,0x2f(%esp)
jne    8051198 <fchmod@plt+0x78b8>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     8051348 <fchmod@plt+0x7a68>
movzbl %bl,%eax
jmp    *0x80549c4(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     8051188 <fchmod@plt+0x78a8>
cmpl   $0x3,0x94(%esp)
jne    80510e8 <fchmod@plt+0x7808>
testb  $0x4,0x98(%esp)
je     80510e8 <fchmod@plt+0x7808>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    80510e8 <fchmod@plt+0x7808>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    80510e8 <fchmod@plt+0x7808>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     80510e8 <fchmod@plt+0x7808>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     80510e8 <fchmod@plt+0x7808>
cmpb   $0x0,0x2f(%esp)
jne    8051198 <fchmod@plt+0x78b8>
cmp    %edi,%ebp
jae    80510ae <fchmod@plt+0x77ce>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    80510be <fchmod@plt+0x77de>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    80510ce <fchmod@plt+0x77ee>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    80510de <fchmod@plt+0x77fe>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     80510f6 <fchmod@plt+0x7816>
cmpb   $0x0,0x5a(%esp)
jne    805111b <fchmod@plt+0x783b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     805111b <fchmod@plt+0x783b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    8051122 <fchmod@plt+0x7842>
cmpb   $0x0,0x24(%esp)
je     8051138 <fchmod@plt+0x7858>
cmpb   $0x0,0x2f(%esp)
jne    8051198 <fchmod@plt+0x78b8>
cmp    %edi,%ebp
jae    8051135 <fchmod@plt+0x7855>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    8051146 <fchmod@plt+0x7866>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    8050f88 <fchmod@plt+0x76a8>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     8051798 <fchmod@plt+0x7eb8>
test   %al,%al
jne    80510e8 <fchmod@plt+0x7808>
test   %esi,%esi
jne    80510e8 <fchmod@plt+0x7808>
cmpl   $0x2,0x94(%esp)
jne    80510e8 <fchmod@plt+0x7808>
nop
cmpb   $0x0,0x2f(%esp)
je     80510e8 <fchmod@plt+0x7808>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8050ed0 <fchmod@plt+0x75f0>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    80518c2 <fchmod@plt+0x7fe2>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     805180b <fchmod@plt+0x7f2b>
cmpb   $0x0,0x58(%esp)
je     80510e8 <fchmod@plt+0x7808>
mov    %eax,%ebx
jmp    8051122 <fchmod@plt+0x7842>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    8051213 <fchmod@plt+0x7933>
nop
mov    $0x66,%eax
jmp    8051213 <fchmod@plt+0x7933>
nop
mov    $0x76,%eax
jmp    8051213 <fchmod@plt+0x7933>
nop
mov    $0x6e,%eax
jmp    8051205 <fchmod@plt+0x7925>
nop
mov    $0x74,%eax
jmp    8051205 <fchmod@plt+0x7925>
nop
cmpb   $0x0,0x58(%esp)
je     8051780 <fchmod@plt+0x7ea0>
cmpb   $0x0,0x2f(%esp)
jne    8051198 <fchmod@plt+0x78b8>
cmp    %edi,%ebp
jae    8051272 <fchmod@plt+0x7992>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    80512b8 <fchmod@plt+0x79d8>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     80512b8 <fchmod@plt+0x79d8>
cmp    %eax,%edi
ja     8051820 <fchmod@plt+0x7f40>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    80512ae <fchmod@plt+0x79ce>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    80510f6 <fchmod@plt+0x7816>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    8051213 <fchmod@plt+0x7933>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     80512ee <fchmod@plt+0x7a0e>
cmpb   $0x0,0x2f(%esp)
je     80512ee <fchmod@plt+0x7a0e>
test   %dl,%dl
jne    8051138 <fchmod@plt+0x7858>
mov    %ebx,%eax
jmp    8051205 <fchmod@plt+0x7925>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    80510e8 <fchmod@plt+0x7808>
cmpb   $0x0,0x2f(%esp)
jne    8051198 <fchmod@plt+0x78b8>
cmp    %edi,%ebp
jae    805131d <fchmod@plt+0x7a3d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    805132d <fchmod@plt+0x7a4d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    805133d <fchmod@plt+0x7a5d>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    80510e8 <fchmod@plt+0x7808>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    8051640 <fchmod@plt+0x7d60>
call   80498b0 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     80510e8 <fchmod@plt+0x7808>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    80513f4 <fchmod@plt+0x7b14>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    8051198 <fchmod@plt+0x78b8>
cmp    %edi,%ebp
jae    80513a3 <fchmod@plt+0x7ac3>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    80513b6 <fchmod@plt+0x7ad6>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    80513cc <fchmod@plt+0x7aec>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    805113b <fchmod@plt+0x785b>
cmp    %edi,%ebp
jae    80513e9 <fchmod@plt+0x7b09>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    8051390 <fchmod@plt+0x7ab0>
cmpb   $0x0,0x24(%esp)
je     80513d5 <fchmod@plt+0x7af5>
cmp    %edi,%ebp
jae    8051407 <fchmod@plt+0x7b27>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    80513d5 <fchmod@plt+0x7af5>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80518c7 <fchmod@plt+0x7fe7>
test   %edi,%edi
je     80517cd <fchmod@plt+0x7eed>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8054791,0x3c(%esp)
movb   $0x22,(%eax)
jmp    8050f68 <fchmod@plt+0x7688>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8054791,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    8050f68 <fchmod@plt+0x7688>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    8050f68 <fchmod@plt+0x7688>
lea    0x0(%esi,%eiz,1),%esi
je     80514dc <fchmod@plt+0x7bfc>
mov    0x94(%esp),%edx
mov    $0x805496c,%eax
call   8050de0 <fchmod@plt+0x7500>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x8054962,%eax
call   8050de0 <fchmod@plt+0x7500>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    805150a <fchmod@plt+0x7c2a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     805150a <fchmod@plt+0x7c2a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    80514ff <fchmod@plt+0x7c1f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    80514f8 <fchmod@plt+0x7c18>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    8050f68 <fchmod@plt+0x7688>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8054962,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    8050f68 <fchmod@plt+0x7688>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    80518e3 <fchmod@plt+0x8003>
test   %edi,%edi
je     80517ec <fchmod@plt+0x7f0c>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x8054962,0x3c(%esp)
movb   $0x27,(%eax)
jmp    8050f68 <fchmod@plt+0x7688>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    8051020 <fchmod@plt+0x7740>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    8050fa8 <fchmod@plt+0x76c8>
test   %ebp,%ebp
jne    80515dc <fchmod@plt+0x7cfc>
cmpl   $0x2,0x94(%esp)
jne    80515dc <fchmod@plt+0x7cfc>
cmpb   $0x0,0x2f(%esp)
jne    8051198 <fchmod@plt+0x78b8>
cmpb   $0x0,0x2f(%esp)
jne    8051612 <fchmod@plt+0x7d32>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     8051612 <fchmod@plt+0x7d32>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     8051612 <fchmod@plt+0x7d32>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    8051607 <fchmod@plt+0x7d27>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    8051600 <fchmod@plt+0x7d20>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    80511e2 <fchmod@plt+0x7902>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    80511e2 <fchmod@plt+0x7902>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    8051020 <fchmod@plt+0x7740>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     80517ad <fchmod@plt+0x7ecd>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   80494e0 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     805182d <fchmod@plt+0x7f4d>
cmp    $0xffffffff,%eax
je     8051848 <fchmod@plt+0x7f68>
cmp    $0xfffffffe,%eax
je     8051863 <fchmod@plt+0x7f83>
cmpb   $0x0,0x2f(%esp)
je     805170f <fchmod@plt+0x7e2f>
cmpl   $0x2,0x94(%esp)
jne    805170f <fchmod@plt+0x7e2f>
cmp    $0x1,%eax
je     805170f <fchmod@plt+0x7e2f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     8051708 <fchmod@plt+0x7e28>
movzbl %al,%eax
jmp    *0x8054bc0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    80516f0 <fchmod@plt+0x7e10>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8049460 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8049360 <mbsinit@plt>
test   %eax,%eax
je     8051681 <fchmod@plt+0x7da1>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    8051373 <fchmod@plt+0x7a93>
and    0x58(%esp),%dl
jmp    805137d <fchmod@plt+0x7a9d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    8051198 <fchmod@plt+0x78b8>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     80510e8 <fchmod@plt+0x7808>
add    $0x1,%esi
jmp    8050f88 <fchmod@plt+0x76a8>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    8051169 <fchmod@plt+0x7889>
call   8049850 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8049620 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    805165e <fchmod@plt+0x7d7e>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8054791,0x3c(%esp)
jmp    8050f68 <fchmod@plt+0x7688>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8054962,0x3c(%esp)
jmp    8050f68 <fchmod@plt+0x7688>
cmpb   $0x0,0x2f(%esp)
je     8051213 <fchmod@plt+0x7933>
jmp    8051198 <fchmod@plt+0x78b8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    805129e <fchmod@plt+0x79be>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    8051755 <fchmod@plt+0x7e75>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    8051755 <fchmod@plt+0x7e75>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    80518b8 <fchmod@plt+0x7fd8>
cmpb   $0x0,(%eax)
je     80518b8 <fchmod@plt+0x7fd8>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    80518a6 <fchmod@plt+0x7fc6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     80518b0 <fchmod@plt+0x7fd0>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     80518a0 <fchmod@plt+0x7fc0>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    8051755 <fchmod@plt+0x7e75>
call   80493e0 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8054791,0x3c(%esp)
jmp    8050f68 <fchmod@plt+0x7688>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x8054962,0x3c(%esp)
jmp    8050f68 <fchmod@plt+0x7688>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   80496d0 <__errno_location@plt>
test   %edi,%edi
mov    0x8058390,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     8051a8c <fchmod@plt+0x81ac>
cmp    0x805839c,%edi
jb     8051998 <fchmod@plt+0x80b8>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     8051a91 <fchmod@plt+0x81b1>
cmp    $0x8058394,%esi
lea    0x0(,%ebp,8),%eax
je     8051a60 <fchmod@plt+0x8180>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80529b0 <fchmod@plt+0x90d0>
mov    %eax,%esi
mov    %eax,0x8058390
mov    0x805839c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   80496b0 <memset@plt>
mov    %ebp,0x805839c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8050ed0 <fchmod@plt+0x75f0>
cmp    %eax,%ebp
ja     8051a47 <fchmod@plt+0x8167>
lea    0x1(%eax),%ebp
cmp    $0x805d3c0,%esi
mov    %ebp,(%edi)
je     8051a02 <fchmod@plt+0x8122>
mov    %esi,(%esp)
call   8049340 <free@plt>
mov    %ebp,(%esp)
call   8052940 <fchmod@plt+0x9060>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   8050ed0 <fchmod@plt+0x75f0>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   80529b0 <fchmod@plt+0x90d0>
mov    0x8058398,%edx
mov    %eax,%esi
mov    %eax,0x8058390
mov    0x8058394,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    805196f <fchmod@plt+0x808f>
call   8049850 <abort@plt>
call   8052bb0 <fchmod@plt+0x92d0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   80496d0 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x805d4c0,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   8052b50 <fchmod@plt+0x9270>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x805d4c0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    8051b00 <fchmod@plt+0x8220>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x805d4c0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x805d4c0,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x805d4c0,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x805d4c0,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     8051bb3 <fchmod@plt+0x82d3>
test   %ecx,%ecx
je     8051bb3 <fchmod@plt+0x82d3>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8049850 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x805d4c0,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   80496d0 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8050ed0 <fchmod@plt+0x75f0>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x805d4c0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   80496d0 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   8050ed0 <fchmod@plt+0x75f0>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   8052940 <fchmod@plt+0x9060>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   8050ed0 <fchmod@plt+0x75f0>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     8051ce8 <fchmod@plt+0x8408>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8051c20 <fchmod@plt+0x8340>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805839c,%edi
mov    0x8058390,%esi
cmp    $0x1,%edi
jbe    8051d63 <fchmod@plt+0x8483>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8049340 <free@plt>
cmp    %edi,%ebx
jne    8051d50 <fchmod@plt+0x8470>
mov    0x4(%esi),%eax
cmp    $0x805d3c0,%eax
je     8051d89 <fchmod@plt+0x84a9>
mov    %eax,(%esp)
call   8049340 <free@plt>
movl   $0x100,0x8058394
00
movl   $0x805d3c0,0x8058398
08
cmp    $0x8058394,%esi
je     8051da3 <fchmod@plt+0x84c3>
mov    %esi,(%esp)
call   8049340 <free@plt>
movl   $0x8058394,0x8058390
08
movl   $0x1,0x805839c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x805d4c0,0x4(%esp)
jmp    8051900 <fchmod@plt+0x8020>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x805d4c0,0x4(%esp)
jmp    8051900 <fchmod@plt+0x8020>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x805d4c0,0x4(%esp)
jmp    8051900 <fchmod@plt+0x8020>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x805d4c0,0x4(%esp)
jmp    8051900 <fchmod@plt+0x8020>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   8050db0 <fchmod@plt+0x74d0>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8051900 <fchmod@plt+0x8020>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   8050db0 <fchmod@plt+0x74d0>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8051900 <fchmod@plt+0x8020>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8051e40 <fchmod@plt+0x8560>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   8051e70 <fchmod@plt+0x8590>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x805d4c0,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x805d4c4,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x805d4c8,%eax
mov    %eax,0x18(%esp)
mov    0x805d4cc,%eax
mov    %eax,0x1c(%esp)
mov    0x805d4d0,%eax
mov    %eax,0x20(%esp)
mov    0x805d4d4,%eax
mov    %eax,0x24(%esp)
mov    0x805d4d8,%eax
mov    %eax,0x28(%esp)
mov    0x805d4dc,%eax
mov    %eax,0x2c(%esp)
mov    0x805d4e0,%eax
mov    %eax,0x30(%esp)
mov    0x805d4e4,%eax
mov    %eax,0x34(%esp)
mov    0x805d4e8,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x805d4ec,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   8051900 <fchmod@plt+0x8020>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8051f00 <fchmod@plt+0x8620>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   8051f00 <fchmod@plt+0x8620>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8051f00 <fchmod@plt+0x8620>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x805d4c0,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x805d4c4,%eax
mov    %eax,0x14(%esp)
mov    0x805d4c8,%eax
mov    %eax,0x18(%esp)
mov    0x805d4cc,%eax
mov    %eax,0x1c(%esp)
mov    0x805d4d0,%eax
mov    %eax,0x20(%esp)
mov    0x805d4d4,%eax
mov    %eax,0x24(%esp)
mov    0x805d4d8,%eax
mov    %eax,0x28(%esp)
mov    0x805d4dc,%eax
mov    %eax,0x2c(%esp)
mov    0x805d4e0,%eax
mov    %eax,0x30(%esp)
mov    0x805d4e4,%eax
mov    %eax,0x34(%esp)
mov    0x805d4e8,%eax
mov    %eax,0x38(%esp)
mov    0x805d4ec,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   8051b80 <fchmod@plt+0x82a0>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   8051900 <fchmod@plt+0x8020>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8052040 <fchmod@plt+0x8760>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8052040 <fchmod@plt+0x8760>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   8052040 <fchmod@plt+0x8760>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8058360,0x4(%esp)
jmp    8051900 <fchmod@plt+0x8020>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8058360,0x4(%esp)
jmp    8051900 <fchmod@plt+0x8020>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8058360,0x4(%esp)
jmp    8051900 <fchmod@plt+0x8020>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8058360,0x4(%esp)
jmp    8051900 <fchmod@plt+0x8020>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     80526e8 <fchmod@plt+0x8e08>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x8054ca4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054cb7,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x7dc,0x10(%esp)
movl   $0x8054fc0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80497d0 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054d28,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     8052710 <fchmod@plt+0x8e30>
jmp    *0x8054f90(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054e8c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   80493c0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   80497d0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054ebc,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   80493c0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   80497d0 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8049850 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054cbb,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497d0 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054ccb,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497d0 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054ce2,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80497d0 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054df4,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   80493c0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   80497d0 <__fprintf_chk@plt>
jmp    805238f <fchmod@plt+0x8aaf>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054e14,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   80493c0 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497d0 <__fprintf_chk@plt>
jmp    805238f <fchmod@plt+0x8aaf>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054e38,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80493c0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497d0 <__fprintf_chk@plt>
jmp    805238f <fchmod@plt+0x8aaf>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054e60,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   80493c0 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497d0 <__fprintf_chk@plt>
jmp    805238f <fchmod@plt+0x8aaf>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x8054cb0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80497d0 <__fprintf_chk@plt>
jmp    8052281 <fchmod@plt+0x89a1>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054ef0,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   80493c0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    805241a <fchmod@plt+0x8b3a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     80527ba <fchmod@plt+0x8eda>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    80527b0 <fchmod@plt+0x8ed0>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8052230 <fchmod@plt+0x8950>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     8052812 <fchmod@plt+0x8f32>
add    $0x1,%eax
cmp    $0xa,%eax
jne    8052800 <fchmod@plt+0x8f20>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8052230 <fchmod@plt+0x8950>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80527f0 <fchmod@plt+0x8f10>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x8054cfe,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x8053517,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049720 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x8054d13,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
movl   $0x8054f2c,0xc(%esp)
movl   $0x805358c,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8049720 <__printf_chk@plt>
mov    0x8058400,%ebx
movl   $0x5,0x8(%esp)
movl   $0x8054f50,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80495c0 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049540 <malloc@plt>
test   %eax,%eax
je     8052959 <fchmod@plt+0x9079>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     8052954 <fchmod@plt+0x9074>
lea    0x0(%esi),%esi
call   8052bb0 <fchmod@plt+0x92d0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     8052999 <fchmod@plt+0x90b9>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8052940 <fchmod@plt+0x9060>
call   8052bb0 <fchmod@plt+0x92d0>
xchg   %ax,%ax
jmp    8052940 <fchmod@plt+0x9060>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     80529d8 <fchmod@plt+0x90f8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049520 <realloc@plt>
test   %eax,%eax
je     80529eb <fchmod@plt+0x910b>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     80529c0 <fchmod@plt+0x90e0>
mov    %eax,(%esp)
call   8049340 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     80529d0 <fchmod@plt+0x90f0>
call   8052bb0 <fchmod@plt+0x92d0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     8052a33 <fchmod@plt+0x9153>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    80529b0 <fchmod@plt+0x90d0>
call   8052bb0 <fchmod@plt+0x92d0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     8052a80 <fchmod@plt+0x91a0>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    8052a98 <fchmod@plt+0x91b8>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    80529b0 <fchmod@plt+0x90d0>
xchg   %ax,%ax
test   %ecx,%ecx
jne    8052a69 <fchmod@plt+0x9189>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    8052a69 <fchmod@plt+0x9189>
call   8052bb0 <fchmod@plt+0x92d0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     8052ad8 <fchmod@plt+0x91f8>
cmp    $0xaaaaaaa9,%eax
ja     8052ae4 <fchmod@plt+0x9204>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    80529b0 <fchmod@plt+0x90d0>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    8052ac0 <fchmod@plt+0x91e0>
call   8052bb0 <fchmod@plt+0x92d0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8052940 <fchmod@plt+0x9060>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80496b0 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80498c0 <calloc@plt>
test   %eax,%eax
je     8052b3f <fchmod@plt+0x925f>
add    $0x1c,%esp
ret
nop
call   8052bb0 <fchmod@plt+0x92d0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   8052940 <fchmod@plt+0x9060>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8049350 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049620 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   8052b50 <fchmod@plt+0x9270>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x8054fef,0x4(%esp)
movl   $0x0,(%esp)
call   80493c0 <dcgettext@plt>
mov    0x80583a0,%edx
movl   $0x8054876,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   80494f0 <error@plt>
call   8049850 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
test   %eax,%eax
je     8052c48 <fchmod@plt+0x9368>
cmp    $0xa,%eax
je     8052c18 <fchmod@plt+0x9338>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    (%edx),%edx
mov    $0x8055000,%edi
mov    $0xa,%ecx
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8052c0f <fchmod@plt+0x932f>
mov    %edx,(%esp)
call   80497b0 <freecon@plt>
call   80496d0 <__errno_location@plt>
movl   $0x3d,(%eax)
mov    $0xffffffff,%eax
jmp    8052c0f <fchmod@plt+0x932f>
lea    0x0(%esi,%eiz,1),%esi
call   80496d0 <__errno_location@plt>
movl   $0x5f,(%eax)
mov    $0xffffffff,%eax
jmp    8052c0f <fchmod@plt+0x932f>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80495e0 <getfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    8052c00 <fchmod@plt+0x9320>
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049530 <lgetfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    8052c00 <fchmod@plt+0x9320>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049420 <fgetfilecon@plt>
add    $0x18,%esp
mov    %ebx,%edx
pop    %ebx
jmp    8052c00 <fchmod@plt+0x9320>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    0x4(%esp),%ecx
cmp    $0xffffffff,%eax
mov    %edx,0x8(%esp)
je     8052d00 <fchmod@plt+0x9420>
mov    %eax,0x4(%esp)
jmp    80498e0 <fchmod@plt>
xchg   %ax,%ax
mov    %ecx,0x4(%esp)
jmp    8049840 <chmod@plt>
lea    0x0(%esi,%eiz,1),%esi
jmp    8052ce0 <fchmod@plt+0x9400>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x20(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8052ce0 <fchmod@plt+0x9400>
test   %eax,%eax
mov    %eax,%ebx
je     8052d8f <fchmod@plt+0x94af>
mov    %esi,(%esp)
call   8052210 <fchmod@plt+0x8930>
movl   $0x5,0x8(%esp)
movl   $0x805500a,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   80493c0 <dcgettext@plt>
mov    %eax,%esi
call   80496d0 <__errno_location@plt>
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   80494f0 <error@plt>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049d50 <fchmod@plt+0x470>
add    $0x5255,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xfc(%ebx),%esi
call   8049280 <_init>
lea    -0x100(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     8052df9 <fchmod@plt+0x9519>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x100(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    8052dd8 <fchmod@plt+0x94f8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8052e10 <fchmod@plt+0x9530>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
push   %ebx
sub    $0x8,%esp
call   8049d50 <fchmod@plt+0x470>
add    $0x51e3,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %dh,0x65(%ebx)
and    %ch,%fs:0x6f(%eax)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x68,%al
je     8052ed3 <_IO_stdin_used+0x8f>
jo     8052e9b <_IO_stdin_used+0x57>
das
das
ja     8052edc <_IO_stdin_used+0x98>
ja     8052e95 <_IO_stdin_used+0x51>
outsb  %ds:(%si),(%dx)
jne    8052e99 <_IO_stdin_used+0x55>
outsl  %ds:(%esi),(%dx)
jb     8052ed5 <_IO_stdin_used+0x91>
das
jae    8052ee0 <_IO_stdin_used+0x9c>
data16
je     8052eeb <_IO_stdin_used+0xa7>
popa
jb     8052edc <_IO_stdin_used+0x98>
das
jae    8052edf <_IO_stdin_used+0x9b>
fs
das
ds or  %cs:%ds:0x65(%edi),%al
outsb  %ds:(%esi),(%dx)
gs
jb     8052ee6 <_IO_stdin_used+0xa2>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8052eac <_IO_stdin_used+0x68>
jne    8052f01 <_IO_stdin_used+0xbd>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     8052f12 <_IO_stdin_used+0xce>
popa
jb     8052f03 <_IO_stdin_used+0xbf>
cmp    (%eax),%ah
cmp    $0x68,%al
je     8052f18 <_IO_stdin_used+0xd4>
jo     8052ee0 <_IO_stdin_used+0x9c>
das
das
ja     8052f21 <_IO_stdin_used+0xdd>
ja     8052eda <_IO_stdin_used+0x96>
outsb  %ds:(%si),(%dx)
jne    8052ede <_IO_stdin_used+0x9a>
outsl  %ds:(%esi),(%dx)
jb     8052f1a <_IO_stdin_used+0xd6>
das
addr16
gs
je     8052f20 <_IO_stdin_used+0xdc>
gs
insb   (%dx),%es:(%edi)
jo     8052eeb <_IO_stdin_used+0xa7>
ds or  %cs:%ds:(%eax),%al
inc    %ebp
sub    $0x6c69616d,%eax
and    %ah,0x75(%edx)
and    %dh,0x65(%bp,%si)
jo     8052f3e <_IO_stdin_used+0xfa>
jb     8052f45 <_IO_stdin_used+0x101>
jae    8052ef3 <_IO_stdin_used+0xaf>
je     8052f44 <_IO_stdin_used+0x100>
cmp    (%eax),%ah
cmp    $0x25,%al
jae    8052f19 <_IO_stdin_used+0xd5>
or     %cs:0x65(%edx),%al
and    %dh,0x75(%ebx)
jb     8052f49 <_IO_stdin_used+0x105>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6564756c,0x63(%esi),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6f(%edi)
jb     8052f5c <_IO_stdin_used+0x118>
and    %ah,0x60(%eax)
and    $0x20272773,%eax
jae    8052f71 <_IO_stdin_used+0x12d>
insl   (%dx),%es:(%edi)
gs
ja     8052f6e <_IO_stdin_used+0x12a>
gs
jb     8052f6e <_IO_stdin_used+0x12a>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x60(%eax)
push   %ebx
jne    8052f78 <_IO_stdin_used+0x134>
push   $0x65
arpl   %si,0x27(%edx,%edi,1)
daa
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
push   %ebp
jae    8052f8c <_IO_stdin_used+0x148>
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %bh,%cs:0x73(%ebx)
arpl   %si,0x69(%edx)
jo     8052fb9 <_IO_stdin_used+0x175>
sub    $0x796c6e6f,%eax
sub    $0x6e2d6669,%eax
outsl  %ds:(%esi),(%dx)
sub    $0x6568746f,%eax
jb     8052f84 <_IO_stdin_used+0x140>
jae    8052fbc <_IO_stdin_used+0x178>
jb     8052fc4 <_IO_stdin_used+0x180>
jo     8052fd1 <_IO_stdin_used+0x18d>
jge    8052f7f <_IO_stdin_used+0x13b>
pop    %ebx
imul   $0x662d7475,0x70(%esi),%ebp
imul   $0xa2e2e2e,0x5d(%ebp,%eiz,2),%ebp
or     (%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x2d202c6e
sub    $0x65697571,%eax
je     8052fae <_IO_stdin_used+0x16a>
and    %ch,0x6c69732d
outsb  %gs:(%esi),(%dx)
je     8052f96 <_IO_stdin_used+0x152>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ebx)
jo     8053011 <_IO_stdin_used+0x1cd>
jb     8053008 <_IO_stdin_used+0x1c4>
jae    8053018 <_IO_stdin_used+0x1d4>
and    %ah,0x75(%ecx)
je     8053019 <_IO_stdin_used+0x1d5>
insl   (%dx),%es:(%edi)
popa
je     8053017 <_IO_stdin_used+0x1d3>
arpl   %sp,(%eax)
jo     8053024 <_IO_stdin_used+0x1e0>
imul   $0x20676e69,0x74(%esi),%ebp
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%eax)
je     8053034 <_IO_stdin_used+0x1f0>
gs
jb     8053031 <_IO_stdin_used+0x1ed>
and    %dh,0x70(%ebx)
popa
arpl   %sp,0xa(%ebp)
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x63732065,%eax
jb     805303e <_IO_stdin_used+0x1fa>
jo     805304b <_IO_stdin_used+0x207>
sub    $0x20,%al
sub    $0x7078652d,%eax
jb     8053045 <_IO_stdin_used+0x201>
jae    8053055 <_IO_stdin_used+0x211>
imul   $0x7263733d,0x6e(%edi),%ebp
imul   $0x2020200a,0x74(%eax),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
fs and %dh,%fs:0x65(%eax,%ebp,2)
and    %dh,0x63(%ebx)
jb     8053073 <_IO_stdin_used+0x22f>
jo     8053080 <_IO_stdin_used+0x23c>
and    %dh,0x20(%edi,%ebp,2)
je     805307a <_IO_stdin_used+0x236>
and    %ah,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    805303d <_IO_stdin_used+0x1f9>
je     805308e <_IO_stdin_used+0x24a>
and    %ah,0x65(%edx)
and    %ah,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ch,0x63732066
jb     80530a2 <_IO_stdin_used+0x25e>
jo     80530af <_IO_stdin_used+0x26b>
sub    $0x656c6966,%eax
sub    $0x20,%al
sub    $0x6c69662d,%eax
gs
cmp    $0x69726373,%eax
jo     80530c3 <_IO_stdin_used+0x27f>
sub    $0x656c6966,%eax
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
popa
fs and %dh,%fs:0x65(%eax,%ebp,2)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80530d8 <_IO_stdin_used+0x294>
outsb  %ds:(%esi),(%dx)
je     80530e9 <_IO_stdin_used+0x2a5>
and    %ch,0x66(%edi)
and    %dh,0x63(%ebx)
jb     80530e7 <_IO_stdin_used+0x2a3>
jo     80530f4 <_IO_stdin_used+0x2b0>
sub    $0x656c6966,%eax
and    %dh,0x20(%edi,%ebp,2)
je     80530f3 <_IO_stdin_used+0x2af>
and    %ah,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
jae    80530b6 <_IO_stdin_used+0x272>
je     8053107 <_IO_stdin_used+0x2c3>
and    %ah,0x65(%edx)
and    %ah,0x78(%ebp)
arpl   %si,%gs:0x74(%ebp)
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x6c6f662d,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80530e0 <_IO_stdin_used+0x29c>
jae    805312e <_IO_stdin_used+0x2ea>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x20200a73,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80530f4 <_IO_stdin_used+0x2b0>
jae    805314f <_IO_stdin_used+0x30b>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x68772073,0x6b(%esi),%ebp
outsb  %gs:(%esi),(%dx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    8053153 <_IO_stdin_used+0x30f>
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%bx,%di)
and    %dh,0x6c(%eax)
popa
arpl   %sp,0xa(%ebp)
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x55535b69,%eax
inc    %esi
inc    %esi
dec    %ecx
pop    %eax
pop    %ebp
sub    $0x20,%al
sub    $0x2d6e692d,%eax
jo     8053179 <_IO_stdin_used+0x335>
popa
arpl   %sp,0x5b(%ebp)
cmp    $0x46465553,%eax
dec    %ecx
pop    %eax
pop    %ebp
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs imul $0x73656c69,%fs:%gs:0x66(%eax,%eiz,1),%esi
73
and    %ch,0x6e(%ecx)
and    %dh,0x6c(%eax)
popa
arpl   %sp,0x20(%ebp)
sub    %ch,0x61(%ebp)
imul   $0x20,0x73(%ebp),%esp
bound  %esp,0x63(%ecx)
imul   $0x20,0x70(%ebp),%esi
imul   $0x46465553,0x20(%esi),%esp
dec    %ecx
pop    %eax
and    %dh,0x75(%ebx)
jo     80531cb <_IO_stdin_used+0x387>
insb   (%dx),%es:(%edi)
imul   $0xa29,0x64(%ebp),%esp
add    %ah,(%eax)
and    %ch,0x2c4e206c
and    %ch,0x6e696c2d
gs
sub    $0x676e656c,%eax
je     80531e1 <_IO_stdin_used+0x39d>
cmp    $0x20200a4e,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
jns    80531b5 <_IO_stdin_used+0x371>
je     80531ff <_IO_stdin_used+0x3bb>
and    %ah,%gs:0x73(%ebp,%eiz,2)
imul   $0x696c2064,0x65(%edx),%esi
outsb  %ds:(%esi),(%dx)
gs
sub    $0x70617277,%eax
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 8053219 <_IO_stdin_used+0x3d5>
and    %ah,0x6f(%esi)
jb     80531d6 <_IO_stdin_used+0x392>
je     8053220 <_IO_stdin_used+0x3dc>
and    %ah,%gs:0x6c(%eax)
daa
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
or     %fs:(%eax),%al
add    %ah,(%eax)
and    %ch,0x736f702d
imul   $0x20202020,0xa(%eax),%edi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %al,0x4e(%edi)
push   %ebp
and    %ah,0x78(%ebp)
je     805325c <_IO_stdin_used+0x418>
outsb  %ds:(%esi),(%dx)
jae    8053263 <_IO_stdin_used+0x41f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805322c <_IO_stdin_used+0x3e8>
or     (%eax),%al
and    %ah,(%eax)
sub    $0x2d202c72,%eax
sub    $0x65676572,%eax
js     805327e <_IO_stdin_used+0x43a>
sub    $0x65747865,%eax
outsb  %ds:(%esi),(%dx)
fs gs or %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jne    805329e <_IO_stdin_used+0x45a>
and    %ah,%gs:0x78(%ebp)
je     8053296 <_IO_stdin_used+0x452>
outsb  %ds:(%esi),(%dx)
fs gs and %dh,%fs:%gs:0x65(%edx)
addr16 jne 80532a7 <_IO_stdin_used+0x463>
popa
jb     805325e <_IO_stdin_used+0x41a>
gs
js     80532b1 <_IO_stdin_used+0x46d>
jb     80532a8 <_IO_stdin_used+0x464>
jae    80532b8 <_IO_stdin_used+0x474>
imul   $0x6e692073,0x6e(%edi),%ebp
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x63(%ebx)
jb     80532be <_IO_stdin_used+0x47a>
jo     80532cb <_IO_stdin_used+0x487>
or     %cs:(%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
sub    $0x2d202c73,%eax
sub    $0x61706573,%eax
jb     80532cb <_IO_stdin_used+0x487>
je     80532d1 <_IO_stdin_used+0x48d>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %bp,0x6e(%edi)
jae    80532ec <_IO_stdin_used+0x4a8>
fs
gs
jb     80532a7 <_IO_stdin_used+0x463>
imul   $0x6120,0x73(%ebp,%eiz,2),%bp
jae    80532b0 <_IO_stdin_used+0x46c>
jae    80532f7 <_IO_stdin_used+0x4b3>
jo     80532f5 <_IO_stdin_used+0x4b1>
jb     80532f7 <_IO_stdin_used+0x4b3>
je     80532fd <_IO_stdin_used+0x4b9>
and    %dh,0x61(%edx)
je     8053305 <_IO_stdin_used+0x4c1>
gs
jb     80532c0 <_IO_stdin_used+0x47c>
je     805330a <_IO_stdin_used+0x4c6>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
jae    8053315 <_IO_stdin_used+0x4d1>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     805331f <_IO_stdin_used+0x4db>
outsb  %ds:(%esi),(%dx)
jne    8053328 <_IO_stdin_used+0x4e4>
jne    805332e <_IO_stdin_used+0x4ea>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x74(%bp,%di)
jb     805333b <_IO_stdin_used+0x4f7>
popa
insl   (%dx),%es:(%edi)
or     %cs:(%eax),%al
add    %ah,(%eax)
and    %ch,0x2d202c75
sub    $0x75626e75,%eax
data16
data16
gs
jb     8053352 <_IO_stdin_used+0x50e>
or     %fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ch,%fs:0x69(%ebp)
outsb  %ds:(%esi),(%dx)
imul   $0x6d61206c,0x61(%ebp),%ebp
outsl  %ds:(%esi),(%dx)
jne    8053380 <_IO_stdin_used+0x53c>
je     8053387 <_IO_stdin_used+0x543>
and    %ch,0x66(%edi)
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6e(%ecx)
jo     805339f <_IO_stdin_used+0x55b>
je     805334c <_IO_stdin_used+0x508>
imul   $0x6120,0x73(%ebp,%eiz,2),%bp
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6c(%esi)
jne    80533ad <_IO_stdin_used+0x569>
push   $0x2020200a
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
je     80533b7 <_IO_stdin_used+0x573>
and    %ch,%gs:0x75(%edi)
je     80533c5 <_IO_stdin_used+0x581>
jne    80533cb <_IO_stdin_used+0x587>
and    %ah,0x75(%edx)
data16
data16
gs
jb     80533d2 <_IO_stdin_used+0x58e>
and    %ch,0x6f(%ebp)
jb     80533c9 <_IO_stdin_used+0x585>
and    %ch,0x66(%edi)
je     80533ce <_IO_stdin_used+0x58a>
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
and    %ah,(%eax)
sub    $0x2d202c7a,%eax
sub    $0x6c6c756e,%eax
sub    $0x61746164,%eax
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    80533f6 <_IO_stdin_used+0x5b2>
jo     80533f4 <_IO_stdin_used+0x5b0>
jb     80533f6 <_IO_stdin_used+0x5b2>
je     80533fc <_IO_stdin_used+0x5b8>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    80533be <_IO_stdin_used+0x57a>
bound  %edi,0x20(%ecx)
dec    %esi
push   %ebp
dec    %esp
and    %ah,0x68(%ebx)
popa
jb     805340b <_IO_stdin_used+0x5c7>
arpl   %si,0x72(%ebp,%eiz,2)
jae    80533ba <_IO_stdin_used+0x576>
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     80533e1 <_IO_stdin_used+0x59d>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     8053437 <_IO_stdin_used+0x5f3>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    805345a <_IO_stdin_used+0x616>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    805346c <_IO_stdin_used+0x628>
jo     805346f <_IO_stdin_used+0x62b>
je     805341c <_IO_stdin_used+0x5d8>
jbe    8053463 <_IO_stdin_used+0x61f>
jb     8053473 <_IO_stdin_used+0x62f>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8053477 <_IO_stdin_used+0x633>
popa
je     8053476 <_IO_stdin_used+0x632>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x490a0000,0x0(%edx,%ecx,1),%esi
data16
and    %ch,0x6f(%esi)
and    %ch,0x2d202c65
sub    $0x72707865,%eax
gs
jae    80534a3 <_IO_stdin_used+0x65f>
imul   $0x662d202c,0x6e(%edi),%ebp
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     805345c <_IO_stdin_used+0x618>
sub    $0x6c69662d,%eax
and    %ch,%gs:0x70(%edi)
je     80534b0 <_IO_stdin_used+0x66c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x69(%edi)
jbe    80534b6 <_IO_stdin_used+0x672>
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
je     80534be <_IO_stdin_used+0x67a>
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%esi)
jb     80534d4 <_IO_stdin_used+0x690>
je     805346d <_IO_stdin_used+0x629>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x6974706f,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
addr16 jne 80534e0 <_IO_stdin_used+0x69c>
outsb  %gs:(%esi),(%dx)
je     8053497 <_IO_stdin_used+0x653>
imul   $0x656b6174,0x20(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %ah,0x73(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
and    %dh,%fs:0x63(%ebx)
jb     80534f8 <_IO_stdin_used+0x6b4>
jo     8053505 <_IO_stdin_used+0x6c1>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x72707265,0x74(%esi),%ebp
gs
je     80534cd <_IO_stdin_used+0x689>
and    %ah,(%eax)
inc    %ecx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     0x65(%edx),%dh
insl   (%dx),%es:(%edi)
popa
imul   $0x6120676e,0x69(%esi),%ebp
jb     8053519 <_IO_stdin_used+0x6d5>
jne    8053521 <_IO_stdin_used+0x6dd>
outsb  %gs:(%esi),(%dx)
je     805352b <_IO_stdin_used+0x6e7>
and    %ah,0x72(%ecx)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    80534e3 <_IO_stdin_used+0x69f>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x6e(%ecx)
jo     805353f <_IO_stdin_used+0x6fb>
je     80534ec <_IO_stdin_used+0x6a8>
imul   $0x203b,0x73(%ebp,%eiz,2),%bp
imul   $0x69206f6e,0x20(%esi),%esp
outsb  %ds:(%esi),(%dx)
jo     8053552 <_IO_stdin_used+0x70e>
je     80534ff <_IO_stdin_used+0x6bb>
imul   $0x6120,0x73(%ebp,%eiz,2),%bp
jb     805354d <_IO_stdin_used+0x709>
or     0x70(%ebx),%dh
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6874202c,0x64(%ebp),%esp
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x74(%ebx)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8053569 <_IO_stdin_used+0x725>
and    %ch,0x6e(%ecx)
jo     805357f <_IO_stdin_used+0x73b>
je     805352c <_IO_stdin_used+0x6e8>
imul   $0x64616572,0x20(%ebx),%esi
or     %cs:(%edx),%cl
add    %ah,0x75(%edx)
addr16 sub $0x40646573,%eax
outsb  %ds:(%si),(%dx)
jne    8053551 <_IO_stdin_used+0x70d>
outsl  %ds:(%esi),(%dx)
jb     805358d <_IO_stdin_used+0x749>
add    %al,0x4f(%ebx)
dec    %esp
push   %ebx
add    %ch,(%edi)
jne    80535a2 <_IO_stdin_used+0x75e>
jb     8053560 <_IO_stdin_used+0x71c>
jae    805359b <_IO_stdin_used+0x757>
popa
jb     805359b <_IO_stdin_used+0x757>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dl,%gs:0x4f(%eax)
push   %ebx
dec    %ecx
pop    %eax
dec    %esp
pop    %ecx
pop    %edi
inc    %ebx
dec    %edi
push   %edx
push   %edx
inc    %ebp
inc    %ebx
push   %esp
add    %ch,(%edx)
add    %dh,0x62(%edx)
add    %dh,0x62(%edi)
add    %dl,0x61(%eax)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %al,0x6f(%edx)
outsb  %ds:(%esi),(%dx)
jp     80535ca <_IO_stdin_used+0x786>
outsb  %ds:(%esi),(%dx)
imul   $0x206e654b,(%eax),%eax
push   %eax
imul   $0x696e69,0x7a(%edx),%edi
push   %esp
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %cl,0x72(%edi,%ebp,2)
add    %cl,%fs:0x61(%edx)
jns    805359d <_IO_stdin_used+0x759>
inc    %esi
outsb  %gs:(%esi),(%dx)
insb   (%dx),%es:(%edi)
popa
jae    80535f3 <_IO_stdin_used+0x7af>
outsb  %ds:(%esi),(%dx)
add    %dh,(%esi,%ebp,1)
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %dh,0x65(%ebx)
add    %ah,%fs:0x73(%edx)
outsb  %ds:(%esi),(%dx)
jb     8053613 <_IO_stdin_used+0x7cf>
jne    80535e0 <_IO_stdin_used+0x79c>
cmp    %gs:0x3a(%esi),%ah
insb   (%dx),%es:(%edi)
cmp    0x3a(%ecx),%ch
cmp    0x3a(%esi),%dl
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
popa
jb     8053626 <_IO_stdin_used+0x7e2>
add    %dh,0x65(%edx)
addr16
gs
js     8053624 <_IO_stdin_used+0x7e0>
sub    $0x65747865,%eax
outsb  %ds:(%esi),(%dx)
fs gs add %ah,%fs:%gs:0x78(%ebp)
jo     8053634 <_IO_stdin_used+0x7f0>
gs
jae    8053638 <_IO_stdin_used+0x7f4>
imul   $0x6c696600,0x6e(%edi),%ebp
add    %ch,%gs:0x6e(%ecx)
sub    $0x63616c70,%eax
add    %ch,%gs:0x6e(%ecx,%ebp,2)
gs
sub    $0x676e656c,%eax
je     805364a <_IO_stdin_used+0x806>
add    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61746164,%eax
add    %bh,0x65(%edx)
jb     8053660 <_IO_stdin_used+0x81c>
sub    $0x6d726574,%eax
imul   $0x646574,0x61(%esi),%ebp
jno    8053674 <_IO_stdin_used+0x830>
imul   $0x736f7000,0x74(%ebp),%esp
imul   $0x656c6973,0x0(%eax),%edi
outsb  %ds:(%esi),(%dx)
je     8053610 <_IO_stdin_used+0x7cc>
jae    8053677 <_IO_stdin_used+0x833>
jo     8053675 <_IO_stdin_used+0x831>
jb     8053677 <_IO_stdin_used+0x833>
je     805367d <_IO_stdin_used+0x839>
add    %dh,0x6e(%ebp)
bound  %esi,0x66(%ebp)
data16
gs
jb     8053687 <_IO_stdin_used+0x843>
add    %dh,%fs:0x65(%esi)
jb     805369b <_IO_stdin_used+0x857>
imul   $0x6c656800,0x6e(%edi),%ebp
jo     8053631 <_IO_stdin_used+0x7ed>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8053665 <_IO_stdin_used+0x821>
jae    80536b3 <_IO_stdin_used+0x86f>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x770073,0x6b(%esi),%ebp
add    %bl,(%edi)
pushf
add    $0x8,%al
adc    0x49c3708(%esp,%eax,1),%ebx
or     %dh,(%edi)
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
cli
fwait
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
(bad)
fwait
add    $0x8,%al
cmpsl  %es:(%edi),%ds:(%esi)
fwait
add    $0x8,%al
aaa
pushf
add    $0x8,%al
mov    0x6108049b,%al
fwait
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
cmp    -0x63c8f7fc(%ebx),%bl
add    $0x8,%al
fwait
fwait
add    $0x8,%al
aaa
pushf
add    $0x8,%al
pop    %ds
fwait
add    $0x8,%al
aaa
pushf
add    $0x8,%al
pop    %ds
pushf
add    $0x8,%al
adc    -0x63c8f7fc(%ebx),%ebx
add    $0x8,%al
pop    %es
fwait
add    $0x8,%al
xor    $0x9a,%al
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
aaa
pushf
add    $0x8,%al
sub    0x61430804(%edx),%ebx
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x61(%ebx)
jbe    805378a <_IO_stdin_used+0x946>
push   $0x29287261
and    %dh,0x69(%edi)
je     8053799 <_IO_stdin_used+0x955>
and    %dh,0x6e(%ebp)
gs
js     80537a7 <_IO_stdin_used+0x963>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x75(%eax)
jae    80537a9 <_IO_stdin_used+0x965>
bound  %esp,0x63(%ecx)
imul   $0x28,(%eax),%esp
and    $0x2978,%eax
and    $0x2d203a73,%eax
and    %ah,%gs:0x78(%ebp)
jo     80537c9 <_IO_stdin_used+0x985>
gs
jae    80537cd <_IO_stdin_used+0x989>
imul   $0x6c252320,0x6e(%edi),%ebp
jne    805378f <_IO_stdin_used+0x94b>
and    %ah,0x68(%ebx)
popa
jb     8053789 <_IO_stdin_used+0x945>
and    $0x203a756c,%eax
and    $0xa73,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     805379a <_IO_stdin_used+0x956>
imul   $0x6c20,0x64(%esi),%bp
popa
bound  %esp,0x6c(%ebp)
and    %ah,0x6f(%esi)
jb     80537a9 <_IO_stdin_used+0x965>
push   $0x75
insl   (%dx),%es:(%edi)
jo     80537ae <_IO_stdin_used+0x96a>
je     80537ff <_IO_stdin_used+0x9bb>
and    %ah,0x25(%eax)
jae    80537bc <_IO_stdin_used+0x978>
add    %ah,0x66203a73
imul   $0x6c207325,0x20(%ebp,%eiz,2),%ebp
imul   $0x756c2520,0x65(%esi),%ebp
cmp    (%eax),%ah
and    $0x34000a73,%eax
xor    %al,%cs:(%eax)
jb     805382a <_IO_stdin_used+0x9e6>
add    %ch,(%edi)
fs
gs
jbe    80537eb <_IO_stdin_used+0x9a7>
jae    8053832 <_IO_stdin_used+0x9ee>
imul   $0x7665642f,%fs:0x0(%esi),%ebp
das
jae    805383d <_IO_stdin_used+0x9f9>
outsl  %fs:(%esi),(%dx)
jne    8053841 <_IO_stdin_used+0x9fd>
add    %ch,(%edi)
fs
gs
jbe    8053802 <_IO_stdin_used+0x9be>
jae    8053849 <_IO_stdin_used+0xa05>
fs
gs
jb     805384b <_IO_stdin_used+0xa07>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,%ah
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
in     $0xae,%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
in     $0xae,%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
leave
scas   %es:(%edi),%al
add    $0x8,%al
dec    %edi
scas   %es:(%edi),%al
add    $0x8,%al
imul   (%eax,%ecx,1),%eax
nop
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %al,-0x60f7fb50(%ecx)
mov    $0x4,%al
or     %bl,-0x50(%ecx)
add    $0x8,%al
dec    %edi
mov    $0x4,%al
or     %bl,0x400804b0(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %bl,-0x6ff7fb50(%edi)
mov    $0x4,%al
or     %dh,(%esi)
mov    $0x4,%al
or     %bl,-0x60f7fb50(%edi)
mov    $0x4,%al
or     %ah,(%edi)
mov    $0x4,%al
or     %bl,0x180804b0(%edi)
mov    $0x4,%al
or     %bl,0x90804b0(%edi)
mov    $0x4,%al
or     %bl,0x3d0804b0(%edi)
scas   %es:(%edi),%eax
add    $0x8,%al
sub    %bh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
fdivrs -0x4c77f7fc(%edx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4657f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
jo     8053b0f <_IO_stdin_used+0xccb>
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
jo     8053b2b <_IO_stdin_used+0xce7>
add    $0x8,%al
mov    %dh,-0x468ff7fc(%ebx)
add    $0x8,%al
jo     8053b37 <_IO_stdin_used+0xcf3>
add    $0x8,%al
jo     8053b3b <_IO_stdin_used+0xcf7>
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4b80f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x468ff7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x468ff7fc(%ebx)
add    $0x8,%al
js     8053b5a <_IO_stdin_used+0xd16>
add    $0x8,%al
push   $0x880804ba
mov    $0x4,%bl
or     %al,-0x46(%eax)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
and    %bh,-0x4c77f7fc(%edx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
loopne 8053b9f <_IO_stdin_used+0xd5b>
add    $0x8,%al
inc    %eax
mov    $0xb9e00804,%edx
add    $0x8,%al
jo     8053bab <_IO_stdin_used+0xd67>
add    $0x8,%al
mov    $0xb6,%al
add    $0x8,%al
mov    %dh,-0x468ff7fc(%ebx)
add    $0x8,%al
jo     8053bbb <_IO_stdin_used+0xd77>
add    $0x8,%al
loopne 8053bbf <_IO_stdin_used+0xd7b>
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
jg     8053bc6 <_IO_stdin_used+0xd82>
add    $0x8,%al
mov    %dh,-0x468ff7fc(%ebx)
add    $0x8,%al
mov    %dh,-0x468ff7fc(%ebx)
add    $0x8,%al
js     8053bda <_IO_stdin_used+0xd96>
add    $0x8,%al
js     8053be0 <_IO_stdin_used+0xd9c>
add    $0x8,%al
sbb    %dh,-0x45bff7fc(%ebp)
add    $0x8,%al
mov    %dh,-0x4b2ff7fc(%ebx)
add    $0x8,%al
and    %bh,-0x468ff7fc(%edx)
add    $0x8,%al
clc
mov    $0x4,%dh
or     %dh,-0x47(%eax)
add    $0x8,%al
(bad)
mov    $0x4,%dh
or     %cl,-0x77f7fb4d(%eax)
mov    $0xb4480804,%edx
add    $0x8,%al
jno    8053c11 <_IO_stdin_used+0xdcd>
add    $0x8,%al
jno    8053c15 <_IO_stdin_used+0xdd1>
add    $0x8,%al
jno    8053c19 <_IO_stdin_used+0xdd5>
add    $0x8,%al
jno    8053c1d <_IO_stdin_used+0xdd9>
add    $0x8,%al
jno    8053c21 <_IO_stdin_used+0xddd>
add    $0x8,%al
jno    8053c25 <_IO_stdin_used+0xde1>
add    $0x8,%al
jno    8053c29 <_IO_stdin_used+0xde5>
add    $0x8,%al
jno    8053c2d <_IO_stdin_used+0xde9>
add    $0x8,%al
mov    %dh,-0x4c8ef7fc(%ebx)
add    $0x8,%al
jno    8053c39 <_IO_stdin_used+0xdf5>
add    $0x8,%al
jno    8053c3d <_IO_stdin_used+0xdf9>
add    $0x8,%al
jno    8053c41 <_IO_stdin_used+0xdfd>
add    $0x8,%al
jno    8053c45 <_IO_stdin_used+0xe01>
add    $0x8,%al
mov    %dh,-0x4c8ef7fc(%ebx)
add    $0x8,%al
jno    8053c51 <_IO_stdin_used+0xe0d>
add    $0x8,%al
jno    8053c55 <_IO_stdin_used+0xe11>
add    $0x8,%al
jno    8053c59 <_IO_stdin_used+0xe15>
add    $0x8,%al
mov    %dh,-0x4c77f7fc(%ebx)
add    $0x8,%al
jno    8053c65 <_IO_stdin_used+0xe21>
add    $0x8,%al
mov    %dh,-0x4c8ef7fc(%ebx)
add    $0x8,%al
jno    8053c71 <_IO_stdin_used+0xe2d>
add    $0x8,%al
mov    %dh,-0x4c8ef7fc(%ebx)
add    $0x8,%al
jno    8053c7d <_IO_stdin_used+0xe39>
add    $0x8,%al
jno    8053c81 <_IO_stdin_used+0xe3d>
add    $0x8,%al
jno    8053c85 <_IO_stdin_used+0xe41>
add    $0x8,%al
jno    8053c89 <_IO_stdin_used+0xe45>
add    $0x8,%al
jno    8053c8d <_IO_stdin_used+0xe49>
add    $0x8,%al
jno    8053c91 <_IO_stdin_used+0xe4d>
add    $0x8,%al
jno    8053c95 <_IO_stdin_used+0xe51>
add    $0x8,%al
jno    8053c99 <_IO_stdin_used+0xe55>
add    $0x8,%al
dec    %eax
mov    $0x4,%ah
or     %dh,-0x4d(%ecx)
add    $0x8,%al
jno    8053ca5 <_IO_stdin_used+0xe61>
add    $0x8,%al
jno    8053ca9 <_IO_stdin_used+0xe65>
add    $0x8,%al
mov    %dh,-0x4c8ef7fc(%ebx)
add    $0x8,%al
jno    8053cb5 <_IO_stdin_used+0xe71>
add    $0x8,%al
jno    8053cb9 <_IO_stdin_used+0xe75>
add    $0x8,%al
dec    %eax
mov    $0x4,%ah
or     %dh,-0x4d(%ecx)
add    $0x8,%al
jno    8053cc5 <_IO_stdin_used+0xe81>
add    $0x8,%al
dec    %eax
mov    $0x4,%ah
or     %dh,-0x4d(%ecx)
add    $0x8,%al
jno    8053cd1 <_IO_stdin_used+0xe8d>
add    $0x8,%al
jno    8053cd5 <_IO_stdin_used+0xe91>
add    $0x8,%al
jno    8053cd9 <_IO_stdin_used+0xe95>
add    $0x8,%al
jno    8053cdd <_IO_stdin_used+0xe99>
add    $0x8,%al
dec    %eax
mov    $0x4,%ah
or     %dh,-0x4d(%ecx)
add    $0x8,%al
jno    8053ce9 <_IO_stdin_used+0xea5>
add    $0x8,%al
jno    8053ced <_IO_stdin_used+0xea9>
add    $0x8,%al
mov    %dh,-0x4c8ef7fc(%ebx)
add    $0x8,%al
jno    8053cf9 <_IO_stdin_used+0xeb5>
add    $0x8,%al
jno    8053cfd <_IO_stdin_used+0xeb9>
add    $0x8,%al
mov    %dh,-0x3fc3f7fc(%ebx)
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
cmp    $0xc0,%al
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xc0840804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
xchg   %eax,%ebx
rolb   $0x4a,(%eax,%ecx,1)
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
push   %ds
rolb   $0x4a,(%eax,%ecx,1)
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
js     8053e02 <_IO_stdin_used+0xfbe>
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
dec    %edx
mov    $0xbd4a0804,%ebp
add    $0x8,%al
xor    %al,%al
add    $0x8,%al
sbb    %bh,-0x40e4f7fc(%esi)
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x41e7f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
or     $0x1b0804bf,%eax
mov    $0xbf1b0804,%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x406af7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
lahf
mov    $0xbf9f0804,%edi
add    $0x8,%al
lahf
mov    $0xbf9f0804,%edi
add    $0x8,%al
lahf
mov    $0xbf9f0804,%edi
add    $0x8,%al
lahf
mov    $0xbf9f0804,%edi
add    $0x8,%al
lahf
mov    $0xbf9f0804,%edi
add    $0x8,%al
sbb    -0x41e7f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x4017f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x4002f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x408af7fc(%edi),%edi
add    $0x8,%al
sbb    -0x4081f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x4017f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x4002f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
aas
mov    $0xbf1b0804,%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x41fff7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x40e4f7fc(%edi),%edi
add    $0x8,%al
sbb    -0x406af7fc(%edi),%edi
add    $0x8,%al
add    %al,(%ecx)
add    (%ebx),%al
add    $0x5,%al
push   %es
pop    %es
or     %cl,(%ecx)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
decl   (%edx)
or     -0xf0f2(,%ecx,1),%ecx
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
decl   (%edx)
or     0xf0e(,%ecx,1),%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     805412e <_IO_stdin_used+0x12ea>
jo     8054133 <_IO_stdin_used+0x12ef>
and    %ah,%gs:0x21(%eax)
daa
jae    80540ce <_IO_stdin_used+0x128a>
jne    805413e <_IO_stdin_used+0x12fa>
gs
js     8054143 <_IO_stdin_used+0x12ff>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x2c(%eax)
daa
add    %ch,0x6e(%ecx)
jbe    8054142 <_IO_stdin_used+0x12fe>
insb   (%dx),%es:(%edi)
imul   $0x65676173,0x75(%eax,%eiz,1),%esp
and    %ch,0x66(%edi)
and    %ch,(%ebx)
dec    %esi
and    %ch,0x72(%edi)
and    %bh,0x4e(%esi)
and    %ah,0x73(%ecx)
and    %ah,0x69(%esi)
jb     8054171 <_IO_stdin_used+0x132d>
je     8054120 <_IO_stdin_used+0x12dc>
popa
fs
fs
jb     805416a <_IO_stdin_used+0x1326>
jae    805417a <_IO_stdin_used+0x1336>
add    %dh,0x6e(%ebp)
insl   (%dx),%es:(%edi)
popa
je     8054171 <_IO_stdin_used+0x132d>
push   $0x60206465
jnp    805413c <_IO_stdin_used+0x12f8>
add    %dh,0x6e(%ebp)
gs
js     805418b <_IO_stdin_used+0x1347>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x7d(%eax)
daa
add    %ah,0x78(%ebp)
je     805419b <_IO_stdin_used+0x1357>
popa
and    %ah,0x68(%ebx)
popa
jb     8054191 <_IO_stdin_used+0x134d>
arpl   %si,0x72(%ebp,%eiz,2)
jae    8054156 <_IO_stdin_used+0x1312>
popa
data16
je     805419f <_IO_stdin_used+0x135b>
jb     805415c <_IO_stdin_used+0x1318>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x78(%ebp)
jo     80541ad <_IO_stdin_used+0x1369>
arpl   %si,0x64(%ebp,%eiz,2)
and    %bl,0x61(%eax,%eiz,1)
data16
je     80541b8 <_IO_stdin_used+0x1374>
jb     8054175 <_IO_stdin_used+0x1331>
pusha
popa
daa
sub    $0x20,%al
pusha
arpl   %sp,(%edi)
and    %ch,0x72(%edi)
and    %ah,0x69(%eax)
daa
add    %ah,0x7d(%eax)
daa
and    %ah,0x65(%edi,%ebp,2)
jae    80541dc <_IO_stdin_used+0x1398>
daa
je     8054191 <_IO_stdin_used+0x134d>
ja     80541d4 <_IO_stdin_used+0x1390>
outsb  %ds:(%esi),(%dx)
je     8054196 <_IO_stdin_used+0x1352>
popa
outsb  %ds:(%esi),(%dx)
jns    805419a <_IO_stdin_used+0x1356>
popa
fs
fs
jb     80541e4 <_IO_stdin_used+0x13a0>
jae    80541f4 <_IO_stdin_used+0x13b0>
gs
jae    8054184 <_IO_stdin_used+0x1340>
cmp    (%eax),%ah
outsl  %fs:(%esi),(%dx)
gs
jae    80541f9 <_IO_stdin_used+0x13b5>
daa
je     80541ae <_IO_stdin_used+0x136a>
ja     80541f1 <_IO_stdin_used+0x13ad>
outsb  %ds:(%esi),(%dx)
je     80541b3 <_IO_stdin_used+0x136f>
popa
outsb  %ds:(%esi),(%dx)
jns    80541b7 <_IO_stdin_used+0x1373>
popa
fs
fs
jb     8054201 <_IO_stdin_used+0x13bd>
jae    8054211 <_IO_stdin_used+0x13cd>
gs
jae    80541a1 <_IO_stdin_used+0x135d>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     805421c <_IO_stdin_used+0x13d8>
and    %ah,0x6e(%edi,%ebp,2)
daa
je     80541d0 <_IO_stdin_used+0x138c>
popa
arpl   %sp,0x65(%ebx)
jo     805422a <_IO_stdin_used+0x13e6>
and    %ah,0x6e(%ecx)
jns    80541db <_IO_stdin_used+0x1397>
popa
fs
fs
jb     8054225 <_IO_stdin_used+0x13e1>
jae    8054235 <_IO_stdin_used+0x13f1>
gs
jae    80541c5 <_IO_stdin_used+0x1381>
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    8054202 <_IO_stdin_used+0x13be>
jne    8054257 <_IO_stdin_used+0x1413>
gs
jae    8054207 <_IO_stdin_used+0x13c3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x64(%ecx)
fs
jb     8054255 <_IO_stdin_used+0x1411>
jae    8054265 <_IO_stdin_used+0x1421>
add    %dh,0x6e(%ebp)
je     805425c <_IO_stdin_used+0x1418>
jb     8054266 <_IO_stdin_used+0x1422>
imul   $0x20646574,0x61(%esi),%ebp
popa
fs
fs
jb     805426a <_IO_stdin_used+0x1426>
jae    805427a <_IO_stdin_used+0x1436>
and    %dh,0x65(%edx)
addr16
gs
js     805420e <_IO_stdin_used+0x13ca>
jne    805427e <_IO_stdin_used+0x143a>
je     8054277 <_IO_stdin_used+0x1433>
jb     8054281 <_IO_stdin_used+0x143d>
imul   $0x20646574,0x61(%esi),%ebp
pusha
jae    8054245 <_IO_stdin_used+0x1401>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x6e(%ebp)
je     8054290 <_IO_stdin_used+0x144c>
jb     805429a <_IO_stdin_used+0x1456>
imul   $0x20646574,0x61(%esi),%ebp
pusha
jns    805425e <_IO_stdin_used+0x141a>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x70(%edi)
je     80542b5 <_IO_stdin_used+0x1471>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
pusha
jae    805427c <_IO_stdin_used+0x1438>
add    %ch,0x75(%ebp)
insb   (%dx),%es:(%edi)
je     80542c4 <_IO_stdin_used+0x1480>
jo     80542c9 <_IO_stdin_used+0x1485>
and    %ah,%gs:0x70(%eax)
daa
and    %ch,0x70(%edi)
je     80542d0 <_IO_stdin_used+0x148c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    805428b <_IO_stdin_used+0x1447>
je     80542dc <_IO_stdin_used+0x1498>
and    %ah,0x73(%eax)
daa
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x75(%ebp)
insb   (%dx),%es:(%edi)
je     80542e8 <_IO_stdin_used+0x14a4>
jo     80542ed <_IO_stdin_used+0x14a9>
and    %ah,%gs:0x67(%eax)
daa
and    %ch,0x70(%edi)
je     80542f4 <_IO_stdin_used+0x14b0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80542af <_IO_stdin_used+0x146b>
je     8054300 <_IO_stdin_used+0x14bc>
and    %ah,0x73(%eax)
daa
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x75(%ebp)
insb   (%dx),%es:(%edi)
je     805430c <_IO_stdin_used+0x14c8>
jo     8054311 <_IO_stdin_used+0x14cd>
and    %ch,%gs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x70(%edi)
je     805431b <_IO_stdin_used+0x14d7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jae    80542d6 <_IO_stdin_used+0x1492>
je     8054327 <_IO_stdin_used+0x14e3>
and    %ah,0x73(%eax)
daa
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x70(%edi)
je     8054339 <_IO_stdin_used+0x14f5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x20(%edi,%ebp,2)
pusha
jae    8054300 <_IO_stdin_used+0x14bc>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x61(%ebp)
jns    8054306 <_IO_stdin_used+0x14c2>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     805430a <_IO_stdin_used+0x14c6>
bound  %esp,0x20(%ebp)
jp     8054354 <_IO_stdin_used+0x1510>
jb     8054360 <_IO_stdin_used+0x151c>
add    %dh,0x74(%ebx)
jb     805435f <_IO_stdin_used+0x151b>
outsb  %ds:(%esi),(%dx)
addr16 jae 805431a <_IO_stdin_used+0x14d6>
outsw  %ds:(%esi),(%dx)
jb     805431e <_IO_stdin_used+0x14da>
pusha
jns    8054328 <_IO_stdin_used+0x14e4>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%ecx)
and    %ah,%gs:0x66(%ecx,%ebp,2)
data16
gs
jb     805437a <_IO_stdin_used+0x1536>
outsb  %ds:(%esi),(%dx)
je     8054338 <_IO_stdin_used+0x14f4>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 8054386 <_IO_stdin_used+0x1542>
jae    8054320 <_IO_stdin_used+0x14dc>
fs
gs
insb   (%dx),%es:(%edi)
imul   $0x20726574,0x69(%ebp),%ebp
arpl   %bp,0x61(%eax)
jb     8054390 <_IO_stdin_used+0x154c>
arpl   %si,0x72(%ebp,%eiz,2)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     805435b <_IO_stdin_used+0x1517>
popa
and    %dh,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
gs
sub    $0x65747962,%eax
and    %ah,0x68(%ebx)
popa
jb     80543af <_IO_stdin_used+0x156b>
arpl   %si,0x72(%ebp,%eiz,2)
add    %ah,0x78(%ebp)
jo     80543bc <_IO_stdin_used+0x1578>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x65(%esi)
ja     80543c5 <_IO_stdin_used+0x1581>
jb     8054382 <_IO_stdin_used+0x153e>
jbe    80543c9 <_IO_stdin_used+0x1585>
jb     80543d9 <_IO_stdin_used+0x1595>
imul   $0x20666f20,0x6e(%edi),%ebp
jae    80543d4 <_IO_stdin_used+0x1590>
add    %ch,%fs:0x6e(%ecx)
jbe    80543d6 <_IO_stdin_used+0x1592>
insb   (%dx),%es:(%edi)
imul   $0x65676173,0x75(%eax,%eiz,1),%esp
and    %ch,0x66(%edi)
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x64(%ecx)
fs
jb     80543f1 <_IO_stdin_used+0x15ad>
jae    8054401 <_IO_stdin_used+0x15bd>
and    %dh,(%eax)
add    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
cmp    %fs:(%eax),%ah
pusha
and    $0x69002763,%eax
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x6d(%edi)
jo     805441a <_IO_stdin_used+0x15d6>
gs
je     8054416 <_IO_stdin_used+0x15d2>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x63203a73
popa
outsb  %ds:(%esi),(%dx)
daa
je     80543e4 <_IO_stdin_used+0x15a0>
jb     805442b <_IO_stdin_used+0x15e7>
popa
and    %ah,%fs:0x25203a73
jae    80543da <_IO_stdin_used+0x1596>
add    %ah,0x72(%ebp)
jb     8054444 <_IO_stdin_used+0x1600>
jb     80543f7 <_IO_stdin_used+0x15b3>
imul   $0x70627573,0x20(%esi),%ebp
jb     805444f <_IO_stdin_used+0x160b>
arpl   %sp,0x73(%ebp)
jae    80543e5 <_IO_stdin_used+0x15a1>
and    $0xa,%al
add    %ah,0x6f3330
pop    %esp
or     (%eax),%al
and    $0xa756c,%eax
dec    %ecx
dec    %esi
push   %esp
inc    %ebp
push   %edx
dec    %esi
inc    %ecx
dec    %esp
and    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
cmp    (%eax),%ah
inc    %edx
popa
and    %ah,%fs:0x6d(%ebx)
and    %ah,%fs:0x6f6e0063
and    %ch,0x6e(%ecx)
jo     805448c <_IO_stdin_used+0x1648>
je     8054439 <_IO_stdin_used+0x15f5>
imul   $0x0,0x73(%ebp,%eiz,2),%bp
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
outsb  %fs:(%esi),(%dx)
daa
je     8054449 <_IO_stdin_used+0x1605>
gs imul $0x69203a73,%fs:%gs:0x25(%eax,%eiz,1),%esi
69
jae    8054455 <_IO_stdin_used+0x1611>
popa
and    %dh,0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x6f63006c,0x61(%esi),%ebp
jne    80544b0 <_IO_stdin_used+0x166c>
outsb  %fs:(%esi),(%dx)
daa
je     8054469 <_IO_stdin_used+0x1625>
gs imul $0x6e203a73,%fs:%gs:0x25(%eax,%eiz,1),%esi
6e
outsl  %ds:(%esi),(%dx)
je     8054476 <_IO_stdin_used+0x1632>
popa
and    %dh,0x65(%edx)
addr16 jne 80544c9 <_IO_stdin_used+0x1685>
popa
jb     8054480 <_IO_stdin_used+0x163c>
imul   $0x0,0x0(%ebp,%eiz,2),%bp
add    %ah,0x77203a73
popa
jb     80544de <_IO_stdin_used+0x169a>
imul   $0x6166203a,0x67(%esi),%ebp
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    80544e6 <_IO_stdin_used+0x16a2>
je     80544a3 <_IO_stdin_used+0x165f>
fs
gs
popaw
jne    80544f5 <_IO_stdin_used+0x16b1>
je     80544ab <_IO_stdin_used+0x1667>
imul   $0x7263,0x20(%ebp,%eiz,2),%bp
gs
popa
je     80544ff <_IO_stdin_used+0x16bb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8054503 <_IO_stdin_used+0x16bf>
js     8054514 <_IO_stdin_used+0x16d0>
and    %dh,0x20(%edi,%ebp,2)
and    $0x25203a73,%eax
jae    80544ab <_IO_stdin_used+0x1667>
add    %ah,0x77203a73
popa
jb     8054522 <_IO_stdin_used+0x16de>
imul   $0x6166203a,0x67(%esi),%ebp
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     80544e7 <_IO_stdin_used+0x16a3>
jae    805452e <_IO_stdin_used+0x16ea>
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     805454b <_IO_stdin_used+0x1707>
and    %ch,0x66(%edi)
and    %ah,0x25203a73
jae    80544e2 <_IO_stdin_used+0x169e>
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
outsb  %fs:(%esi),(%dx)
daa
je     805450d <_IO_stdin_used+0x16c9>
outsl  %ds:(%esi),(%dx)
jo     8054555 <_IO_stdin_used+0x1711>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%ebp,%eiz,2)
jo     8054566 <_IO_stdin_used+0x1722>
jb     805455a <_IO_stdin_used+0x1716>
jb     8054574 <_IO_stdin_used+0x1730>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    8054508 <_IO_stdin_used+0x16c4>
dec    %ecx
dec    %esi
push   %esp
inc    %ebp
push   %edx
dec    %esi
inc    %ecx
dec    %esp
and    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
cmp    (%eax),%ah
bound  %esp,0x64(%ecx)
and    %ah,0x64(%ecx)
fs
jb     8054586 <_IO_stdin_used+0x1742>
jae    8054596 <_IO_stdin_used+0x1752>
and    %dh,0x70(%ecx,%edi,2)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %ebx
popa
jae    8054595 <_IO_stdin_used+0x1751>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
jbe    805459b <_IO_stdin_used+0x1757>
jb     80545ab <_IO_stdin_used+0x1767>
imul   $0x6f727020,0x6e(%edi),%ebp
fs
jne    80545a5 <_IO_stdin_used+0x1761>
gs and %ah,%fs:%gs:0x6e(%ecx)
and    %ch,0x6e(%ecx)
jbe    80545ad <_IO_stdin_used+0x1769>
insb   (%dx),%es:(%edi)
imul   $0x61726168,0x63(%eax,%eiz,1),%esp
arpl   %si,0x72(%ebp,%eiz,2)
and    %eax,(%eax)
add    %bh,(%eax)
roll   (%eax,%ecx,1)
dec    %eax
roll   (%eax,%ecx,1)
fcom   %st(1)
add    $0x8,%al
mov    %dl,%cl
add    $0x8,%al
test   $0xd1,%al
add    $0x8,%al
test   $0xd1,%al
add    $0x8,%al
mov    $0xa80804d1,%eax
fildl  (%eax,%ecx,1)
nop
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x57f7fb1a(%eax)
fildl  (%eax,%ecx,1)
nop
out    %al,$0x4
or     %dl,-0x7f7fb1a(%eax)
fiadd  (%eax,%ecx,1)
nop
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
fild   (%eax,%ecx,1)
nop
out    %al,$0x4
or     %dl,-0x21(%eax)
add    $0x8,%al
js     80545e9 <_IO_stdin_used+0x17a5>
add    $0x8,%al
loopne 80545ec <_IO_stdin_used+0x17a8>
add    $0x8,%al
nop
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %ah,(%eax)
fildl  (%eax,%ecx,1)
nop
out    %al,$0x4
or     %bl,-0x22(%eax)
add    $0x8,%al
nop
out    %al,$0x4
or     %dl,(%eax)
fiadd  (%eax,%ecx,1)
clc
fldl   (%eax,%ecx,1)
nop
fldl   (%eax,%ecx,1)
nop
out    %al,$0x4
or     %dh,-0x23(%eax)
add    $0x8,%al
nop
out    %al,$0x4
or     %dl,0x200804e6(%eax)
fldl   (%eax,%ecx,1)
nop
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %dl,-0x6ff7fb1a(%eax)
out    %al,$0x4
or     %cl,(%eax)
fldl   (%eax,%ecx,1)
hlt
faddl  (%eax,%ecx,1)
mov    $0xdc,%al
add    $0x8,%al
mov    $0xc00804dc,%edx
in     $0x4,%eax
or     %dl,-0x57f7fb1a(%eax)
in     $0x4,%eax
or     %bh,-0x1a(%eax)
add    $0x8,%al
mov    %ah,%ch
add    $0x8,%al
nop
out    %al,$0x4
or     %dl,0x700804e6(%eax)
in     $0x4,%al
or     %dl,0x380804e6(%eax)
in     $0x4,%al
or     %dl,0x100804e6(%eax)
in     $0x4,%al
or     %dh,%al
jecxz  80546b7 <_IO_stdin_used+0x1873>
or     %dl,%al
jecxz  80546bb <_IO_stdin_used+0x1877>
or     %cl,-0x1e(%eax)
add    $0x8,%al
loopne 805469a <_IO_stdin_used+0x1856>
add    $0x8,%al
nop
out    %al,$0x4
or     %dl,0x180804e6(%eax)
loop   80546cf <_IO_stdin_used+0x188b>
or     %cl,-0xff7fb1f(%eax)
fild   (%eax,%ecx,1)
loopne 80546b5 <_IO_stdin_used+0x1871>
add    $0x8,%al
hlt
faddl  (%eax,%ecx,1)
nop
out    %al,$0x4
or     %ch,0x480804db(%eax)
out    %eax,$0x4
or     %bh,(%eax)
out    %eax,$0x4
or     %ch,(%eax)
out    %eax,$0x4
or     %bl,(%eax)
out    %eax,$0x4
or     %cl,(%eax)
out    %eax,$0x4
or     %bh,%al
out    %al,$0x4
or     %bl,-0x19(%eax)
add    $0x8,%al
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x65(%edx)
data16
gs
jb     8054773 <_IO_stdin_used+0x192f>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
pop    %esp
and    $0x6e6f2064,%eax
and    %ah,0x73(%eax)
daa
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
daa
jae    8054747 <_IO_stdin_used+0x1903>
push   %edx
dec    %eax
push   %ebx
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
gs
jbe    80547b1 <_IO_stdin_used+0x196d>
outsl  %ds:(%esi),(%dx)
jne    80547be <_IO_stdin_used+0x197a>
and    %dh,0x65(%edx)
addr16 jne 80547bd <_IO_stdin_used+0x1979>
popa
jb     8054774 <_IO_stdin_used+0x1930>
gs
js     80547c7 <_IO_stdin_used+0x1983>
jb     80547be <_IO_stdin_used+0x197a>
jae    80547ce <_IO_stdin_used+0x198a>
imul   $0x6e616300,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054786 <_IO_stdin_used+0x1942>
jae    80547d8 <_IO_stdin_used+0x1994>
arpl   %bp,%gs:0x66(%ecx)
jns    805478e <_IO_stdin_used+0x194a>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x20737265,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6d(%ebp)
jo     80547f3 <_IO_stdin_used+0x19af>
jns    80547a1 <_IO_stdin_used+0x195d>
jb     80547e8 <_IO_stdin_used+0x19a4>
addr16
gs
js     80547f7 <_IO_stdin_used+0x19b3>
add    %ch,(%eax)
pop    %ebx
pusha
daa
and    (%eax),%al
sub    %ebx,0x27(%ebp)
and    (%eax),%al
cs
aas
and    %eax,(%eax)
push   %ebp
push   %esp
inc    %esi
sub    $0x753c0038,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %ah,%ds:0x203a73
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80547d3 <_IO_stdin_used+0x198f>
jb     805481a <_IO_stdin_used+0x19d6>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    805481e <_IO_stdin_used+0x19da>
and    %ah,0x25203a73
jae    80547c1 <_IO_stdin_used+0x197d>
jb     8054828 <_IO_stdin_used+0x19e4>
popa
and    %ah,%fs:0x72(%ebp)
jb     8054839 <_IO_stdin_used+0x19f5>
jb     80547ec <_IO_stdin_used+0x19a8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x25203a73
jae    80547d6 <_IO_stdin_used+0x1992>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
outsb  %fs:(%esi),(%dx)
daa
je     80547ff <_IO_stdin_used+0x19bb>
data16
insb   (%dx),%es:(%edi)
jne    8054856 <_IO_stdin_used+0x1a12>
push   $0x3a732520
and    %ah,0x6f630073
jne    805485c <_IO_stdin_used+0x1a18>
outsb  %fs:(%esi),(%dx)
daa
je     8054815 <_IO_stdin_used+0x19d1>
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x25203a73
jae    8054802 <_IO_stdin_used+0x19be>
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054829 <_IO_stdin_used+0x19e5>
jb     8054870 <_IO_stdin_used+0x1a2c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    8054817 <_IO_stdin_used+0x19d3>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
outsb  %fs:(%esi),(%dx)
daa
je     8054840 <_IO_stdin_used+0x19fc>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80548a8 <_IO_stdin_used+0x1a64>
add    %ah,0x6f(%ebx)
jne    80548a0 <_IO_stdin_used+0x1a5c>
outsb  %fs:(%esi),(%dx)
daa
je     8054859 <_IO_stdin_used+0x1a15>
jb     80548a0 <_IO_stdin_used+0x1a5c>
sub    $0x6f6c6c61,%eax
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80548c4 <_IO_stdin_used+0x1a80>
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8054873 <_IO_stdin_used+0x1a2f>
jae    80548c9 <_IO_stdin_used+0x1a85>
popa
je     8054878 <_IO_stdin_used+0x1a34>
and    $0x25203a73,%eax
jae    805485f <_IO_stdin_used+0x1a1b>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
outsb  %fs:(%esi),(%dx)
daa
je     8054888 <_IO_stdin_used+0x1a44>
outsl  %ds:(%esi),(%dx)
jo     80548d0 <_IO_stdin_used+0x1a8c>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    8054879 <_IO_stdin_used+0x1a35>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
outsb  %fs:(%esi),(%dx)
daa
je     80548a2 <_IO_stdin_used+0x1a5e>
popa
je     80548f9 <_IO_stdin_used+0x1ab5>
popa
arpl   %bp,0x20(%eax)
je     80548fa <_IO_stdin_used+0x1ab6>
and    %ah,0x25203a73
jae    8054893 <_IO_stdin_used+0x1a4f>
das
je     8054903 <_IO_stdin_used+0x1abf>
jo     8054898 <_IO_stdin_used+0x1a54>
push   %esp
dec    %ebp
push   %eax
inc    %esp
dec    %ecx
push   %edx
add    %dl,0x50(%ebp,%ecx,2)
add    %ah,0x73252f73
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
pop    %eax
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
outsb  %fs:(%esi),(%dx)
daa
je     80548d9 <_IO_stdin_used+0x1a95>
ja     805492d <_IO_stdin_used+0x1ae9>
imul   $0x69206425,0x20(%ebp,%eiz,2),%esi
je     805492a <_IO_stdin_used+0x1ae6>
insl   (%dx),%es:(%edi)
jae    80548e8 <_IO_stdin_used+0x1aa4>
je     8054939 <_IO_stdin_used+0x1af5>
and    %ah,0x25203a73
jae    80548d2 <_IO_stdin_used+0x1a8e>
add    %al,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
outsb  %fs:(%esi),(%dx)
daa
je     80548fd <_IO_stdin_used+0x1ab9>
ja     8054951 <_IO_stdin_used+0x1b0d>
imul   $0x69206425,0x20(%ebp,%eiz,2),%esi
je     805494e <_IO_stdin_used+0x1b0a>
insl   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
and    $0x25203a73,%eax
jae    80548f5 <_IO_stdin_used+0x1ab1>
add    %al,(%eax)
add    %ah,0x6f(%ebx)
jne    8054968 <_IO_stdin_used+0x1b24>
outsb  %fs:(%esi),(%dx)
daa
je     8054921 <_IO_stdin_used+0x1add>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8054928 <_IO_stdin_used+0x1ae4>
jae    8054983 <_IO_stdin_used+0x1b3f>
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x3a732520,0x6b(%esi),%ebp
and    %ah,0x72700073
gs
jae    8054981 <_IO_stdin_used+0x1b3d>
jb     8054994 <_IO_stdin_used+0x1b50>
imul   $0x72657020,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     8054952 <_IO_stdin_used+0x1b0e>
and    $0x2f2f0073,%eax
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
loop   80548dd <_IO_stdin_used+0x1a99>
cltd
add    %ah,0x2700af(%ecx)
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     80549d7 <_IO_stdin_used+0x1b93>
jb     80549d5 <_IO_stdin_used+0x1b91>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    80549fb <_IO_stdin_used+0x1bb7>
add    %ah,0x2d(%ebx)
insl   (%dx),%es:(%edi)
popa
jns    80549f1 <_IO_stdin_used+0x1bad>
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %cl,%gs:0xf(%eax)
add    $0x5152808,%eax
or     %bl,0x15(%eax)
add    $0x5141808,%eax
or     %bl,0x14(%eax)
add    $0x5148808,%eax
or     %dh,-0x4ff7faec(%eax)
adc    $0x5,%al
or     %dh,0x50080514(%eax)
adc    0x5134808,%al
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x512c808,%eax
or     %ch,(%eax)
adc    0x5124808,%al
or     %al,0x12(%eax)
add    $0x5123808,%eax
or     %dh,(%eax)
adc    0x5120008,%al
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %cl,0x13(%eax)
add    $0x5134808,%eax
or     %bh,0x11(%ecx)
add    $0x5117908,%eax
or     %bh,0x11(%ecx)
add    $0x5117108,%eax
or     %bh,0x11(%ecx)
add    $0x510e808,%eax
or     %bh,0x11(%ecx)
add    $0x512f808,%eax
or     %bh,0x11(%ecx)
add    $0x5117908,%eax
or     %bh,0x11(%ecx)
add    $0x510e808,%eax
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x5117908
or     %bh,0x11(%ecx)
add    $0x5117908,%eax
or     %bh,0x11(%ecx)
add    $0x5103808,%eax
or     %cl,0x13(%eax)
add    $0x510e808,%eax
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x5117908
or     %bl,%al
adc    0x510e808,%al
or     %bh,0x11(%ecx)
add    $0x510e808,%eax
or     %bh,0x11(%ecx)
add    $0x510e808,%eax
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x510e808
or     %ch,%al
adc    %al,0x5115008
or     %bh,0x11(%ecx)
add    $0x5115008,%eax
or     %dh,0x11(%ecx)
add    $0x5177008,%eax
or     %dh,0x17(%eax)
add    $0x5170808,%eax
or     %dh,0x17(%eax)
add    $0x5170808,%eax
or     %dh,0x17(%eax)
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %cl,(%eax)
pop    %ss
add    $0x5170808,%eax
or     %dh,0x17(%eax)
add    $0x8,%eax
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %ch,0x49(%esi)
add    $0x5497608,%eax
or     %bh,0x5(%ecx,%ecx,2)
or     %cl,(%esi)
inc    %esp
add    $0x5498908,%eax
or     %dl,0x37080549(%ecx)
xor    $0x49980805,%eax
add    $0x8,%eax
add    %ah,0x25282073
jae    8054cd4 <_IO_stdin_used+0x1e90>
and    %ah,0x25000a73
jae    8054cd3 <_IO_stdin_used+0x1e8f>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     8054d27 <_IO_stdin_used+0x1ee3>
je     8054d34 <_IO_stdin_used+0x1ef0>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     8054d37 <_IO_stdin_used+0x1ef3>
je     8054d44 <_IO_stdin_used+0x1f00>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     8054d4e <_IO_stdin_used+0x1f0a>
je     8054d5b <_IO_stdin_used+0x1f17>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054d20 <_IO_stdin_used+0x1edc>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     8054d72 <_IO_stdin_used+0x1f2e>
jb     8054d79 <_IO_stdin_used+0x1f35>
and    %ah,0x75(%edx)
addr16 jae 8054d2b <_IO_stdin_used+0x1ee7>
je     8054d7c <_IO_stdin_used+0x1f38>
cmp    (%eax),%ah
and    $0x25000a73,%eax
jae    8054d36 <_IO_stdin_used+0x1ef2>
push   $0x20656d6f
jo     8054d7e <_IO_stdin_used+0x1f3a>
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    8054d63 <_IO_stdin_used+0x1f1f>
or     (%eax),%al
add    %cl,(%edx)
dec    %esp
imul   $0x2065736e,0x65(%ebx),%esp
inc    %edi
push   %eax
dec    %esp
jbe    8054d69 <_IO_stdin_used+0x1f25>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     8054db8 <_IO_stdin_used+0x1f74>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     8054d6e <_IO_stdin_used+0x1f2a>
insb   (%dx),%es:(%edi)
popa
je     8054db7 <_IO_stdin_used+0x1f73>
jb     8054d74 <_IO_stdin_used+0x1f30>
cmp    $0x68,%al
je     8054dcc <_IO_stdin_used+0x1f88>
jo     8054d94 <_IO_stdin_used+0x1f50>
das
das
outsb  %ds:(%si),(%dx)
jne    8054d8e <_IO_stdin_used+0x1f4a>
outsl  %ds:(%esi),(%dx)
jb     8054dca <_IO_stdin_used+0x1f86>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 8054ddc <_IO_stdin_used+0x1f98>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    8054d9d <_IO_stdin_used+0x1f59>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     8054e01 <_IO_stdin_used+0x1fbd>
popa
jb     8054df2 <_IO_stdin_used+0x1fae>
cmp    (%eax),%ah
jns    8054e00 <_IO_stdin_used+0x1fbc>
jne    8054db3 <_IO_stdin_used+0x1f6f>
popa
jb     8054dfb <_IO_stdin_used+0x1fb7>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     8054e1b <_IO_stdin_used+0x1fd7>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     8054e25 <_IO_stdin_used+0x1fe1>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     8054e42 <_IO_stdin_used+0x1ffe>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     8054e41 <_IO_stdin_used+0x1ffd>
outsb  %ds:(%esi),(%dx)
je     8054dff <_IO_stdin_used+0x1fbb>
jo     8054e46 <_IO_stdin_used+0x2002>
jb     8054e50 <_IO_stdin_used+0x200c>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     8054e60 <_IO_stdin_used+0x201c>
je     8054e6d <_IO_stdin_used+0x2029>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054e32 <_IO_stdin_used+0x1fee>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054e80 <_IO_stdin_used+0x203c>
je     8054e8d <_IO_stdin_used+0x2049>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054e52 <_IO_stdin_used+0x200e>
and    %ah,0x250a2c73
jae    8054e5a <_IO_stdin_used+0x2016>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054ea4 <_IO_stdin_used+0x2060>
je     8054eb1 <_IO_stdin_used+0x206d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054e76 <_IO_stdin_used+0x2032>
and    %ah,0x250a2c73
jae    8054e7e <_IO_stdin_used+0x203a>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054ecc <_IO_stdin_used+0x2088>
je     8054ed9 <_IO_stdin_used+0x2095>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054e9e <_IO_stdin_used+0x205a>
and    %ah,0x250a2c73
jae    8054ea6 <_IO_stdin_used+0x2062>
and    %ah,0x25202c73
jae    8054eae <_IO_stdin_used+0x206a>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054ef8 <_IO_stdin_used+0x20b4>
je     8054f05 <_IO_stdin_used+0x20c1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054eca <_IO_stdin_used+0x2086>
and    %ah,0x250a2c73
jae    8054ed2 <_IO_stdin_used+0x208e>
and    %ah,0x25202c73
jae    8054eda <_IO_stdin_used+0x2096>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054f28 <_IO_stdin_used+0x20e4>
je     8054f35 <_IO_stdin_used+0x20f1>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054efa <_IO_stdin_used+0x20b6>
and    %ah,0x250a2c73
jae    8054f02 <_IO_stdin_used+0x20be>
and    %ah,0x25202c73
jae    8054f0a <_IO_stdin_used+0x20c6>
and    %ah,0x250a2c73
jae    8054f12 <_IO_stdin_used+0x20ce>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     8054f5c <_IO_stdin_used+0x2118>
je     8054f69 <_IO_stdin_used+0x2125>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    8054f2e <_IO_stdin_used+0x20ea>
and    %ah,0x250a2c73
jae    8054f36 <_IO_stdin_used+0x20f2>
and    %ah,0x25202c73
jae    8054f3e <_IO_stdin_used+0x20fa>
and    %ah,0x250a2c73
jae    8054f46 <_IO_stdin_used+0x2102>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
push   $0x3a707474
das
das
ja     8054fac <_IO_stdin_used+0x2168>
ja     8054f65 <_IO_stdin_used+0x2121>
outsb  %ds:(%si),(%dx)
jne    8054f69 <_IO_stdin_used+0x2125>
outsl  %ds:(%esi),(%dx)
jb     8054fa5 <_IO_stdin_used+0x2161>
das
jae    8054fb0 <_IO_stdin_used+0x216c>
data16
je     8054fbb <_IO_stdin_used+0x2177>
popa
jb     8054fac <_IO_stdin_used+0x2168>
das
jae    8054faf <_IO_stdin_used+0x216b>
fs
das
add    %al,(%eax)
add    %al,(%eax)
inc    %edi
outsb  %gs:(%esi),(%dx)
gs
jb     8054fb7 <_IO_stdin_used+0x2173>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     8054f7d <_IO_stdin_used+0x2139>
jne    8054fd2 <_IO_stdin_used+0x218e>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     8054fe3 <_IO_stdin_used+0x219f>
popa
jb     8054fd4 <_IO_stdin_used+0x2190>
cmp    (%eax),%ah
cmp    $0x68,%al
je     8054fe9 <_IO_stdin_used+0x21a5>
jo     8054fb1 <_IO_stdin_used+0x216d>
das
das
ja     8054ff2 <_IO_stdin_used+0x21ae>
ja     8054fab <_IO_stdin_used+0x2167>
outsb  %ds:(%si),(%dx)
jne    8054faf <_IO_stdin_used+0x216b>
outsl  %ds:(%esi),(%dx)
jb     8054feb <_IO_stdin_used+0x21a7>
das
addr16
gs
je     8054ff1 <_IO_stdin_used+0x21ad>
gs
insb   (%dx),%es:(%edi)
jo     8054fbc <_IO_stdin_used+0x2178>
or     %ds:(%eax),%al
inc    %eax
and    $0x5,%al
or     %cl,0x24(%eax)
add    $0x5248808,%eax
or     %dl,%al
and    $0x5,%al
or     %ch,(%eax)
and    $0x25800805,%eax
add    $0x525e808,%eax
or     %ah,0x26(%eax)
add    $0x5230008,%eax
or     %bl,0x80523(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x6f(%ebx)
jo     805503d <_IO_stdin_used+0x21f9>
jb     805502f <_IO_stdin_used+0x21eb>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     8055051 <_IO_stdin_used+0x220d>
popa
jb     8055042 <_IO_stdin_used+0x21fe>
and    %al,0x6f(%esi)
jne    8055050 <_IO_stdin_used+0x220c>
fs
popa
je     805504f <_IO_stdin_used+0x220b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     805506e <_IO_stdin_used+0x222a>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %dh,%fs:%gs:0x6e(%ebp)
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
gs add %dh,%fs:%gs:0x65(%ebx)
je     8055082 <_IO_stdin_used+0x223e>
imul   $0x72657020,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ah,0x6f(%esi)
jb     8055042 <_IO_stdin_used+0x21fe>
.byte 0x25
jae    8055025 <_IO_stdin_used+0x21e1>
add    %ebx,(%ebx)
add    (%ebx),%edi
mov    0x93000004,%al
add    %al,(%eax)
add    %cl,-0x430000be(%eax)
add    $0x0,%al
add    %cl,%al
dec    %eax
(bad)
decl   0x49180000(%eax,%edx,1)
(bad)
ljmp   *(%eax)
add    $0x4df80000,%eax
(bad)
jmp    *%eax
add    $0x0,%al
add    %bh,0x4ffff4e(%eax)
add    $0x51c80000,%eax
(bad)
lcall  *0x5(%eax)
add    %al,(%eax)
cwtl
push   %edx
(bad)
lcall  *0x78000005(%eax)
push   %ebx
(bad)
(bad)
fadds  0x53e80000
(bad)
push   %esp
add    $0x54180000,%eax
(bad)
call   *(%esi,%eax,1)
add    %al,(%eax)
push   $0x38ffff54
push   %es
add    %al,(%eax)
or     %dl,-0x1(%esi)
call   *-0x77fffffa(%eax)
push   %esi
(bad)
ljmp   *0x57280000(%esi,%eax,1)
(bad)
jmp    *%eax
push   %es
add    %al,(%eax)
push   $0xcffff57
pop    %es
add    %al,(%eax)
sub    %bl,-0x1(%eax)
pushl  (%eax)
pop    %es
add    %al,(%eax)
cwtl
pop    %eax
(bad)
call   *0x0(%edi,%eax,1)
add    %cl,-0x6b0000a5(%eax)
pop    %es
add    %al,(%eax)
js     8055123 <_IO_stdin_used+0x22df>
(bad)
(bad)
in     (%dx),%al
pop    %es
add    %al,(%eax)
call   35055031 <_end+0x2cff7b21>
or     %al,(%eax)
add    %bl,0x62(%eax)
(bad)
ljmp   *0x8(%eax)
add    %al,(%eax)
pop    %eax
jae    80550de <_IO_stdin_used+0x229a>
ljmp   *0x73d80000(%eax,%ecx,1)
(bad)
inc    %esp
or     %al,(%eax)
add    %ch,0x74(%eax)
(bad)
(bad)
call   700550fd <_end+0x67ff7bed>
jbe    80550f6 <_IO_stdin_used+0x22b2>
ljmp   *(%eax)
or     %eax,(%eax)
add    %bl,0x48ffff76(%eax)
or     %eax,(%eax)
add    %bh,%al
jbe    8055106 <_IO_stdin_used+0x22c2>
ljmp   *0x0(%ecx,%ecx,1)
add    %cl,(%eax)
ja     805510e <_IO_stdin_used+0x22ca>
incl   0x68000009(%eax)
ja     8055116 <_IO_stdin_used+0x22d2>
jmp    *-0x7fffff7(%eax)
ja     805511e <_IO_stdin_used+0x22da>
(bad)
fmuls  (%ecx)
add    %al,(%eax)
push   $0x30ffff7c
or     (%eax),%al
add    %bh,0x7e(%eax)
(bad)
pushl  0xa(%eax)
add    %al,(%eax)
call   9d0550b7 <_end+0x94ff7ba7>
or     (%eax),%al
add    %cl,0x7f(%eax)
(bad)
(bad)
fmuls  (%edx)
add    %al,(%eax)
sbb    %al,0xb18ffff(%eax)
add    %al,(%eax)
mov    %al,0xb38ffff(%eax)
add    %al,(%eax)
clc
cmp    $0xff,%bh
push   $0xc800000b
cmp    $0xbb0ff,%edi
add    %cl,(%eax)
(bad)
(bad)
(bad)
fmull  (%ebx)
add    %al,(%eax)
cwtl
(bad)
(bad)
call   *(%esp,%ecx,1)
add    %al,(%eax)
clc
(bad)
(bad)
ljmp   *(%eax)
or     $0x0,%al
add    %bl,%al
cmp    $0xffffffff,%edi
push   $0xb800000c
test   %bh,%bh
jmp    *-0x79980000(%esp,%ecx,1)
(bad)
(bad)
fmull  (%eax,%eax,1)
add    %ch,-0x79(%eax)
(bad)
call   *(%eax)
or     $0x8a080000,%eax
(bad)
call   *0xd(%eax)
add    %al,(%eax)
clc
popf
(bad)
call   *-0x60f80000(%ebp,%ecx,1)
(bad)
inc    %esp
or     $0xa0980000,%eax
(bad)
decl   (%eax)
push   %cs
add    %al,(%eax)
pop    %eax
mov    0xe50ffff,%eax
add    %al,(%eax)
cmp    %ah,0xe88ffff(%edx)
add    %al,(%eax)
test   $0xa2,%al
(bad)
ljmp   *-0x5b680000(%esi,%ecx,1)
(bad)
(bad)
in     (%dx),%al
push   %cs
add    %al,(%eax)
call   19055185 <_end+0x10ff7c75>
sldt   (%eax)
dec    %eax
movsl  %ds:(%esi),%es:(%edi)
(bad)
call   *0xf(%eax)
add    %al,(%eax)
fsubs  0xf80ffff(%ebp)
add    %al,(%eax)
sub    %ah,0xfacffff(%esi)
add    %al,(%eax)
mov    %ch,0x1004ffff(%ecx)
add    %al,(%eax)
cwtl
stos   %eax,%es:(%edi)
(bad)
pushl  (%eax,%edx,1)
add    %al,(%eax)
clc
stos   %eax,%es:(%edi)
(bad)
jmp    *0x10(%eax)
add    %al,(%eax)
sub    %ch,0x10a0ff(%edi,%edi,8)
add    %bl,-0x53(%eax)
(bad)
inc    %eax
adc    %al,(%eax)
add    %bh,%al
lods   %ds:(%esi),%eax
(bad)
(bad)
in     (%dx),%al
adc    %al,(%eax)
add    %bl,0x24ffffae(%eax)
adc    %eax,(%eax)
add    %bh,(%eax)
scas   %es:(%edi),%eax
(bad)
call   *0x11(%eax)
add    %al,(%eax)
test   $0xaf,%al
(bad)
(bad)
jl     8055253 <_IO_stdin_used+0x240f>
add    %al,(%eax)
or     %dh,0x11a8ffff(%eax)
add    %al,(%eax)
cwtl
mov    $0xff,%al
push   %eax
adc    %eax,(%eax)
add    %bh,-0x4f(%eax)
(bad)
ljmp   *(%eax)
adc    (%eax),%al
add    %bh,0x44ffffb1(%eax)
adc    (%eax),%al
add    %cl,(%eax)
mov    $0xff,%dl
jmp    *0x0(%edx,%edx,1)
add    %bl,-0x4c(%eax)
(bad)
ljmp   *-0x57ffffee(%eax)
mov    $0xff,%ah
(bad)
call   e005528f <_end+0xd7ff7d7f>
mov    $0xff,%ah
decl   (%eax)
adc    (%eax),%eax
add    %cl,-0x4b(%eax)
(bad)
decl   0x13(%eax)
add    %al,(%eax)
enter  $0xffb5,$0xff
test   %dl,(%ebx)
add    %al,(%eax)
dec    %eax
mov    $0xff,%dh
pushl  -0x48780000(%ebx,%edx,1)
(bad)
push   %esp
adc    (%eax),%eax
add    %bh,0x14ffffb7(%eax)
adc    $0x0,%al
add    %bh,%al
mov    $0xff,%bh
pushl  (%esp,%edx,1)
add    %al,(%eax)
or     %bh,0x1448ffff(%eax)
add    %al,(%eax)
sbb    %bh,0x145cffff(%eax)
add    %al,(%eax)
push   $0x88ffffb8
adc    $0x0,%al
add    %bh,-0x4b000048(%eax)
adc    $0x0,%al
add    %ch,%al
mov    $0x14d4ffff,%eax
add    %al,(%eax)
or     %bh,0x14e8ffff(%ecx)
add    %al,(%eax)
enter  $0xffb9,$0xff
xor    %dl,0xbd880000
(bad)
pushl  0x15(%eax)
add    %al,(%eax)
mov    $0x9cffffbd,%eax
adc    $0xbea80000,%eax
(bad)
call   *%esp
adc    $0xc8d80000,%eax
(bad)
lcall  *(%eax)
push   %ss
add    %al,(%eax)
js     80552d8 <_IO_stdin_used+0x2494>
(bad)
lcall  *0x16(%eax)
add    %al,(%eax)
mov    $0x8cffffca,%eax
push   %ss
add    %al,(%eax)
fmul   %st(2),%st
(bad)
jmp    *-0x7ffffea(%eax)
lret   $0xffff
mov    $0x16,%ah
add    %al,(%eax)
cmp    %cl,%bl
(bad)
(bad)
fcoms  (%esi)
add    %al,(%eax)
pop    %eax
lret
(bad)
(bad)
in     (%dx),%al
push   %ss
add    %al,(%eax)
cwtl
lret
(bad)
call   *(%eax)
pop    %ss
add    %al,(%eax)
clc
lret
(bad)
incl   0x0(%edi,%edx,1)
add    %bl,%al
int3
(bad)
incl   0x8000017(%eax)
int    $0xff
lcall  *-0x67ffffe9(%eax)
int    $0xff
dec    %esp
pop    %ss
add    %al,(%eax)
mov    $0xe0ffffcd,%eax
pop    %ss
add    %al,(%eax)
fmul   %st(5),%st
(bad)
push   %esp
pop    %ss
add    %al,(%eax)
clc
int    $0xff
decl   (%eax)
sbb    %al,(%eax)
add    %bl,(%eax)
into
(bad)
lcall  *(%eax,%ebx,1)
add    %al,(%eax)
dec    %eax
into
(bad)
(bad)
cmp    $0x18,%al
add    %al,(%eax)
js     805535c <_IO_stdin_used+0x2518>
(bad)
lcall  *0x0(%eax,%ebx,1)
add    %ch,0x74ffffce(%eax)
sbb    %al,(%eax)
add    %bl,%al
into
(bad)
decl   -0x30780000(%eax,%ebx,1)
(bad)
pushl  -0x47ffffe8(%eax)
iret
(bad)
dec    %eax
sbb    %al,(%eax)
add    %ch,%al
iret
(bad)
jmp    *%eax
sbb    %al,(%eax)
add    %bl,(%eax)
sar    %bh
(bad)
clc
sbb    %al,(%eax)
add    %cl,%al
sar    %bh
lcall  *(%ecx,%ebx,1)
add    %al,(%eax)
or     %dl,%cl
(bad)
pushl  (%ecx,%ebx,1)
add    %al,(%eax)
dec    %eax
sar    %edi
decl   0x0(%ecx,%ebx,1)
add    %cl,0x64ffffd1(%eax)
sbb    %eax,(%eax)
add    %ch,0x78ffffd1(%eax)
sbb    %eax,(%eax)
add    %cl,%al
sar    %edi
decl   -0x2e180000(%ecx,%ebx,1)
(bad)
jmp    *0x8000019(%eax)
sar    %cl,%bh
pushl  -0x28880000(%ecx,%ebx,1)
(bad)
call   *0x1a(%eax)
add    %al,(%eax)
enter  $0xffd7,$0xff
push   $0x2800001a
fdivr  %st(7),%st
decl   -0x27980000(%edx,%ebx,1)
(bad)
jmp    *-0x26e80000(%edx,%ebx,1)
(bad)
dec    %eax
sbb    (%eax),%al
add    %cl,-0x27(%eax)
(bad)
(bad)
in     (%dx),%al
sbb    (%eax),%al
add    %bh,-0x27(%eax)
(bad)
call   *(%eax)
sbb    (%eax),%eax
add    %cl,0x24ffffd9(%eax)
sbb    (%eax),%eax
add    %bl,%al
fcos
call   *0x0(%ebx,%ebx,1)
add    %bl,(%eax)
(bad)
incl   0x7800001b(%eax)
(bad)
pushl  -0x37ffffe5(%eax)
(bad)
call   *%esp
sbb    (%eax),%eax
add    %bh,%al
(bad)
push   %esp
sbb    (%eax),%eax
add    %ch,(%eax)
(bad)
call   *(%eax)
sbb    $0x0,%al
add    %bl,-0x25(%eax)
(bad)
pushl  (%eax)
sbb    $0x0,%al
add    %cl,0x50ffffdb(%eax)
sbb    $0x0,%al
add    %bl,%al
(bad)
jmp    *0x0(%esp,%ebx,1)
add    %bh,(%eax)
fdivr  %st,%st(7)
lcall  *-0x23a80000(%esp,%ebx,1)
(bad)
(bad)
mov    $0x8800001c,%esp
fdivr  %st,%st(7)
(bad)
fcompl (%eax,%eax,1)
add    %bh,-0x3000024(%eax)
sbb    $0x0,%al
add    %ch,%al
fdivr  %st,%st(7)
call   *(%eax)
sbb    $0xdcf80000,%eax
(bad)
jmp    *-0x22880000(,%ebx,1)
(bad)
lcall  *0x1d(%eax)
add    %al,(%eax)
call   9d0554a6 <_end+0x94ff7f96>
.byte 0x1d
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     80554e3 <_IO_stdin_used+0x269f>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
les    0x640ffff,%edi
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     8055503 <_IO_stdin_used+0x26bf>
js     8055501 <_IO_stdin_used+0x26bd>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
and    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%eax)
dec    %ecx
(bad)
(bad)
mov    $0x0,%ebx
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
jge    805552d <_IO_stdin_used+0x26e9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %ch,0x30cffff(%ecx,%ecx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    %al,(%eax)
add    %al,(%eax)
call   f10554a0 <_end+0xe8ff7f90>
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa034903,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
mov    $0x68000000,%eax
dec    %esp
(bad)
dec    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x79,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
clc
add    %al,(%eax)
add    %bh,%al
dec    %esp
(bad)
(bad)
faddl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff93,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%ecx)
add    %al,(%eax)
cwtl
dec    %ebp
(bad)
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
add    %eax,(%eax)
add    %ch,%ah
dec    %ebp
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dh,0x0(%ecx,%eax,1)
add    %bh,%ah
dec    %ebp
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%edx),%al
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x28000001(%eax)
dec    %esi
(bad)
lcall  *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa4,0x2400e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
lock add %eax,(%eax)
add    %dh,0x4f(%eax)
(bad)
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%edx)
inc    %ebx
or     (%esi),%cl
add    $0x42,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
or     $0x2,%al
add    %al,(%eax)
aam    $0x4f
(bad)
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbceff2(%esi),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    (%eax),%al
add    %al,0x50(%eax)
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0xec36f04(%ebx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ch,0x0(%edx,%eax,1)
add    %dl,-0x1(%eax,%edx,2)
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,-0xffffffe(%eax)
push   %eax
(bad)
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x2,%ah
add    %al,(%eax)
cmp    $0x51,%al
(bad)
(bad)
out    %eax,(%dx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x21,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,%ah
add    (%eax),%al
add    %ch,%ah
push   %ebx
(bad)
jmp    *%ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffac,0x2300e45
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
add    (%eax),%eax
add    %al,0x36bffff(%ebp,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffce,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
mov    %es,(%ebx)
add    %al,(%eax)
mov    $0x58,%ah
(bad)
ljmp   *0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%ebx)
aas
add    %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%eax),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,%al
add    (%eax),%eax
add    %ch,%al
pop    %ecx
(bad)
(bad)
call   *(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sub    $0xc,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
or     $0x4,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
push   $0xffffffff
(bad)
jl     80558e2 <_IO_stdin_used+0x2a9e>
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %al,(%edx)
js     80558f9 <_IO_stdin_used+0x2ab5>
add    $0x20,%al
add    %al,(%eax)
add    %ah,(%esp,%eax,1)
add    %al,(%eax)
or     $0x6b,%al
(bad)
call   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0x41080e0a(%ecx),%al
ret
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
dec    %eax
add    $0x0,%al
add    %bh,0x6b(%eax)
(bad)
(bad)
cli
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    %al,(%eax,%eax,1)
add    %bh,(%eax)
insl   (%dx),%es:(%edi)
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ch,0x48000004(%eax)
insl   (%dx),%es:(%edi)
(bad)
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ecx),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
int3
add    $0x0,%al
add    %al,0x3ffff(%ebp,%ebp,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
loopne 80559b2 <_IO_stdin_used+0x2b6e>
add    %al,(%eax)
subb   $0xff,-0x1(%ebp)
push   %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %al,(%edx)
inc    %eax
or     (%esi),%cl
add    $0x45,%al
or     0xe(%ebp),%ecx
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
add    %al,0x6dc00000
(bad)
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%edx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax)
add    $0x6e180000,%eax
(bad)
ljmp   *0x4(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x61,0x3500e45
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   %ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
nop
add    $0x72300000,%eax
(bad)
decl   (%edx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe3,0x2500e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
rolb   0x74000000
(bad)
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dh,%ah
add    $0x744c0000,%eax
(bad)
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,(%eax)
push   %es
add    %al,(%eax)
push   $0xc1ffff74
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff86,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
js     8055b4c <_IO_stdin_used+0x2d08>
add    %al,(%eax)
clc
je     8055b4a <_IO_stdin_used+0x2d06>
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,(%edx)
pop    %esp
or     (%esi),%cl
add    $0x41,%al
or     0xe(%ebp),%ecx
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
cwtl
push   %es
add    %al,(%eax)
dec    %eax
jne    8055b6a <_IO_stdin_used+0x2d26>
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,%al
push   %es
add    %al,(%eax)
mov    %dh,-0x1(%ebp)
dec    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4502(%ebx)
pop    %edx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx,%ecx,1),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x4a,%al
or     0xe(%edi),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,(%eax)
pop    %es
add    %al,(%eax)
adc    %dh,-0x1(%esi)
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x47,(%ebx)
push   %cs
adc    %ch,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cmp    $0x7,%al
add    %al,(%eax)
and    $0x76,%al
(bad)
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
add    0xa(%ebp),%dh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%edi,%eax,1)
add    %bh,-0x1(%esi,%esi,2)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %al,(%edi)
add    %al,(%eax)
enter  $0xff76,$0xff
(bad)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc5,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
enter  $0x7,$0x0
push   $0xd7ffff77
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx,%ecx,1),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
add    $0x8,%al
add    %al,(%eax)
or     $0x78,%al
(bad)
jmp    *0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1b9fc(%ebx)
inc    %eax
add    0x1(%edx),%edx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bh,(%eax,%ecx,1)
add    %al,(%eax)
test   %bh,-0x1(%ecx)
(bad)
std
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
add    %bl,%ch
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
jo     8055d46 <_IO_stdin_used+0x2f02>
add    %al,(%eax)
push   %eax
jp     8055d42 <_IO_stdin_used+0x2efe>
lcall  *0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff9f,0x3500e45
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax),%eax
add    %al,(%eax)
mov    $0x8,%al
add    %al,(%eax)
mov    $0x7c,%al
(bad)
jmp    *%edx
adc    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x20f00e46
lahf
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
hlt
or     %al,(%eax)
add    %bl,-0x1(%eax,%edx,4)
decl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4b,(%ebx)
push   %cs
mov    $0x1,%al
add    0x430c0e0a(%ebx),%dh
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
and    $0x9,%al
add    %al,(%eax)
cmp    $0x91,%al
(bad)
decl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2900e48
add    $0x140e0a01,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ch,0x9(%eax)
add    %al,(%eax)
mov    %dl,0xb6ffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
pusha
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x9,%al
add    %al,(%eax)
add    %dl,0xdfffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edx),%dh
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4d,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,%al
or     %eax,(%eax)
add    %ch,0x66ffff93(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xa440202(%ebx)
ret
push   %cs
add    $0x43,%al
or     -0x3d(%ebp),%ebx
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
or     $0xa,%al
add    %al,(%eax)
hlt
xchg   %eax,%ebx
(bad)
push   %eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff96,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,0x0(%edx,%ecx,1)
add    %ah,0x45ffff(%ebp,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
imul   $0xe,(%edx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
jo     8055f48 <_IO_stdin_used+0x3104>
add    %al,(%eax)
rclb   0x5cffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x76300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xa,%al
add    %al,(%eax)
lock xchg %eax,%ebp
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%edx)
push   $0x410c0e0a
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
loopne 8055fb8 <_IO_stdin_used+0x3174>
add    %al,(%eax)
push   %eax
xchg   %eax,%esi
(bad)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %dh,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,(%ebx,%ecx,1)
add    %al,(%eax)
je     8055f74 <_IO_stdin_used+0x3130>
(bad)
lcall  *0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%ebx),%eax
dec    %ebx
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
or     %fs:(%eax),%eax
add    %bh,-0x1(%ecx,%ebx,4)
incl   0x2
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%ebx)
lds    (%ecx),%eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,-0x64a40000(%ebx,%ecx,1)
(bad)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
je     8056081 <_IO_stdin_used+0x323d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebp),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %al,%al
or     (%eax),%eax
add    %dl,0x2fffff9b(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %ah,0xe(%edx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
or     (%eax),%eax
add    %dh,(%eax,%edi,1)
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    %cl,(%eax,%eax,1)
add    %al,0x24ffff9b(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
or     $0x0,%al
add    %dl,-0x5f000064(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
dec    %esp
or     $0x0,%al
add    %al,0x9affff(,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jns    8056143 <_IO_stdin_used+0x32ff>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
test   %cl,(%eax,%eax,1)
add    %ch,-0x1(%ebp,%ebx,4)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
lea    (%esi),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,-0x1ffffff4(%eax)
popf
(bad)
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,%ah
or     $0x0,%al
add    %ah,(%esi,%ebx,4)
(bad)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %cl,(%eax)
or     $0x9e580000,%eax
(bad)
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
push   %eax
or     $0x9ea00000,%eax
(bad)
call   *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
mov    %cl,0x9f480000
(bad)
pushl  0x0
inc    %ebx
push   %cs
and    %ah,0xa(%ebp)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     $0x9f6c0000,%eax
(bad)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xa(%ebx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%eax
push   %cs
add    $0x49,%al
or     0x0(%eax),%eax
add    %al,(%eax)
les    0x9f9c0000,%ecx
(bad)
decl   0x2(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
test   $0x1,%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
or     %cl,(%esi)
add    %al,(%eax)
test   $0xa1,%al
(bad)
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x64300e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
push   %cs
add    %al,(%eax)
mov    $0x2cffffa1,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ch,0xe(%eax)
add    %al,(%eax)
enter  $0xffa1,$0xff
insl   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x4a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
test   $0xe,%al
add    %al,(%eax)
clc
mov    0x7dffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ecx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
in     $0xe,%al
add    %al,(%eax)
cmp    $0xa2,%al
(bad)
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
adc    $0xf,%al
add    %al,(%eax)
mov    %fs,0x13fffff(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa7,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
push   %esp
sldt   (%eax)
mov    %fs,0x29ffff(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,0x0(%edi,%ecx,1)
add    %bl,0x35ffff(%ebx,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,-0x5c440000(%edi,%ecx,1)
(bad)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,-0x47fffff1(%eax)
mov    %eax,0x8ffff
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0xb400000f,%esp
mov    %eax,0x47ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
call   e00564c8 <_end+0xd7ff8fb8>
mov    %eax,0x4cffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %ah,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
adc    $0x10,%al
add    %al,(%eax)
cld
mov    %eax,0x24ffff
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,(%eax,%edx,1)
add    %al,(%eax)
or     $0xa4,%al
(bad)
lcall  *0x0
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %cl,0x10(%eax)
add    %al,(%eax)
sbb    %ah,0xbaff(%edi,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%dh
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0x10(%esi,%ecx,1),%esi
inc    %ebx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
nop
adc    %al,(%eax)
add    %dl,-0x4600005c(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dl,%al
adc    %al,(%eax)
add    %dl,(%eax)
test   $0xff,%al
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
cld
adc    %al,(%eax)
add    %dl,(%eax,%ebp,4)
(bad)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,(%ecx,%edx,1)
add    %al,(%eax)
int3
test   $0xff,%al
ljmp   *(%edi)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
js     8056657 <_IO_stdin_used+0x3813>
add    %al,(%eax)
mov    $0x96ffffb2,%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bh,0x18000011(%eax)
mov    $0xff,%ah
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%ah
adc    %eax,(%eax)
add    %ah,(%esp,%esi,4)
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %dh,(%eax)
mov    $0xff,%ah
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,(%edx,%edx,1)
add    %al,(%eax)
cmp    $0xb4,%al
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
cmp    %dl,(%edx)
add    %al,(%eax)
pop    %eax
mov    $0xff,%ah
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edx,%edx,1)
add    %ah,-0x1(%esp,%esi,4)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
jo     8056750 <_IO_stdin_used+0x390c>
add    %al,(%eax)
xorb   $0x0,0x60ff(%edi,%edi,8)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    (%eax),%al
add    %ch,0xd4ffff(%esp,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ah,%al
adc    (%eax),%al
add    %dl,-0x4b(%eax)
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
clc
adc    (%eax),%al
add    %ch,-0x4b(%eax)
(bad)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sub    $0x13,%al
add    %al,(%eax)
les    0x1affff(%ebp),%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
adc    (%eax),%eax
add    %dl,%al
mov    $0xff,%ch
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx,%edx,1)
add    %bl,%ah
mov    $0xff,%ch
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x13(%eax)
add    %al,(%eax)
call   200567f2 <_end+0x17ff92e2>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jl     805685d <_IO_stdin_used+0x3a19>
add    %al,(%eax)
hlt
mov    $0xff,%ch
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,-0x49fc0000(%ebx,%edx,1)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bh,-0x49ec0000(%ebx,%edx,1)
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
aam    $0x13
add    %al,(%eax)
sub    $0xb6,%al
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
adc    (%eax),%eax
add    %al,-0x1(%esi,%esi,4)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %dl,(%eax,%eax,1)
add    %dl,%al
mov    $0xff,%dh
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
sub    %dl,(%eax,%eax,1)
add    %ch,%al
mov    $0xff,%dh
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
inc    %eax
adc    $0x0,%al
add    %al,(%eax)
mov    $0xff,%bh
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pop    %eax
adc    $0x0,%al
add    %bl,(%eax)
mov    $0xff,%bh
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
jl     805695e <_IO_stdin_used+0x3b1a>
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0xff,%bh
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
adc    $0x0,%al
add    %cl,%ah
mov    $0xff,%bh
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
adc    $0x0,%al
add    %dh,%ah
mov    $0xff,%bh
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
les    (%eax,%eax,1),%edx
add    %bl,(%eax,%edi,4)
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%al
adc    $0x0,%al
add    %ch,(%eax)
mov    $0x17ffff,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
adc    $0x0,%al
add    %dh,(%eax,%edi,4)
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0xb8400000,%eax
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,0x14000000(%eax)
adc    $0xb84c0000,%eax
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x15,%al
add    %al,(%eax)
and    %bh,0x4affff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %cl,%al
adc    $0xbd580000,%eax
(bad)
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
adc    $0xbd940000,%eax
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
add    $0x16,%al
add    %al,(%eax)
mov    $0xa7ffffbd,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sub    %dl,(%esi)
add    %al,(%eax)
dec    %eax
mov    $0x25ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
push   %ss
add    %al,(%eax)
push   %esp
mov    $0x2effff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
jo     8056b54 <_IO_stdin_used+0x3d10>
add    %al,(%eax)
pusha
mov    $0x5ffff,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
test   %dl,(%esi)
add    %al,(%eax)
pop    %esp
mov    $0x44ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x16,%ah
add    %al,(%eax)
jl     8056b44 <_IO_stdin_used+0x3d00>
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
loopne 8056bc4 <_IO_stdin_used+0x3d80>
add    %al,(%eax)
nop
mov    $0x5dffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
adc    %dl,(%edi)
add    %al,(%eax)
sarb   $0x0,0x49ffff(%esi)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
xor    $0x17,%al
add    %al,(%eax)
in     (%dx),%al
mov    $0x29ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %dl,0x0(%edi,%edx,1)
add    %bh,%ah
mov    $0x25ffff,%esi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jo     8056c55 <_IO_stdin_used+0x3e11>
add    %al,(%eax)
adc    %bh,0x29ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,0x20000017(%eax)
mov    $0x24ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,0x30000017(%eax)
mov    $0x46ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,(%eax,%eax,1)
add    %al,(%eax)
les    (%edi),%edx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
mov    $0x5affff,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
dec    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cld
pop    %ss
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x20ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,(%eax,%ebx,1)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x23ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,(%eax,%ebx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x23ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,0x0(%eax,%ebx,1)
add    %dh,0x29ffff(%edi,%edi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jo     8056d56 <_IO_stdin_used+0x3f12>
add    %al,(%eax)
sarb   0x5ffff(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
test   %bl,(%eax)
add    %al,(%eax)
int3
mov    $0x78ffff,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x10(%esi,%ecx,1),%ch
inc    %ebx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0x18000018,%eax
sar    $0xff,%bh
popa
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,%ah
sbb    %al,(%eax)
add    %cl,-0x1(%eax,%eax,8)
incl   (%edx)
lock popf
add    $0x8,%al
.byte 0xd0
popf
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
movl   $0xc0000,(%eax)
add    %al,(%eax)
adcb   $0x0,0xd0804(%edx)
add    %dl,(%esi,%ebp,1)
add    $0x1908,%eax
add    %al,(%eax)
jg     8057f38 <_IO_stdin_used+0x50f4>
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
add    $0x7f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
sub    %cl,0x60804(%ecx)
add    %al,(%eax)
or     %al,0xa0804(%edx)
add    %al,(%eax)
stos   %al,%es:(%edi)
add    $0x0,%al
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
addb   $0x0,0x208
sbb    %al,(%ebx)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %ch,-0x71(%eax)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
cmp    %cl,0x120804(%edi)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0x48(%edi)
mov    (%eax,%ecx,1),%es
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x2e(%edi)
lea    (%eax,%ecx,1),%eax
add    %al,(%eax)
or     $0x7f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,%dh
xchg   %eax,%edx
add    $0x8,%al
(bad)
xchg   %eax,%edx
add    $0x8,%al
out    %al,$0x92
add    $0x8,%al
notb   -0x6cf9f7fc(%edx)
add    $0x8,%al
push   %ss
xchg   %eax,%ebx
add    $0x8,%al
es
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    8057fcd <_IO_stdin_used+0x5189>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebx
add    $0x8,%al
mov    $0x93,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
out    %al,$0x93
add    $0x8,%al
notb   -0x6bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
xchg   %eax,%esp
add    $0x8,%al
es
xchg   %eax,%esp
add    $0x8,%al
ss
xchg   %eax,%esp
add    $0x8,%al
inc    %esi
xchg   %eax,%esp
add    $0x8,%al
push   %esi
xchg   %eax,%esp
add    $0x8,%al
xchg   %ax,%sp
add    $0x8,%al
jbe    805800e <_IO_stdin_used+0x51ca>
add    $0x8,%al
xchg   %dl,0x4949608(%esp,%eax,1)
or     %ah,-0x49f7fb6c(%esi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
out    %al,$0x94
add    $0x8,%al
notb   0x4950608(%esp,%eax,1)
or     %dl,(%esi)
xchg   %eax,%ebp
add    $0x8,%al
es
xchg   %eax,%ebp
add    $0x8,%al
ss
xchg   %eax,%ebp
add    $0x8,%al
inc    %esi
xchg   %eax,%ebp
add    $0x8,%al
push   %esi
xchg   %eax,%ebp
add    $0x8,%al
xchg   %ax,%bp
add    $0x8,%al
jbe    805804f <_IO_stdin_used+0x520b>
add    $0x8,%al
xchg   %dl,-0x6a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebp
add    $0x8,%al
mov    $0x95,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
out    %al,$0x95
add    $0x8,%al
notb   -0x69f9f7fc(%ebp)
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    8058090 <_IO_stdin_used+0x524c>
add    $0x8,%al
xchg   %dl,-0x6969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esi
add    $0x8,%al
mov    $0x96,%dh
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
out    %al,$0x96
add    $0x8,%al
notb   -0x68f9f7fc(%esi)
add    $0x8,%al
push   %ss
xchg   %eax,%edi
add    $0x8,%al
es
xchg   %eax,%edi
add    $0x8,%al
ss
xchg   %eax,%edi
add    $0x8,%al
inc    %esi
xchg   %eax,%edi
add    $0x8,%al
push   %esi
xchg   %eax,%edi
add    $0x8,%al
xchg   %ax,%di
add    $0x8,%al
jbe    80580d1 <_IO_stdin_used+0x528d>
add    $0x8,%al
xchg   %dl,-0x6869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edi
add    $0x8,%al
mov    $0x97,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
out    %al,$0x97
add    $0x8,%al
notb   -0x67f9f7fc(%edi)
add    $0x8,%al
push   %ss
cwtl
add    $0x8,%al
es
cwtl
add    $0x8,%al
ss
cwtl
add    $0x8,%al
inc    %esi
cwtl
add    $0x8,%al
push   %esi
cwtl
add    $0x8,%al
cbtw
add    $0x8,%al
jbe    8058112 <_IO_stdin_used+0x52ce>
add    $0x8,%al
xchg   %bl,-0x6769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cwtl
add    $0x8,%al
mov    $0x98,%dh
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
out    %al,$0x98
add    $0x8,%al
cmpsl  %es:(%edi),%ds:(%esi)
xor    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
bound  %eax,(%eax)
add    %al,(%eax)
scas   %es:(%edi),%al
xor    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jb     80581de <_IO_stdin_used+0x539a>
add    %al,(%eax)
mov    $0x1080535,%esi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
leave
xor    $0x10805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
data16
add    %al,(%eax)
add    %cl,%dh
xor    $0x20805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
imul   $0x35d70000,(%eax),%eax
add    $0x108,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %ah,%bl
xor    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jp     805822e <_IO_stdin_used+0x53ea>
add    %al,(%eax)
in     (%dx),%eax
xor    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jp     805823e <_IO_stdin_used+0x53fa>
add    %al,(%eax)
std
xor    $0x805,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%ebx)
ss
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
or     %esi,(%esi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%esi)
add    %al,(%eax)
adc    %dh,(%esi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx)
add    %al,(%eax)
sbb    %esi,(%esi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp)
add    %al,(%eax)
and    $0x36,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
sub    $0x36,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax)
add    %al,(%eax)
xor    %esi,(%esi)
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi)
add    %al,(%eax)
inc    %esi
add    %al,(%eax)
add    %al,0x36(%ecx)
add    $0x537d808,%eax
or     %cl,(%edx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,0x80537(%edi)
aad    $0x5
or     %al,%dl
aaa
add    $0x8,%eax
add    %bh,%al
aam    $0x5
or     %cl,%dh
aaa
add    $0x8,%eax
add    %bh,%ah
aam    $0x5
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x50000000
addl   $0x0,0x8
add    %al,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %dl,0x1000805(%ebx,%eax,4)
add    %al,(%eax)
rcl    $0x5,%bl
or     %al,(%ecx)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
