das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bl,0x3e3df9aa(%edx)
dec    %edx
inc    %ebx
xchg   %eax,%edx
test   %al,(%ecx,%ebp,8)
(bad)
hlt
mov    $0x72d34e33,%eax
test   $0x4,%al
adc    %eax,(%eax)
add    %al,(%eax)
push   %ecx
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    0x42010041,%ch
add    $0x0,%al
adcb   $0x7e,0x18930808(%eax)
or     %cl,(%ecx)
add    %al,(%edx,%eax,1)
add    $0x80400,%eax
push   %ecx
add    %al,(%eax)
add    %dl,0x0(%edx)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dl,0x0(%ebp)
add    %al,(%eax)
push   %esi
add    %al,(%eax)
add    %bl,0x0(%ecx)
add    %al,(%eax)
pop    %edx
add    %al,(%eax)
add    %bl,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %edi
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%gs:(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
add    %al,(%bx,%si)
add    %al,0x60(%ebx)
(bad)
sti
ljmp   $0x9a7f,$0x6b0eefd3
jl     1e6 <_init-0x1046>
(bad)
icebp
push   %cs
fnstenv 0x58(%ecx)
sbb    $0xac,%al
dec    %ebx
jecxz  1f8 <_init-0x1034>
mov    -0x41(%ebx),%dh
and    0x437c92e3(%ebx),%edi
inc    %ebp
aad    $0xec
test   $0x4,%al
pop    %ss
adc    %bl,-0x34efe8fc(%eax)
lcall  $0x1017,$0x498d379
stos   %eax,%es:(%edi)
add    $0x17,%al
adc    %cl,0x58(%esi)
or     $0x8b,%al
cwtl
out    %eax,$0x56
js     2b9 <_init-0xf73>
call   4adef53 <_end+0x4a2be6f>
pop    %ss
adc    %ch,0x49d1017(%esp,%eax,1)
pop    %ss
adc    %ah,0x9f3b7b99
add    $0x17,%al
adc    %dh,0x6129e66e(%edx)
(bad)
hlt
pop    %ecx
out    %al,(%dx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %bh,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    $0x2,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movsl  %ds:(%esi),%es:(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x0(%ebx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%ebx)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %cs
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jle    442 <_init-0xdea>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%dh
add    (%eax),%eax
add    %ah,(%edx)
add    %al,(%eax)
add    %bh,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sti
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,0x2
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %al,(%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ebx,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
ja     5b3 <_init-0xc79>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esi
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %ah,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x2(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     6e4 <_init-0xb48>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmc
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x4
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
je     735 <_init-0xaf7>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %edx
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popl   (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popf
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,-0x3ffffffc(%edi)
and    %cl,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
loop   7a3 <_init-0xa89>
add    %al,(%eax)
and    $0xc8,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %ch,0x4
pop    %ss
add    %al,(%eax)
scas   %es:(%edi),%al
push   %es
add    %al,(%eax)
adc    (%eax),%al
or     $0x1e800,%eax
add    %ch,(%edx,%edx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
push   %esi
add    $0x0,%al
add    %ah,(%eax,%eiz,1)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    %al,(%eax)
in     $0x2,%eax
add    %al,(%eax)
cmp    $0xc8,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
ltr    -0x43fffffc(%edi)
and    %cl,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
bound  %eax,(%eax,%eax,1)
add    %ah,%ah
xor    %cl,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %cl,0x4(%edi)
add    %al,(%eax)
and    $0x20,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
pop    %ss
add    %bl,-0x47fffffc(%ecx)
and    %cl,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
movb   $0x0,(%eax,%eax,1)
les    (%eax),%esp
or     (%eax),%eax
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
mov    $0x4,%bh
add    %al,(%eax)
shlb   (%eax)
or     (%eax),%eax
or     %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
jnp    856 <_init-0x9d6>
add    %al,(%eax)
test   $0x20,%al
or     (%eax),%eax
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
int3
add    $0x0,%al
add    %cl,%al
and    %cl,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
addr16 add $0x0,%al
add    %ah,0x4000b20(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%eax)
add    %dh,0x4(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %cl,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
stos   %eax,%es:(%edi)
add    $0x0,%al
add    %bh,(%eax)
enter  $0x0,$0x4
add    %al,(%eax)
add    %dl,(%ecx)
add    %cl,(%edi)
add    %dl,%dl
add    $0x0,%al
add    %cl,%ah
and    %cl,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
addl   $0xb20ac00,(%eax,%eax,1)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
loop   8c6 <_init-0x966>
add    %al,(%eax)
loopne 8f6 <_init-0x936>
or     (%eax),%eax
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
mov    $0x4,%dl
add    %al,(%eax)
pusha
and    %al,(%ecx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
xchg   %eax,(%eax,%eax,1)
add    %dh,0x4000b20(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%eax)
add    %cl,-0x4bfffffc(%ebp)
and    %cl,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %al,(%eax)
fadds  (%eax,%eax,1)
add    %ah,%al
and    %cl,(%ebx)
add    %al,(%eax)
adc    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     97d <_init-0x8af>
jae    946 <_init-0x8e6>
xor    0x2e(%edi),%esp
jae    98d <_init-0x89f>
cmp    %dh,%cs:(%ecx,%esi,1)
add    %bl,0x49(%edi)
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     991 <_init-0x89b>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    9bc <_init-0x870>
popa
jb     9bf <_init-0x86d>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    9b1 <_init-0x87b>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    9d2 <_init-0x85a>
gs
jae    962 <_init-0x8ca>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     9ce <_init-0x85e>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
outsb  %ds:(%esi),(%dx)
je     9e5 <_init-0x847>
jae    9e0 <_init-0x84c>
data16
jb     9e9 <_init-0x843>
gs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     9fa <_init-0x832>
imul   $0x66746e00,0x67(%esi),%ebp
jae    9f2 <_init-0x83a>
insl   (%dx),%es:(%edi)
gs
jb     9fe <_init-0x82e>
gs
pop    %edi
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs
gs
pop    %edi
jo     a0f <_init-0x81d>
jae    a0b <_init-0x821>
js     9a4 <_init-0x888>
outsb  %ds:(%esi),(%dx)
je     a0d <_init-0x81f>
jae    a08 <_init-0x824>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
fs
gs
jae    a16 <_init-0x816>
jb     a14 <_init-0x818>
jo     a26 <_init-0x806>
jae    a22 <_init-0x80a>
js     9bb <_init-0x871>
outsb  %ds:(%esi),(%dx)
je     a24 <_init-0x808>
jae    a1f <_init-0x80d>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
jo     a2d <_init-0x7ff>
jb     a37 <_init-0x7f5>
imul   $0x736e6f69,0x73(%ebx),%esi
pop    %edi
jo     a43 <_init-0x7e9>
jae    a3f <_init-0x7ed>
js     9d8 <_init-0x854>
outsb  %ds:(%esi),(%dx)
je     a41 <_init-0x7eb>
jae    a3c <_init-0x7f0>
insl   (%dx),%es:(%edi)
gs
jb     a48 <_init-0x7e4>
gs
pop    %edi
fs
gs
jae    a4a <_init-0x7e2>
jb     a48 <_init-0x7e4>
jo     a5a <_init-0x7d2>
jae    a56 <_init-0x7d6>
js     9ef <_init-0x83d>
outsb  %ds:(%esi),(%dx)
je     a58 <_init-0x7d4>
jae    a53 <_init-0x7d9>
outsl  %fs:(%esi),(%dx)
pop    %edi
addr16 jb a69 <_init-0x7c3>
jne    a6c <_init-0x7c0>
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     a71 <_init-0x7bb>
imul   $0x66746e00,0x67(%esi),%ebp
jae    a69 <_init-0x7c3>
jae    a71 <_init-0x7bb>
je     a6d <_init-0x7bf>
imul   $0x7461,0x5f(%ebp,%eiz,2),%bp
je     a89 <_init-0x7a3>
imul   $0x736574,0x75(%edx),%esp
outsb  %ds:(%esi),(%dx)
je     a87 <_init-0x7a5>
jae    a82 <_init-0x7aa>
jb     a8a <_init-0x7a2>
popa
fs
pop    %edi
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    a32 <_init-0x7fa>
outsb  %ds:(%esi),(%dx)
je     a9b <_init-0x791>
jae    a96 <_init-0x796>
jae    a9e <_init-0x78e>
je     a9a <_init-0x792>
imul   $0x6573,0x5f(%ebp,%eiz,2),%bp
arpl   %si,0x72(%ebp)
imul   $0x7366746e,0x0(%ecx,%edi,2),%esi
pop    %edi
addr16
gs
je     ab1 <_init-0x77b>
jne    ac7 <_init-0x765>
imul   $0x5f736674,0x6e(%eax,%eax,1),%esp
insb   (%dx),%es:(%edi)
gs
popa
jbe    ac6 <_init-0x766>
pop    %edi
imul   $0x6573,0x5f(%ebp,%eiz,2),%bp
arpl   %si,0x72(%ebp)
imul   $0x7366746e,0x0(%ecx,%edi,2),%esi
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
jo     ae2 <_init-0x74a>
jb     aec <_init-0x740>
imul   $0x736e6f69,0x73(%ebx),%esi
add    %ch,0x74(%esi)
data16
jae    aeb <_init-0x741>
jb     af3 <_init-0x739>
popa
fs
pop    %edi
jae    af7 <_init-0x735>
push   $0x66746e00
jae    af9 <_init-0x733>
jbe    afd <_init-0x72f>
insb   (%dx),%es:(%edi)
imul   $0x7869736f,0x70(%edi,%ebx,2),%esp
add    %ch,0x74(%esi)
data16
jae    b0a <_init-0x722>
popa
arpl   %bp,0x6f(%edi,%ebx,2)
ja     b20 <_init-0x70c>
gs
jb     ab5 <_init-0x777>
outsb  %ds:(%esi),(%dx)
je     b1e <_init-0x70e>
jae    b19 <_init-0x713>
jb     b21 <_init-0x70b>
popa
fs
pop    %edi
jae    b25 <_init-0x707>
jae    ac3 <_init-0x769>
outsb  %ds:(%esi),(%dx)
je     b2c <_init-0x700>
jae    b27 <_init-0x705>
addr16
gs
je     b2b <_init-0x701>
addr16 jb b3e <_init-0x6ee>
jne    b41 <_init-0x6eb>
add    %ch,0x74(%esi)
data16
jae    b36 <_init-0x6f6>
jae    b42 <_init-0x6ea>
fs
pop    %edi
jae    b46 <_init-0x6e6>
jp     b44 <_init-0x6e8>
add    %ch,0x74(%esi)
data16
jae    b44 <_init-0x6e8>
jb     b4c <_init-0x6e0>
popa
fs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jo     b5e <_init-0x6ce>
imul   $0x69665f00,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x696e695f,(%eax),%eax
je     afe <_init-0x72e>
outsb  %ds:(%esi),(%dx)
je     b67 <_init-0x6c5>
jae    b62 <_init-0x6ca>
jae    b66 <_init-0x6c6>
insl   (%dx),%es:(%edi)
gs
pop    %edi
jae    b73 <_init-0x6b9>
add    %ch,%fs:0x74(%esi)
data16
jae    b70 <_init-0x6bc>
jbe    b74 <_init-0x6b8>
insb   (%dx),%es:(%edi)
imul   $0x72637365,0x64(%edi,%ebx,2),%esp
add    %ch,0x74(%esi)
data16
jae    b81 <_init-0x6ab>
popa
je     b99 <_init-0x693>
jb     b86 <_init-0x6a6>
jae    b92 <_init-0x69a>
jp     b90 <_init-0x69c>
add    %ch,0x74(%esi)
data16
jae    b90 <_init-0x69c>
addr16
gs
je     b94 <_init-0x698>
jne    baa <_init-0x682>
gs
jb     b3a <_init-0x6f2>
outsb  %ds:(%esi),(%dx)
je     ba3 <_init-0x689>
jae    b9e <_init-0x68e>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x6c69665f,0x65(%edx),%edi
gs
pop    %edi
jae    bb6 <_init-0x676>
arpl   %si,0x72(%ebp)
imul   $0x7366746e,0x0(%ecx,%edi,2),%esi
pop    %edi
addr16
gs
je     bc0 <_init-0x66c>
imul   $0x7461,0x5f(%ebp,%eiz,2),%bp
je     bdc <_init-0x650>
imul   $0x736574,0x75(%edx),%esp
outsb  %ds:(%esi),(%dx)
je     bda <_init-0x652>
jae    bd5 <_init-0x657>
imul   $0x755f,0x64(%esi),%bp
jae    be3 <_init-0x649>
jb     b80 <_init-0x6ac>
outsb  %ds:(%esi),(%dx)
je     be9 <_init-0x643>
jae    be4 <_init-0x648>
jae    bf6 <_init-0x636>
jb     bfd <_init-0x62f>
pop    %edi
jo     bfb <_init-0x631>
jae    bf7 <_init-0x635>
js     b90 <_init-0x69c>
outsb  %ds:(%esi),(%dx)
je     bf9 <_init-0x633>
jae    bf4 <_init-0x638>
imul   $0x675f,0x64(%esi),%bp
jb     c0c <_init-0x620>
jne    c0f <_init-0x61d>
add    %ch,0x74(%esi)
data16
jae    c04 <_init-0x628>
outsl  %fs:(%esi),(%dx)
pop    %edi
jne    c1d <_init-0x60f>
gs
jb     c0c <_init-0x620>
insl   (%dx),%es:(%edi)
popa
jo     c21 <_init-0x60b>
imul   $0x66746e00,0x67(%esi),%ebp
jae    c19 <_init-0x613>
jb     c21 <_init-0x60b>
popa
fs
pop    %edi
jae    c2a <_init-0x602>
imul   $0x7366746e,(%eax),%eax
pop    %edi
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
fs
pop    %edi
fs
gs
jae    c35 <_init-0x5f7>
jb     bd4 <_init-0x658>
outsb  %ds:(%esi),(%dx)
je     c3d <_init-0x5ef>
jae    c38 <_init-0x5f4>
addr16
gs
je     c3c <_init-0x5f0>
imul   $0x6573,0x5f(%ebp,%eiz,2),%bp
arpl   %si,0x72(%ebp)
imul   $0x6362696c,0x0(%ecx,%edi,2),%esi
jae,pn c61 <_init-0x5cb>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    c6f <_init-0x5bd>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    c7c <_init-0x5b0>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jo     c88 <_init-0x5a4>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     c8b <_init-0x5a1>
je     c24 <_init-0x608>
pop    %edi
dec    %ecx
dec    %edi
pop    %edi
jo     c9f <_init-0x58d>
je     c8f <_init-0x59d>
add    %ah,0x6f(%esi)
jo     c96 <_init-0x596>
outsb  %ds:(%esi),(%dx)
add    %dh,0x74(%ebx)
jb     ca9 <_init-0x583>
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
insb   (%dx),%es:(%edi)
js     cb3 <_init-0x579>
je     ca3 <_init-0x589>
je     c44 <_init-0x5e8>
jo     cbb <_init-0x571>
je     cab <_init-0x581>
push   $0x73007261
je     cb3 <_init-0x579>
imul   $0x74617369,0x0(%esi),%ebp
je     cd1 <_init-0x55b>
add    %dh,0x74(%ebx)
jb     cc9 <_init-0x563>
outsb  %gs:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    cca <_init-0x562>
je     c67 <_init-0x5c5>
pop    %edi
pop    %edi
gs
jb     cde <_init-0x54e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x61657200,0x6e(%edi),%ebp
add    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
data16
jo     cfb <_init-0x531>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x63,(%eax),%eax
je     cfe <_init-0x52e>
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebx)
outsl  %fs:(%esi),(%dx)
jne    d12 <_init-0x51a>
add    %ah,0x70(%esi)
jne    d17 <_init-0x515>
jae    ca5 <_init-0x587>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    d17 <_init-0x515>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     d25 <_init-0x507>
imul   $0x72656474,0x73(%eax,%eax,1),%esp
jb     cc8 <_init-0x564>
addr16
gs
je     d41 <_init-0x4eb>
imul   $0x77637465,0x67(%eax,%eax,1),%esp
add    %ah,%fs:0x77(%esi)
jb     d43 <_init-0x4e9>
je     d41 <_init-0x4eb>
add    %bl,0x5f(%edi)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x74(%ebx)
jb     d51 <_init-0x4db>
push   $0x5f5f0072
jae    d69 <_init-0x4c3>
jb     d5a <_init-0x4d2>
jo     d72 <_init-0x4ba>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
imul   $0x696c,0x61(%esi),%bp
jp     d71 <_init-0x4bb>
add    %bl,0x5f(%edi)
js     d84 <_init-0x4a8>
je     d74 <_init-0x4b8>
je     d15 <_init-0x517>
addr16
gs
je     d91 <_init-0x49b>
popa
je     d90 <_init-0x49c>
jb     d1e <_init-0x50e>
pop    %edi
dec    %ecx
dec    %edi
pop    %edi
addr16
gs
je     d89 <_init-0x4a3>
add    %dh,0x74(%ebx)
jb     d90 <_init-0x49c>
jb     d9f <_init-0x48d>
outsl  %ds:(%esi),(%dx)
jb     d30 <_init-0x4fc>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     db0 <_init-0x47c>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x63707473,0x0(%esi),%ebp
jo     dc1 <_init-0x46b>
add    %ah,0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jae    dc6 <_init-0x466>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x74616465,0x5f(%eax,%eax,1),%ebp
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    de2 <_init-0x44a>
popa
jb     de5 <_init-0x447>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x61(%edi)
jb     de9 <_init-0x443>
imul   $0x69660073,0x67(%esi),%ebp
jb     df7 <_init-0x435>
je     de7 <_init-0x445>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
outsl  %ds:(%esi),(%dx)
jo     e02 <_init-0x42a>
pop    %edi
bound  %eax,(%eax)
outsl  %ds:(%esi),(%dx)
jo     e08 <_init-0x424>
pop    %edi
jbe    d97 <_init-0x495>
outsl  %ds:(%esi),(%dx)
jo     e0e <_init-0x41e>
pop    %edi
push   $0x70616d00
jo     e0b <_init-0x421>
outsb  %ds:(%esi),(%dx)
addr16 je e1f <_init-0x40d>
jo     e0d <_init-0x41f>
add    %ch,0x70(%edi)
je     e0c <_init-0x420>
jb     daf <_init-0x47d>
outsb  %ds:(%esi),(%dx)
je     e18 <_init-0x414>
jae    e13 <_init-0x419>
push   $0x6c646e61
add    %bl,%gs:0x66(%edi)
jo     e1e <_init-0x40e>
push   $0x746e0077
data16
jae    e26 <_init-0x406>
arpl   %bp,0x6e(%edi)
je     e31 <_init-0x3fb>
js     e42 <_init-0x3ea>
add    %ah,0x72(%ebp)
jb     e42 <_init-0x3ea>
jb     e48 <_init-0x3e4>
add    %ch,0x70(%edi)
je     e39 <_init-0x3f3>
popa
add    %ch,0x70(%edi)
je     e3f <_init-0x3ed>
jae    de2 <_init-0x44a>
outsl  %ds:(%esi),(%dx)
jo     e59 <_init-0x3d3>
pop    %edi
jne    de8 <_init-0x444>
jae    e4f <_init-0x3dd>
arpl   %si,0x72(%ebp)
fs
popa
je     e52 <_init-0x3da>
add    %ch,0x70(%edi)
je     e55 <_init-0x3d7>
add    %al,%gs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    $0x2000200,%eax
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %eax,(%eax)
push   %es
add    %bl,%bl
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x70000,0xd(%ecx),%ebp
call   10000f2d <_end+0xff4de49>
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%esi)
add    %dh,%dl
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x50000,(%ecx),%ecx
incb   (%eax,%eax,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x50a,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x30000,%eax
adc    $0x5,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    %ch,0x69(%ecx)
or     $0x20000,%eax
push   %ds
add    $0x0,%eax
pushf
sbb    $0x80001,%eax
add    %al,(%eax)
mov    0x800011d,%al
add    %al,(%eax)
add    %dh,%ah
pop    %ds
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    $0x20,%al
add    %eax,(%eax)
or     %al,(%eax)
add    %al,(%eax)
fcompl (%edi)
add    %eax,(%eax)
push   %es
add    $0x1fe00000,%eax
add    %eax,(%eax)
push   %es
or     %al,(%eax)
add    %ah,%ah
pop    %ds
add    %eax,(%eax)
push   %es
push   %ds
add    %al,(%eax)
call   60010d8 <_end+0x5f4dff4>
sub    %al,(%eax)
add    %ch,%ah
pop    %ds
add    %eax,(%eax)
push   %es
xor    (%eax),%al
add    %dh,%al
pop    %ds
add    %eax,(%eax)
push   %es
cmp    $0x0,%al
add    %bh,%al
pop    %ds
add    %eax,(%eax)
push   %es
inc    %esp
add    %al,(%eax)
cld
pop    %ds
add    %eax,(%eax)
push   %es
dec    %ebp
mov    $0x1e,%ah
add    %eax,(%eax)
pop    %es
add    %eax,(%eax)
add    %bh,0x700011e(%eax)
add    (%eax),%al
add    %bh,0x3070001(%esi,%ebx,1)
add    %al,(%eax)
rcrb   $0x1,(%esi)
add    %al,(%edi)
add    $0x0,%al
add    %al,%ah
push   %ds
add    %eax,(%eax)
pop    %es
push   %es
add    %al,(%eax)
enter  $0x11e,$0x0
pop    %es
pop    %es
add    %al,(%eax)
int3
push   %ds
add    %eax,(%eax)
pop    %es
or     %eax,(%eax)
add    %dl,%al
push   %ds
add    %eax,(%eax)
pop    %es
or     (%eax),%al
add    %dl,%ah
push   %ds
add    %eax,(%eax)
pop    %es
or     (%eax),%eax
add    %bl,%al
push   %ds
add    %eax,(%eax)
pop    %es
or     $0x0,%al
add    %bl,%ah
push   %ds
add    %eax,(%eax)
pop    %es
or     $0x1ee00000,%eax
add    %eax,(%eax)
pop    %es
push   %cs
add    %al,(%eax)
in     $0x1e,%al
add    %eax,(%eax)
pop    %es
sldt   (%eax)
call   7001167 <_end+0x6f4e083>
adc    %al,(%eax)
add    %ch,%ah
push   %ds
add    %eax,(%eax)
pop    %es
adc    %eax,(%eax)
add    %dh,%al
push   %ds
add    %eax,(%eax)
pop    %es
adc    (%eax),%al
add    %dh,%ah
push   %ds
add    %eax,(%eax)
pop    %es
adc    (%eax),%eax
add    %bh,%al
push   %ds
add    %eax,(%eax)
pop    %es
adc    $0x0,%al
add    %bh,%ah
push   %ds
add    %eax,(%eax)
pop    %es
adc    $0x1f000000,%eax
add    %eax,(%eax)
pop    %es
push   %ss
add    %al,(%eax)
add    $0x1f,%al
add    %eax,(%eax)
pop    %es
pop    %ss
add    %al,(%eax)
or     %bl,(%edi)
add    %eax,(%eax)
pop    %es
sbb    %al,(%eax)
add    %cl,(%edi,%ebx,1)
add    %eax,(%eax)
pop    %es
sbb    %eax,(%eax)
add    %dl,(%eax)
pop    %ds
add    %eax,(%eax)
pop    %es
sbb    (%eax),%al
add    %dl,(%edi,%ebx,1)
add    %eax,(%eax)
pop    %es
sbb    (%eax),%eax
add    %bl,(%eax)
pop    %ds
add    %eax,(%eax)
pop    %es
sbb    $0x0,%al
add    %bl,(%edi,%ebx,1)
add    %eax,(%eax)
pop    %es
sbb    $0x1f200000,%eax
add    %eax,(%eax)
pop    %es
push   %ds
add    %al,(%eax)
and    $0x1f,%al
add    %eax,(%eax)
pop    %es
pop    %ds
add    %al,(%eax)
sub    %bl,(%edi)
add    %eax,(%eax)
pop    %es
and    %al,(%eax)
add    %ch,(%edi,%ebx,1)
add    %eax,(%eax)
pop    %es
and    %eax,(%eax)
add    %dh,(%eax)
pop    %ds
add    %eax,(%eax)
pop    %es
and    (%eax),%al
add    %dh,(%edi,%ebx,1)
add    %eax,(%eax)
pop    %es
and    (%eax),%eax
add    %bh,(%eax)
pop    %ds
add    %eax,(%eax)
pop    %es
and    $0x0,%al
add    %bh,(%edi,%ebx,1)
add    %eax,(%eax)
pop    %es
and    $0x1f400000,%eax
add    %eax,(%eax)
pop    %es
add    %al,%es:(%eax)
inc    %esp
pop    %ds
add    %eax,(%eax)
pop    %es
daa
add    %al,(%eax)
dec    %eax
pop    %ds
add    %eax,(%eax)
pop    %es
sub    %al,(%eax)
add    %cl,0x1(%edi,%ebx,1)
add    %al,(%edi)
sub    %eax,(%eax)
add    %dl,0x1f(%eax)
add    %eax,(%eax)
pop    %es
sub    (%eax),%al
add    %dl,0x1(%edi,%ebx,1)
add    %al,(%edi)
sub    (%eax),%eax
add    %bl,0x1f(%eax)
add    %eax,(%eax)
pop    %es
sub    $0x0,%al
add    %bl,0x1(%edi,%ebx,1)
add    %al,(%edi)
sub    $0x1f600000,%eax
add    %eax,(%eax)
pop    %es
add    %al,%cs:(%eax)
fs
pop    %ds
add    %eax,(%eax)
pop    %es
das
add    %al,(%eax)
push   $0x700011f
xor    %al,(%eax)
add    %ch,0x1(%edi,%ebx,1)
add    %al,(%edi)
xor    %eax,(%eax)
add    %dh,0x1f(%eax)
add    %eax,(%eax)
pop    %es
xor    (%eax),%eax
add    %dh,0x1(%edi,%ebx,1)
add    %al,(%edi)
xor    $0x0,%al
add    %bh,0x1f(%eax)
add    %eax,(%eax)
pop    %es
xor    $0x1f7c0000,%eax
add    %eax,(%eax)
pop    %es
add    %al,%ss:(%eax)
sbbb   $0x1,(%edi)
add    %al,(%edi)
aaa
add    %al,(%eax)
test   %bl,(%edi)
add    %eax,(%eax)
pop    %es
cmp    %al,(%eax)
add    %cl,0x700011f(%eax)
cmp    %eax,(%eax)
add    %cl,0x3a070001(%edi,%ebx,1)
add    %al,(%eax)
nop
pop    %ds
add    %eax,(%eax)
pop    %es
cmp    (%eax),%eax
add    %dl,0x3d070001(%edi,%ebx,1)
add    %al,(%eax)
cwtl
pop    %ds
add    %eax,(%eax)
pop    %es
add    %al,%ds:(%eax)
pushf
pop    %ds
add    %eax,(%eax)
pop    %es
aas
add    %al,(%eax)
mov    0x700011f,%al
inc    %eax
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pop    %ds
add    %eax,(%eax)
pop    %es
inc    %ecx
add    %al,(%eax)
test   $0x1f,%al
add    %eax,(%eax)
pop    %es
inc    %edx
add    %al,(%eax)
lods   %ds:(%esi),%al
pop    %ds
add    %eax,(%eax)
pop    %es
inc    %ebx
add    %al,(%eax)
mov    $0x1f,%al
add    %eax,(%eax)
pop    %es
inc    %ebp
add    %al,(%eax)
mov    $0x1f,%ah
add    %eax,(%eax)
pop    %es
inc    %esi
add    %al,(%eax)
mov    $0x700011f,%eax
inc    %edi
add    %al,(%eax)
mov    $0x700011f,%esp
dec    %eax
add    %al,(%eax)
rcrb   $0x1,(%edi)
add    %al,(%edi)
dec    %ecx
add    %al,(%eax)
les    (%edi),%ebx
add    %eax,(%eax)
pop    %es
dec    %edx
add    %al,(%eax)
enter  $0x11f,$0x0
pop    %es
dec    %ebx
add    %al,(%eax)
int3
pop    %ds
add    %eax,(%eax)
pop    %es
dec    %esp
add    %al,(%eax)
rcrb   (%edi)
add    %eax,(%eax)
pop    %es
dec    %esi
add    %al,(%eax)
aam    $0x1f
add    %eax,(%eax)
pop    %es
dec    %edi
add    %al,(%eax)
fcomps (%edi)
add    %eax,(%eax)
pop    %es
push   %eax
push   %ebx
sub    $0x8,%esp
call   1df0 <main+0x6f0>
add    $0x10c73,%ebx
mov    0x140(%ebx),%eax
test   %eax,%eax
je     124a <_init+0x1e>
call   14b0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x4(%ebx)
jmp    *0x8(%ebx)
add    %al,(%eax)
jmp    *0xc(%ebx)
push   $0x0
jmp    1250 <_init+0x24>
jmp    *0x10(%ebx)
push   $0x8
jmp    1250 <_init+0x24>
jmp    *0x14(%ebx)
push   $0x10
jmp    1250 <_init+0x24>
jmp    *0x18(%ebx)
push   $0x18
jmp    1250 <_init+0x24>
jmp    *0x1c(%ebx)
push   $0x20
jmp    1250 <_init+0x24>
jmp    *0x20(%ebx)
push   $0x28
jmp    1250 <_init+0x24>
jmp    *0x24(%ebx)
push   $0x30
jmp    1250 <_init+0x24>
jmp    *0x28(%ebx)
push   $0x38
jmp    1250 <_init+0x24>
jmp    *0x2c(%ebx)
push   $0x40
jmp    1250 <_init+0x24>
jmp    *0x30(%ebx)
push   $0x48
jmp    1250 <_init+0x24>
jmp    *0x34(%ebx)
push   $0x50
jmp    1250 <_init+0x24>
jmp    *0x38(%ebx)
push   $0x58
jmp    1250 <_init+0x24>
jmp    *0x3c(%ebx)
push   $0x60
jmp    1250 <_init+0x24>
jmp    *0x40(%ebx)
push   $0x68
jmp    1250 <_init+0x24>
jmp    *0x44(%ebx)
push   $0x70
jmp    1250 <_init+0x24>
jmp    *0x48(%ebx)
push   $0x78
jmp    1250 <_init+0x24>
jmp    *0x4c(%ebx)
push   $0x80
jmp    1250 <_init+0x24>
jmp    *0x50(%ebx)
push   $0x88
jmp    1250 <_init+0x24>
jmp    *0x54(%ebx)
push   $0x90
jmp    1250 <_init+0x24>
jmp    *0x58(%ebx)
push   $0x98
jmp    1250 <_init+0x24>
jmp    *0x5c(%ebx)
push   $0xa0
jmp    1250 <_init+0x24>
jmp    *0x60(%ebx)
push   $0xa8
jmp    1250 <_init+0x24>
jmp    *0x64(%ebx)
push   $0xb0
jmp    1250 <_init+0x24>
jmp    *0x68(%ebx)
push   $0xb8
jmp    1250 <_init+0x24>
jmp    *0x6c(%ebx)
push   $0xc0
jmp    1250 <_init+0x24>
jmp    *0x70(%ebx)
push   $0xc8
jmp    1250 <_init+0x24>
jmp    *0x74(%ebx)
push   $0xd0
jmp    1250 <_init+0x24>
jmp    *0x78(%ebx)
push   $0xd8
jmp    1250 <_init+0x24>
jmp    *0x7c(%ebx)
push   $0xe0
jmp    1250 <_init+0x24>
jmp    *0x80(%ebx)
push   $0xe8
jmp    1250 <_init+0x24>
jmp    *0x84(%ebx)
push   $0xf0
jmp    1250 <_init+0x24>
jmp    *0x88(%ebx)
push   $0xf8
jmp    1250 <_init+0x24>
jmp    *0x8c(%ebx)
push   $0x100
jmp    1250 <_init+0x24>
jmp    *0x90(%ebx)
push   $0x108
jmp    1250 <_init+0x24>
jmp    *0x94(%ebx)
push   $0x110
jmp    1250 <_init+0x24>
jmp    *0x98(%ebx)
push   $0x118
jmp    1250 <_init+0x24>
jmp    *0x9c(%ebx)
push   $0x120
jmp    1250 <_init+0x24>
jmp    *0xa0(%ebx)
push   $0x128
jmp    1250 <_init+0x24>
jmp    *0xa4(%ebx)
push   $0x130
jmp    1250 <_init+0x24>
jmp    *0xa8(%ebx)
push   $0x138
jmp    1250 <_init+0x24>
jmp    *0xac(%ebx)
push   $0x140
jmp    1250 <_init+0x24>
jmp    *0xb0(%ebx)
push   $0x148
jmp    1250 <_init+0x24>
jmp    *0xb4(%ebx)
push   $0x150
jmp    1250 <_init+0x24>
jmp    *0xb8(%ebx)
push   $0x158
jmp    1250 <_init+0x24>
jmp    *0xbc(%ebx)
push   $0x160
jmp    1250 <_init+0x24>
jmp    *0xc0(%ebx)
push   $0x168
jmp    1250 <_init+0x24>
jmp    *0xc4(%ebx)
push   $0x170
jmp    1250 <_init+0x24>
jmp    *0xc8(%ebx)
push   $0x178
jmp    1250 <_init+0x24>
jmp    *0xcc(%ebx)
push   $0x180
jmp    1250 <_init+0x24>
jmp    *0xd0(%ebx)
push   $0x188
jmp    1250 <_init+0x24>
jmp    *0xd4(%ebx)
push   $0x190
jmp    1250 <_init+0x24>
jmp    *0xd8(%ebx)
push   $0x198
jmp    1250 <_init+0x24>
jmp    *0xdc(%ebx)
push   $0x1a0
jmp    1250 <_init+0x24>
jmp    *0xe0(%ebx)
push   $0x1a8
jmp    1250 <_init+0x24>
jmp    *0xe4(%ebx)
push   $0x1b0
jmp    1250 <_init+0x24>
jmp    *0xe8(%ebx)
push   $0x1b8
jmp    1250 <_init+0x24>
jmp    *0xec(%ebx)
push   $0x1c0
jmp    1250 <_init+0x24>
jmp    *0xf0(%ebx)
push   $0x1c8
jmp    1250 <_init+0x24>
jmp    *0xf4(%ebx)
push   $0x1d0
jmp    1250 <_init+0x24>
jmp    *0xf8(%ebx)
push   $0x1d8
jmp    1250 <_init+0x24>
jmp    *0xfc(%ebx)
push   $0x1e0
jmp    1250 <_init+0x24>
jmp    *0x100(%ebx)
push   $0x1e8
jmp    1250 <_init+0x24>
jmp    *0x104(%ebx)
push   $0x1f0
jmp    1250 <_init+0x24>
jmp    *0x108(%ebx)
push   $0x1f8
jmp    1250 <_init+0x24>
jmp    *0x10c(%ebx)
push   $0x200
jmp    1250 <_init+0x24>
jmp    *0x110(%ebx)
push   $0x208
jmp    1250 <_init+0x24>
jmp    *0x114(%ebx)
push   $0x210
jmp    1250 <_init+0x24>
jmp    *0x118(%ebx)
push   $0x218
jmp    1250 <_init+0x24>
jmp    *0x11c(%ebx)
push   $0x220
jmp    1250 <_init+0x24>
jmp    *0x120(%ebx)
push   $0x228
jmp    1250 <_init+0x24>
jmp    *0x124(%ebx)
push   $0x230
jmp    1250 <_init+0x24>
jmp    *0x128(%ebx)
push   $0x238
jmp    1250 <_init+0x24>
jmp    *0x12c(%ebx)
push   $0x240
jmp    1250 <_init+0x24>
jmp    *0x130(%ebx)
push   $0x248
jmp    1250 <_init+0x24>
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x1079d,%ebx
and    $0xfffffff0,%esp
sub    $0x30,%esp
mov    0xc(%ebp),%edi
lea    -0x4248(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa01f8(%ebx),%eax
lea    0xa0218(%ebx),%esi
movl   $0x0,(%eax)
mov    0x8(%ebp),%eax
mov    %edi,0x4(%esp)
movl   $0x0,(%esi)
mov    %eax,(%esp)
call   6bf0 <main+0x54f0>
test   %eax,%eax
je     189b <main+0x19b>
lea    0xa0238(%ebx),%ecx
lea    0xa0238(%ebx),%edx
add    $0x1000,%ecx
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%edx)
add    $0x4,%edx
cmp    %ecx,%edx
jne    1770 <main+0x70>
lea    0xa0228(%ebx),%edx
movl   $0x0,(%edx)
movl   $0x0,0x4(%edx)
lea    0xa01fc(%ebx),%edx
movl   $0x0,(%edx)
lea    0xa020c(%ebx),%edx
movl   $0x0,(%edx)
mov    0x8(%ebp),%edx
sub    %eax,%edx
cmp    $0x1,%edx
je     18fc <main+0x1fc>
jle    1962 <main+0x262>
cmp    $0x2,%edx
je     18b5 <main+0x1b5>
cmp    $0x3,%edx
jne    1ad7 <main+0x3d7>
add    $0x1,%eax
mov    %ecx,0x24(%esp)
lea    0x0(,%eax,4),%ecx
mov    (%edi,%eax,4),%eax
mov    %ecx,0x28(%esp)
mov    %eax,(%esp)
call   bf90 <main+0xa890>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     1bc5 <main+0x4c5>
call   13d0 <getuid@plt>
mov    0x24(%esp),%ecx
test   %eax,%eax
jne    1af4 <main+0x3f4>
mov    0x28(%esp),%edx
mov    %ecx,0x20(%esp)
sub    $0x4,%edx
lea    (%edi,%edx,1),%eax
mov    %eax,0x28(%esp)
mov    (%eax),%eax
movl   $0x0,0x4(%esp)
mov    %edx,0x24(%esp)
mov    %eax,(%esp)
call   1f80 <main+0x880>
test   %eax,%eax
je     1d1d <main+0x61d>
lea    0xa0210(%ebx),%eax
mov    0x24(%esp),%edx
cmpl   $0x0,(%eax)
je     1d5d <main+0x65d>
lea    0xa0238(%ebx),%eax
mov    0x20(%esp),%ecx
lea    0x0(%esi),%esi
movl   $0x0,(%eax)
add    $0x4,%eax
cmp    %ecx,%eax
jne    1858 <main+0x158>
mov    0x8(%edi,%edx,1),%eax
mov    0x2c(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   be20 <main+0xa720>
mov    0x28(%esp),%eax
xor    %edi,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   20c0 <main+0x9c0>
jmp    1b30 <main+0x430>
test   %edi,%edi
je     1bcf <main+0x4cf>
call   a200 <main+0x8b00>
lea    -0x32eb(%ebx),%eax
mov    %eax,(%esp)
call   72b0 <main+0x5bb0>
movl   $0x1,(%esp)
call   14d0 <exit@plt>
lea    0xa0200(%ebx),%edx
cmpl   $0x0,(%edx)
jne    1b93 <main+0x493>
lea    0xa0220(%ebx),%edx
cmpl   $0x0,(%edx)
jne    1c67 <main+0x567>
lea    0xa0224(%ebx),%edx
add    $0x1,%eax
cmpl   $0x0,(%edx)
mov    (%edi,%eax,4),%edx
mov    -0x4(%edi,%eax,4),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
je     1b53 <main+0x453>
call   5ac0 <main+0x43c0>
mov    %eax,%edi
jmp    197b <main+0x27b>
lea    0xa021c(%ebx),%edx
cmpl   $0x0,(%edx)
jne    1b81 <main+0x481>
lea    0xa0208(%ebx),%edx
cmpl   $0x0,(%edx)
jne    1c27 <main+0x527>
lea    0xa0200(%ebx),%edx
cmpl   $0x0,(%edx)
jne    1b65 <main+0x465>
lea    0xa0210(%ebx),%edx
cmpl   $0x0,(%edx)
jne    1d01 <main+0x601>
lea    0xa0220(%ebx),%edx
cmpl   $0x0,(%edx)
je     1cc7 <main+0x5c7>
mov    0x144(%ebx),%edx
mov    (%edi,%eax,4),%eax
mov    (%edx),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   9400 <main+0x7d00>
mov    %eax,%edi
jmp    197b <main+0x27b>
test   %edx,%edx
jne    1ad7 <main+0x3d7>
lea    0xa0208(%ebx),%eax
xor    %edi,%edi
cmpl   $0x0,(%eax)
jne    1bb0 <main+0x4b0>
lea    0xa01f8(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     19b4 <main+0x2b4>
cmp    $0x1,%eax
jbe    1ae9 <main+0x3e9>
lea    -0x3380(%ebx),%edx
mov    %eax,0x8(%esp)
lea    -0x333a(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    (%esi),%eax
test   %eax,%eax
je     1a26 <main+0x326>
cmp    $0x1,%eax
jbe    1ade <main+0x3de>
lea    -0x3366(%ebx),%edx
mov    %eax,0x8(%esp)
lea    -0x3326(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x1,(%esp)
call   16d0 <isatty@plt>
test   %eax,%eax
je     1a3a <main+0x33a>
call   a200 <main+0x8b00>
lea    -0x32eb(%ebx),%eax
mov    %eax,(%esp)
call   72b0 <main+0x5bb0>
test   %edi,%edi
jne    18a9 <main+0x1a9>
mov    (%esi),%eax
test   %eax,%eax
jne    18a9 <main+0x1a9>
lea    -0xc(%ebp),%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %edi,%edi
jne    19e7 <main+0x2e7>
lea    -0x3316(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    19e7 <main+0x2e7>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   12b0 <fflush@plt>
lea    0xa01f8(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     1a8f <main+0x38f>
cmp    $0x1,%eax
jbe    1c1c <main+0x51c>
lea    -0x3380(%ebx),%edx
mov    0x138(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0xc(%esp)
lea    -0x333a(%ebx),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    (%esi),%eax
test   %eax,%eax
je     188e <main+0x18e>
cmp    $0x1,%eax
jbe    1c11 <main+0x511>
lea    -0x3366(%ebx),%edx
mov    0x138(%ebx),%ecx
mov    (%ecx),%ecx
mov    %eax,0xc(%esp)
lea    -0x3326(%ebx),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,(%esp)
call   16b0 <__fprintf_chk@plt>
jmp    19f7 <main+0x2f7>
xor    %edi,%edi
jmp    197b <main+0x27b>
lea    -0x335a(%ebx),%edx
jmp    19c9 <main+0x2c9>
lea    -0x3372(%ebx),%edx
jmp    1996 <main+0x296>
call   13d0 <getuid@plt>
test   %eax,%eax
mov    0x138(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0xc(%esp)
je     1cd9 <main+0x5d9>
lea    -0x5164(%ebx),%eax
mov    $0x1,%edi
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
lea    -0x37e4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
movl   $0x1da6,0x8(%esp)
mov    %eax,(%esp)
call   a080 <main+0x8980>
jmp    197b <main+0x27b>
call   ba60 <main+0xa360>
mov    %eax,%edi
lea    0x0(%esi),%esi
jmp    197b <main+0x27b>
mov    (%edi,%eax,4),%eax
lea    -0x3397(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   b8c0 <main+0xa1c0>
mov    %eax,%edi
jmp    197b <main+0x27b>
mov    (%edi,%eax,4),%eax
mov    %eax,(%esp)
call   bc90 <main+0xa590>
mov    %eax,%edi
jmp    197b <main+0x27b>
add    $0x1,%eax
mov    (%edi,%eax,4),%edx
mov    -0x4(%edi,%eax,4),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   b8c0 <main+0xa1c0>
mov    %eax,%edi
jmp    197b <main+0x27b>
mov    0x144(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   ab60 <main+0x9460>
jmp    197b <main+0x27b>
mov    $0x1,%edi
jmp    197b <main+0x27b>
mov    0x138(%ebx),%eax
mov    (%eax),%eax
movl   $0x15,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x3301(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
call   a200 <main+0x8b00>
lea    -0x32eb(%ebx),%eax
mov    %eax,(%esp)
call   72b0 <main+0x5bb0>
jmp    1a12 <main+0x312>
lea    -0x335a(%ebx),%edx
jmp    1aa8 <main+0x3a8>
lea    -0x3372(%ebx),%edx
jmp    1a65 <main+0x365>
lea    (%edi,%eax,4),%edx
mov    (%edx),%eax
lea    -0x3350(%ebx),%ecx
mov    %ecx,0x4(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   1580 <fopen@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,%edi
je     1d76 <main+0x676>
mov    %eax,(%esp)
call   ab60 <main+0x9460>
mov    %edi,(%esp)
xor    %edi,%edi
call   1330 <fclose@plt>
jmp    197b <main+0x27b>
add    $0x1,%eax
lea    0x0(,%eax,4),%ecx
mov    (%edi,%eax,4),%eax
lea    -0x3350(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,(%esp)
call   1580 <fopen@plt>
mov    0x2c(%esp),%ecx
test   %eax,%eax
mov    %eax,%edx
je     1da8 <main+0x6a8>
mov    -0x4(%edi,%ecx,1),%eax
mov    %edx,0x4(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   9400 <main+0x7d00>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%edi
call   1330 <fclose@plt>
jmp    197b <main+0x27b>
mov    (%edi,%eax,4),%eax
mov    %eax,(%esp)
call   a9d0 <main+0x92d0>
mov    %eax,%edi
jmp    197b <main+0x27b>
lea    -0x3a3c(%ebx),%eax
mov    $0x1,%edi
movl   $0x1c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
jmp    1b30 <main+0x430>
mov    (%edi,%eax,4),%eax
lea    -0x3397(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   ba60 <main+0xa360>
mov    %eax,%edi
jmp    197b <main+0x27b>
mov    0x28(%esp),%eax
mov    0x138(%ebx),%edi
mov    (%eax),%edx
mov    (%edi),%eax
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
lea    -0x3a56(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    (%edi),%eax
mov    $0x1,%edi
mov    %eax,(%esp)
call   2730 <main+0x1030>
jmp    1b30 <main+0x430>
mov    0x8(%edi,%edx,1),%eax
mov    0x2c(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   b350 <main+0x9c50>
jmp    1879 <main+0x179>
mov    (%edx),%edx
mov    0x138(%ebx),%eax
mov    $0x1,%edi
mov    (%eax),%eax
mov    %edx,0xc(%esp)
lea    -0x334d(%ebx),%edx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
jmp    197b <main+0x27b>
mov    -0x4(%edi,%ecx,1),%edx
jmp    1d78 <main+0x678>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
call   1de0 <main+0x6e0>
add    $0x100ea,%ebx
lea    -0x56a8(%ebx),%eax
push   %eax
lea    -0x5718(%ebx),%eax
push   %eax
push   %ecx
push   %esi
pushl  0x14c(%ebx)
call   1540 <__libc_start_main@plt>
hlt
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %ebx
call   1df0 <main+0x6f0>
add    $0x1009f,%ebx
sub    $0x14,%esp
lea    0x17f(%ebx),%eax
lea    0x17c(%ebx),%edx
sub    %edx,%eax
cmp    $0x6,%eax
ja     1e2b <main+0x72b>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x134(%ebx),%eax
test   %eax,%eax
je     1e25 <main+0x725>
mov    %edx,(%esp)
call   *%eax
jmp    1e25 <main+0x725>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   1df0 <main+0x6f0>
add    $0x1005f,%ebx
sub    $0x14,%esp
lea    0x17c(%ebx),%eax
lea    0x17c(%ebx),%edx
sub    %edx,%eax
sar    $0x2,%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
jne    1e74 <main+0x774>
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
mov    0x154(%ebx),%ecx
test   %ecx,%ecx
je     1e6e <main+0x76e>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   *%ecx
jmp    1e6e <main+0x76e>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   1df0 <main+0x6f0>
add    $0x1000f,%ebx
sub    $0x14,%esp
cmpb   $0x0,0x198(%ebx)
jne    1ecf <main+0x7cf>
mov    0x13c(%ebx),%eax
test   %eax,%eax
je     1ec3 <main+0x7c3>
mov    0x15c(%ebx),%eax
mov    %eax,(%esp)
call   1410 <__cxa_finalize@plt>
call   1e00 <main+0x700>
movb   $0x1,0x198(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %esp,%ebp
push   %ebx
call   1df0 <main+0x6f0>
add    $0xffbf,%ebx
sub    $0x14,%esp
mov    -0x104(%ebx),%eax
test   %eax,%eax
je     1f11 <main+0x811>
mov    0x150(%ebx),%eax
test   %eax,%eax
je     1f11 <main+0x811>
lea    -0x104(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %ebp
jmp    1e40 <main+0x740>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%edx
mov    0x20(%esp),%eax
call   1df0 <main+0x6f0>
add    $0xff77,%ebx
mov    (%eax),%eax
mov    %edx,0x8(%esp)
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   1290 <read@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xff21,%ebx
sub    $0x14,%esp
mov    0x1b8(%ebx),%eax
test   %eax,%eax
je     1fd0 <main+0x8d0>
mov    0x138(%ebx),%eax
mov    (%eax),%eax
movl   $0x19,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x41f6(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1500 <ntfs_initialize_file_security@plt>
test   %eax,%eax
mov    %eax,0x1b8(%ebx)
je     2060 <main+0x960>
cmpl   $0x9042009,(%eax)
mov    0x138(%ebx),%eax
mov    (%eax),%eax
je     2028 <main+0x928>
mov    %eax,0xc(%esp)
lea    -0x5668(%ebx),%eax
movl   $0x34,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    0x20(%esp),%ecx
lea    -0x4218(%ebx),%edx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   16b0 <__fprintf_chk@plt>
lea    0xa020c(%ebx),%eax
movl   $0x1,(%eax)
mov    $0x1,%eax
jmp    1fc6 <main+0x8c6>
mov    0x138(%ebx),%esi
lea    -0x420b(%ebx),%edx
mov    0x20(%esp),%ecx
mov    (%esi),%eax
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    (%esi),%eax
lea    -0x5630(%ebx),%edx
mov    0x20(%esp),%esi
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,0xc(%esp)
call   16b0 <__fprintf_chk@plt>
xor    %eax,%eax
jmp    1fc6 <main+0x8c6>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xfde1,%ebx
sub    $0x14,%esp
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1650 <ntfs_leave_file_security@plt>
mov    0x20(%esp),%ecx
mov    %eax,%esi
mov    0x138(%ebx),%eax
test   %esi,%esi
mov    (%eax),%eax
mov    %ecx,0xc(%esp)
jne    2120 <main+0xa20>
lea    -0x41cf(%ebx),%edx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
movl   $0x0,0x1b8(%ebx)
00
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    -0x41dc(%ebx),%edx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
jmp    210e <main+0xa0e>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%ecx
mov    0x8(%esp),%edx
movzbl 0x1(%ecx,%edx,1),%eax
movzbl (%ecx,%edx,1),%edx
shl    $0x8,%eax
add    %edx,%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
xor    %eax,%eax
push   %esi
mov    0x10(%esp),%edi
xor    %edx,%edx
add    0xc(%esp),%edi
movzbl (%edi,%edx,1),%esi
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%esi
add    %esi,%eax
cmp    $0x4,%edx
jne    216e <main+0xa6e>
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %eax,%eax
push   %edi
xor    %edx,%edx
push   %esi
xor    %ebp,%ebp
sub    $0x8,%esp
mov    0x18(%esp),%ecx
add    %ecx,0x1c(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
xor    %edi,%edi
lea    0x0(,%ebp,8),%ecx
mov    %edi,%edx
movzbl (%eax,%ebp,1),%esi
mov    %esi,%eax
shld   %cl,%esi,%edx
xor    %esi,%esi
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
add    %eax,(%esp)
adc    %edx,0x4(%esp)
add    $0x1,%ebp
cmp    $0x6,%ebp
jne    21b0 <main+0xab0>
mov    (%esp),%eax
mov    0x4(%esp),%edx
add    $0x8,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
xor    %edx,%edx
push   %esi
mov    0x14(%esp),%ebp
xor    %ecx,%ecx
add    0x10(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x0(%ebp,%ecx,1),%esi
shld   $0x8,%eax,%edx
xor    %edi,%edi
shl    $0x8,%eax
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ecx
cmp    $0x6,%ecx
jne    2218 <main+0xb18>
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
xor    %edx,%edx
push   %esi
xor    %ebp,%ebp
sub    $0x8,%esp
mov    0x18(%esp),%ecx
add    %ecx,0x1c(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
xor    %edi,%edi
lea    0x0(,%ebp,8),%ecx
mov    %edi,%edx
movzbl (%eax,%ebp,1),%esi
mov    %esi,%eax
shld   %cl,%esi,%edx
xor    %esi,%esi
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
add    %eax,(%esp)
adc    %edx,0x4(%esp)
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    2260 <main+0xb60>
mov    (%esp),%eax
mov    0x4(%esp),%edx
add    $0x8,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %dl,(%eax)
shr    $0x8,%edx
mov    %dl,0x1(%eax)
ret
jmp    22d0 <main+0xbd0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
xor    %eax,%eax
push   %esi
mov    0xc(%esp),%edi
mov    0x10(%esp),%esi
lea    0x0(,%eax,8),%ecx
mov    %esi,%edx
shr    %cl,%edx
mov    %dl,(%edi,%eax,1)
add    $0x1,%eax
cmp    $0x4,%eax
jne    22dc <main+0xbdc>
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%edx
call   1df0 <main+0x6f0>
add    $0xfb98,%ebx
mov    0x50(%esp),%ebp
test   %edx,%edx
jle    23ee <main+0xcee>
mov    0x54(%esp),%eax
movl   $0x0,0x20(%esp)
sub    $0x1,%eax
and    $0xfffffff0,%eax
add    $0x10,%eax
mov    %eax,0x28(%esp)
lea    -0x41af(%ebx),%eax
mov    %eax,0x24(%esp)
lea    -0x41b3(%ebx),%eax
mov    %eax,0x2c(%esp)
nop
mov    0x58(%esp),%eax
test   %eax,%eax
jne    23f8 <main+0xcf8>
mov    0x20(%esp),%edi
mov    0x24(%esp),%eax
movl   $0x1,(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    %edi,%eax
cmp    %eax,0x54(%esp)
mov    %eax,%esi
lea    -0x41b8(%ebx),%edx
lea    0xf(%edi),%edi
mov    %edx,0x1c(%esp)
jg     239e <main+0xc9e>
jmp    23cf <main+0xccf>
lea    0x0(%esi,%eiz,1),%esi
cmp    0x54(%esp),%esi
je     23cf <main+0xccf>
movzbl 0x0(%ebp,%esi,1),%ecx
test   $0x3,%esi
lea    -0x41b9(%ebx),%eax
cmovne 0x1c(%esp),%eax
add    $0x1,%esi
movl   $0x1,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
cmp    %edi,%esi
jle    2398 <main+0xc98>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
mov    0x28(%esp),%eax
addl   $0x10,0x20(%esp)
cmp    %eax,0x20(%esp)
jne    2350 <main+0xc50>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x58(%esp),%eax
movl   $0x20,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    235c <main+0xc5c>
jmp    2430 <main+0xd30>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x8(%esp),%eax
test   %eax,%eax
jle    2457 <main+0xd57>
mov    0x4(%esp),%edx
sub    $0x1,%eax
and    $0xfffffffc,%eax
lea    0x4(%edx,%eax,1),%ecx
xor    %eax,%eax
rol    $0x3,%eax
add    $0x4,%edx
add    -0x4(%edx),%eax
cmp    %ecx,%edx
jne    2448 <main+0xd48>
repz ret
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    0x14(%esp),%eax
mov    0x10(%esp),%ecx
add    %eax,%eax
test   %eax,%eax
jle    250c <main+0xe0c>
lea    0x1(%ecx),%edx
xor    %edi,%edi
lea    0x1(%ecx,%eax,1),%ebp
xor    %ecx,%ecx
jmp    24aa <main+0xdaa>
lea    0x0(%esi),%esi
cmp    $0x1,%ecx
jne    24a3 <main+0xda3>
movsbl (%edx),%esi
mov    $0x2,%ecx
and    $0xfc,%esi
cmp    $0xdc,%esi
je     24f8 <main+0xdf8>
add    $0x2,%edx
cmp    %ebp,%edx
je     24d0 <main+0xdd0>
test   %ecx,%ecx
jne    2488 <main+0xd88>
movzbl (%edx),%eax
mov    %eax,%esi
and    $0xf8,%esi
je     24e0 <main+0xde0>
cmp    $0xd8,%esi
je     2500 <main+0xe00>
add    $0x2,%edx
add    $0x3,%edi
cmp    %ebp,%edx
jne    24aa <main+0xdaa>
lea    0x0(%esi),%esi
test   %ecx,%ecx
mov    $0x0,%eax
cmovne %eax,%edi
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,-0x1(%edx)
js     24f0 <main+0xdf0>
test   %al,%al
jne    24f0 <main+0xdf0>
add    $0x1,%edi
jmp    24a3 <main+0xda3>
nop
add    $0x2,%edi
jmp    24a3 <main+0xda3>
lea    0x0(%esi),%esi
add    $0x4,%edi
xor    %cl,%cl
jmp    24a3 <main+0xda3>
nop
and    $0x4,%eax
cmp    $0x1,%al
sbb    %ecx,%ecx
add    $0x2,%ecx
jmp    24a3 <main+0xda3>
xor    %edi,%edi
jmp    24da <main+0xdda>
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%eax
mov    0x20(%esp),%ebp
add    %eax,%eax
test   %eax,%eax
jle    26f6 <main+0xff6>
mov    0x24(%esp),%edx
xor    %ecx,%ecx
movl   $0x0,0xc(%esp)
add    %edx,%eax
mov    %eax,0x4(%esp)
xor    %eax,%eax
mov    %eax,(%esp)
jmp    2573 <main+0xe73>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%ecx
jne    256a <main+0xe6a>
movzbl 0x1(%edx),%esi
mov    $0x2,%ecx
mov    %esi,%edi
and    $0xfc,%edi
cmp    $0xdc,%edi
je     2658 <main+0xf58>
add    $0x2,%edx
cmp    0x4(%esp),%edx
je     25e9 <main+0xee9>
test   %ecx,%ecx
jne    2548 <main+0xe48>
movzbl 0x1(%edx),%esi
mov    %esi,%edi
and    $0xf8,%edi
je     2600 <main+0xf00>
cmp    $0xd8,%edi
je     2698 <main+0xf98>
mov    %esi,%eax
shr    $0x4,%al
mov    %eax,%esi
sub    $0x20,%esi
mov    %esi,%eax
mov    (%esp),%esi
mov    %al,0x0(%ebp,%esi,1)
lea    0x2(%esi),%eax
movzbl (%edx),%esi
movzbl 0x1(%edx),%edi
mov    %eax,0x8(%esp)
mov    %esi,%eax
shr    $0x6,%al
and    $0xf,%edi
mov    %eax,%esi
lea    -0x80(%esi,%edi,4),%esi
mov    %esi,%eax
mov    (%esp),%esi
addl   $0x3,(%esp)
mov    %al,0x1(%ebp,%esi,1)
movzbl (%edx),%esi
add    $0x2,%edx
mov    0x8(%esp),%edi
and    $0x3f,%esi
add    $0xffffff80,%esi
mov    %esi,%eax
mov    %al,0x0(%ebp,%edi,1)
cmp    0x4(%esp),%edx
jne    2573 <main+0xe73>
mov    (%esp),%eax
test   %ecx,%ecx
movb   $0x0,0x0(%ebp,%eax,1)
je     25f7 <main+0xef7>
xor    %eax,%eax
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movzbl (%edx),%edi
mov    %edi,%eax
test   %al,%al
js     2628 <main+0xf28>
mov    %esi,%eax
test   %al,%al
jne    2628 <main+0xf28>
mov    %edi,%eax
mov    (%esp),%edi
mov    %al,0x0(%ebp,%edi,1)
lea    0x1(%edi),%eax
mov    %eax,(%esp)
jmp    256a <main+0xe6a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
and    $0xf,%esi
add    $0x1,%eax
mov    %eax,0x8(%esp)
mov    %edi,%eax
shr    $0x6,%al
mov    %eax,%edi
lea    -0x40(%edi,%esi,4),%edi
mov    %edi,%eax
mov    (%esp),%edi
addl   $0x2,(%esp)
mov    %al,0x0(%ebp,%edi,1)
jmp    25cd <main+0xecd>
lea    0x0(%esi),%esi
mov    (%esp),%eax
and    $0x3,%esi
movzbl (%edx),%ecx
lea    0x1(%eax),%edi
movzbl 0xc(%esp),%eax
shr    $0x6,%cl
shl    $0x4,%eax
lea    -0x80(%eax,%ecx,1),%ecx
mov    (%esp),%eax
lea    (%ecx,%esi,4),%ecx
addl   $0x2,(%esp)
mov    %cl,0x0(%ebp,%eax,1)
movzbl (%edx),%ecx
and    $0x3f,%ecx
add    $0xffffff80,%ecx
mov    %cl,0x0(%ebp,%edi,1)
xor    %ecx,%ecx
jmp    256a <main+0xe6a>
lea    0x0(%esi),%esi
test   $0x4,%esi
mov    $0x2,%ecx
jne    256a <main+0xe6a>
movsbl (%edx),%ecx
and    $0x7,%esi
mov    (%esp),%eax
and    $0xc0,%ecx
cmp    $0xc0,%ecx
sete   %cl
lea    -0x10(%esi,%ecx,1),%ecx
mov    %cl,0x0(%ebp,%eax,1)
movsbl (%edx),%ecx
addl   $0x2,(%esp)
add    $0x40,%ecx
sar    $0x2,%ecx
and    $0x3f,%ecx
add    $0xffffff80,%ecx
mov    %cl,0x1(%ebp,%eax,1)
movzbl (%edx),%ecx
mov    %ecx,%eax
mov    $0x1,%ecx
and    $0x3,%eax
mov    %eax,0xc(%esp)
jmp    256a <main+0xe6a>
movb   $0x0,0x0(%ebp)
jmp    25f5 <main+0xef5>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   1df0 <main+0x6f0>
add    $0xf79b,%ebx
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   16e0 <fputs@plt>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xf771,%ebx
sub    $0x24,%esp
call   15b0 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
test   %eax,%eax
je     277d <main+0x107d>
mov    %eax,(%esp)
call   1490 <strerror@plt>
mov    (%esi),%edx
movl   $0x1,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x41a9(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %edx,%edx
push   %edi
xor    %edi,%edi
push   %esi
sub    $0x8,%esp
mov    0x18(%esp),%eax
movzbl 0x10(%eax,%edx,1),%esi
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%esi
add    %esi,%edi
cmp    $0x4,%edx
jne    279e <main+0x109e>
xor    %ebp,%ebp
test   %edi,%edi
je     280d <main+0x110d>
movzbl 0x5(%eax,%edi,1),%edx
movzbl 0x4(%eax,%edi,1),%ecx
shl    $0x8,%edx
add    %ecx,%edx
mov    %edx,(%esp)
je     280d <main+0x110d>
mov    $0x8,%esi
xor    %ecx,%ecx
mov    %edi,0x4(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edi
lea    (%edi,%esi,1),%edx
mov    $0x1,%edi
testb  $0x3,0x1(%eax,%edx,1)
cmovne %edi,%ebp
movzbl 0x2(%eax,%edx,1),%edi
add    $0x1,%ecx
movzbl 0x3(%eax,%edx,1),%edx
add    %edi,%esi
shl    $0x8,%edx
add    %edx,%esi
cmp    %ecx,(%esp)
jne    27e0 <main+0x10e0>
add    $0x8,%esp
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xf67f,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebp
mov    0x64(%esp),%edi
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
lea    0xa0200(%ebx),%ecx
lea    0x0(%ebp,%edi,1),%esi
mov    %esi,0x24(%esp)
cmpl   $0x1,(%ecx)
sbb    %ecx,%ecx
xor    %esi,%esi
mov    %ecx,0x30(%esp)
movzbl 0x1(%ebp,%edi,1),%ecx
xor    %edi,%edi
andl   $0xfffffffd,0x30(%esp)
addl   $0x23,0x30(%esp)
mov    0x24(%esp),%ebp
mov    %ecx,0x1c(%esp)
xor    %ecx,%ecx
xchg   %ax,%ax
movzbl 0x2(%ebp,%ecx,1),%eax
shld   $0x8,%esi,%edi
xor    %edx,%edx
shl    $0x8,%esi
add    %eax,%esi
adc    %edx,%edi
add    $0x1,%ecx
cmp    $0x6,%ecx
jne    2880 <main+0x1180>
mov    %edi,0x2c(%esp)
mov    0x64(%esp),%edi
mov    0x60(%esp),%ebp
mov    %esi,0x28(%esp)
xor    %esi,%esi
lea    0x8(%edi),%eax
mov    %eax,0x20(%esp)
xor    %eax,%eax
mov    0x24(%esp),%ecx
movzbl 0x8(%ecx,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    28b5 <main+0x11b5>
mov    0x24(%esp),%eax
cmpb   $0x1,(%eax)
je     2aa3 <main+0x13a3>
mov    0x6c(%esp),%eax
neg    %eax
mov    %eax,0x34(%esp)
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x4072(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x24(%esp),%eax
movzbl (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x4062(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4053(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     2ba0 <main+0x14a0>
mov    0x20(%esp),%esi
lea    -0x404e(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x20(%esp)
add    %ebp,%esi
mov    %esi,0x38(%esp)
nop
xor    %ebp,%ebp
xor    %eax,%eax
movzbl (%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    2994 <main+0x1294>
mov    0x20(%esp),%eax
add    $0x1,%edi
add    $0x4,%esi
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
cmp    0x1c(%esp),%edi
jne    2990 <main+0x1290>
movl   $0xa,(%esp)
xor    %edi,%edi
call   15a0 <putchar@plt>
mov    0x24(%esp),%eax
movzbl (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x4044(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3a9f(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x38(%esp),%esi
lea    -0x4049(%ebx),%eax
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
xor    %ebp,%ebp
xor    %eax,%eax
movzbl (%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    2a54 <main+0x1354>
mov    0x20(%esp),%eax
add    $0x1,%edi
add    $0x4,%esi
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
cmp    0x1c(%esp),%edi
jne    2a50 <main+0x1350>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x0,0x2c(%esp)
ja     28de <main+0x11de>
cmpl   $0x63,0x28(%esp)
ja     28de <main+0x11de>
mov    0x1c(%esp),%eax
cmp    $0x1,%eax
je     2c5b <main+0x155b>
cmp    $0x2,%eax
je     2c10 <main+0x1510>
test   %eax,%eax
mov    0x6c(%esp),%eax
je     28e2 <main+0x11e2>
neg    %eax
mov    %eax,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    0x1c(%esp),%eax
mov    %esi,0x3c(%esp)
lea    0x4(%edi,%eax,4),%edx
xor    %edi,%edi
lea    0x0(%ebp,%edx,1),%ecx
xor    %eax,%eax
mov    %ecx,%esi
movzbl (%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    2aff <main+0x13ff>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    0x3c(%esp),%esi
mov    %edx,%eax
xor    $0x5,%eax
or     %ecx,%eax
jne    2b88 <main+0x1488>
cmp    $0x15,%esi
jne    2b88 <main+0x1488>
cmp    $0x201,%edi
je     2f91 <main+0x1891>
cmp    $0x202,%edi
je     2f66 <main+0x1866>
cmp    $0x200,%edi
je     2fbc <main+0x18bc>
mov    0x30(%esp),%eax
mov    %edi,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x4089(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%edx
test   %edx,%edx
jne    290e <main+0x120e>
jmp    28de <main+0x11de>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
mov    0x24(%esp),%eax
movzbl (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x14(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x4044(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3a9f(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    2a8f <main+0x138f>
movl   $0x0,0x34(%esp)
xor    %edx,%edx
mov    0x24(%esp),%eax
lea    0x0(,%edx,8),%ecx
movzbl 0xc(%eax,%edx,1),%eax
add    $0x1,%edx
shl    %cl,%eax
add    %eax,0x34(%esp)
cmp    $0x4,%edx
jne    2c1a <main+0x151a>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,%eax
xor    $0x5,%eax
or     %ecx,%eax
jne    2c52 <main+0x1552>
cmp    $0x20,%esi
je     2d70 <main+0x1670>
mov    0x6c(%esp),%eax
jmp    2adb <main+0x13db>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,%eax
xor    $0x1,%eax
or     %ecx,%eax
je     2ced <main+0x15ed>
cmp    $0x0,%ecx
ja     2cb8 <main+0x15b8>
cmpl   $0x1,0x28(%esp)
jae    2cb8 <main+0x15b8>
test   %esi,%esi
jne    28de <main+0x11de>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%edi
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x4195(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
lea    0x0(%esi),%esi
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
mov    %edx,%eax
xor    $0x3,%eax
or     %ecx,%eax
je     2d28 <main+0x1628>
mov    %edx,%eax
xor    $0x5,%eax
or     %ecx,%eax
jne    28de <main+0x11de>
sub    $0x7,%esi
cmp    $0xb,%esi
ja     28de <main+0x11de>
mov    -0x32dc(%ebx,%esi,4),%eax
add    %ebx,%eax
jmp    *%eax
test   %esi,%esi
jne    28de <main+0x11de>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%edi
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x4188(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
xchg   %ax,%ax
mov    0x6c(%esp),%eax
neg    %eax
test   %esi,%esi
mov    %eax,0x34(%esp)
je     2fe7 <main+0x18e7>
cmp    $0x1,%esi
jne    28e8 <main+0x11e8>
mov    0x30(%esp),%edi
mov    %eax,0x8(%esp)
lea    -0x4164(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %edi,0xc(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
cmp    $0x221,%eax
je     2e69 <main+0x1769>
cmp    $0x222,%eax
je     2e30 <main+0x1730>
cmp    $0x220,%eax
mov    0x6c(%esp),%eax
je     2dfb <main+0x16fb>
mov    0x30(%esp),%ecx
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x409d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x1,0x38(%esp)
jmp    2ae9 <main+0x13e9>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%edi
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x414e(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
mov    0x30(%esp),%ecx
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x40db(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x1,0x38(%esp)
jmp    2ae9 <main+0x13e9>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%ecx
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x40b2(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x1,0x38(%esp)
jmp    2ae9 <main+0x13e9>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%ecx
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x40c6(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x1,0x38(%esp)
jmp    2ae9 <main+0x13e9>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%edi
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x40ed(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%edi
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x4105(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%edi
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x411b(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
mov    0x6c(%esp),%eax
mov    0x30(%esp),%edi
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x34(%esp)
mov    %eax,0x8(%esp)
lea    -0x4136(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x40b2(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x40c6(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x40db(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
mov    0x30(%esp),%edi
mov    %eax,0x8(%esp)
lea    -0x417a(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %edi,0xc(%esp)
call   15f0 <__printf_chk@plt>
jmp    290e <main+0x120e>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xee8f,%ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x30(%esp),%edi
lea    0xa0200(%ebx),%eax
cmpl   $0x1,(%eax)
sbb    %eax,%eax
and    $0xfffffffd,%eax
add    $0x23,%eax
test   %esi,%esi
jne    3090 <main+0x1990>
lea    -0x4035(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   1480 <puts@plt>
xor    %eax,%eax
movzbl 0x4(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    3051 <main+0x1951>
lea    -0x402b(%ebx),%eax
add    $0x4,%esi
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   2820 <main+0x1120>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movsbl %al,%eax
mov    %eax,0xc(%esp)
mov    %esi,%eax
neg    %eax
mov    %eax,0x8(%esp)
lea    -0x41b3(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    303f <main+0x193f>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xeddf,%ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x30(%esp),%edi
lea    0xa0200(%ebx),%eax
cmpl   $0x1,(%eax)
sbb    %eax,%eax
and    $0xfffffffd,%eax
add    $0x23,%eax
test   %esi,%esi
jne    3140 <main+0x1a40>
lea    -0x4028(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   1480 <puts@plt>
xor    %eax,%eax
movzbl 0x8(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    3101 <main+0x1a01>
lea    -0x401e(%ebx),%eax
add    $0x4,%esi
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   2820 <main+0x1120>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movsbl %al,%eax
mov    %eax,0xc(%esp)
mov    %esi,%eax
neg    %eax
mov    %eax,0x8(%esp)
lea    -0x41b3(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    30ef <main+0x19ef>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xed2f,%ebx
sub    $0x2c,%esp
mov    0x44(%esp),%ebp
mov    0x40(%esp),%esi
lea    0xa0200(%ebx),%eax
cmpl   $0x1,(%eax)
sbb    %edi,%edi
and    $0xfffffffd,%edi
add    $0x23,%edi
test   %ebp,%ebp
jne    33d8 <main+0x1cd8>
lea    -0x401b(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
movsbl (%esi),%eax
movl   $0xfffffffc,0x1c(%esp)
sub    %ebp,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x400d(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
movzbl 0x3(%esi),%eax
movzbl 0x2(%esi),%ebp
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
shl    $0x8,%eax
add    %eax,%ebp
mov    0x1c(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x3ffd(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   $0x1,%ebp
jne    3610 <main+0x1f10>
test   $0x2,%ebp
jne    35e8 <main+0x1ee8>
test   $0x4,%ebp
jne    35c0 <main+0x1ec0>
test   $0x8,%ebp
jne    3598 <main+0x1e98>
test   $0x10,%ebp
jne    3570 <main+0x1e70>
test   $0x20,%ebp
jne    3548 <main+0x1e48>
test   $0x100,%ebp
jne    3520 <main+0x1e20>
test   $0x200,%ebp
jne    34f8 <main+0x1df8>
test   $0x400,%ebp
jne    34d0 <main+0x1dd0>
test   $0x800,%ebp
jne    34a8 <main+0x1da8>
test   $0x1000,%ebp
jne    3480 <main+0x1d80>
test   $0x2000,%ebp
jne    3458 <main+0x1d58>
test   $0x8000,%ebp
jne    3430 <main+0x1d30>
and    $0x43eb,%ebp
jne    3400 <main+0x1d00>
xor    %ebp,%ebp
xor    %eax,%eax
movzbl 0x4(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    32c5 <main+0x1bc5>
mov    0x1c(%esp),%eax
mov    %ebp,0x10(%esp)
xor    %ebp,%ebp
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3f57(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
xor    %eax,%eax
movzbl 0x8(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    3307 <main+0x1c07>
mov    0x1c(%esp),%eax
mov    %ebp,0x10(%esp)
xor    %ebp,%ebp
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3f45(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
xor    %eax,%eax
movzbl 0xc(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    3349 <main+0x1c49>
mov    0x1c(%esp),%eax
mov    %ebp,0x10(%esp)
xor    %ebp,%ebp
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3f33(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
xor    %eax,%eax
movzbl 0x10(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    338b <main+0x1c8b>
mov    0x1c(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3f21(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
neg    %eax
mov    %eax,0x8(%esp)
lea    -0x41b3(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    31a3 <main+0x1aa3>
nop
mov    0x1c(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x54dc(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    32c1 <main+0x1bc1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5500(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    32b5 <main+0x1bb5>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5534(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    32a9 <main+0x1ba9>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5568(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    329d <main+0x1b9d>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5594(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3291 <main+0x1b91>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x55c0(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3285 <main+0x1b85>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x55e8(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3279 <main+0x1b79>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5610(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    326d <main+0x1b6d>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3f71(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3261 <main+0x1b61>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3f86(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3255 <main+0x1b55>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3fa0(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3249 <main+0x1b49>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3fb5(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    323d <main+0x1b3d>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3fd0(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3231 <main+0x1b31>
nop
mov    0x1c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3feb(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3225 <main+0x1b25>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0xfffffffc,%ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xe85a,%ebx
sub    $0x2c,%esp
mov    0x4c(%esp),%ecx
lea    0xa0200(%ebx),%eax
cmpl   $0x1,(%eax)
mov    0x40(%esp),%eax
sbb    %edi,%edi
neg    %ecx
add    0x44(%esp),%eax
and    $0xfffffffd,%edi
add    $0x23,%edi
mov    %ecx,0x18(%esp)
mov    %eax,%esi
mov    %eax,0x14(%esp)
movsbl (%eax),%eax
mov    %edi,0xc(%esp)
mov    %ecx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
lea    -0x3f0f(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
movzbl (%esi),%eax
sub    0x4c(%esp),%ebp
mov    %edi,0xc(%esp)
cmp    $0x1,%al
mov    %ebp,0x8(%esp)
je     3f70 <main+0x2870>
cmp    $0x2,%al
je     3f50 <main+0x2850>
test   %al,%al
je     3a20 <main+0x2320>
lea    -0x3ec9(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x44(%esp),%edx
mov    0x40(%esp),%eax
movzbl 0x1(%eax,%edx,1),%eax
mov    0x18(%esp),%edx
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %al,0x1e(%esp)
movsbl %al,%esi
mov    %eax,0x10(%esp)
lea    -0x3ffd(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
testb  $0x1,0x1e(%esp)
jne    3de8 <main+0x26e8>
testb  $0x2,0x1e(%esp)
jne    3e11 <main+0x2711>
testb  $0x4,0x1e(%esp)
jne    3e3a <main+0x273a>
movzbl 0x1e(%esp),%eax
and    $0x8,%eax
mov    %al,0x1f(%esp)
jne    3e6a <main+0x276a>
testb  $0x10,0x1e(%esp)
jne    3e93 <main+0x2793>
testb  $0x40,0x1e(%esp)
jne    3ebc <main+0x27bc>
and    $0x80,%esi
jne    3ee6 <main+0x27e6>
mov    0x44(%esp),%edx
xor    %esi,%esi
mov    0x40(%esp),%eax
mov    0x44(%esp),%ecx
movzbl 0x3(%eax,%edx,1),%eax
mov    0x40(%esp),%edx
shl    $0x8,%eax
movzbl 0x2(%edx,%ecx,1),%edx
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
add    %edx,%eax
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x3e35(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
xor    %eax,%eax
mov    0x14(%esp),%ecx
movzbl 0x4(%ecx,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    37ba <main+0x20ba>
mov    0x18(%esp),%eax
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3e23(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
movzwl %si,%eax
mov    %eax,0x10(%esp)
lea    -0x5494(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x48(%esp),%eax
test   %eax,%eax
je     3b40 <main+0x2440>
test   $0x1,%esi
jne    41e8 <main+0x2ae8>
test   $0x2,%esi
jne    41b8 <main+0x2ab8>
test   $0x4,%esi
jne    4188 <main+0x2a88>
test   $0x8,%esi
jne    4158 <main+0x2a58>
test   $0x10,%esi
jne    4128 <main+0x2a28>
test   $0x20,%esi
jne    40f8 <main+0x29f8>
test   $0x40,%esi
jne    40c8 <main+0x29c8>
test   $0x80,%esi
jne    3bc0 <main+0x24c0>
test   $0x100,%esi
jne    3bf3 <main+0x24f3>
mov    %esi,%eax
shr    $0x10,%eax
and    $0x7f,%eax
mov    %eax,0x10(%esp)
lea    -0x3d42(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
test   $0x10000,%esi
jne    3c20 <main+0x2520>
test   $0x20000,%esi
jne    3c53 <main+0x2553>
test   $0x40000,%esi
jne    3c86 <main+0x2586>
test   $0x80000,%esi
jne    3cb9 <main+0x25b9>
test   $0x100000,%esi
jne    3cec <main+0x25ec>
test   $0x800000,%esi
jne    3d1f <main+0x261f>
test   $0x10000000,%esi
jne    3d49 <main+0x2649>
test   $0x20000000,%esi
jne    3d73 <main+0x2673>
test   $0x40000000,%esi
jne    3d9d <main+0x269d>
test   %esi,%esi
js     3dc3 <main+0x26c3>
mov    0x44(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
lea    0x8(%eax),%ebp
mov    0x18(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x3c79(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x4c(%esp),%edx
mov    0x40(%esp),%ecx
mov    %ebp,0x4(%esp)
lea    0x4(%edx),%eax
mov    %eax,0xc(%esp)
lea    -0x41ba(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %ecx,(%esp)
call   2820 <main+0x1120>
mov    0x18(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3c69(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x14(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     3f10 <main+0x2810>
cmp    $0x1,%al
je     3f35 <main+0x2835>
test   $0xe0000027,%esi
je     3a40 <main+0x2340>
movl   $0x20,(%esp)
call   15a0 <putchar@plt>
test   $0x80000001,%esi
jne    40b0 <main+0x29b0>
test   $0x40000006,%esi
jne    4098 <main+0x2998>
and    $0x20000020,%esi
jne    4080 <main+0x2980>
testb  $0xb,0x1e(%esp)
jne    3a5d <main+0x235d>
cmpb   $0x0,0x1f(%esp)
je     3a7a <main+0x237a>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3eff(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    36e2 <main+0x1fe2>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x356f(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
testb  $0xb,0x1e(%esp)
je     3a01 <main+0x2301>
lea    -0x3c4f(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
cmpb   $0x0,0x1f(%esp)
jne    3a08 <main+0x2308>
lea    -0x3c44(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x44(%esp),%edi
xor    %edx,%edx
mov    0x40(%esp),%eax
movsbl 0x9(%eax,%edi,1),%eax
lea    0x8(,%eax,4),%esi
xor    %eax,%eax
mov    %esi,%edi
mov    0x40(%esp),%ecx
movzbl 0x4(%ecx,%eax,1),%esi
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%esi
add    %esi,%edx
cmp    $0x4,%eax
jne    3aaa <main+0x23aa>
add    0x40(%esp),%edx
mov    %edi,%esi
add    0x40(%esp),%ebp
mov    %edi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
call   1350 <memcmp@plt>
test   %eax,%eax
je     4218 <main+0x2b18>
xor    %edi,%edi
xor    %eax,%eax
mov    0x40(%esp),%edx
lea    0x0(,%eax,8),%ecx
movzbl 0x8(%edx,%eax,1),%edx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    3aec <main+0x23ec>
add    0x40(%esp),%edi
mov    %esi,0x8(%esp)
mov    %ebp,(%esp)
mov    %edi,0x4(%esp)
call   1350 <memcmp@plt>
test   %eax,%eax
jne    3a08 <main+0x2308>
lea    -0x3c31(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    3a08 <main+0x2308>
nop
test   $0x1,%esi
jne    4050 <main+0x2950>
test   $0x2,%esi
jne    4020 <main+0x2920>
test   $0x4,%esi
jne    3ff0 <main+0x28f0>
test   $0x8,%esi
jne    3fc0 <main+0x28c0>
test   $0x10,%esi
jne    3f90 <main+0x2890>
test   $0x20,%esi
je     3881 <main+0x2181>
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d4e(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   $0x80,%esi
je     388d <main+0x218d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3da4(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   $0x100,%esi
je     3899 <main+0x2199>
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d90(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3899 <main+0x2199>
nop
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d26(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   $0x20000,%esi
je     38db <main+0x21db>
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d1b(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   $0x40000,%esi
je     38e7 <main+0x21e7>
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d0a(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   $0x80000,%esi
je     38f3 <main+0x21f3>
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3cfc(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   $0x100000,%esi
je     38ff <main+0x21ff>
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3cec(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   $0x800000,%esi
je     390b <main+0x220b>
lea    -0x3cdc(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
test   $0x10000000,%esi
je     3917 <main+0x2217>
lea    -0x3cc0(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
test   $0x20000000,%esi
je     3923 <main+0x2223>
lea    -0x3cb0(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
test   $0x40000000,%esi
je     392f <main+0x222f>
lea    -0x3c9c(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
test   %esi,%esi
jns    3937 <main+0x2237>
lea    -0x3c8a(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    3937 <main+0x2237>
xchg   %ax,%ax
lea    -0x3ebd(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
testb  $0x2,0x1e(%esp)
je     3732 <main+0x2032>
lea    -0x3ea5(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
testb  $0x4,0x1e(%esp)
je     373d <main+0x203d>
lea    -0x54b8(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
movzbl 0x1e(%esp),%eax
and    $0x8,%eax
mov    %al,0x1f(%esp)
je     374f <main+0x204f>
lea    -0x3e8a(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
testb  $0x10,0x1e(%esp)
je     375a <main+0x205a>
lea    -0x3e75(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
testb  $0x40,0x1e(%esp)
je     3765 <main+0x2065>
lea    -0x3e5f(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
and    $0x80,%esi
je     3771 <main+0x2071>
lea    -0x3e4a(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    3771 <main+0x2071>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3c5c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x14(%esp),%eax
movzbl (%eax),%eax
cmp    $0x1,%al
jne    39c2 <main+0x22c2>
lea    -0x3c55(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    39c2 <main+0x22c2>
lea    -0x3eda(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    36e2 <main+0x1fe2>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3eec(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    36e2 <main+0x1fe2>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3dcf(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3b7c <main+0x247c>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3ddb(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3b70 <main+0x2470>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d5e(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3b64 <main+0x2464>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d6d(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3b58 <main+0x2458>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3d7b(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3b4c <main+0x244c>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x78,(%esp)
call   15a0 <putchar@plt>
jmp    39fa <main+0x22fa>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x77,(%esp)
call   15a0 <putchar@plt>
jmp    39ee <main+0x22ee>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x72,(%esp)
call   15a0 <putchar@plt>
jmp    39e2 <main+0x22e2>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3db5(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3881 <main+0x2181>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3dc2(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3875 <main+0x2175>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3dcf(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3869 <main+0x2169>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3ddb(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    385d <main+0x215d>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3df0(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3851 <main+0x2151>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3dfd(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3845 <main+0x2145>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xfffffff8,%eax
sub    0x4c(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3e10(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    3839 <main+0x2139>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3c3b(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    3ae8 <main+0x23e8>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xdc5f,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%edi
mov    0x64(%esp),%ecx
mov    0x6c(%esp),%esi
lea    0xa0200(%ebx),%eax
movzbl 0x2(%edi,%ecx,1),%edx
cmpl   $0x1,(%eax)
sbb    %eax,%eax
mov    %eax,0x28(%esp)
mov    0x64(%esp),%eax
andl   $0xfffffffd,0x28(%esp)
addl   $0x23,0x28(%esp)
movzbl 0x3(%edi,%eax,1),%eax
shl    $0x8,%eax
add    %edx,%eax
mov    %eax,0x2c(%esp)
mov    %esi,%eax
neg    %eax
mov    %eax,%ebp
mov    %eax,0x34(%esp)
movsbl (%edi,%ecx,1),%eax
mov    0x28(%esp),%ecx
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
lea    -0x400d(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x2c(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
lea    -0x3c27(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x64(%esp),%edx
mov    0x28(%esp),%ecx
movzbl 0x5(%edi,%edx,1),%eax
movzbl 0x4(%edi,%edx,1),%edx
mov    %ecx,0xc(%esp)
mov    %ebp,0x8(%esp)
shl    $0x8,%eax
add    %eax,%edx
lea    -0x3c17(%ebx),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x30(%esp)
call   15f0 <__printf_chk@plt>
cmpl   $0x8,0x2c(%esp)
jle    43d6 <main+0x2cd6>
mov    0x30(%esp),%eax
test   %eax,%eax
je     43d6 <main+0x2cd6>
lea    0x4(%esi),%eax
mov    $0x8,%edx
mov    %eax,0x38(%esp)
lea    -0x3c07(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,0x3c(%esp)
jmp    4366 <main+0x2c66>
lea    0x0(%esi),%esi
cmp    %ebp,0x30(%esp)
jle    43d6 <main+0x2cd6>
mov    0x28(%esp),%eax
mov    %edx,%esi
add    $0x1,%ebp
add    0x64(%esp),%esi
mov    %ebp,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %esi,0x14(%esp)
mov    %edx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x38(%esp),%eax
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
call   3640 <main+0x1f40>
movzbl 0x2(%edi,%esi,1),%eax
mov    0x24(%esp),%edx
add    %eax,%edx
movzbl 0x3(%edi,%esi,1),%eax
shl    $0x8,%eax
add    %eax,%edx
cmp    %edx,0x2c(%esp)
jg     4360 <main+0x2c60>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xdabf,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
lea    0xa0200(%ebx),%eax
cmpl   $0x1,(%eax)
sbb    %ebp,%ebp
xor    %esi,%esi
and    $0xfffffffd,%ebp
xor    %eax,%eax
add    $0x23,%ebp
movzbl 0x10(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    440b <main+0x2d0b>
test   %esi,%esi
je     4468 <main+0x2d68>
mov    0x38(%esp),%edx
test   %edx,%edx
jne    4488 <main+0x2d88>
lea    -0x3bf1(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x38(%esp),%eax
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
add    $0x4,%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   4240 <main+0x2b40>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
test   %eax,%eax
jne    44b8 <main+0x2db8>
lea    -0x3bf4(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%eax
movsbl %al,%ebp
mov    0x38(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x8(%esp)
lea    -0x41b3(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    442f <main+0x2d2f>
xchg   %ax,%ax
mov    %ebp,%eax
movsbl %al,%ebp
mov    0x38(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x8(%esp)
lea    -0x41b3(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    -0x3bf4(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    447e <main+0x2d7e>
jmp    4500 <main+0x2e00>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xd99f,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
lea    0xa0200(%ebx),%eax
cmpl   $0x1,(%eax)
sbb    %ebp,%ebp
xor    %esi,%esi
and    $0xfffffffd,%ebp
xor    %eax,%eax
add    $0x23,%ebp
movzbl 0xc(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    452b <main+0x2e2b>
test   %esi,%esi
je     4588 <main+0x2e88>
mov    0x38(%esp),%edx
test   %edx,%edx
jne    45a8 <main+0x2ea8>
lea    -0x3b0e(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x38(%esp),%eax
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
add    $0x4,%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   4240 <main+0x2b40>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
test   %eax,%eax
jne    45d8 <main+0x2ed8>
lea    -0x3b11(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%eax
movsbl %al,%ebp
mov    0x38(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x8(%esp)
lea    -0x41b3(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    454f <main+0x2e4f>
xchg   %ax,%ax
mov    %ebp,%eax
movsbl %al,%ebp
mov    0x38(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x1,(%esp)
neg    %eax
mov    %eax,0x8(%esp)
lea    -0x41b3(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    -0x3b11(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    459e <main+0x2e9e>
jmp    4620 <main+0x2f20>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    %esi,(%esp)
call   2790 <main+0x1090>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%ebp
call   3170 <main+0x1a70>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   3010 <main+0x1910>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   30c0 <main+0x19c0>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   43e0 <main+0x2ce0>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   4500 <main+0x2e00>
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%edi
call   1df0 <main+0x6f0>
add    $0xd808,%ebx
mov    %gs:0x14,%eax
mov    %eax,0x4c(%esp)
xor    %eax,%eax
test   %edi,%edi
je     4988 <main+0x3288>
mov    0x4(%edi),%eax
mov    0x8(%edi),%esi
mov    %eax,%ebp
mov    %eax,0x20(%esp)
mov    0xc(%edi),%eax
mov    %eax,0x3c(%esp)
lea    -0x3bac(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    -0x3b99(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    -0x3b8a(%ebx),%eax
mov    %esi,0x8(%esp)
add    %ebp,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x3c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3b7b(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    (%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3b6a(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
movzwl 0x10(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3b58(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    -0x3459(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
movzbl 0x14(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3b42(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
movzbl 0x15(%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3b32(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
test   %esi,%esi
mov    %esi,0x28(%esp)
jle    48d4 <main+0x31d4>
lea    0x14(%edi),%eax
xor    %ebp,%ebp
mov    %eax,0x34(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x30(%esp)
lea    -0x5474(%ebx),%eax
mov    %eax,0x2c(%esp)
lea    -0x3bec(%ebx),%eax
mov    %eax,0x38(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,0x20(%esp)
mov    %ebp,%esi
jg     47fa <main+0x30fa>
mov    0x3c(%esp),%esi
sub    0x20(%esp),%esi
add    %ebp,%esi
mov    0x34(%esp),%eax
lea    (%eax,%esi,8),%eax
lea    0x4(%eax),%edi
movzwl 0x4(%eax),%ecx
movzwl 0x2(%edi),%eax
cmp    $0x40,%cx
movzwl %ax,%edx
mov    %edx,0x24(%esp)
mov    %eax,%edx
je     4940 <main+0x3240>
and    $0x4,%edx
cmp    $0x1,%dx
sbb    %edx,%edx
and    $0xffffffbb,%edx
add    $0x72,%edx
mov    %dl,0x48(%esp)
mov    %eax,%edx
and    $0x2,%edx
cmp    $0x1,%dx
sbb    %edx,%edx
and    $0x1,%eax
and    $0xffffffb6,%edx
add    $0x77,%edx
cmp    $0x1,%ax
sbb    %eax,%eax
and    $0xffffffb5,%eax
add    $0x78,%eax
mov    %dl,0x49(%esp)
mov    %al,0x4a(%esp)
cmp    %ebp,0x20(%esp)
lea    -0x3be4(%ebx),%eax
cmovle 0x38(%esp),%eax
cmp    $0x40,%cx
movb   $0x0,0x4b(%esp)
ja     4930 <main+0x3230>
mov    -0x32ac(%ebx,%ecx,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3bd6(%ebx),%edx
xchg   %ax,%ax
mov    0x4(%edi),%ecx
add    $0x1,%ebp
mov    0x30(%esp),%edi
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %edi,0x1c(%esp)
mov    0x24(%esp),%edi
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %edi,0x18(%esp)
call   15f0 <__printf_chk@plt>
cmp    0x28(%esp),%ebp
jne    47e8 <main+0x30e8>
mov    0x4c(%esp),%eax
xor    %gs:0x14,%eax
jne    499b <main+0x329b>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x3bdc(%ebx),%edx
jmp    4890 <main+0x3190>
lea    -0x3bb8(%ebx),%edx
jmp    4890 <main+0x3190>
lea    -0x3bbe(%ebx),%edx
jmp    4890 <main+0x3190>
lea    -0x3bc4(%ebx),%edx
jmp    4890 <main+0x3190>
lea    -0x3bd0(%ebx),%edx
jmp    4890 <main+0x3190>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3bca(%ebx),%edx
jmp    4890 <main+0x3190>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3bb2(%ebx),%edx
jmp    4890 <main+0x3190>
nop
lea    0x0(%esi,%eiz,1),%esi
and    $0x200,%dx
cmp    $0x1,%dx
sbb    %edx,%edx
and    $0xffffffba,%edx
add    $0x73,%edx
mov    %dl,0x48(%esp)
mov    %eax,%edx
and    $0x800,%dx
cmp    $0x1,%dx
sbb    %edx,%edx
and    $0x400,%ax
and    $0xffffffb8,%edx
add    $0x75,%edx
cmp    $0x1,%ax
sbb    %eax,%eax
and    $0xffffffc6,%eax
add    $0x67,%eax
mov    %dl,0x49(%esp)
mov    %al,0x4a(%esp)
jmp    485a <main+0x315a>
lea    0x0(%esi),%esi
lea    -0x3b20(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    48d4 <main+0x31d4>
call   c810 <main+0xb110>
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xd501,%ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x28(%esp),%esi
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   15d0 <ntfs_get_usid@plt>
xor    %edx,%edx
test   %eax,%eax
cmovne %esi,%edx
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xd4c1,%ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x28(%esp),%esi
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
call   15d0 <ntfs_get_usid@plt>
xor    %edx,%edx
test   %eax,%eax
cmovne %esi,%edx
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xd482,%ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1310 <ntfs_get_user@plt>
xor    %edx,%edx
test   %eax,%eax
cmovns %eax,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xd442,%ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1370 <ntfs_get_group@plt>
xor    %edx,%edx
test   %eax,%eax
cmovns %eax,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   1df0 <main+0x6f0>
add    $0xd3f8,%ebx
mov    0x4(%esi),%edx
mov    0x8(%esi),%ebp
mov    %esi,(%esp)
add    %esi,%edx
mov    %edx,0x1c(%esp)
add    %esi,%ebp
call   1560 <ntfs_acl_owner@plt>
mov    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   1260 <ntfs_same_sid@plt>
test   %eax,%eax
je     4b18 <main+0x3418>
mov    0x44(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x10(%esp)
lea    0xa0228(%ebx),%eax
mov    %eax,(%esp)
call   15c0 <ntfs_build_permissions_posix@plt>
test   %eax,%eax
mov    %eax,%esi
je     4b28 <main+0x3428>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5450(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    4ae2 <main+0x33e2>
lea    -0x5420(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x2c,%esp
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   1df0 <main+0x6f0>
add    $0xd348,%ebx
mov    0x4(%esi),%edx
mov    0x8(%esi),%ebp
mov    %esi,(%esp)
add    %esi,%edx
mov    %edx,0x1c(%esp)
add    %esi,%ebp
call   1560 <ntfs_acl_owner@plt>
mov    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   1260 <ntfs_same_sid@plt>
test   %eax,%eax
je     4bc0 <main+0x34c0>
mov    0x44(%esp),%eax
mov    %esi,(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0xc(%esp)
call   1300 <ntfs_build_permissions@plt>
test   %eax,%eax
mov    %eax,%esi
js     4bd0 <main+0x34d0>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x5450(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    4b92 <main+0x3492>
lea    -0x53f8(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x2c,%esp
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    4c00 <main+0x3500>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
call   1df0 <main+0x6f0>
add    $0xd29f,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   1560 <ntfs_acl_owner@plt>
lea    0xa020c(%ebx),%edx
cmpl   $0x1,(%edx)
je     4c40 <main+0x3540>
lea    0xa0228(%ebx),%edx
mov    (%edx),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   16a0 <ntfs_find_user@plt>
add    $0x18,%esp
pop    %ebx
ret
nop
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1310 <ntfs_get_user@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
cmovns %edx,%eax
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
call   1df0 <main+0x6f0>
add    $0xd242,%ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
add    0x8(%eax),%eax
lea    0xa020c(%ebx),%edx
cmpl   $0x1,(%edx)
je     4ca0 <main+0x35a0>
lea    0xa0228(%ebx),%edx
mov    0x4(%edx),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   1680 <ntfs_find_group@plt>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1370 <ntfs_get_group@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
cmovns %edx,%eax
add    $0x18,%esp
pop    %ebx
ret
push   %esi
mov    0x8(%esp),%ecx
xor    %eax,%eax
nop
add    $0x1,%ecx
movsbl -0x1(%ecx),%edx
lea    -0x30(%edx),%esi
cmp    $0x9,%esi
ja     4ceb <main+0x35eb>
add    $0x1,%ecx
movsbl -0x1(%ecx),%edx
shl    $0x4,%eax
add    %esi,%eax
lea    -0x30(%edx),%esi
cmp    $0x9,%esi
jbe    4cd7 <main+0x35d7>
lea    -0x61(%edx),%esi
cmp    $0x5,%esi
ja     4d00 <main+0x3600>
shl    $0x4,%eax
lea    -0x57(%edx,%eax,1),%eax
jmp    4cc8 <main+0x35c8>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x41(%edx),%esi
cmp    $0x5,%esi
ja     4d18 <main+0x3618>
shl    $0x4,%eax
lea    -0x37(%edx,%eax,1),%eax
jmp    4cc8 <main+0x35c8>
lea    0x0(%esi,%eiz,1),%esi
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
xor    %eax,%eax
push   %edi
xor    %edi,%edi
push   %esi
mov    0x10(%esp),%esi
jmp    4d3c <main+0x363c>
lea    0x0(%esi),%esi
mov    %edi,%ecx
xor    $0x4,%ecx
shl    %cl,%ebp
or     %ebp,%eax
add    $0x4,%edi
add    $0x1,%esi
movsbl -0x1(%esi),%edx
lea    -0x30(%edx),%ebp
cmp    $0x9,%ebp
jbe    4d30 <main+0x3630>
lea    -0x61(%edx),%ecx
cmp    $0x5,%ecx
ja     4d68 <main+0x3668>
mov    %edi,%ecx
sub    $0x57,%edx
xor    $0x4,%ecx
shl    %cl,%edx
or     %edx,%eax
jmp    4d39 <main+0x3639>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x41(%edx),%ecx
cmp    $0x5,%ecx
ja     4d80 <main+0x3680>
mov    %edi,%ecx
sub    $0x37,%edx
xor    $0x4,%ecx
shl    %cl,%edx
or     %edx,%eax
jmp    4d39 <main+0x3639>
xchg   %ax,%ax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
mov    0x14(%esp),%ecx
mov    0x10(%esp),%edi
mov    0x18(%esp),%esi
test   %ecx,%ecx
js     4db0 <main+0x36b0>
lea    0xf(%ecx),%eax
cmp    %esi,%eax
setl   %al
movzbl %al,%eax
cmp    %esi,%ecx
jge    4e24 <main+0x3724>
test   %eax,%eax
je     4e24 <main+0x3724>
xor    %edx,%edx
lea    -0x6(%edx),%eax
cmp    $0x1,%eax
lea    0x1(%ecx),%ebp
movsbl (%edi,%ecx,1),%ecx
jbe    4e07 <main+0x3707>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x10,%edx
je     4e07 <main+0x3707>
cmp    $0x19,%edx
je     4e07 <main+0x3707>
cmp    $0x22,%edx
je     4e07 <main+0x3707>
cmp    $0x2b,%edx
je     4e07 <main+0x3707>
lea    -0x61(%ecx),%eax
cmp    $0x5,%eax
ja     4e28 <main+0x3728>
lea    0x0(%ebp,%edx,1),%ecx
cmp    %ecx,%esi
jle    4e3d <main+0x373d>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
movsbl (%edi,%ecx,1),%ecx
lea    -0x6(%edx),%eax
cmp    $0x1,%eax
ja     4dd0 <main+0x36d0>
cmp    $0xa,%ecx
sete   %al
cmp    $0x20,%ecx
sete   %cl
or     %ecx,%eax
movzbl %al,%eax
lea    0x0(%ebp,%edx,1),%ecx
cmp    %ecx,%esi
jle    4e24 <main+0x3724>
test   %eax,%eax
jne    4df8 <main+0x36f8>
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x30(%ecx),%eax
cmp    $0x9,%eax
jbe    4dec <main+0x36ec>
sub    $0x41,%ecx
xor    %eax,%eax
cmp    $0x5,%ecx
setbe  %al
jmp    4e18 <main+0x3718>
mov    $0x1,%eax
jmp    4e24 <main+0x3724>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xd04f,%ebx
sub    $0x9c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
lea    0x60(%esp),%eax
mov    0xb4(%esp),%ebp
mov    %eax,0x24(%esp)
mov    0xb0(%esp),%esi
mov    %eax,0x14(%esp)
movl   $0x10000,0x10(%esp)
movl   $0x1,0x8(%esp)
mov    0x1b8(%ebx),%eax
lea    0x701f8(%ebx),%edi
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
movl   $0x0,0x5c(%esp)
mov    %eax,(%esp)
movl   $0x0,0x60(%esp)
call   1640 <ntfs_get_file_security@plt>
test   %eax,%eax
je     5248 <main+0x3b48>
movzbl 0x701fd(%ebx),%eax
movzbl 0x701fc(%ebx),%edx
shl    $0x8,%eax
add    %eax,%edx
movzbl 0x701fe(%ebx),%eax
shl    $0x10,%eax
add    %eax,%edx
movzbl 0x701ff(%ebx),%eax
shl    $0x18,%eax
add    %eax,%edx
mov    %edx,0x2c(%esp)
jne    50c0 <main+0x39c0>
xor    %eax,%eax
movl   $0x0,0x28(%esp)
mov    %ax,0x30(%esp)
movl   $0x0,0x40(%esp)
lea    0x5c(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x1b8(%ebx),%eax
movl   $0x10000,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x8,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   1640 <ntfs_get_file_security@plt>
test   %eax,%eax
jne    4f90 <main+0x3890>
lea    0xa0204(%ebx),%eax
movb   $0x0,0x1(%esi)
movb   $0x0,0x2(%esi)
movb   $0x0,0x3(%esi)
movb   $0x1,(%esi)
cmpl   $0x1,(%eax)
movl   $0x14,0x5c(%esp)
movb   $0x0,0xc(%esi)
movb   $0x0,0xd(%esi)
movb   $0x0,0xe(%esi)
movb   $0x0,0xf(%esi)
jle    4f90 <main+0x3890>
lea    -0x3b14(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x24(%esp),%eax
movb   $0x0,0x10(%esi)
movb   $0x0,0x11(%esi)
movb   $0x0,0x12(%esi)
movb   $0x0,0x13(%esi)
mov    %eax,0x14(%esp)
mov    0x1b8(%ebx),%eax
movl   $0x10000,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x60(%esp)
call   1640 <ntfs_get_file_security@plt>
test   %eax,%eax
je     5130 <main+0x3a30>
mov    0x5c(%esp),%ecx
mov    0x60(%esp),%edx
lea    -0x14(%ecx,%edx,1),%eax
cmp    $0x10000,%eax
mov    %eax,0x44(%esp)
jbe    5288 <main+0x3b88>
movl   $0x1,0x28(%esp)
movb   $0x0,0x4(%esi)
movb   $0x0,0x5(%esi)
movb   $0x0,0x6(%esi)
movb   $0x0,0x7(%esi)
mov    0x24(%esp),%eax
movb   $0x0,0x8(%esi)
movb   $0x0,0x9(%esi)
movb   $0x0,0xa(%esi)
movb   $0x0,0xb(%esi)
mov    %eax,0x14(%esp)
mov    0x1b8(%ebx),%eax
movl   $0x10000,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x2,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x60(%esp)
call   1640 <ntfs_get_file_security@plt>
test   %eax,%eax
je     51f8 <main+0x3af8>
mov    0x5c(%esp),%edi
mov    0x60(%esp),%ecx
lea    -0x14(%edi,%ecx,1),%edx
cmp    $0x10000,%edx
jbe    5320 <main+0x3c20>
movl   $0x10000,0x8(%esp)
lea    -0x5384(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa01f8(%ebx),%eax
addl   $0x1,(%eax)
xor    %eax,%eax
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    53b3 <main+0x3cb3>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movzbl 0x701fb(%ebx),%eax
movzbl 0x701fa(%ebx),%edx
shl    $0x8,%eax
add    %edx,%eax
mov    %ax,0x30(%esp)
mov    0x2c(%esp),%eax
lea    (%eax,%edi,1),%edx
mov    %edx,(%esp)
mov    %edx,0x44(%esp)
call   13b0 <ntfs_sid_size@plt>
mov    0x44(%esp),%edx
movl   $0x1,0x28(%esp)
cmp    $0x28,%eax
mov    %eax,0x40(%esp)
jg     4f1e <main+0x381e>
mov    %eax,0x8(%esp)
lea    0x64(%esp),%eax
movl   $0x28,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   14a0 <__memcpy_chk@plt>
movl   $0x0,0x28(%esp)
jmp    4f1e <main+0x381e>
lea    0x0(%esi),%esi
cmpl   $0x10000,0x60(%esp)
ja     4ff9 <main+0x38f9>
lea    0xa0200(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     53a0 <main+0x3ca0>
lea    -0x53d8(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa01f8(%ebx),%eax
addl   $0x1,(%eax)
mov    0x28(%esp),%ecx
test   %ecx,%ecx
jne    5001 <main+0x3901>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     5001 <main+0x3901>
mov    0x5c(%esp),%eax
lea    0x64(%esp),%edx
mov    0x40(%esp),%ecx
mov    %edx,0x4(%esp)
mov    %eax,0x2c(%esp)
add    %esi,%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   12f0 <memcpy@plt>
mov    0x2c(%esp),%edx
xor    %eax,%eax
mov    %edi,0x44(%esp)
lea    0x0(,%eax,8),%ecx
mov    %edx,%edi
shr    %cl,%edi
mov    %edi,%ecx
mov    %cl,0x4(%esi,%eax,1)
add    $0x1,%eax
cmp    $0x4,%eax
jne    51a9 <main+0x3aa9>
movzbl 0x3(%esi),%edx
movzbl 0x2(%esi),%ecx
mov    0x30(%esp),%eax
mov    0x44(%esp),%edi
shl    $0x8,%edx
add    %ecx,%edx
and    $0x1,%eax
or     %edx,%eax
mov    %al,0x2(%esi)
shr    $0x8,%eax
mov    %al,0x3(%esi)
mov    0x40(%esp),%eax
add    0x2c(%esp),%eax
mov    %eax,0x5c(%esp)
jmp    5011 <main+0x3911>
xchg   %ax,%ax
cmpl   $0x10000,0x60(%esp)
ja     5077 <main+0x3977>
lea    -0x3b09(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa01f8(%ebx),%eax
addl   $0x1,(%eax)
mov    0x28(%esp),%eax
test   %eax,%eax
jne    5077 <main+0x3977>
mov    0x5c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1460 <ntfs_valid_descr@plt>
test   %eax,%eax
je     5258 <main+0x3b58>
mov    0x5c(%esp),%eax
jmp    50a0 <main+0x39a0>
xchg   %ax,%ax
mov    %ebp,0x8(%esp)
lea    -0x3af7(%ebx),%eax
jmp    5085 <main+0x3985>
nop
lea    -0x5360(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
xor    %eax,%eax
jmp    50a0 <main+0x39a0>
lea    0x0(%esi),%esi
lea    (%esi,%ecx,1),%eax
mov    %ecx,0x4c(%esp)
lea    -0x14(%edx),%ecx
mov    %ecx,0x8(%esp)
lea    0x7020c(%ebx),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x48(%esp)
call   12f0 <memcpy@plt>
mov    0x48(%esp),%edx
xor    %eax,%eax
mov    0x4c(%esp),%ecx
mov    %edi,0x48(%esp)
cmp    $0x14,%edx
cmova  %ecx,%eax
xor    %edx,%edx
lea    0x0(,%edx,8),%ecx
mov    %eax,%edi
shr    %cl,%edi
mov    %edi,%ecx
mov    %cl,0x10(%esi,%edx,1)
add    $0x1,%edx
cmp    $0x4,%edx
jne    52c2 <main+0x3bc2>
movzbl 0x3(%esi),%eax
movzbl 0x2(%esi),%edx
movzbl 0x701fa(%ebx),%ecx
mov    0x48(%esp),%edi
shl    $0x8,%eax
add    %edx,%eax
movzbl 0x701fb(%ebx),%edx
shl    $0x8,%edx
add    %ecx,%edx
and    $0x1404,%edx
or     %edx,%eax
mov    %al,0x2(%esi)
shr    $0x8,%eax
mov    %al,0x3(%esi)
mov    0x44(%esp),%eax
mov    %eax,0x5c(%esp)
jmp    5165 <main+0x3a65>
lea    0x0(%esi),%esi
lea    (%esi,%edi,1),%eax
mov    %edx,0x2c(%esp)
lea    -0x14(%ecx),%edx
mov    %ecx,0x24(%esp)
lea    0x7020c(%ebx),%ecx
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   12f0 <memcpy@plt>
mov    0x24(%esp),%ecx
xor    %eax,%eax
mov    0x2c(%esp),%edx
cmp    $0x14,%ecx
cmova  %edi,%eax
xor    %edi,%edi
mov    %edx,0x24(%esp)
lea    0x0(,%edi,8),%ecx
mov    %eax,%edx
shr    %cl,%edx
mov    %dl,0x8(%esi,%edi,1)
add    $0x1,%edi
cmp    $0x4,%edi
jne    535a <main+0x3c5a>
movzbl 0x3(%esi),%eax
movzbl 0x2(%esi),%ecx
mov    0x24(%esp),%edx
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x701fa(%ebx),%ecx
mov    %edx,0x5c(%esp)
and    $0x2,%ecx
or     %ecx,%eax
mov    %al,0x2(%esi)
shr    $0x8,%eax
mov    %al,0x3(%esi)
jmp    521d <main+0x3b1d>
lea    -0x53ac(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    515c <main+0x3a5c>
call   c810 <main+0xb110>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%eax
call   1df0 <main+0x6f0>
add    $0xcad9,%ebx
mov    0x20(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1600 <ntfs_set_file_security@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%edi
jne    5436 <main+0x3d36>
lea    -0x533c(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xca5f,%ebx
sub    $0x10bc,%esp
mov    0x10d0(%esp),%eax
mov    0x10d4(%esp),%ebp
mov    %eax,0x28(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x10ac(%esp)
xor    %eax,%eax
call   13d0 <getuid@plt>
mov    %eax,0x3c(%esp)
call   1570 <getgid@plt>
xor    %edx,%edx
mov    %esi,0x18(%esp)
mov    %edx,%esi
mov    %edi,0x1c(%esp)
mov    %eax,0x48(%esp)
xor    %eax,%eax
movzbl 0x4(%ebp,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    5496 <main+0x3d96>
mov    %esi,%eax
xor    %ecx,%ecx
add    %ebp,%eax
xor    %edx,%edx
mov    %eax,0x20(%esp)
xor    %eax,%eax
mov    %ebp,0x24(%esp)
mov    0x20(%esp),%ebp
mov    %esi,0x2c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
movzbl 0x2(%ebp,%ecx,1),%esi
shld   $0x8,%eax,%edx
xor    %edi,%edi
shl    $0x8,%eax
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ecx
cmp    $0x6,%ecx
jne    54d8 <main+0x3dd8>
mov    %eax,0x18(%esp)
mov    0x24(%esp),%ebp
xor    %esi,%esi
mov    0x2c(%esp),%eax
mov    %edx,0x1c(%esp)
movzbl 0x1(%ebp,%eax,1),%eax
mov    %eax,0x30(%esp)
xor    %eax,%eax
movzbl 0x8(%ebp,%esi,1),%edi
lea    0x0(,%esi,8),%ecx
add    $0x1,%esi
shl    %cl,%edi
add    %edi,%eax
cmp    $0x4,%esi
jne    550f <main+0x3e0f>
mov    %eax,0x38(%esp)
add    %ebp,%eax
xor    %ecx,%ecx
mov    %eax,0x24(%esp)
xor    %esi,%esi
xor    %edi,%edi
mov    %ebp,0x34(%esp)
mov    0x24(%esp),%ebp
nop
movzbl 0x2(%ebp,%ecx,1),%eax
shld   $0x8,%esi,%edi
xor    %edx,%edx
shl    $0x8,%esi
add    %eax,%esi
adc    %edx,%edi
add    $0x1,%ecx
cmp    $0x6,%ecx
jne    5540 <main+0x3e40>
cmpl   $0x5,0x30(%esp)
mov    0x34(%esp),%ebp
jne    5581 <main+0x3e81>
mov    0x38(%esp),%eax
cmpb   $0x5,0x1(%ebp,%eax,1)
jne    5581 <main+0x3e81>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,%eax
xor    $0x5,%eax
or     %ecx,%eax
je     55e8 <main+0x3ee8>
lea    -0x3a69(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   16e0 <fputs@plt>
lea    -0x51ac(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    $0x1,%eax
mov    0x10ac(%esp),%edi
xor    %gs:0x14,%edi
jne    5abb <main+0x43bb>
add    $0x10bc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
xor    $0x5,%eax
or     %edi,%eax
jne    5581 <main+0x3e81>
mov    0x20(%esp),%edi
xor    %esi,%esi
xor    %eax,%eax
movzbl 0x8(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    55f9 <main+0x3ef9>
cmp    $0x15,%esi
jne    5581 <main+0x3e81>
mov    0x38(%esp),%eax
xor    %si,%si
mov    0x24(%esp),%edi
add    $0x8,%eax
mov    %eax,0x30(%esp)
xor    %eax,%eax
movzbl 0x8(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    562e <main+0x3f2e>
cmp    $0x15,%esi
jne    5581 <main+0x3e81>
lea    -0x3ad9(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    -0x5314(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x40(%esp)
call   1480 <puts@plt>
mov    0x3c(%esp),%edi
test   %edi,%edi
je     5a36 <main+0x4336>
mov    0x3c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3abf(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x20(%esp),%eax
xor    %edi,%edi
movl   $0x5,0xc(%esp)
movl   $0x0,0x10(%esp)
movzbl (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3aa4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %eax,0x34(%esp)
call   15f0 <__printf_chk@plt>
lea    -0x4049(%ebx),%edx
mov    %edx,0x18(%esp)
mov    0x2c(%esp),%edx
lea    0x8(%ebp),%eax
mov    %eax,0x4c(%esp)
mov    %ebp,0x2c(%esp)
add    %eax,%edx
mov    %edx,0x20(%esp)
nop
mov    0x20(%esp),%edx
xor    %esi,%esi
xor    %eax,%eax
lea    (%edx,%edi,1),%ebp
movzbl 0x0(%ebp,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    56fb <main+0x3ffb>
mov    0x18(%esp),%eax
add    $0x4,%edi
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
cmp    $0x14,%edi
jne    56f0 <main+0x3ff0>
movl   $0xa,(%esp)
mov    0x2c(%esp),%ebp
call   15a0 <putchar@plt>
mov    0x48(%esp),%esi
test   %esi,%esi
je     5a51 <main+0x4351>
mov    0x48(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3ab3(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x24(%esp),%eax
xor    %edi,%edi
movl   $0x5,0xc(%esp)
movl   $0x0,0x10(%esp)
movzbl (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x4c(%esp),%eax
mov    0x38(%esp),%edx
mov    %ebp,0x2c(%esp)
add    %edx,%eax
mov    %eax,0x20(%esp)
mov    0x20(%esp),%edx
xor    %esi,%esi
xor    %eax,%eax
lea    (%edx,%edi,1),%ebp
movzbl 0x0(%ebp,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    57bb <main+0x40bb>
mov    0x18(%esp),%eax
add    $0x4,%edi
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
cmp    $0x14,%edi
jne    57b0 <main+0x40b0>
movl   $0xa,(%esp)
mov    0x2c(%esp),%ebp
mov    $0x4,%esi
call   15a0 <putchar@plt>
mov    0x24(%esp),%eax
movl   $0x5,0xc(%esp)
movl   $0x0,0x10(%esp)
movzbl (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3aa6(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x30(%esp),%edi
add    %ebp,%edi
nop
xor    %ebp,%ebp
xor    %eax,%eax
movzbl (%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    5844 <main+0x4144>
mov    0x18(%esp),%eax
add    $0x4,%edi
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
sub    $0x1,%esi
jne    5840 <main+0x4140>
lea    -0x3a9a(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
je     58a9 <main+0x41a9>
mov    0x3c(%esp),%edx
test   %edx,%edx
jne    5a6c <main+0x436c>
lea    -0x52e0(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    -0x52a8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   16e0 <fputs@plt>
lea    -0x3a93(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    -0x527c(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    -0x51f0(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x28(%esp),%eax
cmpb   $0x2f,(%eax)
je     5a95 <main+0x4395>
lea    0xac(%esp),%ebp
movl   $0x1000,0x4(%esp)
mov    %ebp,(%esp)
call   1520 <getcwd@plt>
mov    %ebp,%edx
test   %eax,%eax
mov    %eax,%esi
je     5a2f <main+0x432f>
mov    (%edx),%ecx
add    $0x4,%edx
lea    -0x1010101(%ecx),%eax
not    %ecx
and    %ecx,%eax
and    $0x80808080,%eax
je     593f <main+0x423f>
mov    %eax,%ecx
shr    $0x10,%ecx
test   $0x8080,%eax
cmove  %ecx,%eax
lea    0x2(%edx),%ecx
cmove  %ecx,%edx
add    %al,%al
sbb    $0x3,%edx
mov    $0x2f,%eax
mov    %ax,(%edx)
mov    0x28(%esp),%eax
add    $0x1,%edx
movl   $0x1000,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   15e0 <__strcpy_chk@plt>
lea    0x54(%esp),%eax
mov    %eax,0x18(%esp)
jmp    59c4 <main+0x42c4>
lea    0x0(%esi),%esi
movb   $0x0,(%eax)
movl   $0x2f,0x4(%esp)
mov    0x60(%esp),%edi
mov    %esi,(%esp)
call   1510 <strchr@plt>
test   %eax,%eax
je     5a7f <main+0x437f>
cmp    $0x5,%edi
je     59f7 <main+0x42f7>
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0x8(%esp)
call   16c0 <__lxstat@plt>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   1630 <strrchr@plt>
test   %eax,%eax
je     59a3 <main+0x42a3>
cmpl   $0x5,0x60(%esp)
jne    59a0 <main+0x42a0>
lea    -0x3a8c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   16e0 <fputs@plt>
lea    -0x3a7f(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
xor    %eax,%eax
jmp    55c2 <main+0x3ec2>
lea    -0x3aba(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    5699 <main+0x3f99>
lea    -0x3aae(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    576d <main+0x406d>
lea    -0x5234(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    5901 <main+0x4201>
cmp    $0x5,%edi
je     59f7 <main+0x42f7>
xor    %eax,%eax
lea    0x0(%esi),%esi
jmp    55c2 <main+0x3ec2>
mov    0x28(%esp),%eax
lea    0xac(%esp),%ebp
movl   $0x1000,0x8(%esp)
mov    %ebp,%esi
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   15e0 <__strcpy_chk@plt>
jmp    5990 <main+0x4290>
call   c810 <main+0xb110>
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xc3df,%ebx
sub    $0x13c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x12c(%esp)
xor    %eax,%eax
mov    0x150(%esp),%esi
mov    0x154(%esp),%edi
call   13d0 <getuid@plt>
test   %eax,%eax
jne    5ba8 <main+0x44a8>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   1f80 <main+0x880>
test   %eax,%eax
je     5c30 <main+0x4530>
lea    0x28(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x1b8(%ebx),%eax
lea    0x2c(%esp),%ebp
movl   $0x10000,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x3,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x28(%esp)
call   1640 <ntfs_get_file_security@plt>
test   %eax,%eax
jne    5c70 <main+0x4570>
mov    0x138(%ebx),%eax
lea    -0x5188(%ebx),%edx
mov    (%eax),%eax
mov    %edi,0xc(%esp)
xor    %edi,%edi
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
mov    %esi,(%esp)
call   20c0 <main+0x9c0>
jmp    5be0 <main+0x44e0>
lea    0x0(%esi,%eiz,1),%esi
call   13d0 <getuid@plt>
test   %eax,%eax
mov    0x138(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0xc(%esp)
jne    5c08 <main+0x4508>
lea    -0x3a3c(%ebx),%eax
mov    $0x1,%edi
movl   $0x1c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    0x12c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edi,%eax
jne    5c83 <main+0x4583>
add    $0x13c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5164(%ebx),%eax
mov    $0x1,%edi
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
jmp    5be0 <main+0x44e0>
lea    0x0(%esi),%esi
mov    0x138(%ebx),%eax
lea    -0x3a56(%ebx),%edx
mov    $0x1,%edi
mov    (%eax),%eax
mov    %edx,0x8(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
jmp    5be0 <main+0x44e0>
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   5440 <main+0x3d40>
mov    %eax,%edi
jmp    5b9a <main+0x449a>
call   c810 <main+0xb110>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xc20b,%ebx
sub    $0x4c,%esp
mov    0x68(%esp),%ebp
mov    0x60(%esp),%edi
movzbl (%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    5cae <main+0x45ae>
test   %esi,%esi
jne    5cef <main+0x45ef>
mov    0x60(%esp),%edi
xor    %al,%al
movzbl 0x4(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    5ccf <main+0x45cf>
test   %esi,%esi
je     5e88 <main+0x4788>
mov    0x60(%esp),%eax
xor    %edi,%edi
lea    0x14(%eax),%esi
mov    %esi,(%esp)
call   14c0 <ntfs_attr_size@plt>
add    $0x14,%eax
cmp    %ebp,%eax
ja     5e28 <main+0x4728>
mov    %esi,(%esp)
call   14c0 <ntfs_attr_size@plt>
add    $0x14,%eax
cmp    %eax,%ebp
ja     5df0 <main+0x46f0>
test   %edi,%edi
je     5d30 <main+0x4630>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1460 <ntfs_valid_descr@plt>
test   %eax,%eax
je     5e68 <main+0x4768>
lea    -0x14(%ebp),%eax
test   %eax,%eax
jle    61bc <main+0x4abc>
mov    0x60(%esp),%eax
sub    $0x15,%ebp
and    $0xfffffffc,%ebp
lea    0x18(%eax,%ebp,1),%edx
xor    %eax,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
rol    $0x3,%eax
add    $0x4,%esi
add    -0x4(%esi),%eax
cmp    %edx,%esi
jne    5d68 <main+0x4668>
mov    0x60(%esp),%ebp
xor    %edi,%edi
xor    %edx,%edx
movzbl 0x0(%ebp,%edx,1),%esi
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%esi
add    %esi,%edi
cmp    $0x4,%edx
jne    5d7d <main+0x467d>
xor    %esi,%esi
xor    %dl,%dl
mov    0x60(%esp),%ebp
cmp    %eax,%edi
je     5eb8 <main+0x47b8>
movzbl 0x0(%ebp,%edx,1),%edi
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%edi
add    %edi,%esi
cmp    $0x4,%edx
jne    5da5 <main+0x46a5>
mov    %eax,0xc(%esp)
lea    -0x50bc(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
jmp    5d22 <main+0x4622>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   14c0 <ntfs_attr_size@plt>
movl   $0x1,(%esp)
add    $0x14,%eax
mov    %eax,0x8(%esp)
lea    -0x5118(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa01f8(%ebx),%eax
addl   $0x1,(%eax)
jmp    5d1e <main+0x461e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
mov    $0x1,%di
add    $0x28,%eax
mov    %eax,(%esp)
call   14c0 <ntfs_attr_size@plt>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x5144(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
jmp    5d0b <main+0x460b>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x50e0(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
jmp    5d22 <main+0x4622>
lea    0x0(%esi,%eiz,1),%esi
mov    0x64(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3a1f(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    5edd <main+0x47dd>
lea    -0x3a03(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x74(%esp),%eax
xor    %edi,%edi
xor    %ebp,%ebp
xor    %esi,%esi
test   %eax,%eax
jne    60a0 <main+0x49a0>
mov    %ebp,0x24(%esp)
mov    %esi,%ebp
mov    %edi,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
xor    %edi,%edi
lea    0x0(,%ebp,8),%ecx
mov    %edi,%edx
movzbl 0x8(%eax,%ebp,1),%esi
mov    %esi,%eax
shld   %cl,%esi,%edx
xor    %esi,%esi
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    5f00 <main+0x4800>
mov    0x24(%esp),%ebp
mov    0x20(%esp),%edi
test   %ebp,%ebp
je     6170 <main+0x4a70>
xor    %ebp,%ebp
xor    %edi,%edi
xor    %esi,%esi
mov    %ebp,0x24(%esp)
mov    %esi,%ebp
mov    %edi,0x20(%esp)
xchg   %ax,%ax
mov    0x60(%esp),%eax
xor    %edi,%edi
lea    0x0(,%ebp,8),%ecx
mov    %edi,%edx
movzbl 0x8(%eax,%ebp,1),%esi
mov    %esi,%eax
shld   %cl,%esi,%edx
xor    %esi,%esi
shl    %cl,%eax
test   $0x20,%cl
cmovne %eax,%edx
cmovne %esi,%eax
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    5f58 <main+0x4858>
xor    %eax,%eax
xor    %edx,%edx
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%edi
movl   $0x0,0x1c(%esp)
movzbl 0x8(%edi,%ebp,1),%ecx
mov    0x1c(%esp),%edi
mov    %ecx,0x18(%esp)
mov    0x18(%esp),%esi
lea    0x0(,%ebp,8),%ecx
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     5fca <main+0x48ca>
mov    %esi,%edi
xor    %esi,%esi
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    5f98 <main+0x4898>
mov    0x20(%esp),%edi
mov    0x24(%esp),%ebp
mov    %eax,0x8(%esp)
lea    -0x5094(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %edi,0x10(%esp)
mov    %ebp,0x14(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
lea    0xa0204(%ebx),%eax
mov    (%eax),%edx
mov    0x60(%esp),%ebp
xor    %esi,%esi
xor    %eax,%eax
movzbl 0x4(%ebp,%eax,1),%edi
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edi
add    %edi,%esi
cmp    $0x4,%eax
jne    601d <main+0x491d>
cmp    $0x1,%edx
jle    6054 <main+0x4954>
lea    -0x39d1(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
test   %esi,%esi
mov    $0x1,%eax
je     5d24 <main+0x4624>
cmp    %esi,0x70(%esp)
jb     5d24 <main+0x4624>
mov    0x70(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x506c(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x4c,%esp
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,0x2c(%esp)
mov    %esi,%ebp
mov    %edi,0x28(%esp)
lea    0x0(%esi),%esi
mov    0x60(%esp),%eax
xor    %edi,%edi
lea    0x0(,%ebp,8),%ecx
mov    %edi,%edx
xor    %edi,%edi
movzbl 0x8(%eax,%ebp,1),%esi
mov    %esi,%eax
shl    %cl,%eax
shld   %cl,%esi,%edx
test   $0x20,%cl
cmovne %eax,%edx
cmovne %edi,%eax
add    %eax,0x28(%esp)
adc    %edx,0x2c(%esp)
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    60b0 <main+0x49b0>
mov    0x28(%esp),%edi
mov    0x2c(%esp),%ebp
add    $0x40000,%edi
mov    %edi,%esi
mov    0x64(%esp),%edi
adc    $0x0,%ebp
mov    %ebp,%eax
xor    %esi,%edi
or     %edi,%eax
je     6180 <main+0x4a80>
xor    %ebp,%ebp
xor    %edi,%edi
xor    %esi,%esi
mov    %ebp,%edx
mov    %edi,%eax
mov    %esi,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%edi
movl   $0x0,0x24(%esp)
movzbl 0x8(%edi,%ebp,1),%ecx
mov    0x24(%esp),%edi
mov    %ecx,0x20(%esp)
mov    0x20(%esp),%esi
lea    0x0(,%ebp,8),%ecx
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     614a <main+0x4a4a>
mov    %esi,%edi
xor    %esi,%esi
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    6118 <main+0x4a18>
mov    %eax,%edi
mov    %edx,%ebp
add    $0xfffc0000,%edi
adc    $0xffffffff,%ebp
mov    %edi,0x20(%esp)
mov    %ebp,0x24(%esp)
jmp    5f8e <main+0x488e>
cmp    0x64(%esp),%edi
jne    5f46 <main+0x4846>
lea    0x0(%esi),%esi
lea    0xa0204(%ebx),%eax
mov    (%eax),%edx
cmp    $0x1,%edx
jle    6015 <main+0x4915>
mov    0x64(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x39ea(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0204(%ebx),%eax
mov    (%eax),%edx
jmp    6015 <main+0x4915>
xor    %eax,%eax
jmp    5d75 <main+0x4675>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xbccb,%ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x44(%esp),%edx
movzbl 0x10(%esi,%eax,1),%ebp
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%ebp
add    %ebp,%edi
cmp    $0x4,%eax
jne    61ee <main+0x4aee>
cmp    %edi,%edx
movl   $0x1,0x1c(%esp)
jae    6488 <main+0x4d88>
movzbl 0x1(%esi),%eax
movzbl (%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x14,%eax
je     6252 <main+0x4b52>
mov    %eax,0x8(%esp)
lea    -0x39c6(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
movzbl 0x3(%esi),%eax
movzbl 0x2(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x14,%eax
je     628f <main+0x4b8f>
mov    %eax,0x8(%esp)
lea    -0x39a8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
xor    %ebp,%ebp
xor    %eax,%eax
movzbl 0x4(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    6293 <main+0x4b93>
test   %ebp,%ebp
je     62f6 <main+0x4bf6>
xor    %ebp,%ebp
xor    %al,%al
movzbl 0x4(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    62b3 <main+0x4bb3>
lea    -0x398c(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
testb  $0x1,0xc(%esi)
movzbl 0x9(%esi),%eax
jne    6320 <main+0x4c20>
movzbl 0x8(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x28,%eax
je     6359 <main+0x4c59>
mov    %eax,0x8(%esp)
lea    -0x5024(%ebx),%eax
jmp    6338 <main+0x4c38>
lea    0x0(%esi),%esi
movzbl 0x8(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x30,%eax
je     6359 <main+0x4c59>
mov    %eax,0x8(%esp)
lea    -0x5048(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
movzbl 0xb(%esi),%eax
movzbl 0xa(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x4,%eax
je     6396 <main+0x4c96>
mov    %eax,0x8(%esp)
lea    -0x5000(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
movzbl 0xd(%esi),%eax
movzbl 0xc(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
test   $0x1fffc,%eax
je     63d5 <main+0x4cd5>
mov    %eax,0x8(%esp)
lea    -0x4fd8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
movzbl 0xf(%esi),%eax
movzbl 0xe(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
je     640f <main+0x4d0f>
mov    %eax,0x8(%esp)
lea    -0x3970(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
xor    %ebp,%ebp
xor    %eax,%eax
movzbl 0x18(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    6413 <main+0x4d13>
cmp    %ebp,%edi
je     647a <main+0x4d7a>
xor    %ebp,%ebp
xor    %al,%al
movzbl 0x18(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    6433 <main+0x4d33>
lea    -0x4fb8(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
mov    0x1c(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x506c(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x1c(%esp)
addl   $0x1,(%eax)
jmp    6216 <main+0x4b16>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ecx,%ecx
push   %edi
xor    %eax,%eax
push   %esi
mov    %ecx,%edi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xb9d9,%ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebp
movzbl 0x10(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    64e0 <main+0x4de0>
xor    %ecx,%ecx
xor    %al,%al
mov    %edi,0x18(%esp)
mov    %ecx,%edi
movzbl 0x14(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    6502 <main+0x4e02>
cmp    0x18(%esp),%ebp
mov    %edi,%eax
mov    %edi,0x1c(%esp)
mov    0x44(%esp),%edi
ja     653e <main+0x4e3e>
cmp    %eax,%edi
jae    6538 <main+0x4e38>
mov    $0x1,%edi
jmp    6577 <main+0x4e77>
lea    0x0(%esi),%esi
cmp    0x18(%esp),%ebp
jne    652e <main+0x4e2e>
mov    0x1c(%esp),%eax
mov    %edi,0x14(%esp)
xor    %edi,%edi
mov    %ebp,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x4f98(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    658c <main+0x4e8c>
cmp    0x18(%esp),%ebp
je     68d0 <main+0x51d0>
movzbl 0x1(%esi),%eax
movzbl (%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x18,%eax
je     65c2 <main+0x4ec2>
mov    %eax,0x8(%esp)
lea    -0x3936(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
movzbl 0x3(%esi),%eax
movzbl 0x2(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x14,%eax
je     65f9 <main+0x4ef9>
mov    %eax,0x8(%esp)
lea    -0x39a8(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
xor    %ebp,%ebp
xor    %edx,%edx
movzbl 0x4(%esi,%edx,1),%eax
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%eax
add    %eax,%ebp
cmp    $0x4,%edx
jne    65fd <main+0x4efd>
test   %ebp,%ebp
je     665a <main+0x4f5a>
xor    %edi,%edi
xor    %eax,%eax
movzbl 0x4(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    661d <main+0x4f1d>
lea    -0x398c(%ebx),%eax
mov    %edi,0x8(%esp)
xor    %edi,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
testb  $0x1,0xc(%esi)
movzbl 0x9(%esi),%eax
jne    68a8 <main+0x51a8>
movzbl 0x8(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x30,%eax
je     669b <main+0x4f9b>
mov    %eax,0x8(%esp)
lea    -0x5048(%ebx),%eax
mov    %eax,0x4(%esp)
xor    %edi,%edi
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
movzbl 0xb(%esi),%eax
movzbl 0xa(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x8,%eax
je     66d2 <main+0x4fd2>
mov    %eax,0x8(%esp)
lea    -0x4f3c(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
movzbl 0xd(%esi),%eax
movzbl 0xc(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
test   $0x1fffc,%eax
je     670b <main+0x500b>
mov    %eax,0x8(%esp)
lea    -0x4fd8(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
movzbl 0xf(%esi),%eax
movzbl 0xe(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
je     673f <main+0x503f>
mov    %eax,0x8(%esp)
lea    -0x3970(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
xor    %ebp,%ebp
xor    %edx,%edx
movzbl 0x18(%esi,%edx,1),%eax
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%eax
add    %eax,%ebp
cmp    $0x4,%edx
jne    6743 <main+0x5043>
cmp    %ebp,0x18(%esp)
je     67aa <main+0x50aa>
xor    %edi,%edi
xor    %eax,%eax
movzbl 0x18(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    6765 <main+0x5065>
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
xor    %edi,%edi
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x4f14(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
xor    %ebp,%ebp
xor    %eax,%eax
movzbl 0x1c(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    67ae <main+0x50ae>
cmp    %ebp,0x1c(%esp)
je     6815 <main+0x5115>
xor    %edi,%edi
xor    %al,%al
movzbl 0x1c(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    67d0 <main+0x50d0>
mov    0x1c(%esp),%eax
mov    %edi,0x8(%esp)
xor    %edi,%edi
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
lea    -0x4fb8(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
xor    %ebp,%ebp
xor    %eax,%eax
movzbl 0x2c(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    6819 <main+0x5119>
test   %ebp,%ebp
je     689a <main+0x519a>
xor    %ebp,%ebp
xor    %al,%al
movzbl 0x2c(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    6839 <main+0x5139>
cmp    $0x490049,%ebp
je     689a <main+0x519a>
xor    %edi,%edi
xor    %al,%al
movzbl 0x2c(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    685d <main+0x515d>
lea    -0x4ef4(%ebx),%eax
mov    %edi,0x8(%esp)
xor    %edi,%edi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x8(%esi),%edx
shl    $0x8,%eax
add    %edx,%eax
cmp    $0x38,%eax
je     669b <main+0x4f9b>
mov    %eax,0x8(%esp)
lea    -0x4f60(%ebx),%eax
jmp    6680 <main+0x4f80>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3954(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    658c <main+0x4e8c>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xb5af,%ebx
sub    $0x3c,%esp
lea    0xa0210(%ebx),%eax
mov    (%eax),%edi
test   %edi,%edi
jne    6bd0 <main+0x54d0>
lea    -0x3918(%ebx),%eax
xor    %edi,%edi
movl   $0x0,0x24(%esp)
xor    %esi,%esi
mov    %eax,0x28(%esp)
lea    0xa0238(%ebx),%eax
mov    (%edi,%eax,1),%eax
test   %eax,%eax
je     6a76 <main+0x5376>
mov    %edi,%ecx
xor    %ebp,%ebp
shl    $0x6,%ecx
mov    %ecx,0x20(%esp)
mov    %esi,0x18(%esp)
jmp    6a05 <main+0x5305>
lea    0x0(%esi),%esi
addl   $0x1,0x24(%esp)
cmp    $0xf,%dl
je     6a1d <main+0x531d>
mov    0x18(%esp),%esi
test   %esi,%esi
jne    6ad9 <main+0x53d9>
lea    0xa0210(%ebx),%esi
mov    (%esi),%esi
test   %esi,%esi
je     6ab0 <main+0x53b0>
movzwl 0x14(%eax),%eax
cmp    $0x2,%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
lea    -0x3912(%ebx),%ecx
cmovge 0x28(%esp),%ecx
movl   $0x1,(%esp)
mov    %edx,0x1c(%esp)
add    %ebp,%eax
mov    %eax,0x8(%esp)
lea    -0x4ea4(%ebx),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%edx
test   $0x1,%dl
je     6b1e <main+0x541e>
test   $0x2,%dl
je     6b45 <main+0x5445>
test   $0x4,%dl
je     6b6c <main+0x546c>
and    $0x8,%edx
je     6b93 <main+0x5493>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
addl   $0x1,0x18(%esp)
add    $0x1,%ebp
cmp    $0x100,%ebp
je     6a72 <main+0x5372>
lea    0xa0238(%ebx),%eax
mov    (%edi,%eax,1),%eax
lea    0x0(%ebp,%ebp,2),%ecx
shl    $0x3,%ecx
add    %ecx,%eax
movzbl 0x17(%eax),%edx
shr    $0x4,%dl
test   %dl,%dl
jne    6950 <main+0x5250>
lea    0xa0210(%ebx),%ecx
movzwl 0x14(%eax),%eax
mov    (%ecx),%edx
test   %edx,%edx
je     69f1 <main+0x52f1>
test   %eax,%eax
je     69f1 <main+0x52f1>
cmp    $0x1,%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
lea    -0x3912(%ebx),%edx
cmovne 0x28(%esp),%edx
movl   $0x1,(%esp)
add    %ebp,%eax
add    $0x1,%ebp
mov    %eax,0x8(%esp)
lea    -0x38c7(%ebx),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
cmp    $0x100,%ebp
jne    69fc <main+0x52fc>
mov    0x18(%esp),%esi
add    $0x4,%edi
cmp    $0x1000,%edi
jne    6928 <main+0x5228>
mov    0x24(%esp),%eax
test   %eax,%eax
je     6aa3 <main+0x53a3>
test   %esi,%esi
jne    6bae <main+0x54ae>
lea    -0x4e60(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4ec8(%ebx),%eax
mov    %eax,(%esp)
mov    %ecx,0x2c(%esp)
mov    %edx,0x1c(%esp)
call   1480 <puts@plt>
lea    0xa0238(%ebx),%esi
mov    0x2c(%esp),%ecx
mov    0x1c(%esp),%edx
mov    (%edi,%esi,1),%eax
add    %ecx,%eax
lea    0xa0210(%ebx),%ecx
movzwl 0x14(%eax),%eax
mov    (%ecx),%ecx
test   %ecx,%ecx
jne    697e <main+0x527e>
mov    0x20(%esp),%eax
movl   $0x1,(%esp)
mov    %edx,0x1c(%esp)
add    %ebp,%eax
mov    %eax,0x8(%esp)
lea    -0x38ef(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%edx
test   $0x1,%dl
jne    69c5 <main+0x52c5>
lea    -0x38df(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x1c(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%edx
test   $0x2,%dl
jne    69ce <main+0x52ce>
lea    -0x38d8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x1c(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%edx
test   $0x4,%dl
jne    69d7 <main+0x52d7>
lea    -0x38d1(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x1c(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%edx
and    $0x8,%edx
jne    69e0 <main+0x52e0>
lea    -0x38cc(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    69e0 <main+0x52e0>
lea    -0x4e84(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x390d(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    6912 <main+0x5212>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xb2af,%ebx
sub    $0x2c,%esp
cmpl   $0x1,0x40(%esp)
lea    0xa021c(%ebx),%eax
lea    0xa0204(%ebx),%edi
movl   $0x0,(%eax)
lea    0xa0200(%ebx),%eax
movl   $0x0,(%edi)
movl   $0x0,(%eax)
lea    0xa1238(%ebx),%eax
movl   $0x0,(%eax)
lea    0xa0208(%ebx),%eax
movl   $0x0,(%eax)
lea    0xa0210(%ebx),%eax
movl   $0x0,(%eax)
lea    0xa0220(%ebx),%eax
movl   $0x0,(%eax)
lea    0xa0224(%ebx),%eax
movl   $0x0,(%eax)
jle    7294 <main+0x5b94>
mov    0x44(%esp),%eax
mov    0x4(%eax),%esi
cmpb   $0x2d,(%esi)
jne    7294 <main+0x5b94>
xor    %ecx,%ecx
mov    $0x1,%ebp
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
movsbl (%esi),%eax
test   %al,%al
je     6cc8 <main+0x55c8>
lea    -0x52(%eax),%edx
cmp    $0x24,%dl
ja     7188 <main+0x5a88>
movzbl %dl,%edx
mov    -0x31a8(%ebx,%edx,4),%edx
add    %ebx,%edx
jmp    *%edx
lea    0x0(%esi,%eiz,1),%esi
addl   $0x1,(%edi)
add    $0x1,%esi
movsbl (%esi),%eax
test   %al,%al
jne    6c9a <main+0x559a>
lea    0x0(%esi),%esi
cmp    0x40(%esp),%ebp
je     71b8 <main+0x5ab8>
mov    0x44(%esp),%eax
mov    (%eax,%ebp,4),%esi
cmpb   $0x2d,(%esi)
je     6c88 <main+0x5588>
lea    0xa0208(%ebx),%eax
mov    0x40(%esp),%edx
mov    (%eax),%eax
sub    %ebp,%edx
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     71c6 <main+0x5ac6>
cmp    $0x1,%edx
jle    71c6 <main+0x5ac6>
mov    0x138(%ebx),%esi
xor    %ebp,%ebp
mov    (%esi),%eax
movl   $0x7,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x389b(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x16,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x3893(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x2a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4e3c(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x1a,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x387c(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x12,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x3861(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x1d,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x384e(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x29,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4e10(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x23,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4de4(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4dc0(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x23,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4d88(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x3d,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4d64(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x27,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4d24(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4cfc(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x3b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4cb8(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4c7c(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x2e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4c5c(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x29,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4c2c(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x3c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4c00(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x1b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x3830(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x30,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4bc0(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x2c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4b8c(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x1c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x3814(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x38,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4b5c(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4b20(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x33,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4b00(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x3f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4acc(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    (%esi),%eax
movl   $0x32,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4a8c(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0xa0224(%ebx),%eax
movl   $0x1,(%eax)
jmp    6c90 <main+0x5590>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa0220(%ebx),%eax
movl   $0x1,(%eax)
jmp    6c90 <main+0x5590>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa0208(%ebx),%eax
movl   $0x1,(%eax)
jmp    6c90 <main+0x5590>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa1238(%ebx),%eax
movl   $0x1,(%eax)
jmp    6c90 <main+0x5590>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa0200(%ebx),%eax
movl   $0x1,(%eax)
jmp    6c90 <main+0x5590>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa021c(%ebx),%eax
movl   $0x1,(%eax)
jmp    6c90 <main+0x5590>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa0210(%ebx),%eax
movl   $0x1,(%eax)
jmp    6c90 <main+0x5590>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
lea    -0x38af(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x138(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    $0x1,%ecx
jmp    6c90 <main+0x5590>
lea    0xa0208(%ebx),%eax
xor    %edx,%edx
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
lea    0xa021c(%ebx),%eax
mov    (%eax),%esi
test   %esi,%esi
je     71db <main+0x5adb>
cmp    $0x1,%edx
jne    6d01 <main+0x5601>
lea    0xa0210(%ebx),%eax
mov    (%eax),%edi
test   %edi,%edi
jne    71f3 <main+0x5af3>
lea    0xa0200(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     726f <main+0x5b6f>
lea    -0x1(%edx),%eax
cmp    $0x2,%eax
ja     6d01 <main+0x5601>
lea    0xa1238(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    725d <main+0x5b5d>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    724b <main+0x5b4b>
test   %esi,%esi
jne    724b <main+0x5b4b>
test   %edi,%edi
jne    724b <main+0x5b4b>
lea    0xa0200(%ebx),%eax
mov    (%eax),%edi
test   %edi,%edi
jne    724b <main+0x5b4b>
lea    0xa0220(%ebx),%eax
mov    (%eax),%esi
test   %esi,%esi
jne    724b <main+0x5b4b>
lea    0xa0224(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    724b <main+0x5b4b>
sub    $0x1,%edx
cmp    $0x2,%edx
ja     6d01 <main+0x5601>
test   %ecx,%ecx
jne    6d01 <main+0x5601>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0xa0220(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     6d01 <main+0x5601>
jmp    720b <main+0x5b0b>
lea    0xa0220(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    71f3 <main+0x5af3>
lea    0xa0224(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     71ff <main+0x5aff>
jmp    71f3 <main+0x5af3>
mov    0x40(%esp),%eax
xor    %ecx,%ecx
mov    $0x1,%ebp
movl   $0x0,0x1c(%esp)
lea    -0x1(%eax),%edx
jmp    71c6 <main+0x5ac6>
nop
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xabf0,%ebx
sub    $0x20,%esp
lea    0xa01fc(%ebx),%esi
mov    (%esi),%eax
test   %eax,%eax
je     732e <main+0x5c2e>
mov    0x30(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x37f7(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    (%esi),%esi
test   %esi,%esi
je     732e <main+0x5c2e>
lea    -0x4a58(%ebx),%edi
nop
mov    0x8(%esi),%edx
mov    0xc(%esi),%ecx
mov    0x10(%esi),%eax
mov    %edx,0x14(%esp)
mov    %ecx,0x18(%esp)
mov    0x4(%esi),%edx
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    (%esi),%esi
test   %esi,%esi
jne    72f8 <main+0x5bf8>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   1df0 <main+0x6f0>
add    $0xab5d,%ebx
mov    0x20(%esp),%edi
lea    0x1(%edi),%eax
mov    %eax,(%esp)
call   1470 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     739c <main+0x5c9c>
movb   $0xaa,(%eax,%edi,1)
movl   $0x14,(%esp)
call   1470 <malloc@plt>
test   %eax,%eax
mov    %eax,%edx
je     739c <main+0x5c9c>
lea    0xa01fc(%ebx),%eax
mov    %esi,0x4(%edx)
mov    %edi,0x10(%edx)
mov    (%eax),%ecx
mov    %edx,(%eax)
mov    %ecx,(%edx)
mov    0x24(%esp),%ecx
mov    %ecx,0x8(%edx)
mov    0x28(%esp),%ecx
mov    %ecx,0xc(%edx)
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xaaed,%ebx
sub    $0x1c,%esp
sar    $0x8,%edi
lea    0xa0238(%ebx),%ebp
mov    0x0(%ebp,%edi,4),%edx
test   %edx,%edx
je     73e0 <main+0x5ce0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x37e4(%ebx),%eax
movl   $0x855,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1800,(%esp)
call   7340 <main+0x5c40>
test   %eax,%eax
mov    %eax,0x0(%ebp,%edi,4)
je     73d5 <main+0x5cd5>
mov    %eax,%edx
xor    %ecx,%ecx
jmp    7414 <main+0x5d14>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp,%edi,4),%edx
add    %ecx,%edx
add    $0x18,%ecx
movzwl 0x16(%edx),%esi
xor    %eax,%eax
mov    %ax,0x14(%edx)
movl   $0x0,0x8(%edx)
and    $0xf000,%si
cmp    $0x1800,%ecx
mov    %si,0x16(%edx)
movb   $0x0,0x17(%edx)
jne    7410 <main+0x5d10>
jmp    73d5 <main+0x5cd5>
jmp    7450 <main+0x5d50>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
lea    -0x1(%eax),%edx
cmp    $0x3fffe,%edx
ja     7468 <main+0x5d68>
jmp    73b0 <main+0x5cb0>
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
push   %ebp
xor    %edx,%edx
push   %edi
xor    %ebp,%ebp
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0xaa2b,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%esi
movzbl 0x4(%esi,%edx,1),%eax
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%eax
add    %eax,%ebp
cmp    $0x4,%edx
jne    748a <main+0x5d8a>
lea    -0x1(%ebp),%eax
cmp    $0x3fffe,%eax
jbe    7508 <main+0x5e08>
test   %ebp,%ebp
jne    74cf <main+0x5dcf>
xor    %edi,%edi
xor    %eax,%eax
movzbl (%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    74b4 <main+0x5db4>
test   %edi,%edi
je     74f2 <main+0x5df2>
lea    -0x4938(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa01f8(%ebx),%eax
addl   $0x1,(%eax)
movl   $0x0,0x2c(%esp)
mov    0x2c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x64(%esp),%eax
mov    %ebp,%edi
mov    %ebp,0xc(%esp)
shr    $0x8,%edi
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x4a24(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0238(%ebx),%eax
mov    (%eax,%edi,4),%eax
test   %eax,%eax
je     7860 <main+0x6160>
mov    %ebp,%ecx
movzbl %cl,%ebp
lea    0x0(%ebp,%ebp,2),%edx
lea    (%eax,%edx,8),%eax
mov    %eax,0x38(%esp)
mov    0x68(%esp),%eax
lea    -0x14(%eax),%ebp
test   %ebp,%ebp
jle    7857 <main+0x6157>
xor    %eax,%eax
xor    %edi,%edi
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esi,%eax,1),%ecx
mov    %edi,%edx
add    $0x4,%eax
shr    $0x1d,%edx
lea    (%ecx,%edi,8),%edi
add    %edx,%edi
cmp    %eax,%ebp
jg     7568 <main+0x5e68>
mov    0x38(%esp),%eax
movzbl 0x17(%eax),%ebp
test   $0x10,%ebp
je     7758 <main+0x6058>
mov    0xc(%eax),%eax
movl   $0x0,0x2c(%esp)
cmp    %edi,%eax
je     75cf <main+0x5ecf>
mov    %eax,0x8(%esp)
lea    -0x4a00(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x1,0x2c(%esp)
addl   $0x1,(%eax)
mov    0x38(%esp),%eax
xor    %edx,%edx
xor    %edi,%edi
mov    %edx,0x24(%esp)
mov    (%eax),%ebp
mov    0x4(%eax),%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
movzbl 0x8(%esi,%edi,1),%eax
lea    0x0(,%edi,8),%ecx
movl   $0x0,0x1c(%esp)
mov    0x1c(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     761e <main+0x5f1e>
mov    %eax,%edx
xor    %eax,%eax
add    %eax,0x20(%esp)
adc    %edx,0x24(%esp)
add    $0x1,%edi
cmp    $0x8,%edi
jne    75f0 <main+0x5ef0>
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
mov    0x3c(%esp),%ecx
xor    %edx,%ecx
mov    %eax,%edx
xor    %ebp,%edx
or     %edx,%ecx
je     76d6 <main+0x5fd6>
xor    %eax,%eax
xor    %edx,%edx
xor    %di,%di
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
nop
movzbl 0x8(%esi,%edi,1),%eax
lea    0x0(,%edi,8),%ecx
movl   $0x0,0x34(%esp)
mov    0x34(%esp),%edx
mov    %eax,0x30(%esp)
mov    0x30(%esp),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     7686 <main+0x5f86>
mov    %eax,%edx
xor    %eax,%eax
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
add    $0x1,%edi
cmp    $0x8,%edi
jne    7658 <main+0x5f58>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %ebp,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x14(%esp)
mov    %eax,0xc(%esp)
lea    -0x49c4(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,0x2c(%esp)
addl   $0x1,(%eax)
mov    0x38(%esp),%eax
xor    %ebp,%ebp
mov    0x10(%eax),%edi
xor    %eax,%eax
movzbl 0x10(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    76e1 <main+0x5fe1>
cmp    %ebp,%edi
je     7745 <main+0x6045>
xor    %ebp,%ebp
xor    %eax,%eax
movzbl 0x10(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    7701 <main+0x6001>
lea    -0x4990(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,0x2c(%esp)
addl   $0x1,(%eax)
mov    0x38(%esp),%eax
movzbl 0x17(%eax),%ebp
jmp    77fb <main+0x60fb>
lea    0x0(%esi),%esi
mov    0x6c(%esp),%eax
movl   $0x0,0x2c(%esp)
test   %eax,%eax
jne    782b <main+0x612b>
mov    0x38(%esp),%eax
xor    %edx,%edx
mov    %edx,0x1c(%esp)
mov    %edi,0xc(%eax)
xor    %eax,%eax
xor    %edi,%edi
mov    %eax,0x18(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x8(%esi,%edi,1),%eax
lea    0x0(,%edi,8),%ecx
movl   $0x0,0x24(%esp)
mov    0x24(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x20(%esp),%eax
shld   %cl,%eax,%edx
shl    %cl,%eax
test   $0x20,%cl
je     77b6 <main+0x60b6>
mov    %eax,%edx
xor    %eax,%eax
add    %eax,0x18(%esp)
adc    %edx,0x1c(%esp)
add    $0x1,%edi
cmp    $0x8,%edi
jne    7788 <main+0x6088>
mov    0x18(%esp),%eax
xor    %di,%di
mov    0x38(%esp),%ecx
mov    0x1c(%esp),%edx
mov    %eax,(%ecx)
xor    %eax,%eax
mov    %edx,0x4(%ecx)
movzbl 0x10(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    77dc <main+0x60dc>
mov    0x38(%esp),%eax
mov    %edi,0x10(%eax)
mov    %ebp,%eax
mov    0x38(%esp),%esi
shr    $0x4,%al
cmpl   $0x1,0x6c(%esp)
sbb    %edx,%edx
add    $0x2,%edx
or     %eax,%edx
movzbl 0x17(%esi),%eax
shl    $0x4,%edx
and    $0xf,%eax
or     %edx,%eax
mov    %al,0x17(%esi)
mov    0x2c(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x495c(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
movl   $0x1,0x2c(%esp)
addl   $0x1,(%eax)
mov    0x38(%esp),%eax
movzbl 0x17(%eax),%ebp
jmp    776c <main+0x606c>
xor    %edi,%edi
jmp    757d <main+0x5e7d>
xchg   %ax,%ax
mov    %ebp,%eax
call   73b0 <main+0x5cb0>
lea    0xa0238(%ebx),%eax
mov    (%eax,%edi,4),%eax
test   %eax,%eax
je     74f2 <main+0x5df2>
jmp    7540 <main+0x5e40>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%eax
call   1df0 <main+0x6f0>
add    $0xa618,%ebx
test   %eax,%eax
je     79a0 <main+0x62a0>
lea    -0x37cf(%ebx),%eax
mov    $0x40000,%esi
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0x1d8(%ebx),%eax
mov    %eax,0x24(%esp)
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %esi,0xc(%esp)
movl   $0x14,0x8(%esp)
mov    %eax,(%esp)
call   1320 <ntfs_read_sds@plt>
cmp    $0x14,%eax
mov    %eax,%edi
je     79f0 <main+0x62f0>
test   %eax,%eax
js     7ed8 <main+0x67d8>
cmpl   $0x1,0x70(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,(%esp)
sbb    %eax,%eax
add    $0x2,%eax
mov    %eax,0x8(%esp)
lea    -0x48ec(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
movl   $0x0,0x44(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x1,0x1c(%esp)
addl   $0x1,(%eax)
mov    0x70(%esp),%eax
test   %eax,%eax
jne    79b8 <main+0x62b8>
mov    0x44(%esp),%eax
movl   $0x1,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x47f4(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    $0x31,%eax
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3763(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x37be(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    78b1 <main+0x61b1>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
movl   $0x2,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x47f4(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    $0x32,%eax
jmp    7970 <main+0x6270>
lea    0x0(%esi),%esi
lea    0x1e9,%eax
mov    %eax,0x34(%esp)
lea    0x1eb,%eax
mov    %eax,0x3c(%esp)
lea    0x1ea,%eax
mov    %eax,0x38(%esp)
lea    0x1e8,%eax
movl   $0x0,0x44(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x40(%esp)
mov    %eax,0x30(%esp)
mov    0x34(%esp),%eax
mov    0x30(%esp),%ecx
movzbl (%eax,%ebx,1),%edi
mov    0x3c(%esp),%eax
shl    $0x8,%edi
movzbl (%eax,%ebx,1),%eax
shl    $0x18,%eax
add    %eax,%edi
mov    0x38(%esp),%eax
movzbl (%eax,%ebx,1),%eax
shl    $0x10,%eax
add    %edi,%eax
movzbl (%ecx,%ebx,1),%edi
add    %eax,%edi
lea    -0x1(%edi),%eax
or     $0xf,%eax
add    $0x1,%eax
cmp    $0x10014,%eax
mov    %eax,0x28(%esp)
ja     7dd0 <main+0x66d0>
lea    0x14(%esi),%eax
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1ec(%ebx),%eax
mov    %eax,0x20(%esp)
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1320 <ntfs_read_sds@plt>
mov    %eax,%ebp
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    7eb0 <main+0x67b0>
lea    -0x14(%edi),%eax
cmp    %eax,%ebp
jl     7da8 <main+0x66a8>
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    7e20 <main+0x6720>
mov    0x70(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   5c90 <main+0x4590>
test   %eax,%eax
je     7df8 <main+0x66f8>
xor    %ebp,%ebp
xor    %eax,%eax
movzbl 0x1d8(%ebx,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    7b0b <main+0x640b>
lea    0x1dd,%eax
test   %ebp,%ebp
mov    %eax,0x40(%esp)
je     7e58 <main+0x6758>
lea    0x1df,%eax
mov    %eax,0x4c(%esp)
lea    0x1de,%eax
mov    %eax,0x48(%esp)
lea    0x1dc,%ebp
addl   $0x1,0x2c(%esp)
mov    0x70(%esp),%eax
mov    %edi,0x8(%esp)
mov    0x24(%esp),%edi
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %edi,(%esp)
call   7470 <main+0x5d70>
add    %eax,0x1c(%esp)
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    7c56 <main+0x6556>
mov    %edi,%eax
add    $0x14,%eax
mov    %eax,(%esp)
call   2790 <main+0x1090>
lea    -0x3912(%ebx),%edx
movl   $0x1,(%esp)
mov    %eax,%edi
test   %edi,%edi
lea    -0x37d9(%ebx),%eax
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x3798(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   3170 <main+0x1a70>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   3010 <main+0x1910>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   30c0 <main+0x19c0>
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   43e0 <main+0x2ce0>
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   4500 <main+0x2e00>
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   4b50 <main+0x3450>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3780(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x40(%esp),%eax
movzbl 0x0(%ebp,%ebx,1),%ecx
mov    0x28(%esp),%edi
movzbl (%eax,%ebx,1),%edx
mov    0x48(%esp),%eax
add    %edi,%esi
shl    $0x8,%edx
movzbl (%eax,%ebx,1),%eax
shl    $0x10,%eax
add    %eax,%edx
mov    0x4c(%esp),%eax
movzbl (%eax,%ebx,1),%eax
shl    $0x18,%eax
add    %edx,%eax
add    %ecx,%eax
mov    0x30(%esp),%ecx
mov    %eax,0x40(%esp)
mov    0x24(%esp),%eax
add    %edi,%eax
mov    (%eax),%edx
mov    %edx,0x1d8(%ebx)
mov    0x4(%eax),%edx
mov    %edx,0x0(%ebp,%ebx,1)
mov    0x8(%eax),%edx
mov    %edx,0x1e0(%ebx)
mov    0xc(%eax),%edx
mov    %edx,0x1e4(%ebx)
mov    0x10(%eax),%eax
mov    %eax,(%ecx,%ebx,1)
mov    0x38(%esp),%eax
movzbl (%eax,%ebx,1),%edx
mov    0x3c(%esp),%eax
shl    $0x10,%edx
movzbl (%eax,%ebx,1),%eax
shl    $0x18,%eax
add    %eax,%edx
mov    0x34(%esp),%eax
movzbl (%eax,%ebx,1),%eax
shl    $0x8,%eax
add    %edx,%eax
movzbl (%ecx,%ebx,1),%edx
add    %edx,%eax
lea    -0x1(%esi),%eax
je     7d07 <main+0x6607>
mov    $0x1,%edx
mov    %eax,%ecx
sub    %esi,%edx
or     $0x3ffff,%ecx
add    %ecx,%edx
cmp    $0x13,%edx
ja     7a38 <main+0x6338>
mov    0x70(%esp),%esi
or     $0x7ffff,%eax
test   %esi,%esi
je     7e18 <main+0x6718>
lea    0x40001(%eax),%esi
lea    0xa0204(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     7d52 <main+0x6652>
cmpl   $0x1,0x70(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,(%esp)
sbb    %eax,%eax
add    $0x2,%eax
mov    %eax,0x8(%esp)
lea    -0x486c(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x24(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x14,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1320 <ntfs_read_sds@plt>
cmp    $0x14,%eax
je     7a38 <main+0x6338>
lea    0xa0204(%ebx),%esi
mov    (%esi),%edx
test   %edx,%edx
je     7da8 <main+0x66a8>
mov    %eax,0x8(%esp)
lea    -0x4840(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
or     0x44(%esp),%eax
or     0x1c(%esp),%eax
jne    7935 <main+0x6235>
movl   $0x0,0x1c(%esp)
mov    0x1c(%esp),%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x28(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x48a8(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
addl   $0x1,0x1c(%esp)
jmp    7da8 <main+0x66a8>
lea    0x0(%esi),%esi
lea    -0x481c(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,0x1c(%esp)
addl   $0x1,(%eax)
jmp    7da8 <main+0x66a8>
xchg   %ax,%ax
lea    0x1(%eax),%esi
jmp    7d1e <main+0x661e>
lea    -0x37ad(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x20(%esp),%eax
movl   $0x8,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   2300 <main+0xc00>
jmp    7ad7 <main+0x63d7>
nop
lea    0x1df,%eax
movzbl 0x1dd(%ebx),%edx
mov    %eax,0x4c(%esp)
movzbl 0x1df(%ebx),%eax
lea    0x1dc,%ebp
movzbl 0x1dc(%ebx),%ecx
shl    $0x8,%edx
shl    $0x18,%eax
add    %eax,%edx
lea    0x1de,%eax
mov    %eax,0x48(%esp)
movzbl 0x1de(%ebx),%eax
shl    $0x10,%eax
add    %edx,%eax
add    %eax,%ecx
jne    7b52 <main+0x6452>
addl   $0x1,0x44(%esp)
jmp    7b57 <main+0x6457>
lea    0x0(%esi),%esi
lea    -0x48c8(%ebx),%eax
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    7abc <main+0x63bc>
nop
lea    0x0(%esi,%eiz,1),%esi
call   15b0 <__errno_location@plt>
cmpl   $0x5f,(%eax)
jne    78ec <main+0x61ec>
cmpl   $0x1,0x70(%esp)
movl   $0x1,(%esp)
sbb    %eax,%eax
add    $0x2,%eax
mov    %eax,0x8(%esp)
lea    -0x4914(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x0,0x1c(%esp)
jmp    7992 <main+0x6292>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %edx,%edx
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x9f7b,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%esi
movzbl 0x10(%esi,%edx,1),%eax
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%eax
add    %eax,%edi
cmp    $0x4,%edx
jne    7f3a <main+0x683a>
lea    -0x1(%edi),%eax
cmp    $0x3fffe,%eax
mov    %edi,0x8(%esp)
ja     8198 <main+0x6a98>
lea    -0x374d(%ebx),%eax
mov    %edi,%ebp
mov    %eax,0x4(%esp)
shr    $0x8,%ebp
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0238(%ebx),%esi
mov    (%esi,%ebp,4),%eax
test   %eax,%eax
je     8308 <main+0x6c08>
mov    %edi,%ecx
movzbl %cl,%edi
lea    (%edi,%edi,2),%edx
lea    (%eax,%edx,8),%eax
mov    %eax,%edi
mov    %eax,0x3c(%esp)
movzbl 0x17(%eax),%eax
mov    %eax,%ecx
and    $0xf,%eax
shr    $0x4,%cl
mov    %ecx,%edx
or     $0x4,%edx
shl    $0x4,%edx
or     %edx,%eax
and    $0x3,%ecx
mov    %al,0x17(%edi)
je     81c8 <main+0x6ac8>
mov    0x60(%esp),%edi
xor    %edx,%edx
xor    %eax,%eax
movzbl 0x14(%edi,%eax,1),%esi
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%esi
add    %esi,%edx
cmp    $0x4,%eax
jne    7fcb <main+0x68cb>
mov    0x3c(%esp),%eax
mov    0xc(%eax),%edi
cmp    %edx,%edi
je     8035 <main+0x6935>
mov    0x60(%esp),%ebp
xor    %esi,%esi
xor    %eax,%eax
movzbl 0x14(%ebp,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    7ff6 <main+0x68f6>
lea    -0x4f14(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
xor    %eax,%eax
xor    %edx,%edx
xor    %ebp,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%ecx
movl   $0x0,0x24(%esp)
movzbl 0x1c(%ecx,%ebp,1),%edi
lea    0x0(,%ebp,8),%ecx
mov    %edi,0x20(%esp)
mov    0x24(%esp),%edi
mov    0x20(%esp),%esi
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     8072 <main+0x6972>
mov    %esi,%edi
xor    %esi,%esi
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    8040 <main+0x6940>
mov    0x3c(%esp),%ecx
mov    (%ecx),%esi
mov    0x4(%ecx),%ecx
xor    %esi,%eax
xor    %ecx,%edx
or     %eax,%edx
mov    %esi,0x20(%esp)
mov    %ecx,0x30(%esp)
je     8115 <main+0x6a15>
xor    %eax,%eax
xor    %edx,%edx
xor    %bp,%bp
xchg   %ax,%ax
mov    0x60(%esp),%ecx
movl   $0x0,0x2c(%esp)
mov    0x2c(%esp),%edi
movzbl 0x1c(%ecx,%ebp,1),%ecx
mov    %ecx,0x28(%esp)
mov    0x28(%esp),%esi
lea    0x0(,%ebp,8),%ecx
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     80d2 <main+0x69d2>
mov    %esi,%edi
xor    %esi,%esi
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    80a0 <main+0x69a0>
mov    0x20(%esp),%edi
mov    %eax,0x8(%esp)
lea    -0x47c8(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %edi,0x10(%esp)
mov    0x30(%esp),%edi
movl   $0x1,(%esp)
mov    %edi,0x14(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
mov    0x60(%esp),%edi
xor    %esi,%esi
xor    %eax,%eax
movzbl 0x24(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    811d <main+0x6a1d>
mov    0x3c(%esp),%eax
mov    0x10(%eax),%edi
cmp    %esi,%edi
je     81b7 <main+0x6ab7>
mov    0x60(%esp),%ebp
xor    %esi,%esi
xor    %eax,%eax
movzbl 0x24(%ebp,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    8148 <main+0x6a48>
lea    -0x47a0(%ebx),%eax
xor    %ebp,%ebp
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x4c,%esp
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4938(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa01f8(%ebx),%eax
addl   $0x1,(%eax)
xor    %ebp,%ebp
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x477c(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
mov    0x60(%esp),%edi
addl   $0x1,(%eax)
xor    %eax,%eax
movzbl 0x14(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    81e7 <main+0x6ae7>
mov    0x3c(%esp),%edx
xor    %ebp,%ebp
xor    %edi,%edi
mov    %esi,0x20(%esp)
mov    %edi,%eax
mov    %esi,0xc(%edx)
xor    %esi,%esi
mov    %ebp,%edx
mov    %esi,%ebp
xchg   %ax,%ax
mov    0x60(%esp),%edi
lea    0x0(,%ebp,8),%ecx
movl   $0x0,0x34(%esp)
movzbl 0x1c(%edi,%ebp,1),%edi
mov    %edi,0x30(%esp)
mov    0x34(%esp),%edi
mov    0x30(%esp),%esi
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     824a <main+0x6b4a>
mov    %esi,%edi
xor    %esi,%esi
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    8218 <main+0x6b18>
mov    %eax,%edi
mov    0x3c(%esp),%eax
xor    %esi,%esi
mov    %edi,(%eax)
mov    0x60(%esp),%edi
mov    %edx,0x4(%eax)
xor    %eax,%eax
movzbl 0x24(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    8269 <main+0x6b69>
mov    0x3c(%esp),%eax
mov    $0x1,%ebp
mov    %esi,0x10(%eax)
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     81b9 <main+0x6ab9>
mov    0x20(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3732(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x3c(%esp),%eax
mov    (%eax),%esi
mov    0x4(%eax),%edi
lea    -0x3724(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0xc(%esp)
call   15f0 <__printf_chk@plt>
mov    0x3c(%esp),%eax
mov    0x10(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3712(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    81b9 <main+0x6ab9>
mov    %edi,%eax
call   73b0 <main+0x5cb0>
mov    (%esi,%ebp,4),%eax
test   %eax,%eax
je     81b7 <main+0x6ab7>
jmp    7f90 <main+0x6890>
nop
push   %ebp
xor    %ebp,%ebp
push   %edi
xor    %edi,%edi
push   %esi
xor    %esi,%esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x9b79,%ebx
sub    $0x1c,%esp
lea    -0x3703(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
movl   $0x0,0xc(%esp)
xchg   %ax,%ax
mov    0x1b8(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   14f0 <ntfs_read_sii@plt>
test   %eax,%eax
mov    %eax,%esi
je     8380 <main+0x6c80>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   61d0 <main+0x4ad0>
test   %eax,%eax
jne    83a0 <main+0x6ca0>
add    $0x1,%ebp
jmp    8350 <main+0x6c50>
lea    0x0(%esi),%esi
call   15b0 <__errno_location@plt>
cmpl   $0x5f,(%eax)
je     83d0 <main+0x6cd0>
mov    0xc(%esp),%eax
or     %ebp,%eax
jne    83f0 <main+0x6cf0>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
xor    %edi,%edi
addl   $0x1,0xc(%esp)
call   7f20 <main+0x6820>
add    %eax,%ebp
xor    %eax,%eax
movzbl 0x10(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    83b3 <main+0x6cb3>
jmp    8350 <main+0x6c50>
lea    0x0(%esi),%esi
test   %edi,%edi
jne    838a <main+0x6c8a>
lea    -0x4758(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0xc(%esp),%eax
or     %ebp,%eax
je     8392 <main+0x6c92>
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x36f4(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    -0x36da(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %edx,%edx
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x9a5b,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%esi
movzbl 0x14(%esi,%edx,1),%eax
lea    0x0(,%edx,8),%ecx
add    $0x1,%edx
shl    %cl,%eax
add    %eax,%edi
cmp    $0x4,%edx
jne    845a <main+0x6d5a>
lea    -0x1(%edi),%eax
cmp    $0x3fffe,%eax
mov    %edi,0x8(%esp)
ja     86b8 <main+0x6fb8>
lea    -0x374d(%ebx),%eax
mov    %edi,%ebp
mov    %eax,0x4(%esp)
shr    $0x8,%ebp
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0238(%ebx),%esi
mov    (%esi,%ebp,4),%eax
test   %eax,%eax
je     8808 <main+0x7108>
mov    %edi,%ecx
movzbl %cl,%edi
lea    (%edi,%edi,2),%edx
lea    (%eax,%edx,8),%eax
mov    %eax,%edi
mov    %eax,0x3c(%esp)
movzbl 0x17(%eax),%eax
mov    %eax,%ecx
and    $0xf,%eax
shr    $0x4,%cl
mov    %ecx,%edx
or     $0x8,%edx
shl    $0x4,%edx
or     %edx,%eax
and    $0x7,%ecx
mov    %al,0x17(%edi)
je     86e8 <main+0x6fe8>
mov    0x60(%esp),%edi
xor    %edx,%edx
xor    %eax,%eax
movzbl 0x18(%edi,%eax,1),%esi
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%esi
add    %esi,%edx
cmp    $0x4,%eax
jne    84eb <main+0x6deb>
mov    0x3c(%esp),%eax
mov    0xc(%eax),%edi
cmp    %edx,%edi
je     8555 <main+0x6e55>
mov    0x60(%esp),%ebp
xor    %esi,%esi
xor    %eax,%eax
movzbl 0x18(%ebp,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    8516 <main+0x6e16>
lea    -0x4f14(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
xor    %eax,%eax
xor    %edx,%edx
xor    %ebp,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%ecx
movl   $0x0,0x24(%esp)
movzbl 0x20(%ecx,%ebp,1),%edi
lea    0x0(,%ebp,8),%ecx
mov    %edi,0x20(%esp)
mov    0x24(%esp),%edi
mov    0x20(%esp),%esi
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     8592 <main+0x6e92>
mov    %esi,%edi
xor    %esi,%esi
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    8560 <main+0x6e60>
mov    0x3c(%esp),%ecx
mov    (%ecx),%edi
mov    0x4(%ecx),%ecx
xor    %edi,%eax
xor    %ecx,%edx
or     %eax,%edx
mov    %edi,0x20(%esp)
mov    %ecx,0x30(%esp)
je     8635 <main+0x6f35>
xor    %eax,%eax
xor    %edx,%edx
xor    %bp,%bp
xchg   %ax,%ax
mov    0x60(%esp),%ecx
movl   $0x0,0x2c(%esp)
mov    0x2c(%esp),%edi
movzbl 0x20(%ecx,%ebp,1),%ecx
mov    %ecx,0x28(%esp)
mov    0x28(%esp),%esi
lea    0x0(,%ebp,8),%ecx
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     85f2 <main+0x6ef2>
mov    %esi,%edi
xor    %esi,%esi
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    85c0 <main+0x6ec0>
mov    0x20(%esp),%ecx
mov    0x30(%esp),%esi
mov    %eax,0x8(%esp)
lea    -0x47c8(%ebx),%eax
mov    %edx,0xc(%esp)
mov    %ecx,0x10(%esp)
mov    %esi,0x14(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
mov    0x60(%esp),%edi
xor    %esi,%esi
xor    %eax,%eax
movzbl 0x28(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    863d <main+0x6f3d>
mov    0x3c(%esp),%eax
mov    0x10(%eax),%edi
cmp    %esi,%edi
je     86d7 <main+0x6fd7>
mov    0x60(%esp),%ebp
xor    %esi,%esi
xor    %eax,%eax
movzbl 0x28(%ebp,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    8668 <main+0x6f68>
lea    -0x4734(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %esi,0x8(%esp)
xor    %esi,%esi
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x4c,%esp
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4938(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa01f8(%ebx),%eax
addl   $0x1,(%eax)
xor    %esi,%esi
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4714(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
mov    0x60(%esp),%edi
addl   $0x1,(%eax)
xor    %eax,%eax
movzbl 0x18(%edi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    8707 <main+0x7007>
mov    0x3c(%esp),%eax
xor    %ebp,%ebp
xor    %edi,%edi
mov    %ebp,%edx
mov    %esi,0xc(%eax)
xor    %esi,%esi
mov    %edi,%eax
mov    %esi,%ebp
lea    0x0(%esi),%esi
mov    0x60(%esp),%edi
lea    0x0(,%ebp,8),%ecx
movl   $0x0,0x34(%esp)
movzbl 0x20(%edi,%ebp,1),%edi
mov    %edi,0x30(%esp)
mov    0x34(%esp),%edi
mov    0x30(%esp),%esi
shld   %cl,%esi,%edi
shl    %cl,%esi
test   $0x20,%cl
je     876a <main+0x706a>
mov    %esi,%edi
xor    %esi,%esi
add    %esi,%eax
adc    %edi,%edx
add    $0x1,%ebp
cmp    $0x8,%ebp
jne    8738 <main+0x7038>
mov    %eax,%edi
mov    0x3c(%esp),%eax
mov    %edx,%ebp
xor    %esi,%esi
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
xor    %eax,%eax
mov    0x60(%esp),%edx
lea    0x0(,%eax,8),%ecx
movzbl 0x28(%edx,%eax,1),%edx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%esi
cmp    $0x4,%eax
jne    8787 <main+0x7087>
mov    0x3c(%esp),%eax
mov    %esi,0x10(%eax)
lea    0xa0204(%ebx),%eax
mov    $0x1,%esi
mov    (%eax),%eax
test   %eax,%eax
je     86d9 <main+0x6fd9>
lea    -0x3724(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x3c(%esp),%eax
mov    0x10(%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3712(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    86d9 <main+0x6fd9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   73b0 <main+0x5cb0>
mov    (%esi,%ebp,4),%eax
test   %eax,%eax
je     86d7 <main+0x6fd7>
jmp    84b0 <main+0x6db0>
nop
push   %ebp
xor    %ebp,%ebp
push   %edi
xor    %edi,%edi
push   %esi
xor    %esi,%esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x9679,%ebx
sub    $0x2c,%esp
lea    -0x36c7(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
xchg   %ax,%ax
mov    0x1b8(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   1550 <ntfs_read_sdh@plt>
test   %eax,%eax
mov    %eax,%esi
je     8890 <main+0x7190>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   64c0 <main+0x4dc0>
test   %eax,%eax
jne    88b0 <main+0x71b0>
addl   $0x1,0x18(%esp)
jmp    8858 <main+0x7158>
nop
lea    0x0(%esi,%eiz,1),%esi
call   15b0 <__errno_location@plt>
cmpl   $0x5f,(%eax)
je     8900 <main+0x7200>
mov    0x18(%esp),%eax
or     0x1c(%esp),%eax
jne    8920 <main+0x7220>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
xor    %ebp,%ebp
addl   $0x1,0x1c(%esp)
call   8440 <main+0x6d40>
add    %eax,0x18(%esp)
xor    %eax,%eax
movzbl 0x10(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%ebp
cmp    $0x4,%eax
jne    88c5 <main+0x71c5>
xor    %edi,%edi
xor    %al,%al
movzbl 0x14(%esi,%eax,1),%edx
lea    0x0(,%eax,8),%ecx
add    $0x1,%eax
shl    %cl,%edx
add    %edx,%edi
cmp    $0x4,%eax
jne    88e1 <main+0x71e1>
jmp    8858 <main+0x7158>
xchg   %ax,%ax
test   %edi,%edi
jne    889a <main+0x719a>
lea    -0x46e4(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x18(%esp),%eax
or     0x1c(%esp),%eax
je     88a4 <main+0x71a4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x36b8(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x18(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x369e(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x18(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x50(%esp),%edx
call   1df0 <main+0x6f0>
add    $0x9528,%ebx
mov    0x44(%esp),%esi
lea    -0x1(%edx),%eax
cmp    $0x3fffe,%eax
jbe    8ad8 <main+0x73d8>
xor    %edi,%edi
lea    0xa1238(%ebx),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     89d8 <main+0x72d8>
cmpl   $0xffffffff,0x4c(%esp)
je     89d8 <main+0x72d8>
mov    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1670 <ntfs_set_file_attributes@plt>
test   %eax,%eax
je     8b58 <main+0x7458>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ebp,%ebp
mov    0x48(%esp),%ecx
test   %ecx,%ecx
je     8b00 <main+0x7400>
test   %edi,%edi
je     8a37 <main+0x7337>
mov    %esi,(%esp)
call   14c0 <ntfs_attr_size@plt>
lea    -0x37e4(%ebx),%ecx
movl   $0xa32,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   7340 <main+0x5c40>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8a37 <main+0x7337>
mov    %esi,(%esp)
call   14c0 <ntfs_attr_size@plt>
mov    0x1c(%esp),%ecx
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0x8(%esp)
call   12f0 <memcpy@plt>
mov    0x1c(%esp),%ecx
mov    %ecx,0x8(%edi)
test   %esi,%esi
je     8b10 <main+0x7410>
mov    0x40(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0xf,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1600 <ntfs_set_file_security@plt>
test   %eax,%eax
je     8bc8 <main+0x74c8>
lea    0xa0204(%ebx),%edx
mov    $0x1,%eax
mov    (%edx),%edx
test   %edx,%edx
je     8acd <main+0x73cd>
lea    0xa1238(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8a8e <main+0x738e>
test   %ebp,%ebp
je     8c18 <main+0x7518>
lea    -0x3664(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   16e0 <fputs@plt>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0xa0238(%ebx),%ebp
mov    %edx,%edi
sar    $0x8,%edi
mov    0x0(%ebp,%edi,4),%eax
test   %eax,%eax
je     8c38 <main+0x7538>
movzbl %dl,%edx
lea    (%edx,%edx,2),%edx
lea    (%eax,%edx,8),%edi
jmp    899a <main+0x729a>
lea    0x0(%esi),%esi
test   %edi,%edi
je     8b10 <main+0x7410>
mov    0x8(%edi),%esi
jmp    8a37 <main+0x7337>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4674(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   16e0 <fputs@plt>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x46c0(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%ebp
mov    0x0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   16e0 <fputs@plt>
mov    0x4c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x368b(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x0(%ebp),%eax
mov    $0x1,%ebp
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa01f8(%ebx),%eax
addl   $0x1,(%eax)
jmp    89da <main+0x72da>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3681(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%esi
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   16e0 <fputs@plt>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
mov    (%esi),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x469c(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    8aa4 <main+0x73a4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%eax
mov    %edx,0x1c(%esp)
call   73b0 <main+0x5cb0>
mov    0x0(%ebp,%edi,4),%eax
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8998 <main+0x7298>
jmp    8aef <main+0x73ef>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x923f,%ebx
sub    $0x20ac,%esp
mov    0x20c0(%esp),%eax
movb   $0x0,0x1083(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x3c(%esp)
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x209c(%esp)
xor    %eax,%eax
lea    0xa0218(%ebx),%eax
mov    0x148(%ebx),%ebp
movl   $0xffffffff,0x50(%esp)
movl   $0x0,0x58(%esp)
movl   $0x0,(%eax)
lea    0x6a(%esp),%eax
mov    %eax,0x1c(%esp)
lea    -0x3615(%ebx),%eax
mov    %eax,0x40(%esp)
lea    -0x3602(%ebx),%eax
mov    %eax,0x44(%esp)
lea    -0x35f0(%ebx),%eax
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x4c(%esp)
movl   $0x0,0x30(%esp)
mov    %eax,0x48(%esp)
mov    $0xffffffff,%esi
xor    %eax,%eax
mov    %esi,%edi
mov    %eax,%esi
jmp    8d49 <main+0x7649>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xd,%eax
je     8d2c <main+0x762c>
mov    %al,0x6a(%esp,%esi,1)
add    $0x1,%esi
cmp    $0xa,%eax
je     93cc <main+0x7ccc>
cmp    $0x1017,%esi
jg     90a0 <main+0x79a0>
movl   $0x0,0x24(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   13c0 <_IO_getc@plt>
mov    %edi,%ecx
shr    $0x1f,%ecx
test   %cl,%cl
je     8d64 <main+0x7664>
cmp    $0x20,%eax
cmovne %esi,%edi
cmp    $0xffffffff,%eax
jne    8d20 <main+0x7620>
mov    %esi,0x28(%esp)
mov    %edi,%esi
mov    %eax,%edi
movl   $0x1,0x24(%esp)
mov    0x28(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   4d90 <main+0x3690>
test   %eax,%eax
mov    %eax,%ecx
jne    9107 <main+0x7a07>
mov    0x38(%esp),%eax
movb   $0x1,0x2f(%esp)
test   %eax,%eax
sete   0x18(%esp)
mov    0x30(%esp),%eax
test   %eax,%eax
jne    9201 <main+0x7b01>
test   %ecx,%ecx
setne  %al
cmpb   $0x0,0x18(%esp)
je     902d <main+0x792d>
test   %al,%al
je     903f <main+0x793f>
movl   $0x0,0x30(%esp)
add    $0x8,%esi
cmp    0x28(%esp),%esi
jge    8e19 <main+0x7719>
mov    %edi,0x18(%esp)
mov    %esi,%edi
mov    0x30(%esp),%esi
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
add    %edi,%eax
add    $0x9,%edi
mov    %eax,(%esp)
call   4d20 <main+0x3620>
mov    %eax,0x801f8(%esi,%ebx,1)
add    $0x4,%esi
cmp    0x28(%esp),%edi
jl     8df0 <main+0x76f0>
mov    0x18(%esp),%edi
mov    %esi,0x30(%esp)
lea    0xa0204(%ebx),%eax
mov    (%eax),%esi
test   %esi,%esi
je     8e38 <main+0x7738>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
jne    9056 <main+0x7956>
lea    0x0(%esi,%eiz,1),%esi
mov    0x148(%ebx),%esi
mov    0x24(%esp),%eax
lea    0x0(%esi),%esi
test   %eax,%eax
jne    8e92 <main+0x7792>
cmp    $0xa,%edi
je     8e92 <main+0x7792>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   13c0 <_IO_getc@plt>
mov    %eax,%edi
mov    $0x1,%eax
cmp    $0xffffffff,%edi
je     8e48 <main+0x7748>
cmpb   $0x0,0x2f(%esp)
jne    8e7e <main+0x777e>
lea    0xa0204(%ebx),%edx
xor    %al,%al
mov    (%edx),%edx
test   %edx,%edx
je     8e48 <main+0x7748>
mov    (%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   13e0 <_IO_putc@plt>
xor    %eax,%eax
test   %eax,%eax
je     8e4c <main+0x774c>
mov    %eax,0x24(%esp)
mov    0x28(%esp),%eax
test   %eax,%eax
movb   $0x0,0x6a(%esp,%eax,1)
je     8ed9 <main+0x77d9>
mov    0x28(%esp),%eax
sub    $0x1,%eax
movzbl 0x6a(%esp,%eax,1),%edx
cmp    $0xd,%dl
jne    93a2 <main+0x7ca2>
add    0x1c(%esp),%eax
jmp    8ed0 <main+0x77d0>
xchg   %ax,%ax
movzbl -0x1(%eax),%edx
sub    $0x1,%eax
cmp    $0xd,%dl
jne    90b5 <main+0x79b5>
cmp    0x1c(%esp),%eax
movb   $0x0,(%eax)
jne    8ec0 <main+0x77c0>
mov    0x1c(%esp),%esi
mov    $0x12,%ecx
mov    0x40(%esp),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     9172 <main+0x7a72>
mov    0x1c(%esp),%esi
mov    $0x11,%ecx
mov    0x44(%esp),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     915d <main+0x7a5d>
mov    0x1c(%esp),%esi
mov    $0x13,%ecx
mov    0x48(%esp),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     9148 <main+0x7a48>
mov    0x24(%esp),%edi
test   %edi,%edi
jne    8f50 <main+0x7850>
mov    0x1c(%esp),%esi
mov    $0x5,%ecx
lea    -0x35dc(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8f50 <main+0x7850>
mov    0x1c(%esp),%esi
mov    $0xa,%ecx
lea    -0x35d6(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8d0f <main+0x760f>
lea    0x0(%esi),%esi
mov    0x34(%esp),%esi
test   %esi,%esi
jne    9187 <main+0x7a87>
cmpb   $0x0,0x1083(%esp)
je     8fbe <main+0x78be>
movzwl 0x801fa(%ebx),%eax
test   $0x4,%ah
je     8f7c <main+0x787c>
or     $0x1,%ah
mov    %ax,0x801fa(%ebx)
mov    0x4c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x801f8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x1083(%esp),%eax
mov    %eax,(%esp)
call   8970 <main+0x7270>
test   %eax,%eax
jne    91f7 <main+0x7af7>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
mov    0x24(%esp),%edx
test   %edx,%edx
jne    90c8 <main+0x79c8>
mov    0x1c(%esp),%esi
mov    $0x5,%ecx
lea    -0x35dc(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
movl   $0x1019,0x8(%esp)
seta   %dl
setb   %al
cmp    %al,%dl
jne    91ee <main+0x7aee>
lea    0x6f(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x1083(%esp),%eax
mov    %eax,(%esp)
call   15e0 <__strcpy_chk@plt>
movl   $0x0,0x3c(%esp)
movl   $0xffffffff,0x50(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x4c(%esp)
jmp    8d0f <main+0x760f>
test   %al,%al
je     903f <main+0x793f>
mov    0x38(%esp),%eax
cmp    %eax,0x30(%esp)
je     8dd7 <main+0x76d7>
cmpb   $0x0,0x2f(%esp)
je     8e19 <main+0x7719>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
je     8e38 <main+0x7738>
lea    -0x3618(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%eax
mov    %eax,%esi
add    0x28(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x0(%esi),%esi
movsbl (%esi),%edi
add    $0x1,%esi
mov    0x0(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   13e0 <_IO_putc@plt>
cmp    0x18(%esp),%esi
jne    9080 <main+0x7980>
jmp    8e38 <main+0x7738>
mov    %esi,0x28(%esp)
mov    %edi,%esi
mov    %eax,%edi
movl   $0x0,0x24(%esp)
jmp    8d79 <main+0x7679>
cmp    $0xa,%dl
je     8ed0 <main+0x77d0>
jmp    8ed9 <main+0x77d9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x35cb(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
xor    %eax,%eax
mov    0x209c(%esp),%edx
xor    %gs:0x14,%edx
jne    93d9 <main+0x7cd9>
add    $0x20ac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
add    %esi,%eax
mov    %eax,(%esp)
call   4cc0 <main+0x35c0>
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,0x38(%esp)
sete   0x2f(%esp)
je     93de <main+0x7cde>
mov    0x38(%esp),%eax
cmp    %eax,0x30(%esp)
jne    8e19 <main+0x7719>
jmp    8dd7 <main+0x76d7>
lea    0x0(%esi,%eiz,1),%esi
lea    0x7d(%esp),%eax
mov    %eax,(%esp)
call   4cc0 <main+0x35c0>
mov    %eax,0x50(%esp)
jmp    8f18 <main+0x7818>
lea    0x7b(%esp),%eax
mov    %eax,(%esp)
call   4cc0 <main+0x35c0>
mov    %eax,0x4c(%esp)
jmp    8f03 <main+0x7803>
lea    0x7c(%esp),%eax
mov    %eax,(%esp)
call   4cc0 <main+0x35c0>
mov    %eax,0x34(%esp)
jmp    8eee <main+0x77ee>
mov    0x3c(%esp),%ecx
test   %ecx,%ecx
je     8f5c <main+0x785c>
lea    0x801f8(%ebx),%eax
mov    %eax,(%esp)
call   14c0 <ntfs_attr_size@plt>
test   %eax,%eax
jle    91d2 <main+0x7ad2>
xor    %edx,%edx
xor    %ecx,%ecx
lea    0x0(%esi,%eiz,1),%esi
mov    0x801f8(%edx,%ebx,1),%edi
mov    %ecx,%esi
add    $0x4,%edx
shr    $0x1d,%esi
lea    (%edi,%ecx,8),%ecx
add    %esi,%ecx
cmp    %edx,%eax
jg     91b0 <main+0x7ab0>
cmp    %ecx,0x34(%esp)
je     8f5c <main+0x785c>
lea    -0x4654(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
jmp    8fbe <main+0x78be>
lea    0x74(%esp),%eax
jmp    8ff5 <main+0x78f5>
addl   $0x1,0x58(%esp)
jmp    8fbe <main+0x78be>
mov    0x30(%esp),%eax
mov    %ecx,0x5c(%esp)
mov    %eax,0x4(%esp)
lea    0x801f8(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x54(%esp)
call   1460 <ntfs_valid_descr@plt>
mov    0x5c(%esp),%ecx
test   %eax,%eax
je     8db7 <main+0x76b7>
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    93b0 <main+0x7cb0>
mov    0x54(%esp),%eax
mov    %ecx,0x3c(%esp)
mov    %eax,(%esp)
call   14c0 <ntfs_attr_size@plt>
mov    0x3c(%esp),%ecx
test   %eax,%eax
mov    %eax,0x30(%esp)
jle    93c5 <main+0x7cc5>
mov    %edi,0x3c(%esp)
xor    %edx,%edx
xor    %eax,%eax
mov    %esi,%edi
mov    %ecx,0x5c(%esp)
mov    0x801f8(%edx,%ebx,1),%ecx
mov    %eax,%esi
add    $0x4,%edx
shr    $0x1d,%esi
lea    (%ecx,%eax,8),%eax
add    %esi,%eax
cmp    0x30(%esp),%edx
jl     9268 <main+0x7b68>
mov    %edi,%esi
mov    0x5c(%esp),%ecx
mov    0x3c(%esp),%edi
mov    %eax,0x8(%esp)
lea    -0x364b(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x5c(%esp)
call   15f0 <__printf_chk@plt>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   2790 <main+0x1090>
movl   $0x1,(%esp)
mov    %eax,%edx
test   %edx,%edx
mov    %edx,0x30(%esp)
lea    -0x37d9(%ebx),%eax
lea    -0x3912(%ebx),%edx
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x3631(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x54(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   3170 <main+0x1a70>
mov    0x54(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   3010 <main+0x1910>
mov    0x54(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   30c0 <main+0x19c0>
mov    0x30(%esp),%edx
mov    0x54(%esp),%eax
movl   $0x4,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   43e0 <main+0x2ce0>
mov    0x30(%esp),%edx
mov    0x54(%esp),%eax
movl   $0x4,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   4500 <main+0x2e00>
mov    0x30(%esp),%edx
mov    0x54(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   4b50 <main+0x3450>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3780(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x5c(%esp),%ecx
movl   $0x1,0x3c(%esp)
movl   $0x0,0x30(%esp)
jmp    8db7 <main+0x76b7>
cmp    $0xa,%dl
je     8eb8 <main+0x77b8>
jmp    8ed9 <main+0x77d9>
movl   $0x1,0x3c(%esp)
movl   $0x0,0x30(%esp)
jmp    8db7 <main+0x76b7>
xor    %eax,%eax
jmp    928c <main+0x7b8c>
mov    %esi,0x28(%esp)
mov    %edi,%esi
mov    %eax,%edi
jmp    8d79 <main+0x7679>
call   c810 <main+0xb110>
movzbl 0x2f(%esp),%eax
movb   $0x0,0x2f(%esp)
mov    %al,0x18(%esp)
jmp    8dab <main+0x76ab>
jmp    9400 <main+0x7d00>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x8aa1,%ebx
sub    $0x14,%esp
call   13d0 <getuid@plt>
test   %eax,%eax
jne    9460 <main+0x7d60>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   1f80 <main+0x880>
test   %eax,%eax
je     9498 <main+0x7d98>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8c60 <main+0x7560>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   20c0 <main+0x9c0>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x138(%ebx),%eax
mov    $0x1,%esi
mov    (%eax),%eax
movl   $0x21,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4624(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
mov    0x138(%ebx),%esi
lea    -0x3a56(%ebx),%edx
mov    0x20(%esp),%ecx
mov    (%esi),%eax
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    (%esi),%eax
mov    $0x1,%esi
mov    %eax,(%esp)
call   2730 <main+0x1030>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x89bf,%ebx
sub    $0x4c,%esp
lea    0xa0204(%ebx),%eax
mov    (%eax),%esi
test   %esi,%esi
jne    96e0 <main+0x7fe0>
lea    0xa0200(%ebx),%ebp
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
jne    96e0 <main+0x7fe0>
lea    0x3c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x401f8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x60(%esp),%eax
movl   $0x10000,0x10(%esp)
movl   $0x1,0x8(%esp)
movl   $0x0,0x3c(%esp)
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1640 <ntfs_get_file_security@plt>
mov    %eax,%esi
mov    0x60(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1280 <ntfs_get_file_attributes@plt>
cmp    $0xffffffff,%eax
mov    %eax,%edi
je     9d08 <main+0x8608>
cmp    $0x3ffff,%esi
ja     9738 <main+0x8038>
test   %esi,%esi
je     9b60 <main+0x8460>
lea    0xa0210(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     9720 <main+0x8020>
lea    0xa0238(%ebx),%edx
mov    %esi,%ecx
sar    $0x8,%ecx
mov    (%edx,%ecx,4),%edx
test   %edx,%edx
je     9738 <main+0x8038>
mov    %esi,%ecx
movzbl %cl,%ecx
lea    (%ecx,%ecx,2),%ecx
lea    (%edx,%ecx,8),%edx
movzwl 0x14(%edx),%ecx
test   %cx,%cx
je     9738 <main+0x8038>
lea    0xa0200(%ebx),%ebp
add    $0x1,%ecx
mov    %cx,0x14(%edx)
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
jne    95f4 <main+0x7ef4>
test   %eax,%eax
je     9d78 <main+0x8678>
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     9e00 <main+0x8700>
movzwl 0x16(%edx),%eax
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %edx,0x1c(%esp)
and    $0xfff,%eax
mov    %eax,0xc(%esp)
lea    -0x4550(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
cmp    $0xffffffff,%edi
mov    0x1c(%esp),%edx
je     9646 <main+0x7f46>
lea    -0x3509(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%edx
lea    0xa021c(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     9d40 <main+0x8640>
lea    0xa0204(%ebx),%eax
cmpl   $0x0,(%eax)
je     96d8 <main+0x7fd8>
mov    0x8(%edx),%eax
mov    %edx,0x1c(%esp)
test   %eax,%eax
je     96d8 <main+0x7fd8>
mov    %eax,(%esp)
call   14c0 <ntfs_attr_size@plt>
mov    0x1c(%esp),%edx
mov    0x8(%edx),%ecx
test   %eax,%eax
jle    9e79 <main+0x8779>
lea    -0x1(%eax),%esi
xor    %edx,%edx
shr    $0x2,%esi
xor    %eax,%eax
add    $0x1,%esi
rol    $0x3,%eax
add    (%ecx,%edx,4),%eax
add    $0x1,%edx
cmp    %esi,%edx
jne    9690 <main+0x7f90>
mov    0x64(%esp),%edi
lea    -0x35b0(%ebx),%edx
mov    %eax,0x10(%esp)
mov    0x60(%esp),%eax
lea    -0x35a6(%ebx),%ecx
movl   $0x1,(%esp)
test   %edi,%edi
cmove  %ecx,%edx
mov    %eax,0xc(%esp)
lea    -0x351d(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x64(%esp),%edx
lea    -0x35b0(%ebx),%eax
mov    0x60(%esp),%edi
movl   $0x1,(%esp)
test   %edx,%edx
lea    -0x35a6(%ebx),%edx
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x35a1(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    9513 <main+0x7e13>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa0200(%ebx),%ebp
mov    0x0(%ebp),%ebp
test   %ebp,%ebp
jne    959a <main+0x7e9a>
lea    0x0(%esi,%eiz,1),%esi
lea    0xa0204(%ebx),%eax
mov    (%eax),%edi
test   %edi,%edi
je     9990 <main+0x8290>
lea    0x1(%esi),%eax
cmp    $0x40000,%eax
ja     9b20 <main+0x8420>
cmp    $0xffffffff,%esi
je     9d28 <main+0x8628>
lea    -0x3569(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x60(%esp),%eax
lea    0x301f8(%ebx),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   4e50 <main+0x3750>
test   %eax,%eax
mov    %eax,%ecx
je     96d8 <main+0x7fd8>
lea    -0x1(%esi),%eax
cmp    $0x3fffe,%eax
mov    %eax,0x20(%esp)
jbe    9af0 <main+0x83f0>
movl   $0x0,0x1c(%esp)
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    9a10 <main+0x8310>
lea    0xa0200(%ebx),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    9a31 <main+0x8331>
mov    %ecx,0x4(%esp)
mov    %edi,(%esp)
call   1460 <ntfs_valid_descr@plt>
test   %eax,%eax
je     9acf <main+0x83cf>
mov    0x64(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   4aa0 <main+0x33a0>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     9e48 <main+0x8748>
mov    (%eax),%eax
mov    %eax,0x28(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1280 <ntfs_get_file_attributes@plt>
lea    0xa0204(%ebx),%ecx
lea    0xa0200(%ebx),%ebp
cmpl   $0x1,(%ecx)
jle    9896 <main+0x8196>
lea    0xa0200(%ebx),%ebp
mov    %eax,0x2c(%esp)
cmpl   $0x1,0x0(%ebp)
mov    %edi,(%esp)
sbb    %esi,%esi
not    %esi
and    $0x4,%esi
mov    %esi,0x4(%esp)
call   3170 <main+0x1a70>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   3010 <main+0x1910>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   30c0 <main+0x19c0>
mov    0x64(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   43e0 <main+0x2ce0>
mov    0x64(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   4500 <main+0x2e00>
mov    0x2c(%esp),%eax
cmp    $0xffffffff,%eax
je     98b5 <main+0x81b5>
mov    %eax,0x8(%esp)
lea    -0x3509(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    %edi,(%esp)
call   4c00 <main+0x3500>
mov    %edi,(%esp)
mov    %eax,0x2c(%esp)
call   4c60 <main+0x3560>
mov    0x0(%ebp),%edx
mov    0x28(%esp),%edi
test   %edx,%edx
mov    0x2c(%esp),%edx
mov    %edi,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %edx,0x8(%esp)
jne    9b40 <main+0x8440>
lea    -0x45a8(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x24(%esp),%esi
test   %esi,%esi
je     9934 <main+0x8234>
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
jne    9928 <main+0x8228>
mov    0x24(%esp),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
jne    9cf0 <main+0x85f0>
testb  $0x1a,0x10(%eax)
jne    9cf0 <main+0x85f0>
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   12c0 <free@plt>
lea    0xa0210(%ebx),%eax
mov    (%eax),%edi
test   %edi,%edi
jne    994b <main+0x824b>
mov    0x0(%ebp),%esi
test   %esi,%esi
je     96d8 <main+0x7fd8>
cmpl   $0x3fffe,0x20(%esp)
ja     96d8 <main+0x7fd8>
mov    0x1c(%esp),%edi
test   %edi,%edi
je     96d8 <main+0x7fd8>
movzwl 0x16(%edi),%eax
movzwl 0x28(%esp),%edx
addw   $0x1,0x14(%edi)
and    $0xf000,%ax
and    $0xfff,%dx
or     %edx,%eax
mov    %ax,0x16(%edi)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0xa0200(%ebx),%ebp
mov    0x0(%ebp),%ecx
test   %ecx,%ecx
jne    9748 <main+0x8048>
mov    0x64(%esp),%edx
lea    -0x35b0(%ebx),%eax
mov    0x60(%esp),%edi
movl   $0x1,(%esp)
test   %edx,%edx
lea    -0x35a6(%ebx),%edx
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x3554(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0x1(%esi),%eax
cmp    $0x40000,%eax
ja     9d58 <main+0x8658>
cmp    $0xffffffff,%esi
je     9e58 <main+0x8758>
lea    -0x352a(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    9779 <main+0x8079>
xchg   %ax,%ax
lea    0xa021c(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    9c08 <main+0x8508>
lea    0xa0200(%ebx),%ebp
mov    0x0(%ebp),%ebp
test   %ebp,%ebp
jne    9c08 <main+0x8508>
cmpl   $0x3fffe,0x20(%esp)
ja     9a54 <main+0x8354>
mov    0x1c(%esp),%esi
test   %esi,%esi
je     9a54 <main+0x8354>
mov    0x1c(%esp),%eax
testl  $0xf000ffff,0x14(%eax)
jne    97d4 <main+0x80d4>
mov    %ecx,0x4(%esp)
movl   $0x8,0x8(%esp)
mov    %edi,(%esp)
mov    %ecx,0x24(%esp)
call   2300 <main+0xc00>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
jle    9e6b <main+0x876b>
xor    %edx,%edx
xor    %eax,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x301f8(%edx,%ebx,1),%ebp
mov    %eax,%esi
add    $0x4,%edx
shr    $0x1d,%esi
lea    0x0(%ebp,%eax,8),%eax
add    %esi,%eax
cmp    %edx,%ecx
jg     9a80 <main+0x8380>
mov    %eax,0x8(%esp)
lea    -0x364a(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x24(%esp)
call   15f0 <__printf_chk@plt>
mov    0x24(%esp),%ecx
mov    %edi,(%esp)
mov    %ecx,0x4(%esp)
call   1460 <ntfs_valid_descr@plt>
test   %eax,%eax
jne    97e8 <main+0x80e8>
lea    -0x4574(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0xa0238(%ebx),%eax
mov    %esi,%ebp
sar    $0x8,%ebp
mov    (%eax,%ebp,4),%eax
test   %eax,%eax
je     9dd8 <main+0x86d8>
mov    %esi,%edx
movzbl %dl,%esi
lea    (%esi,%esi,2),%edx
lea    (%eax,%edx,8),%eax
mov    %eax,0x1c(%esp)
jmp    97b3 <main+0x80b3>
lea    0x0(%esi),%esi
lea    -0x4600(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    9779 <main+0x8079>
nop
lea    -0x45dc(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    98fe <main+0x81fe>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xa0204(%ebx),%eax
mov    (%eax),%esi
test   %esi,%esi
jne    9baf <main+0x84af>
lea    0xa0200(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
jne    9baf <main+0x84af>
mov    0x64(%esp),%edx
lea    -0x35b0(%ebx),%eax
mov    0x60(%esp),%edi
movl   $0x1,(%esp)
test   %edx,%edx
lea    -0x35a6(%ebx),%edx
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x3554(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    -0x34f2(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x3c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x451c(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
jmp    96d8 <main+0x7fd8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%esi
test   %esi,%esi
je     9a54 <main+0x8354>
lea    -0x37e4(%ebx),%eax
mov    %ecx,(%esp)
movl   $0x1479,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x24(%esp)
call   7340 <main+0x5c40>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
mov    %eax,%ebp
jle    9e72 <main+0x8772>
xor    %eax,%eax
xor    %edx,%edx
mov    %edi,0x24(%esp)
mov    0x301f8(%eax,%ebx,1),%edi
mov    %edx,%esi
add    $0x4,%eax
shr    $0x1d,%esi
lea    (%edi,%edx,8),%edx
add    %esi,%edx
cmp    %eax,%ecx
jg     9c48 <main+0x8548>
mov    0x24(%esp),%edi
mov    %ecx,0x24(%esp)
mov    0x64(%esp),%ecx
lea    -0x35b0(%ebx),%eax
lea    -0x35a6(%ebx),%esi
mov    %edx,0x10(%esp)
movl   $0x1,(%esp)
test   %ecx,%ecx
mov    0x60(%esp),%ecx
cmove  %esi,%eax
mov    %eax,0x8(%esp)
lea    -0x351d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
call   15f0 <__printf_chk@plt>
test   %ebp,%ebp
mov    0x24(%esp),%ecx
je     9cc6 <main+0x85c6>
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   12f0 <memcpy@plt>
mov    0x1c(%esp),%eax
mov    0x24(%esp),%ecx
mov    %ebp,0x8(%eax)
lea    0xa0204(%ebx),%eax
mov    (%eax),%ebp
test   %ebp,%ebp
je     97c3 <main+0x80c3>
cmpl   $0x3fffe,0x20(%esp)
jbe    9a43 <main+0x8343>
jmp    9a54 <main+0x8354>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   4690 <main+0x2f90>
jmp    9928 <main+0x8228>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x359a(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
jmp    9576 <main+0x7e76>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x357d(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    9779 <main+0x8079>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%ebp
test   %ebp,%ebp
jne    9656 <main+0x7f56>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    96d8 <main+0x7fd8>
lea    0x0(%esi),%esi
lea    -0x354e(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    9779 <main+0x8079>
nop
mov    %edx,0x1c(%esp)
mov    0x64(%esp),%edx
lea    -0x35a6(%ebx),%ecx
mov    0x60(%esp),%edi
lea    -0x35b0(%ebx),%eax
movl   $0x1,(%esp)
test   %edx,%edx
cmove  %ecx,%eax
mov    %eax,0x8(%esp)
lea    -0x3554(%ebx),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    -0x352a(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%edx
jmp    9646 <main+0x7f46>
xchg   %ax,%ax
mov    %esi,%eax
mov    %ecx,0x1c(%esp)
call   73b0 <main+0x5cb0>
lea    0xa0238(%ebx),%eax
mov    0x1c(%esp),%ecx
mov    (%eax,%ebp,4),%eax
test   %eax,%eax
je     97ab <main+0x80ab>
jmp    9b06 <main+0x8406>
lea    0x0(%esi),%esi
mov    0x64(%esp),%ecx
lea    -0x35b0(%ebx),%eax
movl   $0x1,(%esp)
mov    %edx,0x1c(%esp)
test   %ecx,%ecx
lea    -0x35a6(%ebx),%ecx
cmove  %ecx,%eax
mov    0x60(%esp),%ecx
mov    %eax,0x8(%esp)
lea    -0x35a1(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
call   15f0 <__printf_chk@plt>
mov    0x1c(%esp),%edx
jmp    95f4 <main+0x7ef4>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x28(%esp)
jmp    980a <main+0x810a>
lea    0x0(%esi),%esi
lea    -0x3534(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    9779 <main+0x8079>
xor    %eax,%eax
jmp    9a99 <main+0x8399>
xor    %edx,%edx
jmp    9c64 <main+0x8564>
xor    %eax,%eax
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    969d <main+0x7f9d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x8010,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
movl   $0x0,0xc(%esp)
mov    %esi,0x4(%esp)
lea    -0x7f78(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1360 <ntfs_read_directory@plt>
test   %eax,%eax
mov    %eax,%edi
jne    9f18 <main+0x8818>
call   15b0 <__errno_location@plt>
cmpl   $0x14,(%eax)
je     9f18 <main+0x8818>
lea    -0x34e6(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x10,%esp
pop    %ebx
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   94e0 <main+0x7de0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%eax
call   1df0 <main+0x6f0>
add    $0x7f68,%ebx
mov    0x30(%esp),%esi
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   2460 <main+0xd60>
test   %esi,%esi
je     a013 <main+0x8913>
cmpl   $0x2,0x3c(%esp)
je     a013 <main+0x8913>
test   %eax,%eax
mov    %eax,%edi
jle    a013 <main+0x8913>
cmpl   $0x2,0x38(%esp)
jg     9f8b <main+0x888b>
mov    0x34(%esp),%eax
cmpb   $0x2e,(%eax)
je     a020 <main+0x8920>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   1530 <strlen@plt>
lea    -0x37e4(%ebx),%edx
movl   $0x166c,0x8(%esp)
mov    %edx,0x4(%esp)
lea    0xa(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   7340 <main+0x5c40>
test   %eax,%eax
mov    %eax,%edi
je     a013 <main+0x8913>
mov    0x4(%esi),%eax
lea    0x4(%edi),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   1390 <stpcpy@plt>
mov    %ebp,%ecx
not    %ecx
lea    (%edi,%eax,1),%edx
cmpb   $0x2f,0x4(%ecx,%edx,1)
je     9fe2 <main+0x88e2>
mov    $0x2f,%edx
mov    %dx,(%eax)
mov    %ebp,(%esp)
call   1530 <strlen@plt>
mov    0x38(%esp),%edx
mov    0x34(%esp),%ecx
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
lea    (%edi,%eax,1),%ebp
lea    0x4(%ebp),%eax
mov    %eax,(%esp)
call   2510 <main+0xe10>
movb   $0x0,0x4(%eax,%ebp,1)
mov    (%esi),%eax
mov    %eax,(%edi)
mov    %edi,(%esi)
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpb   $0x0,0x1(%eax)
jne    9f8b <main+0x888b>
movzbl 0x2(%eax),%eax
cmp    $0x2e,%al
je     a03a <main+0x893a>
test   %al,%al
jne    9f8b <main+0x888b>
mov    0x34(%esp),%eax
cmpb   $0x0,0x3(%eax)
jne    9f8b <main+0x888b>
jmp    a013 <main+0x8913>
lea    0x0(%esi),%esi
push   %esi
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    0x10(%esp),%ecx
mov    0x14(%esp),%esi
imul   %edx,%eax
mov    %ecx,0xc(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0x8(%esp)
pop    %esi
jmp    7340 <main+0x5c40>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
call   1df0 <main+0x6f0>
add    $0x7e18,%ebx
test   %edi,%edi
je     a0f7 <main+0x89f7>
lea    0xa01fc(%ebx),%edx
mov    (%edx),%eax
test   %eax,%eax
je     a0bd <main+0x89bd>
cmp    %edi,0x4(%eax)
jne    a0b7 <main+0x89b7>
jmp    a1c4 <main+0x8ac4>
cmp    %edi,0x4(%esi)
je     a100 <main+0x8a00>
mov    %esi,%eax
mov    (%eax),%esi
test   %esi,%esi
jne    a0b0 <main+0x89b0>
mov    0x48(%esp),%eax
lea    -0x44e8(%ebx),%esi
mov    %esi,0x4(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x1,(%esp)
call   16d0 <isatty@plt>
test   %eax,%eax
je     a1cf <main+0x8acf>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    (%esi),%edx
mov    %edx,(%eax)
mov    0x10(%esi),%eax
cmpb   $0xaa,(%edi,%eax,1)
je     a154 <main+0x8a54>
mov    0x48(%esp),%ecx
lea    -0x44b8(%ebx),%ebp
mov    0xc(%esi),%edx
mov    0x8(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x14(%esp)
mov    0x44(%esp),%ecx
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x10(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x1,(%esp)
call   16d0 <isatty@plt>
test   %eax,%eax
je     a180 <main+0x8a80>
mov    0x10(%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
movl   $0xaa,0x4(%esp)
call   1590 <memset@plt>
mov    %esi,(%esp)
call   12c0 <free@plt>
mov    %edi,(%esp)
call   12c0 <free@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x138(%ebx),%eax
mov    0xc(%esi),%ecx
mov    0x8(%esi),%edx
mov    (%eax),%eax
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    0x48(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
jmp    a151 <main+0x8a51>
mov    (%eax),%ecx
mov    %eax,%esi
mov    %ecx,(%edx)
jmp    a104 <main+0x8a04>
mov    0x48(%esp),%ecx
mov    0x138(%ebx),%eax
mov    (%eax),%eax
mov    %ecx,0x10(%esp)
mov    0x44(%esp),%ecx
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   16b0 <__fprintf_chk@plt>
jmp    a0f7 <main+0x89f7>
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x7c9f,%ebx
sub    $0x1c,%esp
lea    0xa0238(%ebx),%esi
lea    -0x37e4(%ebx),%edi
lea    0x1000(%esi),%eax
mov    %eax,0xc(%esp)
mov    (%esi),%ecx
test   %ecx,%ecx
je     a26d <main+0x8b6d>
xor    %ebp,%ebp
mov    0x8(%ecx,%ebp,1),%edx
test   %edx,%edx
je     a24e <main+0x8b4e>
movl   $0x86b,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
call   a080 <main+0x8980>
mov    (%esi),%ecx
add    $0x18,%ebp
cmp    $0x1800,%ebp
jne    a230 <main+0x8b30>
movl   $0x86d,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   a080 <main+0x8980>
add    $0x4,%esi
cmp    0xc(%esp),%esi
jne    a228 <main+0x8b28>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
mov    0x50(%esp),%edi
call   1df0 <main+0x6f0>
add    $0x7c14,%ebx
test   %eax,%eax
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
je     a548 <main+0x8e48>
lea    -0x37e4(%ebx),%eax
movl   $0x902,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1000,(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,0x1c(%esp)
call   7340 <main+0x5c40>
test   %eax,%eax
mov    %eax,%esi
je     a3af <main+0x8caf>
mov    0x54(%esp),%eax
cmpb   $0x2f,(%eax)
je     a450 <main+0x8d50>
movl   $0x1000,0x4(%esp)
mov    %esi,(%esp)
call   1520 <getcwd@plt>
test   %eax,%eax
je     a450 <main+0x8d50>
mov    %esi,(%esp)
mov    $0x2f,%ebp
call   1530 <strlen@plt>
mov    0x54(%esp),%ecx
add    %esi,%eax
mov    %bp,(%eax)
add    $0x1,%eax
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   1450 <strcpy@plt>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   1630 <strrchr@plt>
test   %eax,%eax
mov    %eax,%ebp
je     a5d8 <main+0x8ed8>
mov    $0x67,%ecx
movl   $0x544e2e2f,0x0(%ebp)
movl   $0x332d5346,0x4(%ebp)
movl   $0x73552f47,0x8(%ebp)
movl   $0x614d7265,0xc(%ebp)
movl   $0x6e697070,0x10(%ebp)
mov    %cx,0x14(%ebp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   14e0 <open@plt>
test   %eax,%eax
mov    %eax,0x2c(%esp)
jle    a468 <main+0x8d68>
mov    0x1c(%esp),%eax
movl   $0x917,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   a080 <main+0x8980>
test   %ebp,%ebp
je     a510 <main+0x8e10>
mov    0x2c(%esp),%eax
test   %eax,%eax
jle    a548 <main+0x8e48>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0xff88(%ebx),%eax
mov    %eax,(%esp)
call   12d0 <ntfs_read_mapping@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   16f0 <close@plt>
test   %esi,%esi
je     a548 <main+0x8e48>
mov    %esi,(%esp)
call   1400 <ntfs_do_user_mapping@plt>
mov    %esi,(%esp)
mov    %eax,%ebp
call   12a0 <ntfs_do_group_mapping@plt>
test   %eax,%eax
je     a4a0 <main+0x8da0>
test   %ebp,%ebp
je     a4a0 <main+0x8da0>
mov    %ebp,(%edi)
mov    %eax,0x4(%edi)
xchg   %ax,%ax
jmp    a41a <main+0x8d1a>
lea    0x0(%esi),%esi
mov    %ebp,%esi
mov    (%esi),%ebp
mov    %esi,(%esp)
call   12c0 <free@plt>
test   %ebp,%ebp
jne    a418 <main+0x8d18>
mov    (%edi),%eax
test   %eax,%eax
je     a43a <main+0x8d3a>
lea    0xa020c(%ebx),%edx
movl   $0x2,(%edx)
test   %eax,%eax
sete   %al
add    $0x3c,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   1450 <strcpy@plt>
jmp    a32d <main+0x8c2d>
lea    0x0(%esi),%esi
movb   $0x0,0x0(%ebp)
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   1630 <strrchr@plt>
cmp    %esi,%eax
mov    %eax,%ebp
je     a4f8 <main+0x8df8>
test   %eax,%eax
je     a38f <main+0x8c8f>
mov    0x2c(%esp),%edx
test   %edx,%edx
jle    a347 <main+0x8c47>
jmp    a38f <main+0x8c8f>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x4434(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
movl   $0x1,(%esp)
call   16d0 <isatty@plt>
test   %eax,%eax
jne    a41a <main+0x8d1a>
mov    0x138(%ebx),%eax
mov    (%eax),%eax
movl   $0x2b,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x4404(%ebx),%eax
mov    %eax,(%esp)
call   1430 <fwrite@plt>
jmp    a41a <main+0x8d1a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
movl   $0x917,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   a080 <main+0x8980>
lea    -0x447c(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x54(%esp),%eax
cmpb   $0x2f,(%eax)
je     a535 <main+0x8e35>
lea    -0x4454(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
jmp    a3af <main+0x8caf>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x160(%ebx),%esi
mov    %esi,(%esp)
call   13b0 <ntfs_sid_size@plt>
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   1470 <malloc@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
je     a428 <main+0x8d28>
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   12f0 <memcpy@plt>
movl   $0x14,(%esp)
call   1470 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     a428 <main+0x8d28>
movl   $0x14,(%esp)
call   1470 <malloc@plt>
test   %eax,%eax
je     a428 <main+0x8d28>
mov    %ebp,0x8(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
mov    %ebp,0x8(%esi)
movl   $0x0,0x4(%esi)
movl   $0x0,(%esi)
mov    %eax,0x4(%edi)
mov    %esi,%eax
mov    %esi,(%edi)
jmp    a42e <main+0x8d2e>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
movl   $0x917,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   a080 <main+0x8980>
jmp    a510 <main+0x8e10>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
call   1df0 <main+0x6f0>
add    $0x7899,%ebx
mov    0xa0(%esp),%esi
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x3,(%esp)
mov    %esi,0x4(%esp)
call   1420 <__xstat@plt>
test   %eax,%eax
jne    a880 <main+0x9180>
mov    0x38(%esp),%eax
lea    0x201f8(%ebx),%ebp
movl   $0x1,(%esp)
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%edx
test   %edx,%edx
mov    %eax,0x14(%esp)
lea    -0x35a6(%ebx),%edx
lea    -0x35b0(%ebx),%eax
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x34ce(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   16e0 <fputs@plt>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
lea    -0x34ca(%ebx),%eax
movl   $0x10000,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1690 <getxattr@plt>
test   %eax,%eax
mov    %eax,%edi
jle    a9a8 <main+0x92a8>
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    a8f8 <main+0x91f8>
lea    0x24(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x34ba(%ebx),%eax
movl   $0x4,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   1690 <getxattr@plt>
cmp    $0x4,%eax
je     a958 <main+0x9258>
lea    -0x359a(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   1460 <ntfs_valid_descr@plt>
test   %eax,%eax
je     a8b0 <main+0x91b0>
lea    0xa0228(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   a280 <main+0x8b80>
mov    %ebp,(%esp)
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,0x18(%esp)
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
je     a8d8 <main+0x91d8>
call   4b50 <main+0x3450>
xor    %edi,%edi
mov    %eax,0x1c(%esp)
lea    -0x43d8(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    a7e4 <main+0x90e4>
lea    0xa0200(%ebx),%eax
cmpl   $0x1,(%eax)
mov    %ebp,(%esp)
sbb    %esi,%esi
not    %esi
and    $0x4,%esi
mov    %esi,0x4(%esp)
call   3170 <main+0x1a70>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   3010 <main+0x1910>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   30c0 <main+0x19c0>
mov    0x14(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   43e0 <main+0x2ce0>
mov    0x14(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   4500 <main+0x2e00>
mov    0x18(%esp),%esi
test   %esi,%esi
je     a980 <main+0x9280>
mov    %ebp,(%esp)
call   4c00 <main+0x3500>
mov    %ebp,(%esp)
mov    %eax,0x14(%esp)
call   4c60 <main+0x3560>
mov    0x1c(%esp),%edx
movl   $0x1,(%esp)
mov    %edx,0x10(%esp)
mov    0x14(%esp),%edx
mov    %eax,0xc(%esp)
lea    -0x45a8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
call   15f0 <__printf_chk@plt>
test   %edi,%edi
je     a84f <main+0x914f>
mov    0x8(%edi),%ecx
test   %ecx,%ecx
jne    a83f <main+0x913f>
testb  $0x1a,0x10(%edi)
je     a847 <main+0x9147>
mov    %edi,(%esp)
call   4690 <main+0x2f90>
mov    %edi,(%esp)
call   12c0 <free@plt>
mov    0x18(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
je     a89f <main+0x919f>
mov    %eax,0x14(%esp)
lea    0xa0228(%ebx),%eax
mov    %eax,(%esp)
call   12e0 <ntfs_free_mapping@plt>
mov    0x14(%esp),%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x3489(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    $0x1,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x34a7(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x8c,%esp
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   4aa0 <main+0x33a0>
test   %eax,%eax
mov    %eax,%edi
je     a9b8 <main+0x92b8>
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
jmp    a77d <main+0x907d>
lea    0x0(%esi),%esi
movl   $0x8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   2300 <main+0xc00>
xor    %edx,%edx
xor    %ecx,%ecx
mov    %esi,0xa0(%esp)
nop
mov    0x201f8(%edx,%ebx,1),%esi
mov    %ecx,%eax
add    $0x4,%edx
shr    $0x1d,%eax
lea    (%esi,%ecx,8),%ecx
add    %eax,%ecx
cmp    %edx,%edi
jg     a918 <main+0x9218>
lea    -0x364a(%ebx),%eax
mov    0xa0(%esp),%esi
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    a6df <main+0x8fdf>
xchg   %ax,%ax
mov    0x24(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3509(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    a721 <main+0x9021>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x43a8(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    a82e <main+0x912e>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x436c(%ebx),%eax
jmp    a8b6 <main+0x91b6>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x1c(%esp)
jmp    a77d <main+0x907d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x74cf,%ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%ebp
lea    0xa0224(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
je     aac0 <main+0x93c0>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   1420 <__xstat@plt>
test   %eax,%eax
jne    aa90 <main+0x9390>
lea    -0x34ca(%ebx),%eax
lea    0x101f8(%ebx),%esi
movl   $0x10000,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   1690 <getxattr@plt>
test   %eax,%eax
mov    %eax,%edi
jle    ab50 <main+0x9450>
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    aaf0 <main+0x93f0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   1460 <ntfs_valid_descr@plt>
test   %eax,%eax
jne    aad8 <main+0x93d8>
lea    -0x432c(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x8c,%esp
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x3489(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
add    $0x8c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   a600 <main+0x8f00>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   5440 <main+0x3d40>
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x8,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   2300 <main+0xc00>
xor    %edx,%edx
xor    %ecx,%ecx
mov    %esi,0x1c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x101f8(%edx,%ebx,1),%esi
mov    %ecx,%eax
add    $0x4,%edx
shr    $0x1d,%eax
lea    (%esi,%ecx,8),%ecx
add    %eax,%ecx
cmp    %edx,%edi
jg     ab10 <main+0x9410>
lea    -0x364a(%ebx),%eax
mov    0x1c(%esp),%esi
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
jmp    aa56 <main+0x9356>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x436c(%ebx),%eax
jmp    aa6c <main+0x936c>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x733f,%ebx
sub    $0xac,%esp
mov    0xc0(%esp),%eax
movl   $0x0,0x2c(%esp)
movl   $0x0,0x28(%esp)
mov    %eax,0x1c(%esp)
mov    0x148(%ebx),%edi
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
lea    0x4b(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x0(%esi),%esi
mov    $0xffffffff,%esi
xor    %eax,%eax
mov    %esi,%ebp
mov    %eax,%esi
jmp    abe0 <main+0x94e0>
lea    0x0(%esi),%esi
cmp    $0xd,%eax
je     abd7 <main+0x94d7>
cmp    $0xa,%eax
lea    0x1(%esi),%ecx
mov    %al,0x4b(%esp,%esi,1)
je     afa1 <main+0x98a1>
mov    %ecx,%esi
cmp    $0x4f,%esi
jg     ada8 <main+0x96a8>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   13c0 <_IO_getc@plt>
mov    %ebp,%ecx
shr    $0x1f,%ecx
test   %cl,%cl
je     abfb <main+0x94fb>
cmp    $0x20,%eax
cmovne %esi,%ebp
cmp    $0xffffffff,%eax
jne    abc0 <main+0x94c0>
mov    %esi,0x18(%esp)
mov    %ebp,%esi
mov    %eax,%ebp
movl   $0x1,0x24(%esp)
mov    0x18(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   4d90 <main+0x3690>
mov    %eax,%ecx
mov    0x2c(%esp),%eax
test   %eax,%eax
sete   0x33(%esp)
test   %ecx,%ecx
jne    ad54 <main+0x9654>
mov    0x28(%esp),%eax
test   %eax,%eax
jne    adbd <main+0x96bd>
test   %ecx,%ecx
setne  %al
je     ad80 <main+0x9680>
cmpb   $0x0,0x33(%esp)
je     ad80 <main+0x9680>
movl   $0x0,0x28(%esp)
add    $0x8,%esi
cmp    0x18(%esp),%esi
jge    ad92 <main+0x9692>
mov    %esi,%ebp
mov    0x28(%esp),%esi
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
add    %ebp,%eax
add    $0x9,%ebp
mov    %eax,(%esp)
call   4d20 <main+0x3620>
mov    %eax,0x901f8(%esi,%ebx,1)
add    $0x4,%esi
cmp    0x18(%esp),%ebp
jl     ac80 <main+0x9580>
mov    %esi,0x28(%esp)
lea    -0x3618(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x20(%esp),%edx
mov    0x18(%esp),%eax
mov    %edx,%esi
add    %edx,%eax
mov    %eax,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movsbl (%esi),%ebp
add    $0x1,%esi
mov    (%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   13e0 <_IO_putc@plt>
cmp    0x18(%esp),%esi
jne    acd0 <main+0x95d0>
mov    0x148(%ebx),%esi
mov    0x24(%esp),%eax
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
jne    ad2d <main+0x962d>
cmp    $0xa,%ebp
je     ad2d <main+0x962d>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   13c0 <_IO_getc@plt>
mov    %eax,%ebp
mov    $0x1,%eax
cmp    $0xffffffff,%ebp
je     acf8 <main+0x95f8>
mov    (%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   13e0 <_IO_putc@plt>
xor    %eax,%eax
test   %eax,%eax
je     acfc <main+0x95fc>
test   %eax,%eax
je     abb0 <main+0x94b0>
mov    0x9c(%esp),%eax
xor    %gs:0x14,%eax
jne    afb6 <main+0x98b6>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x20(%esp),%eax
mov    %ecx,0x34(%esp)
add    %esi,%eax
mov    %eax,(%esp)
call   4cc0 <main+0x35c0>
mov    0x34(%esp),%ecx
test   %eax,%eax
mov    %eax,0x2c(%esp)
sete   0x33(%esp)
je     ac3d <main+0x953d>
mov    $0x1,%eax
mov    0x2c(%esp),%edx
cmp    %edx,0x28(%esp)
jne    ad92 <main+0x9692>
test   %al,%al
jne    ac67 <main+0x9567>
mov    0x18(%esp),%eax
test   %eax,%eax
je     acea <main+0x95ea>
xchg   %ax,%ax
jmp    aca5 <main+0x95a5>
lea    0x0(%esi),%esi
mov    %esi,0x18(%esp)
mov    %ebp,%esi
mov    %eax,%ebp
movl   $0x0,0x24(%esp)
jmp    ac10 <main+0x9510>
mov    0x28(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,0x4(%esp)
lea    0x901f8(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x34(%esp)
call   1460 <ntfs_valid_descr@plt>
mov    0x38(%esp),%ecx
test   %eax,%eax
je     ac49 <main+0x9549>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   14c0 <ntfs_attr_size@plt>
mov    0x38(%esp),%ecx
test   %eax,%eax
mov    %eax,0x28(%esp)
jle    afbb <main+0x98bb>
xor    %eax,%eax
xor    %edx,%edx
mov    %esi,0x38(%esp)
mov    %ecx,0x3c(%esp)
mov    0x901f8(%eax,%ebx,1),%esi
mov    %edx,%ecx
add    $0x4,%eax
shr    $0x1d,%ecx
lea    (%esi,%edx,8),%edx
add    %ecx,%edx
cmp    0x28(%esp),%eax
jl     ae0f <main+0x970f>
mov    0x38(%esp),%esi
mov    0x3c(%esp),%ecx
lea    -0x364b(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
mov    %ecx,0x3c(%esp)
call   15f0 <__printf_chk@plt>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   2790 <main+0x1090>
movl   $0x1,(%esp)
mov    %eax,%edx
test   %edx,%edx
mov    %eax,0x38(%esp)
lea    -0x3912(%ebx),%edx
lea    -0x37d9(%ebx),%eax
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x3631(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x34(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   3170 <main+0x1a70>
mov    0x34(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   3010 <main+0x1910>
mov    0x34(%esp),%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   30c0 <main+0x19c0>
mov    0x38(%esp),%edx
mov    0x34(%esp),%eax
movl   $0x4,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   43e0 <main+0x2ce0>
mov    0x38(%esp),%edx
mov    0x34(%esp),%eax
movl   $0x4,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   4500 <main+0x2e00>
mov    0x38(%esp),%edx
mov    0x34(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   4b50 <main+0x3450>
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3780(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
lea    0xa020c(%ebx),%eax
movl   $0x0,0x28(%esp)
mov    0x3c(%esp),%ecx
mov    (%eax),%edx
test   %edx,%edx
je     ac49 <main+0x9549>
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   4aa0 <main+0x33a0>
mov    0x3c(%esp),%ecx
test   %eax,%eax
je     ac49 <main+0x9549>
mov    %eax,(%esp)
mov    %ecx,0x38(%esp)
mov    %eax,0x34(%esp)
call   4690 <main+0x2f90>
mov    0x34(%esp),%edx
lea    -0x37e4(%ebx),%eax
movl   $0x9e2,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   a080 <main+0x8980>
mov    0x38(%esp),%ecx
jmp    ac49 <main+0x9549>
mov    %ebp,%esi
mov    %eax,%ebp
mov    %ecx,0x18(%esp)
movl   $0x0,0x24(%esp)
jmp    ac10 <main+0x9510>
call   c810 <main+0xb110>
xor    %edx,%edx
jmp    ae31 <main+0x9731>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x6ecf,%ebx
sub    $0x2c,%esp
mov    0x48(%esp),%esi
movl   $0x1,(%esp)
mov    0x44(%esp),%edi
test   %esi,%esi
lea    -0x35a6(%ebx),%edx
lea    -0x35b0(%ebx),%eax
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x34ce(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   16e0 <fputs@plt>
mov    0x4(%edi),%ebp
test   %ebp,%ebp
je     b068 <main+0x9968>
movl   $0xa,(%esp)
call   15a0 <putchar@plt>
mov    0x40(%esp),%eax
lea    0x601f8(%ebx),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   4e50 <main+0x3750>
test   %eax,%eax
jne    b088 <main+0x9988>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3770(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
jmp    b040 <main+0x9940>
xchg   %ax,%ax
mov    0x48(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   4aa0 <main+0x33a0>
mov    %eax,%ebp
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    b0bb <main+0x99bb>
lea    -0x347b(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    %ebp,(%esp)
call   4690 <main+0x2f90>
test   %ebp,%ebp
je     b05a <main+0x995a>
mov    0x8(%edi),%ecx
test   %ecx,%ecx
jne    b0d0 <main+0x99d0>
testb  $0x1a,0x10(%edi)
je     b208 <main+0x9b08>
mov    %edi,(%esp)
mov    %ebp,0x4(%esp)
call   1610 <ntfs_merge_descr_posix@plt>
movl   $0x119e,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,%edi
lea    -0x37e4(%ebx),%eax
mov    %eax,0x4(%esp)
call   a080 <main+0x8980>
lea    0xa0204(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    b248 <main+0x9b48>
test   %edi,%edi
je     b05a <main+0x995a>
mov    0x601fc(%ebx),%edx
mov    %esi,(%esp)
mov    0x60200(%ebx),%ebp
add    %esi,%edx
mov    %edx,0x1c(%esp)
add    %esi,%ebp
call   1560 <ntfs_acl_owner@plt>
mov    0x1c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   1260 <ntfs_same_sid@plt>
test   %eax,%eax
je     b1f0 <main+0x9af0>
mov    0x48(%esp),%eax
mov    %ebp,0x10(%esp)
lea    -0x37e4(%ebx),%ebp
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0xa0228(%ebx),%eax
mov    %eax,(%esp)
call   1440 <ntfs_build_descr_posix@plt>
movl   $0x11b3,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,%esi
call   a080 <main+0x8980>
test   %esi,%esi
je     b05a <main+0x995a>
mov    %esi,(%esp)
call   14c0 <ntfs_attr_size@plt>
mov    %eax,%edi
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    b268 <main+0x9b68>
mov    0x40(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,(%esp)
call   53c0 <main+0x3cc0>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
movl   $0x11e1,0x8(%esp)
test   %eax,%eax
sete   %al
mov    %eax,%edi
call   a080 <main+0x8980>
mov    %edi,%eax
add    $0x2c,%esp
xor    $0x1,%eax
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x344d(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    b146 <main+0x9a46>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %ebp,%edi
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   13f0 <ntfs_merge_mode_posix@plt>
test   %eax,%eax
je     b0f8 <main+0x99f8>
lea    -0x37e4(%ebx),%eax
xor    %edi,%edi
movl   $0x119a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   a080 <main+0x8980>
jmp    b0f8 <main+0x99f8>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x345d(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    %edi,(%esp)
call   4690 <main+0x2f90>
jmp    b108 <main+0x9a08>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x342f(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
movl   $0x4,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   2300 <main+0xc00>
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    b1a6 <main+0x9aa6>
mov    %esi,(%esp)
call   14c0 <ntfs_attr_size@plt>
test   %eax,%eax
jle    b344 <main+0x9c44>
sub    $0x1,%eax
xor    %edx,%edx
shr    $0x2,%eax
xor    %ecx,%ecx
add    $0x1,%eax
xchg   %ax,%ax
rol    $0x3,%edx
add    (%esi,%ecx,4),%edx
add    $0x1,%ecx
cmp    %eax,%ecx
jne    b2b8 <main+0x9bb8>
lea    -0x3412(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   3170 <main+0x1a70>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   3010 <main+0x1910>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   30c0 <main+0x19c0>
mov    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   43e0 <main+0x2ce0>
mov    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   4500 <main+0x2e00>
jmp    b1a6 <main+0x9aa6>
xor    %edx,%edx
jmp    b2c5 <main+0x9bc5>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x6b50,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
movl   $0x0,0xc(%esp)
mov    %esi,0x4(%esp)
lea    -0x7f78(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1360 <ntfs_read_directory@plt>
test   %eax,%eax
mov    %eax,%edi
jne    b3d8 <main+0x9cd8>
call   15b0 <__errno_location@plt>
cmpl   $0x14,(%eax)
je     b3d8 <main+0x9cd8>
mov    %esi,0x8(%esp)
lea    -0x34e6(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa0218(%ebx),%eax
xor    %edx,%edx
addl   $0x1,(%eax)
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x24(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   afd0 <main+0x98d0>
mov    $0x1,%edx
test   %eax,%eax
jne    b3ce <main+0x9cce>
mov    %esi,0x8(%esp)
lea    -0x33f9(%ebx),%eax
jmp    b3a3 <main+0x9ca3>
jmp    b410 <main+0x9d10>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x6a8a,%ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edx
movl   $0x1,(%esp)
mov    0x40(%esp),%esi
test   %edx,%edx
lea    -0x35b0(%ebx),%eax
lea    -0x35a6(%ebx),%edx
cmove  %edx,%eax
mov    %eax,0x8(%esp)
lea    -0x34ce(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x501f8(%ebx),%edi
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   16e0 <fputs@plt>
mov    0x44(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x3770(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   4e50 <main+0x3750>
test   %eax,%eax
jne    b4b0 <main+0x9db0>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x501fc(%ebx),%ecx
mov    %edi,(%esp)
mov    0x50200(%ebx),%ebp
add    %edi,%ecx
mov    %ecx,0x1c(%esp)
add    %edi,%ebp
call   1560 <ntfs_acl_owner@plt>
mov    0x1c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   1260 <ntfs_same_sid@plt>
test   %eax,%eax
je     b560 <main+0x9e60>
mov    0x48(%esp),%eax
mov    %ebp,0xc(%esp)
xor    %ebp,%ebp
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   1620 <ntfs_build_descr@plt>
test   %eax,%eax
mov    %eax,%edi
je     b4a2 <main+0x9da2>
mov    %eax,(%esp)
call   14c0 <ntfs_attr_size@plt>
mov    %eax,%ebp
lea    0xa0204(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    b578 <main+0x9e78>
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
movl   $0x7,0x4(%esp)
call   53c0 <main+0x3cc0>
mov    %edi,(%esp)
movl   $0x122c,0x8(%esp)
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%ebp
lea    -0x37e4(%ebx),%eax
mov    %eax,0x4(%esp)
call   a080 <main+0x8980>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x344d(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    b4e2 <main+0x9de2>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x33e1(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   2300 <main+0xc00>
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    b51c <main+0x9e1c>
mov    %edi,(%esp)
call   14c0 <ntfs_attr_size@plt>
test   %eax,%eax
jle    b654 <main+0x9f54>
sub    $0x1,%eax
xor    %edx,%edx
shr    $0x2,%eax
xor    %ebp,%ebp
add    $0x1,%eax
xchg   %ax,%ax
rol    $0x3,%edx
add    (%edi,%ebp,4),%edx
add    $0x1,%ebp
cmp    %eax,%ebp
jne    b5c8 <main+0x9ec8>
lea    -0x3412(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   3170 <main+0x1a70>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   3010 <main+0x1910>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   30c0 <main+0x19c0>
mov    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   43e0 <main+0x2ce0>
mov    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   4500 <main+0x2e00>
jmp    b51c <main+0x9e1c>
xor    %edx,%edx
jmp    b5d5 <main+0x9ed5>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x6840,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
movl   $0x0,0xc(%esp)
mov    %esi,0x4(%esp)
lea    -0x7f78(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1b8(%ebx),%eax
mov    %eax,(%esp)
call   1360 <ntfs_read_directory@plt>
test   %eax,%eax
mov    %eax,%edi
jne    b6e8 <main+0x9fe8>
call   15b0 <__errno_location@plt>
cmpl   $0x14,(%eax)
je     b6e8 <main+0x9fe8>
lea    -0x34e6(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x10,%esp
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   b410 <main+0x9d10>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x678f,%ebx
sub    $0x2c,%esp
lea    0x18(%esp),%eax
mov    0x40(%esp),%esi
mov    %eax,0xc(%esp)
movl   $0x0,0x18(%esp)
mov    %esi,0x4(%esp)
lea    -0x7f78(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1b8(%ebx),%eax
mov    %esi,0x1c(%esp)
mov    %eax,(%esp)
call   1360 <ntfs_read_directory@plt>
test   %eax,%eax
jne    b7a8 <main+0xa0a8>
call   15b0 <__errno_location@plt>
cmpl   $0x14,(%eax)
je     b840 <main+0xa140>
lea    -0x34e6(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
movl   $0x1,0x4(%esp)
call   94e0 <main+0x7de0>
lea    0xa0204(%ebx),%eax
mov    (%eax),%esi
test   %esi,%esi
je     b7e2 <main+0xa0e2>
lea    0xa0200(%ebx),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     b888 <main+0xa188>
lea    -0x33cd(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x18(%esp),%edi
xor    %esi,%esi
lea    -0x37e4(%ebx),%ebp
test   %edi,%edi
je     b876 <main+0xa176>
xchg   %ax,%ax
lea    0x4(%edi),%eax
mov    %eax,(%esp)
call   b710 <main+0xa010>
test   %eax,%eax
mov    $0x1,%eax
cmovne %eax,%esi
mov    0x18(%esp),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
movl   $0x1500,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x18(%esp)
call   a080 <main+0x8980>
mov    0x18(%esp),%edi
test   %edi,%edi
jne    b7f8 <main+0xa0f8>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
xor    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   94e0 <main+0x7de0>
lea    0xa0204(%ebx),%eax
mov    (%eax),%edx
test   %edx,%edx
je     b876 <main+0xa176>
lea    0xa0200(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     b8a0 <main+0xa1a0>
lea    -0x33cd(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x41bb(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    b7e2 <main+0xa0e2>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x41bb(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    $0x1,%eax
jmp    b79d <main+0xa09d>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x65df,%ebx
sub    $0x2c,%esp
movl   $0x0,(%esp)
call   1340 <time@plt>
mov    %eax,0x1c(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   1380 <ctime@plt>
mov    %eax,%esi
call   13d0 <getuid@plt>
test   %eax,%eax
jne    b9a3 <main+0xa2a3>
mov    0x40(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1f80 <main+0x880>
test   %eax,%eax
je     ba12 <main+0xa312>
lea    -0x4308(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   b710 <main+0xa010>
lea    0xa0238(%ebx),%edi
xor    %ecx,%ecx
mov    %eax,%ebp
lea    0x1000(%edi),%eax
nop
mov    (%edi),%esi
test   %esi,%esi
je     b96c <main+0xa26c>
xor    %edx,%edx
cmpw   $0x1,0x14(%esi,%edx,1)
sbb    $0xffffffff,%ecx
add    $0x18,%edx
cmp    $0x1800,%edx
jne    b958 <main+0xa258>
add    $0x4,%edi
cmp    %eax,%edi
jne    b950 <main+0xa250>
lea    -0x33c9(%ebx),%eax
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   20c0 <main+0x9c0>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   13d0 <getuid@plt>
test   %eax,%eax
mov    0x138(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0xc(%esp)
jne    b9e5 <main+0xa2e5>
lea    -0x3a3c(%ebx),%eax
mov    $0x1,%ebp
movl   $0x1c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x5164(%ebx),%eax
mov    $0x1,%ebp
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x138(%ebx),%eax
lea    -0x3a56(%ebx),%edx
mov    $0x1,%ebp
mov    0x40(%esp),%edi
mov    (%eax),%eax
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x643f,%ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   13d0 <getuid@plt>
test   %eax,%eax
jne    bbb3 <main+0xa4b3>
mov    0x50(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1f80 <main+0x880>
test   %eax,%eax
je     bc2c <main+0xa52c>
lea    0xa0210(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     bc7a <main+0xa57a>
lea    -0x33b5(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    %esi,(%esp)
call   b710 <main+0xa010>
mov    %eax,0x2c(%esp)
lea    -0x339f(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
lea    0xa0238(%ebx),%edi
lea    -0x42e0(%ebx),%eax
movl   $0x0,0x24(%esp)
mov    %eax,0x28(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp,%edi,1),%eax
test   %eax,%eax
je     bb6e <main+0xa46e>
mov    %ebp,%edx
xor    %esi,%esi
shl    $0x6,%edx
mov    %edx,0x20(%esp)
jmp    bb1f <main+0xa41f>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    $0x100,%esi
je     bb6e <main+0xa46e>
mov    0x0(%ebp,%edi,1),%eax
lea    (%esi,%esi,2),%ecx
lea    (%eax,%ecx,8),%ecx
movzwl 0x14(%ecx),%eax
test   %ax,%ax
je     bb10 <main+0xa410>
movzwl 0x16(%ecx),%ecx
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,(%esp)
and    $0xfff,%ecx
add    %esi,%eax
add    $0x1,%esi
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
addl   $0x1,0x24(%esp)
cmp    $0x100,%esi
jne    bb1b <main+0xa41b>
add    $0x4,%ebp
cmp    $0x1000,%ebp
jne    baf8 <main+0xa3f8>
mov    0x24(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x8(%esp)
lea    -0x33c7(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   20c0 <main+0x9c0>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   13d0 <getuid@plt>
test   %eax,%eax
mov    0x138(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0xc(%esp)
jne    bbfa <main+0xa4fa>
lea    -0x3a3c(%ebx),%eax
movl   $0x1c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
movl   $0x1,0x2c(%esp)
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x5164(%ebx),%eax
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
movl   $0x1,0x2c(%esp)
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x138(%ebx),%eax
mov    0x50(%esp),%edx
mov    (%eax),%eax
mov    %edx,0xc(%esp)
lea    -0x3a56(%ebx),%edx
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
movl   $0x1,0x2c(%esp)
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   9e90 <main+0x8790>
mov    %eax,0x2c(%esp)
jmp    bb9b <main+0xa49b>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x6210,%ebx
sub    $0x10,%esp
call   13d0 <getuid@plt>
test   %eax,%eax
jne    bd38 <main+0xa638>
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1f80 <main+0x880>
test   %eax,%eax
je     bdb0 <main+0xa6b0>
movl   $0x0,(%esp)
mov    $0x1,%esi
call   7880 <main+0x6180>
movl   $0x1,(%esp)
mov    %eax,%edi
call   7880 <main+0x6180>
test   %eax,%eax
je     bdf8 <main+0xa6f8>
call   8320 <main+0x6c20>
mov    $0x1,%edi
test   %eax,%eax
cmovne %edi,%esi
call   8820 <main+0x7120>
test   %eax,%eax
lea    0xa0210(%ebx),%eax
cmovne %edi,%esi
mov    (%eax),%eax
test   %eax,%eax
jne    be08 <main+0xa708>
call   68f0 <main+0x51f0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   20c0 <main+0x9c0>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   13d0 <getuid@plt>
test   %eax,%eax
mov    0x138(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0xc(%esp)
jne    bd80 <main+0xa680>
lea    -0x3a3c(%ebx),%eax
mov    $0x1,%esi
movl   $0x1c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x5164(%ebx),%eax
mov    $0x1,%esi
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x138(%ebx),%eax
lea    -0x3a56(%ebx),%edx
mov    $0x1,%esi
mov    0x20(%esp),%ecx
mov    (%eax),%eax
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   16b0 <__fprintf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %eax,%eax
test   %edi,%edi
setne  %al
mov    %eax,%esi
jmp    bcf1 <main+0xa5f1>
xchg   %ax,%ax
lea    -0x3397(%ebx),%eax
mov    %eax,(%esp)
call   b710 <main+0xa010>
jmp    bd1a <main+0xa61a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x607f,%ebx
sub    $0x2c,%esp
lea    0x18(%esp),%eax
mov    0x40(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x44(%esp),%edi
movl   $0x0,0x18(%esp)
mov    %esi,0x4(%esp)
lea    -0x7f78(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x1b8(%ebx),%eax
mov    %esi,0x1c(%esp)
mov    %eax,(%esp)
call   1360 <ntfs_read_directory@plt>
test   %eax,%eax
jne    bec0 <main+0xa7c0>
call   15b0 <__errno_location@plt>
cmpl   $0x14,(%eax)
je     bf60 <main+0xa860>
mov    %esi,0x8(%esp)
lea    -0x34e6(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   15f0 <__printf_chk@plt>
mov    0x148(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   2730 <main+0x1030>
lea    0xa0218(%ebx),%eax
addl   $0x1,(%eax)
add    $0x2c,%esp
pop    %ebx
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   afd0 <main+0x98d0>
test   %eax,%eax
je     bf78 <main+0xa878>
lea    0xa0200(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
jne    bf50 <main+0xa850>
lea    -0x41bb(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    0x18(%esp),%esi
lea    -0x37e4(%ebx),%ebp
test   %esi,%esi
je     bf3d <main+0xa83d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x4(%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   be20 <main+0xa720>
mov    0x18(%esp),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
movl   $0x15ec,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x18(%esp)
call   a080 <main+0x8980>
mov    0x18(%esp),%esi
test   %esi,%esi
jne    bf08 <main+0xa808>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x33cd(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
jmp    bef6 <main+0xa7f6>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   afd0 <main+0x98d0>
test   %eax,%eax
jne    bf3d <main+0xa83d>
mov    %esi,0x8(%esp)
lea    -0x33f9(%ebx),%eax
jmp    be86 <main+0xa786>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
call   1df0 <main+0x6f0>
add    $0x5f08,%ebx
movzbl (%eax),%edx
cmp    $0x64,%dl
je     c5d8 <main+0xaed8>
lea    -0x30(%edx),%eax
cmp    $0x7,%al
seta   %al
movzbl %al,%eax
mov    %eax,%ebp
movl   $0x0,0x14(%esp)
mov    0x60(%esp),%eax
xor    %ecx,%ecx
xor    %esi,%esi
mov    $0x1,%edi
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     c000 <main+0xa900>
add    $0x1,%eax
cmp    $0x2c,%dl
movzbl (%eax),%edx
jne    bfd8 <main+0xa8d8>
cmp    $0x64,%dl
je     c398 <main+0xac98>
add    $0x1,%ebp
cmp    $0x6d,%dl
cmove  %edi,%ecx
test   %dl,%dl
jne    bfdc <main+0xa8dc>
lea    0x0(%esi),%esi
test   %ecx,%ecx
sete   0x3a(%esp)
jne    c013 <main+0xa913>
test   %ebp,%ebp
setne  %al
cmp    $0x1,%al
sbb    $0xffffffff,%ebp
mov    %esi,%eax
xor    $0x1,%eax
and    $0x1,%eax
mov    %al,0x3b(%esp)
je     c031 <main+0xa931>
mov    0x14(%esp),%ecx
test   %ecx,%ecx
setne  %al
cmp    $0x1,%al
sbbl   $0xffffffff,0x14(%esp)
mov    0x14(%esp),%esi
lea    -0x37e4(%ebx),%eax
mov    %eax,0x34(%esp)
mov    %eax,0x4(%esp)
movl   $0x1a3e,0x8(%esp)
lea    0x3(%ebp,%esi,1),%eax
shl    $0x3,%eax
mov    %eax,(%esp)
call   7340 <main+0x5c40>
test   %eax,%eax
mov    %eax,%edi
je     c6e8 <main+0xafe8>
mov    %ebp,0x4(%eax)
xor    %edx,%edx
xor    %ecx,%ecx
mov    %ebp,0xc(%eax)
mov    0x60(%esp),%eax
mov    %esi,0x8(%edi)
mov    0x60(%esp),%esi
mov    %dx,0x30(%esp)
xor    %edx,%edx
mov    %dx,0x38(%esp)
xor    %edx,%edx
movsbl (%eax),%eax
mov    %dx,0x32(%esp)
xor    %edx,%edx
add    $0x2,%esi
movl   $0x0,0x2c(%esp)
movl   $0x0,0x1c(%esp)
mov    %dx,0x1a(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x28(%esp)
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%ecx
ja     c3b8 <main+0xacb8>
mov    -0x3114(%ebx,%ecx,4),%edx
add    %ebx,%edx
jmp    *%edx
lea    0x0(%esi,%eiz,1),%esi
lea    -0x30(%eax),%edx
cmp    $0x7,%edx
jbe    c420 <main+0xad20>
xor    %ecx,%ecx
mov    %cx,0x1a(%esp)
cmp    $0x72,%eax
je     c610 <main+0xaf10>
jle    c568 <main+0xae68>
cmp    $0x77,%eax
je     c4e0 <main+0xade0>
cmp    $0x78,%eax
xchg   %ax,%ax
jne    c5c8 <main+0xaec8>
orw    $0x1,0x1a(%esp)
mov    $0x8,%ecx
jmp    c390 <main+0xac90>
xchg   %ax,%ax
cmp    $0x64,%eax
je     c650 <main+0xaf50>
lea    -0x30(%eax),%edx
cmp    $0x7,%edx
jbe    c4d0 <main+0xadd0>
movl   $0x0,0x2c(%esp)
cmp    $0x6d,%eax
je     c6d0 <main+0xafd0>
jle    c4b0 <main+0xadb0>
cmp    $0x6f,%eax
je     c6b8 <main+0xafb8>
cmp    $0x75,%eax
jne    c181 <main+0xaa81>
mov    $0x2,%eax
mov    $0x3,%ecx
mov    %ax,0x30(%esp)
jmp    c390 <main+0xac90>
xchg   %ax,%ax
cmp    $0x3a,%eax
je     c630 <main+0xaf30>
mov    $0xc,%ecx
test   %ebp,%ebp
setne  0x1a(%esp)
je     c1bd <main+0xaabd>
cmpb   $0x0,0x3a(%esp)
je     c1bd <main+0xaabd>
mov    0x28(%esp),%esi
mov    $0x10,%eax
lea    (%edi,%esi,8),%edx
mov    %ax,0x18(%edx)
movzwl 0x32(%esp),%eax
movl   $0xffffffff,0x1c(%edx)
mov    %ax,0x1a(%edx)
lea    0x1(%esi),%eax
mov    %eax,0x28(%esp)
mov    0x14(%esp),%eax
test   %eax,%eax
jne    c3d0 <main+0xacd0>
xor    %eax,%eax
xor    %edx,%edx
cmpb   $0x0,0x1a(%esp)
je     c1e6 <main+0xaae6>
lea    0x14(%edi),%esi
nop
or     0x4(%esi,%edx,8),%ax
add    $0x1,%edx
cmp    %ebp,%edx
jne    c1d8 <main+0xaad8>
mov    %ebp,%edx
lea    (%edi,%edx,8),%esi
movzwl 0x18(%esi),%edx
cmp    $0x4,%dx
je     c620 <main+0xaf20>
cmp    $0x20,%dx
je     c4f0 <main+0xadf0>
cmp    $0x1,%dx
jne    c212 <main+0xab12>
movzwl 0x1a(%esi),%edx
shl    $0x6,%edx
or     %edx,0x1c(%esp)
mov    0x1c(%esp),%esi
mov    %ax,0x10(%edi)
xor    %eax,%eax
cmp    $0xc,%ecx
movb   $0x2,0x14(%edi)
movb   $0x0,0x15(%edi)
mov    %esi,(%edi)
mov    %ax,0x16(%edi)
mov    %edi,(%esp)
je     c500 <main+0xae00>
call   1660 <ntfs_sort_posix@plt>
mov    %edi,(%esp)
call   4690 <main+0x2f90>
cmp    0x28(%esp),%ebp
jne    c505 <main+0xae05>
mov    0x14(%esp),%eax
cmp    %eax,0x20(%esp)
jne    c505 <main+0xae05>
mov    %edi,(%esp)
call   1270 <ntfs_valid_posix@plt>
test   %eax,%eax
je     c505 <main+0xae05>
lea    0xa0204(%ebx),%eax
cmpl   $0x1,(%eax)
jle    c28c <main+0xab8c>
lea    -0x4290(%ebx),%eax
mov    %eax,(%esp)
call   1480 <puts@plt>
mov    %edi,(%esp)
call   4690 <main+0x2f90>
add    $0x4c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    $0x3a,%eax
jne    c181 <main+0xaa81>
mov    $0x1,%ecx
jmp    c390 <main+0xac90>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3a,%eax
jne    c181 <main+0xaa81>
mov    $0x7,%ecx
movl   $0xffffffff,0x24(%esp)
jmp    c390 <main+0xac90>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x30(%eax),%edx
cmp    $0x9,%edx
ja     c498 <main+0xad98>
mov    0x24(%esp),%edx
lea    (%edx,%edx,4),%edx
lea    -0x30(%eax,%edx,2),%eax
mov    %eax,0x24(%esp)
jmp    c390 <main+0xac90>
lea    -0x30(%eax),%edx
cmp    $0x9,%edx
ja     c458 <main+0xad58>
mov    %edx,0x24(%esp)
mov    $0x5,%ecx
jmp    c390 <main+0xac90>
lea    0x0(%esi),%esi
test   %eax,%eax
sete   %dl
cmp    $0x2c,%eax
jne    c438 <main+0xad38>
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    c668 <main+0xaf68>
mov    0x28(%esp),%ecx
movzwl 0x1a(%esp),%eax
or     %ax,0x32(%esp)
lea    0x1(%ecx),%eax
mov    %ecx,0x3c(%esp)
mov    %eax,0x28(%esp)
mov    0x3c(%esp),%eax
test   %dl,%dl
movzwl 0x30(%esp),%ecx
lea    (%edi,%eax,8),%eax
mov    %cx,0x18(%eax)
movzwl 0x1a(%esp),%ecx
mov    %cx,0x1a(%eax)
mov    0x24(%esp),%ecx
mov    %ecx,0x1c(%eax)
je     c418 <main+0xad18>
mov    $0xb,%ecx
jmp    c186 <main+0xaa86>
lea    0x0(%esi),%esi
lea    -0x30(%eax),%edx
cmp    $0x7,%edx
ja     c410 <main+0xad10>
mov    0x1c(%esp),%edx
lea    -0x30(%eax,%edx,8),%eax
mov    %eax,0x1c(%esp)
movsbl -0x1(%esi),%eax
jmp    c3c8 <main+0xacc8>
xchg   %ax,%ax
addl   $0x1,0x14(%esp)
cmpb   $0x0,0x1(%eax)
je     bfd8 <main+0xa8d8>
cmpb   $0x6d,0x2(%eax)
cmove  %edi,%esi
jmp    bfd8 <main+0xa8d8>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0xb(%ecx),%edx
movsbl -0x1(%esi),%eax
cmp    $0x1,%edx
jbe    c186 <main+0xaa86>
add    $0x1,%esi
jmp    c0c8 <main+0xa9c8>
cmpb   $0x0,0x3b(%esp)
je     c1c9 <main+0xaac9>
mov    0x20(%esp),%esi
mov    $0x10,%eax
lea    0x0(%ebp,%esi,1),%edx
lea    (%edi,%edx,8),%edx
mov    %ax,0x18(%edx)
movzwl 0x38(%esp),%eax
movl   $0xffffffff,0x1c(%edx)
mov    %ax,0x1a(%edx)
lea    0x1(%esi),%eax
mov    %eax,0x20(%esp)
jmp    c1c9 <main+0xaac9>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     c36b <main+0xac6b>
xor    %ecx,%ecx
jmp    c390 <main+0xac90>
nop
sub    $0x30,%eax
mov    $0xa,%ecx
mov    %ax,0x1a(%esp)
jmp    c390 <main+0xac90>
lea    0x0(%esi),%esi
test   %dl,%dl
je     c181 <main+0xaa81>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     c32a <main+0xac2a>
jmp    c668 <main+0xaf68>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3a,%eax
jne    c181 <main+0xaa81>
movzwl 0x30(%esp),%eax
cmp    $0x2,%ax
je     c707 <main+0xb007>
cmp    $0x8,%ax
jne    c2b9 <main+0xabb9>
mov    $0x4,%edx
mov    $0x7,%ecx
mov    %dx,0x30(%esp)
movl   $0xffffffff,0x24(%esp)
jmp    c390 <main+0xac90>
xchg   %ax,%ax
cmp    $0x3a,%eax
jne    c181 <main+0xaa81>
mov    $0x7,%ecx
jmp    c390 <main+0xac90>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x67,%eax
jne    c181 <main+0xaa81>
mov    $0x8,%eax
mov    $0x3,%ecx
mov    %ax,0x30(%esp)
jmp    c390 <main+0xac90>
lea    0x0(%esi),%esi
mov    %edx,0x1c(%esp)
mov    $0x9,%ecx
jmp    c390 <main+0xac90>
xchg   %ax,%ax
orw    $0x2,0x1a(%esp)
mov    $0x8,%ecx
jmp    c390 <main+0xac90>
movzwl 0x1a(%esi),%edx
or     %edx,0x1c(%esp)
jmp    c212 <main+0xab12>
lea    0x0(%esi),%esi
call   4690 <main+0x2f90>
movzwl 0x10(%edi),%eax
not    %eax
test   $0x25,%al
mov    0x138(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0xc(%esp)
je     c5e8 <main+0xaee8>
lea    -0x42bc(%ebx),%eax
movl   $0x29,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
mov    0x34(%esp),%eax
mov    %edi,(%esp)
xor    %edi,%edi
movl   $0x1b1b,0x8(%esp)
mov    %eax,0x4(%esp)
call   a080 <main+0x8980>
add    $0x4c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     c571 <main+0xae71>
cmp    $0x2c,%eax
jne    c5c8 <main+0xaec8>
mov    0x2c(%esp),%edx
test   %edx,%edx
jne    c690 <main+0xaf90>
movzwl 0x1a(%esp),%ecx
or     %cx,0x32(%esp)
mov    0x28(%esp),%ecx
mov    %ecx,0x3c(%esp)
add    $0x1,%ecx
mov    %ecx,0x28(%esp)
mov    0x3c(%esp),%ecx
test   %eax,%eax
lea    (%edi,%ecx,8),%edx
movzwl 0x30(%esp),%ecx
mov    %cx,0x18(%edx)
movzwl 0x1a(%esp),%ecx
mov    %cx,0x1a(%edx)
mov    0x24(%esp),%ecx
mov    %ecx,0x1c(%edx)
jne    c418 <main+0xad18>
mov    $0xb,%ecx
jmp    c186 <main+0xaa86>
mov    $0x8,%ecx
jmp    c390 <main+0xac90>
lea    0x0(%esi),%esi
movl   $0x1,0x14(%esp)
xor    %ebp,%ebp
jmp    bfc7 <main+0xa8c7>
nop
lea    -0x3395(%ebx),%eax
movl   $0x14,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   1430 <fwrite@plt>
jmp    c53d <main+0xae3d>
nop
lea    0x0(%esi,%eiz,1),%esi
orw    $0x4,0x1a(%esp)
mov    $0x8,%ecx
jmp    c390 <main+0xac90>
movzwl 0x1a(%esi),%edx
shl    $0x3,%edx
or     %edx,0x1c(%esp)
jmp    c212 <main+0xab12>
cmpw   $0x10,0x30(%esp)
je     c644 <main+0xaf44>
cmpw   $0x20,0x30(%esp)
jne    c6fd <main+0xaffd>
mov    $0x6,%ecx
jmp    c390 <main+0xac90>
xchg   %ax,%ax
mov    $0x2,%ecx
movl   $0x1,0x2c(%esp)
jmp    c390 <main+0xac90>
lea    0x0(%esi),%esi
mov    0x20(%esp),%ecx
mov    %ecx,%eax
add    %ebp,%eax
mov    %eax,0x3c(%esp)
movzwl 0x1a(%esp),%eax
or     %ax,0x38(%esp)
lea    0x1(%ecx),%eax
mov    %eax,0x20(%esp)
jmp    c343 <main+0xac43>
lea    0x0(%esi),%esi
mov    0x20(%esp),%ecx
lea    0x0(%ebp,%ecx,1),%edx
add    $0x1,%ecx
mov    %edx,0x3c(%esp)
movzwl 0x1a(%esp),%edx
or     %dx,0x38(%esp)
mov    %ecx,0x20(%esp)
jmp    c596 <main+0xae96>
lea    0x0(%esi),%esi
mov    $0x20,%eax
mov    $0x3,%ecx
mov    %ax,0x30(%esp)
jmp    c390 <main+0xac90>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x10,%eax
mov    $0x3,%ecx
mov    %ax,0x30(%esp)
jmp    c390 <main+0xac90>
lea    0x0(%esi,%eiz,1),%esi
call   15b0 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x4c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x4,%ecx
jmp    c390 <main+0xac90>
mov    $0x1,%eax
mov    %ax,0x30(%esp)
jmp    c2b9 <main+0xabb9>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%edx
call   1df0 <main+0x6f0>
add    $0x577b,%ebx
test   %edx,%edx
je     c74b <main+0xb04b>
lea    0xa01fc(%ebx),%eax
jmp    c745 <main+0xb045>
nop
cmp    %edx,0x4(%eax)
je     c780 <main+0xb080>
mov    (%eax),%eax
test   %eax,%eax
jne    c740 <main+0xb040>
mov    0x38(%esp),%eax
mov    %edx,0x10(%esp)
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x4270(%ebx),%eax
mov    %eax,0x4(%esp)
call   15f0 <__printf_chk@plt>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x28,%esp
mov    $0x1,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   1df0 <main+0x6f0>
add    $0x570d,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x108(%ebx),%esi
call   122c <_init>
lea    -0x10c(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     c7eb <main+0xb0eb>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    -0x10c(%ebx,%edi,4),%edx
add    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *%edx
cmp    %esi,%edi
jne    c7c8 <main+0xb0c8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   1df0 <main+0x6f0>
add    $0x5692,%ebx
sub    $0x8,%esp
call   13a0 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   1df0 <main+0x6f0>
add    $0x567b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %esi
gs
jb     c8b7 <_IO_stdin_used+0x7b>
imul   $0x666f2073,0x6e(%edi),%ebp
and    %ch,0x74(%esi)
data16
jae    c87e <_IO_stdin_used+0x42>
xor    0x20(%edi),%esp
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%ebx)
arpl   %sp,0x75(%ecx)
imul   $0x6e206572,%fs:0x61(%eax,%eiz,1),%esi
6e
outsl  %ds:(%esi),(%dx)
je     c889 <_IO_stdin_used+0x4d>
arpl   %bp,0x6d(%edi)
jo     c8cf <_IO_stdin_used+0x93>
je     c8d9 <_IO_stdin_used+0x9d>
bound  %ebp,0xa(%ebp,%eiz,2)
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
popa
imul   $0x73,0x20(%ebp),%esp
jne    c8f2 <_IO_stdin_used+0xb6>
and    %ah,%gs:(%edx)
and    $0x69202273,%eax
jae    c8aa <_IO_stdin_used+0x6e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     c8ae <_IO_stdin_used+0x72>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    c900 <_IO_stdin_used+0xc4>
je     c8f9 <_IO_stdin_used+0xbd>
or     %fs:(%eax),%al
add    %ah,0x2020632a
and    %ah,(%eax)
inc    %esp
inc    %ecx
inc    %ebx
dec    %esp
and    %ch,0x6e(%ecx)
push   $0x74697265
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
imul   $0x75716572,0x20(%ebx),%esi
gs
jae    c92e <_IO_stdin_used+0xf2>
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
and    $0x2020632a,%eax
and    %ah,(%eax)
push   %ebx
inc    %ecx
inc    %ebx
dec    %esp
and    %ch,0x6e(%ecx)
push   $0x74697265
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
imul   $0x75716572,0x20(%ebx),%esi
gs
jae    c956 <_IO_stdin_used+0x11a>
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
and    $0x2020632a,%eax
and    %ah,(%eax)
inc    %esp
inc    %ecx
inc    %ebx
dec    %esp
and    %dh,0x61(%edi)
jae    c918 <_IO_stdin_used+0xdc>
imul   $0x74697265,0x68(%esi),%ebp
gs and %ah,%fs:%gs:0x75(%ecx)
je     c975 <_IO_stdin_used+0x139>
insl   (%dx),%es:(%edi)
popa
je     c973 <_IO_stdin_used+0x137>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    c91a <_IO_stdin_used+0xde>
add    %al,(%eax)
add    %al,(%eax)
and    $0x2020632a,%eax
and    %ah,(%eax)
push   %ebx
inc    %ecx
inc    %ebx
dec    %esp
and    %dh,0x61(%edi)
jae    c944 <_IO_stdin_used+0x108>
imul   $0x74697265,0x68(%esi),%ebp
gs and %ah,%fs:%gs:0x75(%ecx)
je     c9a1 <_IO_stdin_used+0x165>
insl   (%dx),%es:(%edi)
popa
je     c99f <_IO_stdin_used+0x163>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
jns    c946 <_IO_stdin_used+0x10a>
add    %al,(%eax)
add    %al,(%eax)
and    $0x2020632a,%eax
and    %ah,(%eax)
inc    %esp
inc    %ecx
inc    %ebx
dec    %esp
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     c973 <_IO_stdin_used+0x137>
bound  %esp,0x20(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x62206465,%fs:0x69(%esi),%esp
jns    c982 <_IO_stdin_used+0x146>
imul   $0x74697265,0x68(%esi),%ebp
popa
bound  %ebp,0x20(%ebp,%eiz,2)
inc    %ecx
inc    %ebx
inc    %ebp
jae    c97d <_IO_stdin_used+0x141>
add    %ah,0x2020632a
and    %ah,(%eax)
push   %ebx
inc    %ecx
inc    %ebx
dec    %esp
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     c9a7 <_IO_stdin_used+0x16b>
bound  %esp,0x20(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x62206465,%fs:0x69(%esi),%esp
jns    c9b6 <_IO_stdin_used+0x17a>
imul   $0x74697265,0x68(%esi),%ebp
popa
bound  %ebp,0x20(%ebp,%eiz,2)
inc    %ecx
inc    %ebx
inc    %ebp
jae    c9b1 <_IO_stdin_used+0x175>
add    %ah,0x2020632a
and    %ah,(%eax)
jae    ca16 <_IO_stdin_used+0x1da>
insb   (%dx),%es:(%edi)
data16
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
popa
je     ca23 <_IO_stdin_used+0x1e7>
jbe    ca21 <_IO_stdin_used+0x1e5>
and    %ah,0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     ca39 <_IO_stdin_used+0x1fd>
outsl  %ds:(%esi),(%dx)
jb     c9d2 <_IO_stdin_used+0x196>
add    %al,(%eax)
add    %al,(%eax)
and    $0x2020632a,%eax
and    %ah,(%eax)
jne    ca43 <_IO_stdin_used+0x207>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%esi)
popa
addr16 jae ca01 <_IO_stdin_used+0x1c5>
xor    %bh,0x25(%eax)
js     ca06 <_IO_stdin_used+0x1ca>
jo     ca5a <_IO_stdin_used+0x21e>
gs
jae    ca50 <_IO_stdin_used+0x214>
outsb  %ds:(%esi),(%dx)
je     c9f8 <_IO_stdin_used+0x1bc>
add    %al,(%eax)
and    $0x6f44632a,%eax
outsb  %ds:(%esi),(%dx)
daa
je     ca19 <_IO_stdin_used+0x1dd>
jo     ca6d <_IO_stdin_used+0x231>
outsl  %ds:(%esi),(%dx)
jo     ca5f <_IO_stdin_used+0x223>
addr16 popa
je     ca67 <_IO_stdin_used+0x22b>
and    %ch,0x6e(%ecx)
push   $0x74697265
jae    ca2c <_IO_stdin_used+0x1f0>
inc    %ecx
inc    %ebx
inc    %ebp
or     (%eax),%al
add    %al,(%eax)
add    %ah,0x624f632a
push   $0x20
jae    ca8d <_IO_stdin_used+0x251>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x20636361,0x20(%ebx),%esp
jb     ca91 <_IO_stdin_used+0x255>
je     ca9f <_IO_stdin_used+0x263>
and    %dh,(%eax)
js     ca55 <_IO_stdin_used+0x219>
insb   (%dx),%es:(%edi)
js     ca3d <_IO_stdin_used+0x201>
add    %ah,0x63(%ecx)
and    %ah,%gs:0x203a2064
and    $0x73252073,%eax
and    %ah,0x20646c34
jo     caaf <_IO_stdin_used+0x273>
jb     cab9 <_IO_stdin_used+0x27d>
jae    ca6e <_IO_stdin_used+0x232>
xor    %ah,0x206f3330
and    $0x3d000a73,%eax
cmp    $0x6e694c20,%eax
jne    cad8 <_IO_stdin_used+0x29c>
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     ca87 <_IO_stdin_used+0x24b>
imul   $0x66666964,0x20(%ebx),%esi
gs
jb     cad6 <_IO_stdin_used+0x29a>
outsb  %ds:(%esi),(%dx)
je     ca94 <_IO_stdin_used+0x258>
data16
jb     cae6 <_IO_stdin_used+0x2aa>
insl   (%dx),%es:(%edi)
and    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     caf3 <_IO_stdin_used+0x2b7>
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     ca87 <_IO_stdin_used+0x24b>
add    %ch,(%edx)
sub    (%eax),%ah
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
and    %ah,%fs:0x20(%ecx)
push   %eax
outsl  %ds:(%esi),(%dx)
jae    cb0a <_IO_stdin_used+0x2ce>
js     cac3 <_IO_stdin_used+0x287>
fs
gs
jae    cb0a <_IO_stdin_used+0x2ce>
jb     cb12 <_IO_stdin_used+0x2d6>
jo     cb1f <_IO_stdin_used+0x2e3>
outsl  %ds:(%esi),(%dx)
jb     caae <_IO_stdin_used+0x272>
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
and    %dh,%fs:0x65(%eax)
jb     cb34 <_IO_stdin_used+0x2f8>
imul   $0x736e6f69,0x73(%ebx),%esi
add    %al,(%eax)
and    (%eax),%esp
and    %ah,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x73(%ecx,%ebp,2)
arpl   %si,0x65(%edx)
je     cb48 <_IO_stdin_used+0x30c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
jb     cb5d <_IO_stdin_used+0x321>
and    %ah,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    cb0c <_IO_stdin_used+0x2d0>
arpl   %bp,0x6e(%edi)
je     cb63 <_IO_stdin_used+0x327>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,0x73(%ecx,%ebp,2)
je     caf9 <_IO_stdin_used+0x2bd>
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x73(%ecx,%ebp,2)
arpl   %si,0x65(%edx)
je     cb73 <_IO_stdin_used+0x337>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
popa
jb     cb88 <_IO_stdin_used+0x34c>
and    %ah,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    cb37 <_IO_stdin_used+0x2fb>
arpl   %bp,0x6e(%edi)
je     cb8e <_IO_stdin_used+0x352>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
and    %ch,0x73(%ecx,%ebp,2)
je     cb24 <_IO_stdin_used+0x2e8>
sub    (%edx),%ch
and    %al,0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     cba3 <_IO_stdin_used+0x367>
outsl  %ds:(%esi),(%dx)
jb     cb52 <_IO_stdin_used+0x316>
ja     cb95 <_IO_stdin_used+0x359>
jae    cb56 <_IO_stdin_used+0x31a>
je     cba7 <_IO_stdin_used+0x36b>
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,(%bx,%si)
and    %ah,%ds:0xa2964
add    %ch,(%edx)
sub    (%eax),%ah
inc    %esp
gs
jae    cbb2 <_IO_stdin_used+0x376>
jb     cbba <_IO_stdin_used+0x37e>
jo     cbc7 <_IO_stdin_used+0x38b>
outsl  %ds:(%esi),(%dx)
jb     cb76 <_IO_stdin_used+0x33a>
outsw  %ds:(%esi),(%dx)
jb     cb7a <_IO_stdin_used+0x33e>
and    $0x73692073,%eax
and    %ch,0x6f(%esi)
je     cb84 <_IO_stdin_used+0x348>
jbe    cbc7 <_IO_stdin_used+0x38b>
insb   (%dx),%es:(%edi)
imul   $0x202a2a00,0x0(%edx,%ecx,1),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    cbdf <_IO_stdin_used+0x3a3>
and    %ch,%fs:0x6f(%esi)
je     cb99 <_IO_stdin_used+0x35d>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x74(%bx,%di)
je     cbf6 <_IO_stdin_used+0x3ba>
imul   $0x20736574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0xa73
add    %ah,(%ebx)
and    %ch,0x2d2d2d2d
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
and    %ah,0x75(%ebx)
je     cbcf <_IO_stdin_used+0x393>
push   $0x20657265
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d2d,%eax
sub    $0x2d2d2d,%eax
and    (%eax),%esp
push   %eax
insb   (%dx),%es:(%edi)
gs
popa
jae    cc35 <_IO_stdin_used+0x3f9>
and    %dh,0x65(%edx)
jo     cc41 <_IO_stdin_used+0x405>
popa
arpl   %sp,0x20(%ebp)
and    0x73(%ebp),%dh
gs
jb     cc01 <_IO_stdin_used+0x3c5>
and    %ah,0x6e(%ecx)
and    %ah,%fs:(%edx)
addr16 jb cc57 <_IO_stdin_used+0x41b>
jne    cc5a <_IO_stdin_used+0x41e>
and    (%eax),%ah
popa
bound  %ebp,0x76(%edi)
and    %ah,%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x69(%ebp)
add    %al,%fs:(%eax)
add    %al,(%eax)
and    (%eax),%esp
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x69(%edi)
and    %ch,%fs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %cl,0x6e(%ecx,%ebp,2)
jne    cc8e <_IO_stdin_used+0x452>
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     cc3d <_IO_stdin_used+0x401>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    cc96 <_IO_stdin_used+0x45a>
and    %ch,0x66(%edi)
and    %al,(%eax)
add    %ah,(%ebx)
and    %ch,0x6e(%ecx)
jae    cc97 <_IO_stdin_used+0x45b>
jb     cca8 <_IO_stdin_used+0x46c>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x6f(%ebp)
imul   $0x6c206465,%fs:0x69(%esi),%esp
imul   $0x6e692073,0x65(%esi),%ebp
je     ccbb <_IO_stdin_used+0x47f>
and    %ch,(%esi)
dec    %esi
push   %esp
inc    %esi
push   %ebx
sub    $0x552f4733,%eax
jae    ccbe <_IO_stdin_used+0x482>
jb     ccc8 <_IO_stdin_used+0x48c>
popa
jo     ccce <_IO_stdin_used+0x492>
imul   $0x6977202c,0x67(%esi),%ebp
je     cccf <_IO_stdin_used+0x493>
and    %ch,(%esi)
dec    %esi
push   %esp
inc    %esi
push   %ebx
sub    $0x4733,%eax
add    %al,(%eax)
and    (%eax),%esp
dec    %ecx
outsb  %ds:(%esi),(%dx)
jae    ccdf <_IO_stdin_used+0x4a3>
jb     ccf0 <_IO_stdin_used+0x4b4>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x62(%ecx)
outsl  %ds:(%esi),(%dx)
jbe    cceb <_IO_stdin_used+0x4af>
and    %ch,0x6e(%ecx,%ebp,2)
gs
jae    ccad <_IO_stdin_used+0x471>
imul   $0x4e2e206f,0x74(%esi),%ebp
push   %esp
inc    %esi
push   %ebx
sub    $0x552f4733,%eax
jae    cd03 <_IO_stdin_used+0x4c7>
jb     cd0d <_IO_stdin_used+0x4d1>
popa
jo     cd13 <_IO_stdin_used+0x4d7>
imul   $0x6977202c,0x67(%esi),%ebp
je     cd14 <_IO_stdin_used+0x4d8>
and    %ch,(%esi)
dec    %esi
push   %esp
inc    %esi
push   %ebx
sub    $0x4733,%eax
add    %ah,(%ebx)
and    %ah,0x65(%edx)
imul   $0x68206120,0x67(%esi),%ebp
imul   $0x7573206e,0x65(%esp,%eiz,2),%esp
bound  %esp,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    ccf6 <_IO_stdin_used+0x4ba>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     cd02 <_IO_stdin_used+0x4c6>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x79(%ebx)
jae    cd6b <_IO_stdin_used+0x52f>
gs
insl   (%dx),%es:(%edi)
add    %al,%cs:(%eax)
and    %dh,0x61(%edi)
jae    cd21 <_IO_stdin_used+0x4e5>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     cd25 <_IO_stdin_used+0x4e9>
arpl   %si,0x65(%edx)
popa
je     cd70 <_IO_stdin_used+0x534>
and    %ah,%fs:0x79(%edx)
and    %ah,0x20(%ecx)
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
jne    cd8f <_IO_stdin_used+0x553>
gs
jb     cd1f <_IO_stdin_used+0x4e3>
add    %ch,(%edx)
sub    (%edx),%ch
and    %al,0x6f(%ebx)
jne    cd94 <_IO_stdin_used+0x558>
and    %ch,%fs:0x6f(%esi)
je     cd4e <_IO_stdin_used+0x512>
addr16
gs
je     cd52 <_IO_stdin_used+0x516>
je     cd9c <_IO_stdin_used+0x560>
and    %al,%gs:0x43(%ecx)
dec    %esp
and    %ch,0x66(%edi)
and    %ah,0xa73
add    %al,(%eax)
push   %esp
push   $0x69207369
jae    cd6c <_IO_stdin_used+0x530>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    cd71 <_IO_stdin_used+0x535>
jo     cdc2 <_IO_stdin_used+0x586>
jae    cdc8 <_IO_stdin_used+0x58c>
imul   $0x73612065,0x6c(%edx),%esp
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     cd6c <_IO_stdin_used+0x530>
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x6e(%ebp)
je     cddd <_IO_stdin_used+0x5a1>
jns    cd8d <_IO_stdin_used+0x551>
imul   $0x6e757274,0x20(%ebx),%esi
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:(%eax)
gs
js     cdee <_IO_stdin_used+0x5b2>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x69(%ebx)
jp     cded <_IO_stdin_used+0x5b1>
and    %ah,0xa29646c
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x78(%ebp)
je     ce09 <_IO_stdin_used+0x5cd>
popa
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %ah,0x70(%ecx)
jo     ce07 <_IO_stdin_used+0x5cb>
outsb  %ds:(%esi),(%dx)
fs gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
outsb  %gs:(%esi),(%dx)
je     ce20 <_IO_stdin_used+0x5e4>
jns    cdd0 <_IO_stdin_used+0x594>
sub    %ah,0x78(%ebp)
jo     ce1a <_IO_stdin_used+0x5de>
arpl   %si,0x64(%ebp,%eiz,2)
and    %dh,0x69(%ebx)
jp     ce23 <_IO_stdin_used+0x5e7>
and    %ah,0xa29646c
add    %al,(%eax)
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x65(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     ce32 <_IO_stdin_used+0x5f6>
insb   (%dx),%es:(%edi)
and    %dh,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x63656863,0x20(%ecx,%edi,2),%esi
imul   $0x68,(%eax),%esp
popa
jae    ce04 <_IO_stdin_used+0x5c8>
popaw
imul   $0x2a2a0000,0x64(%ebp,%eiz,2),%ebp
and    %ch,0x61(%eax)
jae    ce5b <_IO_stdin_used+0x61f>
and    %ah,(%eax)
xor    %bh,0x25(%eax)
xor    %bh,(%eax)
insb   (%dx),%es:(%edi)
js     ce1d <_IO_stdin_used+0x5e1>
sub    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     ce78 <_IO_stdin_used+0x63c>
je     ce6a <_IO_stdin_used+0x62e>
and    %bh,%fs:(%edx)
and    %dh,(%eax)
js     ce31 <_IO_stdin_used+0x5f5>
xor    %bh,(%eax)
insb   (%dx),%es:(%edi)
js     ce3a <_IO_stdin_used+0x5fe>
or     (%eax),%al
add    %ch,(%edx)
sub    (%eax),%ah
outsl  %ds:(%esi),(%dx)
data16
data16
jae    ce81 <_IO_stdin_used+0x645>
je     ce3e <_IO_stdin_used+0x602>
and    %dh,(%eax)
js     ce47 <_IO_stdin_used+0x60b>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     ce46 <_IO_stdin_used+0x60a>
sub    %ah,0x78(%ebp)
jo     ce90 <_IO_stdin_used+0x654>
arpl   %si,0x64(%ebp,%eiz,2)
and    %bh,(%edx)
and    %dh,(%eax)
js     ce5a <_IO_stdin_used+0x61e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     ce62 <_IO_stdin_used+0x626>
or     (%eax),%al
add    %ch,(%edx)
sub    (%eax),%ah
push   %ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     cea8 <_IO_stdin_used+0x66c>
gs
jb     ceac <_IO_stdin_used+0x670>
and    %ch,%fs:0x65(%ebx)
jns    ce6d <_IO_stdin_used+0x631>
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
js     ce73 <_IO_stdin_used+0x637>
popa
data16
je     cebc <_IO_stdin_used+0x680>
jb     ce79 <_IO_stdin_used+0x63d>
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
js     ce69 <_IO_stdin_used+0x62d>
add    %ch,(%edx)
sub    (%eax),%ah
imul   $0x73207865,0x64(%esi),%ebp
imul   $0x20642520,0x65(%edx),%edi
sub    %ch,0x6e(%ecx)
jae    ceea <_IO_stdin_used+0x6ae>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%eax,%edi,1)
sub    %ecx,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
sub    (%eax),%ah
imul   $0x73207865,0x64(%esi),%ebp
imul   $0x20642520,0x65(%edx),%edi
sub    %ch,0x6e(%ecx)
jae    cf0e <_IO_stdin_used+0x6d2>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%eax,%esi,1)
sub    %ecx,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
sub    (%eax),%ah
imul   $0x6b207865,0x64(%esi),%ebp
gs
jns    ced5 <_IO_stdin_used+0x699>
jae    cf20 <_IO_stdin_used+0x6e4>
jp     cf1e <_IO_stdin_used+0x6e2>
and    %ah,0x69282064
outsb  %ds:(%esi),(%dx)
jae    cf36 <_IO_stdin_used+0x6fa>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%ecx,%ebp,1)
or     (%eax),%al
add    %al,(%eax)
add    %ch,(%edx)
sub    (%eax),%ah
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae cef9 <_IO_stdin_used+0x6bd>
xor    %bh,0x25(%eax)
js     cefe <_IO_stdin_used+0x6c2>
sub    %ch,0x6e(%ecx)
jae    cf57 <_IO_stdin_used+0x71b>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %bh,(%eax,%eiz,1)
xor    $0x29,%al
or     (%eax),%al
sub    (%edx),%ch
and    %ch,0x65(%ebx)
jns    cf17 <_IO_stdin_used+0x6db>
xor    %bh,0x25(%eax)
js     cf1c <_IO_stdin_used+0x6e0>
sub    %ch,0x6e(%ecx)
jae    cf75 <_IO_stdin_used+0x739>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%eax)
js     cf30 <_IO_stdin_used+0x6f4>
js     cf36 <_IO_stdin_used+0x6fa>
or     (%eax),%al
add    %ch,(%edx)
sub    (%eax),%ah
push   %ebp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     cf7c <_IO_stdin_used+0x740>
gs
jb     cf80 <_IO_stdin_used+0x744>
and    %ch,%fs:0x61(%eax)
jae    cf89 <_IO_stdin_used+0x74d>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x65(%ebx)
jns    cf4a <_IO_stdin_used+0x70e>
xor    %bh,0x25(%eax)
js     cf4f <_IO_stdin_used+0x713>
xor    %bh,0x25(%eax)
js     cf54 <_IO_stdin_used+0x718>
popa
data16
je     cf9d <_IO_stdin_used+0x761>
jb     cf5a <_IO_stdin_used+0x71e>
xor    %bh,0x25(%eax)
js     cf5f <_IO_stdin_used+0x723>
xor    %bh,0x25(%eax)
js     cf4e <_IO_stdin_used+0x712>
add    %al,(%eax)
add    %al,(%eax)
sub    (%edx),%ch
and    %ch,0x6e(%ecx)
fs
gs
js     cf71 <_IO_stdin_used+0x735>
jae    cfbc <_IO_stdin_used+0x780>
jp     cfba <_IO_stdin_used+0x77e>
and    %ah,0x69282064
outsb  %ds:(%esi),(%dx)
jae    cfd2 <_IO_stdin_used+0x796>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0xa2936
add    %al,(%eax)
sub    (%edx),%ch
and    %ch,0x6e(%ecx)
fs
gs
js     cf95 <_IO_stdin_used+0x759>
imul   $0x20,0x79(%ebp),%esp
jae    cfe4 <_IO_stdin_used+0x7a8>
jp     cfe2 <_IO_stdin_used+0x7a6>
and    %ah,0x69282064
outsb  %ds:(%esi),(%dx)
jae    cffa <_IO_stdin_used+0x7be>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %bh,(%eax)
sub    %ecx,(%edx)
add    %al,(%eax)
add    %al,(%eax)
sub    (%edx),%ch
and    %ch,0x61(%eax)
jae    d003 <_IO_stdin_used+0x7c7>
and    %dh,(%eax)
js     cfc4 <_IO_stdin_used+0x788>
js     cfc1 <_IO_stdin_used+0x785>
sub    %ch,0x6e(%ecx)
jae    d01a <_IO_stdin_used+0x7de>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%eax)
js     cfd5 <_IO_stdin_used+0x799>
js     cfdb <_IO_stdin_used+0x79f>
or     (%eax),%al
sub    (%edx),%ch
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
xor    (%eax),%esp
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
js     cfe3 <_IO_stdin_used+0x7a7>
sub    %ch,0x6e(%ecx)
jae    d03c <_IO_stdin_used+0x800>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%eax)
and    %ch,0x72(%edi)
and    %dh,(%eax)
js     d00b <_IO_stdin_used+0x7cf>
cmp    %esi,(%eax)
xor    %dh,(%ecx,%edi,1)
sub    %ecx,(%edx)
add    %al,(%eax)
or     (%edx),%ch
sub    (%eax),%ah
dec    %ebx
gs
jns    d05b <_IO_stdin_used+0x81f>
and    %ch,0x6f(%esi)
je     d00d <_IO_stdin_used+0x7d1>
jo     d061 <_IO_stdin_used+0x825>
gs
jae    d057 <_IO_stdin_used+0x81b>
outsb  %ds:(%esi),(%dx)
je     d015 <_IO_stdin_used+0x7d9>
imul   $0x206c6c61,0x20(%esi),%ebp
imul   $0x3a20,0x73(%ebp,%eiz,2),%bp
add    %cl,0x65(%ebx)
jns    d028 <_IO_stdin_used+0x7ec>
xor    %bh,0x25(%eax)
js     d02d <_IO_stdin_used+0x7f1>
jne    d082 <_IO_stdin_used+0x846>
gs and %ah,%fs:%gs:0x79(%edx)
and    %ah,0x73252064
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     d040 <_IO_stdin_used+0x804>
imul   $0x20642500,0x0(%esi),%ebp
imul   $0x73,0x79(%ebp),%esp
and    %ch,0x6f(%esi)
je     d050 <_IO_stdin_used+0x814>
jo     d0a4 <_IO_stdin_used+0x868>
gs
jae    d09a <_IO_stdin_used+0x85e>
outsb  %ds:(%esi),(%dx)
je     d058 <_IO_stdin_used+0x81c>
imul   $0x206c6c61,0x20(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0xa73,0x74(%ebx),%esi
add    %al,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebx)
jns    d0c3 <_IO_stdin_used+0x887>
and    %ah,0x72(%ecx)
and    %dh,%gs:0x72(%eax)
gs
jae    d0bf <_IO_stdin_used+0x883>
outsb  %ds:(%esi),(%dx)
je     d07d <_IO_stdin_used+0x841>
imul   $0x206c6c61,0x20(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x73,0x74(%ebx),%esi
or     %esp,0x73(%ecx,%ebp,2)
jo     d0de <_IO_stdin_used+0x8a2>
popa
jns    d095 <_IO_stdin_used+0x859>
jae    d0dc <_IO_stdin_used+0x8a0>
arpl   %si,0x72(%ebp)
imul   $0x63736564,0x20(%ecx,%edi,2),%esi
jb     d0ed <_IO_stdin_used+0x8b1>
jo     d0fa <_IO_stdin_used+0x8be>
outsl  %ds:(%esi),(%dx)
jb     d0fc <_IO_stdin_used+0x8c0>
and    %dh,0x69(%edi)
je     d0f6 <_IO_stdin_used+0x8ba>
imul   $0x656c6966,0x20(%esi),%ebp
or     (%eax),%al
add    %cl,(%ecx)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     d10b <_IO_stdin_used+0x8cf>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61726170,0x20(%ecx,%edi,2),%esi
insl   (%dx),%es:(%edi)
gs
je     d11b <_IO_stdin_used+0x8df>
jb     d12b <_IO_stdin_used+0x8ef>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
arpl   %sp,0x75(%ecx)
imul   $0x5d765b72,%fs:0x2d(%eax,%eiz,1),%esi
5d
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    d148 <_IO_stdin_used+0x90c>
and    %ah,%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    d0f1 <_IO_stdin_used+0x8b5>
add    %cl,(%ecx)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     d15b <_IO_stdin_used+0x91f>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61726170,0x20(%ecx,%edi,2),%esi
insl   (%dx),%es:(%edi)
gs
je     d16b <_IO_stdin_used+0x92f>
jb     d17b <_IO_stdin_used+0x93f>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    d132 <_IO_stdin_used+0x8f6>
imul   $0x65726964,0x20(%esi),%ebp
arpl   %si,0x72(%edi,%ebp,2)
jns    d129 <_IO_stdin_used+0x8ed>
add    %ah,(%eax)
and    %ah,(%eax)
jae    d18a <_IO_stdin_used+0x94e>
arpl   %sp,0x75(%ecx)
imul   $0x5d765b62,%fs:0x2d(%eax,%eiz,1),%esi
5d
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    d1a4 <_IO_stdin_used+0x968>
and    %ah,%gs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    d14d <_IO_stdin_used+0x911>
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x61(%edx)
arpl   %bp,0x75(%ebx)
jo     d173 <_IO_stdin_used+0x937>
je     d1bd <_IO_stdin_used+0x981>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61726170,0x20(%ecx,%edi,2),%esi
insl   (%dx),%es:(%edi)
gs
je     d1cd <_IO_stdin_used+0x991>
jb     d1dd <_IO_stdin_used+0x9a1>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    d194 <_IO_stdin_used+0x958>
imul   $0x65726964,0x20(%esi),%ebp
arpl   %si,0x72(%edi,%ebp,2)
jns    d18b <_IO_stdin_used+0x94f>
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
jae    d1ee <_IO_stdin_used+0x9b2>
arpl   %sp,0x75(%ecx)
imul   $0x76655b73,%fs:0x2d(%eax,%eiz,1),%esi
76
pop    %ebp
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    d209 <_IO_stdin_used+0x9cd>
and    %bl,%gs:0x62(%ebx)
popa
arpl   %bp,0x75(%ebx)
jo     d20c <_IO_stdin_used+0x9d0>
imul   $0x2020000a,0x5d(%ebp,%eiz,2),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    d21b <_IO_stdin_used+0x9df>
je     d1d8 <_IO_stdin_used+0x99c>
je     d222 <_IO_stdin_used+0x9e6>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61726170,0x20(%ecx,%edi,2),%esi
insl   (%dx),%es:(%edi)
gs
je     d232 <_IO_stdin_used+0x9f6>
jb     d242 <_IO_stdin_used+0xa06>
and    %ah,0x73(%ecx)
and    %ch,0x6e(%ecx)
imul   $0x20646574,%fs:0x61(%ebx),%esp
imul   $0x6b636162,0x20(%esi),%ebp
jne    d256 <_IO_stdin_used+0xa1a>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x69(%edi)
je     d264 <_IO_stdin_used+0xa28>
and    %ch,0x6c612065
jae    d273 <_IO_stdin_used+0xa37>
and    %dh,0x65(%ebx)
je     d229 <_IO_stdin_used+0x9ed>
gs
js     d280 <_IO_stdin_used+0xa44>
jb     d26f <_IO_stdin_used+0xa33>
and    %dh,0x61(%eax)
jb     d274 <_IO_stdin_used+0xa38>
insl   (%dx),%es:(%edi)
gs
je     d27c <_IO_stdin_used+0xa40>
jb     d28c <_IO_stdin_used+0xa50>
and    %ch,(%eax)
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
je     d29a <_IO_stdin_used+0xa5e>
jb     d291 <_IO_stdin_used+0xa55>
bound  %ebp,(%ecx)
or     (%eax),%al
and    %ah,(%eax)
and    %dh,0x65(%ebx)
arpl   %sp,0x75(%ecx)
imul   $0x6d756c6f,%fs:0x76(%eax,%eiz,1),%esi
6d
and    %dh,%gs:0x65(%eax)
jb     d2b0 <_IO_stdin_used+0xa74>
jae    d265 <_IO_stdin_used+0xa29>
imul   $0x0,0xa(%ebp,%eiz,2),%bp
or     %esi,0x65(%ebx)
je     d271 <_IO_stdin_used+0xa35>
je     d2bb <_IO_stdin_used+0xa7f>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61726170,0x20(%ecx,%edi,2),%esi
insl   (%dx),%es:(%edi)
gs
je     d2cb <_IO_stdin_used+0xa8f>
jb     d2db <_IO_stdin_used+0xa9f>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x20(%edi,%ebp,2)
jo     d2db <_IO_stdin_used+0xa9f>
jb     d2e5 <_IO_stdin_used+0xaa9>
jae    d284 <_IO_stdin_used+0xa48>
add    %al,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%ebx)
arpl   %sp,0x75(%ecx)
imul   $0x5d765b72,%fs:0x2d(%eax,%eiz,1),%esi
5d
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    d300 <_IO_stdin_used+0xac4>
and    %dh,%gs:0x65(%eax)
jb     d306 <_IO_stdin_used+0xaca>
jae    d2bb <_IO_stdin_used+0xa7f>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    d2af <_IO_stdin_used+0xa73>
add    %al,(%eax)
add    %cl,(%ecx)
jae    d310 <_IO_stdin_used+0xad4>
je     d2cd <_IO_stdin_used+0xa91>
je     d317 <_IO_stdin_used+0xadb>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61726170,0x20(%ecx,%edi,2),%esi
insl   (%dx),%es:(%edi)
gs
je     d327 <_IO_stdin_used+0xaeb>
jb     d337 <_IO_stdin_used+0xafb>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
gs
jae    d2ee <_IO_stdin_used+0xab2>
imul   $0x65726964,0x20(%esi),%ebp
arpl   %si,0x72(%edi,%ebp,2)
jns    d2fb <_IO_stdin_used+0xabf>
je     d34c <_IO_stdin_used+0xb10>
and    %dh,0x65(%eax)
jb     d34f <_IO_stdin_used+0xb13>
jae    d2ee <_IO_stdin_used+0xab2>
add    %al,(%eax)
add    %al,(%eax)
or     %esp,0x65(%edi)
je     d30d <_IO_stdin_used+0xad1>
popa
and    %dh,0x73(%ebp)
gs
jb     d314 <_IO_stdin_used+0xad8>
insl   (%dx),%es:(%edi)
popa
jo     d368 <_IO_stdin_used+0xb2c>
imul   $0x6f727020,0x67(%esi),%ebp
jo     d370 <_IO_stdin_used+0xb34>
jae    d364 <_IO_stdin_used+0xb28>
insb   (%dx),%es:(%edi)
and    %ah,0x70(%ecx)
jo     d375 <_IO_stdin_used+0xb39>
imul   $0x20656c62,0x61(%ebx),%esp
je     d381 <_IO_stdin_used+0xb45>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
jae    d38f <_IO_stdin_used+0xb53>
arpl   %bp,%gs:0x61(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
jae    d38e <_IO_stdin_used+0xb52>
jae    d357 <_IO_stdin_used+0xb1b>
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     d353 <_IO_stdin_used+0xb17>
jb     d39a <_IO_stdin_used+0xb5e>
jno    d3ac <_IO_stdin_used+0xb70>
imul   $0x69656220,0x65(%edx),%esi
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%bp,%si)
outsl  %ds:(%esi),(%dx)
je     d366 <_IO_stdin_used+0xb2a>
cmp    (%edx),%cl
add    %al,(%eax)
add    %al,(%eax)
or     %esp,0x65(%edi)
je     d371 <_IO_stdin_used+0xb35>
popa
and    %dh,0x73(%ebp)
gs
jb     d378 <_IO_stdin_used+0xb3c>
insl   (%dx),%es:(%edi)
popa
jo     d3cc <_IO_stdin_used+0xb90>
imul   $0x6f727020,0x67(%esi),%ebp
jo     d3d4 <_IO_stdin_used+0xb98>
jae    d3c8 <_IO_stdin_used+0xb8c>
insb   (%dx),%es:(%edi)
and    %ah,0x70(%ecx)
jo     d3d9 <_IO_stdin_used+0xb9d>
imul   $0x20656c62,0x61(%ebx),%esp
je     d3e5 <_IO_stdin_used+0xba9>
and    %ch,0x6f(%ebp)
jne    d3e9 <_IO_stdin_used+0xbad>
je     d3e2 <_IO_stdin_used+0xba6>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %ah,(%eax)
and    %ah,(%eax)
jae    d3f2 <_IO_stdin_used+0xbb6>
arpl   %sp,0x75(%ecx)
imul   $0x205d762d,%fs:0x5b(%eax,%eiz,1),%esi
20
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    d40b <_IO_stdin_used+0xbcf>
je     d404 <_IO_stdin_used+0xbc8>
fs
sub    $0x656c6966,%eax
or     (%eax),%al
add    %cl,(%ecx)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     d41b <_IO_stdin_used+0xbdf>
and    %dh,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61726170,0x20(%ecx,%edi,2),%esi
insl   (%dx),%es:(%edi)
gs
je     d42b <_IO_stdin_used+0xbef>
jb     d43b <_IO_stdin_used+0xbff>
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jne    d440 <_IO_stdin_used+0xc04>
je     d439 <_IO_stdin_used+0xbfd>
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    %ah,(%eax)
and    %cl,0x6f(%esi)
je     d448 <_IO_stdin_used+0xc0c>
cmp    (%eax),%ah
jo     d44c <_IO_stdin_used+0xc10>
jb     d456 <_IO_stdin_used+0xc1a>
jae    d40b <_IO_stdin_used+0xbcf>
arpl   %sp,0x6e(%ecx)
and    %ah,0x65(%edx)
and    %ah,0x6e(%ecx)
and    %ch,0x63(%edi)
je     d45a <_IO_stdin_used+0xc1e>
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%ebp)
fs and %ch,%fs:%gs:0x72(%edi)
and    %ah,0x20(%ecx)
push   %eax
outsl  %ds:(%esi),(%dx)
jae    d472 <_IO_stdin_used+0xc36>
js     d42b <_IO_stdin_used+0xbef>
inc    %ecx
inc    %ebx
dec    %esp
and    %ah,0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     d48b <_IO_stdin_used+0xc4f>
imul   $0x2020000a,0x6e(%edi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x73692076,%eax
and    %ah,0x6f(%esi)
jb     d450 <_IO_stdin_used+0xc14>
jbe    d497 <_IO_stdin_used+0xc5b>
jb     d496 <_IO_stdin_used+0xc5a>
outsl  %ds:(%esi),(%dx)
jae    d49c <_IO_stdin_used+0xc60>
sub    $0x20,%al
sub    $0x66207676,%eax
outsl  %ds:(%esi),(%dx)
jb     d461 <_IO_stdin_used+0xc25>
jbe    d4a8 <_IO_stdin_used+0xc6c>
jb     d4be <_IO_stdin_used+0xc82>
and    %dh,0x65(%esi)
jb     d4ac <_IO_stdin_used+0xc70>
outsl  %ds:(%esi),(%dx)
jae    d4b2 <_IO_stdin_used+0xc76>
or     (%eax),%al
add    %ah,0x786c3830
and    %bh,(%edx)
and    %ah,0x79622075
je     d4c4 <_IO_stdin_used+0xc88>
jae    d481 <_IO_stdin_used+0xc45>
popa
je     d484 <_IO_stdin_used+0xc48>
and    $0x786c3830,%eax
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %ah,%fs:%gs:0x74(%ecx)
and    %ah,0x696c2073
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0xa64
push   %esi
popa
insb   (%dx),%es:(%edi)
imul   $0x7972746e,0x65(%eax,%eiz,1),%esp
and    %ah,0x74(%ecx)
and    %dh,(%eax)
js     d4bb <_IO_stdin_used+0xc7f>
insb   (%dx),%es:(%edi)
js     d4b9 <_IO_stdin_used+0xc7d>
outsw  %ds:(%esi),(%dx)
jb     d4bd <_IO_stdin_used+0xc81>
imul   $0x20,0x79(%ebp),%esp
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
js     d4b1 <_IO_stdin_used+0xc75>
add    %ch,(%edx)
sub    (%eax),%ah
inc    %esp
imul   $0x6e657265,0x66(%esi),%esp
je     d4d5 <_IO_stdin_used+0xc99>
push   $0x20687361
jbe    d51d <_IO_stdin_used+0xce1>
insb   (%dx),%es:(%edi)
jne    d524 <_IO_stdin_used+0xce8>
jae    d4e1 <_IO_stdin_used+0xca5>
cmp    (%eax),%ah
and    $0x53,%al
inc    %esp
push   %ebx
sub    $0x78302031,%eax
and    $0x786c3830,%eax
and    %ah,(%ebx,%edx,2)
inc    %esp
push   %ebx
sub    $0x78302032,%eax
and    $0x786c3830,%eax
or     (%eax),%al
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x66(%ecx,%ebp,2)
data16
gs
jb     d553 <_IO_stdin_used+0xd17>
outsb  %ds:(%esi),(%dx)
je     d511 <_IO_stdin_used+0xcd5>
outsl  %ds:(%esi),(%dx)
data16
data16
jae    d55b <_IO_stdin_used+0xd1f>
je     d56b <_IO_stdin_used+0xd2f>
and    %bh,(%edx)
and    %ah,(%ebx,%edx,2)
inc    %esp
push   %ebx
sub    $0x78302031,%eax
and    $0x20786c6c,%eax
and    $0x53,%al
inc    %esp
push   %ebx
sub    $0x78302032,%eax
and    $0xa786c6c,%eax
add    %ch,(%edx)
sub    (%eax),%ah
inc    %esp
imul   $0x6e657265,0x66(%esi),%esp
je     d545 <_IO_stdin_used+0xd09>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je d593 <_IO_stdin_used+0xd57>
jae    d54d <_IO_stdin_used+0xd11>
cmp    (%eax),%ah
and    $0x53,%al
inc    %esp
push   %ebx
sub    $0x78302031,%eax
and    $0x2420786c,%eax
push   %ebx
inc    %esp
push   %ebx
sub    $0x78302032,%eax
and    $0xa786c,%eax
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x6e(%ebp)
je     d5c5 <_IO_stdin_used+0xd89>
jns    d575 <_IO_stdin_used+0xd39>
ja     d5b8 <_IO_stdin_used+0xd7c>
jae    d579 <_IO_stdin_used+0xd3d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     d57d <_IO_stdin_used+0xd41>
jo     d5d1 <_IO_stdin_used+0xd95>
gs
jae    d5c7 <_IO_stdin_used+0xd8b>
outsb  %ds:(%esi),(%dx)
je     d585 <_IO_stdin_used+0xd49>
imul   $0x53445324,0x20(%esi),%ebp
sub    $0x2a000031,%eax
sub    (%eax),%ah
push   %ebx
arpl   %si,%gs:0x72(%ebp)
imul   $0x30206469,0x5f(%ecx,%edi,2),%esi
js     d5a7 <_IO_stdin_used+0xd6b>
js     d5a4 <_IO_stdin_used+0xd68>
outsl  %ds:(%esi),(%dx)
jne    d5fb <_IO_stdin_used+0xdbf>
and    %ch,0x66(%edi)
and    %ah,0x6f(%edx)
jne    d5fd <_IO_stdin_used+0xdc1>
fs
jae    d59c <_IO_stdin_used+0xd60>
add    %al,(%eax)
sub    (%edx),%ch
and    %dl,0x65(%eax,%ebp,2)
jb     d601 <_IO_stdin_used+0xdc5>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
and    %ah,(%ebx,%edx,2)
inc    %esp
push   %ebx
sub    $0x69206425,%eax
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%eax,%ebp,2)
jae    d5d3 <_IO_stdin_used+0xd97>
jbe    d624 <_IO_stdin_used+0xde8>
insb   (%dx),%es:(%edi)
jne    d625 <_IO_stdin_used+0xde9>
or     %gs:(%eax),%al
add    %ch,(%edx)
sub    (%eax),%ah
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    d62f <_IO_stdin_used+0xdf3>
and    %ch,%fs:0x6f(%esi)
je     d5e9 <_IO_stdin_used+0xdad>
outsl  %ds:(%esi),(%dx)
jo     d631 <_IO_stdin_used+0xdf5>
outsb  %ds:(%esi),(%dx)
and    %ah,(%ebx,%edx,2)
inc    %esp
push   %ebx
sub    $0x202c6425,%eax
jae    d642 <_IO_stdin_used+0xe06>
jp     d640 <_IO_stdin_used+0xe04>
and    %ah,0xa000a64
inc    %ecx
je     d604 <_IO_stdin_used+0xdc8>
outsl  %ds:(%esi),(%dx)
data16
data16
jae    d64e <_IO_stdin_used+0xe12>
je     d60b <_IO_stdin_used+0xdcf>
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
js     d611 <_IO_stdin_used+0xdd5>
outsl  %ds:(%si),(%dx)
je     d615 <_IO_stdin_used+0xdd9>
and    $0x6220756c,%eax
jns    d670 <_IO_stdin_used+0xe34>
gs
jae    d609 <_IO_stdin_used+0xdcd>
add    %ch,(%edx)
sub    (%eax),%ah
push   %ebx
arpl   %si,%gs:0x72(%ebp)
imul   $0x72747461,0x20(%ecx,%edi,2),%esi
imul   $0x69206574,0x75(%edx),%esp
jae    d639 <_IO_stdin_used+0xdfd>
je     d68a <_IO_stdin_used+0xe4e>
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi,%ebp,2)
and    %ch,(%bx,%si)
and    $0x6220646c,%eax
jns    d69e <_IO_stdin_used+0xe62>
gs
jae    d656 <_IO_stdin_used+0xe1a>
and    %ch,0x6f747320
jo     d6a5 <_IO_stdin_used+0xe69>
imul   $0xa,0x67(%esi),%ebp
push   %esp
jb     d6b8 <_IO_stdin_used+0xe7c>
imul   $0x78656e20,0x67(%esi),%ebp
je     d668 <_IO_stdin_used+0xe2c>
push   %ebx
inc    %esp
push   %ebx
sub    $0x62206425,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
popa
je     d678 <_IO_stdin_used+0xe3c>
outsl  %ds:(%esi),(%dx)
data16
data16
jae    d6c2 <_IO_stdin_used+0xe86>
je     d67f <_IO_stdin_used+0xe43>
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
js     d66f <_IO_stdin_used+0xe33>
add    %al,(%eax)
add    %al,0x73(%ecx)
jae    d6e1 <_IO_stdin_used+0xea5>
insl   (%dx),%es:(%edi)
imul   $0x646e6520,0x67(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,(%ebx,%edx,2)
inc    %esp
push   %ebx
sub    $0x20,%al
outsl  %ds:(%si),(%dx)
je     d6a2 <_IO_stdin_used+0xe66>
and    $0x79622064,%eax
je     d6ee <_IO_stdin_used+0xeb2>
jae    d695 <_IO_stdin_used+0xe59>
add    %ch,(%edx)
sub    (%eax),%ah
push   %ebx
popa
outsb  %ds:(%esi),(%dx)
imul   $0x63656863,0x20(%ecx,%edi,2),%esi
imul   $0x66,(%eax),%esp
popa
imul   $0x73202d20,0x64(%ebp,%eiz,2),%ebp
je     d717 <_IO_stdin_used+0xedb>
jo     d71a <_IO_stdin_used+0xede>
imul   $0x65687420,0x67(%esi),%ebp
jb     d718 <_IO_stdin_used+0xedc>
add    %ah,0x61762064
insb   (%dx),%es:(%edi)
imul   $0x2520646e,0x61(%eax,%eiz,1),%esp
and    %ah,%fs:0x6c(%ebp,%eiz,2)
gs
je     d72f <_IO_stdin_used+0xef3>
and    %ah,%fs:0x6e(%ebp)
je     d742 <_IO_stdin_used+0xf06>
imul   $0x206e6920,0x73(%ebp),%esp
and    $0x53,%al
inc    %esp
push   %ebx
sub    $0xa6425,%eax
sub    (%edx),%ch
and    %ch,0x66(%edi)
data16
jae    d74d <_IO_stdin_used+0xf11>
je     d70a <_IO_stdin_used+0xece>
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     d711 <_IO_stdin_used+0xed5>
sub    %ch,0x6e(%ecx)
jae    d76a <_IO_stdin_used+0xf2e>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%eax)
js     d725 <_IO_stdin_used+0xee9>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     d72d <_IO_stdin_used+0xef1>
or     (%eax),%al
add    %al,(%eax)
sub    (%edx),%ch
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je d779 <_IO_stdin_used+0xf3d>
and    %dh,(%eax)
js     d73a <_IO_stdin_used+0xefe>
insb   (%dx),%es:(%edi)
js     d738 <_IO_stdin_used+0xefc>
sub    %ch,0x6e(%ecx)
jae    d791 <_IO_stdin_used+0xf55>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0xa29646c
add    %al,(%eax)
add    %ch,(%edx)
sub    (%eax),%ah
inc    %ebp
outsb  %ds:(%esi),(%dx)
je     d7a5 <_IO_stdin_used+0xf69>
jns    d755 <_IO_stdin_used+0xf19>
ja     d798 <_IO_stdin_used+0xf5c>
jae    d759 <_IO_stdin_used+0xf1d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     d75d <_IO_stdin_used+0xf21>
jo     d7b1 <_IO_stdin_used+0xf75>
gs
jae    d7a7 <_IO_stdin_used+0xf6b>
outsb  %ds:(%esi),(%dx)
je     d765 <_IO_stdin_used+0xf29>
imul   $0x53445324,0x20(%esi),%ebp
add    %al,(%eax)
add    %al,(%eax)
sub    (%edx),%ch
and    %dl,0x65(%eax,%ebp,2)
jb     d7bd <_IO_stdin_used+0xf81>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
and    %ah,(%ebx,%edx,2)
dec    %ecx
dec    %ecx
and    %ch,0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    d78c <_IO_stdin_used+0xf50>
jbe    d7dd <_IO_stdin_used+0xfa1>
insb   (%dx),%es:(%edi)
jne    d7de <_IO_stdin_used+0xfa2>
add    %al,%gs:(%eax)
sub    (%edx),%ch
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je d7e5 <_IO_stdin_used+0xfa9>
and    %ah,0x2820646c
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %ah,0xa29646c
add    %ch,(%edx)
sub    (%eax),%ah
inc    %ebp
outsb  %ds:(%esi),(%dx)
je     d80d <_IO_stdin_used+0xfd1>
jns    d7bd <_IO_stdin_used+0xf81>
ja     d800 <_IO_stdin_used+0xfc4>
jae    d7c1 <_IO_stdin_used+0xf85>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     d7c5 <_IO_stdin_used+0xf89>
jo     d819 <_IO_stdin_used+0xfdd>
gs
jae    d80f <_IO_stdin_used+0xfd3>
outsb  %ds:(%esi),(%dx)
je     d7cd <_IO_stdin_used+0xf91>
imul   $0x53445324,0x20(%esi),%ebp
and    %ch,0x6f(%esi)
jb     d7d9 <_IO_stdin_used+0xf9d>
imul   $0x49495324,0x20(%esi),%ebp
add    %al,(%eax)
add    %al,(%eax)
sub    (%edx),%ch
and    %dl,0x65(%eax,%ebp,2)
jb     d831 <_IO_stdin_used+0xff5>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
and    %ah,(%ebx,%edx,2)
inc    %esp
dec    %eax
and    %ch,0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    d800 <_IO_stdin_used+0xfc4>
jbe    d851 <_IO_stdin_used+0x1015>
insb   (%dx),%es:(%edi)
jne    d852 <_IO_stdin_used+0x1016>
add    %al,%gs:(%eax)
sub    (%edx),%ch
and    %al,0x6f(%ebx)
jne    d85b <_IO_stdin_used+0x101f>
and    %ch,%fs:0x6f(%esi)
je     d815 <_IO_stdin_used+0xfd9>
jae    d85c <_IO_stdin_used+0x1020>
je     d819 <_IO_stdin_used+0xfdd>
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
je     d878 <_IO_stdin_used+0x103c>
jb     d86f <_IO_stdin_used+0x1033>
bound  %esp,(%eax)
outsl  %ds:(%esi),(%dx)
data16
and    %al,(%eax)
inc    %ecx
inc    %ebx
dec    %esp
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x74(%ecx)
je     d88a <_IO_stdin_used+0x104e>
imul   $0x65766168,0x20(%edx),%esp
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %ah,0x70(%ecx)
jo     d895 <_IO_stdin_used+0x1059>
imul   $0x206f7420,0x64(%ebp),%esp
add    %al,(%eax)
add    %al,(%eax)
sub    (%edx),%ch
and    %dl,0x65(%eax,%ebp,2)
jb     d8a1 <_IO_stdin_used+0x1065>
and    %dh,0x61(%edi)
jae    d861 <_IO_stdin_used+0x1025>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x66204c43,0x41(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jb     d872 <_IO_stdin_used+0x1036>
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x43(%ecx)
dec    %esp
and    %dh,0x65(%edx)
push   $0x65
arpl   %si,0x64(%ebp,%eiz,2)
sub    $0x20,%al
imul   $0x68736168,0x20(%ebx,%esi,2),%esi
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     d895 <_IO_stdin_used+0x1059>
popa
jae    d898 <_IO_stdin_used+0x105c>
gs
js     d8eb <_IO_stdin_used+0x10af>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %al,(%eax)
add    %al,(%eax)
push   %edx
gs
jae    d8fc <_IO_stdin_used+0x10c0>
outsl  %ds:(%esi),(%dx)
jb     d8f0 <_IO_stdin_used+0x10b4>
and    %ch,0x73(%ecx)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    d8b4 <_IO_stdin_used+0x1078>
jo     d905 <_IO_stdin_used+0x10c9>
jae    d90b <_IO_stdin_used+0x10cf>
imul   $0x73612065,0x6c(%edx),%esp
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     d8af <_IO_stdin_used+0x1073>
add    %al,(%eax)
add    %dl,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x2079656b,0x20(%ecx,%edi,2),%esi
cmp    (%eax),%ah
xor    %bh,0x25(%eax)
js     d8dc <_IO_stdin_used+0x10a0>
outsl  %ds:(%esi),(%dx)
jne    d933 <_IO_stdin_used+0x10f7>
and    %ch,0x66(%edi)
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
or     %gs:(%bx,%si),%al
add    %al,(%eax)
and    (%eax),%esp
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     d937 <_IO_stdin_used+0x10fb>
jb     d944 <_IO_stdin_used+0x1108>
jb     d93b <_IO_stdin_used+0x10ff>
je     d93d <_IO_stdin_used+0x1101>
and    %dl,%fs:0x6e(%ebp)
imul   $0x656e776f,0x20(%eax),%edi
jb     d905 <_IO_stdin_used+0x10c9>
and    $0x67202c64,%eax
jb     d95b <_IO_stdin_used+0x111f>
jne    d95e <_IO_stdin_used+0x1122>
and    %ah,0x6d202c64
outsl  %ds:(%esi),(%dx)
fs and %dh,%fs:%gs:(%eax)
and    $0xa6f3330,%eax
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     d969 <_IO_stdin_used+0x112d>
jb     d976 <_IO_stdin_used+0x113a>
jb     d96d <_IO_stdin_used+0x1131>
je     d96f <_IO_stdin_used+0x1133>
and    %dl,%fs:0x6e(%ebp)
imul   $0x656e776f,0x20(%eax),%edi
jb     d937 <_IO_stdin_used+0x10fb>
and    $0x67202c64,%eax
jb     d98d <_IO_stdin_used+0x1151>
jne    d990 <_IO_stdin_used+0x1154>
and    %ah,0x6d202c64
outsl  %ds:(%esi),(%dx)
fs and %dh,%fs:%gs:(%eax)
and    $0xa6f3330,%eax
add    %al,(%eax)
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     d9b3 <_IO_stdin_used+0x1177>
outsl  %ds:(%esi),(%dx)
jb     d962 <_IO_stdin_used+0x1126>
popaw
imul   $0x696e6173,0x20(%ebx,%esi,2),%ebp
je     d9c7 <_IO_stdin_used+0x118b>
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x0(%ebx)
add    %al,(%eax)
add    %dl,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x2079656b,0x20(%ecx,%edi,2),%esi
cmp    (%eax),%ah
xor    %bh,0x25(%eax)
js     d98c <_IO_stdin_used+0x1150>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x206f3330
sub    %ah,0x6c(%ecx)
jb     d9e0 <_IO_stdin_used+0x11a4>
popa
fs
jns    d99f <_IO_stdin_used+0x1163>
imul   $0x6579616c,%fs:0x70(%ebx),%esi
sub    %ecx,%fs:(%edx)
add    %al,(%eax)
sub    (%edx),%ch
and    %al,0x6f(%ebx)
jne    d9ff <_IO_stdin_used+0x11c3>
and    %ch,%fs:0x6f(%esi)
je     d9b9 <_IO_stdin_used+0x117d>
addr16
gs
je     d9bd <_IO_stdin_used+0x1181>
jae    da04 <_IO_stdin_used+0x11c8>
arpl   %si,0x72(%ebp)
imul   $0x61746164,0x20(%ecx,%edi,2),%esi
and    %ch,0x66(%edi)
and    %ah,0x70202c73
popa
jb     da2a <_IO_stdin_used+0x11ee>
jae    da32 <_IO_stdin_used+0x11f6>
and    %ah,0xa64
add    %al,(%eax)
sub    (%edx),%ch
and    %ah,0x72(%esi)
gs imul $0x616e7520,%gs:0x67(%esi),%ebp
61
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     da56 <_IO_stdin_used+0x121a>
and    %ch,0x6e(%ecx)
and    %ah,0x696c2073
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0xa64
add    %al,(%eax)
sub    (%edx),%ch
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     da72 <_IO_stdin_used+0x1236>
and    %ah,0x6f(%ebx)
jb     da70 <_IO_stdin_used+0x1234>
jne    da70 <_IO_stdin_used+0x1234>
je     da6b <_IO_stdin_used+0x122f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,(%eax)
imul   $0x6c207325,0x20(%esi),%ebp
imul   $0x20642520,0x65(%esi),%ebp
jb     da81 <_IO_stdin_used+0x1245>
insb   (%dx),%es:(%edi)
gs
popa
jae    da86 <_IO_stdin_used+0x124a>
and    %ch,0x6e(%ecx)
and    %ah,0x64252073
or     (%eax),%al
sub    (%edx),%ch
and    %al,0x6f(%ebx)
jne    da9f <_IO_stdin_used+0x1263>
and    %ch,%fs:0x6f(%esi)
je     da59 <_IO_stdin_used+0x121d>
imul   $0x7420,0x64(%esi),%bp
push   $0x73752065
gs
jb     da67 <_IO_stdin_used+0x122b>
insl   (%dx),%es:(%edi)
popa
jo     dabb <_IO_stdin_used+0x127f>
imul   $0x6c696620,0x67(%esi),%ebp
add    %ah,%gs:(%eax)
and    %ah,(%eax)
push   %edx
gs
je     dacd <_IO_stdin_used+0x1291>
jns    da7d <_IO_stdin_used+0x1241>
ja     dac8 <_IO_stdin_used+0x128c>
je     dac9 <_IO_stdin_used+0x128d>
and    %ah,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
je     dad3 <_IO_stdin_used+0x1297>
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %ch,%gs:(%edx)
sub    (%eax),%ah
push   %esp
push   $0x20657265
ja     dae4 <_IO_stdin_used+0x12a8>
jb     dae6 <_IO_stdin_used+0x12aa>
and    %ch,0x6f(%esi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x20726573,0x75(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jb     dab3 <_IO_stdin_used+0x1277>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x70756f72,0x67(%eax,%eiz,1),%esp
add    %al,(%eax)
add    %dl,0x65(%eax,%ebp,2)
jb     db0e <_IO_stdin_used+0x12d2>
and    %dh,0x65(%edi)
jb     db13 <_IO_stdin_used+0x12d7>
and    %ch,0x6f(%esi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x20726573,0x75(%eax,%eiz,1),%esp
outsl  %ds:(%esi),(%dx)
jb     dae0 <_IO_stdin_used+0x12a4>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x70756f72,0x67(%eax,%eiz,1),%esp
or     (%eax),%al
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x73(%ebp)
gs
jb     daf8 <_IO_stdin_used+0x12bc>
insl   (%dx),%es:(%edi)
popa
jo     db4c <_IO_stdin_used+0x1310>
imul   $0x63203a20,0x67(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     db09 <_IO_stdin_used+0x12cd>
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     db5b <_IO_stdin_used+0x131f>
and    %dl,%gs:0x6f(%eax)
jae    db62 <_IO_stdin_used+0x1326>
js     db1b <_IO_stdin_used+0x12df>
inc    %ecx
inc    %ebx
dec    %esp
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     db69 <_IO_stdin_used+0x132d>
jb     db76 <_IO_stdin_used+0x133a>
jb     db6d <_IO_stdin_used+0x1331>
je     db6f <_IO_stdin_used+0x1333>
and    %dl,%fs:0x6e(%ebp)
imul   $0x65646f6d,0x20(%eax),%edi
and    %dh,(%eax)
and    $0x206f3330,%eax
sub    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     db43 <_IO_stdin_used+0x1307>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    db9c <_IO_stdin_used+0x1360>
and    %ah,0x72(%ecx)
and    %dh,%gs:0x6e(%ebp)
insl   (%dx),%es:(%edi)
popa
jo     dba7 <_IO_stdin_used+0x136b>
gs sub %ecx,%fs:%gs:(%edx)
add    %ch,(%edx)
sub    (%eax),%ah
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    dbaf <_IO_stdin_used+0x1373>
and    %ch,%fs:0x6f(%esi)
je     db69 <_IO_stdin_used+0x132d>
addr16
gs
je     db6d <_IO_stdin_used+0x1331>
je     dbb7 <_IO_stdin_used+0x137b>
and    %cl,%gs:0x54(%esi)
inc    %esi
push   %ebx
and    %al,0x43(%ecx)
dec    %esp
sub    $0x20,%al
arpl   %bp,0x65(%eax)
arpl   %bp,0x20(%ebx)
ja     dbcb <_IO_stdin_used+0x138f>
gs
je     dbce <_IO_stdin_used+0x1392>
gs
jb     db89 <_IO_stdin_used+0x134d>
imul   $0x7369,0x20(%ebp,%eiz,2),%bp
and    %ch,0x6e(%edi)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
add    %al,(%eax)
add    %al,(%eax)
sub    (%edx),%ch
sub    (%eax),%ah
inc    %esp
gs
jae    dbe7 <_IO_stdin_used+0x13ab>
jb     dbef <_IO_stdin_used+0x13b3>
jo     dbfc <_IO_stdin_used+0x13c0>
outsl  %ds:(%esi),(%dx)
jb     dbab <_IO_stdin_used+0x136f>
popaw
imul   $0x696e6173,0x20(%ebx,%esi,2),%ebp
je     dc10 <_IO_stdin_used+0x13d4>
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x0(%ebx)
add    %al,(%eax)
and    (%edx),%ecx
and    (%eax),%esp
push   %edx
arpl   %si,%gs:0x72(%ebp)
jae    dc14 <_IO_stdin_used+0x13d8>
jbe    dc12 <_IO_stdin_used+0x13d6>
and    %al,0x43(%ecx)
dec    %esp
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
and    %ah,0xa2373
add    %al,(%eax)
add    %cl,0x65(%ebx)
jns    dbec <_IO_stdin_used+0x13b0>
xor    %bh,0x25(%eax)
js     dbf1 <_IO_stdin_used+0x13b5>
cmp    (%eax),%ah
and    $0x69662064,%eax
insb   (%dx),%es:(%edi)
gs
jae    dc08 <_IO_stdin_used+0x13cc>
and    %ch,0x6f(%ebp)
fs and %dh,%fs:%gs:(%eax)
and    $0xa6f3330,%eax
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
jae    dc54 <_IO_stdin_used+0x1418>
jb     dc1d <_IO_stdin_used+0x13e1>
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    dc67 <_IO_stdin_used+0x142b>
and    %ch,0x72(%edi)
and    %ch,0x74(%edi)
push   $0x70207265
gs
jb     dc72 <_IO_stdin_used+0x1436>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ch,0x69(%ebp)
jae    dc84 <_IO_stdin_used+0x1448>
imul   $0xa,0x67(%esi),%ebp
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     dc81 <_IO_stdin_used+0x1445>
jb     dc8e <_IO_stdin_used+0x1452>
jb     dc85 <_IO_stdin_used+0x1449>
je     dc87 <_IO_stdin_used+0x144b>
and    %ch,%fs:0x6e(%ecx)
jo     dc9d <_IO_stdin_used+0x1461>
je     dc4a <_IO_stdin_used+0x140e>
fs
gs
jae    dc91 <_IO_stdin_used+0x1455>
jb     dc99 <_IO_stdin_used+0x145d>
jo     dca6 <_IO_stdin_used+0x146a>
imul   $0x65003a20,0x6e(%edi),%ebp
jb     dcad <_IO_stdin_used+0x1471>
outsl  %ds:(%esi),(%dx)
jb     dc5e <_IO_stdin_used+0x1422>
imul   $0x25207325,0x20(%esi),%ebp
and    %bh,%fs:(%edx)
and    %dh,(%eax)
js     dc71 <_IO_stdin_used+0x1435>
insb   (%dx),%es:(%edi)
js     dc6f <_IO_stdin_used+0x1433>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     dc73 <_IO_stdin_used+0x1437>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
jae    dcc7 <_IO_stdin_used+0x148b>
arpl   %sp,0x75(%ecx)
imul   $0x302e342e,%fs:0x31(%eax,%eiz,1),%esi
30
and    %bh,(%edx)
and    %cl,0x54(%esi)
inc    %esi
push   %ebx
and    %dh,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x61746164,0x20(%ecx,%edi,2),%esi
and    %ah,0x75(%ecx)
imul   $0x67,%fs:0x6e(%ecx,%ebp,2),%esi
00
add    %ah,(%edx)
and    $0x6f202273,%eax
jo     dcfd <_IO_stdin_used+0x14c1>
outsb  %ds:(%esi),(%dx)
gs or  %fs:%gs:(%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    dd0d <_IO_stdin_used+0x14d1>
and    %ch,%fs:0x6f(%esi)
je     dcc7 <_IO_stdin_used+0x148b>
outsl  %ds:(%esi),(%dx)
jo     dd0f <_IO_stdin_used+0x14d3>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0xa2273,%eax
inc    %ecx
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    dd26 <_IO_stdin_used+0x14ea>
and    %ch,%gs:0x73(%ecx)
and    %ah,0x6c(%ecx)
jb     dd27 <_IO_stdin_used+0x14eb>
popa
fs
jns    dce6 <_IO_stdin_used+0x14aa>
outsl  %ds:(%esi),(%dx)
jo     dd2e <_IO_stdin_used+0x14f2>
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
and    0x63202273,%ah
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    dd3b <_IO_stdin_used+0x14ff>
or     %fs:(%eax),%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    dd49 <_IO_stdin_used+0x150d>
and    %ch,%fs:0x6f(%esi)
je     dd03 <_IO_stdin_used+0x14c7>
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:(%edx)
and    $0xa2273,%eax
and    %ah,0x783230
and    $0x2500632a,%eax
xor    %dh,(%esi)
js     dd1e <_IO_stdin_used+0x14e2>
add    %al,0x72(%ebp)
jb     dd72 <_IO_stdin_used+0x1536>
jb     dd25 <_IO_stdin_used+0x14e9>
arpl   %bp,0x64(%edi)
and    %ah,%gs:0x203a2064
and    $0x25000a73,%eax
sub    0x4e(%ebx),%ah
jne    dd85 <_IO_stdin_used+0x1549>
insb   (%dx),%es:(%edi)
and    %dl,0x49(%ebx)
inc    %esp
or     (%eax),%al
and    $0x6f57632a,%eax
jb     dd93 <_IO_stdin_used+0x1557>
and    %dl,%fs:0x49(%ebx)
inc    %esp
or     (%eax),%al
and    $0x7243632a,%eax
gs
popa
je     dda6 <_IO_stdin_used+0x156a>
jb     dd59 <_IO_stdin_used+0x151d>
outsl  %ds:(%esi),(%dx)
ja     ddaa <_IO_stdin_used+0x156e>
gs
jb     dd5f <_IO_stdin_used+0x1523>
push   %ebx
dec    %ecx
inc    %esp
or     (%eax),%al
and    $0x7243632a,%eax
gs
popa
je     ddbc <_IO_stdin_used+0x1580>
jb     dd6f <_IO_stdin_used+0x1533>
addr16 jb ddc1 <_IO_stdin_used+0x1585>
jne    ddc4 <_IO_stdin_used+0x1588>
and    %dl,0x49(%ebx)
inc    %esp
or     (%eax),%al
and    $0x6e41632a,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jns    ddd0 <_IO_stdin_used+0x1594>
outsl  %ds:(%esi),(%dx)
jne    ddd9 <_IO_stdin_used+0x159d>
and    %ch,0x67(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dl,0x49(%ebx)
inc    %esp
or     (%eax),%al
and    $0x7541632a,%eax
je     dde1 <_IO_stdin_used+0x15a5>
outsb  %gs:(%esi),(%dx)
je     dde6 <_IO_stdin_used+0x15aa>
arpl   %sp,0x74(%ecx)
gs and %dh,%fs:%gs:0x73(%ebp)
gs
jb     dda8 <_IO_stdin_used+0x156c>
push   %ebx
dec    %ecx
inc    %esp
or     (%eax),%al
and    $0x6f4c632a,%eax
arpl   %sp,0x6c(%ecx)
and    %dh,0x65(%ebx)
jb     de10 <_IO_stdin_used+0x15d4>
imul   $0x44495320,0x65(%ebx),%esp
or     (%eax),%al
and    $0x654e632a,%eax
je     de21 <_IO_stdin_used+0x15e5>
outsl  %ds:(%esi),(%dx)
jb     de18 <_IO_stdin_used+0x15dc>
and    %dh,0x65(%ebx)
jb     de28 <_IO_stdin_used+0x15ec>
imul   $0x44495320,0x65(%ebx),%esp
or     (%eax),%al
and    $0x544e632a,%eax
and    %dl,0x79(%ebx)
jae    de39 <_IO_stdin_used+0x15fd>
gs
insl   (%dx),%es:(%edi)
and    %dl,0x49(%ebx)
inc    %esp
or     (%eax),%al
and    $0x6f4c632a,%eax
arpl   %sp,0x6c(%ecx)
and    %ah,0x64(%ecx)
insl   (%dx),%es:(%edi)
imul   $0x44495320,0x73(%esi),%ebp
or     (%eax),%al
and    $0x6f4c632a,%eax
arpl   %sp,0x6c(%ecx)
and    %dh,0x73(%ebp)
gs
jb     de63 <_IO_stdin_used+0x1627>
and    %dl,0x49(%ebx)
inc    %esp
or     (%eax),%al
and    $0x6f4c632a,%eax
arpl   %sp,0x6c(%ecx)
and    %ah,0x75(%edi)
gs
jae    de78 <_IO_stdin_used+0x163c>
jae    de26 <_IO_stdin_used+0x15ea>
push   %ebx
dec    %ecx
inc    %esp
or     (%eax),%al
and    $0x6f53632a,%eax
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6d(%edi,%ebp,2)
popa
imul   $0xa444953,0x20(%esi),%ebp
add    %ah,0x6f4c632a
arpl   %sp,0x6c(%ecx)
and    %dh,0x73(%ebp)
gs
jb     de5a <_IO_stdin_used+0x161e>
and    $0x5320756c,%eax
dec    %ecx
inc    %esp
or     (%eax),%al
and    $0x6e55632a,%eax
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dl,0x49(%ebx)
inc    %esp
or     (%eax),%al
and    $0x7325632a,%eax
push   $0x53207865
sub    $0x2d6425,%eax
and    $0x786c6c,%eax
sub    $0x786c25,%eax
sub    $0x756c25,%eax
and    $0x7325632a,%eax
fs arpl %sp,%fs:%gs:(%eax)
push   %ebx
sub    $0x2d6425,%eax
dec    %edi
ja     dee4 <_IO_stdin_used+0x16a8>
gs
jb     de99 <_IO_stdin_used+0x165d>
push   %ebx
dec    %ecx
inc    %esp
add    %cl,0x3a(%edi)
add    %al,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    def5 <_IO_stdin_used+0x16b9>
and    %dl,0x49(%ebx)
inc    %esp
add    %al,0x3a(%edi)
add    %al,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
bound  %esp,0x6c(%ecx)
and    %ch,0x65(%eax)
popa
fs
gs
jb     de9b <_IO_stdin_used+0x165f>
and    $0x6572632a,%eax
jbe    df0b <_IO_stdin_used+0x16cf>
jae    df0d <_IO_stdin_used+0x16d1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x25000a64
sub    0x66(%ebx),%ah
insb   (%dx),%es:(%edi)
popa
addr16 jae ded4 <_IO_stdin_used+0x1698>
and    %ah,(%eax)
and    %dh,(%eax)
js     dedf <_IO_stdin_used+0x16a3>
js     dec6 <_IO_stdin_used+0x168a>
add    %ah,0x2020632a
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
ja     df35 <_IO_stdin_used+0x16f9>
gs
jb     deea <_IO_stdin_used+0x16ae>
imul   $0x61666564,0x20(%ebx),%esi
jne    df3f <_IO_stdin_used+0x1703>
je     df3a <_IO_stdin_used+0x16fe>
or     %fs:(%eax),%al
and    $0x2020632a,%eax
and    %ah,(%eax)
addr16 jb df51 <_IO_stdin_used+0x1715>
jne    df54 <_IO_stdin_used+0x1718>
and    %ch,0x73(%ecx)
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    df5a <_IO_stdin_used+0x171e>
je     df55 <_IO_stdin_used+0x1719>
or     %fs:(%eax),%al
and    $0x2020632a,%eax
and    %ah,(%eax)
inc    %esp
inc    %ecx
inc    %ebx
dec    %esp
and    %dh,0x72(%eax)
gs
jae    df69 <_IO_stdin_used+0x172d>
outsb  %ds:(%esi),(%dx)
je     df11 <_IO_stdin_used+0x16d5>
add    %ah,0x2020632a
and    %ah,(%eax)
inc    %esp
inc    %ecx
inc    %ebx
dec    %esp
and    %ch,0x73(%ecx)
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    df89 <_IO_stdin_used+0x174d>
je     df84 <_IO_stdin_used+0x1748>
or     %fs:(%eax),%al
and    $0x2020632a,%eax
and    %ah,(%eax)
push   %ebx
inc    %ecx
inc    %ebx
dec    %esp
and    %dh,0x72(%eax)
gs
jae    df98 <_IO_stdin_used+0x175c>
outsb  %ds:(%esi),(%dx)
je     df40 <_IO_stdin_used+0x1704>
add    %ah,0x2020632a
and    %ah,(%eax)
push   %ebx
inc    %ecx
inc    %ebx
dec    %esp
and    %ch,0x73(%ecx)
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    dfb8 <_IO_stdin_used+0x177c>
je     dfb3 <_IO_stdin_used+0x1777>
or     %fs:(%eax),%al
and    $0x664f632a,%eax
data16
and    %dl,0x53(%ebp)
dec    %ecx
inc    %esp
and    %dh,(%eax)
js     df85 <_IO_stdin_used+0x1749>
js     df6c <_IO_stdin_used+0x1730>
add    %ah,0x664f632a
data16
and    %al,0x53(%edi)
dec    %ecx
inc    %esp
and    %dh,(%eax)
js     df97 <_IO_stdin_used+0x175b>
js     df7e <_IO_stdin_used+0x1742>
add    %ah,0x664f632a
data16
and    %dl,0x41(%ebx)
inc    %ebx
dec    %esp
and    %dh,(%eax)
js     dfa9 <_IO_stdin_used+0x176d>
js     df90 <_IO_stdin_used+0x1754>
add    %ah,0x664f632a
data16
and    %al,0x43(%ecx,%eax,2)
dec    %esp
and    %dh,(%eax)
js     dfbb <_IO_stdin_used+0x177f>
js     dfa2 <_IO_stdin_used+0x1766>
add    %ah,0x7974632a
jo     e005 <_IO_stdin_used+0x17c9>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x25000a64
sub    0x41(%ebx),%ah
arpl   %sp,0x65(%ebx)
jae    e025 <_IO_stdin_used+0x17e9>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     e01e <_IO_stdin_used+0x17e2>
or     %fs:(%eax),%al
and    $0x6341632a,%eax
arpl   %sp,0x73(%ebp)
jae    dfe6 <_IO_stdin_used+0x17aa>
fs outsb %fs:%gs:(%esi),(%dx)
imul   $0x2a25000a,0x64(%ebp),%esp
arpl   %dx,0x79(%ebx)
jae    e049 <_IO_stdin_used+0x180d>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x75(%ecx)
imul   $0x75632a25,%fs:0x0(%edx,%ecx,1),%esi
75
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
and    $0x624f632a,%eax
push   $0x65
arpl   %si,0x69(%eax,%eiz,1)
outsb  %ds:(%esi),(%dx)
push   $0x74697265
jae    e01e <_IO_stdin_used+0x17e2>
inc    %ecx
inc    %ebx
inc    %ebp
or     (%eax),%al
and    $0x6f43632a,%eax
outsb  %ds:(%esi),(%dx)
je     e06c <_IO_stdin_used+0x1830>
imul   $0x6e692072,0x65(%esi),%ebp
push   $0x74697265
jae    e039 <_IO_stdin_used+0x17fd>
inc    %ecx
inc    %ebx
inc    %ebp
or     (%eax),%al
and    $0x6e49632a,%eax
push   $0x74697265
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    e04e <_IO_stdin_used+0x1812>
inc    %ecx
inc    %ebx
inc    %ebp
or     (%eax),%al
and    $0x4341632a,%eax
inc    %ebp
and    %dh,0x61(%edi)
jae    e05e <_IO_stdin_used+0x1822>
imul   $0x74697265,0x68(%esi),%ebp
gs or  %fs:%gs:(%eax),%al
and    $0x7541632a,%eax
imul   $0x7573206e,%fs:0x6f(%eax,%eiz,1),%esi
75
arpl   %sp,0x65(%ebx)
jae    e0cf <_IO_stdin_used+0x1893>
or     (%eax),%al
and    $0x7541632a,%eax
imul   $0x6166206e,%fs:0x6f(%eax,%eiz,1),%esi
61
imul   $0x25000a65,0x72(%ebp,%esi,2),%ebp
sub    0x53(%ebx),%ah
imul   $0x20202020,0x65(%edx),%edi
and    %dh,(%eax)
js     e0a7 <_IO_stdin_used+0x186b>
js     e08e <_IO_stdin_used+0x1852>
add    %ah,0x6341632a
arpl   %sp,(%eax)
jb     e0f5 <_IO_stdin_used+0x18b9>
je     e103 <_IO_stdin_used+0x18c7>
and    %dh,(%eax)
js     e0b9 <_IO_stdin_used+0x187d>
insb   (%dx),%es:(%edi)
js     e0a1 <_IO_stdin_used+0x1865>
add    %ah,0x694c632a
jae    e113 <_IO_stdin_used+0x18d7>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    e0b4 <_IO_stdin_used+0x1878>
add    %ah,0x6441632a
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    $0x6441632a,%eax
and    %dh,%fs:0x75(%ebx)
bound  %esp,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    e0d6 <_IO_stdin_used+0x189a>
add    %ah,0x6552632a
popa
and    %al,%fs:0x41(%ebp)
or     (%eax),%al
and    $0x7257632a,%eax
imul   $0xa4145,0x20(%ebp,%eiz,2),%esi
and    $0x7254632a,%eax
popa
jbe    e153 <_IO_stdin_used+0x1917>
jb     e163 <_IO_stdin_used+0x1927>
or     %gs:(%eax),%al
and    $0x6544632a,%eax
insb   (%dx),%es:(%edi)
gs
je     e161 <_IO_stdin_used+0x1925>
and    %ah,0x68(%ebx)
imul   $0x632a2500,0xa(%esp,%eiz,2),%ebp
push   %edx
gs
popa
and    %ah,%fs:0x74(%ecx)
je     e182 <_IO_stdin_used+0x1946>
imul   $0xa736574,0x75(%edx),%esp
add    %ah,0x7257632a
imul   $0x72747461,0x20(%ebp,%eiz,2),%esi
imul   $0xa736574,0x75(%edx),%esp
add    %ah,0x6552632a
popa
and    %ah,%fs:0x74(%ecx,%eiz,2)
popa
or     (%eax),%al
and    $0x7257632a,%eax
imul   $0x61746164,0x20(%ebp,%eiz,2),%esi
or     (%eax),%al
and    $0x7041632a,%eax
jo     e1b6 <_IO_stdin_used+0x197a>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x74(%ecx,%eiz,2)
popa
or     (%eax),%al
and    $0x7845632a,%eax
arpl   %si,%gs:0x74(%ebp)
or     %gs:(%eax),%al
and    $0x7473632a,%eax
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     e1d5 <_IO_stdin_used+0x1999>
and    %ah,0x63(%ecx)
arpl   %sp,(%eax)
jb     e1df <_IO_stdin_used+0x19a3>
je     e1ed <_IO_stdin_used+0x19b1>
and    %dh,(%eax)
js     e1a3 <_IO_stdin_used+0x1967>
insb   (%dx),%es:(%edi)
js     e18b <_IO_stdin_used+0x194f>
add    %ah,0x6544632a
insb   (%dx),%es:(%edi)
gs
je     e1f0 <_IO_stdin_used+0x19b4>
or     (%eax),%al
and    $0x6552632a,%eax
popa
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     e20c <_IO_stdin_used+0x19d0>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
or     (%eax),%al
and    $0x7257632a,%eax
imul   $0xa434144,0x20(%ebp,%eiz,2),%esi
add    %ah,0x7257632a
imul   $0x656e776f,0x20(%ebp,%eiz,2),%esi
jb     e1c5 <_IO_stdin_used+0x1989>
add    %ah,0x7953632a
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x72(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x2a25000a,0x65(%edx),%edi
arpl   %ax,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    e1fa <_IO_stdin_used+0x19be>
jae    e241 <_IO_stdin_used+0x1a05>
arpl   %si,0x72(%ebp)
imul   $0xa4c4341,0x20(%ecx,%edi,2),%esi
add    %ah,0x6547632a
outsb  %ds:(%esi),(%dx)
gs
jb     e25a <_IO_stdin_used+0x1a1e>
arpl   %sp,(%eax)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%al
and    $0x6547632a,%eax
outsb  %ds:(%esi),(%dx)
gs
jb     e26a <_IO_stdin_used+0x1a2e>
arpl   %sp,(%eax)
gs
js     e26b <_IO_stdin_used+0x1a2f>
arpl   %si,0x74(%ebp)
or     %gs:(%eax),%al
and    $0x6547632a,%eax
outsb  %ds:(%esi),(%dx)
gs
jb     e27e <_IO_stdin_used+0x1a42>
arpl   %sp,(%eax)
ja     e28b <_IO_stdin_used+0x1a4f>
imul   $0x632a2500,0xa(%ebp,%eiz,2),%esi
inc    %edi
outsb  %gs:(%esi),(%dx)
gs
jb     e290 <_IO_stdin_used+0x1a54>
arpl   %sp,(%eax)
jb     e290 <_IO_stdin_used+0x1a54>
popa
or     %fs:(%eax),%al
and    $0x4953632a,%eax
inc    %esp
and    %ah,0x74(%ecx)
and    %dh,(%eax)
js     e261 <_IO_stdin_used+0x1a25>
js     e248 <_IO_stdin_used+0x1a0c>
add    %ah,0x7553632a
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
jb     e2c2 <_IO_stdin_used+0x1a86>
and    %bh,(%edx)
add    %ah,(%eax)
addr16 jb e2b1 <_IO_stdin_used+0x1a75>
outsb  %ds:(%esi),(%dx)
je     e253 <_IO_stdin_used+0x1a17>
and    %ah,0x6e(%ebp,%eiz,2)
jns    e259 <_IO_stdin_used+0x1a1d>
and    %ch,0x6e(%ecx)
push   $0x74697265
gs add %ah,%fs:%gs:(%eax)
popa
jo     e2d8 <_IO_stdin_used+0x1a9c>
insb   (%dx),%es:(%edi)
imul   $0x6f742000,0x64(%ebp),%esp
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     e277 <_IO_stdin_used+0x1a3b>
and    %dh,0x20(%edi,%ebp,2)
addr16 jb e2ed <_IO_stdin_used+0x1ab1>
jne    e2f0 <_IO_stdin_used+0x1ab4>
add    %ah,0x4341632a
dec    %esp
and    %dh,0x69(%ebx)
jp     e2f1 <_IO_stdin_used+0x1ab5>
and    %ah,0x25000a64
sub    0x41(%ebx),%ah
inc    %ebx
inc    %ebp
and    %ah,0x6e(%ebx)
je     e2bc <_IO_stdin_used+0x1a80>
and    %ah,0x25000a64
sub    0x41(%ebx),%ah
inc    %ebx
inc    %ebp
and    %ah,0x74612064
and    %dh,(%eax)
js     e2d6 <_IO_stdin_used+0x1a9a>
js     e2bd <_IO_stdin_used+0x1a81>
add    %cl,0x6f(%esi)
and    %al,0x43(%ecx,%eax,2)
dec    %esp
add    %ah,0x66(%ebp,%eiz,2)
popa
jne    e32e <_IO_stdin_used+0x1af2>
je     e2c4 <_IO_stdin_used+0x1a88>
popa
arpl   %sp,0x65(%ebx)
jae    e33d <_IO_stdin_used+0x1b01>
and    %al,(%eax)
push   %ebp
push   %ebx
inc    %ebp
push   %edx
and    %al,(%eax)
push   %ebp
push   %ebx
push   %edx
sub    $0x5247004f,%eax
dec    %edi
push   %ebp
push   %eax
add    %al,0x52(%edi)
push   %eax
sub    $0x414d004f,%eax
push   %ebx
dec    %ebx
and    %al,(%eax)
dec    %edi
push   %esp
dec    %eax
inc    %ebp
push   %edx
add    %dl,0x50(%ebx)
inc    %ebp
inc    %ebx
dec    %esp
add    %dl,0x4e(%ebp)
dec    %ebx
push   %edi
dec    %esi
add    %dl,0x6f(%eax)
jae    e369 <_IO_stdin_used+0x1b2d>
js     e322 <_IO_stdin_used+0x1ae6>
fs
gs
jae    e369 <_IO_stdin_used+0x1b2d>
jb     e371 <_IO_stdin_used+0x1b35>
jo     e37e <_IO_stdin_used+0x1b42>
outsl  %ds:(%esi),(%dx)
jb     e32d <_IO_stdin_used+0x1af1>
cmp    (%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
popa
arpl   %sp,0x63(%ebx)
outsb  %ds:(%esi),(%dx)
je     e33a <_IO_stdin_used+0x1afe>
and    $0x20000a64,%eax
and    %ah,(%eax)
and    %ah,0x66(%ebp,%eiz,2)
arpl   %bp,0x74(%esi)
and    %ah,0x20000a64
and    %ah,(%eax)
and    %ah,0x69(%esi)
jb     e3a8 <_IO_stdin_used+0x1b6c>
je     e39b <_IO_stdin_used+0x1b5f>
gs
data16
and    %ah,0x20000a64
and    %ah,(%eax)
and    %ch,0x6f(%ebp)
fs and %bh,%fs:%gs:(%edx)
and    %dh,(%eax)
and    $0xa6f3330,%eax
add    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x67(%ecx,%eiz,2)
jae    e3cc <_IO_stdin_used+0x1b90>
gs
je     e37c <_IO_stdin_used+0x1b40>
cmp    (%eax),%ah
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     e36f <_IO_stdin_used+0x1b33>
add    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%esi)
jb     e3e1 <_IO_stdin_used+0x1ba5>
imul   $0xa642520,0x6e(%edi),%ebp
add    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%esi)
popa
addr16 jae e3a0 <_IO_stdin_used+0x1b64>
xor    %bh,0x25(%eax)
xor    %dh,(%edx)
js     e391 <_IO_stdin_used+0x1b55>
add    %ch,(%edx)
sub    (%eax),%ah
dec    %esi
push   %ebp
dec    %esp
dec    %esp
and    %al,0x43(%ecx)
dec    %esp
add    %ah,(%eax)
and    %ah,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dl,0x41(%ebx)
inc    %ebx
dec    %esp
add    %ch,(%edx)
sub    (%eax),%ah
and    %ah,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    e41c <_IO_stdin_used+0x1be0>
and    %dl,0x49(%ebx)
inc    %esp
add    %ch,(%edx)
sub    (%eax),%ah
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    e424 <_IO_stdin_used+0x1be8>
and    %ch,%fs:0x6f(%esi)
je     e3de <_IO_stdin_used+0x1ba2>
addr16
gs
je     e3e2 <_IO_stdin_used+0x1ba6>
outsl  %ds:(%esi),(%dx)
ja     e433 <_IO_stdin_used+0x1bf7>
gs
jb     e3e8 <_IO_stdin_used+0x1bac>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x23000a73
and    %dl,0x73(%ebp)
gs
jb     e3f6 <_IO_stdin_used+0x1bba>
insl   (%dx),%es:(%edi)
popa
jo     e44a <_IO_stdin_used+0x1c0e>
imul   $0x6f727020,0x67(%esi),%ebp
jo     e452 <_IO_stdin_used+0x1c16>
jae    e446 <_IO_stdin_used+0x1c0a>
insb   (%dx),%es:(%edi)
and    %bh,(%edx)
add    %ah,0x3a3a64
jne    e463 <_IO_stdin_used+0x1c27>
gs
jb     e42d <_IO_stdin_used+0x1bf1>
cmp    (%eax),%al
cmp    0x3a003a64,%ah
addr16 jb e46d <_IO_stdin_used+0x1c31>
jne    e470 <_IO_stdin_used+0x1c34>
cmp    (%eax),%al
cmp    (%edx),%bh
push   %ebx
sub    $0x252d6425,%eax
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jne    e40e <_IO_stdin_used+0x1bd2>
sub    $0x30303031,%eax
xor    %al,(%eax)
sub    $0x20,%al
je     e481 <_IO_stdin_used+0x1c45>
outsb  %gs:(%esi),(%dx)
add    %ah,(%ebx)
and    %al,0x78(%ebp)
popa
insl   (%dx),%es:(%edi)
jo     e490 <_IO_stdin_used+0x1c54>
and    %bh,%gs:(%edx)
and    %al,(%eax)
das
cs
dec    %esi
push   %esp
inc    %esi
push   %ebx
sub    $0x552f4733,%eax
jae    e49b <_IO_stdin_used+0x1c5f>
jb     e485 <_IO_stdin_used+0x1c49>
popa
jo     e4ab <_IO_stdin_used+0x1c6f>
imul   $0x202a2a00,0x67(%esi),%ebp
dec    %esi
outsl  %ds:(%esi),(%dx)
je     e466 <_IO_stdin_used+0x1c2a>
jo     e4b7 <_IO_stdin_used+0x1c7b>
jae    e4bd <_IO_stdin_used+0x1c81>
imul   $0x203a2065,0x6c(%edx),%esp
add    %al,0x6f(%ebx)
jne    e4c2 <_IO_stdin_used+0x1c86>
and    %ch,%fs:0x6f(%esi)
je     e47c <_IO_stdin_used+0x1c40>
outsl  %ds:(%esi),(%dx)
jo     e4c4 <_IO_stdin_used+0x1c88>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    e4d3 <_IO_stdin_used+0x1c97>
and    %ah,%gs:0x43000a73
outsl  %ds:(%esi),(%dx)
jne    e4dc <_IO_stdin_used+0x1ca0>
and    %ch,%fs:0x6f(%esi)
je     e496 <_IO_stdin_used+0x1c5a>
outsl  %ds:(%esi),(%dx)
jo     e4de <_IO_stdin_used+0x1ca2>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0xa495041,0x20(%ecx,%edi,2),%esi
add    %al,0x6e(%ebp)
je     e4ff <_IO_stdin_used+0x1cc3>
jns    e4af <_IO_stdin_used+0x1c73>
popa
je     e4b2 <_IO_stdin_used+0x1c76>
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
js     e4b8 <_IO_stdin_used+0x1c7c>
ja     e4fb <_IO_stdin_used+0x1cbf>
jae    e4bc <_IO_stdin_used+0x1c80>
fs
gs
insb   (%dx),%es:(%edi)
gs
je     e507 <_IO_stdin_used+0x1ccb>
or     %fs:(%eax),%al
dec    %eax
popa
jae    e511 <_IO_stdin_used+0x1cd5>
or     %esp,(%eax)
xor    %bh,0x25(%eax)
xor    %bh,(%eax)
insb   (%dx),%es:(%edi)
js     e4d3 <_IO_stdin_used+0x1c97>
sub    %ah,0x6f(%ebx)
jb     e52a <_IO_stdin_used+0x1cee>
arpl   %si,%gs:0xa(%ecx,%ebp,1)
add    %cl,0x66(%edi)
data16
jae    e528 <_IO_stdin_used+0x1cec>
je     e4ce <_IO_stdin_used+0x1c92>
and    %dh,(%eax)
js     e4ee <_IO_stdin_used+0x1cb2>
insb   (%dx),%es:(%edi)
js     e4ec <_IO_stdin_used+0x1cb0>
sub    %ah,0x6f(%ebx)
jb     e543 <_IO_stdin_used+0x1d07>
arpl   %si,%gs:0xa(%ecx,%ebp,1)
add    %cl,0x65(%ebx)
jns    e4e4 <_IO_stdin_used+0x1ca8>
and    %dh,(%eax)
js     e504 <_IO_stdin_used+0x1cc8>
js     e4eb <_IO_stdin_used+0x1caf>
add    %ch,(%edx)
sub    (%eax),%ah
outsl  %ds:(%esi),(%dx)
data16
data16
jae    e54f <_IO_stdin_used+0x1d13>
je     e50c <_IO_stdin_used+0x1cd0>
and    $0x69282064,%eax
outsb  %ds:(%esi),(%dx)
jae    e568 <_IO_stdin_used+0x1d2c>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%edx)
xor    %ch,(%ecx)
or     (%eax),%al
sub    (%edx),%ch
and    %dh,0x69(%ebx)
jp     e56c <_IO_stdin_used+0x1d30>
and    %ah,0x69282064
outsb  %ds:(%esi),(%dx)
jae    e584 <_IO_stdin_used+0x1d48>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%edx)
xor    %ch,(%ecx)
or     (%eax),%al
sub    (%edx),%ch
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
xor    %esp,(%eax)
and    $0x69282064,%eax
outsb  %ds:(%esi),(%dx)
jae    e5a1 <_IO_stdin_used+0x1d65>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%eax)
sub    %ecx,(%edx)
add    %ch,(%edx)
sub    (%eax),%ah
imul   $0x2520,0x32(%esp,%ebp,2),%bp
and    %ch,%fs:(%eax)
imul   $0x64616574,0x73(%esi),%ebp
and    %ch,0x66(%edi)
and    %dh,(%eax)
sub    %ecx,(%edx)
add    %cl,0x61(%eax)
jae    e5c0 <_IO_stdin_used+0x1d84>
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x28206e6f,0x69(%ebx),%esi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     e588 <_IO_stdin_used+0x1d4c>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     e5de <_IO_stdin_used+0x1da2>
jb     e59a <_IO_stdin_used+0x1d5e>
add    %ch,(%edx)
sub    (%eax),%ah
outsl  %ds:(%esi),(%dx)
data16
data16
jae    e5df <_IO_stdin_used+0x1da3>
je     e59c <_IO_stdin_used+0x1d60>
and    $0x69282064,%eax
outsb  %ds:(%esi),(%dx)
jae    e5f8 <_IO_stdin_used+0x1dbc>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,(%edx)
xor    $0x29,%al
or     (%eax),%al
imul   $0x6600,0x73(%ebp,%eiz,2),%bp
imul   $0x6d6d7553,0x0(%ebp,%eiz,2),%ebp
popa
jb     e61b <_IO_stdin_used+0x1ddf>
and    %ch,0x66(%edi)
and    %dh,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x2079656b,0x20(%ecx,%edi,2),%esi
jne    e628 <_IO_stdin_used+0x1dec>
and    %bh,%gs:(%edx)
add    %cl,0x65(%ebx)
jns    e5dd <_IO_stdin_used+0x1da1>
xor    %bh,0x25(%eax)
js     e5e2 <_IO_stdin_used+0x1da6>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     e5e6 <_IO_stdin_used+0x1daa>
imul   $0x53445320,0x0(%esi),%ebp
sub    $0x53200031,%eax
inc    %esp
push   %ebx
sub    $0x53200032,%eax
dec    %ecx
dec    %ecx
add    %ah,(%eax)
push   %ebx
inc    %esp
dec    %eax
add    %cl,0x65(%ebx)
jns    e605 <_IO_stdin_used+0x1dc9>
xor    %bh,0x25(%eax)
js     e60a <_IO_stdin_used+0x1dce>
jne    e65f <_IO_stdin_used+0x1e23>
gs and %ah,%fs:%gs:0x79(%edx)
and    %ah,0x73252064
or     (%eax),%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    e65e <_IO_stdin_used+0x1e22>
insb   (%dx),%es:(%edi)
imul   $0x6f697470,0x6f(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
and    %ch,0xa6325
push   %ebp
jae    e671 <_IO_stdin_used+0x1e35>
cmp    %gs:(%bp,%si),%cl
add    %ah,(%eax)
and    %ah,(%eax)
jae    e67f <_IO_stdin_used+0x1e43>
arpl   %sp,0x75(%ecx)
imul   $0x665b2068,%fs:0x2d(%eax,%eiz,1),%esi
66
imul   $0x2020000a,0x5d(%ebp,%eiz,2),%ebp
and    %dh,0x65(%ebx)
arpl   %sp,0x75(%ecx)
imul   $0x76725b61,%fs:0x2d(%eax,%eiz,1),%esi
76
pop    %ebp
and    %dh,0x6f(%esi)
insb   (%dx),%es:(%edi)
jne    e6b1 <_IO_stdin_used+0x1e75>
or     %gs:(%eax),%al
or     %esp,0x75(%ecx)
imul   $0x76206568,%fs:0x74(%eax,%eiz,1),%esi
76
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    e6c4 <_IO_stdin_used+0x1e88>
or     %gs:(%eax),%al
and    %ah,(%eax)
and    %dh,0x65(%ebx)
arpl   %sp,0x75(%ecx)
imul   $0x205d762d,%fs:0x5b(%eax,%eiz,1),%esi
20
jbe    e6dc <_IO_stdin_used+0x1ea0>
insb   (%dx),%es:(%edi)
jne    e6dd <_IO_stdin_used+0x1ea1>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    %ah,(%eax)
and    %dh,0x65(%ebx)
arpl   %sp,0x75(%ecx)
imul   $0x6f762075,%fs:0x2d(%eax,%eiz,1),%esi
6f
insb   (%dx),%es:(%edi)
jne    e6f9 <_IO_stdin_used+0x1ebd>
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
and    %ah,(%eax)
and    %dh,0x65(%ebx)
arpl   %sp,0x75(%ecx)
imul   $0x6f6d2075,%fs:0x2d(%eax,%eiz,1),%esi
6f
jne    e715 <_IO_stdin_used+0x1ed9>
je     e70e <_IO_stdin_used+0x1ed2>
fs
sub    $0x656c6966,%eax
or     (%eax),%al
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,(%eax)
je     e71a <_IO_stdin_used+0x1ede>
bound  %ebp,0x20(%ebp,%eiz,2)
popa
je     e6e0 <_IO_stdin_used+0x1ea4>
and    $0x73000a73,%eax
arpl   %sp,%gs:0x75(%ecx)
imul   $0x72696400,%fs:0x63(%esi,%ebp,1),%esi
72
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    e6d9 <_IO_stdin_used+0x1e9d>
or     0x75(%ecx),%al
imul   $0x53242067,%fs:0x6e(%ecx,%ebp,2),%esi
53
inc    %esp
push   %ebx
sub    $0x410a0032,%eax
jne    e752 <_IO_stdin_used+0x1f16>
imul   $0x53242067,0x6e(%ecx,%ebp,2),%esi
inc    %esp
push   %ebx
sub    $0x6e450031,%eax
je     e771 <_IO_stdin_used+0x1f35>
jns    e721 <_IO_stdin_used+0x1ee5>
jae    e76c <_IO_stdin_used+0x1f30>
jp     e76a <_IO_stdin_used+0x1f2e>
and    %ah,0x79622064
je     e772 <_IO_stdin_used+0x1f36>
jae    e719 <_IO_stdin_used+0x1edd>
add    %al,0x73(%ecx)
jae    e789 <_IO_stdin_used+0x1f4d>
insl   (%dx),%es:(%edi)
imul   $0x20732520,0x67(%esi),%ebp
fs
gs
jae    e783 <_IO_stdin_used+0x1f47>
jb     e78b <_IO_stdin_used+0x1f4f>
jo     e798 <_IO_stdin_used+0x1f5c>
outsl  %ds:(%esi),(%dx)
jb     e731 <_IO_stdin_used+0x1ef5>
add    %cl,0x6e(%ecx)
je     e791 <_IO_stdin_used+0x1f55>
jb     e79e <_IO_stdin_used+0x1f62>
jb     e795 <_IO_stdin_used+0x1f59>
je     e797 <_IO_stdin_used+0x1f5b>
and    %dl,%fs:0x6e(%ebp)
imul   $0x65646f6d,0x20(%eax),%edi
and    %dh,(%eax)
and    $0xa6f3330,%eax
add    %ah,0x72652064
jb     e7bb <_IO_stdin_used+0x1f7f>
jb     e7c1 <_IO_stdin_used+0x1f85>
and    %ch,0x6e(%ecx)
and    %ah,(%ebx,%edx,2)
inc    %esp
push   %ebx
sub    $0xa6325,%eax
push   %esi
popa
insb   (%dx),%es:(%edi)
imul   $0x7972746e,0x65(%eax,%eiz,1),%esp
and    %ah,0x6f(%esi)
jb     e78b <_IO_stdin_used+0x1f4f>
imul   $0x20,0x79(%ebp),%esp
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
js     e77f <_IO_stdin_used+0x1f43>
add    %ah,(%eax)
and    %ah,(%eax)
push   $0x20687361
xor    %bh,0x25(%eax)
js     e78d <_IO_stdin_used+0x1f51>
add    %ah,(%eax)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
data16
data16
jae    e7f1 <_IO_stdin_used+0x1fb5>
je     e7ae <_IO_stdin_used+0x1f72>
xor    %bh,0x25(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
js     e79f <_IO_stdin_used+0x1f63>
add    %ah,(%eax)
and    %ah,(%eax)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je e807 <_IO_stdin_used+0x1fcb>
and    %ah,0xa646c
or     0x75(%ecx),%al
imul   $0x53242067,%fs:0x6e(%ecx,%ebp,2),%esi
53
dec    %ecx
dec    %ecx
add    %ah,0x61762064
insb   (%dx),%es:(%edi)
imul   $0x6972746e,0x65(%eax,%eiz,1),%esp
gs
jae    e7e5 <_IO_stdin_used+0x1fa9>
imul   $0x49495324,0x20(%esi),%ebp
or     (%eax),%al
and    $0x72652064,%eax
jb     e844 <_IO_stdin_used+0x2008>
jb     e84a <_IO_stdin_used+0x200e>
and    %ch,0x6e(%ecx)
and    %ah,(%ebx,%edx,2)
dec    %ecx
dec    %ecx
or     (%eax),%al
or     0x75(%ecx),%al
imul   $0x53242067,%fs:0x6e(%ecx,%ebp,2),%esi
53
inc    %esp
dec    %eax
add    %ah,0x61762064
insb   (%dx),%es:(%edi)
imul   $0x6972746e,0x65(%eax,%eiz,1),%esp
gs
jae    e821 <_IO_stdin_used+0x1fe5>
imul   $0x48445324,0x20(%esi),%ebp
or     (%eax),%al
and    $0x72652064,%eax
jb     e880 <_IO_stdin_used+0x2044>
jb     e886 <_IO_stdin_used+0x204a>
and    %ch,0x6e(%ecx)
and    %ah,(%ebx,%edx,2)
inc    %esp
dec    %eax
or     (%eax),%al
and    %dh,0x20(%edi,%ebp,2)
xor    %bh,0x25(%eax)
js     e830 <_IO_stdin_used+0x1ff4>
add    %ch,(%edx)
sub    (%eax),%ah
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    e89a <_IO_stdin_used+0x205e>
and    %ch,%fs:0x6f(%esi)
je     e854 <_IO_stdin_used+0x2018>
jae    e89b <_IO_stdin_used+0x205f>
je     e858 <_IO_stdin_used+0x201c>
je     e8a2 <_IO_stdin_used+0x2066>
and    %al,%gs:0x43(%ecx)
dec    %esp
and    %ch,0x66(%edi)
and    %al,(%eax)
inc    %ecx
inc    %ebx
dec    %esp
and    %ch,0x61(%eax)
jae    e86c <_IO_stdin_used+0x2030>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ah,0x70(%ecx)
jo     e8c1 <_IO_stdin_used+0x2085>
imul   $0x206f7420,0x64(%ebp),%esp
add    %cl,(%ecx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     e8d8 <_IO_stdin_used+0x209c>
je     e8ca <_IO_stdin_used+0x208e>
and    %ch,%fs:0x61(%eax)
jae    e8d3 <_IO_stdin_used+0x2097>
and    %bh,(%edx)
and    %dh,(%eax)
js     e896 <_IO_stdin_used+0x205a>
xor    %bh,(%eax)
insb   (%dx),%es:(%edi)
js     e880 <_IO_stdin_used+0x2044>
add    %ah,(%eax)
and    %ah,(%eax)
and    %al,0x73(%ebp)
je     e8e8 <_IO_stdin_used+0x20ac>
insl   (%dx),%es:(%edi)
popa
je     e8e8 <_IO_stdin_used+0x20ac>
and    %dh,%fs:0x70(%ecx,%edi,2)
and    %bh,%gs:(%edx)
and    %ah,0x21000a73
and    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
jo     e90d <_IO_stdin_used+0x20d1>
je     e8ff <_IO_stdin_used+0x20c3>
and    %ch,%fs:0x61(%eax)
jae    e908 <_IO_stdin_used+0x20cc>
and    %bh,(%edx)
and    %dh,(%eax)
js     e8a6 <_IO_stdin_used+0x206a>
push   %ebx
arpl   %si,%gs:0x72(%ebp)
imul   $0x2079656b,0x20(%ecx,%edi,2),%esi
cmp    (%eax),%ah
xor    %bh,0x0(%eax)
push   %edi
imul   $0x2073776f,0x64(%esi),%ebp
popa
je     e937 <_IO_stdin_used+0x20fb>
jb     e92e <_IO_stdin_used+0x20f2>
bound  %esp,(%eax)
cmp    (%eax),%ah
xor    %bh,0x0(%eax)
inc    %esi
imul   $0x72694400,0x20(%ebp,%eiz,2),%ebp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    e8fc <_IO_stdin_used+0x20c0>
add    %ah,0x43412064
dec    %esp
jae    e905 <_IO_stdin_used+0x20c9>
push   $0x20657661
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ah,0x70(%ecx)
jo     e95f <_IO_stdin_used+0x2123>
imul   $0x6944000a,0x64(%ebp),%esp
jb     e961 <_IO_stdin_used+0x2125>
arpl   %si,0x72(%edi,%ebp,2)
jns    e902 <_IO_stdin_used+0x20c6>
inc    %esi
imul   $0x25207325,0x0(%ebp,%eiz,2),%ebp
jae    e917 <_IO_stdin_used+0x20db>
add    %ch,(%edx)
sub    (%eax),%ah
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    e981 <_IO_stdin_used+0x2145>
and    %ch,%fs:0x6f(%esi)
je     e93b <_IO_stdin_used+0x20ff>
addr16
gs
je     e93f <_IO_stdin_used+0x2103>
imul   $0x7461,0x20(%ebp,%eiz,2),%bp
je     e99a <_IO_stdin_used+0x215e>
imul   $0x75636553,0x0(%edx),%esp
jb     e99a <_IO_stdin_used+0x215e>
je     e9ac <_IO_stdin_used+0x2170>
and    %ch,0x65(%ebx)
jns    e958 <_IO_stdin_used+0x211c>
cmp    (%eax),%ah
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %dl,%gs:0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x2079656b,0x20(%ecx,%edi,2),%esi
cmp    (%eax),%ah
xor    %bh,0x25(%eax)
js     e95d <_IO_stdin_used+0x2121>
add    %ah,0x73252073
add    %ah,(%eax)
cmp    (%eax),%ah
imul   $0x20,0x79(%ebp),%esp
xor    %bh,0x25(%eax)
js     e986 <_IO_stdin_used+0x214a>
outsl  %ds:(%esi),(%dx)
jne    e9dd <_IO_stdin_used+0x21a1>
and    %ch,0x66(%edi)
and    %dh,0x61(%edx)
outsb  %ds:(%esi),(%dx)
or     %gs:(%bx,%si),%al
and    %bh,(%edx)
and    %ch,0x6f(%esi)
and    %ch,0x65(%ebx)
jns    e97e <_IO_stdin_used+0x2142>
and    %bh,(%edx)
and    %ch,0x65(%ebx)
jns    e9a5 <_IO_stdin_used+0x2169>
xor    %bh,0x25(%eax)
js     e994 <_IO_stdin_used+0x2158>
add    %ah,(%ebx)
and    %ah,0x73252073
and    %ch,0x61(%eax)
jae    e9ff <_IO_stdin_used+0x21c3>
and    %dh,(%eax)
js     e9c0 <_IO_stdin_used+0x2184>
insb   (%dx),%es:(%edi)
js     e9a8 <_IO_stdin_used+0x216c>
add    %dl,0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     ea19 <_IO_stdin_used+0x21dd>
and    %ah,0x74(%ecx)
je     ea1d <_IO_stdin_used+0x21e1>
imul   $0x7830203a,0x20(%edx),%esp
and    $0x20000a78,%eax
and    %ah,(%eax)
sub    %al,0x61(%esi)
imul   $0x2a2a0029,0x64(%ebp,%eiz,2),%ebp
and    %al,0x6f(%ebx)
jne    ea35 <_IO_stdin_used+0x21f9>
and    %ch,%fs:0x6f(%esi)
je     e9ef <_IO_stdin_used+0x21b3>
popa
arpl   %sp,0x65(%ebx)
jae    ea48 <_IO_stdin_used+0x220c>
and    %ah,0x25000a73
jae    e9fd <_IO_stdin_used+0x21c1>
add    %dh,0x79(%ebx)
jae    ea56 <_IO_stdin_used+0x221a>
gs
insl   (%dx),%es:(%edi)
outsb  %cs:(%esi),(%dx)
je     ea4e <_IO_stdin_used+0x2212>
jae    ea49 <_IO_stdin_used+0x220d>
popa
arpl   %bp,0x73(%eax,%eax,1)
jns    ea64 <_IO_stdin_used+0x2228>
je     ea58 <_IO_stdin_used+0x221c>
insl   (%dx),%es:(%edi)
outsb  %cs:(%esi),(%dx)
je     ea5e <_IO_stdin_used+0x2222>
jae    ea59 <_IO_stdin_used+0x221d>
popa
je     ea71 <_IO_stdin_used+0x2235>
jb     ea68 <_IO_stdin_used+0x222c>
bound  %eax,(%eax)
inc    %esp
gs
jae    ea68 <_IO_stdin_used+0x222c>
jb     ea70 <_IO_stdin_used+0x2234>
jo     ea7d <_IO_stdin_used+0x2241>
outsl  %ds:(%esi),(%dx)
jb     ea2c <_IO_stdin_used+0x21f0>
popaw
imul   $0x696e6173,0x20(%ebx,%esi,2),%ebp
je     ea91 <_IO_stdin_used+0x2255>
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x0(%ebx)
and    $0x6f6e2073,%eax
je     ea46 <_IO_stdin_used+0x220a>
outsw  %ds:(%esi),(%dx)
jne    ea98 <_IO_stdin_used+0x225c>
or     %fs:(%eax),%al
push   %eax
outsl  %ds:(%esi),(%dx)
jae    ea9a <_IO_stdin_used+0x225e>
js     ea53 <_IO_stdin_used+0x2217>
gs
jno    eaab <_IO_stdin_used+0x226f>
imul   $0x746e656c,0x61(%esi),%esi
and    %ch,0x66(%edi)
and    %ch,0x6c(%edi)
and    %al,%fs:0x43(%ecx)
dec    %esp
and    %bh,(%edx)
add    %cl,0x65(%esi)
ja     ea6f <_IO_stdin_used+0x2233>
push   %eax
outsl  %ds:(%esi),(%dx)
jae    eabc <_IO_stdin_used+0x2280>
js     ea75 <_IO_stdin_used+0x2239>
inc    %ecx
inc    %ebx
dec    %esp
and    %bh,(%edx)
add    %bh,0x6957203d
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     ead8 <_IO_stdin_used+0x229c>
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs
jb     ea8c <_IO_stdin_used+0x2250>
insl   (%dx),%es:(%edi)
imul   $0x68632074,0x68(%edi),%esp
popa
outsb  %ds:(%esi),(%dx)
add    %cl,%gs:0x65(%bp)
ja     ea9d <_IO_stdin_used+0x2261>
dec    %esi
push   %esp
inc    %esi
push   %ebx
and    %dh,0x65(%ebx)
arpl   %si,0x72(%ebp)
imul   $0x63736564,0x20(%ecx,%edi,2),%esi
jb     eafa <_IO_stdin_used+0x22be>
jo     eb07 <_IO_stdin_used+0x22cb>
outsl  %ds:(%esi),(%dx)
jb     ea96 <_IO_stdin_used+0x225a>
inc    %ebp
js     eb09 <_IO_stdin_used+0x22cd>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ch,0x61(%eax)
jae    eb0b <_IO_stdin_used+0x22cf>
and    %bh,(%edx)
and    %dh,(%eax)
js     eace <_IO_stdin_used+0x2292>
xor    %bh,(%eax)
insb   (%dx),%es:(%edi)
js     eab8 <_IO_stdin_used+0x227c>
add    %ch,(%edx)
sub    (%eax),%ah
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jne    eb2e <_IO_stdin_used+0x22f2>
fs
popa
je     eb27 <_IO_stdin_used+0x22eb>
and    %ah,0x53000a73
arpl   %si,%gs:0x72(%ebp)
imul   $0x63736564,0x20(%ecx,%edi,2),%esi
jb     eb3f <_IO_stdin_used+0x2303>
jo     eb4c <_IO_stdin_used+0x2310>
outsl  %ds:(%esi),(%dx)
jb     eadb <_IO_stdin_used+0x229f>
and    (%edx),%ecx
and    (%eax),%eax
and    (%eax),%esp
and    $0x65732064,%eax
arpl   %si,0x72(%ebp)
imul   $0x7379656b,0x20(%ecx,%edi,2),%esi
or     (%eax),%al
or     0x65(%edx),%dl
arpl   %si,0x72(%ebp)
jae    eb64 <_IO_stdin_used+0x2328>
jbe    eb62 <_IO_stdin_used+0x2326>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x68(%ebx)
arpl   %bp,%gs:0x0(%ebx)
push   %ebx
jne    eb79 <_IO_stdin_used+0x233d>
insl   (%dx),%es:(%edi)
popa
jb     eb89 <_IO_stdin_used+0x234d>
add    %ch,(%edi)
add    %al,0x61(%edx)
and    %al,%fs:0x43(%ecx)
dec    %esp
and    %ah,0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     eb97 <_IO_stdin_used+0x235b>
imul   $0x6177000a,0x6e(%edi),%ebp
jb     eb9a <_IO_stdin_used+0x235e>
imul   $0x65772073,0x67(%esi),%ebp
jb     eb9a <_IO_stdin_used+0x235e>
add    %dh,0x61(%edi)
jb     eba8 <_IO_stdin_used+0x236c>
imul   $0x73617720,0x67(%esi),%ebp
add    %ah,0x72(%ebp)
jb     ebb5 <_IO_stdin_used+0x2379>
jb     ebbb <_IO_stdin_used+0x237f>
and    %dh,0x65(%edi)
jb     ebb2 <_IO_stdin_used+0x2376>
add    %ah,0x72(%ebp)
jb     ebc1 <_IO_stdin_used+0x2385>
jb     eb74 <_IO_stdin_used+0x2338>
ja     ebb7 <_IO_stdin_used+0x237b>
jae    eb58 <_IO_stdin_used+0x231c>
jb     ebbc <_IO_stdin_used+0x2380>
add    %al,0x6f(%ebx)
jne    ebcb <_IO_stdin_used+0x238f>
and    %ch,%fs:0x6f(%esi)
je     eb85 <_IO_stdin_used+0x2349>
outsl  %ds:(%esi),(%dx)
jo     ebcd <_IO_stdin_used+0x2391>
outsb  %ds:(%esi),(%dx)
and    %ah,0x2a000a73
sub    (%eax),%ah
and    $0x73252075,%eax
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs or  %fs:%gs:(%eax),%al
sub    (%edx),%ch
and    %ah,0x73252075
and    %ah,0x6f(%esi)
jne    ebfd <_IO_stdin_used+0x23c1>
or     %fs:(%eax),%al
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     ec08 <_IO_stdin_used+0x23cc>
jb     ec0e <_IO_stdin_used+0x23d2>
and    %dh,0x65(%edi)
jb     ec05 <_IO_stdin_used+0x23c9>
and    %ah,0x6f(%esi)
jne    ec13 <_IO_stdin_used+0x23d7>
add    %cl,%fs:0x6f(%esi)
and    %ah,0x72(%ebp)
jb     ec1d <_IO_stdin_used+0x23e1>
jb     ec23 <_IO_stdin_used+0x23e7>
and    %dh,0x65(%edi)
jb     ec1a <_IO_stdin_used+0x23de>
and    %ah,0x6f(%esi)
jne    ec28 <_IO_stdin_used+0x23ec>
or     %fs:(%eax),%al
je     ec24 <_IO_stdin_used+0x23e8>
jb     ec2e <_IO_stdin_used+0x23f2>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %al,(%eax)
add    %al,(%eax)
and    (%edi),%cl
(bad)
pushl  (%esi)
or     %bh,%bh
pushl  (%esi)
or     %bh,%bh
pushl  (%esi)
or     %bh,%bh
decl   0x36ffff10(%ebp)
or     %bh,%bh
lcall  *-0x1(%eax,%edx,1)
ljmp   *(%ebx)
adc    %bh,%bh
pushl  (%esi)
or     %bh,%bh
pushl  (%esi)
or     %bh,%bh
pushl  (%esi)
or     %bh,%bh
(bad)
cli
(bad)
decl   -0x1f0000d6(%eax)
sub    %edi,%edi
decl   0x2a(%eax)
(bad)
decl   0x78ffff2a(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   0x68ffff2a(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   0x60ffff2a(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   0x58ffff2a(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   -0x770000d6(%eax)
sub    %bh,%bh
decl   0x50ffff2a(%eax)
sub    %bh,%bh
dec    %eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
pushl  -0x670000ae(%eax)
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
incl   -0x1f0000ae(%eax)
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
ljmp   *0x52(%eax)
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
jmp    *%eax
push   %edx
(bad)
dec    %eax
push   %edx
(bad)
call   *0x52(%eax)
(bad)
jmp    *%eax
push   %edx
(bad)
(bad)
cmp    %dl,-0x1(%edx)
call   *(%eax)
dec    %esi
(bad)
incl   -0x6200005e(%eax)
mov    %al,0xa3f0ffff
(bad)
call   *%eax
mov    %al,0xa448ffff
(bad)
ljmp   *(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
decl   (%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
(bad)
cmp    %ah,-0x5db40001(%edx)
(bad)
call   *%eax
movsb  %ds:(%esi),%es:(%edi)
(bad)
ljmp   *-0x5c(%eax)
(bad)
.byte 0xff
add    %ebx,(%ebx)
add    (%ebx),%edi
enter  $0x2,$0x0
pop    %eax
add    %al,(%eax)
add    %dl,-0x1b0000dc(%eax)
add    (%eax),%al
add    %al,0x29(%eax)
(bad)
(bad)
cmp    %bl,(%eax)
add    %al,(%eax)
pusha
xor    %edi,%edi
decl   (%eax)
add    (%eax),%eax
add    %ah,0x28ffff31(%eax)
add    (%eax),%eax
add    %dh,0x3cffff31(%eax)
add    (%eax),%eax
add    %al,%al
xor    %edi,%edi
call   *0x3(%eax)
add    %al,(%eax)
add    %dh,(%ebx)
(bad)
decl   0x33800000(%ebx,%eax,1)
(bad)
(bad)
mov    $0xa0000003,%esp
xor    %edi,%edi
call   *%eax
add    (%eax),%eax
add    %dl,%al
xor    %edi,%edi
push   %esp
add    (%eax),%eax
add    %al,0x34(%eax)
(bad)
ljmp   *(%eax)
add    $0x0,%al
add    %al,0x54ffff34(%eax)
add    $0x0,%al
add    %dh,%al
xor    $0xff,%al
decl   0x10000004(%eax)
xor    $0x49cffff,%eax
add    %al,(%eax)
inc    %eax
xor    $0x4c0ffff,%eax
add    %al,(%eax)
jo     ee7c <_IO_stdin_used+0x2640>
(bad)
incl   (%eax)
add    $0x36a00000,%eax
(bad)
call   *0x37500000(,%eax,1)
(bad)
incl   0x0(%ebp,%eax,1)
add    %al,0x39(%eax)
(bad)
(bad)
jl     ee67 <_IO_stdin_used+0x262b>
add    %al,(%eax)
jo     ee9f <_IO_stdin_used+0x2663>
(bad)
lcall  *0x39d00000(%ebp,%eax,1)
(bad)
dec    %eax
add    $0x3a600000,%eax
(bad)
(bad)
cld
add    $0x42500000,%eax
(bad)
(bad)
cmp    $0x6,%al
add    %al,(%eax)
add    %al,-0x1(%ebx)
(bad)
jl     ee90 <_IO_stdin_used+0x2654>
add    %al,(%eax)
mov    $0x43,%al
(bad)
(bad)
mov    $0x80000006,%esp
dec    %eax
(bad)
(bad)
cld
push   %es
add    %al,(%eax)
adcb   $0x3c,-0x1(%edi,%edi,8)
pop    %es
add    %al,(%eax)
and    %dl,-0x1(%esi)
(bad)
jl     eeb1 <_IO_stdin_used+0x2675>
add    %al,(%eax)
inc    %eax
push   %edi
(bad)
call   *%esp
pop    %es
add    %al,(%eax)
pusha
pop    %eax
(bad)
ljmp   *(%eax,%ecx,1)
add    %al,(%eax)
rcrb   -0x1(%eax)
jmp    *0x8(%eax)
add    %al,(%eax)
loopne ef21 <_IO_stdin_used+0x26e5>
(bad)
jmp    *0x20000008(%eax)
pop    %esp
(bad)
dec    %esp
or     %al,(%eax)
add    %ah,0x5c(%eax)
(bad)
(bad)
clc
or     %al,(%eax)
add    %ah,0x18ffff5c(%eax)
or     %eax,(%eax)
add    %ah,%al
pop    %esp
(bad)
(bad)
cmp    %cl,(%ecx)
add    %al,(%eax)
nop
pop    %ebp
(bad)
decl   0x5e400000(%ecx,%ecx,1)
(bad)
jmp    *%eax
or     %eax,(%eax)
add    %ah,0xcffff5e(%eax)
or     (%eax),%al
add    %al,(%eax)
pop    %edi
(bad)
(bad)
cmp    %cl,(%edx)
add    %al,(%eax)
pusha
pop    %edi
(bad)
call   *0x0(%edx,%ecx,1)
add    %dl,%al
pop    %edi
(bad)
incl   0x60900000(%edx,%ecx,1)
(bad)
pushl  0x66000000(%edx,%ecx,1)
(bad)
(bad)
clc
or     (%eax),%al
add    %al,0x2cffff66(%eax)
or     (%eax),%eax
add    %al,(%eax)
insl   (%dx),%es:(%edi)
(bad)
pushl  0xb(%eax)
add    %al,(%eax)
shrb   -0x1(%esi)
pushl  0x74100000(%ebx,%ecx,1)
(bad)
jmp    *(%esp,%ecx,1)
add    %al,(%eax)
add    %dh,-0x1(%edi)
jmp    *0x0(%esp,%ecx,1)
add    %dh,(%eax)
jnp    ef56 <_IO_stdin_used+0x271a>
jmp    *0x7e300000(%esp,%ecx,1)
(bad)
(bad)
cld
or     $0x0,%al
add    %dh,%al
test   %bh,%bh
call   *0x0(%ebp,%ecx,1)
add    %al,-0x7700007b(%eax)
or     $0x85f00000,%eax
(bad)
(bad)
mov    $0x9000000d,%esp
xchg   %bh,%bh
(bad)
cld
or     $0x86b00000,%eax
(bad)
call   *(%eax)
push   %cs
add    %al,(%eax)
rorb   $0x0,0xe68ffff(%edx)
add    %ah,-0x6f(%eax)
(bad)
inc    %eax
push   %cs
add    %al,(%eax)
pusha
xchg   %eax,%ebp
(bad)
lcall  *(%eax)
sldt   (%eax)
adcb   $0x0,0xf6cffff(%esi)
add    %ah,-0x66(%eax)
(bad)
inc    %esp
sldt   (%eax)
mov    $0x9b,%al
(bad)
lcall  *(%eax)
adc    %al,(%eax)
add    %ah,-0x77000062(%eax)
adc    %al,(%eax)
add    %al,-0x5a(%eax)
(bad)
dec    %esp
adc    %al,(%eax)
add    %ah,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
call   *(%ecx,%edx,1)
add    %al,(%eax)
(bad)
mov    $0xff,%al
incl   -0x4e900000(%ecx,%edx,1)
(bad)
dec    %esp
adc    %eax,(%eax)
add    %dl,0xcffffb2(%eax)
adc    (%eax),%al
add    %al,%al
mov    $0xff,%dl
ljmp   *(%eax)
adc    (%eax),%al
add    %al,-0x4c(%eax)
(bad)
incl   -0x3fffffee(%eax)
mov    $0xff,%ah
(bad)
mov    $0x40000012,%esp
mov    $0x12fcffff,%eax
add    %al,(%eax)
adc    %bh,0x136cff(%edi,%edi,8)
add    %ah,-0xf000043(%eax)
adc    (%eax),%eax
add    %dl,(%eax)
ret    $0xffff
xor    $0x14,%al
add    %al,(%eax)
nop
(bad)
mov    %ss,(%eax,%eax,1)
add    %dl,-0x3a(%eax)
(bad)
inc    %esp
adc    $0x0,%al
add    %ah,0x1cffffc8(%eax)
adc    $0xc9500000,%eax
(bad)
jmp    *0x0(%ebp,%edx,1)
add    %al,(%eax)
lret
(bad)
call   *%eax
adc    $0xcca00000,%eax
(bad)
call   *0x16(%eax)
add    %al,(%eax)
ror    %dh
(bad)
call   *%esp
push   %ss
add    %al,(%eax)
pusha
sar    %bh
incl   0x0(%edi,%edx,1)
add    %dl,%al
sar    %edi
lcall  *-0x26a00000(%edi,%edx,1)
(bad)
decl   (%eax,%ebx,1)
add    %al,(%eax)
rcr    %cl
(bad)
ljmp   *0x18(%eax)
add    %al,(%eax)
inc    %eax
(bad)
jmp    *-0x25b00000(%eax,%ebx,1)
(bad)
(bad)
.byte 0xb8
sbb    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     f0a3 <_IO_stdin_used+0x2867>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %edi,%edi
pushl  0x4(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     f0c3 <_IO_stdin_used+0x2887>
js     f0c1 <_IO_stdin_used+0x2885>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sbb    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,0x2e(%eax)
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
jo     f120 <_IO_stdin_used+0x28e4>
(bad)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %ch,-0x1(%esi,%ebp,1)
incl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %cl,0x68000000(%eax)
cs
(bad)
pushl  0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   %ebx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
les    (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
das
(bad)
(bad)
jl     f15a <_IO_stdin_used+0x291e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
hlt
add    %al,(%eax)
add    %bh,0x17ffff(%edi,%ebp,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     %al,(%ecx)
add    %al,(%eax)
enter  $0xff2f,$0xff
sub    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
(bad)
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
sub    $0x1,%al
add    %al,(%eax)
aam    $0x2f
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x180e4504(%esi)
add    0xe(%edx),%dl
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
pusha
add    %eax,(%eax)
add    %dl,(%eax)
xor    %bh,%bh
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0xec66c04(%esi)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %cl,0x30240000(%ecx,%eax,1)
(bad)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x180e4504(%esi)
add    0xe(%edx),%dl
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
rolb   $0x0,(%ecx)
add    %ah,0x30(%eax)
(bad)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,%ah
add    %eax,(%eax)
add    %ch,-0x1(%eax,%esi,1)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
pop    %edi
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
clc
add    %eax,(%eax)
add    %bh,0x30(%eax)
(bad)
jmp    *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffea,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
cmp    %al,(%edx)
add    %al,(%eax)
push   $0x2affff31
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
dec    %esp
add    (%eax),%al
add    %al,0xb0ffff(%ecx,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa7a0204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
jl     f30c <_IO_stdin_used+0x2ad0>
add    %al,(%eax)
add    $0x32,%al
(bad)
(bad)
out    %eax,(%dx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    %ah,%ah
or     (%esi),%cl
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x2,%ah
add    %al,(%eax)
mov    $0x28ffff33,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,%ah
add    (%eax),%al
add    %cl,%ah
xor    %edi,%edi
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
xor    $0xff,%al
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x180e4304(%esi)
add    0xe(%esi),%dh
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
xor    $0x3,%al
add    %al,(%eax)
pop    %esp
xor    $0xff,%al
(bad)
out    %al,(%dx)
pop    %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x3600e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
je     f405 <_IO_stdin_used+0x2bc9>
add    %al,(%eax)
or     $0x3c,%al
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x67,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x3,%ah
add    %al,(%eax)
jl     f482 <_IO_stdin_used+0x2c46>
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x67,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
hlt
add    (%eax),%eax
add    %ch,%ah
cmp    $0xff,%al
inc    %edi
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x3400e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
xor    $0x4,%al
add    %al,(%eax)
jl     f507 <_IO_stdin_used+0x2ccb>
(bad)
push   %ebx
or     (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc0,0x3400e4e
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
je     f506 <_IO_stdin_used+0x2cca>
add    %al,(%eax)
cmp    $0x4d,%al
(bad)
lcall  *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff87,0x3600e4e
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,0x4e9c0000(%esp,%eax,1)
(bad)
call   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6d,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,0x4f640000(,%eax,1)
(bad)
call   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6d,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
fs
add    $0x502c0000,%eax
(bad)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xe(%ecx),%bl
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
cwtl
add    $0x50680000,%eax
(bad)
call   *(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,%al
add    $0x53380000,%eax
(bad)
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ch,0xe(%eax)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
add    $0x6,%al
add    %al,(%eax)
dec    %esp
push   %ebx
(bad)
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ch,0xe(%eax)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
xor    %al,(%esi)
add    %al,(%eax)
pusha
push   %ebx
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pusha
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,0x6(%eax)
add    %al,(%eax)
adcb   $0xff,-0x1(%ebx)
xor    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
pusha
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %dh,0x6(%eax)
add    %al,(%eax)
mov    0xa9ffff53,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx),%ebp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
les    (%esi),%eax
add    %al,(%eax)
cld
push   %ebx
(bad)
jmp    *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5c,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx),%ebp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
pop    %es
add    %al,(%eax)
pop    %eax
push   %esp
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jns    f7c5 <_IO_stdin_used+0x2f89>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%esi),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %al,0x0(%edi,%eax,1)
add    %cl,0x60ffff(%esp,%edx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%esi),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,0x7(%eax)
add    %al,(%eax)
rclb   $0x5a,-0x1(%edi,%edi,8)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x39a7fdfe(%esi)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
mov    %es,(%edi)
add    %al,(%eax)
add    $0x55,%al
(bad)
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x39a5fdfc(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
mov    $0x44000007,%esp
push   %ebp
(bad)
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa900204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
in     (%dx),%al
pop    %es
add    %al,(%eax)
aam    $0x55
(bad)
ljmp   *0x5(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e51
push   %ebp
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
xor    %cl,(%eax)
add    %al,(%eax)
add    %bl,-0x1(%ebx)
(bad)
jg     f8c6 <_IO_stdin_used+0x308a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebx),%dh
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %ah,0x0(%eax,%ecx,1)
add    %cl,-0x1(%ebx,%ebx,2)
incl   0x6(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x21d00e51
xchg   %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ch,-0x77fffff8(%eax)
popa
(bad)
dec    %eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2d00e51
daa
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,%ah
or     %al,(%eax)
add    %dl,(%ebx,%eiz,2)
(bad)
pushl  (%ebx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff81,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
jns    f9b7 <_IO_stdin_used+0x317b>
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
loope  f9cf <_IO_stdin_used+0x3193>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
pop    %esp
or     %eax,(%eax)
add    %ah,%ah
addr16 (bad)
(bad)
in     (%dx),%al
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9b,0x3400e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pushf
or     %eax,(%eax)
add    %dl,0x423ffff(%edx,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffc5,0x3400e4e
add    (%edx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,%ah
or     %eax,(%eax)
add    %al,0x2f3ffff(%esi,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa4,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
sbb    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,(%edx,%ecx,1)
add    %al,(%eax)
sub    $0x71,%al
(bad)
(bad)
mov    $0x6,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x3400e4e
add    $0xa,%al
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
jbe    fb00 <_IO_stdin_used+0x32c4>
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%esi
add    %al,(%eax)
add    %cl,0x77940000(%edx,%ecx,1)
(bad)
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xe(%eax),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
rorb   $0x0,(%edx)
add    %dh,%al
ja     fb52 <_IO_stdin_used+0x3316>
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ecx),%bl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
hlt
or     (%eax),%al
add    %ch,(%eax,%edi,2)
(bad)
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x54300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%ebx,%ecx,1)
add    %al,(%eax)
mov    %?,-0x1(%eax)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,0xb(%eax)
add    %al,(%eax)
cwtl
js     fbda <_IO_stdin_used+0x339e>
decl   0x4
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7b,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
push   %ds
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,0x5000000b(%eax)
jl     fc32 <_IO_stdin_used+0x33f6>
call   *0x6(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x12,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
sub    %eax,(%edx,%ecx,1)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edx
add    %bh,%al
or     (%eax),%eax
add    %bl,-0x7e(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x3600e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx,%ecx,1),%esp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
push   %eax
or     $0x0,%al
add    %al,-0x7a(%eax)
(bad)
call   *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5d,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    (%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,-0x78f40000(%esp,%ecx,1)
(bad)
(bad)
fild   (%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x3600e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx,%ecx,1),%esp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
cld
or     $0x0,%al
add    %dl,0x148ffff(%edx,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x73,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    $0xe,%bl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,0xd(%eax)
add    %al,(%eax)
nop
mov    %edi,%edi
(bad)
call   fdeb <_IO_stdin_used+0x35af>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x59,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jne    fe25 <_IO_stdin_used+0x35e9>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    $0xa,%bh
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
rorb   $0xff,0x8e100000
call   *0x7(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x41c00e51
lea    (%edx,%ecx,1),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %al,(%esi,%ecx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xchg   %eax,%ebp
(bad)
(bad)
flds   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
inc    %esi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%esi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xc(%esi,%ecx,1),%edi
inc    %ebx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax,%eax,1)
add    %cl,0x0(%esi,%ecx,1)
add    %al,(%esi,%edx,4)
(bad)
jmp    *0x9(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe9,0x3600e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
movsl  %ds:(%esi),%es:(%edi)
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%eax
add    %bh,-0x60bc0000(%esi,%ecx,1)
(bad)
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%esi),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    $0xf,%al
add    %al,(%eax)
pushf
lahf
(bad)
lcall  *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdf,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
inc    %esp
sldt   (%eax)
jl     ff76 <_IO_stdin_used+0x373a>
(bad)
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec66002(%esi)
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %ah,0xf(%eax)
add    %al,(%eax)
nop
mov    0x180ffff,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x73,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
jnp    10034 <_IO_stdin_used+0x37f8>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,-0x47fffff1(%eax)
mov    0x7effff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x67,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,%ah
sldt   (%eax)
cld
mov    0x375ffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbb,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax,%eax,1),%ebp
add    %dh,(%eax,%edx,1)
add    %al,(%eax)
cmp    $0xa5,%al
(bad)
inc    %ebp
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
imul   $0xa,(%edx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %ah,-0x57640000(%eax,%edx,1)
(bad)
decl   0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e51
sahf
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%esp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
sub    %dl,(%ecx)
add    %al,(%eax)
test   $0xa9,%al
(bad)
jmp    *0x4(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e51
fiaddl (%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,0x0(%ecx,%edx,1)
add    %dl,%ah
lods   %ds:(%esi),%eax
(bad)
(bad)
jnp    10205 <_IO_stdin_used+0x39c9>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7b,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
jbe    10237 <_IO_stdin_used+0x39fb>
or     (%esi),%cl
adc    $0x44,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
les    (%ecx),%edx
add    %al,(%eax)
cld
mov    $0xff,%al
pushl  0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%eax),%dh
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,%ah
adc    %eax,(%eax)
add    %al,0x24bffff(%ecx,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
cmpsl  %es:(%edi),%ds:(%esi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %dl,0x0(%edx,%edx,1)
add    %bh,-0x1(%ebx,%esi,4)
ljmp   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%esi),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edi),%edx
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x9c000000
adc    (%eax),%al
add    %ah,%ah
mov    $0xff,%bl
ljmp   *0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    (%edx),%cs
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%edi
add    %cl,(%eax)
adc    (%eax),%eax
add    %ch,(%eax)
mov    $0xff,%ch
lcall  *0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffca,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
addb   $0x0,(%eax)
add    %cl,0x48000013(%eax)
mov    $0xff,%dh
ljmp   *(%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3c,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%ebp
add    %cl,(%esp,%edx,1)
add    %al,(%eax)
hlt
mov    $0xff,%bh
decl   0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0x43100e0a(%ebp),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%esp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x0(%esp,%edx,1)
add    %dl,(%ecx,%edi,4)
(bad)
jmp    *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff80,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
orb    $0xe,(%edx)
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %dl,%ah
adc    $0x0,%al
add    %ch,(%edx,%edi,4)
(bad)
incl   0x7(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff8,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
ret    $0xa02
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
mov    (%ecx),%es
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,0x0(%ebp,%edx,1)
add    %cl,-0x1(%ecx,%eax,8)
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%edx,%ecx,1),%dl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
sub    $0x0,%al
add    %al,(%eax)
jo     10613 <_IO_stdin_used+0x3dd7>
add    %al,(%eax)
add    %dl,(%ecx)
(bad)
ljmp   *0x6(%esi)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
inc    %ebx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa031c03,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ah,0x60000015(%eax)
sar    $0xff,%edi
arpl   %ax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,%ah
adc    $0xc1940000,%eax
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %dh,%al
adc    $0xc1900000,%eax
(bad)
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
loopne 11dbc <_IO_stdin_used+0x5580>
nop
push   %ds
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
fildl  (%edx)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
sub    $0x12,%al
add    %al,(%eax)
or     $0x24000000,%eax
enter  $0x0,$0x19
add    %al,(%eax)
add    %bl,0x1b0001(%ebp,%ebx,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
mov    0x1c00011d,%al
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
add    %eax,(%eax)
add    %al,0x10000000
or     %eax,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %al,0xa000002(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    $0xb0000,%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %ch,0x200011e(%eax)
add    %al,(%eax)
add    %dl,0x2(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,%ah
sldt   (%eax)
adc    %eax,(%eax)
add    %al,(%eax)
jl     11e4d <_IO_stdin_used+0x5611>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pusha
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%bl
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0xc(%edi)
sldt   (%eax)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0x38(%edi)
push   %cs
add    %al,(%eax)
cli
(bad)
ljmp   *0x4(%edi)
test   $0x1d,%al
add    %eax,(%eax)
data16
adc    (%eax),%al
add    %dh,0x12(%esi)
add    %al,(%eax)
xchg   %dl,(%edx)
add    %al,(%eax)
xchg   %eax,%esi
adc    (%eax),%al
add    %ah,-0x49ffffee(%esi)
adc    (%eax),%al
add    %al,%dh
adc    (%eax),%al
add    %dl,%dh
adc    (%eax),%al
add    %ah,%dh
adc    (%eax),%al
add    %dh,%dh
adc    (%eax),%al
add    %al,(%esi)
adc    (%eax),%eax
add    %dl,(%esi)
adc    (%eax),%eax
add    %ah,(%esi)
adc    (%eax),%eax
add    %dh,(%esi)
adc    (%eax),%eax
add    %al,0x13(%esi)
add    %al,(%eax)
push   %esi
adc    (%eax),%eax
add    %ah,0x13(%esi)
add    %al,(%eax)
jbe    11f0d <_IO_stdin_used+0x56d1>
add    %al,(%eax)
xchg   %dl,(%ebx)
add    %al,(%eax)
xchg   %eax,%esi
adc    (%eax),%eax
add    %ah,-0x49ffffed(%esi)
adc    (%eax),%eax
add    %al,%dh
adc    (%eax),%eax
add    %dl,%dh
adc    (%eax),%eax
add    %ah,%dh
adc    (%eax),%eax
add    %dh,%dh
adc    (%eax),%eax
add    %al,(%esi)
adc    $0x0,%al
add    %dl,(%esi)
adc    $0x0,%al
add    %ah,(%esi)
adc    $0x0,%al
add    %dh,(%esi)
adc    $0x0,%al
add    %al,0x14(%esi)
add    %al,(%eax)
push   %esi
adc    $0x0,%al
add    %ah,0x14(%esi)
add    %al,(%eax)
jbe    11f4e <_IO_stdin_used+0x5712>
add    %al,(%eax)
xchg   %dl,(%eax,%eax,1)
add    %dl,-0x59ffffec(%esi)
adc    $0x0,%al
add    %dh,-0x39ffffec(%esi)
adc    $0x0,%al
add    %dl,%dh
adc    $0x0,%al
add    %ah,%dh
adc    $0x0,%al
add    %dh,%dh
adc    $0x0,%al
add    %al,(%esi)
adc    $0x15160000,%eax
add    %al,(%eax)
es
adc    $0x15360000,%eax
add    %al,(%eax)
inc    %esi
adc    $0x15560000,%eax
add    %al,(%eax)
adc    $0x0,%ax
jbe    11f8f <_IO_stdin_used+0x5753>
add    %al,(%eax)
xchg   %dl,0x15960000
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
adc    $0x15b60000,%eax
add    %al,(%eax)
(bad)
adc    $0x15d60000,%eax
add    %al,(%eax)
out    %al,$0x15
add    %al,(%eax)
notb   0x16060000
add    %al,(%eax)
push   %ss
push   %ss
add    %al,(%eax)
es
push   %ss
add    %al,(%eax)
ss
push   %ss
add    %al,(%eax)
inc    %esi
push   %ss
add    %al,(%eax)
push   %esi
push   %ss
add    %al,(%eax)
pushw  %ss
add    %al,(%eax)
jbe    11fd0 <_IO_stdin_used+0x5794>
add    %al,(%eax)
xchg   %dl,(%esi)
add    %al,(%eax)
xchg   %eax,%esi
push   %ss
add    %al,(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
push   %ss
add    %al,(%eax)
mov    $0x16,%dh
add    %al,(%eax)
(bad)
push   %ss
add    %al,(%eax)
(bad)
push   %ss
add    %al,(%eax)
out    %al,$0x16
add    %al,(%eax)
notb   (%esi)
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    $0x20,%al
add    %eax,(%eax)
add    %eax,0x0
add    %al,0x15
dec    %ebp
out    %al,$0x40
mov    $0x232787d6,%ebx
imull  -0x6a(%ebp)
sbb    (%eax),%edx
daa
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
popa
popa
cmp    %si,(%ebx)
xor    %fs:0x34(%ebp),%esp
popa
xor    $0x33,%al
cmp    %esi,(%edx)
cmp    %dh,(%eax,%esi,1)
xor    $0x65,%al
cmp    %edi,(%eax)
fs
data16
xor    $0x62,%al
cmp    %dh,(%ebx)
xor    0x32373364(,%eiz,2),%esi
popa
cmp    %dh,(%eax)
xor    $0x2e,%al
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
fdivrl (%ebx)
.byte 0xbb
.byte 0x13
