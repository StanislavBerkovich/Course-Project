das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %ch,%al
dec    %ecx
fwait
or     %esi,-0x69c45ac4(%esi)
xor    %ah,%cl
xchg   %eax,%esi
popa
outsb  %ds:(%esi),(%dx)
roll   (%edi,%eax,8)
jo     8048202 <_init-0x4daa>
icebp
lds    (%eax),%eax
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
or     (%eax),%eax
add    %al,(%eax)
dec    %ecx
or     %al,0x10221002(%eax)
push   %es
and    %al,-0x5fbfbb50(%ebx)
xor    %al,(%ecx)
add    %al,0x8(%eax)
add    %ah,(%eax)
adc    %cl,(%ebx)
and    %al,(%eax)
add    %bl,(%eax)
add    %al,(%edx)
add    (%eax),%al
add    %al,(%esi)
adc    %eax,0x8(%ecx)
adc    %al,(%eax)
add    %al,0x0(%eax)
and    %al,(%eax)
sub    (%eax,%eax,1),%cl
push   %ss
sub    0x6200208c(%eax),%dl
sbb    (%eax),%ebx
push   %es
add    %cl,%cl
jb     8048221 <_init-0x4d8b>
add    %al,-0x66(%eax)
add    %dl,-0x7dd2d3cc(%edx)
mov    0x186202,%al
adc    %bl,(%eax)
add    $0x10,%al
add    %edx,(%eax)
test   $0x0,%al
adc    %ah,(%edx,%edx,2)
add    %al,(%eax,%ebp,1)
inc    %eax
inc    %eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    (%eax),%cl
add    %al,(%eax)
add    (%eax),%ah
add    %esp,(%eax)
dec    %eax
les    (%edi),%esp
insb   (%dx),%es:(%edi)
add    %dh,(%esi)
adc    %ebx,(%eax)
adc    %ah,(%ecx)
and    %al,0x0(%ecx)
les    (%eax),%eax
add    $0x0,%al
and    %al,%al
add    %al,%dh
add    %edx,0x4(%eax,%esi,1)
sub    0x8c00408(%ecx),%ah
mov    %al,0x4122c2
(bad)
test   %dl,-0x7f(%eax,%eax,1)
(bad)
or     (%eax),%al
add    %bh,%ah
jne    804827c <_init-0x4d30>
add    $0xa4,%al
cmp    %cl,(%eax)
push   %ss
or     %dl,(%eax,%eax,1)
or     (%ecx),%al
adc    %al,(%eax)
inc    %esp
addl   $0xa21840,0x0(%eax)
add    %al,(%eax)
add    (%ecx),%al
xor    %cl,(%eax)
cmp    0x1800a090(%eax),%al
inc    %esp
sub    (%esi),%cl
xor    %ah,0x0(%eax)
add    %al,(%eax)
add    %eax,0x1(%edx)
test   %al,0x0(%eax,%eax,1)
adc    %al,(%esp,%ecx,1)
or     %ecx,0x2a(%esi)
add    %ah,0x815b344(%eax)
pusha
push   %eax
cmp    %dl,(%ebx,%ebx,1)
add    %ah,(%eax)
or     %al,(%eax)
or     (%esi),%esp
push   %edx
or     0x20101008(%eax),%eax
or     %al,(%ecx)
or     %cl,(%ebx)
cs
inc    %eax
or     %al,0x42(%eax)
cltd
and    %eax,(%eax)
add    (%eax,%eax,1),%al
mov    $0x60,%al
inc    %esi
in     $0x0,%eax
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%dl
add    %al,(%eax)
add    %al,%bl
add    %al,(%eax)
add    %al,%ah
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,%ch
add    %al,(%eax)
add    %al,%bh
add    %al,(%eax)
add    %cl,%al
add    %al,(%eax)
add    %cl,%dl
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,%bl
add    %al,(%eax)
add    %cl,%ch
add    %al,(%eax)
add    %cl,%dh
add    %al,(%eax)
add    %dl,%al
add    %al,(%eax)
add    %dl,%bl
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,%bh
add    %al,(%eax)
add    %bl,%bl
add    %al,(%eax)
add    %bl,%ah
add    %al,(%eax)
add    %bl,%dh
add    %al,(%eax)
add    %bl,%bh
add    %al,(%eax)
add    %ah,%cl
add    %al,(%eax)
add    %ah,%dl
add    %al,(%eax)
add    %ah,%ah
add    %al,(%eax)
add    %ah,%bh
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,%cl
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,%ah
add    %al,(%eax)
add    %ch,%dh
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%al
add    %al,(%eax)
add    %dh,%cl
add    %al,(%eax)
add    %dh,%dl
add    %al,(%eax)
add    %dh,%bl
add    %al,(%eax)
add    %dh,%ah
add    %al,(%eax)
add    %dh,%ch
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,%bh
add    %al,(%eax)
add    %bh,%dl
add    %al,(%eax)
add    %bh,%ah
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,%ch
add    %al,(%eax)
add    %bh,%bh
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %eax,(%eax)
add    %al,(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx,%eax,1)
add    %al,(%eax)
pop    %es
add    %eax,(%eax)
add    %cl,(%edx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %cl,(%ecx,%eax,1)
add    %al,(%eax)
or     $0x1,%eax
add    %al,(%eax)
add    %cl,(%esi)
add    %eax,(%eax)
add    %dl,(%eax)
add    %eax,(%eax)
add    %dl,(%ecx)
add    %eax,(%eax)
add    %dl,(%ecx,%eax,1)
add    %al,(%eax)
adc    $0x18000001,%eax
add    %eax,(%eax)
add    %bl,(%ebx)
add    %eax,(%eax)
add    %bl,(%edi)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %eax,(%eax)
add    %ah,(%edx)
add    %eax,(%eax)
add    %ah,(%ebx)
add    %eax,(%eax)
add    %ah,(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
daa
add    %eax,(%eax)
add    %ch,(%ecx)
add    %eax,(%eax)
add    %ch,(%ebx)
add    %eax,(%eax)
add    %ch,0x2e000001
add    %eax,(%eax)
add    %dh,(%eax)
add    %eax,(%eax)
add    %dh,(%edx)
add    %eax,(%eax)
add    %dh,(%ebx)
add    %eax,(%eax)
add    %dh,(%ecx,%eax,1)
add    %al,(%eax)
add    %eax,%ss:(%eax)
add    %dh,(%edi)
add    %eax,(%eax)
add    %bh,(%eax)
add    %eax,(%eax)
add    %bh,(%ecx)
add    %eax,(%eax)
add    %bh,(%edx)
add    %eax,(%eax)
add    %bh,(%ecx,%eax,1)
add    %al,(%eax)
add    %eax,%ds:(%eax)
add    %al,0x1(%eax)
add    %al,(%eax)
inc    %edx
add    %eax,(%eax)
add    %al,0x0(%ecx,%eax,1)
add    %al,0x1(%ebp)
add    %al,(%eax)
inc    %esi
add    %eax,(%eax)
add    %cl,0x1(%eax)
add    %al,(%eax)
dec    %edx
add    %eax,(%eax)
add    %cl,0x1(%ebx)
add    %al,(%eax)
dec    %ebp
add    %eax,(%eax)
add    %cl,0x1(%esi)
add    %al,(%eax)
push   %eax
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %edx
add    %eax,(%eax)
add    %dl,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
add    %eax,(%eax)
add    %dl,0x1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %edx
add    %eax,(%eax)
add    %bl,0x0(%ecx,%eax,1)
add    %bl,0x1(%ebp)
add    %al,(%eax)
pop    %esi
add    %eax,(%eax)
add    %bl,0x1(%edi)
add    %al,(%eax)
popa
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ax,(%eax)
add    %ch,0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %eax,(%eax)
add    %ch,0x1(%ebp)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
add    %eax,(%eax)
add    %dh,0x1(%eax)
add    %al,(%eax)
jno    804850f <_init-0x4a9d>
add    %al,(%eax)
jb     8048513 <_init-0x4a99>
add    %al,(%eax)
jne    804851f <_init-0x4a8d>
add    %al,(%eax)
jbe    8048523 <_init-0x4a89>
add    %al,(%eax)
ja     8048527 <_init-0x4a85>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
js     804852f <_init-0x4a7d>
add    %al,(%eax)
jnp    8048533 <_init-0x4a79>
add    %al,(%eax)
jl     8048537 <_init-0x4a75>
add    %al,(%eax)
jge    804853b <_init-0x4a71>
add    %al,(%eax)
jg     804853f <_init-0x4a6d>
add    %al,(%eax)
addb   $0x0,(%ecx)
add    %al,0x1(%edx)
add    %al,(%eax)
add    %al,0x0(%ecx,%eax,1)
add    %al,(%eax)
xchg   %al,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xchg   %eax,(%ecx)
add    %al,(%eax)
mov    (%ecx),%al
add    %al,(%eax)
mov    (%ecx),%eax
add    %al,(%eax)
mov    %es,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
lea    (%ecx),%eax
add    %al,(%eax)
popl   (%ecx)
add    %al,(%eax)
nop
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x6dffffff(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x6bffffff(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,-0x69ffffff(%ebp)
add    %eax,(%eax)
add    %bl,-0x62ffffff(%ecx)
add    %eax,(%eax)
add    %bl,-0x5dffffff(%edi)
add    %eax,(%eax)
add    %ah,-0x1bffffff(%ebx)
pop    %esi
and    (%eax),%ecx
xchg   %eax,%ecx
push   %ebx
cld
aas
inc    %ebp
js     8048656 <_init-0x4956>
iret
push   %ecx
pop    %esp
insb   (%dx),%es:(%edi)
xor    $0x2d,%al
lfs    (%esp,%eax,8),%esi
push   %cs
mov    %edx,%gs
sarl   $0x26,(%ebx,%ebx,4)
xchg   %eax,0x56876a39(%esi,%eiz,1)
les    -0x9e5dce(%edi),%esp
xlat   %ds:(%ebx)
outsl  %ds:(%esi),(%dx)
cwtl
mov    0x8b6eb309,%al
jns    804863c <_init-0x4970>
movsl  %ds:(%esi),%es:(%edi)
sbb    $0x542b796e,%eax
lock inc %esi
mov    %eax,0x4497c95d
push   %ss
sbb    %ch,(%eax)
jecxz  80485c9 <_init-0x49e3>
aaa
or     $0xbb,%al
fnstsw 0x2c(%ecx)
es
insl   (%dx),%es:(%edi)
(bad)
jae    8048603 <_init-0x49a9>
out    %al,(%dx)
jnp    8048646 <_init-0x4966>
stos   %al,%es:(%edi)
test   %ch,-0x7246af05(%ecx)
icebp
push   %cs
mov    $0xe,%dh
test   $0x77,%al
push   %esp
or     $0x7ceaa84b,%eax
call   3ceb81fb <_end+0x34dff8ab>
imulb  (%ecx)
(bad)
movsl  %ds:(%esi),%es:(%edi)
orl    $0x832f3563,-0x4a59949b(%edx)
83
(bad)
inc    %esi
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esp
sub    0x13(%ebp,%eiz,1),%bh
pop    %esi
cwtl
dec    %ebp
in     $0xe5,%eax
push   $0x48
repnz lretw $0xa589
ljmp   $0xba29,$0x31aa94ca
(bad)
out    %al,$0xbd
leave
mov    $0xc4393fc7,%ebp
sub    %ds:(%ebx),%bh
jne    80486ea <_init-0x48c2>
(bad)
cmc
fimull -0x31612fd0(%ecx)
jnp    80486a2 <_init-0x490a>
lahf
adc    $0xffffff90,%ebx
adc    $0x9a,%al
mov    $0x93,%cl
mov    $0x4f,%cl
lods   %ds:(%esi),%eax
push   %edx
bnd jno 80486d5 <_init-0x48d7>
pop    %ds
shr    $0x8c,%esi
xor    %esi,(%ecx)
jp     80486d3 <_init-0x48d9>
in     $0x3d,%al
xor    $0x24,%al
lret
loope  80486e2 <_init-0x48ca>
add    %esi,0x7b(%edi,%ecx,4)
cmp    %esi,%esi
iret
dec    %esp
mov    $0x1d,%dh
les    (%esi),%ecx
notl   (%eax)
inc    %ecx
(bad)
iret
pop    %esi
repnz movsb %ds:(%esi),%es:(%edi)
repnz pop %es
or     $0x4e,%al
repnz divl 0x385a0ad0
push   $0xb429c1b3
and    $0x4b5f55b1,%eax
xor    %ebp,0x9ef110c(%esi)
or     %esp,(%edi)
sbb    (%ebx),%ebp
mov    $0xfc,%bh
loopne 804871a <_init-0x4892>
sub    %ch,0x6f97e484(%eax)
adc    %dl,(%ebx)
insl   (%dx),%es:(%edi)
inc    %edx
sub    %cl,0x5a2301b4
imul   $0xfa161690,-0x11(%edi),%esp
add    (%ecx),%edx
aam    $0x7e
adc    0x66(%edi),%ch
outsb  %ds:(%esi),(%dx)
hlt
mov    %edi,%edx
add    %ebx,(%ebx)
ret    $0x7fd6
mov    $0x8b26602e,%edi
sahf
push   %ebp
test   %ch,-0x14(%edi)
push   %ds
jecxz  80486c6 <_init-0x48e6>
data16
int    $0xe2
adc    %dl,%ch
idivl  -0x688d3c2b(%ebx)
mov    $0x60,%cl
je     8048750 <_init-0x485c>
lock push %esp
adc    (%esi),%esp
cld
ja     804872a <_init-0x4882>
out    %eax,(%dx)
arpl   %di,%sp
fcomi  %st(7),%st
mov    $0x77,%bl
int    $0xe2
adc    $0x15,%al
mov    $0x6b,%dh
out    %al,(%dx)
in     (%dx),%al
jae    80487a3 <_init-0x4809>
fild   0x7c(%esi)
adc    $0x3bceceec,%eax
(bad)
mov    $0x9d,%bh
test   $0xb1231a9d,%eax
repnz (bad)
push   %eax
xor    $0xf3638a26,%eax
aam    $0x9d
rorb   0x33(%ecx)
in     (%dx),%al
stos   %al,%es:(%edi)
mov    $0x16,%bh
fxch   %st(4)
xlat   %ds:(%ebx)
iret
xor    %ch,%ah
sbb    $0x27,%al
cs
inc    %esi
pop    %ds
mov    $0x28,%cl
cmp    (%edi),%ecx
outsl  %ds:(%esi),(%dx)
xor    %bh,-0x47dc3378(%edi)
enter  $0xbfb2,$0x7
stos   %al,%es:(%edi)
or     $0xcdacc41,%eax
push   $0xffffffcf
cmp    %ch,%ch
jge    8048733 <_init-0x4879>
add    $0x2,%al
andl   $0x9a6cf431,0xfd1563e3
9a
call   e2c9e71f <_end+0xdabe5dcf>
mov    %eax,0x2882880e
or     $0x98,%al
into
and    %esp,0x3dfc79e4(%edi)
paddw  (%edi),%mm4
movsb  %ds:(%esi),%es:(%edi)
mov    0xb13f5d1c,%al
repz xchg %eax,%ebp
jmp    8048760 <_init-0x484c>
add    %al,-0x689447f1(%eax)
or     $0x86,%al
in     (%dx),%eax
xor    -0x53b60f73(%ebx),%esp
insl   (%dx),%es:(%edi)
pop    %ebp
jns    804874e <_init-0x485e>
dec    %ebp
insb   (%dx),%es:(%edi)
popa
imul   $0xffffffd2,0x7a(%edi),%ecx
dec    %edi
movsl  %ds:(%esi),%es:(%edi)
(bad)
mov    $0x3c,%bh
push   %esi
sub    $0x55e853b0,%eax
arpl   %si,(%esi)
decl   0x42(%ebx)
inc    %ebp
aad    $0xec
ljmp   *(%edx)
jnp    8048750 <_init-0x485c>
push   $0x91aef07d
xor    $0x9ecaf187,%eax
movsl  %ds:(%esi),%es:(%edi)
mov    %ss,%ecx
and    $0x6ffb9d0a,%eax
or     %ecx,(%edi)
insl   (%dx),%es:(%edi)
mov    0x11620329,%al
xlat   %ds:(%ebx)
addr16 inc %ebx
and    -0x55(%eax),%al
lret   $0x3f2d
paddusw %gs:(%edx,%edi,8),%mm1
fwait
sbb    %edx,%ecx
sarb   $0xda,0x5990292(%edx)
mov    $0x23,%cl
jge    8048789 <_init-0x4823>
and    (%ebx),%ch
bound  %esi,-0x58(%edx,%ebp,8)
mov    $0x5bc33149,%ebx
mov    0x520b9f87,%al
mov    $0x69916300,%edi
cld
shlb   %cl,-0x2174e4be(%eax)
mov    $0xc4,%dh
lcall  $0x401f,$0x8d0c3033
pop    %es
in     $0xdd,%al
pop    %eax
inc    %esi
xor    %ch,%dl
enter  $0xb3a0,$0xa4
push   %ss
sbb    -0x4b(%esi),%ah
adcl   $0x29,(%ebx)
and    %bh,%ch
cld
xor    0x47a6e7a5(%esi,%eiz,8),%edx
fcmovbe %st(7),%st
test   $0x8ff0cc45,%eax
loope  804882f <_init-0x477d>
jge    80487f3 <_init-0x47b9>
jl     804885b <_init-0x4751>
push   %es
mov    0x65145a88(%ebp),%?
jnp    804883b <_init-0x4771>
inc    %ebx
cmp    -0x79(%esi),%ch
push   %ecx
into
inc    %ebx
pop    %es
xchg   %eax,%edx
ljmp   $0x3e71,$0x9a348cab
cmp    (%ecx),%ch
cltd
jo     8048884 <_init-0x4728>
inc    %ecx
fimull -0x7a(%edi)
hlt
mov    %esi,%?
movsb  %ds:(%esi),%es:(%edi)
dec    %ecx
push   $0x853f4057
divl   0x34(%ecx)
ss
sub    $0x3e29c00a,%eax
and    %edi,0x27(%ebp)
mov    %esi,-0xf30dc89(%edx,%edx,8)
jb     80488d6 <_init-0x46d6>
pop    %ebx
and    %esp,%ebp
rclb   0x7e(%ebx,%edx,8)
xchg   %eax,%esi
push   %edi
into
dec    %ecx
repz
fs
jecxz  804884a <_init-0x4762>
adc    $0xad703555,%eax
dec    %ebx
jecxz  804886c <_init-0x4740>
mov    $0x8a313698,%ebp
fidivr 0x47(%ebp)
mov    0x61b382af(%eax),%ds
imul   $0xf14d9ccd,0x16b89395(%esi),%esp
f1
or     %al,%cl
fsubs  (%edx)
sbb    $0x5753124e,%eax
insb   (%dx),%es:(%edi)
adc    %dl,0x38(%ebp)
repnz mov (%ecx,%ebx,8),%ebx
jno    804892f <_init-0x467d>
sbb    $0x88,%al
pop    %es
shl    $0xa7,%al
push   %esp
jge    8048898 <_init-0x4714>
mov    $0x177c92e3,%edx
insb   (%dx),%es:(%edi)
mov    $0x76952172,%edx
mov    $0x22,%dh
and    $0xda5c7a4d,%eax
mov    $0x4c,%ah
gs
ffreep %st(1)
jmp    8048934 <_init-0x4678>
(bad)
es
(bad)
add    %esi,(%eax)
pusha
clc
rcrl   0x5e(%ecx)
and    $0x86,%al
shlb   %cl,-0x2c(%eax)
pop    %edi
dec    %esi
jns    8048948 <_init-0x4664>
iret
insb   (%dx),%es:(%edi)
imul   $0x64a8c9a9,0x447fad95(%ebp),%ecx
64
add    %edi,(%edx)
test   %bl,-0x45(%esi)
scas   %es:(%edi),%al
mov    $0x5d5d972b,%ecx
mov    $0xd5,%dh
inc    %ecx
push   %eax
mov    $0x7c532fe6,%edi
mov    $0x29,%ah
jp     80488c8 <_init-0x46e4>
fbld   0x1a42c951(%ebp)
mov    0x3e942287,%eax
lock add -0x368e1ce3(%esi),%cl
xor    %bh,-0x1a(%edx)
(bad)
addr16 inc %edx
dec    %ebp
jmp    dbeecdf0 <_end+0xd3e344a0>
out    %eax,(%dx)
push   %cs
jl     80489b4 <_init-0x45f8>
add    $0x91eaa123,%eax
rclb   %cl,(%ebx)
out    %al,$0xc9
(bad)
xor    $0x5d,%al
lcall  *-0x52a8269e(%eax)
push   %ebp
and    %bl,%ch
.byte 0xe1
faddl  (%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    %eax,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
int3
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
iret
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x3,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jp     80489f1 <_init-0x45bb>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jp     8048a00 <_init-0x45ac>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %es
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x4
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%dl
or     %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %dh,0x6
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %es
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x5,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x8,%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,0x8
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x7(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   $0x1,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
testl  $0x0,(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jp     8048b5d <_init-0x444f>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%edi),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addl   $0x0,(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x6(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%esi,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    8048bf2 <_init-0x43ba>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
enter  $0x5,$0x0
adc    (%eax),%al
add    %al,(%eax)
repnz or %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x7(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x8(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cltd
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
out    %eax,(%dx)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %fs:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x7(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x6(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x6,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%edi
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
roll   $0x0,(%ecx)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%ecx
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x4,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
les    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x8(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lret
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movl   $0x0,(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     $0x7,%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %ss
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x3
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x7(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lahf
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x1f
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    (%esi),%edx
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lds    (%eax),%ecx
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sahf
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x7,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x5(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %edx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%edi)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %ds
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x10
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %ecx,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jg     8048f52 <_init-0x405a>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popa
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiadd  (%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
and    %eax,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %ecx,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lret   $0x4
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rorl   %cl,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
nop
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ds
pop    %ss
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aaa
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x5(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%al
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x6(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x8(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
addr16 add $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cli
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    80490d0 <_init-0x3edc>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x2,%dh
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ecx
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x3(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esi
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jmp    804912c <_init-0x3e80>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
insl   (%dx),%es:(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lea    (%ebx),%eax
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    %eax,(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
pop    %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   $0x13
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
stos   %eax,%es:(%edi)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pusha
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bl
or     %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %ah,0x6(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x5(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ebx)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%esi,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x5(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jae    804924e <_init-0x3d5e>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aas
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x8(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    (%eax,%eax,1),%ecx
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
or     %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ch
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     80492bb <_init-0x3cf1>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    $0x5,%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   %cl,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
pop    %eax
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
incb   (%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %cl,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %esp
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%edi)
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x8,%dl
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     804934d <_init-0x3c5f>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ficom  (%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pusha
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
repnz push %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fiaddl (%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
call   80493b1 <_init-0x3bfb>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
rolb   $0x0,(%eax,%eax,1)
adc    (%eax),%al
add    %al,(%eax)
out    %al,$0x0
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
jp     80493ef <_init-0x3bbd>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cld
or     %al,(%eax)
add    %dl,(%ecx)
add    %al,(%eax)
add    %al,0x8(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sub    (%esi),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
into
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%edi,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
loop   804946f <_init-0x3b3d>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
fildl  (%eax,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %al,%ss:(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%eax,%ecx,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    $0x4,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x5(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x5(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x7(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edi
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%dh
adc    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
push   %es
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aas
add    $0x0,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x30000010(%esi)
push   %ebp
push   %es
or     %cl,0x12000000(%edi)
add    %cl,0xb6100
add    %al,%al
addl   $0x808,(%edi)
add    %dl,(%edx)
add    %cl,0x10af00
add    %al,(%eax)
add    $0x6e0807,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x10cf00,%eax
add    %ah,-0x48(%eax)
pop    %es
or     %bl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %cl,0x10e500
add    %al,0x5d(%eax)
push   %es
or     %dl,0x12000000(%edx)
add    %cl,0x110100
add    %al,0x7a0808cf(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xd2600
add    %ah,%al
fwait
push   %es
or     %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
or     $0x111b00,%eax
add    %al,(%eax)
rorb   (%eax)
or     %dl,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x113700
add    %ah,0x208065f(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x116200
add    %dh,(%eax)
sbb    $0x7,%al
or     %cl,0x12000000(%edx)
add    %cl,0xc3500
add    %dh,0x53(%eax)
push   %es
or     %dl,0x12000000(%eax)
add    %cl,0x117d00
add    %al,0x1d080678(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x11a400
add    %al,-0x70f7f95e(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x11ce00
add    %ah,0x56(%eax)
push   %es
or     %bh,0x12000000(%ecx)
add    %cl,0xdcb00
add    %dh,(%eax)
adc    (%ecx),%cl
or     %dh,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x11ec00
add    %al,-0x70(%eax)
push   %es
or     %dl,0x120000(%eax,%eax,1)
or     $0xa4200,%eax
add    %ah,%al
testl  $0x6508,(%esi)
add    %dl,(%edx)
add    %cl,0xa5800
add    %ah,0x6(%eax)
pop    %es
or     %ah,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x121400
add    %ah,(%eax)
add    (%ecx),%ecx
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x122d00
add    %ah,-0x6df7f8af(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x124e00
add    %ah,%al
in     (%dx),%al
pop    %es
or     %dl,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x125c00,%eax
add    %al,-0x35f7f8e6(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x26700
add    %ch,0x804(%edi,%ecx,8)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
jg     80496e6 <_init-0x38c6>
add    %al,(%eax)
mov    0x2d08075c,%al
add    (%eax),%eax
add    %dl,(%edx)
add    %cl,0x127d00
add    %dh,-0x2df7f901(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xefb00
add    %dh,(%eax)
cwtl
push   %es
or     %bl,0x12000001
add    %cl,0x129a00
add    %dl,%al
xor    $0xda0807,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x12b000,%eax
add    %dl,(%eax)
pop    %ds
pop    %es
or     %bl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %cl,0x9a300
add    %dl,-0x25f7f986(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xd9c00
add    %al,%al
mov    $0x5a0807,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0xbfc00,%eax
add    %ah,-0x7d(%eax)
pop    %es
or     %cl,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
or     $0x12c800,%eax
add    %dh,0x240807eb(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x12d200
add    %dh,0x5080695(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x12f800
add    %ah,(%eax)
lahf
push   %es
or     %cl,0x12000000(%edi)
add    %cl,0xde100
add    %dl,-0x45(%eax)
pop    %es
or     %ah,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x131d00,%eax
add    %ah,%al
pop    %ebx
push   %es
or     %bl,0x12000000(%esi)
add    %cl,0xb2a00
add    %al,-0x48f7f9a6(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x134a00
add    %dh,-0x62(%eax)
push   %es
or     %bl,0x12000000
add    %cl,0x136d00
add    %dl,(%eax)
pop    %ss
pop    %es
or     %ch,0x0(%ebp)
add    %al,(%eax)
adc    (%eax),%al
or     $0x138700,%eax
add    %dl,%al
pop    %edi
pop    %es
or     %dl,0x12000000(%edx)
add    %cl,0x139700
add    %al,(%eax)
bound  %eax,(%edi)
or     %cl,0x12000000(%edi)
add    %cl,0x13b400
add    %dl,0x58(%eax)
push   %es
or     %bl,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x13db00
add    %ah,-0x70f7f9ac(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xaee00
add    %dl,%al
sub    $0x7,%al
or     %ch,0x12000001
add    %cl,0x140000
add    %dh,-0x73f7f961(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x142900
add    %dl,%al
aaa
pop    %es
or     %cl,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
or     $0x144500,%eax
add    %dh,(%eax)
wbinvd
or     %bh,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0xd4900
add    %ah,0x69(%eax)
pop    %es
or     %bl,0x12000000(%edx)
add    %cl,0xb0a00
add    %dh,-0xcf7f98f(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x146400
add    %dl,-0x67(%eax)
push   %es
or     %dh,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x6a00
add    %ah,(%eax)
imul   $0xdc08,(%esi),%eax
add    %dl,(%edx)
add    %cl,0x148900
add    %dh,-0x2df7f8e8(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x149f00
add    %al,%al
pop    %esi
push   %es
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x14c300
add    %al,-0x37(%eax)
or     %cl,(%eax)
(bad)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x14e000
add    %dh,%al
icebp
push   %es
or     %cl,0x12000000(%edi)
add    %cl,0x14fe00
add    %dh,%al
enter  $0x808,$0x3e
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x151800
add    %dl,-0x75f7f89e(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xe7d00
add    %dl,0x5c0807b7(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x153000
add    %al,0x2a080779(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xaad00
add    %dh,(%eax)
cli
push   %es
or     %ah,0x12000000(%edx)
add    %cl,0xbac00
add    %al,(%eax)
xchg   %eax,%edx
push   %es
or     %cl,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
or     $0x5a00,%eax
add    %dh,-0x53(%eax)
push   %es
or     %ch,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     $0x155500,%eax
add    %dh,(%eax)
leave
or     %cl,(%eax)
pop    %es
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x92000
add    %ah,%al
add    (%edi),%eax
or     %dl,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0xa9300
add    %ah,-0x65f7f8ec(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xd5e00
add    %al,-0x7d(%eax)
pop    %es
or     %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
or     $0x157300,%eax
add    %al,0x1(%eax)
pop    %es
or     %al,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x102500
add    %ah,0x28(%eax)
pop    %es
or     %bh,0x12000000(%edx)
add    %cl,0xb7700
add    %ah,%al
add    (%ecx),%cl
or     %dl,(%ebx)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x159600
add    %dh,0x3c080788(%eax)
add    (%eax),%eax
add    %dl,(%edx)
add    %cl,0x9b800
add    %dl,0x7(%eax)
pop    %es
or     %bl,0x3(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     $0x15a800,%eax
add    %dh,(%eax)
pop    %ecx
push   %es
or     %cl,0x12000000(%edx)
add    %cl,0x15cc00
add    %al,(%eax)
cs
pop    %es
or     %dl,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x15eb00
add    %dh,%al
add    (%edi),%al
or     %ch,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x160b00
add    %ah,0x7e(%eax)
pop    %es
or     %bl,0x120000(%eax,%eax,1)
or     $0x161e00,%eax
add    %dl,-0x15(%eax)
pop    %es
or     %ah,(%esi)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x162a00
add    %dh,0x7a080736(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x164000
add    %al,-0x2bf7f90e(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x165100
add    %al,%al
sub    (%edi),%al
or     %ch,0x12000000(%edx)
add    %cl,0x166e00
add    %ah,(%eax)
xor    $0x340807,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x168e00,%eax
add    %al,-0xb(%eax)
push   %es
or     %bl,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x16a000
add    %al,%al
jge    8049a86 <_init-0x3526>
or     %bl,0x120000(%eax,%eax,1)
or     $0x8000,%eax
add    %ah,%al
lods   %ds:(%esi),%eax
push   %es
or     %al,0x12000000(%eax)
add    %cl,0xf6f00
add    %ah,(%eax)
scas   %es:(%edi),%eax
push   %es
or     %ah,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
or     $0xb5000,%eax
add    %ah,(%eax)
testl  $0xb408,(%esi)
add    %dl,(%edx)
add    %cl,0x16b300
add    %ah,(%eax)
arpl   %ax,(%edi)
or     %bl,0x12000000(%edx)
add    %cl,0x16c600
add    %dl,0x6208074d(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xfa100
add    %dl,0x15080710(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x16dc00
add    %al,(%eax)
push   %ds
pop    %es
or     %cl,0x12000000(%edx)
add    %cl,0x16f400
add    %dl,0x49(%eax)
push   %es
or     %al,0x12000000(%edi)
add    %cl,0xad700
add    %dl,-0x8(%eax)
push   %es
or     %ch,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x171900
add    %dl,-0x50(%eax)
push   %es
or     %ah,0x12000000(%ebp)
add    %cl,0x172900
add    %ah,-0x73(%eax)
push   %es
or     %dl,0x12000000(%edx)
add    %cl,0x174400
add    %ah,0x650806f0(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x175c00
add    %dl,%al
leave
or     %cl,(%eax)
scas   %es:(%edi),%al
add    $0x120000,%eax
or     $0x176f00,%eax
add    %al,-0x3df7f8ac(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x178a00
add    %al,%al
jnp    8049b76 <_init-0x3436>
or     %cl,0x12000000(%edi)
add    %cl,0xbca00
add    %dl,0x1b08069c(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0xd8900
add    %dh,(%eax)
adc    %ecx,(%ecx)
or     %bh,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x17a900
add    %dl,(%eax)
jge    8049ba6 <_init-0x3406>
or     %ah,0x12000000(%ebp)
add    %cl,0x9f400
add    %ah,(%eax)
dec    %edi
pop    %es
or     %al,0x12000000(%edi)
add    %cl,0x17c500
add    %dh,-0x73f7f971(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x17e900
add    %dl,(%eax)
addr16 pop %es
or     %dh,0x120000(%eax,%eax,1)
or     $0x180900,%eax
add    %dh,0x68080711(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x9f00
add    %dh,%al
(bad)
push   %es
or     %bl,0x12000000(%ecx)
add    %cl,0x182900
add    %dl,-0x75f7f8e7(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x183f00
add    %ah,%al
pop    %ebp
push   %es
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x185d00
add    %al,%al
xchg   %eax,%esi
push   %es
or     %ah,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
or     $0xfdc00,%eax
add    %al,%al
pop    %ecx
push   %es
or     %dh,0x12000000(%edi)
add    %cl,0xc4900
add    %ah,(%eax)
sub    $0x7,%al
or     %ch,0x12000000(%edx)
add    %cl,0xca400
add    %ah,(%eax)
in     (%dx),%al
pop    %es
or     %cl,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x187f00,%eax
add    %dl,-0x5(%eax)
or     %cl,(%eax)
mov    (%edx),%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x189100,%eax
add    %ah,0x2e080904(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x18a800
add    %dh,-0x66f7f887(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x18ca00
add    %dl,%al
or     (%ecx),%cl
or     %ah,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
or     $0x18e000,%eax
add    %dl,%al
jp     8049ca6 <_init-0x3306>
or     %dh,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     $0x18f900,%eax
add    %dh,(%eax)
push   $0xed0806
add    %al,(%eax)
adc    (%eax),%al
or     $0x191800,%eax
add    %al,%al
mov    %es,(%esi)
or     %dl,0x12000000(%edx)
add    %cl,0xf3600
add    %ah,(%eax)
popa
pop    %es
or     %bl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xfc500
add    %dl,%al
and    $0x7,%al
or     %ch,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x193c00
add    %ah,(%eax)
sbb    $0xd20807,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x195400,%eax
add    %al,-0x6df7f912(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xcbb00
add    %dh,0x2b(%eax)
pop    %es
or     %ch,0x12000000(%edx)
add    %cl,0x196c00
add    %dh,0x5(%eax)
pop    %es
or     %ch,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x198e00
add    %ah,(%eax)
push   %ecx
pop    %es
or     %dh,0x0(%ebp)
add    %al,(%eax)
adc    (%eax),%al
or     $0xed200,%eax
add    %al,0x5b(%eax)
push   %es
or     %bl,0x12000000(%esi)
add    %cl,0x205d00
add    %dl,0x80b83(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%ecx)
add    %dh,0x50000019(%ebx)
and    %al,(%edi)
or     %cl,0x12000000(%edx)
add    %cl,0xc9200
add    %dh,0x60(%eax)
pop    %es
or     %ah,0x12000000(%edx)
add    %cl,0x19cf00
add    %dh,0x7c(%eax)
pop    %es
or     %dl,0x12000000(%edi)
add    %cl,0xc1500
add    %dl,0x4d08069a(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x19e600
add    %ah,(%eax)
cmp    (%edi),%eax
or     %dl,%bh
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1a0a00
add    %al,0x2e0807eb(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1a1700
add    %al,0x7b(%eax)
pop    %es
or     %dh,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1a2f00,%eax
add    %al,%al
sbb    $0x7,%al
or     %bl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %cl,0x1a4a00
add    %al,%al
push   %ebp
push   %es
or     %dl,0x12000000(%edx)
add    %cl,0x1700
add    %ah,(%eax)
push   %edi
push   %es
or     %dl,0x120000(%eax,%eax,1)
or     $0xd7200,%eax
add    %ah,(%eax)
sub    %eax,(%edi)
or     %bh,0x12000000(%edx)
add    %cl,0x1a6800
add    %ah,%al
sub    %eax,(%edi)
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xce900
add    %al,%al
es
pop    %es
or     %bl,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1a7e00,%eax
add    %dl,0x34080908(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x1a9400
add    %al,0x15(%eax)
pop    %es
or     %al,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0xf8100
add    %dh,%al
fs
pop    %es
or     %dl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x104100
add    %ah,(%eax)
adc    $0x7,%al
or     %dh,0x0(%ebp)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1aac00,%eax
add    %ah,%al
mov    (%esi),%es
or     %cl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1ad600
add    %dh,0x79(%eax)
pop    %es
or     %cl,(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1aef00
add    %ah,%al
and    %al,(%edi)
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1b0c00
add    %dh,-0x33f7f9a0(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1b3300
add    %dl,0x55(%eax)
pop    %es
or     %dl,0x12000000(%edx)
add    %cl,0xbe300
add    %dh,-0x4bf7f963(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x97900
add    %dh,0x35080674(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x1b4e00
add    %dl,(%eax)
push   $0x6b0807
add    %al,(%eax)
adc    (%eax),%al
or     $0xb8400,%eax
add    %al,%al
arpl   %ax,(%edi)
or     %bl,0x12000000(%esi)
add    %cl,0x1b6900
add    %dl,0x1b(%eax)
pop    %es
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1b8400
add    %dl,(%eax)
mov    %eax,0x8f0806
add    %al,(%eax)
adc    (%eax),%al
or     $0x1ba600,%eax
add    %al,-0x4df7f9a4(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xf4d00
add    %al,(%eax)
popw   %es
or     %dl,(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x1bc100
add    %ah,-0x5f(%eax)
push   %es
or     %cl,0x12000000(%edi)
add    %cl,0xac400
add    %dh,-0x17(%eax)
push   %es
or     %bh,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x1be700
add    %dh,%al
mov    $0x7,%bh
or     %ah,0x0(%ecx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1bf900,%eax
add    %ah,(%eax)
pushf
push   %es
or     %ch,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1c1800,%eax
add    %dl,-0x6d(%eax)
push   %es
or     %bh,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1c4100
add    %dh,(%eax)
sbb    %al,(%edi)
or     %dh,0x0(%ebp)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1c5d00,%eax
add    %ah,(%eax)
cmp    %al,(%edi)
or     %al,0x12000001(%edx)
add    %cl,0x1c7200
add    %dl,%al
push   %es
or     %ecx,(%eax)
mov    $0x12000001,%edi
add    %cl,0x1c8200
add    %al,(%eax)
mov    $0x6,%cl
or     %ah,0x1(%ecx)
add    %al,(%eax)
adc    (%eax),%al
or     $0xdf800,%eax
add    %al,0x780807b9(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xe9400
add    %ah,(%eax)
sbb    (%edi),%al
or     %bl,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %cl,0x1c9100
add    %dl,-0x73f7f962(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1cb600
add    %al,(%eax)
push   %esp
push   %es
or     %dl,0x12000000(%ecx)
add    %cl,0x1cd700
add    %al,%al
push   %edi
push   %es
or     %al,0x12000000(%edx)
add    %cl,0x1cf800
add    %dh,0x6b08074e(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xa1400
add    %ah,-0x52(%eax)
push   %es
or     %bh,0x12000000(%edx)
add    %cl,0x1d1100
add    %dl,-0x49f7f951(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1d2600
add    %dl,0x7c(%eax)
pop    %es
or     %bl,(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1d3900
add    %al,(%eax)
mov    (%esi),%es
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x10000
add    %dh,%al
jbe    804a075 <_init-0x2f37>
or     %bh,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %cl,0x1d5a00
add    %dh,(%eax)
aaa
pop    %es
or     %dl,0x12000000(%ebx)
add    %cl,0x1d7800
add    %al,(%eax)
add    $0x9,%al
or     %dl,0x12000000(%edx)
add    %cl,0x1d9100
add    %dh,(%eax)
and    (%edi),%eax
or     %cl,0x12000000(%edx)
add    %cl,0x1da900
add    %dl,%al
mov    0x8c0806,%al
add    %al,(%eax)
adc    (%eax),%al
or     $0x93c00,%eax
add    %dh,-0x7f7f8b1(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x50000
add    %al,(%ebx,%eiz,2)
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
ltr    0x0(%esi,%ecx,1)
add    %dl,%al
or     $0x7,%al
or     %cl,0x12000002(%ebp)
add    %cl,0x1dcf00
add    %dh,0x1f(%eax)
pop    %es
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1deb00
add    %dh,0x1a08070a(%eax)
add    (%eax),%al
add    %dl,(%edx)
add    %cl,0x105a00
add    %al,-0x7e(%eax)
push   %es
or     %ah,0x12000000(%ecx)
add    %cl,0x9d700
add    %al,(%eax)
dec    %esi
pop    %es
or     %ch,0x12000000(%edi)
add    %cl,0x1e1000
add    %dl,(%eax)
icebp
push   %es
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1e2e00
add    %ah,-0x70f7f95d(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xebc00
add    %dl,%al
addl   $0x2a08,(%edi)
add    %dl,(%edx)
add    %cl,0x1e5400
add    %al,%al
and    %eax,(%edi)
or     %cl,0x12000000(%edx)
add    %cl,0x76600
add    %ah,0x4080b83(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%edx)
add    %ah,0x0(%eax,%eiz,1)
add    %dl,0x80b83(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%edx)
add    %dh,0x1e(%ecx)
add    %al,(%eax)
inc    %eax
mov    0x8f0806,%al
add    %al,(%eax)
adc    (%eax),%al
or     $0xd0700,%eax
add    %dl,%al
addr16 pop %es
or     %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
or     $0x207000,%eax
add    %dl,-0x77(%eax)
or     (%eax),%ecx
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
sbb    (%eax),%al
mov    $0x50000000,%esp
jl     804a1c5 <_init-0x2de7>
or     %dl,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xe2500
add    %ah,0xf(%eax)
pop    %es
or     %ch,0x12000001
add    %cl,0x1e9a00
add    %dl,0x22(%eax)
pop    %es
or     %dl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xdb100
add    %dh,0x8080781(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1eb200
add    %dh,0x77(%eax)
push   %es
or     %cl,0x12000001
add    %cl,0xa7600
add    %ah,-0xd(%eax)
push   %es
or     %bl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x1ed100
add    %dl,0x7a(%eax)
pop    %es
or     %bh,0x0(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1ef600,%eax
add    %al,(%eax)
push   %esp
pop    %es
or     %bh,0x0(%eax,%eax,1)
add    %dl,(%edx)
add    %cl,0x1f0e00
add    %dh,0x65080739(%eax)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x1f2500
add    %ah,-0x10(%eax)
push   %es
or     %dh,(%esi)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xc6400
add    %ah,%al
nop
push   %es
or     %bl,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x1f3700
add    %al,(%eax)
add    (%ecx),%ecx
or     %dl,(%esi)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x100000
add    %dl,-0x6c(%eax)
push   %es
or     %bl,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
or     $0xf2200,%eax
add    %ah,(%eax)
mov    $0x590807,%ecx
add    %al,(%eax)
adc    (%eax),%al
or     $0x1f4c00,%eax
add    %dh,%al
imul   $0x8,(%esi),%eax
fldl   (%ecx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1f6e00,%eax
add    %dh,%al
mov    0x8c0806,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x1f9800,%eax
add    %ah,0x72080679(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x1fb400
add    %ah,%al
daa
pop    %es
or     %bh,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1fcf00,%eax
add    %ah,%al
jmp    804a2e6 <_init-0x2cc6>
or     %bh,(%edi)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x106f00
add    %al,%al
and    (%edi),%eax
or     %cl,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %cl,0x95a00
add    %ah,%al
cli
push   %es
or     %ah,0x12000000(%edx)
add    %cl,0xa2800
add    %dl,(%eax)
add    (%edi),%al
or     %bl,%dl
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xcd300
add    %dl,-0x55f7f900(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xe0c00
add    %dl,-0x7b(%eax)
push   %es
or     %dh,(%ebx)
push   %es
add    %al,(%eax)
adc    (%eax),%al
or     $0x90400,%eax
add    %al,-0x5df7f8e9(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xe4700
add    %al,-0x28f7f898(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x18600
add    %ah,%ah
bound  %ecx,(%ecx)
or     %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,(%esi)
add    %bl,%ah
pop    %ds
add    %al,(%eax)
mov    $0x50,%al
pop    %es
or     %ah,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x1ff400,%eax
add    %al,(%eax)
or     $0x22b0809,%eax
add    %al,(%eax)
adc    (%eax),%al
or     $0x200c00,%eax
add    %ah,0x35(%eax)
pop    %es
or     %ch,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
or     $0x202800,%eax
add    %dh,%al
mov    (%edi),%eax
or     %bl,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0x204200
add    %al,-0x5df7f907(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %cl,0xeaa00
add    %al,%al
mov    $0xc20807,%ebx
add    %al,(%eax)
adc    (%eax),%al
.byte 0xd
add    %ch,0x62(%ecx,%ebp,2)
jae    804a447 <_init-0x2b65>
jae    804a444 <_init-0x2b68>
gs
insl   (%dx),%es:(%edi)
fs
sub    $0x69676f6c,%eax
outsb  %ds:(%esi),(%dx)
jae,pn 804a44b <_init-0x2b61>
xor    %al,%cs:(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804a456 <_init-0x2b56>
je     804a452 <_init-0x2b5a>
gs
js     804a45f <_init-0x2b4d>
je     804a457 <_init-0x2b55>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x656e6e6f,%fs:0x63(%ebx),%esi
arpl   %si,0x5f(%eax,%eax,1)
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     804a474 <_init-0x2b38>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
gs
jb     804a49c <_init-0x2b10>
outsl  %ds:(%esi),(%dx)
jb     804a48c <_init-0x2b20>
imul   $0x62640074,0x69(%esi),%ebp
jne    804a4a9 <_init-0x2b03>
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    804a4b2 <_init-0x2afa>
jb     804a4ab <_init-0x2b01>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    804a4ac <_init-0x2b00>
gs
jb     804a4c2 <_init-0x2aea>
outsl  %ds:(%esi),(%dx)
jb     804a4b2 <_init-0x2afa>
data16
jb     804a4bb <_init-0x2af1>
add    %bl,%gs:0x5f(%edi)
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804a4d5 <_init-0x2ad7>
popa
jb     804a4d8 <_init-0x2ad4>
pop    %edi
pop    %edi
add    %ah,0x75(%edx,%eiz,2)
jae    804a4cb <_init-0x2ae1>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     804a4df <_init-0x2acd>
outsb  %ds:(%esi),(%dx)
pop    %edi
jo     804a4f0 <_init-0x2abc>
imul   $0x64006574,0x61(%esi),%esi
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
add    %bl,%gs:0x4a(%edi)
jbe    804a4fd <_init-0x2aaf>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    804a51e <_init-0x2a8e>
gs
jae    804a4ae <_init-0x2afe>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     804a51a <_init-0x2a92>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
insb   (%dx),%es:(%edi)
jne    804a54f <_init-0x2a5d>
push   $0x5f647300
jne    804a54c <_init-0x2a60>
fs
pop    %edi
addr16
gs
je     804a548 <_init-0x2a64>
jae    804a550 <_init-0x2a5c>
popa
je     804a561 <_init-0x2a4b>
add    %ch,0x62(%ecx,%ebp,2)
gs
js     804a565 <_init-0x2a47>
popa
je     804a526 <_init-0x2a86>
jae    804a569 <_init-0x2a43>
xor    %eax,%cs:(%eax)
pop    %eax
dec    %ebp
dec    %esp
pop    %edi
inc    %edi
gs
je     804a548 <_init-0x2a64>
jne    804a579 <_init-0x2a33>
jb     804a56e <_init-0x2a3e>
outsb  %ds:(%esi),(%dx)
je     804a54f <_init-0x2a5d>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jne    804a57d <_init-0x2a2f>
outsb  %ds:(%esi),(%dx)
dec    %esi
jne    804a581 <_init-0x2a2b>
bound  %esp,0x72(%ebp)
add    %bl,0x4d(%eax)
dec    %esp
pop    %edi
push   %ebx
gs
je     804a575 <_init-0x2a37>
jae    804a587 <_init-0x2a25>
jb     804a568 <_init-0x2a44>
popa
je     804a588 <_init-0x2a24>
add    %bl,0x4d(%eax)
dec    %esp
pop    %edi
inc    %ebp
jb     804a5a1 <_init-0x2a0b>
outsl  %ds:(%esi),(%dx)
jb     804a585 <_init-0x2a27>
je     804a5a6 <_init-0x2a06>
imul   $0x4c4d5800,0x67(%esi),%ebp
pop    %edi
push   %ebx
gs
je     804a585 <_init-0x2a27>
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804a58f <_init-0x2a1d>
popa
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
gs
jb     804a54e <_init-0x2a5e>
pop    %edi
imul   $0x5800,0x69(%esi),%bp
dec    %ebp
dec    %esp
pop    %edi
push   %ebx
gs
je     804a59f <_init-0x2a0d>
push   $0x63617261
je     804a5c8 <_init-0x29e4>
jb     804a5a9 <_init-0x2a03>
popa
je     804a5c9 <_init-0x29e3>
dec    %eax
popa
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
gs
jb     804a570 <_init-0x2a3c>
pop    %eax
dec    %ebp
dec    %esp
pop    %edi
inc    %edi
gs
je     804a5bb <_init-0x29f1>
jne    804a5ec <_init-0x29c0>
jb     804a5e1 <_init-0x29cb>
outsb  %ds:(%esi),(%dx)
je     804a5cb <_init-0x29e1>
imul   $0x626d754e,0x65(%esi),%ebp
gs
jb     804a589 <_init-0x2a23>
pop    %eax
dec    %ebp
dec    %esp
pop    %edi
push   %eax
popa
jb     804a604 <_init-0x29a8>
gs
jb     804a5da <_init-0x29d2>
jb     804a5fb <_init-0x29b1>
add    %bl,%gs:0x4d(%eax)
dec    %esp
pop    %edi
push   %eax
popa
jb     804a613 <_init-0x2999>
gs
jb     804a5e6 <_init-0x29c6>
jb     804a60a <_init-0x29a2>
popa
je     804a60d <_init-0x299f>
pop    %edi
dec    %ebp
dec    %ebp
add    %bl,0x4d(%eax)
dec    %esp
pop    %edi
inc    %edi
gs
je     804a5f9 <_init-0x29b3>
jb     804a628 <_init-0x2984>
outsl  %ds:(%esi),(%dx)
jb     804a5fc <_init-0x29b0>
outsl  %ds:(%esi),(%dx)
fs add %bl,%fs:%gs:0x4d(%eax)
dec    %esp
pop    %edi
push   %eax
popa
jb     804a638 <_init-0x2974>
add    %ch,%gs:0x62(%ecx,%ebp,2)
jae    804a631 <_init-0x297b>
insb   (%dx),%es:(%edi)
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %eax,%cs:(%eax)
popa
jbe    804a63d <_init-0x296f>
pop    %edi
arpl   %bp,0x6e(%edi)
je     804a645 <_init-0x2967>
js     804a656 <_init-0x2956>
pop    %edi
je     804a654 <_init-0x2958>
pop    %edi
jae    804a651 <_init-0x295b>
add    %ch,%fs:0x73(%ecx)
pop    %edi
jae    804a654 <_init-0x2958>
insb   (%dx),%es:(%edi)
imul   $0x6e655f78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %dh,0x69(%ebx)
fs
jo     804a677 <_init-0x2935>
je     804a604 <_init-0x29a8>
popa
jbe    804a66a <_init-0x2942>
pop    %edi
fs
gs
jae    804a680 <_init-0x292c>
jb     804a67d <_init-0x292f>
jns    804a610 <_init-0x299c>
jae    804a677 <_init-0x2935>
insb   (%dx),%es:(%edi)
imul   $0x6f705f78,0x75(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x6f6f725f,0x79(%ebx),%esp
je     804a624 <_init-0x2988>
data16
jb     804a68c <_init-0x2920>
arpl   %bp,%gs:0x6e(%edi)
add    %ah,0x76(%ecx)
arpl   %bx,0x69(%edi)
outsb  %ds:(%esi),(%dx)
imul   $0x735f6376,0x61(%eax,%eax,1),%esi
imul   $0x6f635f6f,0x74(%edi,%ebx,2),%esp
outsb  %ds:(%esi),(%dx)
je     804a6aa <_init-0x2902>
js     804a6bb <_init-0x28f1>
add    %dh,0x69(%ebx)
fs
addr16
gs
je     804a64f <_init-0x295d>
popa
jbe    804a6b5 <_init-0x28f7>
pop    %edi
push   $0x705f7361
gs
jb     804a6c8 <_init-0x28e4>
add    %ah,0x76(%ecx)
arpl   %bx,0x61(%edi)
fs
fs
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
bound  %esp,0x63(%ecx)
imul   $0x6c,(%eax),%eax
imul   $0x72617070,0x61(%edx),%esp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804a6a7 <_init-0x2905>
jae    804a6ea <_init-0x28c2>
xor    %eax,%cs:(%eax)
popa
popa
pop    %edi
addr16
gs
je     804a6f5 <_init-0x28b7>
gs
gs
jb     804a6ec <_init-0x28c0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x61(%ecx)
pop    %edi
addr16
gs
je     804a6f6 <_init-0x28b6>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x61(%ecx)
pop    %edi
imul   $0x62616e65,0x5f(%ebx),%esi
insb   (%dx),%es:(%edi)
gs add %ah,%fs:%gs:0x61(%ecx)
pop    %edi
jno    804a71e <_init-0x288e>
gs
jb     804a725 <_init-0x2887>
pop    %edi
insb   (%dx),%es:(%edi)
popa
bound  %esp,0x6c(%ebp)
add    %ah,0x61(%ecx)
pop    %edi
imul   $0x6d5f,0x64(%esi),%bp
outsl  %ds:(%esi),(%dx)
jne    804a72d <_init-0x287f>
je     804a731 <_init-0x287b>
outsl  %ds:(%esi),(%dx)
imul   $0x62696c00,0x74(%esi),%ebp
jo     804a73f <_init-0x286d>
push   $0x64616572
jae,pn 804a742 <_init-0x286a>
xor    %al,%cs:(%eax)
jo     804a74c <_init-0x2860>
push   $0x64616572
pop    %edi
arpl   %bp,0x6e(%edi)
fs
pop    %edi
fs
gs
jae    804a75b <_init-0x2851>
jb     804a758 <_init-0x2854>
jns    804a6eb <_init-0x28c1>
ja     804a74e <_init-0x285e>
imul   $0x6f660064,0x69(%eax,%esi,2),%esi
jb     804a762 <_init-0x284a>
add    %dh,0x74(%eax)
push   $0x64616572
pop    %edi
arpl   %si,0x65(%edx)
popa
je     804a76b <_init-0x2841>
add    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
insl   (%dx),%es:(%edi)
jae    804a775 <_init-0x2837>
add    %dh,0x74(%eax)
push   $0x64616572
pop    %edi
insl   (%dx),%es:(%edi)
jne    804a78e <_init-0x281e>
gs
js     804a77e <_init-0x282e>
je     804a793 <_init-0x2819>
jb     804a780 <_init-0x282c>
jae    804a788 <_init-0x2824>
je     804a799 <_init-0x2813>
jns    804a797 <_init-0x2815>
add    %dh,%gs:0x74(%eax)
push   $0x64616572
pop    %edi
arpl   %sp,0x6e(%ecx)
arpl   %sp,0x6c(%ebp)
add    %ch,0x61(%esi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jae    804a7aa <_init-0x2802>
gs
gs
jo     804a742 <_init-0x286a>
jo     804a7b8 <_init-0x27f4>
push   $0x64616572
pop    %edi
insl   (%dx),%es:(%edi)
jne    804a7c1 <_init-0x27eb>
gs
js     804a7af <_init-0x27fd>
imul   $0x74700074,0x69(%esi),%ebp
push   $0x64616572
pop    %edi
arpl   %bp,0x6e(%edi)
fs
popa
je     804a7d8 <_init-0x27d4>
jb     804a7c5 <_init-0x27e7>
jae    804a7cd <_init-0x27df>
je     804a7cd <_init-0x27df>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
jo     804a7e5 <_init-0x27c7>
push   $0x64616572
pop    %edi
arpl   %bp,0x6e(%edi)
fs
pop    %edi
ja     804a7df <_init-0x27cd>
imul   $0x65726874,0x70(%eax,%eax,1),%esi
popa
fs
pop    %edi
arpl   %bp,0x6e(%edi)
fs
popa
je     804a804 <_init-0x27a8>
jb     804a7f1 <_init-0x27bb>
imul   $0x74700074,0x69(%esi),%ebp
push   $0x64616572
pop    %edi
insl   (%dx),%es:(%edi)
jne    804a816 <_init-0x2796>
gs
js     804a804 <_init-0x27a8>
jne    804a815 <_init-0x2797>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
jb     804a80f <_init-0x279d>
imul   $0x68747000,0x65(%ebx),%esi
jb     804a81c <_init-0x2790>
popa
fs
pop    %edi
arpl   %bp,0x6e(%edi)
fs
pop    %edi
jae    804a82a <_init-0x2782>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x65(%edx)
arpl   %si,0x6d(%esi)
jae    804a834 <_init-0x2778>
add    %dh,0x74(%eax)
push   $0x64616572
pop    %edi
insl   (%dx),%es:(%edi)
jne    804a84d <_init-0x275f>
gs
js     804a83d <_init-0x276f>
je     804a852 <_init-0x275a>
jb     804a83f <_init-0x276d>
imul   $0x74700074,0x69(%esi),%ebp
push   $0x64616572
pop    %edi
insl   (%dx),%es:(%edi)
jne    804a864 <_init-0x2748>
gs
js     804a854 <_init-0x2758>
je     804a869 <_init-0x2743>
jb     804a856 <_init-0x2756>
fs
gs
jae    804a86f <_init-0x273d>
jb     804a86c <_init-0x2740>
jns    804a7ff <_init-0x27ad>
jo     804a875 <_init-0x2737>
push   $0x64616572
pop    %edi
arpl   %bp,0x6e(%edi)
fs
pop    %edi
imul   $0x5f5f0074,0x69(%esi),%ebp
gs
jb     804a888 <_init-0x2724>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x68747000,0x6e(%edi),%ebp
jb     804a88c <_init-0x2720>
popa
fs
pop    %edi
arpl   %bp,0x6e(%edi)
fs
popa
je     804a8a5 <_init-0x2707>
jb     804a892 <_init-0x271a>
fs
gs
jae    804a8ab <_init-0x2701>
jb     804a8a8 <_init-0x2704>
jns    804a83b <_init-0x2771>
jo     804a8b1 <_init-0x26fb>
push   $0x64616572
pop    %edi
arpl   %bp,0x6e(%edi)
fs
pop    %edi
je     804a8b3 <_init-0x26f9>
insl   (%dx),%es:(%edi)
gs
fs
ja     804a8b0 <_init-0x26fc>
imul   $0x6c746e63,0x66(%eax,%eax,1),%esi
add    %dh,0x74(%eax)
push   $0x64616572
pop    %edi
insl   (%dx),%es:(%edi)
jne    804a8d7 <_init-0x26d5>
gs
js     804a8c5 <_init-0x26e7>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
jo     804a8e1 <_init-0x26cb>
push   $0x64616572
pop    %edi
insl   (%dx),%es:(%edi)
jne    804a8ea <_init-0x26c2>
gs
js     804a8d8 <_init-0x26d4>
fs
gs
jae    804a8f1 <_init-0x26bb>
jb     804a8ee <_init-0x26be>
jns    804a881 <_init-0x272b>
popa
arpl   %sp,0x65(%ebx)
jo     804a8fb <_init-0x26b1>
add    %dh,0x69(%ebx)
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x73(%esi)
jns    804a904 <_init-0x26a8>
arpl   %ax,(%eax)
insb   (%dx),%es:(%edi)
imul   $0x6f732e74,0x72(%edx),%esp
xor    %eax,%cs:(%eax)
arpl   %bp,0x63(%edi,%ebp,2)
imul   $0x65,0x67(%edi),%ebx
je     804a91f <_init-0x268d>
gs
jae    804a8b0 <_init-0x26fc>
arpl   %bp,0x63(%edi,%ebp,2)
imul   $0x65,0x67(%edi),%ebx
je     804a92e <_init-0x267e>
imul   $0x62696c00,0x65(%ebp),%ebp
arpl   %bp,(%esi)
jae    804a934 <_init-0x2678>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    804a942 <_init-0x266a>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x70(%ebp)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %si,0x65(%edx)
popa
je     804a948 <_init-0x2664>
add    %dh,0x65(%ebx)
je     804a95d <_init-0x264f>
imul   $0x73756c66,0x66(%eax,%eax,1),%esp
push   $0x72747300
arpl   %si,0x79(%eax)
add    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     804a967 <_init-0x2645>
data16
jns    804a960 <_init-0x264c>
imul   $0x66003174,0x69(%esi),%ebp
arpl   %bp,0x6d(%eax)
outsl  %ds:(%esi),(%dx)
add    %bl,%fs:0x5f(%edi)
jo     804a984 <_init-0x2628>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x72,(%eax),%eax
gs
popa
fs imul $0x63657865,%fs:0x0(%edx),%esi
63
jbe    804a929 <_init-0x2683>
jae    804a99d <_init-0x260f>
popa
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x6f(%esi)
jo     804a998 <_init-0x2614>
outsb  %ds:(%esi),(%dx)
add    %ah,0x61(%edi)
imul   $0x72657274,0x73(%edi),%ebx
jb     804a9af <_init-0x25fd>
jb     804a942 <_init-0x266a>
jae    804a9b8 <_init-0x25f4>
jb     804a9b4 <_init-0x25f8>
arpl   %bp,0x70(%ebp)
add    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    804a9b4 <_init-0x25f8>
imul   $0x6c6f7065,%fs:0x0(%edx),%esi
insb   (%dx),%es:(%edi)
pop    %edi
ja     804a9bc <_init-0x25f0>
imul   $0x636e7274,0x73(%eax,%eax,1),%esi
jo     804a9de <_init-0x25ce>
add    %dh,0x75(%eax)
je     804a9dd <_init-0x25cf>
add    %bl,0x5f(%edi)
jbe    804a9e2 <_init-0x25ca>
jo     804a9e3 <_init-0x25c9>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
imul   $0x6d636f72,0x70(%edi),%esp
popa
jae    804a9f0 <_init-0x25bc>
add    %dh,0x65(%edx)
popa
fs imul $0x5f5f0072,%fs:0x5f(%edx),%esi
5f
jae    804aa08 <_init-0x25a4>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x73786c5f,0x5f(%eax,%eax,1),%ebp
je     804aa09 <_init-0x25a3>
je     804a9aa <_init-0x2602>
imul   $0x79666974,0x6f(%esi),%ebp
pop    %edi
jb     804aa21 <_init-0x258b>
pop    %edi
ja     804aa18 <_init-0x2594>
je     804aa1c <_init-0x2590>
push   $0x6c6e7500
imul   $0x646b6d00,0x6b(%esi),%ebp
imul   $0x726f6261,0x0(%edx),%esi
je     804a9ce <_init-0x25de>
pop    %edi
gs
js     804aa3b <_init-0x2571>
je     804a9d4 <_init-0x25d8>
jae    804aa45 <_init-0x2567>
arpl   %bp,0x65(%ebx)
je     804aa4b <_init-0x2561>
popa
imul   $0x70746567,0x0(%edx),%esi
imul   $0x6c6c69,0x6b(%eax,%eax,1),%esp
jae    804aa61 <_init-0x254b>
jb     804aa63 <_init-0x2549>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ah,0x65(%edi)
je     804aa5d <_init-0x254f>
jb     804aa66 <_init-0x2546>
popa
insl   (%dx),%es:(%edi)
pop    %edi
jb     804a9fd <_init-0x25af>
arpl   %bp,0x61(%ebp,%eiz,2)
jb     804aa68 <_init-0x2544>
outsb  %ds:(%esi),(%dx)
jbe    804aa06 <_init-0x25a6>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    804aa83 <_init-0x2529>
jb     804aa7d <_init-0x252f>
outsb  %gs:(%esi),(%dx)
add    %dh,0x69(%ebx)
addr16
gs
insl   (%dx),%es:(%edi)
jo     804aa8f <_init-0x251d>
jns    804aa90 <_init-0x251c>
gs
je     804aa20 <_init-0x258c>
outsl  %ds:(%esi),(%dx)
jo     804aa88 <_init-0x2524>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%bx)
je     804aa8d <_init-0x251f>
fs
fs
jb     804aa99 <_init-0x2513>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    804aa9e <_init-0x250e>
je     804aa3b <_init-0x2571>
ja     804aaaf <_init-0x24fd>
imul   $0x72747300,0x76(%ebp,%eiz,2),%esi
jae    804aabb <_init-0x24f1>
jb     804aa49 <_init-0x2563>
jb     804aab8 <_init-0x24f4>
imul   $0x646e6962,%fs:0x0(%edx),%esi
add    %ah,0x68(%ebx)
imul   $0x636d656d,%fs:0x0(%edx),%esi
insl   (%dx),%es:(%edi)
jo     804aa61 <_init-0x254b>
addr16
gs
je     804aad3 <_init-0x24d9>
popa
insl   (%dx),%es:(%edi)
imul   $0x5f5f006f,%gs:0x66(%esi),%ebp
jae    804aaea <_init-0x24c2>
jae    804aadf <_init-0x24cd>
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x65(%edi)
je     804aaf1 <_init-0x24bb>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6f(%ebx)
jo     804aaf8 <_init-0x24b4>
add    %dh,0x65(%ebx)
je     804aaf0 <_init-0x24bc>
jb     804aafa <_init-0x24b2>
jne    804aafd <_init-0x24af>
jae    804aa8f <_init-0x251d>
fs
jne    804ab02 <_init-0x24aa>
xor    (%eax),%al
jne    804ab04 <_init-0x24a8>
jae    804aafd <_init-0x24af>
je     804aaff <_init-0x24ad>
outsb  %ds:(%esi),(%dx)
jbe    804aa9d <_init-0x250f>
jo     804ab0e <_init-0x249e>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
data16
jo     804ab19 <_init-0x2493>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
imul   $0x65736464,0x61(%edi),%esp
je     804aaba <_init-0x24f2>
addr16
gs
je     804ab2e <_init-0x247e>
ja     804ab35 <_init-0x2477>
imul   $0x75706600,0x72(%edi,%ebx,2),%esp
je     804ab2d <_init-0x247f>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    804ab3d <_init-0x246f>
add    %bl,0x5f(%edi)
jbe    804ab50 <_init-0x245c>
outsb  %ds:(%esi),(%dx)
jo     804ab52 <_init-0x245a>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     804ab5e <_init-0x244e>
je     804ab5d <_init-0x244f>
jne    804ab5c <_init-0x2450>
add    %dh,0x65(%ebx)
je     804ab68 <_init-0x2444>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6f(%ebx)
jo     804ab6f <_init-0x243d>
add    %ah,0x63(%ecx)
arpl   %sp,0x70(%ebp)
je     804ab37 <_init-0x2475>
add    %dh,0x6d(%ebp)
popa
jae    804ab74 <_init-0x2438>
add    %bl,0x5f(%edi)
jae    804ab82 <_init-0x242a>
jb     804ab7e <_init-0x242e>
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x65(%edi)
je     804ab83 <_init-0x2429>
imul   $0x646e6570,0x6f(%eax,%eax,1),%esp
imul   $0x65746567,0x0(%edx),%esi
outsb  %ds:(%esi),(%dx)
jbe    804ab2e <_init-0x247e>
jae    804aba4 <_init-0x2408>
fs
gs
jb     804aba6 <_init-0x2406>
add    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     804aba3 <_init-0x2409>
data16
jns    804ab9c <_init-0x2410>
imul   $0x5f5f0074,0x69(%esi),%ebp
jae    804abb4 <_init-0x23f8>
jo     804abba <_init-0x23f2>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     804abca <_init-0x23e2>
imul   $0x76636578,0x65(%eax,%eax,1),%esp
add    %ah,%gs:0x65(%edi)
je     804abc8 <_init-0x23e4>
imul   $0x72746573,0x0(%si),%esp
insb   (%dx),%es:(%edi)
imul   $0x78650074,0x69(%ebp),%ebp
arpl   %si,%gs:0x70(%esi)
add    %ah,0x65(%edi)
je     804abec <_init-0x23c0>
ja     804abec <_init-0x23c0>
popa
insl   (%dx),%es:(%edi)
pop    %edi
jb     804ab83 <_init-0x2429>
pop    %edi
pop    %edi
data16
js     804abfb <_init-0x23b1>
je     804abeb <_init-0x23c1>
je     804ab8c <_init-0x2420>
data16
ja     804ac01 <_init-0x23ab>
imul   $0x61657266,0x0(%ebp,%eiz,2),%esi
add    %ah,%fs:0x65(%edi)
je     804ac11 <_init-0x239b>
imul   $0x6164666f,0x65(%ebp),%ebp
jns    804aba6 <_init-0x2406>
jb     804ac0d <_init-0x239f>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x70(%ebp)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %si,0x0(%esp,%ebp,2)
addr16
gs
je     804ac20 <_init-0x238c>
jne    804ac26 <_init-0x2386>
add    %ah,%fs:0x65(%edi)
je     804ac35 <_init-0x2377>
gs
jae    804ac2d <_init-0x237f>
imul   $0x68637274,0x73(%eax,%eax,1),%esp
jb     804abd0 <_init-0x23dc>
addr16
gs
je     804ac47 <_init-0x2365>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x6e(%ebx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x70(%ebp)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %si,0x65(%edx)
popa
je     804ac4d <_init-0x235f>
xor    %eax,(%eax)
pop    %edi
pop    %edi
jbe    804ac54 <_init-0x2358>
jo     804ac62 <_init-0x234a>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x66,(%eax),%eax
outsl  %fs:(%esi),(%dx)
jo     804ac63 <_init-0x2349>
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     804ac76 <_init-0x2336>
gs
jae    804ac7c <_init-0x2330>
imul   $0x7973765f,0x5f(%eax,%eax,1),%esp
jae    804ac7d <_init-0x232f>
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x6b(%eax)
add    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     804ac86 <_init-0x2326>
data16
jns    804ac7f <_init-0x232d>
popa
fs
fs
pop    %edi
ja     804ac87 <_init-0x2325>
je     804ac8b <_init-0x2321>
push   $0x65726600
gs
popa
fs
fs
jb     804ac9c <_init-0x2310>
outsb  %ds:(%esi),(%dx)
outsw  %ds:(%esi),(%dx)
add    %bl,0x5f(%edi)
jbe    804ac9c <_init-0x2310>
jae    804acad <_init-0x22ff>
jb     804aca8 <_init-0x2304>
outsb  %ds:(%esi),(%dx)
je     804aca8 <_init-0x2304>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x65(%ebx)
je     804acbe <_init-0x22ee>
imul   $0x72677465,0x67(%eax,%eax,1),%esp
imul   $0x5f5f0072,0x5f(%si),%esp
js     804acd0 <_init-0x22dc>
je     804acc0 <_init-0x22ec>
je     804ac61 <_init-0x234b>
addr16
gs
je     804acd7 <_init-0x22d5>
insb   (%dx),%es:(%edi)
imul   $0x656d0074,0x69(%ebp),%ebp
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804acd7 <_init-0x22d5>
add    %ah,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    804ac7a <_init-0x2332>
jo     804ace5 <_init-0x22c7>
jo     804ace3 <_init-0x22c9>
xor    (%eax),%al
addr16
gs
je     804aceb <_init-0x22c1>
jb     804acf5 <_init-0x22b7>
jne    804acf8 <_init-0x22b4>
insb   (%dx),%es:(%edi)
imul   $0x74657300,0x74(%ebx),%esi
imul   $0x63727473,0x0(%si),%esp
insl   (%dx),%es:(%edi)
jo     804ac9b <_init-0x2311>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     804ad1b <_init-0x2291>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x66726964,0x0(%esi),%ebp
add    %dh,%fs:0x74(%ebx)
jo     804ad1a <_init-0x2292>
jo     804ad32 <_init-0x227a>
add    %dh,0x79(%ebx)
jae    804ad21 <_init-0x228b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
data16
add    %bl,0x5f(%edi)
outsb  %gs:(%esi),(%dx)
jbe    804ad31 <_init-0x227b>
jb     804ad39 <_init-0x2273>
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    804ad30 <_init-0x227c>
insl   (%dx),%es:(%edi)
gs
jae    804ad48 <_init-0x2264>
popa
addr16
gs
pop    %edi
jae    804ad40 <_init-0x226c>
je     804ad3c <_init-0x2270>
popa
jne    804ad54 <_init-0x2258>
outsl  %ds:(%esi),(%dx)
pop    %edi
jae    804ad58 <_init-0x2254>
popa
jb     804ad5b <_init-0x2251>
add    %ah,0x75(%edx,%eiz,2)
jae    804ad4c <_init-0x2260>
insl   (%dx),%es:(%edi)
gs
jae    804ad64 <_init-0x2248>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
bound  %esp,0x73(%ecx)
imul   $0x73756264,0x0(%ebx),%esp
pop    %edi
jo     804ad70 <_init-0x223c>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jae    804ad8c <_init-0x2220>
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
jb     804ad83 <_init-0x2229>
jo     804ad8c <_init-0x2220>
jns    804ad22 <_init-0x228a>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804ad9e <_init-0x220e>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
popa
jb     804ada2 <_init-0x220a>
pop    %edi
je     804adb7 <_init-0x21f5>
jo     804ada5 <_init-0x2207>
add    %ah,0x75(%edx,%eiz,2)
jae    804ada5 <_init-0x2207>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804adb8 <_init-0x21f4>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
ja     804adc1 <_init-0x21eb>
je     804adc2 <_init-0x21ea>
pop    %edi
jb     804adc2 <_init-0x21ea>
jo     804adcb <_init-0x21e1>
jns    804adc0 <_init-0x21ec>
popa
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x64,(%eax),%eax
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804ade2 <_init-0x21ca>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804ade4 <_init-0x21c8>
insl   (%dx),%es:(%edi)
gs
jae    804adfc <_init-0x21b0>
popa
addr16
gs
pop    %edi
imul   $0x7070615f,0x72(%ebp,%eiz,2),%esi
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
bound  %esp,0x73(%ecx)
imul   $0x73756264,0x0(%ebx),%esp
pop    %edi
jo     804ae0b <_init-0x21a1>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jae    804ae18 <_init-0x2194>
je     804ae14 <_init-0x2198>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804ae22 <_init-0x218a>
data16
jns    804adbc <_init-0x21f0>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jo     804ae28 <_init-0x2184>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     804ae31 <_init-0x217b>
arpl   %bp,0x6d(%edi)
jo     804ae43 <_init-0x2169>
gs
je     804ae3f <_init-0x216d>
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804ae40 <_init-0x216c>
gs
jb     804ae56 <_init-0x2156>
outsl  %ds:(%esi),(%dx)
jb     804ae46 <_init-0x2166>
push   $0x6e5f7361
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804ae54 <_init-0x2158>
insl   (%dx),%es:(%edi)
gs
jae    804ae6c <_init-0x2140>
popa
addr16
gs
pop    %edi
imul   $0x6365725f,0x72(%ebp,%eiz,2),%esi
jne    804ae79 <_init-0x2133>
jae    804ae6e <_init-0x213e>
add    %ah,0x75(%edx,%eiz,2)
jae    804ae6e <_init-0x213e>
insl   (%dx),%es:(%edi)
gs
jae    804ae86 <_init-0x2126>
popa
addr16
gs
pop    %edi
addr16
gs
je     804ae7a <_init-0x2132>
je     804ae96 <_init-0x2116>
jo     804ae84 <_init-0x2128>
add    %ah,0x75(%edx,%eiz,2)
jae    804ae84 <_init-0x2128>
insl   (%dx),%es:(%edi)
gs
jae    804ae9c <_init-0x2110>
popa
addr16
gs
pop    %edi
imul   $0x696e695f,0x72(%ebp,%eiz,2),%esi
je     804ae96 <_init-0x2116>
popa
jo     804aeaa <_init-0x2102>
outsb  %gs:(%esi),(%dx)
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804aea2 <_init-0x210a>
insl   (%dx),%es:(%edi)
gs
jae    804aeba <_init-0x20f2>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     804aeae <_init-0x20fe>
insl   (%dx),%es:(%edi)
gs
je     804aebb <_init-0x20f1>
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804aebf <_init-0x20ed>
insl   (%dx),%es:(%edi)
gs
jae    804aed7 <_init-0x20d5>
popa
addr16
gs
pop    %edi
jae    804aecf <_init-0x20dd>
je     804aecb <_init-0x20e1>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
jb     804aed6 <_init-0x20d6>
jo     804aedf <_init-0x20cd>
jns    804ae75 <_init-0x2137>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804aef1 <_init-0x20bb>
popa
addr16
gs
pop    %edi
imul   $0x78656e5f,0x72(%ebp,%eiz,2),%esi
je     804ae8c <_init-0x2120>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804af08 <_init-0x20a4>
popa
addr16
gs
pop    %edi
jne    804af09 <_init-0x20a3>
jb     804af02 <_init-0x20aa>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    804af03 <_init-0x20a9>
insl   (%dx),%es:(%edi)
gs
jae    804af1b <_init-0x2091>
popa
addr16
gs
pop    %edi
imul   $0x696e695f,0x72(%ebp,%eiz,2),%esi
je     804aeb6 <_init-0x20f6>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    804af22 <_init-0x208a>
je     804af1e <_init-0x208e>
gs
jb     804af34 <_init-0x2078>
outsl  %ds:(%esi),(%dx)
jb     804af24 <_init-0x2088>
data16
jb     804af37 <_init-0x2075>
insl   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804af41 <_init-0x206b>
popa
add    %ah,%gs:0x62(%si)
jne    804af49 <_init-0x2063>
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804af49 <_init-0x2063>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
ja     804af52 <_init-0x205a>
je     804af53 <_init-0x2059>
pop    %edi
jb     804af53 <_init-0x2059>
jo     804af5c <_init-0x2050>
jns    804aef2 <_init-0x20ba>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804af69 <_init-0x2043>
je     804af65 <_init-0x2047>
je     804af71 <_init-0x203b>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    804af81 <_init-0x202b>
pop    %edi
data16
jne    804af7f <_init-0x202d>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    804af18 <_init-0x2094>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804af94 <_init-0x2018>
popa
addr16
gs
pop    %edi
jb     804af8c <_init-0x2020>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    804af8d <_init-0x201f>
je     804af99 <_init-0x2013>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    804afa9 <_init-0x2003>
pop    %edi
addr16
gs
je     804af99 <_init-0x2013>
fs
popa
je     804af9f <_init-0x200d>
add    %ah,0x75(%edx,%eiz,2)
jae    804afa3 <_init-0x2009>
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     804af4c <_init-0x2060>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    804afb8 <_init-0x1ff4>
jb     804afcb <_init-0x1fe1>
gs
jb     804afb7 <_init-0x1ff5>
jae    804afbf <_init-0x1fed>
je     804afbb <_init-0x1ff1>
outsb  %ds:(%esi),(%dx)
gs
ja     804afbf <_init-0x1fed>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
jne    804afdc <_init-0x1fd0>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    804afd8 <_init-0x1fd4>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     804afeb <_init-0x1fc1>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804afef <_init-0x1fbd>
pop    %edi
imul   $0x72,0x65(%esp,%esi,2),%bp
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804b009 <_init-0x1fa3>
je     804b005 <_init-0x1fa7>
fs
popa
je     804b00b <_init-0x1fa1>
add    %ah,0x75(%edx,%eiz,2)
jae    804b00f <_init-0x1f9d>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b01e <_init-0x1f8e>
fs
popa
je     804b024 <_init-0x1f88>
add    %ah,0x75(%edx,%eiz,2)
jae    804b028 <_init-0x1f84>
je     804b034 <_init-0x1f78>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    804b044 <_init-0x1f68>
pop    %edi
addr16
gs
je     804b034 <_init-0x1f78>
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x75(%edx,%eiz,2)
jae    804b041 <_init-0x1f6b>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6765725f,0x74(%ebx),%esi
imul   $0x64657265,0x74(%ebx),%esi
add    %ah,0x75(%edx,%eiz,2)
jae    804b061 <_init-0x1f4b>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     804b074 <_init-0x1f38>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    804b075 <_init-0x1f37>
insl   (%dx),%es:(%edi)
gs
jae    804b08d <_init-0x1f1f>
popa
addr16
gs
pop    %edi
push   $0x735f7361
imul   $0x72757461,0x6e(%edi),%esp
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804b090 <_init-0x1f1c>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
fs
fs
pop    %edi
imul   $0x72,0x65(%esp,%esi,2),%bp
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    804b0b3 <_init-0x1ef9>
jb     804b0c6 <_init-0x1ee6>
gs
jb     804b0b2 <_init-0x1efa>
insb   (%dx),%es:(%edi)
imul   $0x64006e65,0x74(%ebx),%esi
bound  %esi,0x73(%ebp)
pop    %edi
jae    804b0c6 <_init-0x1ee6>
jb     804b0d9 <_init-0x1ed3>
gs
jb     804b0c5 <_init-0x1ee7>
jne    804b0d6 <_init-0x1ed6>
jb     804b0cf <_init-0x1edd>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    804b0d0 <_init-0x1edc>
data16
jb     804b0d9 <_init-0x1ed3>
gs
pop    %edi
jae    804b0ec <_init-0x1ec0>
jb     804b0e3 <_init-0x1ec9>
outsb  %ds:(%esi),(%dx)
addr16 pop %edi
popa
jb     804b0f2 <_init-0x1eba>
popa
jns    804b083 <_init-0x1f29>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804b0ff <_init-0x1ead>
popa
addr16
gs
pop    %edi
push   $0x735f7361
outsb  %gs:(%esi),(%dx)
fs
gs
jb     804b09b <_init-0x1f11>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804b117 <_init-0x1e95>
popa
addr16
gs
pop    %edi
addr16
gs
je     804b10b <_init-0x1ea1>
popa
jb     804b116 <_init-0x1e96>
jae    804b0b1 <_init-0x1efb>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804b12d <_init-0x1e7f>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     804b121 <_init-0x1e8b>
gs
jb     804b137 <_init-0x1e75>
outsl  %ds:(%esi),(%dx)
jb     804b127 <_init-0x1e85>
jo     804b13c <_init-0x1e70>
imul   $0x62640066,0x74(%esi),%ebp
jne    804b146 <_init-0x1e66>
pop    %edi
jae    804b13b <_init-0x1e71>
jb     804b14e <_init-0x1e5e>
gs
jb     804b13a <_init-0x1e72>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
pop    %edi
fs
popa
je     804b149 <_init-0x1e63>
pop    %edi
jae    804b157 <_init-0x1e55>
outsl  %ds:(%esi),(%dx)
je     804b0ee <_init-0x1ebe>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
pop    %edi
fs
popa
je     804b16c <_init-0x1e40>
pop    %edi
jae    804b17a <_init-0x1e32>
outsl  %ds:(%esi),(%dx)
je     804b111 <_init-0x1e9b>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    804b17d <_init-0x1e2f>
jb     804b190 <_init-0x1e1c>
gs
jb     804b17c <_init-0x1e30>
addr16
gs
je     804b180 <_init-0x1e2c>
fs
popa
je     804b186 <_init-0x1e26>
add    %ah,0x75(%edx,%eiz,2)
jae    804b18a <_init-0x1e22>
je     804b196 <_init-0x1e16>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    804b1a6 <_init-0x1e06>
pop    %edi
push   $0x6c646e61
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804b19e <_init-0x1e0e>
insl   (%dx),%es:(%edi)
gs
jae    804b1b6 <_init-0x1df6>
popa
addr16
gs
pop    %edi
imul   $0x6e676973,0x5f(%ebx),%esi
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804b1b5 <_init-0x1df7>
bound  %esi,0x73(%ebp)
pop    %edi
popa
fs
fs
pop    %edi
insl   (%dx),%es:(%edi)
popa
je     804b1c5 <_init-0x1de7>
push   $0x75626400
jae    804b1c8 <_init-0x1de4>
ja     804b1cc <_init-0x1de0>
je     804b1d0 <_init-0x1ddc>
push   $0x7465675f
pop    %edi
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 804b179 <_init-0x1e33>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
je     804b1e9 <_init-0x1dc3>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    804b1f9 <_init-0x1db3>
pop    %edi
addr16
gs
je     804b1e9 <_init-0x1dc3>
imul   $0x61767265,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804b1f7 <_init-0x1db5>
bound  %esi,0x73(%ebp)
pop    %edi
jb     804b203 <_init-0x1da9>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804b207 <_init-0x1da5>
pop    %edi
insl   (%dx),%es:(%edi)
popa
je     804b20a <_init-0x1da2>
push   $0x75626400
jae    804b20d <_init-0x1d9f>
ja     804b211 <_init-0x1d9b>
je     804b215 <_init-0x1d97>
push   $0x7465675f
pop    %edi
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x75(%edx,%eiz,2)
jae    804b224 <_init-0x1d88>
ja     804b228 <_init-0x1d84>
je     804b22c <_init-0x1d80>
push   $0x7465735f
pop    %edi
fs
popa
je     804b234 <_init-0x1d78>
add    %ah,0x75(%edx,%eiz,2)
jae    804b238 <_init-0x1d74>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x68637461,%fs:0x70(%ebx),%esi
add    %ah,0x75(%edx,%eiz,2)
jae    804b251 <_init-0x1d5b>
insl   (%dx),%es:(%edi)
gs
jae    804b269 <_init-0x1d43>
popa
addr16
gs
pop    %edi
imul   $0x6f6c635f,0x72(%ebp,%eiz,2),%esi
jae    804b269 <_init-0x1d43>
pop    %edi
arpl   %bp,0x6e(%edi)
je     804b26b <_init-0x1d41>
imul   $0x62640072,0x65(%esi),%ebp
jne    804b286 <_init-0x1d26>
pop    %edi
jae    804b27b <_init-0x1d31>
jb     804b28e <_init-0x1d1e>
gs
jb     804b27a <_init-0x1d32>
jae    804b282 <_init-0x1d2a>
je     804b27e <_init-0x1d2e>
fs
popa
je     804b284 <_init-0x1d28>
add    %ah,0x75(%edx,%eiz,2)
jae    804b288 <_init-0x1d24>
insl   (%dx),%es:(%edi)
gs
jae    804b2a0 <_init-0x1d0c>
popa
addr16
gs
pop    %edi
imul   $0x65706f5f,0x72(%ebp,%eiz,2),%esi
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
je     804b2a1 <_init-0x1d0b>
imul   $0x62640072,0x65(%esi),%ebp
jne    804b2bc <_init-0x1cf0>
pop    %edi
ja     804b2ad <_init-0x1cff>
je     804b2b1 <_init-0x1cfb>
push   $0x7465675f
pop    %edi
jne    804b2c4 <_init-0x1ce8>
imul   $0x64006466,0x5f(%eax),%edi
bound  %esi,0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804b2d8 <_init-0x1cd4>
popa
addr16
gs
pop    %edi
push   $0x705f7361
popa
je     804b2d9 <_init-0x1cd3>
add    %ah,0x75(%edx,%eiz,2)
jae    804b2d6 <_init-0x1cd6>
ja     804b2da <_init-0x1cd2>
je     804b2de <_init-0x1cce>
push   $0x6e61685f
fs
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804b2e8 <_init-0x1cc4>
je     804b2f4 <_init-0x1cb8>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    804b304 <_init-0x1ca8>
pop    %edi
jae    804b2f8 <_init-0x1cb4>
je     804b2f4 <_init-0x1cb8>
fs
popa
je     804b2fa <_init-0x1cb2>
add    %ah,0x75(%edx,%eiz,2)
jae    804b2fe <_init-0x1cae>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804b311 <_init-0x1c9b>
je     804b30d <_init-0x1c9f>
ja     804b311 <_init-0x1c9b>
imul   $0x70,0x75(%ebp),%esp
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x636e7566,0x5f(%esi),%ebp
je     804b329 <_init-0x1c83>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    804b327 <_init-0x1c85>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    804b343 <_init-0x1c69>
jb     804b33c <_init-0x1c70>
imul   $0x6f5f7265,0x74(%bp,%di),%esi
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     804b351 <_init-0x1c5b>
add    %ah,0x75(%edx,%eiz,2)
jae    804b34e <_init-0x1c5e>
ja     804b352 <_init-0x1c5a>
je     804b356 <_init-0x1c56>
push   $0x7465675f
pop    %edi
fs
popa
je     804b35e <_init-0x1c4e>
add    %ah,0x75(%edx,%eiz,2)
jae    804b362 <_init-0x1c4a>
jae    804b36a <_init-0x1c42>
jb     804b37d <_init-0x1c2f>
gs
jb     804b369 <_init-0x1c43>
imul   $0x656e6e6f,%fs:0x63(%ebx),%esi
arpl   %si,0x64(%eax,%eax,1)
bound  %esi,0x73(%ebp)
pop    %edi
jae    804b381 <_init-0x1c2b>
jb     804b394 <_init-0x1c18>
gs
jb     804b380 <_init-0x1c2c>
jae    804b388 <_init-0x1c24>
je     804b384 <_init-0x1c28>
je     804b390 <_init-0x1c1c>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    804b3a0 <_init-0x1c0c>
pop    %edi
data16
jne    804b39e <_init-0x1c0e>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    804b337 <_init-0x1c75>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
gs
jb     804b3b1 <_init-0x1bfb>
outsl  %ds:(%esi),(%dx)
jb     804b3a1 <_init-0x1c0b>
imul   $0x746573,0x5f(%ebx),%esi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    804b3b5 <_init-0x1bf7>
jb     804b3c8 <_init-0x1be4>
gs
jb     804b3b4 <_init-0x1bf8>
jae    804b3bc <_init-0x1bf0>
je     804b3b8 <_init-0x1bf4>
ja     804b3bc <_init-0x1bf0>
je     804b3c0 <_init-0x1bec>
push   $0x6e75665f
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    804b369 <_init-0x1c43>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804b3e5 <_init-0x1bc7>
popa
addr16
gs
pop    %edi
imul   $0x6162615f,0x72(%ebp,%eiz,2),%esi
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
je     804b3e9 <_init-0x1bc3>
imul   $0x62640072,0x65(%esi),%ebp
jne    804b404 <_init-0x1ba8>
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804b409 <_init-0x1ba3>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     804b3fd <_init-0x1baf>
gs
jb     804b413 <_init-0x1b99>
outsl  %ds:(%esi),(%dx)
jb     804b3a4 <_init-0x1c08>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804b41b <_init-0x1b91>
je     804b417 <_init-0x1b95>
ja     804b41b <_init-0x1b91>
je     804b41f <_init-0x1b8d>
push   $0x6e75665f
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    804b3c8 <_init-0x1be4>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     804b43f <_init-0x1b6d>
imul   $0x6f5f7265,0x74(%bp,%di),%esi
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     804b454 <_init-0x1b58>
add    %ah,0x75(%edx,%eiz,2)
jae    804b451 <_init-0x1b5b>
insl   (%dx),%es:(%edi)
gs
jae    804b469 <_init-0x1b43>
popa
addr16
gs
pop    %edi
imul   $0x6874656d,0x5f(%ebx),%esi
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804b46d <_init-0x1b3f>
insl   (%dx),%es:(%edi)
gs
jae    804b485 <_init-0x1b27>
popa
addr16
gs
pop    %edi
popa
jo     804b489 <_init-0x1b23>
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
popa
jb     804b487 <_init-0x1b25>
jae    804b422 <_init-0x1b8a>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     804b49a <_init-0x1b12>
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    804b49b <_init-0x1b11>
insl   (%dx),%es:(%edi)
gs
jae    804b4b3 <_init-0x1af9>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     804b4a7 <_init-0x1b05>
insl   (%dx),%es:(%edi)
gs
je     804b4b4 <_init-0x1af8>
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jb     804b4b6 <_init-0x1af6>
je     804b4c8 <_init-0x1ae4>
jb     804b4c3 <_init-0x1ae9>
add    %ah,0x75(%edx,%eiz,2)
jae    804b4ba <_init-0x1af2>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b4c9 <_init-0x1ae3>
imul   $0x6e6f6e61,0x5f(%ebx),%esi
jns    804b4e0 <_init-0x1acc>
outsl  %ds:(%esi),(%dx)
jne    804b4e9 <_init-0x1ac3>
add    %ah,0x75(%edx,%eiz,2)
jae    804b4db <_init-0x1ad1>
insl   (%dx),%es:(%edi)
gs
jae    804b4f3 <_init-0x1ab9>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
popa
jb     804b502 <_init-0x1aaa>
popa
jns    804b4f2 <_init-0x1aba>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    804b4fb <_init-0x1ab1>
ja     804b4ff <_init-0x1aad>
je     804b503 <_init-0x1aa9>
push   $0x7465675f
pop    %edi
jae    804b517 <_init-0x1a95>
arpl   %bp,0x65(%ebx)
je     804b4ad <_init-0x1aff>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b520 <_init-0x1a8c>
jne    804b531 <_init-0x1a7b>
imul   $0x64006466,0x5f(%eax),%edi
bound  %esi,0x73(%ebp)
pop    %edi
popa
fs
fs
jb     804b538 <_init-0x1a74>
jae    804b548 <_init-0x1a64>
pop    %edi
gs
jae    804b53c <_init-0x1a70>
popa
jo     804b541 <_init-0x1a6b>
pop    %edi
jbe    804b540 <_init-0x1a6c>
insb   (%dx),%es:(%edi)
jne    804b547 <_init-0x1a65>
add    %ah,0x75(%edx,%eiz,2)
jae    804b547 <_init-0x1a65>
popa
fs
fs
jb     804b552 <_init-0x1a5a>
jae    804b562 <_init-0x1a4a>
pop    %edi
jne    804b560 <_init-0x1a4c>
gs
jae    804b558 <_init-0x1a54>
popa
jo     804b55d <_init-0x1a4f>
pop    %edi
jbe    804b55c <_init-0x1a50>
insb   (%dx),%es:(%edi)
jne    804b563 <_init-0x1a49>
add    %ah,0x75(%edx,%eiz,2)
jae    804b563 <_init-0x1a49>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b572 <_init-0x1a3a>
popa
fs
je     804b576 <_init-0x1a36>
popa
jne    804b57e <_init-0x1a2e>
imul   $0x69737365,0x73(%edi,%ebx,2),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
fs
popa
je     804b58a <_init-0x1a22>
add    %ah,0x75(%edx,%eiz,2)
jae    804b58e <_init-0x1a1e>
insl   (%dx),%es:(%edi)
gs
jae    804b5a6 <_init-0x1a06>
popa
addr16
gs
pop    %edi
addr16
gs
je     804b59a <_init-0x1a12>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804b5cb <_init-0x19e1>
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
bound  %ebp,0x72(%edi)
jb     804b5cf <_init-0x19dd>
ja     804b5c7 <_init-0x19e5>
fs
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804b5db <_init-0x19d1>
popa
add    %ah,%gs:0x62(%si)
jne    804b5e3 <_init-0x19c9>
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b5df <_init-0x19cd>
insl   (%dx),%es:(%edi)
popa
js     804b5e3 <_init-0x19c9>
jb     804b5eb <_init-0x19c1>
arpl   %sp,0x69(%ebp)
jbe    804b5f0 <_init-0x19bc>
fs
pop    %edi
jne    804b5fd <_init-0x19af>
imul   $0x736466,0x5f(%eax),%edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %sp,0x6e(%ecx)
pop    %edi
jae    804b611 <_init-0x199b>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
je     804b62a <_init-0x1982>
jo     804b618 <_init-0x1994>
add    %ah,0x75(%edx,%eiz,2)
jae    804b618 <_init-0x1994>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804b62b <_init-0x1981>
je     804b627 <_init-0x1985>
jb     804b639 <_init-0x1973>
jne    804b640 <_init-0x196c>
gs
pop    %edi
jo     804b635 <_init-0x1977>
gs
jb     804b632 <_init-0x197a>
insl   (%dx),%es:(%edi)
gs
jae    804b64a <_init-0x1962>
popa
addr16
gs
jae    804b5dc <_init-0x19d0>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
jae    804b64c <_init-0x1960>
je     804b648 <_init-0x1964>
jne    804b659 <_init-0x1953>
imul   $0x616e5f65,0x75(%ecx),%esi
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804b659 <_init-0x1953>
jo     804b661 <_init-0x194b>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
data16
jb     804b66f <_init-0x193d>
gs
pop    %edi
fs
popa
je     804b671 <_init-0x193b>
pop    %edi
jae    804b67f <_init-0x192d>
outsl  %ds:(%esi),(%dx)
je     804b616 <_init-0x1996>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    804b685 <_init-0x1927>
jne    804b693 <_init-0x1919>
outsl  %fs:(%esi),(%dx)
ja     804b691 <_init-0x191b>
add    %ah,0x75(%edx,%eiz,2)
jae    804b688 <_init-0x1924>
insl   (%dx),%es:(%edi)
gs
jae    804b6a0 <_init-0x190c>
popa
addr16
gs
pop    %edi
addr16
gs
je     804b694 <_init-0x1918>
jo     804b698 <_init-0x1914>
je     804b6a1 <_init-0x190b>
pop    %edi
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     804b6b0 <_init-0x18fc>
jae    804b6a8 <_init-0x1904>
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804b6a9 <_init-0x1903>
insl   (%dx),%es:(%edi)
gs
jae    804b6c1 <_init-0x18eb>
popa
addr16
gs
pop    %edi
addr16
gs
je     804b6b5 <_init-0x18f7>
popa
jb     804b6c0 <_init-0x18ec>
jae    804b6ba <_init-0x18f2>
jbe    804b6be <_init-0x18ee>
insb   (%dx),%es:(%edi)
imul   $0x75626400,0x74(%ebx),%esi
jae    804b6c6 <_init-0x18e6>
insl   (%dx),%es:(%edi)
gs
jae    804b6de <_init-0x18ce>
popa
addr16
gs
pop    %edi
jae    804b6d6 <_init-0x18d6>
je     804b6d2 <_init-0x18da>
fs
popa
je     804b6d8 <_init-0x18d4>
add    %ah,0x75(%edx,%eiz,2)
jae    804b6dc <_init-0x18d0>
insl   (%dx),%es:(%edi)
gs
jae    804b6f4 <_init-0x18b8>
popa
addr16
gs
pop    %edi
push   $0x6d5f7361
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ah,0x75(%edx,%eiz,2)
jae    804b6f4 <_init-0x18b8>
data16
jb     804b6fd <_init-0x18af>
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804b6fe <_init-0x18ae>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
je     804b71e <_init-0x188e>
jns    804b70d <_init-0x189f>
jb     804b715 <_init-0x1897>
imul   $0x665f7265,0x74(%bp,%di),%esi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
bound  %esp,0x63(%ecx)
imul   $0x64,(%eax),%eax
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b733 <_init-0x1879>
insl   (%dx),%es:(%edi)
popa
js     804b737 <_init-0x1875>
insl   (%dx),%es:(%edi)
gs
jae    804b74f <_init-0x185d>
popa
addr16
gs
pop    %edi
jae    804b74b <_init-0x1861>
jp     804b749 <_init-0x1863>
add    %ah,0x75(%edx,%eiz,2)
jae    804b749 <_init-0x1863>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804b75c <_init-0x1850>
je     804b758 <_init-0x1854>
imul   $0x68637461,%fs:0x70(%ebx),%esi
pop    %edi
jae    804b778 <_init-0x1834>
popa
je     804b77c <_init-0x1830>
jae    804b768 <_init-0x1844>
data16
jne    804b77a <_init-0x1832>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    804b776 <_init-0x1836>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804b789 <_init-0x1823>
je     804b785 <_init-0x1827>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
addr16
gs
pop    %edi
jae    804b798 <_init-0x1814>
addr16 jo 804b79b <_init-0x1811>
jo     804b799 <_init-0x1813>
add    %ah,0x75(%edx,%eiz,2)
jae    804b799 <_init-0x1813>
insl   (%dx),%es:(%edi)
gs
jae    804b7b1 <_init-0x17fb>
popa
addr16
gs
pop    %edi
addr16
gs
je     804b7a5 <_init-0x1807>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
jb     804b7b0 <_init-0x17fc>
jo     804b7b9 <_init-0x17f3>
jns    804b74f <_init-0x185d>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    804b7bb <_init-0x17f1>
jb     804b7ce <_init-0x17de>
gs
jb     804b7ba <_init-0x17f2>
jb     804b7c2 <_init-0x17ea>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    804b7c3 <_init-0x17e9>
jae    804b7cb <_init-0x17e1>
jb     804b7de <_init-0x17ce>
gs
jb     804b7ca <_init-0x17e2>
addr16
gs
je     804b7ce <_init-0x17de>
imul   $0x6e6e6f63,0x5f(%ebx),%esi
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %ah,0x75(%edx,%eiz,2)
jae    804b7e0 <_init-0x17cc>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
jb     804b7f4 <_init-0x17b8>
gs
pop    %edi
jo     804b805 <_init-0x17a7>
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
fs
pop    %edi
jae    804b805 <_init-0x17a7>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804b807 <_init-0x17a5>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b816 <_init-0x1796>
imul   $0x68747561,0x5f(%ebx),%esi
outsb  %gs:(%esi),(%dx)
je     804b82b <_init-0x1781>
arpl   %sp,0x74(%ecx)
gs add %ah,%fs:%gs:0x75(%edx,%eiz,2)
jae    804b82c <_init-0x1780>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804b83f <_init-0x176d>
je     804b83b <_init-0x1771>
insl   (%dx),%es:(%edi)
popa
js     804b83f <_init-0x176d>
insl   (%dx),%es:(%edi)
gs
jae    804b857 <_init-0x1755>
popa
addr16
gs
pop    %edi
jne    804b858 <_init-0x1754>
imul   $0x736466,0x5f(%eax),%edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804b86d <_init-0x173f>
popa
addr16
gs
pop    %edi
je     804b879 <_init-0x1733>
jo     804b867 <_init-0x1745>
pop    %edi
je     804b874 <_init-0x1738>
pop    %edi
jae    804b87c <_init-0x1730>
jb     804b873 <_init-0x1739>
outsb  %ds:(%esi),(%dx)
add    %ah,0x62(%si)
jne    804b884 <_init-0x1728>
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
jae    804b88c <_init-0x1720>
popa
jb     804b88f <_init-0x171d>
pop    %edi
jae    804b883 <_init-0x1729>
jb     804b896 <_init-0x1716>
imul   $0x5f79625f,0x65(%ebx),%esp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804b890 <_init-0x171c>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b89f <_init-0x170d>
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     804b8b3 <_init-0x16f9>
pop    %edi
fs
popa
je     804b8b1 <_init-0x16fb>
add    %ah,0x75(%edx,%eiz,2)
jae    804b8b5 <_init-0x16f7>
insl   (%dx),%es:(%edi)
gs
jae    804b8cd <_init-0x16df>
popa
addr16
gs
pop    %edi
jae    804b8c5 <_init-0x16e7>
je     804b8c1 <_init-0x16eb>
jo     804b8c5 <_init-0x16e7>
je     804b8ce <_init-0x16de>
add    %ah,0x75(%edx,%eiz,2)
jae    804b8cb <_init-0x16e1>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b8da <_init-0x16d2>
jne    804b8eb <_init-0x16c1>
imul   $0x636f7270,0x5f(%eax),%edi
gs
jae    804b8fa <_init-0x16b2>
pop    %edi
imul   $0x5f737562,0x64(%eax,%eax,1),%esp
popa
fs
fs
jb     804b8fa <_init-0x16b2>
jae    804b90a <_init-0x16a2>
pop    %edi
outsb  %gs:(%esi),(%dx)
je     804b90e <_init-0x169e>
jns    804b8fd <_init-0x16af>
addr16
gs
je     804b901 <_init-0x16ab>
jbe    804b905 <_init-0x16a7>
insb   (%dx),%es:(%edi)
jne    804b90c <_init-0x16a0>
add    %ah,0x75(%edx,%eiz,2)
jae    804b90c <_init-0x16a0>
insl   (%dx),%es:(%edi)
gs
jae    804b924 <_init-0x1688>
popa
addr16
gs
pop    %edi
addr16
gs
je     804b918 <_init-0x1694>
jb     804b920 <_init-0x168c>
jo     804b929 <_init-0x1683>
jns    804b91e <_init-0x168e>
jae    804b926 <_init-0x1686>
jb     804b92c <_init-0x1680>
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804b92a <_init-0x1682>
popa
fs
fs
jb     804b935 <_init-0x1677>
jae    804b945 <_init-0x1667>
pop    %edi
outsb  %gs:(%esi),(%dx)
je     804b949 <_init-0x1663>
imul   $0x6572665f,0x73(%ebp),%esp
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804b944 <_init-0x1668>
jae    804b94c <_init-0x1660>
jb     804b95f <_init-0x164d>
gs
jb     804b94b <_init-0x1661>
addr16
gs
je     804b94f <_init-0x165d>
popa
fs
fs
jb     804b95a <_init-0x1652>
jae    804b96a <_init-0x1642>
add    %ah,0x75(%edx,%eiz,2)
jae    804b95c <_init-0x1650>
jae    804b968 <_init-0x1644>
outsb  %ds:(%si),(%dx)
popa
je     804b979 <_init-0x1633>
jb     804b96b <_init-0x1641>
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
arpl   %si,0x72(%ebp)
jb     804b97a <_init-0x1632>
outsb  %ds:(%esi),(%dx)
je     804b977 <_init-0x1635>
je     804b993 <_init-0x1619>
jo     804b981 <_init-0x162b>
add    %ah,0x75(%edx,%eiz,2)
jae    804b981 <_init-0x162b>
popa
fs
fs
jb     804b98c <_init-0x1620>
jae    804b99c <_init-0x1610>
pop    %edi
outsb  %gs:(%esi),(%dx)
je     804b9a0 <_init-0x160c>
jns    804b98f <_init-0x161d>
addr16
gs
je     804b993 <_init-0x1619>
insl   (%dx),%es:(%edi)
gs
je     804b9a0 <_init-0x160c>
outsl  %ds:(%esi),(%dx)
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804b99f <_init-0x160d>
insl   (%dx),%es:(%edi)
gs
jae    804b9b7 <_init-0x15f5>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804b9b8 <_init-0x15f4>
je     804b9d4 <_init-0x15d8>
jo     804b9c2 <_init-0x15ea>
add    %ah,0x75(%edx,%eiz,2)
jae    804b9c2 <_init-0x15ea>
je     804b9cd <_init-0x15df>
jb     804b9cc <_init-0x15e0>
popa
fs
jae    804b9ca <_init-0x15e2>
imul   $0x62640074,0x69(%esi),%ebp
jne    804b9e7 <_init-0x15c5>
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804b9e3 <_init-0x15c9>
imul   $0x68637461,%fs:0x70(%ebx),%esi
pop    %edi
jae    804ba03 <_init-0x15a9>
popa
je     804ba07 <_init-0x15a5>
jae    804b994 <_init-0x1618>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804ba10 <_init-0x159c>
popa
addr16
gs
pop    %edi
arpl   %bp,0x6e(%edi)
je     804ba07 <_init-0x15a5>
imul   $0x696e755f,0x73(%esi),%ebp
js     804ba0e <_init-0x159e>
data16
fs
jae    804b9b3 <_init-0x15f9>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804ba2f <_init-0x157d>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
jae    804ba34 <_init-0x1578>
outsb  %ds:(%si),(%dx)
popa
je     804ba45 <_init-0x1567>
jb     804ba37 <_init-0x1575>
add    %ah,0x75(%edx,%eiz,2)
jae    804ba37 <_init-0x1575>
je     804ba53 <_init-0x1559>
jo     804ba41 <_init-0x156b>
pop    %edi
imul   $0x65786966,0x5f(%ebx),%esi
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804ba4a <_init-0x1562>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804ba6e <_init-0x153e>
popa
addr16
gs
pop    %edi
addr16
gs
je     804ba62 <_init-0x154a>
fs
popa
je     804ba68 <_init-0x1544>
add    %ah,0x75(%edx,%eiz,2)
jae    804ba6c <_init-0x1540>
insl   (%dx),%es:(%edi)
gs
jae    804ba84 <_init-0x1528>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     804ba19 <_init-0x1593>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804ba95 <_init-0x1517>
popa
addr16
gs
pop    %edi
push   $0x645f7361
gs
jae    804baa2 <_init-0x150a>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %ah,0x75(%edx,%eiz,2)
jae    804ba9a <_init-0x1512>
insl   (%dx),%es:(%edi)
gs
jae    804bab2 <_init-0x14fa>
popa
addr16
gs
pop    %edi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
pop    %edi
fs
popa
je     804bab1 <_init-0x14fb>
pop    %edi
jae    804babf <_init-0x14ed>
outsl  %ds:(%esi),(%dx)
je     804ba56 <_init-0x1556>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804bad2 <_init-0x14da>
popa
addr16
gs
pop    %edi
arpl   %bp,0x70(%edi)
jns    804ba68 <_init-0x1544>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
je     804bae8 <_init-0x14c4>
jo     804bad6 <_init-0x14d6>
pop    %edi
imul   $0x69736162,0x5f(%ebx),%esi
arpl   %ax,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    804bae7 <_init-0x14c5>
jb     804bafa <_init-0x14b2>
gs
jb     804bae6 <_init-0x14c6>
addr16
gs
je     804baea <_init-0x14c2>
imul   $0x5f737562,0x64(%eax,%eax,1),%esp
jo     804bafa <_init-0x14b2>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jb     804bb07 <_init-0x14a5>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    804bb08 <_init-0x14a4>
insl   (%dx),%es:(%edi)
gs
jae    804bb20 <_init-0x148c>
popa
addr16
gs
pop    %edi
addr16
gs
je     804bb14 <_init-0x1498>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ah,0x75(%edx,%eiz,2)
jae    804bb20 <_init-0x148c>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
push   $0x6d5f7361
gs
jae    804bb47 <_init-0x1465>
popa
addr16
gs
jae    804bb38 <_init-0x1474>
je     804bb4a <_init-0x1462>
pop    %edi
jae    804bb43 <_init-0x1469>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804bb45 <_init-0x1467>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    804bb4f <_init-0x145d>
pop    %edi
gs
jb     804bb60 <_init-0x144c>
outsl  %ds:(%esi),(%dx)
jb     804baf1 <_init-0x14bb>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     804bb68 <_init-0x1444>
popa
fs
pop    %edi
ja     804bb7a <_init-0x1432>
imul   $0x73756264,0x0(%ebp,%eiz,2),%esi
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804bb88 <_init-0x1424>
popa
addr16
gs
pop    %edi
addr16
gs
je     804bb7c <_init-0x1430>
jae    804bb84 <_init-0x1428>
jb     804bb8a <_init-0x1422>
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804bb88 <_init-0x1424>
jo     804bb8c <_init-0x1420>
jb     804bba0 <_init-0x140c>
gs
pop    %edi
popa
fs
fs
jb     804bb99 <_init-0x1413>
jae    804bba9 <_init-0x1403>
add    %ah,0x75(%edx,%eiz,2)
jae    804bb9b <_init-0x1411>
jo     804bba3 <_init-0x1409>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jae    804bbb0 <_init-0x13fc>
je     804bbac <_init-0x1400>
fs
popa
je     804bbb2 <_init-0x13fa>
add    %ah,0x75(%edx,%eiz,2)
jae    804bbb6 <_init-0x13f6>
jae    804bbc2 <_init-0x13ea>
outsb  %ds:(%si),(%dx)
popa
je     804bbd3 <_init-0x13d9>
jb     804bbc5 <_init-0x13e7>
pop    %edi
jbe    804bbc4 <_init-0x13e8>
insb   (%dx),%es:(%edi)
imul   $0x69735f65,0x74(%ecx,%eiz,2),%esp
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%di)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804bbd5 <_init-0x13d7>
jae    804bbe1 <_init-0x13cb>
outsb  %ds:(%si),(%dx)
popa
je     804bbf2 <_init-0x13ba>
jb     804bbe4 <_init-0x13c8>
pop    %edi
imul   $0x6365725f,0x72(%ebp,%eiz,2),%esi
jne    804bbfc <_init-0x13b0>
jae    804bbf1 <_init-0x13bb>
add    %ah,0x75(%edx,%eiz,2)
jae    804bbf1 <_init-0x13bb>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804bc04 <_init-0x13a8>
je     804bc00 <_init-0x13ac>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804bc06 <_init-0x13a6>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jns    804bc1a <_init-0x1392>
outsl  %ds:(%esi),(%dx)
jne    804bc23 <_init-0x1389>
add    %ah,0x75(%edx,%eiz,2)
jae    804bc15 <_init-0x1397>
jae    804bc1d <_init-0x138f>
jb     804bc30 <_init-0x137c>
gs
jb     804bc1c <_init-0x1390>
jae    804bc24 <_init-0x1388>
je     804bc20 <_init-0x138c>
popa
jne    804bc38 <_init-0x1374>
push   $0x63656d5f
push   $0x73696e61
insl   (%dx),%es:(%edi)
jae    804bbd1 <_init-0x13db>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804bc4d <_init-0x135f>
popa
addr16
gs
pop    %edi
popa
jo     804bc51 <_init-0x135b>
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
popa
jb     804bc4f <_init-0x135d>
jae    804bc49 <_init-0x1363>
jbe    804bc4d <_init-0x135f>
insb   (%dx),%es:(%edi)
imul   $0x75626400,0x74(%ebx),%esi
jae    804bc55 <_init-0x1357>
insl   (%dx),%es:(%edi)
gs
jae    804bc6d <_init-0x133f>
popa
addr16
gs
pop    %edi
addr16
gs
je     804bc61 <_init-0x134b>
jo     804bc65 <_init-0x1347>
je     804bc6e <_init-0x133e>
add    %ah,0x75(%edx,%eiz,2)
jae    804bc6b <_init-0x1341>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804bc7a <_init-0x1332>
jne    804bc8b <_init-0x1321>
imul   $0x72657375,0x5f(%eax),%edi
add    %ah,0x75(%edx,%eiz,2)
jae    804bc89 <_init-0x1323>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     804bc9c <_init-0x1310>
imul   $0x665f7265,0x74(%bp,%di),%esi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
bound  %esp,0x63(%ecx)
imul   $0x64,(%eax),%eax
bound  %esi,0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
jb     804bcb7 <_init-0x12f5>
imul   $0x64007265,0x74(%bp,%di),%esi
bound  %esi,0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     804bcc5 <_init-0x12e7>
jne    804bcd6 <_init-0x12d6>
imul   $0x72657375,0x5f(%eax),%edi
add    %ah,0x75(%edx,%eiz,2)
jae    804bcd4 <_init-0x12d8>
jae    804bce0 <_init-0x12cc>
outsb  %ds:(%si),(%dx)
popa
je     804bcf1 <_init-0x12bb>
jb     804bce3 <_init-0x12c9>
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
jae    804bcf3 <_init-0x12b9>
outsb  %ds:(%si),(%dx)
popa
je     804bd04 <_init-0x12a8>
jb     804bcf6 <_init-0x12b6>
add    %ah,0x75(%edx,%eiz,2)
jae    804bcf6 <_init-0x12b6>
bound  %esi,0x73(%ebp)
pop    %edi
jb     804bd02 <_init-0x12aa>
insb   (%dx),%es:(%edi)
gs
popa
jae    804bd07 <_init-0x12a5>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804bd0c <_init-0x12a0>
jae    804bd18 <_init-0x1294>
outsb  %ds:(%si),(%dx)
popa
je     804bd29 <_init-0x1283>
jb     804bd1b <_init-0x1291>
pop    %edi
imul   $0x78656e5f,0x72(%ebp,%eiz,2),%esi
je     804bcc1 <_init-0x12eb>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
bound  %ebp,0x72(%edi)
jb     804bd45 <_init-0x1267>
ja     804bd37 <_init-0x1275>
insl   (%dx),%es:(%edi)
gs
jae    804bd4f <_init-0x125d>
popa
add    %ah,%gs:0x62(%si)
jne    804bd57 <_init-0x1255>
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     804bd57 <_init-0x1255>
popa
fs
pop    %edi
ja     804bd69 <_init-0x1243>
imul   $0x70736964,0x5f(%ebp,%eiz,2),%esi
popa
je     804bd65 <_init-0x1247>
push   $0x75626400
jae    804bd68 <_init-0x1244>
insl   (%dx),%es:(%edi)
gs
jae    804bd80 <_init-0x122c>
popa
addr16
gs
pop    %edi
jae    804bd78 <_init-0x1234>
je     804bd74 <_init-0x1238>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ah,0x75(%edx,%eiz,2)
jae    804bd80 <_init-0x122c>
insl   (%dx),%es:(%edi)
gs
jae    804bd98 <_init-0x1214>
popa
addr16
gs
pop    %edi
jae    804bd90 <_init-0x121c>
je     804bd8c <_init-0x1220>
jae    804bd94 <_init-0x1218>
jb     804bd9a <_init-0x1212>
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804bd98 <_init-0x1214>
insl   (%dx),%es:(%edi)
gs
jae    804bdb0 <_init-0x11fc>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
imul   $0x5f64,0x65(%eax),%di
popa
jb     804bdc5 <_init-0x11e7>
popa
jns    804bd56 <_init-0x1256>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jo     804bdc2 <_init-0x11ea>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
pop    %edi
fs
popa
je     804bdd6 <_init-0x11d6>
pop    %edi
jae    804bde4 <_init-0x11c8>
outsl  %ds:(%esi),(%dx)
je     804bd7b <_init-0x1231>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804bdf7 <_init-0x11b5>
popa
addr16
gs
pop    %edi
addr16
gs
je     804bdeb <_init-0x11c1>
gs
jb     804be01 <_init-0x11ab>
outsl  %ds:(%esi),(%dx)
jb     804bdf1 <_init-0x11bb>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804bdfb <_init-0x11b1>
je     804be17 <_init-0x1195>
jo     804be05 <_init-0x11a7>
pop    %edi
imul   $0x746e6f63,0x5f(%ebx),%esi
popa
imul   $0x62640072,0x65(%esi),%ebp
jne    804be25 <_init-0x1187>
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804be2a <_init-0x1182>
popa
addr16
gs
pop    %edi
fs
gs
insl   (%dx),%es:(%edi)
popa
jb     804be34 <_init-0x1178>
push   $0x625f6c61
jns    804be3c <_init-0x1170>
gs
jae    804be2a <_init-0x1182>
outsb  %ds:(%esi),(%dx)
gs gs fs gs add %ah,%fs:%gs:0x75(%edx,%eiz,2)
75
jae    804be36 <_init-0x1176>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %si,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    804be43 <_init-0x1169>
jae    804be4f <_init-0x115d>
outsb  %ds:(%si),(%dx)
popa
je     804be60 <_init-0x114c>
jb     804be52 <_init-0x115a>
pop    %edi
jbe    804be51 <_init-0x115b>
insb   (%dx),%es:(%edi)
imul   $0x62640065,0x74(%ecx,%eiz,2),%esp
jne    804be6e <_init-0x113e>
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804be73 <_init-0x1139>
popa
addr16
gs
pop    %edi
push   $0x695f7361
outsb  %ds:(%esi),(%dx)
je     804be71 <_init-0x113b>
jb     804be74 <_init-0x1138>
popa
arpl   %sp,0x0(%ebp)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804be85 <_init-0x1127>
jae    804be8d <_init-0x111f>
jb     804bea0 <_init-0x110c>
gs
jb     804be8c <_init-0x1120>
imul   $0x5f737562,0x64(%eax,%eax,1),%esp
insl   (%dx),%es:(%edi)
gs
jae    804beac <_init-0x1100>
popa
addr16
gs
pop    %edi
imul   $0x6f727265,0x5f(%ebx),%esi
jb     804be46 <_init-0x1166>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
jb     804beb6 <_init-0x10f6>
jno    804bec8 <_init-0x10e4>
gs
jae    804beca <_init-0x10e2>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804bec0 <_init-0x10ec>
insl   (%dx),%es:(%edi)
gs
jae    804bed8 <_init-0x10d4>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     804becc <_init-0x10e0>
jae    804bed8 <_init-0x10d4>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804bed8 <_init-0x10d4>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804beeb <_init-0x10c1>
je     804bee7 <_init-0x10c5>
ja     804bef3 <_init-0x10b9>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     804bf02 <_init-0x10aa>
pop    %edi
jne    804bf05 <_init-0x10a7>
gs
jb     804bef4 <_init-0x10b8>
data16
jne    804bf06 <_init-0x10a6>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    804bf02 <_init-0x10aa>
jae    804bf0e <_init-0x109e>
outsb  %ds:(%si),(%dx)
popa
je     804bf1f <_init-0x108d>
jb     804bf11 <_init-0x109b>
pop    %edi
imul   $0x696e695f,0x72(%ebp,%eiz,2),%esi
je     804beb7 <_init-0x10f5>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804bf33 <_init-0x1079>
popa
addr16
gs
pop    %edi
jae    804bf2b <_init-0x1081>
je     804bf27 <_init-0x1085>
fs
gs
jae    804bf40 <_init-0x106c>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %ah,0x75(%edx,%eiz,2)
jae    804bf38 <_init-0x1074>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804bf4b <_init-0x1061>
je     804bf47 <_init-0x1065>
jne    804bf58 <_init-0x1054>
imul   $0x72657375,0x5f(%eax),%edi
pop    %edi
data16
jne    804bf63 <_init-0x1049>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    804bf5f <_init-0x104d>
jo     804bf67 <_init-0x1045>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     804bf70 <_init-0x103c>
fs
popa
je     804bf76 <_init-0x1036>
add    %ah,0x75(%edx,%eiz,2)
jae    804bf7a <_init-0x1032>
jae    804bf82 <_init-0x102a>
jb     804bf95 <_init-0x1017>
gs
jb     804bf81 <_init-0x102b>
data16
jb     804bf8a <_init-0x1022>
gs
pop    %edi
fs
popa
je     804bf8c <_init-0x1020>
pop    %edi
jae    804bf9a <_init-0x1012>
outsl  %ds:(%esi),(%dx)
je     804bf31 <_init-0x107b>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804bfad <_init-0xfff>
popa
addr16
gs
pop    %edi
jae    804bfa5 <_init-0x1007>
je     804bfa1 <_init-0x100b>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804bfbf <_init-0xfed>
outsl  %ds:(%esi),(%dx)
jne    804bfd7 <_init-0xfd5>
outsl  %ds:(%si),(%dx)
imul   $0x7a69735f,0x67(%esi),%ebp
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804bfd2 <_init-0xfda>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804bfe1 <_init-0xfcb>
jae    804bff3 <_init-0xfb9>
arpl   %bp,0x65(%ebx)
je     804bf89 <_init-0x1023>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804bffc <_init-0xfb0>
insl   (%dx),%es:(%edi)
popa
js     804c000 <_init-0xfac>
jb     804c008 <_init-0xfa4>
arpl   %sp,0x69(%ebp)
jbe    804c00d <_init-0xf9f>
fs
pop    %edi
jae    804c015 <_init-0xf97>
jp     804c013 <_init-0xf99>
add    %ah,0x75(%edx,%eiz,2)
jae    804c013 <_init-0xf99>
ja     804c017 <_init-0xf95>
je     804c01b <_init-0xf91>
push   $0x7465675f
pop    %edi
data16
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804c025 <_init-0xf87>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
jb     804c039 <_init-0xf73>
gs
pop    %edi
fs
popa
je     804c03b <_init-0xf71>
pop    %edi
jae    804c049 <_init-0xf63>
outsl  %ds:(%esi),(%dx)
je     804bfe0 <_init-0xfcc>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
je     804c064 <_init-0xf48>
jns    804c053 <_init-0xf59>
jb     804c05b <_init-0xf51>
imul   $0x6f5f7265,0x74(%bp,%di),%esi
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     804c070 <_init-0xf3c>
add    %ah,0x75(%edx,%eiz,2)
jae    804c06d <_init-0xf3f>
insl   (%dx),%es:(%edi)
gs
jae    804c085 <_init-0xf27>
popa
addr16
gs
pop    %edi
addr16
gs
je     804c079 <_init-0xf33>
popa
jne    804c091 <_init-0xf1b>
outsl  %ds:(%esi),(%dx)
pop    %edi
jae    804c095 <_init-0xf17>
popa
jb     804c098 <_init-0xf14>
add    %ah,0x75(%edx,%eiz,2)
jae    804c089 <_init-0xf23>
insl   (%dx),%es:(%edi)
gs
jae    804c0a1 <_init-0xf0b>
popa
addr16
gs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jb     804c0a9 <_init-0xf03>
push   $0x64006c61
bound  %esi,0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     804c0a6 <_init-0xf06>
imul   $0x5f737562,0x64(%eax,%eax,1),%esp
jae    804c0b6 <_init-0xef6>
je     804c0b2 <_init-0xefa>
gs
jb     804c0c8 <_init-0xee4>
outsl  %ds:(%esi),(%dx)
jb     804c059 <_init-0xf53>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804c0d0 <_init-0xedc>
je     804c0cc <_init-0xee0>
insl   (%dx),%es:(%edi)
popa
js     804c0d0 <_init-0xedc>
insl   (%dx),%es:(%edi)
gs
jae    804c0e8 <_init-0xec4>
popa
addr16
gs
pop    %edi
jae    804c0e4 <_init-0xec8>
jp     804c0e2 <_init-0xeca>
add    %ah,0x75(%edx,%eiz,2)
jae    804c0e2 <_init-0xeca>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804c0f1 <_init-0xebb>
imul   $0x6e6e6f63,0x5f(%ebx),%esi
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %ah,0x75(%edx,%eiz,2)
jae    804c103 <_init-0xea9>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jo     804c123 <_init-0xe89>
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
pop    %edi
jae    804c122 <_init-0xe8a>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804c124 <_init-0xe88>
jo     804c12c <_init-0xe80>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %sp,0x6e(%ecx)
arpl   %sp,0x6c(%ebp)
add    %ah,0x75(%edx,%eiz,2)
jae    804c13d <_init-0xe6f>
jae    804c145 <_init-0xe67>
je     804c141 <_init-0xe6b>
gs
jb     804c157 <_init-0xe55>
outsl  %ds:(%esi),(%dx)
jb     804c147 <_init-0xe65>
arpl   %bp,0x6e(%edi)
jae    804c161 <_init-0xe4b>
add    %ah,0x75(%edx,%eiz,2)
jae    804c152 <_init-0xe5a>
je     804c16e <_init-0xe3e>
jo     804c15c <_init-0xe50>
pop    %edi
imul   $0x696c6176,0x5f(%ebx),%esi
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    804c165 <_init-0xe47>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804c174 <_init-0xe38>
ja     804c180 <_init-0xe2c>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     804c18f <_init-0xe1d>
pop    %edi
jne    804c192 <_init-0xe1a>
gs
jb     804c122 <_init-0xe8a>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c19e <_init-0xe0e>
popa
addr16
gs
pop    %edi
je     804c1aa <_init-0xe02>
jo     804c198 <_init-0xe14>
pop    %edi
data16
jb     804c1a6 <_init-0xe06>
insl   (%dx),%es:(%edi)
pop    %edi
jae    804c1af <_init-0xdfd>
jb     804c1a6 <_init-0xe06>
outsb  %ds:(%esi),(%dx)
add    %ah,0x62(%si)
jne    804c1b7 <_init-0xdf5>
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     804c1ac <_init-0xe00>
jne    804c1bd <_init-0xdef>
imul   $0x616e5f65,0x75(%ecx),%esi
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804c1bd <_init-0xdef>
insl   (%dx),%es:(%edi)
gs
jae    804c1d5 <_init-0xdd7>
popa
addr16
gs
pop    %edi
addr16
gs
je     804c1c9 <_init-0xde3>
jae    804c1d1 <_init-0xddb>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     804c171 <_init-0xe3b>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804c1e8 <_init-0xdc4>
je     804c1e4 <_init-0xdc8>
insl   (%dx),%es:(%edi)
popa
js     804c1e8 <_init-0xdc4>
jb     804c1f0 <_init-0xdbc>
arpl   %sp,0x69(%ebp)
jbe    804c1f5 <_init-0xdb7>
fs
pop    %edi
jae    804c1fd <_init-0xdaf>
jp     804c1fb <_init-0xdb1>
add    %ah,0x75(%edx,%eiz,2)
jae    804c1fb <_init-0xdb1>
insl   (%dx),%es:(%edi)
gs
jae    804c213 <_init-0xd99>
popa
addr16
gs
pop    %edi
jae    804c20b <_init-0xda1>
je     804c207 <_init-0xda5>
gs
jb     804c21d <_init-0xd8f>
outsl  %ds:(%esi),(%dx)
jb     804c20d <_init-0xd9f>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    804c217 <_init-0xd95>
insl   (%dx),%es:(%edi)
gs
jae    804c22f <_init-0xd7d>
popa
addr16
gs
pop    %edi
imul   $0x7070615f,0x72(%ebp,%eiz,2),%esi
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
imul   $0x5f64,0x65(%eax),%di
popa
jb     804c247 <_init-0xd65>
popa
jns    804c1d8 <_init-0xdd4>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c254 <_init-0xd58>
popa
addr16
gs
pop    %edi
jae    804c24c <_init-0xd60>
je     804c248 <_init-0xd64>
jb     804c250 <_init-0xd5c>
jo     804c259 <_init-0xd53>
jns    804c24e <_init-0xd5e>
jae    804c256 <_init-0xd56>
jb     804c25c <_init-0xd50>
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    804c25a <_init-0xd52>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804c269 <_init-0xd43>
outsl  %ds:(%esi),(%dx)
jne    804c281 <_init-0xd2b>
outsl  %ds:(%si),(%dx)
imul   $0x696e755f,0x67(%esi),%ebp
js     804c277 <_init-0xd35>
data16
fs
jae    804c21c <_init-0xd90>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c298 <_init-0xd14>
popa
addr16
gs
pop    %edi
addr16
gs
je     804c28c <_init-0xd20>
fs
gs
jae    804c2a5 <_init-0xd07>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %ah,0x75(%edx,%eiz,2)
jae    804c29d <_init-0xd0f>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     804c2ac <_init-0xd00>
insl   (%dx),%es:(%edi)
popa
js     804c2b0 <_init-0xcfc>
insl   (%dx),%es:(%edi)
gs
jae    804c2c8 <_init-0xce4>
popa
addr16
gs
pop    %edi
jne    804c2c9 <_init-0xce3>
imul   $0x736466,0x5f(%eax),%edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c2de <_init-0xcce>
popa
addr16
gs
pop    %edi
jae    804c2d6 <_init-0xcd6>
je     804c2d2 <_init-0xcda>
jae    804c2da <_init-0xcd2>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     804c27a <_init-0xd32>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     804c2f1 <_init-0xcbb>
je     804c303 <_init-0xca9>
jb     804c2fe <_init-0xcae>
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c308 <_init-0xca4>
popa
add    %ah,%gs:0x62(%si)
jne    804c310 <_init-0xc9c>
pop    %edi
jae    804c309 <_init-0xca3>
outsb  %ds:(%si),(%dx)
popa
je     804c31a <_init-0xc92>
jb     804c30c <_init-0xca0>
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804c318 <_init-0xc94>
je     804c334 <_init-0xc78>
jo     804c322 <_init-0xc8a>
add    %ah,0x75(%edx,%eiz,2)
jae    804c322 <_init-0xc8a>
jo     804c32a <_init-0xc82>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jne    804c340 <_init-0xc6c>
jb     804c339 <_init-0xc73>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    804c33a <_init-0xc72>
insl   (%dx),%es:(%edi)
gs
jae    804c352 <_init-0xc5a>
popa
addr16
gs
pop    %edi
fs
gs
insl   (%dx),%es:(%edi)
popa
jb     804c35c <_init-0xc50>
push   $0x64006c61
bound  %esi,0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c369 <_init-0xc43>
popa
addr16
gs
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x0(%ebx)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     804c36b <_init-0xc41>
jo     804c380 <_init-0xc2c>
imul   $0x64006574,0x61(%esi),%esi
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804c38b <_init-0xc21>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
jo     804c39d <_init-0xc0f>
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs add %ah,%fs:%gs:0x75(%edx,%eiz,2)
jae    804c39a <_init-0xc12>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804c3ad <_init-0xbff>
je     804c3a9 <_init-0xc03>
insl   (%dx),%es:(%edi)
popa
js     804c3ad <_init-0xbff>
jb     804c3b5 <_init-0xbf7>
arpl   %sp,0x69(%ebp)
jbe    804c3ba <_init-0xbf2>
fs
pop    %edi
jne    804c3c7 <_init-0xbe5>
imul   $0x736466,0x5f(%eax),%edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jo     804c3e1 <_init-0xbcb>
jo     804c3d3 <_init-0xbd9>
insl   (%dx),%es:(%edi)
gs
jae    804c3eb <_init-0xbc1>
popa
add    %ah,%gs:0x62(%si)
jne    804c3f3 <_init-0xbb9>
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c3f8 <_init-0xbb4>
popa
addr16
gs
pop    %edi
addr16
gs
je     804c3ec <_init-0xbc0>
jae    804c3f8 <_init-0xbb4>
outsb  %ds:(%si),(%dx)
popa
je     804c409 <_init-0xba3>
jb     804c3fb <_init-0xbb1>
add    %ah,0x75(%edx,%eiz,2)
jae    804c3fb <_init-0xbb1>
jb     804c403 <_init-0xba9>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jo     804c410 <_init-0xb9c>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x64,(%eax),%eax
bound  %esi,0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
push   $0x6f5f7361
ja     804c43f <_init-0xb6d>
gs
jb     804c3d4 <_init-0xbd8>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c450 <_init-0xb5c>
popa
addr16
gs
pop    %edi
data16
jb     804c449 <_init-0xb63>
gs
pop    %edi
fs
popa
je     804c44b <_init-0xb61>
pop    %edi
jae    804c459 <_init-0xb53>
outsl  %ds:(%esi),(%dx)
je     804c3f0 <_init-0xbbc>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
je     804c45f <_init-0xb4d>
jb     804c45e <_init-0xb4e>
popa
fs
jae    804c45c <_init-0xb50>
imul   $0x65645f74,0x69(%esi),%ebp
popaw
jne    804c474 <_init-0xb38>
je     804c40a <_init-0xba2>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    804c486 <_init-0xb26>
popa
addr16
gs
pop    %edi
imul   $0x7361685f,0x72(%ebp,%eiz,2),%esi
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     804c498 <_init-0xb14>
add    %bl,0x65(%edi)
fs
popa
je     804c48c <_init-0xb20>
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    804c4a8 <_init-0xb04>
popa
jb     804c4ab <_init-0xb01>
add    %bl,0x65(%edi)
outsb  %ds:(%esi),(%dx)
add    %al,%fs:0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
dec    %esp
dec    %ecx
inc    %edx
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
inc    %esp
pop    %edi
dec    %esp
dec    %edi
inc    %edi
dec    %ecx
dec    %esi
pop    %edi
xor    (%ecx),%esi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
cmp    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
cmp    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %esi,(%eax)
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %ecx
push   %eax
push   %eax
inc    %ecx
push   %edx
dec    %ebp
dec    %edi
push   %edx
pop    %edi
xor    %ebp,(%esi)
xor    %eax,(%eax)
inc    %ecx
push   %eax
push   %eax
inc    %ecx
push   %edx
dec    %ebp
dec    %edi
push   %edx
pop    %edi
xor    (%esi),%ch
cmp    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    (%eax),%eax
add    $0x4000300,%eax
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,0x4000000
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
push   %es
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
pop    %es
add    %al,(%ebx)
add    %cl,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
or     (%eax),%al
or     (%eax),%eax
pop    %es
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
or     $0xe000000,%eax
add    %al,(%eax,%eax,1)
or     %eax,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
sldt   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%ebx)
add    %cl,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
pop    %es
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%eax
add    $0x0,%al
or     %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
or     %eax,(%eax)
add    (%eax),%eax
adc    %al,(%eax)
add    (%eax),%eax
pop    %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%ebx)
add    %cl,0x4000400
add    %al,(%ebx)
add    %al,(%eax)
add    %cl,0x11000700
add    %al,0x3000500
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,0xf00
add    %al,(%ebx)
add    %cl,(%ecx)
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
or     %al,(%eax)
add    $0x0,%al
add    (%eax),%eax
add    (%eax),%eax
or     %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    $0x0,%al
add    (%eax),%eax
add    %al,(%eax)
lldt   (%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
push   %es
add    %al,0x14001300
add    %al,(%ebx)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    (%eax),%eax
add    (%eax),%eax
push   %es
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%esi)
add    %cl,0x9000300
add    %dl,(%eax,%eax,1)
add    (%eax),%eax
add    $0x0,%al
adc    (%eax),%al
adc    (%eax),%al
add    $0x0,%al
add    $0x0,%al
add    (%eax),%eax
add    $0x13000300,%eax
add    %al,(%eax,%eax,1)
add    (%eax),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%eax
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
rolb   (%eax,%eax,1)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x140000,0xd(%ecx),%ebp
jne    804c876 <_init-0x736>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
subl   $0xe00000b,(%esp,%ebp,8)
add    %bh,0x20(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    $0x0,%al
incb   (%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dl,(%ecx)
imul   $0x130000,0xd(%ecx),%ebp
xchg   %eax,%ebx
and    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x19(%ebx)
imul   $0x110000,(%ecx),%ecx
popf
and    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x19(%edx)
imul   $0x80000,(%ecx),%ecx
test   $0x10000020,%eax
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x40000,0xd(%ecx),%ebp
mov    $0x20,%ch
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
or     (%eax),%eax
testb  $0x0,(%eax,%eax,1)
adc    %al,(%eax)
add    %al,(%eax)
rolb   $0x0,(%eax)
add    %bl,(%ecx)
imul   $0x120000,0xd(%ecx),%ebp
mov    $0x10000020,%edi
add    %al,(%eax)
add    %bl,(%eax)
imul   $0x100000,0xd(%ecx),%ebp
leave
and    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x19(%edx)
imul   $0xf0000,(%ecx),%ecx
test   $0x10000020,%eax
add    %al,(%eax)
add    %dl,(%edx)
imul   $0xc0000,0xd(%ecx),%ebp
jne    804c936 <_init-0x676>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
nop
xchg   %eax,%ecx
xchg   %eax,%esi
push   %es
add    %al,(%eax)
or     (%eax),%eax
shll   %cl,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     804c948 <_init-0x664>
imul   $0xa0000,(%ecx),%ecx
fisub  (%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x20ea,0x90000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x70000,%eax
xchg   %eax,%ebx
and    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%edx)
imul   $0x60000,(%ecx),%ecx
hlt
and    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,0x210000
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x30000,0xd(%ecx),%ebp
mov    $0x20,%ch
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    (%eax),%al
movsl  %ds:(%esi),%es:(%edi)
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x66(%ecx)
and    (%esi),%eax
add    %al,(%eax)
or     $0x210c00,%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x63(%ecx)
and    (%esi),%eax
add    %al,(%eax)
add    (%eax),%al
sbb    %esp,(%ecx)
add    %al,(%eax)
add    %al,(%eax)
in     $0x7f,%al
or     (%eax),%ecx
push   %es
or     $0x0,%al
add    %ch,%al
jg     804c9d2 <_init-0x5da>
or     %al,(%esi)
addb   $0x0,(%ecx)
in     (%dx),%al
jg     804c9da <_init-0x5d2>
or     %al,(%esi)
pop    %ecx
add    %al,(%eax)
lock jg 804c9e2 <_init-0x5ca>
or     %al,(%esi)
test   $0x83a00000,%eax
or     (%eax),%ecx
.byte 0x5
addb   $0x0,(%ecx)
or     $0x80,%al
or     (%eax),%ecx
pop    %es
add    %eax,(%eax)
add    %dl,(%eax)
orb    $0x8,(%ebx)
pop    %es
add    (%eax),%al
add    %dl,(%eax,%eax,4)
or     (%eax),%ecx
pop    %es
add    (%eax),%eax
add    %bl,(%eax)
orb    $0x8,(%ebx)
pop    %es
add    $0x0,%al
add    %bl,(%eax,%eax,4)
or     (%eax),%ecx
pop    %es
add    $0x80200000,%eax
or     (%eax),%ecx
pop    %es
push   %es
add    %al,(%eax)
and    $0x80,%al
or     (%eax),%ecx
pop    %es
pop    %es
add    %al,(%eax)
sub    %al,0x807080b(%eax)
add    %al,(%eax)
sub    $0x80,%al
or     (%eax),%ecx
pop    %es
or     %eax,(%eax)
add    %dh,(%eax)
orb    $0x8,(%ebx)
pop    %es
or     (%eax),%al
add    %dh,(%eax,%eax,4)
or     (%eax),%ecx
pop    %es
or     (%eax),%eax
add    %bh,(%eax)
orb    $0x8,(%ebx)
pop    %es
or     $0x0,%al
add    %bh,(%eax,%eax,4)
or     (%eax),%ecx
pop    %es
or     $0x80400000,%eax
or     (%eax),%ecx
pop    %es
push   %cs
add    %al,(%eax)
inc    %esp
orb    $0x8,(%ebx)
pop    %es
sldt   (%eax)
dec    %eax
orb    $0x8,(%ebx)
pop    %es
adc    %al,(%eax)
add    %cl,0xb(%eax,%eax,4)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,-0x80(%eax)
or     (%eax),%ecx
pop    %es
adc    $0x0,%al
add    %dl,0xb(%eax,%eax,4)
or     %al,(%edi)
adc    $0x80580000,%eax
or     (%eax),%ecx
pop    %es
push   %ss
add    %al,(%eax)
pop    %esp
orb    $0x8,(%ebx)
pop    %es
pop    %ss
add    %al,(%eax)
pusha
orb    $0x8,(%ebx)
pop    %es
sbb    %al,(%eax)
add    %ah,0xb(%eax,%eax,4)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %ch,-0x80(%eax)
or     (%eax),%ecx
pop    %es
sbb    (%eax),%al
add    %ch,0xb(%eax,%eax,4)
or     %al,(%edi)
sbb    (%eax),%eax
add    %dh,-0x80(%eax)
or     (%eax),%ecx
pop    %es
sbb    $0x0,%al
add    %dh,0xb(%eax,%eax,4)
or     %al,(%edi)
sbb    $0x80780000,%eax
or     (%eax),%ecx
pop    %es
push   %ds
add    %al,(%eax)
jl     804ca46 <_init-0x566>
or     (%eax),%ecx
pop    %es
pop    %ds
add    %al,(%eax)
addb   $0x0,0x2007080b(%eax)
add    %al,0x2107080b(%eax,%eax,4)
add    %al,(%eax)
mov    %al,0x2207080b(%eax)
add    %al,(%eax)
mov    %es,0x2307080b(%eax)
add    %al,(%eax)
nop
orb    $0x8,(%ebx)
pop    %es
and    $0x0,%al
add    %dl,0x2507080b(%eax,%eax,4)
add    %al,(%eax)
cwtl
orb    $0x8,(%ebx)
pop    %es
add    %al,%es:(%eax)
pushf
orb    $0x8,(%ebx)
pop    %es
daa
add    %al,(%eax)
mov    0x7080b80,%al
sub    %al,(%eax)
add    %ah,0x2907080b(%eax,%eax,4)
add    %al,(%eax)
test   $0x80,%al
or     (%eax),%ecx
pop    %es
sub    (%eax),%al
add    %ch,0x2b07080b(%eax,%eax,4)
add    %al,(%eax)
mov    $0x80,%al
or     (%eax),%ecx
pop    %es
sub    $0x0,%al
add    %dh,0x2d07080b(%eax,%eax,4)
add    %al,(%eax)
mov    $0x7080b80,%eax
add    %al,%cs:(%eax)
mov    $0x7080b80,%esp
das
add    %al,(%eax)
rolb   $0x0,0x3007080b(%eax)
add    %al,%ah
orb    $0x8,(%ebx)
pop    %es
xor    %eax,(%eax)
add    %cl,%al
orb    $0x8,(%ebx)
pop    %es
xor    (%eax),%al
add    %cl,%ah
orb    $0x8,(%ebx)
pop    %es
xor    (%eax),%eax
add    %dl,%al
orb    $0x8,(%ebx)
pop    %es
xor    $0x0,%al
add    %dl,%ah
orb    $0x8,(%ebx)
pop    %es
xor    $0x80d80000,%eax
or     (%eax),%ecx
pop    %es
add    %al,%ss:(%eax)
faddl  0x3707080b(%eax)
add    %al,(%eax)
loopne 804cb0e <_init-0x49e>
or     (%eax),%ecx
pop    %es
cmp    %al,(%eax)
add    %ah,%ah
orb    $0x8,(%ebx)
pop    %es
cmp    %eax,(%eax)
add    %ch,%al
orb    $0x8,(%ebx)
pop    %es
cmp    (%eax),%al
add    %ch,%ah
orb    $0x8,(%ebx)
pop    %es
cmp    (%eax),%eax
add    %dh,%al
orb    $0x8,(%ebx)
pop    %es
cmp    $0x0,%al
add    %dh,%ah
orb    $0x8,(%ebx)
pop    %es
cmp    $0x80f80000,%eax
or     (%eax),%ecx
pop    %es
add    %al,%ds:(%eax)
cld
orb    $0x8,(%ebx)
pop    %es
aas
add    %al,(%eax)
add    %al,0x4007080b(%ecx)
add    %al,(%eax)
add    $0x81,%al
or     (%eax),%ecx
pop    %es
inc    %ecx
add    %al,(%eax)
or     %al,0x4207080b(%ecx)
add    %al,(%eax)
or     $0x81,%al
or     (%eax),%ecx
pop    %es
inc    %ebx
add    %al,(%eax)
adc    %al,0x4407080b(%ecx)
add    %al,(%eax)
adc    $0x81,%al
or     (%eax),%ecx
pop    %es
inc    %ebp
add    %al,(%eax)
sbb    %al,0x4607080b(%ecx)
add    %al,(%eax)
sbb    $0x81,%al
or     (%eax),%ecx
pop    %es
inc    %edi
add    %al,(%eax)
and    %al,0x4807080b(%ecx)
add    %al,(%eax)
and    $0x81,%al
or     (%eax),%ecx
pop    %es
dec    %ecx
add    %al,(%eax)
sub    %al,0x4a07080b(%ecx)
add    %al,(%eax)
sub    $0x81,%al
or     (%eax),%ecx
pop    %es
dec    %ebx
add    %al,(%eax)
xor    %al,0x4c07080b(%ecx)
add    %al,(%eax)
xor    $0x81,%al
or     (%eax),%ecx
pop    %es
dec    %ebp
add    %al,(%eax)
cmp    %al,0x4e07080b(%ecx)
add    %al,(%eax)
cmp    $0x81,%al
or     (%eax),%ecx
pop    %es
dec    %edi
add    %al,(%eax)
inc    %eax
orl    $0x500708,(%ebx)
add    %al,0xb(%ecx,%eax,4)
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
dec    %eax
orl    $0x520708,(%ebx)
add    %cl,0xb(%ecx,%eax,4)
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
push   %eax
orl    $0x540708,(%ebx)
add    %dl,0xb(%ecx,%eax,4)
or     %al,(%edi)
push   %ebp
add    %al,(%eax)
pop    %eax
orl    $0x560708,(%ebx)
add    %bl,0xb(%ecx,%eax,4)
or     %al,(%edi)
push   %edi
add    %al,(%eax)
pusha
orl    $0x580708,(%ebx)
add    %ah,0xb(%ecx,%eax,4)
or     %al,(%edi)
pop    %ecx
add    %al,(%eax)
push   $0x7080b81
pop    %edx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
orl    $0x5b0708,(%ebx)
add    %dh,-0x7f(%eax)
or     (%eax),%ecx
pop    %es
pop    %esp
add    %al,(%eax)
je     804cc37 <_init-0x375>
or     (%eax),%ecx
pop    %es
pop    %ebp
add    %al,(%eax)
js     804cc3f <_init-0x36d>
or     (%eax),%ecx
pop    %es
pop    %esi
add    %al,(%eax)
jl     804cc47 <_init-0x365>
or     (%eax),%ecx
pop    %es
pop    %edi
add    %al,(%eax)
addb   $0x0,0x6007080b(%ecx)
add    %al,0x6107080b(%ecx,%eax,4)
add    %al,(%eax)
mov    %al,0x6207080b(%ecx)
add    %al,(%eax)
mov    %es,0x6307080b(%ecx)
add    %al,(%eax)
nop
orl    $0x640708,(%ebx)
add    %dl,0x6507080b(%ecx,%eax,4)
add    %al,(%eax)
cwtl
orl    $0x660708,(%ebx)
add    %bl,0x6707080b(%ecx,%eax,4)
add    %al,(%eax)
mov    0x7080b81,%al
push   $0x81a40000
or     (%eax),%ecx
pop    %es
imul   $0xb81a800,(%eax),%eax
or     %al,(%edi)
push   $0x0
add    %ch,0x6b07080b(%ecx,%eax,4)
add    %al,(%eax)
mov    $0x81,%al
or     (%eax),%ecx
pop    %es
insb   (%dx),%es:(%edi)
add    %al,(%eax)
mov    $0x81,%ah
or     (%eax),%ecx
pop    %es
insl   (%dx),%es:(%edi)
add    %al,(%eax)
mov    $0x7080b81,%eax
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
mov    $0x7080b81,%esp
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
rolb   $0x0,0x7007080b(%ecx)
add    %al,%ah
orl    $0x710708,(%ebx)
add    %cl,%al
orl    $0x720708,(%ebx)
add    %cl,%ah
orl    $0x730708,(%ebx)
add    %dl,%al
orl    $0x740708,(%ebx)
add    %dl,%ah
orl    $0x750708,(%ebx)
add    %bl,%al
orl    $0x760708,(%ebx)
add    %bl,%ah
orl    $0x770708,(%ebx)
add    %ah,%al
orl    $0x780708,(%ebx)
add    %ah,%ah
orl    $0x790708,(%ebx)
add    %ch,%al
orl    $0x7a0708,(%ebx)
add    %ch,%ah
orl    $0x7b0708,(%ebx)
add    %dh,%al
orl    $0x7c0708,(%ebx)
add    %dh,%ah
orl    $0x7d0708,(%ebx)
add    %bh,%al
orl    $0x7e0708,(%ebx)
add    %bh,%ah
orl    $0x7f0708,(%ebx)
add    %al,(%eax)
(bad)
or     (%eax),%ecx
pop    %es
addb   $0x0,(%eax)
add    $0x82,%al
or     (%eax),%ecx
pop    %es
addl   $0xb820800,(%eax)
or     %al,(%edi)
(bad)
add    %al,(%eax)
or     $0x82,%al
or     (%eax),%ecx
pop    %es
addl   $0x0,(%eax)
adc    %al,-0x7bf8f7f5(%edx)
add    %al,(%eax)
adc    $0x82,%al
or     (%eax),%ecx
pop    %es
test   %eax,(%eax)
add    %bl,(%eax)
(bad)
or     (%eax),%ecx
pop    %es
xchg   %al,(%eax)
add    %bl,(%edx,%eax,4)
or     (%eax),%ecx
pop    %es
mov    %al,(%eax)
add    %ah,(%eax)
(bad)
or     (%eax),%ecx
pop    %es
mov    %eax,(%eax)
add    %ah,(%edx,%eax,4)
or     (%eax),%ecx
pop    %es
mov    (%eax),%al
add    %ch,(%eax)
(bad)
or     (%eax),%ecx
pop    %es
mov    (%eax),%eax
add    %ch,(%edx,%eax,4)
or     (%eax),%ecx
pop    %es
mov    %es,(%eax)
add    %dh,(%eax)
(bad)
or     (%eax),%ecx
pop    %es
lea    (%eax),%eax
add    %dh,(%edx,%eax,4)
or     (%eax),%ecx
pop    %es
mov    (%eax),%es
add    %bh,(%eax)
(bad)
or     (%eax),%ecx
pop    %es
popl   (%eax)
add    %bh,(%edx,%eax,4)
or     (%eax),%ecx
pop    %es
nop
add    %al,(%eax)
inc    %eax
(bad)
or     (%eax),%ecx
pop    %es
xchg   %eax,%ecx
add    %al,(%eax)
inc    %esp
(bad)
or     (%eax),%ecx
pop    %es
xchg   %eax,%edx
add    %al,(%eax)
dec    %eax
(bad)
or     (%eax),%ecx
pop    %es
xchg   %eax,%ebx
add    %al,(%eax)
dec    %esp
(bad)
or     (%eax),%ecx
pop    %es
xchg   %eax,%esp
add    %al,(%eax)
push   %eax
(bad)
or     (%eax),%ecx
pop    %es
xchg   %eax,%ebp
add    %al,(%eax)
push   %esp
(bad)
or     (%eax),%ecx
pop    %es
xchg   %eax,%esi
add    %al,(%eax)
pop    %eax
(bad)
or     (%eax),%ecx
pop    %es
cwtl
add    %al,(%eax)
pop    %esp
(bad)
or     (%eax),%ecx
pop    %es
cltd
add    %al,(%eax)
pusha
(bad)
or     (%eax),%ecx
pop    %es
lcall  $0x80b,$0x82640000
pop    %es
fwait
add    %al,(%eax)
push   $0x7080b82
pushf
add    %al,(%eax)
insb   (%dx),%es:(%edi)
(bad)
or     (%eax),%ecx
pop    %es
popf
add    %al,(%eax)
jo     804ce30 <_init-0x17c>
or     (%eax),%ecx
pop    %es
sahf
add    %al,(%eax)
je     804ce38 <_init-0x174>
or     (%eax),%ecx
pop    %es
lahf
add    %al,(%eax)
js     804ce40 <_init-0x16c>
or     (%eax),%ecx
pop    %es
mov    0x827c0000,%al
or     (%eax),%ecx
pop    %es
mov    0x82800000,%eax
or     (%eax),%ecx
pop    %es
mov    %al,0x82840000
or     (%eax),%ecx
pop    %es
mov    %eax,0x82880000
or     (%eax),%ecx
pop    %es
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
mov    %es,-0x5af8f7f5(%edx)
add    %al,(%eax)
nop
(bad)
or     (%eax),%ecx
pop    %es
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
xchg   %eax,%esp
(bad)
or     (%eax),%ecx
pop    %es
test   $0x0,%al
add    %bl,0x7080b82(%eax)
stos   %al,%es:(%edi)
add    %al,(%eax)
pushf
(bad)
or     (%eax),%ecx
pop    %es
stos   %eax,%es:(%edi)
add    %al,(%eax)
mov    0x7080b82,%al
lods   %ds:(%esi),%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
or     (%eax),%ecx
pop    %es
lods   %ds:(%esi),%eax
add    %al,(%eax)
test   $0x82,%al
or     (%eax),%ecx
pop    %es
scas   %es:(%edi),%al
add    %al,(%eax)
lods   %ds:(%esi),%al
(bad)
or     (%eax),%ecx
pop    %es
scas   %es:(%edi),%eax
add    %al,(%eax)
mov    $0x82,%al
or     (%eax),%ecx
pop    %es
mov    $0x0,%al
add    %dh,-0x4ef8f7f5(%edx,%eax,4)
add    %al,(%eax)
mov    $0x7080b82,%eax
mov    $0x0,%dl
add    %bh,-0x4cf8f7f5(%edx,%eax,4)
add    %al,(%eax)
rolb   $0x0,-0x4bf8f7f5(%edx)
add    %al,%ah
(bad)
or     (%eax),%ecx
pop    %es
mov    $0x0,%ch
add    %cl,%al
(bad)
or     (%eax),%ecx
pop    %es
mov    $0x0,%dh
add    %cl,%ah
(bad)
or     (%eax),%ecx
pop    %es
mov    $0x0,%bh
add    %dl,%al
(bad)
or     (%eax),%ecx
pop    %es
mov    $0x82d40000,%eax
or     (%eax),%ecx
pop    %es
mov    $0x82d80000,%ecx
or     (%eax),%ecx
pop    %es
mov    $0x82dc0000,%edx
or     (%eax),%ecx
pop    %es
mov    $0x82e00000,%ebx
or     (%eax),%ecx
pop    %es
mov    $0x82e40000,%esp
or     (%eax),%ecx
pop    %es
mov    $0x82e80000,%ebp
or     (%eax),%ecx
pop    %es
mov    $0x82ec0000,%esi
or     (%eax),%ecx
pop    %es
.byte 0xbf
push   %ebx
sub    $0x8,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x6b04b,%ebx
mov    -0x14(%ebx),%eax
test   %eax,%eax
je     804cfca <_init+0x1e>
call   804d540 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x80b8004
jmp    *0x80b8008
add    %al,(%eax)
jmp    *0x80b800c
push   $0x0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8010
push   $0x8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8014
push   $0x10
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8018
push   $0x18
jmp    804cfd0 <_init+0x24>
jmp    *0x80b801c
push   $0x20
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8020
push   $0x28
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8024
push   $0x30
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8028
push   $0x38
jmp    804cfd0 <_init+0x24>
jmp    *0x80b802c
push   $0x40
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8030
push   $0x48
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8034
push   $0x50
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8038
push   $0x58
jmp    804cfd0 <_init+0x24>
jmp    *0x80b803c
push   $0x60
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8040
push   $0x68
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8044
push   $0x70
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8048
push   $0x78
jmp    804cfd0 <_init+0x24>
jmp    *0x80b804c
push   $0x80
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8050
push   $0x88
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8054
push   $0x90
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8058
push   $0x98
jmp    804cfd0 <_init+0x24>
jmp    *0x80b805c
push   $0xa0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8060
push   $0xa8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8064
push   $0xb0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8068
push   $0xb8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b806c
push   $0xc0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8070
push   $0xc8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8074
push   $0xd0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8078
push   $0xd8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b807c
push   $0xe0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8080
push   $0xe8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8084
push   $0xf0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8088
push   $0xf8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b808c
push   $0x100
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8090
push   $0x108
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8094
push   $0x110
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8098
push   $0x118
jmp    804cfd0 <_init+0x24>
jmp    *0x80b809c
push   $0x120
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80a0
push   $0x128
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80a4
push   $0x130
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80a8
push   $0x138
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80ac
push   $0x140
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80b0
push   $0x148
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80b4
push   $0x150
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80b8
push   $0x158
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80bc
push   $0x160
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80c0
push   $0x168
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80c4
push   $0x170
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80c8
push   $0x178
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80cc
push   $0x180
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80d0
push   $0x188
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80d4
push   $0x190
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80d8
push   $0x198
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80dc
push   $0x1a0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80e0
push   $0x1a8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80e4
push   $0x1b0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80e8
push   $0x1b8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80ec
push   $0x1c0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80f0
push   $0x1c8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80f4
push   $0x1d0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80f8
push   $0x1d8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b80fc
push   $0x1e0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8100
push   $0x1e8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8104
push   $0x1f0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8108
push   $0x1f8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b810c
push   $0x200
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8110
push   $0x208
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8114
push   $0x210
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8118
push   $0x218
jmp    804cfd0 <_init+0x24>
jmp    *0x80b811c
push   $0x220
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8120
push   $0x228
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8124
push   $0x230
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8128
push   $0x238
jmp    804cfd0 <_init+0x24>
jmp    *0x80b812c
push   $0x240
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8130
push   $0x248
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8134
push   $0x250
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8138
push   $0x258
jmp    804cfd0 <_init+0x24>
jmp    *0x80b813c
push   $0x260
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8140
push   $0x268
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8144
push   $0x270
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8148
push   $0x278
jmp    804cfd0 <_init+0x24>
jmp    *0x80b814c
push   $0x280
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8150
push   $0x288
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8154
push   $0x290
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8158
push   $0x298
jmp    804cfd0 <_init+0x24>
jmp    *0x80b815c
push   $0x2a0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8160
push   $0x2a8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8164
push   $0x2b0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8168
push   $0x2b8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b816c
push   $0x2c0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8170
push   $0x2c8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8174
push   $0x2d0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8178
push   $0x2d8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b817c
push   $0x2e0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8180
push   $0x2e8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8184
push   $0x2f0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8188
push   $0x2f8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b818c
push   $0x300
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8190
push   $0x308
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8194
push   $0x310
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8198
push   $0x318
jmp    804cfd0 <_init+0x24>
jmp    *0x80b819c
push   $0x320
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81a0
push   $0x328
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81a4
push   $0x330
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81a8
push   $0x338
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81ac
push   $0x340
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81b0
push   $0x348
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81b4
push   $0x350
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81b8
push   $0x358
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81bc
push   $0x360
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81c0
push   $0x368
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81c4
push   $0x370
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81c8
push   $0x378
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81cc
push   $0x380
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81d0
push   $0x388
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81d4
push   $0x390
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81d8
push   $0x398
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81dc
push   $0x3a0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81e0
push   $0x3a8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81e4
push   $0x3b0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81e8
push   $0x3b8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81ec
push   $0x3c0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81f0
push   $0x3c8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81f4
push   $0x3d0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81f8
push   $0x3d8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b81fc
push   $0x3e0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8200
push   $0x3e8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8204
push   $0x3f0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8208
push   $0x3f8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b820c
push   $0x400
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8210
push   $0x408
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8214
push   $0x410
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8218
push   $0x418
jmp    804cfd0 <_init+0x24>
jmp    *0x80b821c
push   $0x420
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8220
push   $0x428
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8224
push   $0x430
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8228
push   $0x438
jmp    804cfd0 <_init+0x24>
jmp    *0x80b822c
push   $0x440
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8230
push   $0x448
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8234
push   $0x450
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8238
push   $0x458
jmp    804cfd0 <_init+0x24>
jmp    *0x80b823c
push   $0x460
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8240
push   $0x468
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8244
push   $0x470
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8248
push   $0x478
jmp    804cfd0 <_init+0x24>
jmp    *0x80b824c
push   $0x480
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8250
push   $0x488
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8254
push   $0x490
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8258
push   $0x498
jmp    804cfd0 <_init+0x24>
jmp    *0x80b825c
push   $0x4a0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8260
push   $0x4a8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8264
push   $0x4b0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8268
push   $0x4b8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b826c
push   $0x4c0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8270
push   $0x4c8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8274
push   $0x4d0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8278
push   $0x4d8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b827c
push   $0x4e0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8280
push   $0x4e8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8284
push   $0x4f0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8288
push   $0x4f8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b828c
push   $0x500
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8290
push   $0x508
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8294
push   $0x510
jmp    804cfd0 <_init+0x24>
jmp    *0x80b8298
push   $0x518
jmp    804cfd0 <_init+0x24>
jmp    *0x80b829c
push   $0x520
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82a0
push   $0x528
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82a4
push   $0x530
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82a8
push   $0x538
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82ac
push   $0x540
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82b0
push   $0x548
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82b4
push   $0x550
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82b8
push   $0x558
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82bc
push   $0x560
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82c0
push   $0x568
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82c4
push   $0x570
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82c8
push   $0x578
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82cc
push   $0x580
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82d0
push   $0x588
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82d4
push   $0x590
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82d8
push   $0x598
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82dc
push   $0x5a0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82e0
push   $0x5a8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82e4
push   $0x5b0
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82e8
push   $0x5b8
jmp    804cfd0 <_init+0x24>
jmp    *0x80b82ec
push   $0x5c0
jmp    804cfd0 <_init+0x24>
sub    $0x2c,%esp
mov    %eax,0x10(%esp)
mov    0x80b83a0,%eax
mov    %edx,0xc(%esp)
movl   $0x8099bfc,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
sub    $0x2c,%esp
mov    %eax,0x10(%esp)
mov    0x80b83a0,%eax
movl   $0x8099fef,0xc(%esp)
movl   $0x8099c38,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
sub    $0x2c,%esp
mov    %eax,0x10(%esp)
mov    0x80b83a0,%eax
movl   $0x8099fd2,0xc(%esp)
movl   $0x8099c74,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
sub    $0x2c,%esp
mov    %eax,0x10(%esp)
mov    0x80b83a0,%eax
movl   $0x809b590,0xc(%esp)
movl   $0x8099cb4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x6a3a7,%ebx
sub    $0x3c,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804dd86 <sidput@plt+0x226>
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8092490 <dbus_bus_remove_match+0x1260>
test   %eax,%eax
jne    804dc93 <sidput@plt+0x133>
xor    %edi,%edi
jmp    804dd72 <sidput@plt+0x212>
cmpl   $0x0,0x14(%esp)
mov    $0x1,%edi
je     804dd72 <sidput@plt+0x212>
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804dc8c <sidput@plt+0x12c>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
jne    804dcde <sidput@plt+0x17e>
xor    %edi,%edi
jmp    804dd62 <sidput@plt+0x202>
lea    -0x1a0b8(%ebx),%edi
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     804dcd7 <sidput@plt+0x177>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     804dcd7 <sidput@plt+0x177>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     804dcd7 <sidput@plt+0x177>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     804dcd7 <sidput@plt+0x177>
mov    0x58(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8095cd0 <dbus_bus_remove_match+0x4aa0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%edi
mov    %ebp,(%esp)
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,%eax
jmp    804dd88 <sidput@plt+0x228>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0xa0,%esp
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    804ddbc <sidput@plt+0x25c>
mov    $0x1,%eax
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804ddaf <sidput@plt+0x24f>
lea    0x70(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804ddaf <sidput@plt+0x24f>
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804ddaf <sidput@plt+0x24f>
cmpl   $0x1,0x8(%ebp)
movl   $0x8,0x2c(%esp)
movl   $0x0,0x1c(%esp)
movl   $0x0,0x20(%esp)
jle    804dfb2 <sidput@plt+0x452>
mov    $0x1,%edx
movl   $0x0,0x28(%esp)
xchg   %ax,%ax
mov    0xc(%ebp),%eax
mov    $0x8099f2b,%edi
mov    $0x7,%ecx
mov    (%eax,%edx,4),%ebx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804de4d <sidput@plt+0x2ed>
cmpb   $0x2d,(%ebx)
jne    804de58 <sidput@plt+0x2f8>
movzbl 0x1(%ebx),%eax
cmp    $0x68,%al
je     804de47 <sidput@plt+0x2e7>
cmp    $0x3f,%al
jne    804de58 <sidput@plt+0x2f8>
cmpb   $0x0,0x2(%ebx)
jne    804de58 <sidput@plt+0x2f8>
lea    0x0(%esi),%esi
call   8064270 <sidput@plt+0x16710>
lea    0x0(%esi),%esi
mov    $0x8099f32,%edi
mov    %ebx,%esi
mov    $0xa,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     804e461 <sidput@plt+0x901>
mov    $0x8099f3c,%edi
mov    $0xd,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     804e536 <sidput@plt+0x9d6>
mov    $0x8099f49,%edi
mov    $0x9,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804deb0 <sidput@plt+0x350>
andl   $0xfffffffd,0x2c(%esp)
orl    $0x4,0x2c(%esp)
add    $0x1,%edx
cmp    0x8(%ebp),%edx
je     804dfb2 <sidput@plt+0x452>
mov    %ebx,0x28(%esp)
jmp    804de20 <sidput@plt+0x2c0>
nop
mov    $0x8099f52,%edi
mov    %ebx,%esi
mov    $0x7,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    804decc <sidput@plt+0x36c>
andl   $0xfffffffb,0x2c(%esp)
orl    $0x2,0x2c(%esp)
jmp    804de9a <sidput@plt+0x33a>
movl   $0x8099f59,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    804deef <sidput@plt+0x38f>
andl   $0xfffffff7,0x2c(%esp)
jmp    804de9a <sidput@plt+0x33a>
movl   $0x8099f65,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    804df12 <sidput@plt+0x3b2>
orl    $0x10,0x2c(%esp)
jmp    804de9a <sidput@plt+0x33a>
movl   $0x8099f7a,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    804df65 <sidput@plt+0x405>
cmpl   $0x0,0x54(%esp)
mov    0x50(%esp),%eax
jg     804e5ed <sidput@plt+0xa8d>
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   8084650 <dbus_shutdown+0x5970>
mov    0x28(%esp),%edx
test   %eax,%eax
jne    804de9a <sidput@plt+0x33a>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
movl   $0x8099f83,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    804e267 <sidput@plt+0x707>
cmpl   $0x0,0x54(%esp)
mov    0x50(%esp),%eax
jg     804e65e <sidput@plt+0xafe>
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   8084680 <dbus_shutdown+0x59a0>
mov    0x28(%esp),%edx
test   %eax,%eax
jne    804de9a <sidput@plt+0x33a>
jmp    804df59 <sidput@plt+0x3f9>
cmpl   $0x0,0x54(%esp)
je     804e634 <sidput@plt+0xad4>
lea    0x38(%esp),%edi
mov    %edi,(%esp)
call   807ef70 <dbus_shutdown+0x290>
cmpl   $0x0,0x20(%esp)
je     804e059 <sidput@plt+0x4f9>
mov    %edi,(%esp)
call   807ef10 <dbus_shutdown+0x230>
cmpl   $0x0,0x74(%esp)
jle    804e059 <sidput@plt+0x4f9>
lea    0x90(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x70(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8087990 <dbus_shutdown+0x8cb0>
test   %eax,%eax
je     804e01b <sidput@plt+0x4bb>
mov    0x90(%esp),%eax
cmp    %eax,0x74(%esp)
je     804e045 <sidput@plt+0x4e5>
mov    0x70(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x80b83a0,%eax
movl   $0x8099f0c,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
jmp    804df59 <sidput@plt+0x3f9>
mov    0x40(%esp),%eax
test   %eax,%eax
js     804e01b <sidput@plt+0x4bb>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807ef00 <dbus_shutdown+0x220>
lea    0x70(%esp),%eax
mov    %eax,(%esp)
lea    0x3c(%esp),%ebx
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebx,(%esp)
call   807ef70 <dbus_shutdown+0x290>
cmpl   $0x0,0x1c(%esp)
je     804e0e8 <sidput@plt+0x588>
mov    %ebx,(%esp)
call   807ef10 <dbus_shutdown+0x230>
cmpl   $0x0,0x84(%esp)
jle    804e0e8 <sidput@plt+0x588>
lea    0x90(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x80(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8087990 <dbus_shutdown+0x8cb0>
test   %eax,%eax
je     804e0c8 <sidput@plt+0x568>
mov    0x90(%esp),%eax
cmp    %eax,0x84(%esp)
je     804e0d4 <sidput@plt+0x574>
mov    0x80(%esp),%eax
jmp    804e01f <sidput@plt+0x4bf>
mov    0x40(%esp),%eax
test   %eax,%eax
js     804e0c8 <sidput@plt+0x568>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   807ef00 <dbus_shutdown+0x220>
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
call   805fdc0 <sidput@plt+0x12260>
test   %eax,%eax
je     804e710 <sidput@plt+0xbb0>
call   80514d0 <sidput@plt+0x3970>
test   %eax,%eax
je     804e6f8 <sidput@plt+0xb98>
lea    0x40(%esp),%esi
mov    %esi,(%esp)
call   806ad70 <dbus_error_init>
xor    %eax,%eax
cmpl   $0x0,0x64(%esp)
lea    0x60(%esp),%edx
mov    %esi,0x14(%esp)
cmovg  %edx,%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   8053270 <sidput@plt+0x5710>
mov    %eax,0x80b880c
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x80b880c,%eax
test   %eax,%eax
je     804e6d0 <sidput@plt+0xb70>
mov    %eax,(%esp)
lea    0x90(%esp),%ebx
call   8052e70 <sidput@plt+0x5310>
mov    %ebx,(%esp)
mov    %eax,%esi
call   806ad70 <dbus_error_init>
mov    %ebx,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x80b8808,0x4(%esp)
movl   $0x80b8804,(%esp)
call   8084040 <dbus_shutdown+0x5360>
test   %eax,%eax
je     804e6b9 <sidput@plt+0xb59>
mov    0x80b8804,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x80642b0,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   807b420 <dbus_threads_init_default+0x2830>
test   %eax,%eax
je     804e61b <sidput@plt+0xabb>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8087f70 <dbus_shutdown+0x9290>
test   %eax,%eax
je     804e5f7 <sidput@plt+0xa97>
movl   $0x8064430,0x4(%esp)
movl   $0xf,(%esp)
call   8089d50 <dbus_shutdown+0xb070>
movl   $0x8064430,0x4(%esp)
movl   $0x1,(%esp)
call   8089d50 <dbus_shutdown+0xb070>
mov    0x80b880c,%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %eax,(%esp)
call   8088a60 <dbus_shutdown+0x9d80>
mov    0x80b880c,%eax
mov    %eax,(%esp)
call   8052bb0 <sidput@plt+0x5050>
mov    0x80b880c,%eax
mov    %eax,(%esp)
call   8052c60 <sidput@plt+0x5100>
call   8060700 <sidput@plt+0x12ba0>
call   8051740 <sidput@plt+0x3be0>
xor    %eax,%eax
jmp    804ddb4 <sidput@plt+0x254>
movl   $0x8099f8d,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
call   804d060 <strstr@plt>
mov    0x24(%esp),%edx
cmp    %ebx,%eax
je     804e35f <sidput@plt+0x7ff>
mov    0x28(%esp),%eax
test   %eax,%eax
je     804e2df <sidput@plt+0x77f>
movl   $0x8099f9c,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    804e2df <sidput@plt+0x77f>
cmpl   $0x0,0x54(%esp)
mov    0x50(%esp),%eax
jg     804e668 <sidput@plt+0xb08>
mov    %edx,0x28(%esp)
mov    %ebx,0x4(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
mov    0x28(%esp),%edx
test   %eax,%eax
jne    804de9a <sidput@plt+0x33a>
jmp    804df59 <sidput@plt+0x3f9>
movl   $0x8099f9c,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
je     804de9a <sidput@plt+0x33a>
movl   $0x8099faa,0x4(%esp)
mov    %ebx,(%esp)
call   804d060 <strstr@plt>
mov    0x24(%esp),%edx
cmp    %ebx,%eax
je     804e432 <sidput@plt+0x8d2>
mov    0x28(%esp),%eax
test   %eax,%eax
je     804e38e <sidput@plt+0x82e>
movl   $0x8099fb5,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    804e38e <sidput@plt+0x82e>
cmpl   $0x0,0x64(%esp)
mov    0x60(%esp),%eax
jg     804e62f <sidput@plt+0xacf>
mov    %edx,0x28(%esp)
mov    %ebx,0x4(%esp)
lea    0x60(%esp),%eax
jmp    804e2c6 <sidput@plt+0x766>
cmpl   $0x0,0x54(%esp)
mov    0x50(%esp),%ecx
jg     804e6a8 <sidput@plt+0xb48>
movl   $0x3d,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   804d5f0 <strchr@plt>
add    $0x1,%eax
mov    %eax,0x4(%esp)
jmp    804e2c2 <sidput@plt+0x762>
movl   $0x8099fb5,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
je     804de9a <sidput@plt+0x33a>
movl   $0x8099fbf,0x4(%esp)
mov    %ebx,(%esp)
call   804d060 <strstr@plt>
mov    0x24(%esp),%edx
cmp    %ebx,%eax
je     804e5be <sidput@plt+0xa5e>
mov    0x28(%esp),%eax
test   %eax,%eax
je     804e489 <sidput@plt+0x929>
movl   $0x8099fd0,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    804e489 <sidput@plt+0x929>
cmpl   $0x0,0x74(%esp)
mov    0x70(%esp),%eax
jg     804e6b4 <sidput@plt+0xb54>
mov    %edx,0x28(%esp)
mov    %ebx,0x4(%esp)
lea    0x70(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     804df59 <sidput@plt+0x3f9>
movl   $0x1,0x20(%esp)
mov    0x28(%esp),%edx
jmp    804de9a <sidput@plt+0x33a>
cmpl   $0x0,0x64(%esp)
mov    0x60(%esp),%eax
jg     804e62f <sidput@plt+0xacf>
movl   $0x3d,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x28(%esp)
call   804d5f0 <strchr@plt>
add    $0x1,%eax
mov    %eax,0x4(%esp)
jmp    804e356 <sidput@plt+0x7f6>
movl   $0x80a0578,0x8(%esp)
movl   $0x8099ce8,0x4(%esp)
movl   $0x1,(%esp)
call   804d7f0 <__printf_chk@plt>
movl   $0x0,(%esp)
call   804d550 <exit@plt>
movl   $0x8099fd0,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x24(%esp)
call   804d090 <strcmp@plt>
mov    0x24(%esp),%edx
test   %eax,%eax
je     804e575 <sidput@plt+0xa15>
movl   $0x8099fe0,0x4(%esp)
mov    %ebx,(%esp)
call   804d060 <strstr@plt>
mov    0x24(%esp),%edx
cmp    %ebx,%eax
je     804e672 <sidput@plt+0xb12>
mov    0x28(%esp),%eax
test   %eax,%eax
je     804e59d <sidput@plt+0xa3d>
movl   $0x8099fed,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x28(%esp)
call   804d090 <strcmp@plt>
mov    0x28(%esp),%edx
test   %eax,%eax
jne    804e59d <sidput@plt+0xa3d>
cmpl   $0x0,0x84(%esp)
mov    0x80(%esp),%eax
jg     804e6a3 <sidput@plt+0xb43>
mov    %edx,0x28(%esp)
mov    %ebx,0x4(%esp)
lea    0x80(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     804df59 <sidput@plt+0x3f9>
movl   $0x1,0x1c(%esp)
mov    0x28(%esp),%edx
jmp    804de9a <sidput@plt+0x33a>
lea    0x90(%esp),%ebx
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804e55d <sidput@plt+0x9fd>
mov    %ebx,(%esp)
call   805e020 <sidput@plt+0x104c0>
test   %eax,%eax
jne    804e582 <sidput@plt+0xa22>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
movl   $0x8099de0,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
movl   $0x1,0x20(%esp)
jmp    804de9a <sidput@plt+0x33a>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   804d500 <puts@plt>
movl   $0x0,(%esp)
call   804d550 <exit@plt>
movl   $0x8099fed,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x28(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     804e525 <sidput@plt+0x9c5>
jmp    804de4d <sidput@plt+0x2ed>
cmpl   $0x0,0x74(%esp)
mov    0x70(%esp),%eax
jg     804e6b4 <sidput@plt+0xb54>
movl   $0x3d,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x28(%esp)
call   804d5f0 <strchr@plt>
add    $0x1,%eax
mov    %eax,0x4(%esp)
jmp    804e40d <sidput@plt+0x8ad>
mov    $0x8099f7c,%edx
call   804db70 <sidput@plt+0x10>
mov    0x94(%esp),%eax
movl   $0x8099edc,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %ebx,(%esp)
call   806ade0 <dbus_error_free>
jmp    804df59 <sidput@plt+0x3f9>
mov    0x94(%esp),%eax
movl   $0x8099eb8,(%esp)
mov    %eax,0x4(%esp)
jmp    804e609 <sidput@plt+0xaa9>
call   804dc14 <sidput@plt+0xb4>
mov    0x80b83a0,%eax
movl   $0x21,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8099e04,(%esp)
mov    %eax,0xc(%esp)
call   804d3c0 <fwrite@plt>
jmp    804de4d <sidput@plt+0x2ed>
mov    $0x8099f85,%edx
call   804db70 <sidput@plt+0x10>
mov    $0x8099f9e,%edx
call   804db70 <sidput@plt+0x10>
cmpl   $0x0,0x84(%esp)
mov    0x80(%esp),%eax
jg     804e6a3 <sidput@plt+0xb43>
movl   $0x3d,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x28(%esp)
call   804d5f0 <strchr@plt>
add    $0x1,%eax
mov    %eax,0x4(%esp)
jmp    804e50e <sidput@plt+0x9ae>
call   804dba4 <sidput@plt+0x44>
mov    $0x8099f9e,%edx
mov    %ecx,%eax
call   804db70 <sidput@plt+0x10>
call   804dbdc <sidput@plt+0x7c>
mov    0x94(%esp),%eax
movl   $0x8099e94,(%esp)
mov    %eax,0x4(%esp)
jmp    804e609 <sidput@plt+0xaa9>
mov    0x44(%esp),%eax
movl   $0x8099e70,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
movl   $0x8099e4c,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
movl   $0x8099e28,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x80962c0
push   $0x8096250
push   %ecx
push   %esi
push   $0x804dd90
call   804d630 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x80b8393,%eax
sub    $0x80b8390,%eax
cmp    $0x6,%eax
ja     804e770 <sidput@plt+0xc10>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804e76f <sidput@plt+0xc0f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80b8390,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x80b8390,%eax
sub    $0x80b8390,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804e7a9 <sidput@plt+0xc49>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804e7a8 <sidput@plt+0xc48>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x80b8390,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x80b83a4
jne    804e7ec <sidput@plt+0xc8c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804e760 <sidput@plt+0xc00>
movb   $0x1,0x80b83a4
leave
repz ret
xchg   %ax,%ax
mov    0x80b7c18,%eax
test   %eax,%eax
je     804e818 <sidput@plt+0xcb8>
mov    $0x0,%eax
test   %eax,%eax
je     804e818 <sidput@plt+0xcb8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x80b7c18,(%esp)
call   *%eax
leave
jmp    804e790 <sidput@plt+0xc30>
nop
jmp    804e790 <sidput@plt+0xc30>
xchg   %ax,%ax
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    (%eax),%eax
test   %eax,%eax
je     804e834 <sidput@plt+0xcd4>
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804e843 <sidput@plt+0xce3>
mov    %eax,(%esp)
call   8066920 <dbus_connection_unref>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x8(%eax),%edx
mov    %edx,0x8(%esp)
mov    0x4(%ebx),%edx
mov    %edx,0x4(%esp)
mov    0x4(%eax),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807cb30 <dbus_watch_handle+0xf70>
mov    (%ebx),%eax
addl   $0x1,(%eax)
movl   $0x0,0x4(%ebx)
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    0x4(%eax),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %ebx,0x24(%esp)
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    80880c0 <dbus_shutdown+0x93e0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    0x4(%eax),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %ebx,0x24(%esp)
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8088100 <dbus_shutdown+0x9420>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    0x4(%eax),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %ebx,0x24(%esp)
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8087f70 <dbus_shutdown+0x9290>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x2c,%esp
lea    0x14(%eax),%eax
mov    %edx,0x18(%esp)
mov    %eax,0x1c(%esp)
mov    0x4(%ebx),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8059920 <sidput@plt+0xbdc0>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804e9b5 <sidput@plt+0xe55>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     804e9c0 <sidput@plt+0xe60>
mov    %eax,%edi
jmp    804e964 <sidput@plt+0xe04>
test   %edi,%edi
je     804e9c0 <sidput@plt+0xe60>
mov    0x8(%edi),%ebp
mov    0x4(%edi),%edi
cmp    0x14(%ebx),%edi
mov    0x4(%ebp),%eax
cmove  %esi,%edi
test   %eax,%eax
je     804e960 <sidput@plt+0xe00>
mov    %eax,(%esp)
call   8065400 <dbus_connection_get_is_connected>
test   %eax,%eax
je     804e960 <sidput@plt+0xe00>
mov    0x0(%ebp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   805a310 <sidput@plt+0xc7b0>
test   %eax,%eax
jne    804e960 <sidput@plt+0xe00>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8059b60 <sidput@plt+0xc000>
call   8088380 <dbus_shutdown+0x96a0>
jmp    804e936 <sidput@plt+0xdd6>
nop
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8059c40 <sidput@plt+0xc0e0>
mov    0x8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%esi
mov    0x74(%esp),%ebx
mov    %esi,(%esp)
call   808b430 <dbus_shutdown+0xc750>
mov    0x4(%ebx),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8052e00 <sidput@plt+0x52a0>
mov    %esi,(%esp)
mov    %eax,%edi
call   808b5c0 <dbus_shutdown+0xc8e0>
test   %eax,%eax
jne    804ea38 <sidput@plt+0xed8>
mov    %esi,(%esp)
call   808b440 <dbus_shutdown+0xc760>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%ebp
mov    %ebp,(%esp)
movl   $0x0,0x24(%esp)
call   806ad70 <dbus_error_init>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   808b700 <dbus_shutdown+0xca20>
movl   $0x8096308,0x4(%esp)
mov    %ebp,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    804eb28 <sidput@plt+0xfc8>
mov    0x2c(%esp),%eax
lea    0x38(%esp),%edi
mov    %eax,0x10(%esp)
mov    0x8(%ebx),%eax
movl   $0x8096694,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %edi,0x4(%esp)
mov    0x4(%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
mov    %edi,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
je     804eb00 <sidput@plt+0xfa0>
mov    %edi,(%esp)
call   807c380 <dbus_watch_handle+0x7c0>
cmp    %eax,%ebx
mov    %eax,%ecx
je     804eab3 <sidput@plt+0xf53>
mov    0xc(%ebx),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%ecx),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    804eab3 <sidput@plt+0xf53>
mov    %ebp,%edx
mov    %ecx,%eax
call   804e920 <sidput@plt+0xdc0>
mov    %edi,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    804eabf <sidput@plt+0xf5f>
mov    %ebp,%edx
mov    %ebx,%eax
call   804e920 <sidput@plt+0xdc0>
mov    %ebp,(%esp)
call   806ade0 <dbus_error_free>
mov    %esi,(%esp)
call   808b440 <dbus_shutdown+0xc760>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   808b6c0 <dbus_shutdown+0xc9e0>
test   %eax,%eax
je     804ea70 <sidput@plt+0xf10>
mov    0x24(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   806ade0 <dbus_error_free>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     804ea23 <sidput@plt+0xec3>
test   %edi,%edi
je     804ec9e <sidput@plt+0x113e>
mov    0x24(%esp),%eax
cmp    $0xb,%eax
ja     804ec7d <sidput@plt+0x111d>
jmp    *0x8096aa8(,%eax,4)
movl   $0x80965fc,0x8(%esp)
movl   $0x8096630,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
movl   $0x80965b0,0x8(%esp)
movl   $0x80965d4,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
movl   $0x8096548,0x8(%esp)
movl   $0x8096584,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
movl   $0x8096500,0x8(%esp)
movl   $0x80964cc,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
movl   $0x8096498,0x8(%esp)
movl   $0x80964cc,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
movl   $0x8096434,0x8(%esp)
movl   $0x8096464,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
movl   $0x80963dc,0x8(%esp)
movl   $0x8096400,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
movl   $0x8096384,0x8(%esp)
movl   $0x80963ac,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
movl   $0x8096338,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
mov    %eax,0xc(%esp)
movl   $0x8096660,0x8(%esp)
movl   $0x8096308,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    804ea70 <sidput@plt+0xf10>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   808b700 <dbus_shutdown+0xca20>
jmp    804ea70 <sidput@plt+0xf10>
nop
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x40(%esp),%esi
lea    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   806ad70 <dbus_error_init>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   8052f70 <sidput@plt+0x5410>
test   %eax,%eax
je     804ece4 <sidput@plt+0x1184>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8089bb0 <dbus_shutdown+0xaed0>
test   %eax,%eax
je     804ecf0 <sidput@plt+0x1190>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
movl   $0x80966b8,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
jmp    804ed30 <sidput@plt+0x11d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    0x1c(%ebx),%eax
test   %eax,%eax
je     804ed48 <sidput@plt+0x11e8>
mov    %eax,(%esp)
call   808b560 <dbus_shutdown+0xc880>
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   806ad70 <dbus_error_init>
mov    0x8(%ebx),%eax
mov    %esi,(%esp)
movl   $0x8096ad8,0x8(%esp)
movl   $0x80966f4,0x4(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
mov    0x8(%ebx),%eax
movl   $0x8096718,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %ebx,%eax
mov    %esi,%edx
call   804e920 <sidput@plt+0xdc0>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
add    $0x24,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x1c(%ebx),%eax
test   %eax,%eax
je     804edd7 <sidput@plt+0x1277>
mov    %eax,(%esp)
call   808b560 <dbus_shutdown+0xc880>
mov    0x8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
add    $0x18,%esp
pop    %ebx
ret
jmp    804ee00 <sidput@plt+0x12a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804ee17 <sidput@plt+0x12b7>
mov    (%ebx),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ebx)
jle    804ee20 <sidput@plt+0x12c0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804ee87 <sidput@plt+0x1327>
mov    (%ebx),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ebx)
jle    804ee90 <sidput@plt+0x1330>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebx),%eax
test   %eax,%eax
je     804ee9f <sidput@plt+0x133f>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
lea    0x40(%esp),%esi
mov    %esi,(%esp)
lea    0x30(%esp),%ebx
mov    %eax,0x1c(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
call   806ad70 <dbus_error_init>
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804f000 <sidput@plt+0x14a0>
mov    0x4(%edi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    804ef90 <sidput@plt+0x1430>
mov    0x94(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
movl   $0x0,0x18(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     804ef22 <sidput@plt+0x13c2>
lea    0x50(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8089f00 <dbus_shutdown+0xb220>
test   %eax,%eax
je     804f030 <sidput@plt+0x14d0>
mov    0x94(%esp),%eax
movl   $0x8098ea7,0x8(%esp)
movl   $0x8096b10,0x4(%esp)
mov    %eax,0x10(%esp)
lea    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   805b260 <sidput@plt+0xd700>
test   %eax,%eax
jne    804f05c <sidput@plt+0x14fc>
movl   $0x0,0x18(%esp)
jmp    804ef49 <sidput@plt+0x13e9>
nop
mov    0x94(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x7c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x94(%esp),%eax
movl   $0x8096af3,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x18(%esp)
jmp    804ef49 <sidput@plt+0x13e9>
mov    0x94(%esp),%eax
movl   $0x8096b1e,0x8(%esp)
movl   $0x8096b10,0x4(%esp)
mov    %eax,0x10(%esp)
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   805b260 <sidput@plt+0xd700>
test   %eax,%eax
je     804eff2 <sidput@plt+0x1492>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   80848f0 <dbus_shutdown+0x5c10>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %esi,0x10(%esp)
movl   $0x8098f54,0x8(%esp)
movl   $0x8096b10,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x28(%esp)
call   805b260 <sidput@plt+0xd700>
test   %eax,%eax
jne    804f125 <sidput@plt+0x15c5>
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    804f24e <sidput@plt+0x16ee>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,0x24(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %esi,0x10(%esp)
movl   $0x8096b23,0x8(%esp)
movl   $0x8096b10,0x4(%esp)
mov    %eax,(%esp)
call   805b260 <sidput@plt+0xd700>
test   %eax,%eax
jne    804f188 <sidput@plt+0x1628>
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    804f24e <sidput@plt+0x16ee>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,0x2c(%esp)
mov    0x0(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,%esi
je     804f2ff <sidput@plt+0x179f>
addl   $0x1,(%eax)
mov    0x1c(%esp),%edi
mov    0x4(%eax),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
je     804f266 <sidput@plt+0x1706>
mov    0x30(%esp),%eax
xor    %edi,%edi
movl   $0x809679c,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x20(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   804ee00 <sidput@plt+0x12a0>
mov    %edi,%eax
jmp    804ef83 <sidput@plt+0x1423>
mov    0x94(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
jmp    804ef49 <sidput@plt+0x13e9>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x20(%esp),%eax
movl   $0x0,0x20(%esp)
mov    %eax,0x4(%esi)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esp),%eax
mov    %eax,0x8(%esi)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x24(%esp),%eax
movl   $0x0,0x24(%esp)
mov    %eax,0xc(%esi)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%esp),%eax
movl   $0x0,0x2c(%esp)
addl   $0x1,(%esi)
mov    %eax,0x10(%esi)
mov    %esi,0x8(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
je     804f345 <sidput@plt+0x17e5>
mov    0x68(%esp),%eax
mov    $0x1,%edi
movl   $0x0,0x18(%esp)
mov    %eax,0x14(%esi)
jmp    804f207 <sidput@plt+0x16a7>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
je     804f388 <sidput@plt+0x1828>
mov    0x20(%esp),%eax
movl   $0x8096768,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    804ef49 <sidput@plt+0x13e9>
mov    0x94(%esp),%eax
xor    %edi,%edi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    0x1c(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
movl   $0x0,0x18(%esp)
jmp    804f207 <sidput@plt+0x16a7>
movl   $0x20,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     804f471 <sidput@plt+0x1911>
mov    0x20(%esp),%eax
movl   $0x1,(%esi)
mov    %edi,0x18(%esi)
movl   $0x0,0x20(%esp)
mov    %eax,0x4(%esi)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x24(%esp),%eax
movl   $0x0,0x24(%esp)
mov    %eax,0xc(%esi)
mov    0x2c(%esp),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,0x10(%esi)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x1c(%esi)
je     804f443 <sidput@plt+0x18e3>
addl   $0x1,(%esi)
mov    %esi,0x8(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
je     804f443 <sidput@plt+0x18e3>
addl   $0x1,(%esi)
mov    %esi,0x8(%esp)
mov    0x1c(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
jne    804f2e6 <sidput@plt+0x1786>
mov    0x4(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
mov    0x94(%esp),%eax
xor    %edi,%edi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
movl   $0x0,0x18(%esp)
jmp    804f207 <sidput@plt+0x16a7>
mov    0x94(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    804ef49 <sidput@plt+0x13e9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x18(%esp)
mov    0x1c(%edx),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
lea    0x20(%esp),%ebx
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804f618 <sidput@plt+0x1ab8>
mov    0x18(%esi),%eax
mov    0x4(%eax),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    804f538 <sidput@plt+0x19d8>
mov    0x90(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
movl   $0x0,0x14(%esp)
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
test   %ebp,%ebp
je     804f648 <sidput@plt+0x1ae8>
mov    0x14(%esp),%eax
mov    %esi,0x0(%ebp)
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     804f4ec <sidput@plt+0x198c>
lea    0x50(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8089f00 <dbus_shutdown+0xb220>
test   %eax,%eax
je     804f658 <sidput@plt+0x1af8>
mov    0x14(%esi),%eax
cmp    %eax,0x68(%esp)
movl   $0x1,0x14(%esp)
jbe    804f513 <sidput@plt+0x19b3>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   806ad70 <dbus_error_init>
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   805aa00 <sidput@plt+0xcea0>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     804f5d1 <sidput@plt+0x1a71>
lea    0x40(%esp),%ecx
mov    0x18(%esi),%edx
mov    0x18(%esp),%eax
mov    %ecx,0x4(%esp)
mov    0x1c(%esp),%ecx
add    $0x4,%eax
mov    %ecx,(%esp)
mov    %edi,%ecx
call   804eec0 <sidput@plt+0x1360>
test   %eax,%eax
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
jne    804f692 <sidput@plt+0x1b32>
call   805a960 <sidput@plt+0xce00>
lea    0x40(%esp),%eax
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
je     804f69c <sidput@plt+0x1b3c>
mov    0x90(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   806b050 <dbus_move_error>
movl   $0x0,0x14(%esp)
jmp    804f513 <sidput@plt+0x19b3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x90(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x7c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
jmp    804f52a <sidput@plt+0x19ca>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
mov    0x1c(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
xor    %esi,%esi
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
movl   $0x1,0x14(%esp)
jmp    804f513 <sidput@plt+0x19b3>
call   805a960 <sidput@plt+0xce00>
jmp    804f513 <sidput@plt+0x19b3>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
movl   $0x1,0x14(%esp)
jmp    804f513 <sidput@plt+0x19b3>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    %eax,0x14(%esp)
mov    0x4(%edx),%eax
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
lea    0x30(%esp),%ebx
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804f818 <sidput@plt+0x1cb8>
lea    0x50(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804f7e8 <sidput@plt+0x1c88>
mov    0x10(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8089fd0 <dbus_shutdown+0xb2f0>
movl   $0x0,0x18(%esp)
test   %eax,%eax
mov    %eax,%ebp
je     804f7cb <sidput@plt+0x1c6b>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   806ad70 <dbus_error_init>
mov    0x14(%esp),%eax
add    $0x4,%eax
mov    %eax,0x18(%esp)
lea    0x0(%esi),%esi
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   808a080 <dbus_shutdown+0xb3a0>
test   %eax,%eax
je     804f8e8 <sidput@plt+0x1d88>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
movl   $0x8096b32,0x4(%esp)
mov    %ebx,(%esp)
call   808c390 <dbus_shutdown+0xd6b0>
test   %eax,%eax
je     804f748 <sidput@plt+0x1be8>
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
je     804f840 <sidput@plt+0x1ce0>
mov    0x10(%esp),%edx
xor    %ecx,%ecx
mov    %edx,(%esp)
mov    %eax,%edx
mov    0x14(%esp),%eax
call   804f4a0 <sidput@plt+0x1940>
test   %eax,%eax
jne    804f748 <sidput@plt+0x1be8>
movl   $0x0,0x18(%esp)
mov    %ebp,(%esp)
call   808a180 <dbus_shutdown+0xb4a0>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x18(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x10(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x10(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x4(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     804f929 <sidput@plt+0x1dc9>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     804f929 <sidput@plt+0x1dc9>
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   805aa00 <sidput@plt+0xcea0>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     804f8af <sidput@plt+0x1d4f>
lea    0x40(%esp),%eax
mov    %ebx,%ecx
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    0x18(%esp),%eax
call   804eec0 <sidput@plt+0x1360>
test   %eax,%eax
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
jne    804f8d8 <sidput@plt+0x1d78>
call   805a960 <sidput@plt+0xce00>
lea    0x40(%esp),%eax
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    804f908 <sidput@plt+0x1da8>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
jmp    804f748 <sidput@plt+0x1be8>
call   805a960 <sidput@plt+0xce00>
lea    0x0(%esi),%esi
jmp    804f748 <sidput@plt+0x1be8>
lea    0x0(%esi),%esi
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    804f908 <sidput@plt+0x1da8>
movl   $0x1,0x18(%esp)
jmp    804f7c3 <sidput@plt+0x1c63>
lea    0x0(%esi),%esi
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   806b050 <dbus_move_error>
movl   $0x0,0x18(%esp)
jmp    804f7c3 <sidput@plt+0x1c63>
mov    0x10(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
movl   $0x0,0x18(%esp)
jmp    804f7c3 <sidput@plt+0x1c63>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
test   %esi,%esi
je     804f979 <sidput@plt+0x1e19>
mov    (%esi),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%esi)
jle    804f980 <sidput@plt+0x1e20>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
testb  $0x1,0x24(%esi)
jne    804fa40 <sidput@plt+0x1ee0>
mov    0x20(%esi),%eax
test   %eax,%eax
je     804f999 <sidput@plt+0x1e39>
mov    %eax,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
mov    0x1c(%esi),%eax
test   %eax,%eax
je     804f9d7 <sidput@plt+0x1e77>
movl   $0x0,0x14(%esp)
mov    %eax,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   808b880 <dbus_shutdown+0xcba0>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   808b440 <dbus_shutdown+0xc760>
mov    0x8(%esi),%eax
lea    0x14(%esi),%edi
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     804fa1c <sidput@plt+0x1ebc>
mov    0x8(%ebx),%eax
call   804e820 <sidput@plt+0xcc0>
mov    0x4(%ebx),%ebx
cmp    0x14(%esi),%ebx
jne    804fa08 <sidput@plt+0x1ea8>
mov    %edi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x4(%esi),%eax
mov    0x18(%esi),%edx
sub    %edx,0x14(%eax)
mov    %esi,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    0x20(%esi),%ebx
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8088270 <dbus_shutdown+0x9590>
andb   $0xfe,0x24(%esi)
jmp    804f98a <sidput@plt+0x1e2a>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    804f960 <sidput@plt+0x1e00>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804faa3 <sidput@plt+0x1f43>
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    0x4(%eax),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c770 <dbus_watch_handle+0xbb0>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804f960 <sidput@plt+0x1e00>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0xc(%esi),%eax
test   %eax,%eax
je     804fada <sidput@plt+0x1f7a>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
lea    0xc(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     804fc68 <sidput@plt+0x2108>
mov    0x4(%esi),%eax
test   %eax,%eax
je     804fb04 <sidput@plt+0x1fa4>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
movl   $0x804ee00,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     804fc68 <sidput@plt+0x2108>
mov    0x18(%esi),%eax
test   %eax,%eax
je     804fb3a <sidput@plt+0x1fda>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
movl   $0x804ee70,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x18(%esi)
je     804fc68 <sidput@plt+0x2108>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
jmp    804fb87 <sidput@plt+0x2027>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
mov    0x4(%ebx),%ebx
cmp    (%eax),%ebx
je     804fc50 <sidput@plt+0x20f0>
test   %ebx,%ebx
je     804fc50 <sidput@plt+0x20f0>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%edi
je     804fc68 <sidput@plt+0x2108>
movl   $0xc,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebp
je     804fc60 <sidput@plt+0x2100>
movl   $0x1,(%eax)
mov    %edi,0x4(%eax)
movl   $0x804ee00,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     804fc90 <sidput@plt+0x2130>
mov    %ebp,0x8(%esp)
mov    0x4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
je     804fc90 <sidput@plt+0x2130>
mov    0x3c(%esp),%ecx
mov    %ebp,%edx
mov    %esi,%eax
call   804f6c0 <sidput@plt+0x1b60>
test   %eax,%eax
jne    804fb78 <sidput@plt+0x2018>
mov    0x3c(%esp),%eax
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    804fc9a <sidput@plt+0x213a>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
mov    0x38(%esp),%eax
mov    0x4(%ebx),%ebx
cmp    (%eax),%ebx
jne    804fb87 <sidput@plt+0x2027>
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    0x3c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,(%esp)
call   804ee70 <sidput@plt+0x1310>
jmp    804fc68 <sidput@plt+0x2108>
xor    %eax,%eax
jmp    804fc55 <sidput@plt+0x20f5>
xchg   %ax,%ax
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%ebx)
jle    804fcc8 <sidput@plt+0x2168>
add    $0x18,%esp
pop    %ebx
ret
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804fce2 <sidput@plt+0x2182>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x8(%ebx),%eax
test   %eax,%eax
je     804fcf1 <sidput@plt+0x2191>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x18(%ebx),%eax
test   %eax,%eax
je     804fd00 <sidput@plt+0x21a0>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x1c(%ebx),%eax
test   %eax,%eax
je     804fd0f <sidput@plt+0x21af>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
movl   $0x20,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebp
je     804ff60 <sidput@plt+0x2400>
movl   $0x1,(%eax)
mov    0x70(%esp),%eax
movl   $0x0,0x14(%ebp)
mov    %eax,0x10(%ebp)
mov    0x7c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
call   804fac0 <sidput@plt+0x1f60>
test   %eax,%eax
je     804ff28 <sidput@plt+0x23c8>
movl   $0x804f960,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     804ff0c <sidput@plt+0x23ac>
movl   $0x807ebb0,0x8(%esp)
movl   $0x807ebb0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x1c(%ebp)
je     804ff0c <sidput@plt+0x23ac>
call   808c470 <dbus_shutdown+0xd790>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     804ff0c <sidput@plt+0x23ac>
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804ff00 <sidput@plt+0x23a0>
lea    0x40(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     804fef8 <sidput@plt+0x2398>
mov    0x1c(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     804ff40 <sidput@plt+0x23e0>
mov    0x1c(%esp),%edx
lea    0x4(%edx),%ebx
mov    %edx,0x18(%esp)
jmp    804feb1 <sidput@plt+0x2351>
xchg   %ax,%ax
mov    %edi,0x8(%esp)
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   807ffd0 <dbus_shutdown+0x12f0>
test   %eax,%eax
je     804fe7f <sidput@plt+0x231f>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     804fec5 <sidput@plt+0x2365>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     804fec5 <sidput@plt+0x2365>
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
je     804fec5 <sidput@plt+0x2365>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    %ebx,0x18(%esp)
add    $0x4,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804ff40 <sidput@plt+0x23e0>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    804fe20 <sidput@plt+0x22c0>
mov    0x18(%esp),%eax
mov    (%eax),%ebx
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
test   %ebx,%ebx
jne    804ff0c <sidput@plt+0x23ac>
mov    %ebp,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0x7c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebp,(%esp)
call   804fcb0 <sidput@plt+0x2150>
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    %ebp,%eax
jmp    804feed <sidput@plt+0x238d>
mov    0x7c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    804feed <sidput@plt+0x238d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
mov    0x54(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,%esi
je     8050098 <sidput@plt+0x2538>
mov    %ebx,0xc(%esp)
movl   $0x80967ec,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    0x10(%edi),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
lea    0x14(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%ebx
je     8050098 <sidput@plt+0x2538>
xor    %edi,%edi
jmp    804fff8 <sidput@plt+0x2498>
test   %ebx,%ebx
je     8050098 <sidput@plt+0x2538>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%ebx
cmp    0x14(%esi),%ebx
mov    0x4(%ebp),%eax
cmove  %edi,%ebx
test   %eax,%eax
je     804fff0 <sidput@plt+0x2490>
mov    %eax,(%esp)
call   8065400 <dbus_connection_get_is_connected>
test   %eax,%eax
je     804fff0 <sidput@plt+0x2490>
mov    0x8(%ebp),%eax
test   %eax,%eax
jne    804fff0 <sidput@plt+0x2490>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%edx
je     80500ad <sidput@plt+0x254d>
lea    0x2c(%esp),%eax
mov    %edx,(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x75,0x4(%esp)
mov    %edx,0x1c(%esp)
movl   $0x1,0x2c(%esp)
call   8071420 <dbus_message_append_args>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     80500a5 <sidput@plt+0x2545>
mov    %edx,0x8(%esp)
mov    0x4(%ebp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
test   %eax,%eax
je     80500a8 <sidput@plt+0x2548>
call   806e970 <dbus_message_unref>
test   %ebx,%ebx
jne    804fff8 <sidput@plt+0x2498>
xchg   %ax,%ax
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,(%esp)
call   806e970 <dbus_message_unref>
mov    0x5c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8061ca0 <sidput@plt+0x14140>
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
mov    %eax,%ebx
mov    $0x1,%eax
test   %ebx,%ebx
je     805023f <sidput@plt+0x26df>
lea    0x14(%ebx),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebp
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     80501e0 <sidput@plt+0x2680>
mov    0x8(%ebp),%edi
mov    0x4(%ebp),%ebp
cmp    0x14(%ebx),%ebp
mov    0x8(%edi),%edx
cmove  %esi,%ebp
test   %edx,%edx
je     8050128 <sidput@plt+0x25c8>
mov    0x4(%edi),%eax
test   %eax,%eax
je     8050156 <sidput@plt+0x25f6>
mov    %eax,(%esp)
call   8065400 <dbus_connection_get_is_connected>
test   %eax,%eax
je     8050128 <sidput@plt+0x25c8>
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   806ad70 <dbus_error_init>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
lea    0x20(%esp),%edx
mov    %edx,0x10(%esp)
mov    (%edi),%ecx
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   805b7f0 <sidput@plt+0xdc90>
test   %eax,%eax
jne    8050128 <sidput@plt+0x25c8>
mov    (%edi),%eax
mov    %eax,0xc(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   805a310 <sidput@plt+0xc7b0>
test   %eax,%eax
jne    8050128 <sidput@plt+0x25c8>
mov    (%edi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8059340 <sidput@plt+0xb7e0>
test   %ebp,%ebp
jne    8050130 <sidput@plt+0x25d0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%esi
je     805023d <sidput@plt+0x26dd>
mov    %ebx,(%eax)
mov    0x4(%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c740 <dbus_watch_handle+0xb80>
mov    %eax,0x4(%esi)
mov    (%esi),%eax
addl   $0x1,(%eax)
mov    0x4(%esi),%eax
test   %eax,%eax
je     8050235 <sidput@plt+0x26d5>
mov    0x58(%esp),%eax
movl   $0x804fa80,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x804e850,0x4(%esp)
mov    %eax,(%esp)
call   805a380 <sidput@plt+0xc820>
test   %eax,%eax
jne    8050248 <sidput@plt+0x26e8>
mov    %esi,(%esp)
call   804fa80 <sidput@plt+0x1f20>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8061ca0 <sidput@plt+0x14140>
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%ebx
je     80502d0 <sidput@plt+0x2770>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%esi
je     80502d0 <sidput@plt+0x2770>
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
mov    0x1c(%eax),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
je     80502d2 <sidput@plt+0x2772>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
xor    %esi,%esi
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%ebx
mov    0x10(%ebx),%eax
mov    0x14(%ebx),%esi
mov    %eax,(%esp)
call   8052f20 <sidput@plt+0x53c0>
cmp    %eax,%esi
mov    0xb4(%esp),%eax
jge    8050700 <sidput@plt+0x2ba0>
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
lea    0x68(%esp),%ebp
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
je     8050898 <sidput@plt+0x2d38>
mov    0xb8(%esp),%edx
mov    %ebp,%ecx
mov    %edx,(%esp)
mov    %eax,%edx
mov    %ebx,%eax
call   804f4a0 <sidput@plt+0x1940>
mov    0x68(%esp),%ecx
mov    %ecx,0x20(%esp)
test   %eax,%eax
je     80506f0 <sidput@plt+0x2b90>
mov    0x20(%esp),%edi
test   %edi,%edi
je     8050a1c <sidput@plt+0x2ebc>
mov    0xac(%esp),%eax
test   %eax,%eax
je     8050550 <sidput@plt+0x29f0>
movl   $0xc,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8050870 <sidput@plt+0x2d10>
mov    0xac(%esp),%eax
mov    %eax,0x8(%esi)
mov    0xb0(%esp),%eax
mov    %eax,(%esi)
mov    %eax,(%esp)
call   806f720 <dbus_message_ref>
mov    0xa4(%esp),%eax
test   %eax,%eax
mov    %eax,0x4(%esi)
je     80503e0 <sidput@plt+0x2880>
mov    %eax,(%esp)
call   8065370 <dbus_connection_ref>
mov    0xb4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,0x24(%esp)
setne  %al
movzbl %al,%eax
mov    %eax,0x28(%esp)
jne    8050730 <sidput@plt+0x2bd0>
movl   $0x28,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x24(%esp)
je     80509c0 <sidput@plt+0x2e60>
mov    %ebx,0x4(%eax)
movl   $0x1,(%eax)
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x8(%edi)
je     80507a0 <sidput@plt+0x2c40>
mov    0x20(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0xc(%edi)
je     80507a0 <sidput@plt+0x2c40>
mov    0x20(%esp),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
je     8050481 <sidput@plt+0x2921>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x10(%edi)
je     80507a0 <sidput@plt+0x2c40>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052ec0 <sidput@plt+0x5360>
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x804ed30,0x4(%esp)
mov    %eax,(%esp)
call   8077f00 <dbus_type_is_fixed+0xa0>
test   %eax,%eax
mov    %eax,0x20(%edi)
je     80507a0 <sidput@plt+0x2c40>
mov    %eax,0x2c(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    0x2c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   80881e0 <dbus_shutdown+0x9500>
test   %eax,%eax
je     80507a0 <sidput@plt+0x2c40>
orb    $0x1,0x24(%edi)
lea    0x14(%edi),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     80507a0 <sidput@plt+0x2c40>
mov    0x4(%edi),%eax
addl   $0x1,0x18(%edi)
addl   $0x1,0x14(%eax)
mov    %edi,0x8(%esp)
mov    0x8(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
jne    805075a <sidput@plt+0x2bfa>
mov    0xb8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %edi,(%esp)
call   804f960 <sidput@plt+0x1e00>
xor    %eax,%eax
jmp    80506f2 <sidput@plt+0x2b92>
lea    0x0(%esi,%eiz,1),%esi
mov    0xb4(%esp),%eax
lea    0x38(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052e30 <sidput@plt+0x52d0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     8050399 <sidput@plt+0x2839>
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ebx
je     8050870 <sidput@plt+0x2d10>
movl   $0x0,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x75,0x4(%esp)
mov    %eax,(%esp)
movl   $0x2,0x68(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    8050908 <sidput@plt+0x2da8>
mov    0xb8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
xor    %eax,%eax
jmp    80506f2 <sidput@plt+0x2b92>
lea    0x0(%esi,%eiz,1),%esi
lea    0x48(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8050870 <sidput@plt+0x2d10>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052e00 <sidput@plt+0x52a0>
mov    %eax,%edi
mov    0x20(%esp),%eax
test   %edi,%edi
je     8050e13 <sidput@plt+0x32b3>
mov    0xc(%eax),%edx
test   %edx,%edx
je     8050b9b <sidput@plt+0x303b>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8050a0f <sidput@plt+0x2eaf>
movl   $0x80981e2,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8050a0f <sidput@plt+0x2eaf>
mov    0xb4(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8050a0f <sidput@plt+0x2eaf>
mov    0xb8(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8088d20 <dbus_shutdown+0xa040>
test   %eax,%eax
je     8050b76 <sidput@plt+0x3016>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0xb8(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xc(%ebx),%eax
movl   $0x8096b91,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8050280 <sidput@plt+0x2720>
test   %eax,%eax
jne    8050bc9 <sidput@plt+0x3069>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0xc(%esp)
mov    0xb8(%esp),%eax
movl   $0x8096810,0x8(%esp)
movl   $0x8096864,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x8c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x24(%esp),%eax
mov    %esi,0x4(%esp)
add    $0x14,%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     80509c0 <sidput@plt+0x2e60>
mov    0x24(%esp),%eax
addl   $0x1,0x18(%eax)
mov    0x4(%eax),%eax
addl   $0x1,0x14(%eax)
mov    0x24(%esp),%edi
mov    0xa8(%esp),%eax
movl   $0x804fa70,0xc(%esp)
movl   $0x804edc0,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   805a380 <sidput@plt+0xc820>
test   %eax,%eax
je     8050980 <sidput@plt+0x2e20>
mov    0x28(%esp),%esi
addl   $0x1,(%edi)
test   %esi,%esi
je     80507e0 <sidput@plt+0x2c80>
mov    $0x1,%eax
jmp    80506f2 <sidput@plt+0x2b92>
xchg   %ax,%ax
mov    0xb8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %edi,(%esp)
call   804f960 <sidput@plt+0x1e00>
mov    %esi,%eax
call   804e820 <sidput@plt+0xcc0>
add    $0x8c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052e10 <sidput@plt+0x52b0>
test   %eax,%eax
je     8050600 <sidput@plt+0x2aa0>
mov    0xb4(%esp),%esi
mov    $0x8096b3b,%edi
mov    $0x19,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8050794 <sidput@plt+0x2c34>
mov    0x20(%esp),%eax
mov    0x10(%eax),%ecx
test   %ecx,%ecx
je     8050600 <sidput@plt+0x2aa0>
movl   $0x8096b54,0x8(%esp)
movl   $0x80968f0,0x4(%esp)
movl   $0x8096b66,(%esp)
call   8071540 <dbus_message_new_signal>
test   %eax,%eax
mov    %eax,%esi
je     8050870 <sidput@plt+0x2d10>
movl   $0x8096b7c,0x4(%esp)
mov    %eax,(%esp)
call   8072250 <dbus_message_set_sender>
test   %eax,%eax
je     8050865 <sidput@plt+0x2d05>
movl   $0x8096b3b,0x4(%esp)
mov    %esi,(%esp)
call   80720e0 <dbus_message_set_destination>
test   %eax,%eax
jne    8050a4b <sidput@plt+0x2eeb>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
lea    0x0(%esi),%esi
mov    0xb8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    80506f0 <sidput@plt+0x2b90>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    0x18(%ebx),%eax
lea    0x58(%esp),%esi
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
je     80509f0 <sidput@plt+0x2e90>
mov    %ebp,(%esp)
call   807c380 <dbus_watch_handle+0x7c0>
mov    %esi,(%esp)
mov    %eax,%edi
call   806ad70 <dbus_error_init>
mov    %esi,%ecx
mov    %edi,%edx
mov    %ebx,%eax
call   804f6c0 <sidput@plt+0x1b60>
test   %eax,%eax
jne    80508b0 <sidput@plt+0x2d50>
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    8050968 <sidput@plt+0x2e08>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
lea    0x0(%esi),%esi
jmp    80508b0 <sidput@plt+0x2d50>
lea    0x0(%esi),%esi
mov    0xa4(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    %ebx,(%esp)
mov    %eax,%esi
call   806e970 <dbus_message_unref>
test   %esi,%esi
mov    %esi,%eax
jne    80506f2 <sidput@plt+0x2b92>
mov    0xb8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    0xac(%esp),%eax
jmp    80506f2 <sidput@plt+0x2b92>
lea    0x0(%esi),%esi
mov    0xb8(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
jmp    80506f0 <sidput@plt+0x2b90>
mov    0xb8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    0x24(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
xor    %eax,%eax
jmp    80506f2 <sidput@plt+0x2b92>
lea    0x0(%esi,%eiz,1),%esi
mov    0xb8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,%eax
call   804e820 <sidput@plt+0xcc0>
xor    %eax,%eax
jmp    80506f2 <sidput@plt+0x2b92>
lea    0x0(%esi),%esi
mov    0xb4(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
mov    %eax,0x20(%esp)
jmp    805037e <sidput@plt+0x281e>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8050870 <sidput@plt+0x2d10>
mov    0xb4(%esp),%eax
movl   $0x8096890,0x8(%esp)
movl   $0x80968c4,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0xb8(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    80506f0 <sidput@plt+0x2b90>
mov    0x20(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x73,0x4(%esp)
mov    %esi,(%esp)
add    $0x10,%eax
mov    %eax,0x8(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     8050865 <sidput@plt+0x2d05>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8059920 <sidput@plt+0xbdc0>
test   %eax,%eax
mov    %eax,%edi
je     8050865 <sidput@plt+0x2d05>
mov    0xa4(%esp),%eax
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
mov    %ebp,(%esp)
movl   $0x8096b3b,0x4(%esp)
mov    %eax,0x24(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x24(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8060c40 <sidput@plt+0x130e0>
mov    %eax,%ebp
mov    0x20(%esp),%eax
test   %ebp,%ebp
mov    0x10(%eax),%eax
mov    %eax,0x10(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0xc(%esp)
je     8050eb5 <sidput@plt+0x3355>
movl   $0x8096914,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %ebp,(%esp)
call   8061c60 <sidput@plt+0x14100>
mov    0xb8(%esp),%edx
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
call   805b7f0 <sidput@plt+0xdc90>
mov    %eax,%ebp
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
test   %ebp,%ebp
jne    8050ea6 <sidput@plt+0x3346>
mov    0x20(%esp),%eax
mov    0x10(%eax),%eax
movl   $0x8096984,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %edi,(%esp)
call   8059b60 <sidput@plt+0xc000>
xor    %eax,%eax
jmp    80506f2 <sidput@plt+0x2b92>
mov    0x24(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
jmp    80506f2 <sidput@plt+0x2b92>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0xb8(%esp),%eax
movl   $0x80969c0,0x8(%esp)
movl   $0x80969f0,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    80506f2 <sidput@plt+0x2b92>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052de0 <sidput@plt+0x5280>
test   %eax,%eax
mov    %eax,%esi
je     8050c31 <sidput@plt+0x30d1>
mov    0xb8(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x8096ba6,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   8050280 <sidput@plt+0x2720>
test   %eax,%eax
je     80506e0 <sidput@plt+0x2b80>
movl   $0x8099f85,0x4(%esp)
mov    %esi,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     8050f39 <sidput@plt+0x33d9>
movl   $0x8099f7c,0x4(%esp)
mov    %esi,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     8050f0a <sidput@plt+0x33aa>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   807cbf0 <dbus_watch_handle+0x1030>
mov    %eax,0x2c(%esp)
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     8050def <sidput@plt+0x328f>
mov    %ebp,0x4(%esp)
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8050de3 <sidput@plt+0x3283>
xor    %eax,%eax
mov    0x20(%esp),%esi
mov    %edi,0x28(%esp)
mov    %eax,%edi
mov    %ebx,0xa0(%esp)
jmp    8050ce4 <sidput@plt+0x3184>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   807c3f0 <dbus_watch_handle+0x830>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   807c380 <dbus_watch_handle+0x7c0>
mov    %ebx,0x8(%esp)
movl   $0x8096bed,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x58(%esp),%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     8050cf0 <sidput@plt+0x3190>
lea    0x58(%esp),%eax
mov    %esi,0x4(%esp)
add    $0x4,%esi
mov    %eax,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     8050cf0 <sidput@plt+0x3190>
add    $0x1,%edi
mov    %ebp,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    8050c98 <sidput@plt+0x3138>
lea    0x58(%esp),%eax
mov    %edi,%esi
mov    0xa0(%esp),%ebx
mov    %eax,(%esp)
mov    0x28(%esp),%edi
call   807f3d0 <dbus_shutdown+0x6f0>
cmp    %esi,0x2c(%esp)
jne    8050de3 <sidput@plt+0x3283>
test   %edi,%edi
je     8050e7b <sidput@plt+0x331b>
mov    0xb4(%esp),%eax
movl   $0x8096a20,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %ebp,(%esp)
call   806ad70 <dbus_error_init>
mov    0x20(%esp),%eax
mov    %ebp,0x14(%esp)
mov    %ebx,0x10(%esp)
movl   $0x804ecb0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
add    $0x1c,%eax
mov    %eax,(%esp)
call   808b8d0 <dbus_shutdown+0xcbf0>
test   %eax,%eax
je     8050e1b <sidput@plt+0x32bb>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0x24(%esp),%edi
movl   $0x804e9f0,0x4(%esp)
mov    %edi,0x8(%esp)
mov    0x1c(%edi),%eax
mov    %eax,(%esp)
call   808bf40 <dbus_shutdown+0xd260>
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x804e890,0xc(%esp)
movl   $0x804e8c0,0x8(%esp)
movl   $0x804e8f0,0x4(%esp)
mov    0x1c(%edi),%eax
mov    %eax,(%esp)
call   808b880 <dbus_shutdown+0xcba0>
test   %eax,%eax
jne    8050794 <sidput@plt+0x2c34>
jmp    8050870 <sidput@plt+0x2d10>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0xb8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    80506e0 <sidput@plt+0x2b80>
mov    0x8(%eax),%eax
jmp    805066b <sidput@plt+0x2b0b>
mov    0x6c(%esp),%eax
movl   $0x8096a54,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0xb4(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    0xb8(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
xor    %eax,%eax
jmp    80506f2 <sidput@plt+0x2b92>
mov    0xb4(%esp),%eax
movl   $0x8096bf3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
jmp    8050d41 <sidput@plt+0x31e1>
mov    %edi,(%esp)
call   8059c40 <sidput@plt+0xc0e0>
xchg   %ax,%ax
jmp    8050794 <sidput@plt+0x2c34>
movl   $0x8096948,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    0xb8(%esp),%eax
movl   $0x8096b3b,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x1,0xc(%esp)
mov    %eax,0x18(%esp)
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8050310 <sidput@plt+0x27b0>
mov    %eax,%ebp
jmp    8050b26 <sidput@plt+0x2fc6>
mov    0xb8(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xc(%ebx),%eax
movl   $0x8096bd5,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8050280 <sidput@plt+0x2720>
test   %eax,%eax
je     80506e0 <sidput@plt+0x2b80>
jmp    8050c31 <sidput@plt+0x30d1>
mov    0xb8(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xc(%ebx),%eax
movl   $0x8096bbc,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8050280 <sidput@plt+0x2720>
test   %eax,%eax
jne    8050c31 <sidput@plt+0x30d1>
jmp    80506e0 <sidput@plt+0x2b80>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   807cbf0 <dbus_watch_handle+0x1030>
mov    %eax,0xc(%esp)
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
mov    %eax,%edi
mov    %eax,0x8(%esp)
xor    %eax,%eax
test   %edi,%edi
je     805101a <sidput@plt+0x34ba>
lea    0x18(%esp),%esi
mov    %esi,0x4(%esp)
mov    0x4(%ebx),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
jmp    8050fe2 <sidput@plt+0x3482>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
mov    %edi,%ebp
call   807c380 <dbus_watch_handle+0x7c0>
lea    0x4(%edi),%edi
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,-0x4(%edi)
je     8051028 <sidput@plt+0x34c8>
add    $0x1,%ebx
mov    %esi,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    8050fc0 <sidput@plt+0x3460>
mov    0x8(%esp),%eax
movl   $0x0,(%eax,%ebx,4)
mov    0x58(%esp),%eax
test   %eax,%eax
je     805100b <sidput@plt+0x34ab>
mov    0x58(%esp),%eax
mov    0xc(%esp),%ecx
mov    %ecx,(%eax)
mov    0x54(%esp),%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
mov    $0x1,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %esi,%esi
test   %ebx,%ebx
jne    8051033 <sidput@plt+0x34d3>
jmp    8051042 <sidput@plt+0x34e2>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
add    $0x1,%esi
call   807ebb0 <dbus_free>
cmp    %ebx,%esi
jne    8051030 <sidput@plt+0x34d0>
mov    0x8(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
lea    0x48(%esp),%edi
mov    0x80(%esp),%esi
mov    %edi,(%esp)
movl   $0x0,0x44(%esp)
call   806ad70 <dbus_error_init>
lea    0x40(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x44(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x84(%esp),%eax
movl   $0x0,0x20(%esp)
movl   $0x73,0x18(%esp)
movl   $0x73,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    8051180 <sidput@plt+0x3620>
mov    0x44(%esp),%eax
test   %eax,%eax
je     8051168 <sidput@plt+0x3608>
mov    0x40(%esp),%edx
lea    0x58(%esp),%ebx
mov    %eax,0xc(%esp)
movl   $0x8096a78,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,0x10(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %ebx,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
je     8051168 <sidput@plt+0x3608>
mov    %ebx,(%esp)
call   807c380 <dbus_watch_handle+0x7c0>
mov    0x10(%eax),%ecx
mov    %eax,%esi
test   %ecx,%ecx
je     8051120 <sidput@plt+0x35c0>
mov    0x44(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8051120 <sidput@plt+0x35c0>
mov    %edi,%edx
mov    %esi,%eax
call   804e920 <sidput@plt+0xdc0>
mov    %ebx,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    805112c <sidput@plt+0x35cc>
xchg   %ax,%ax
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
add    $0x70,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   806b100 <dbus_set_error>
jmp    80510d4 <sidput@plt+0x3574>
xchg   %ax,%ax
nop
push   %ebx
sub    $0x1038,%esp
mov    %gs:0x14,%eax
mov    %eax,0x102c(%esp)
xor    %eax,%eax
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d770 <aa_find_mountpoint@plt>
test   %eax,%eax
je     80511e0 <sidput@plt+0x3680>
xor    %eax,%eax
mov    0x102c(%esp),%edx
xor    %gs:0x14,%edx
jne    8051244 <sidput@plt+0x36e4>
add    $0x1038,%esp
pop    %ebx
ret
mov    0x24(%esp),%eax
lea    0x2b(%esp),%ebx
movl   $0x8096c10,0x10(%esp)
movl   $0x1001,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
movl   $0x1001,0x4(%esp)
mov    %ebx,(%esp)
call   804d050 <__snprintf_chk@plt>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
movl   $0x80000,0x4(%esp)
mov    %ebx,(%esp)
call   804d570 <open@plt>
cmp    $0xffffffff,%eax
je     80511c6 <sidput@plt+0x3666>
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    $0x1,%eax
jmp    80511c8 <sidput@plt+0x3668>
call   804d240 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
test   %edx,%edx
push   %esi
push   %ebx
mov    $0x8096c26,%ebx
jne    8051260 <sidput@plt+0x3700>
test   %eax,%eax
jne    8051280 <sidput@plt+0x3720>
mov    %ebx,%edi
mov    %edx,%esi
mov    $0xb,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
pop    %ebx
pop    %esi
sete   %al
movzbl %al,%eax
mov    %eax,%edi
mov    %edi,%eax
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xb,%ecx
mov    %eax,%esi
mov    %ebx,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x1,%edi
seta   %al
setb   %cl
cmp    %cl,%al
jne    8051260 <sidput@plt+0x3700>
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x48(%esp),%ebx
mov    %eax,(%esp)
call   804d600 <strlen@plt>
test   %ebx,%ebx
mov    %eax,0x1c(%esp)
lea    0x1(%eax),%edi
jle    80512e3 <sidput@plt+0x3783>
lea    0x50(%esp),%esi
xor    %ebp,%ebp
mov    -0x4(%esi),%eax
test   %eax,%eax
je     80512d9 <sidput@plt+0x3779>
mov    %eax,(%esp)
call   804d600 <strlen@plt>
add    %eax,%edi
add    $0x1,%ebp
add    $0x4,%esi
cmp    %ebx,%ebp
jne    80512c8 <sidput@plt+0x3768>
lea    (%edi,%ebx,1),%eax
mov    %eax,0x14(%esp)
add    $0x7,%eax
mov    %eax,(%esp)
call   804d4e0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     805136a <sidput@plt+0x380a>
lea    0x6(%eax),%edi
mov    0x44(%esp),%eax
xor    %ebp,%ebp
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804d430 <strcpy@plt>
mov    0x1c(%esp),%esi
add    %edi,%esi
test   %ebx,%ebx
movb   $0x0,(%esi)
lea    0x2(%esi),%eax
movb   $0x20,0x1(%esi)
lea    0x50(%esp),%edi
mov    $0x80a05b3,%esi
jle    8051351 <sidput@plt+0x37f1>
nop
mov    -0x4(%edi),%edx
mov    %eax,(%esp)
test   %edx,%edx
cmove  %esi,%edx
add    $0x1,%ebp
mov    %edx,0x4(%esp)
add    $0x4,%edi
call   804d230 <stpcpy@plt>
add    $0x1,%eax
cmp    %ebx,%ebp
jne    8051330 <sidput@plt+0x37d0>
mov    0x40(%esp),%eax
mov    0x18(%esp),%ecx
mov    %ecx,(%eax)
mov    0x14(%esp),%eax
add    $0x6,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%eax
jmp    8051362 <sidput@plt+0x3802>
jmp    8051380 <sidput@plt+0x3820>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x80981e2,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    80513b0 <sidput@plt+0x3850>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80513a0 <sidput@plt+0x3840>
movl   $0x80981d7,0x4(%esp)
mov    %ebx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80513a0 <sidput@plt+0x3840>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80513a0 <sidput@plt+0x3840>
movl   $0x80981d8,0x4(%esp)
mov    %ebx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    80513a2 <sidput@plt+0x3842>
xchg   %ax,%ax
test   $0x2,%dl
jne    8051428 <sidput@plt+0x38c8>
test   $0x4,%dl
jne    8051438 <sidput@plt+0x38d8>
and    $0x40,%edx
jne    8051418 <sidput@plt+0x38b8>
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
mov    $0x8096c3e,%ecx
mov    $0x8096c21,%edx
jmp    8051380 <sidput@plt+0x3820>
nop
mov    $0x8096c31,%ecx
mov    $0x8096c21,%edx
jmp    8051380 <sidput@plt+0x3820>
nop
mov    $0x8096c36,%ecx
mov    $0x8096c21,%edx
jmp    8051380 <sidput@plt+0x3820>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x80981e2,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    8051480 <sidput@plt+0x3920>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8051470 <sidput@plt+0x3910>
movl   $0x8099feb,0x4(%esp)
mov    %ebx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8051470 <sidput@plt+0x3910>
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   8087650 <dbus_shutdown+0x8970>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    8051472 <sidput@plt+0x3912>
lea    0x0(%esi),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0xc,%esp
call   804da50 <aa_is_enabled@plt>
xor    %edx,%edx
test   %eax,%eax
je     80514ea <sidput@plt+0x398a>
call   80511a0 <sidput@plt+0x3640>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
mov    %edx,0x80b83ac
mov    $0x1,%eax
add    $0xc,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x20(%esp),%eax
test   %eax,%eax
je     80515b0 <sidput@plt+0x3a50>
mov    $0x8096c43,%edi
mov    $0x9,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8051570 <sidput@plt+0x3a10>
mov    $0x8097d18,%edi
mov    $0x8,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8051558 <sidput@plt+0x39f8>
mov    $0x8096c4c,%edi
mov    $0x9,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8051588 <sidput@plt+0x3a28>
movl   $0x2,0x80b8308
00
add    $0x14,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
movl   $0x1,0x80b8308
00
add    $0x14,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x0,0x80b8308
00
add    $0x14,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
movl   $0x8096cb0,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x14,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
ret
add    $0x14,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x80b83ac,%ecx
test   %ecx,%ecx
je     80515f8 <sidput@plt+0x3a98>
mov    0x80b8308,%edx
test   %edx,%edx
je     8051618 <sidput@plt+0x3ab8>
mov    0x80b83a8,%eax
mov    $0x1,%ebx
test   %eax,%eax
je     8051630 <sidput@plt+0x3ad0>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x2,0x80b8308
mov    $0x1,%ebx
jne    80515e8 <sidput@plt+0x3a88>
movl   $0x8096d38,(%esp)
xor    %bl,%bl
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80515e8 <sidput@plt+0x3a88>
xchg   %ax,%ax
mov    $0x1,%ebx
movl   $0x0,0x80b83ac
00
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   804d3d0 <aa_getcon@plt>
cmp    $0xffffffff,%eax
je     8051677 <sidput@plt+0x3b17>
movl   $0xc,(%esp)
mov    0x1c(%esp),%esi
mov    0x18(%esp),%edi
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     805169d <sidput@plt+0x3b3d>
movl   $0x1,(%eax)
mov    %edi,0x4(%eax)
mov    %esi,0x8(%eax)
mov    %eax,0x80b83a8
jmp    80515e8 <sidput@plt+0x3a88>
call   804d730 <__errno_location@plt>
xor    %bl,%bl
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x8096d0c,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80515e8 <sidput@plt+0x3a88>
movl   $0x8096d68,(%esp)
xor    %ebx,%ebx
movl   $0x0,0x80b83a8
00
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
jmp    80515e8 <sidput@plt+0x3a88>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80b83ac,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80b83ac,%eax
test   %eax,%eax
je     80516f8 <sidput@plt+0x3b98>
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x80b83ac,%eax
mov    0x20(%esp),%ebx
test   %eax,%eax
je     8051716 <sidput@plt+0x3bb6>
subl   $0x1,(%ebx)
je     8051720 <sidput@plt+0x3bc0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x80b83ac,%eax
test   %eax,%eax
jne    8051750 <sidput@plt+0x3bf0>
ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x80b83a8,%eax
mov    %eax,(%esp)
call   8051700 <sidput@plt+0x3ba0>
movl   $0x0,0x80b83a8
00
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    0x80b83ac,%edx
mov    0x4(%esp),%eax
test   %edx,%edx
je     8051781 <sidput@plt+0x3c21>
addl   $0x1,(%eax)
repz ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x20,%esp
mov    0x80b83ac,%eax
test   %eax,%eax
je     8051808 <sidput@plt+0x3ca8>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8065c80 <dbus_connection_get_socket>
test   %eax,%eax
je     8051878 <sidput@plt+0x3d18>
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804d720 <aa_getpeercon@plt>
cmp    $0xffffffff,%eax
je     8051818 <sidput@plt+0x3cb8>
movl   $0xc,(%esp)
mov    0x18(%esp),%esi
mov    0x14(%esp),%edi
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     80518a0 <sidput@plt+0x3d40>
movl   $0x1,(%eax)
mov    %eax,%ebx
mov    %edi,0x4(%eax)
mov    %esi,0x8(%eax)
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0xc,%eax
je     8051858 <sidput@plt+0x3cf8>
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x8096dc8,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8051808 <sidput@plt+0x3ca8>
xchg   %ax,%ax
mov    0x34(%esp),%eax
movl   $0x8096d94,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8051808 <sidput@plt+0x3ca8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
jmp    8051808 <sidput@plt+0x3ca8>
lea    0x0(%esi),%esi
push   %edi
mov    $0x1,%eax
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x80b83ac,%edx
movl   $0x0,0x20(%esp)
movl   $0x1,0x24(%esp)
movl   $0x0,0x2c(%esp)
test   %edx,%edx
jne    8051908 <sidput@plt+0x3da8>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8059170 <sidput@plt+0xb610>
mov    0x4(%eax),%esi
mov    %eax,%ebx
mov    0x8(%eax),%edx
mov    %esi,%eax
call   8051250 <sidput@plt+0x36f0>
test   %eax,%eax
je     8051950 <sidput@plt+0x3df0>
movl   $0x1,0x20(%esp)
movl   $0x0,0x24(%esp)
mov    %ebx,(%esp)
call   8051700 <sidput@plt+0x3ba0>
mov    0x20(%esp),%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x5c(%esp),%eax
movl   $0x2,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x58(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80512a0 <sidput@plt+0x3740>
cmp    $0xffffffff,%eax
je     8051b08 <sidput@plt+0x3fa8>
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
lea    0x24(%esp),%edx
mov    %edx,0x10(%esp)
lea    0x20(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x40,(%esp)
mov    %eax,0x4(%esp)
call   804cfe0 <aa_query_label@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
cmp    $0xffffffff,%esi
je     8051b90 <sidput@plt+0x4030>
mov    0x8(%ebx),%esi
test   %esi,%esi
je     80519dd <sidput@plt+0x3e7d>
mov    $0x8096c64,%edi
mov    $0x9,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80519dd <sidput@plt+0x3e7d>
movl   $0x1,0x20(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
je     8051937 <sidput@plt+0x3dd7>
xor    %edi,%edi
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8051b08 <sidput@plt+0x3fa8>
mov    0x58(%esp),%eax
test   %eax,%eax
je     8051a1f <sidput@plt+0x3ebf>
mov    0x58(%esp),%ecx
mov    $0x809fdf7,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     8051b58 <sidput@plt+0x3ff8>
mov    0x5c(%esp),%ecx
mov    $0x809c05a,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     8051b58 <sidput@plt+0x3ff8>
test   %edi,%edi
je     8051a59 <sidput@plt+0x3ef9>
mov    %edi,(%esp)
call   804d520 <strerror@plt>
mov    $0x8096ca1,%edx
mov    %eax,%ecx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     8051b58 <sidput@plt+0x3ff8>
mov    $0x40,%edx
mov    %esi,%eax
call   8051400 <sidput@plt+0x38a0>
test   %eax,%eax
je     8051b58 <sidput@plt+0x3ff8>
mov    0x50(%esp),%ecx
test   %ecx,%ecx
je     8051a91 <sidput@plt+0x3f31>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    8051b39 <sidput@plt+0x3fd9>
mov    0x4(%ebx),%ecx
test   %ecx,%ecx
je     8051aac <sidput@plt+0x3f4c>
mov    $0x8096c94,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     8051b58 <sidput@plt+0x3ff8>
mov    0x20(%esp),%edx
mov    $0x8096c5d,%eax
movl   $0x8096c3e,0x10(%esp)
movl   $0x8096e0c,0x8(%esp)
movl   $0x1,0x4(%esp)
test   %edx,%edx
mov    $0x8096c55,%edx
cmovne %edx,%eax
mov    0x30(%esp),%edx
mov    %eax,0xc(%esp)
movl   $0xe,(%esp)
mov    %edx,0x14(%esp)
call   804d820 <__syslog_chk@plt>
mov    %ebx,(%esp)
call   8051700 <sidput@plt+0x3ba0>
nop
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    805193f <sidput@plt+0x3ddf>
lea    0x0(%esi),%esi
mov    0x60(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
movl   $0x0,0x20(%esp)
call   8051700 <sidput@plt+0x3ba0>
jmp    805193f <sidput@plt+0x3ddf>
mov    0x28(%esp),%ecx
mov    $0x8099ff5,%edx
mov    %esi,%eax
call   8051450 <sidput@plt+0x38f0>
test   %eax,%eax
jne    8051a91 <sidput@plt+0x3f31>
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
movl   $0x0,0x20(%esp)
call   8051700 <sidput@plt+0x3ba0>
jmp    8051af8 <sidput@plt+0x3f98>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%edi
jmp    80519eb <sidput@plt+0x3e8b>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x1,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80b83ac,%edx
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
movl   $0x1,0x40(%esp)
test   %edx,%edx
movl   $0x1,0x44(%esp)
movl   $0x0,0x4c(%esp)
jne    8051be8 <sidput@plt+0x4088>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8059170 <sidput@plt+0xb610>
mov    %eax,%ebp
mov    0x84(%esp),%eax
test   %eax,%eax
je     8051f70 <sidput@plt+0x4410>
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   8059170 <sidput@plt+0xb610>
mov    %eax,%ebx
mov    0x8c(%esp),%esi
mov    $0x809b540,%edi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8051f58 <sidput@plt+0x43f8>
mov    0x8c(%esp),%esi
mov    $0x8096c6d,%edi
mov    $0xe,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8051f58 <sidput@plt+0x43f8>
mov    0x4(%ebp),%esi
mov    0x8(%ebp),%edx
mov    %esi,%eax
call   8051250 <sidput@plt+0x36f0>
test   %eax,%eax
je     8052000 <sidput@plt+0x44a0>
movl   $0x1,0x38(%esp)
movl   $0x0,0x40(%esp)
mov    0x8(%ebx),%eax
mov    0x4(%ebx),%esi
mov    %eax,0x24(%esp)
mov    %eax,%edx
mov    %esi,%eax
call   8051250 <sidput@plt+0x36f0>
test   %eax,%eax
je     80520e0 <sidput@plt+0x4580>
movl   $0x1,0x3c(%esp)
movl   $0x0,0x44(%esp)
mov    0x8(%ebp),%esi
test   %esi,%esi
je     8051cb4 <sidput@plt+0x4154>
mov    $0x8096c64,%edi
mov    $0x9,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8051fb8 <sidput@plt+0x4458>
mov    0x24(%esp),%esi
test   %esi,%esi
je     8051cd2 <sidput@plt+0x4172>
mov    $0x8096c64,%edi
mov    $0x9,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8051cd2 <sidput@plt+0x4172>
movl   $0x1,0x3c(%esp)
mov    0x40(%esp),%esi
test   %esi,%esi
je     8051fa0 <sidput@plt+0x4440>
movl   $0x0,0x28(%esp)
movl   $0x0,0x24(%esp)
lea    0x50(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8051fc8 <sidput@plt+0x4468>
mov    0x88(%esp),%edx
test   %edx,%edx
je     8051d28 <sidput@plt+0x41c8>
mov    0x88(%esp),%ecx
mov    $0x809fdf7,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
mov    0x90(%esp),%eax
test   %eax,%eax
je     8051d4e <sidput@plt+0x41ee>
mov    0x90(%esp),%ecx
mov    $0x809c0f6,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
mov    0x94(%esp),%eax
test   %eax,%eax
je     8051d74 <sidput@plt+0x4214>
mov    0x94(%esp),%ecx
mov    $0x809c03b,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
mov    0x98(%esp),%eax
test   %eax,%eax
je     8051d9a <sidput@plt+0x423a>
mov    0x98(%esp),%ecx
mov    $0x809c049,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
mov    0x9c(%esp),%eax
test   %eax,%eax
je     8051dc0 <sidput@plt+0x4260>
mov    0x9c(%esp),%ecx
mov    $0x8096c7b,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
mov    0x54(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x40(%esp),%eax
test   %eax,%eax
jne    805219e <sidput@plt+0x463e>
mov    0x44(%esp),%eax
mov    $0x1,%edi
test   %eax,%eax
je     8051f18 <sidput@plt+0x43b8>
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
cmpl   $0x0,0xa4(%esp)
je     8051e1a <sidput@plt+0x42ba>
mov    0xa4(%esp),%ecx
mov    $0x809c05a,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
mov    $0x4,%edx
mov    %esi,%eax
call   8051400 <sidput@plt+0x38a0>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
cmpl   $0x0,0x84(%esp)
je     8051e57 <sidput@plt+0x42f7>
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    8052322 <sidput@plt+0x47c2>
mov    0x4(%ebx),%ecx
test   %ecx,%ecx
je     8051e72 <sidput@plt+0x4312>
mov    $0x8096c94,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
cmpl   $0x0,0x80(%esp)
je     8051e9b <sidput@plt+0x433b>
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    805233f <sidput@plt+0x47df>
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     8051eb6 <sidput@plt+0x4356>
mov    $0x8096c8f,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
cmpl   $0x0,0x28(%esp)
jne    8052383 <sidput@plt+0x4823>
cmpl   $0x0,0x24(%esp)
jne    805235c <sidput@plt+0x47fc>
cmpl   $0x0,0x3c(%esp)
mov    $0x8096c55,%edx
mov    $0x8096c5d,%eax
mov    0x8c(%esp),%ecx
mov    $0x1,%edi
movl   $0x8096e0c,0x8(%esp)
cmovne %edx,%eax
mov    0x50(%esp),%edx
mov    %eax,0xc(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0xe,(%esp)
call   804d820 <__syslog_chk@plt>
xchg   %ax,%ax
mov    %ebp,(%esp)
call   8051700 <sidput@plt+0x3ba0>
test   %ebx,%ebx
je     8051f2c <sidput@plt+0x43cc>
mov    %ebx,(%esp)
call   8051700 <sidput@plt+0x3ba0>
test   %edi,%edi
jne    8051f90 <sidput@plt+0x4430>
mov    0x38(%esp),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     8051bde <sidput@plt+0x407e>
mov    0x3c(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
test   %ebp,%ebp
movl   $0x1,0x38(%esp)
movl   $0x1,0x3c(%esp)
jne    8051f18 <sidput@plt+0x43b8>
jmp    8051f20 <sidput@plt+0x43c0>
mov    0x80b83ac,%edi
mov    0x80b83a8,%ebx
test   %edi,%edi
je     8051c19 <sidput@plt+0x40b9>
addl   $0x1,(%ebx)
jmp    8051c19 <sidput@plt+0x40b9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x50(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8051f30 <sidput@plt+0x43d0>
xchg   %ax,%ax
mov    0x44(%esp),%ecx
xor    %edi,%edi
test   %ecx,%ecx
je     8051f18 <sidput@plt+0x43b8>
xchg   %ax,%ax
jmp    8051cde <sidput@plt+0x417e>
lea    0x0(%esi),%esi
movl   $0x1,0x38(%esp)
jmp    8051cb4 <sidput@plt+0x4154>
lea    0x0(%esi),%esi
xor    %edi,%edi
mov    0xa8(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
movl   $0x0,0x38(%esp)
movl   $0x0,0x3c(%esp)
jmp    8051f18 <sidput@plt+0x43b8>
xchg   %ax,%ax
mov    0x98(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x4(%ebx),%eax
movl   $0x6,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x88(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   80512a0 <sidput@plt+0x3740>
cmp    $0xffffffff,%eax
je     8051fc8 <sidput@plt+0x4468>
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
lea    0x40(%esp),%edx
mov    %edx,0x10(%esp)
lea    0x38(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   804cfe0 <aa_query_label@plt>
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
cmp    $0xffffffff,%esi
jne    8051c70 <sidput@plt+0x4110>
call   804d730 <__errno_location@plt>
movl   $0x0,0x28(%esp)
mov    (%eax),%eax
mov    %eax,0x24(%esp)
jmp    8051cee <sidput@plt+0x418e>
mov    0x48(%esp),%ecx
mov    $0x8099ff5,%edx
mov    %esi,%eax
call   8051450 <sidput@plt+0x38f0>
test   %eax,%eax
jne    8052200 <sidput@plt+0x46a0>
xchg   %ax,%ax
mov    $0x1,%edi
jmp    8051fca <sidput@plt+0x446a>
lea    0x0(%esi),%esi
mov    0x98(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x4(%ebp),%eax
movl   $0x6,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x88(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
call   80512a0 <sidput@plt+0x3740>
cmp    $0xffffffff,%eax
je     8051fc8 <sidput@plt+0x4468>
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
lea    0x44(%esp),%edx
mov    %edx,0x10(%esp)
lea    0x3c(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
call   804cfe0 <aa_query_label@plt>
mov    %eax,%esi
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
cmp    $0xffffffff,%esi
je     8052186 <sidput@plt+0x4626>
mov    0x8(%ebx),%eax
mov    %eax,0x24(%esp)
jmp    8051c9b <sidput@plt+0x413b>
call   804d730 <__errno_location@plt>
movl   $0x0,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
jmp    8051cee <sidput@plt+0x418e>
mov    $0x2,%edx
mov    %esi,%eax
call   8051400 <sidput@plt+0x38a0>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
cmpl   $0x0,0xa0(%esp)
je     80521d7 <sidput@plt+0x4677>
mov    0xa0(%esp),%ecx
mov    $0x809c05a,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
cmpl   $0x0,0x80(%esp)
je     8052200 <sidput@plt+0x46a0>
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    80520b6 <sidput@plt+0x4556>
mov    0x4(%ebp),%ecx
test   %ecx,%ecx
je     805221b <sidput@plt+0x46bb>
mov    $0x8096c94,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
cmpl   $0x0,0x84(%esp)
je     8052240 <sidput@plt+0x46e0>
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    80522b7 <sidput@plt+0x4757>
mov    0x4(%ebx),%ecx
test   %ecx,%ecx
je     805225b <sidput@plt+0x46fb>
mov    $0x8096c8f,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
cmpl   $0x0,0x24(%esp)
jne    80522fb <sidput@plt+0x479b>
cmpl   $0x0,0x28(%esp)
jne    80522d4 <sidput@plt+0x4774>
cmpl   $0x0,0x38(%esp)
mov    $0x8096c55,%edx
mov    $0x8096c5d,%eax
mov    0x8c(%esp),%ecx
movl   $0x8096e0c,0x8(%esp)
cmovne %edx,%eax
mov    0x50(%esp),%edx
mov    %eax,0xc(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x14(%esp)
movl   $0xe,(%esp)
call   804d820 <__syslog_chk@plt>
jmp    8051dd4 <sidput@plt+0x4274>
mov    0x48(%esp),%ecx
mov    $0x8096c86,%edx
mov    %esi,%eax
call   8051450 <sidput@plt+0x38f0>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
jmp    8052240 <sidput@plt+0x46e0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    $0x8096c9c,%edx
mov    %eax,%ecx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
jmp    805226d <sidput@plt+0x470d>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    $0x8096ca1,%edx
mov    %eax,%ecx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
jmp    8052266 <sidput@plt+0x4706>
mov    0x48(%esp),%ecx
mov    $0x8099ff5,%edx
mov    %esi,%eax
call   8051450 <sidput@plt+0x38f0>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
jmp    8051e57 <sidput@plt+0x42f7>
mov    0x48(%esp),%ecx
mov    $0x8096c86,%edx
mov    %esi,%eax
call   8051450 <sidput@plt+0x38f0>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
jmp    8051e9b <sidput@plt+0x433b>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    $0x8096c9c,%edx
mov    %eax,%ecx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
jmp    8051ecc <sidput@plt+0x436c>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    $0x8096ca1,%edx
mov    %eax,%ecx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     80520d0 <sidput@plt+0x4570>
jmp    8051ec1 <sidput@plt+0x4361>
lea    0x0(%esi),%esi
push   %edi
mov    $0x1,%eax
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x80b83ac,%edx
movl   $0x0,0x20(%esp)
movl   $0x1,0x24(%esp)
movl   $0x0,0x2c(%esp)
test   %edx,%edx
jne    80523e8 <sidput@plt+0x4888>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8059170 <sidput@plt+0xb610>
mov    0x4(%eax),%esi
mov    %eax,%ebx
mov    0x8(%eax),%edx
mov    %esi,%eax
call   8051250 <sidput@plt+0x36f0>
test   %eax,%eax
je     8052430 <sidput@plt+0x48d0>
movl   $0x1,0x20(%esp)
movl   $0x0,0x24(%esp)
mov    %ebx,(%esp)
call   8051700 <sidput@plt+0x3ba0>
mov    0x20(%esp),%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80512a0 <sidput@plt+0x3740>
cmp    $0xffffffff,%eax
je     80525d0 <sidput@plt+0x4a70>
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
lea    0x24(%esp),%edx
mov    %edx,0x10(%esp)
lea    0x20(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x20,(%esp)
mov    %eax,0x4(%esp)
call   804cfe0 <aa_query_label@plt>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
cmp    $0xffffffff,%esi
je     8052658 <sidput@plt+0x4af8>
mov    0x8(%ebx),%esi
test   %esi,%esi
je     80524b5 <sidput@plt+0x4955>
mov    $0x8096c64,%edi
mov    $0x9,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80524b5 <sidput@plt+0x4955>
movl   $0x1,0x20(%esp)
mov    0x24(%esp),%eax
test   %eax,%eax
je     8052417 <sidput@plt+0x48b7>
xor    %edi,%edi
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80525d0 <sidput@plt+0x4a70>
mov    0x54(%esp),%eax
test   %eax,%eax
je     80524f7 <sidput@plt+0x4997>
mov    0x54(%esp),%ecx
mov    $0x809fdf7,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     8052620 <sidput@plt+0x4ac0>
test   %edi,%edi
je     8052519 <sidput@plt+0x49b9>
mov    %edi,(%esp)
call   804d520 <strerror@plt>
mov    $0x8096ca1,%edx
mov    %eax,%ecx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     8052620 <sidput@plt+0x4ac0>
mov    $0x8096ca6,%ecx
mov    $0x8096c21,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     8052620 <sidput@plt+0x4ac0>
mov    0x50(%esp),%ecx
test   %ecx,%ecx
je     8052556 <sidput@plt+0x49f6>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    8052601 <sidput@plt+0x4aa1>
mov    0x4(%ebx),%ecx
test   %ecx,%ecx
je     8052571 <sidput@plt+0x4a11>
mov    $0x8096c94,%edx
mov    %esi,%eax
call   8051380 <sidput@plt+0x3820>
test   %eax,%eax
je     8052620 <sidput@plt+0x4ac0>
mov    0x20(%esp),%edx
mov    $0x8096c5d,%eax
movl   $0x8096ca6,0x10(%esp)
movl   $0x8096e0c,0x8(%esp)
movl   $0x1,0x4(%esp)
test   %edx,%edx
mov    $0x8096c55,%edx
cmovne %edx,%eax
mov    0x30(%esp),%edx
mov    %eax,0xc(%esp)
movl   $0xe,(%esp)
mov    %edx,0x14(%esp)
call   804d820 <__syslog_chk@plt>
mov    %ebx,(%esp)
call   8051700 <sidput@plt+0x3ba0>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    805241f <sidput@plt+0x48bf>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
movl   $0x0,0x20(%esp)
call   8051700 <sidput@plt+0x3ba0>
jmp    805241f <sidput@plt+0x48bf>
mov    0x28(%esp),%ecx
mov    $0x8099ff5,%edx
mov    %esi,%eax
call   8051450 <sidput@plt+0x38f0>
test   %eax,%eax
jne    8052556 <sidput@plt+0x49f6>
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
movl   $0x0,0x20(%esp)
call   8051700 <sidput@plt+0x3ba0>
jmp    80525c0 <sidput@plt+0x4a60>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%edi
nop
jmp    80524c3 <sidput@plt+0x4963>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
movl   $0x80b830c,(%esp)
call   80767d0 <dbus_server_allocate_data_slot>
test   %eax,%eax
je     80526c0 <sidput@plt+0x4b60>
mov    0x80b830c,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8076960 <dbus_server_get_data>
test   %eax,%eax
je     80526c8 <sidput@plt+0x4b68>
mov    (%eax),%ebx
movl   $0x80b830c,(%esp)
call   8076810 <dbus_server_free_data_slot>
mov    %ebx,%eax
add    $0x18,%esp
pop    %ebx
ret
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
movl   $0x80b830c,(%esp)
call   8076810 <dbus_server_free_data_slot>
xor    %eax,%eax
jmp    80526bb <sidput@plt+0x4b5b>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8052680 <sidput@plt+0x4b20>
mov    %ebx,0x14(%esp)
mov    0x30(%eax),%eax
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8088270 <dbus_shutdown+0x9590>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8052680 <sidput@plt+0x4b20>
mov    %ebx,0x14(%esp)
mov    0x30(%eax),%eax
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    80881e0 <dbus_shutdown+0x9500>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8052680 <sidput@plt+0x4b20>
mov    %ebx,0x14(%esp)
mov    0x30(%eax),%eax
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    80880c0 <dbus_shutdown+0x93e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8052680 <sidput@plt+0x4b20>
mov    %ebx,0x14(%esp)
mov    0x30(%eax),%eax
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8088100 <dbus_shutdown+0x9420>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8052680 <sidput@plt+0x4b20>
mov    %ebx,0x14(%esp)
mov    0x30(%eax),%eax
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8087f70 <dbus_shutdown+0x9290>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%ebx
mov    0x28(%esp),%esi
mov    %ebx,0x4(%esp)
mov    0x38(%esi),%eax
mov    %eax,(%esp)
call   8058a70 <sidput@plt+0xaf10>
test   %eax,%eax
jne    80527f8 <sidput@plt+0x4c98>
mov    %ebx,(%esp)
call   8067c50 <dbus_connection_close>
mov    0x4c(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   806a0d0 <dbus_connection_set_max_received_size>
mov    0x5c(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8069e90 <dbus_connection_set_max_message_size>
mov    0x50(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   806a1f0 <dbus_connection_set_max_received_unix_fds>
mov    0x60(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8069fb0 <dbus_connection_set_max_message_unix_fds>
movzbl 0x94(%esi),%eax
mov    %ebx,0x20(%esp)
shr    $0x3,%al
and    $0x1,%eax
mov    %eax,0x24(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    8068fb0 <dbus_connection_set_allow_anonymous>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
lea    0x20(%esp),%esi
mov    %esi,(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8052978 <sidput@plt+0x4e18>
lea    0x4c(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8057fb0 <sidput@plt+0xa450>
mov    0x44(%edi),%eax
test   %eax,%eax
je     80528a7 <sidput@plt+0x4d47>
mov    %eax,(%esp)
call   805eda0 <sidput@plt+0x11240>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8057fa0 <sidput@plt+0xa440>
mov    %eax,0x44(%edi)
lea    0x34(%edi),%eax
mov    %eax,(%esp)
call   807d910 <dbus_watch_handle+0x1d50>
test   %eax,%eax
mov    %eax,%ebx
je     8052920 <sidput@plt+0x4dc0>
nop
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8076290 <dbus_server_get_address>
test   %eax,%eax
mov    %eax,%ebp
je     8052943 <sidput@plt+0x4de3>
mov    0x24(%esp),%eax
test   %eax,%eax
jle    80528f9 <sidput@plt+0x4d99>
movl   $0x80971c3,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80529a0 <sidput@plt+0x4e40>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80529a0 <sidput@plt+0x4e40>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
cmp    %ebx,0x34(%edi)
je     8052920 <sidput@plt+0x4dc0>
mov    (%ebx),%ebx
test   %ebx,%ebx
jne    80528c8 <sidput@plt+0x4d68>
mov    0x1c(%esp),%edx
test   %edx,%edx
jne    8052a58 <sidput@plt+0x4ef8>
lea    0x20(%edi),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
jne    80529d8 <sidput@plt+0x4e78>
mov    0x50(%esp),%eax
xor    %ebx,%ebx
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x50(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x18(%esp),%ebp
mov    %ebp,(%esp)
call   8057ef0 <sidput@plt+0xa390>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8057f90 <sidput@plt+0xa430>
mov    %eax,%ebp
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %ebp,%ebp
je     8052a04 <sidput@plt+0x4ea4>
test   %eax,%eax
je     8052943 <sidput@plt+0x4de3>
mov    0x1c(%edi),%edx
mov    %eax,0x18(%esp)
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esp),%eax
mov    %eax,0x1c(%edi)
mov    0x3c(%edi),%eax
test   %eax,%eax
je     8052a68 <sidput@plt+0x4f08>
mov    0x50(%esp),%ecx
mov    %ebx,0x8(%esp)
xor    %ebx,%ebx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   804fac0 <sidput@plt+0x1f60>
test   %eax,%eax
je     8052961 <sidput@plt+0x4e01>
mov    0x3c(%edi),%eax
xor    %ebx,%ebx
test   %eax,%eax
setne  %bl
jmp    8052961 <sidput@plt+0x4e01>
lea    0x0(%esi),%esi
mov    0x20(%edi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    805292c <sidput@plt+0x4dcc>
mov    0x50(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   804fd20 <sidput@plt+0x21c0>
mov    %eax,0x3c(%edi)
jmp    8052a46 <sidput@plt+0x4ee6>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x2c,%esp
movl   $0x4,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     8052ad0 <sidput@plt+0x4f70>
mov    %eax,0x8(%esp)
mov    0x80b830c,%eax
movl   $0x8052670,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8076880 <dbus_server_set_data>
test   %eax,%eax
jne    8052b00 <sidput@plt+0x4fa0>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
mov    0x40(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %edi,(%ebx)
call   8076710 <dbus_server_set_auth_mechanisms>
test   %eax,%eax
je     8052ad8 <sidput@plt+0x4f78>
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x80527d0,0x4(%esp)
mov    %esi,(%esp)
call   80763c0 <dbus_server_set_new_connection_function>
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x8052740,0xc(%esp)
movl   $0x8052770,0x8(%esp)
movl   $0x80527a0,0x4(%esp)
mov    %esi,(%esp)
call   80764f0 <dbus_server_set_watch_functions>
test   %eax,%eax
je     8052ad8 <sidput@plt+0x4f78>
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x80526e0,0x8(%esp)
movl   $0x8052710,0x4(%esp)
mov    %esi,(%esp)
call   8076600 <dbus_server_set_timeout_functions>
test   %eax,%eax
je     8052ad8 <sidput@plt+0x4f78>
mov    $0x1,%eax
jmp    8052af6 <sidput@plt+0x4f96>
mov    0x4(%esp),%eax
add    $0x4,%eax
mov    %eax,0x4(%esp)
jmp    807cfc0 <dbus_watch_handle+0x1400>
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
lea    0x34(%edi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
nop
test   %ebx,%ebx
je     8052c47 <sidput@plt+0x50e7>
mov    0x8(%ebx),%esi
test   %esi,%esi
je     8052c3f <sidput@plt+0x50df>
mov    %esi,(%esp)
call   8076200 <dbus_server_get_is_connected>
test   %eax,%eax
je     8052c3f <sidput@plt+0x50df>
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80764f0 <dbus_server_set_watch_functions>
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8076600 <dbus_server_set_timeout_functions>
mov    %esi,(%esp)
call   8076120 <dbus_server_disconnect>
mov    0x4(%ebx),%ebx
cmp    0x34(%edi),%ebx
jne    8052bc8 <sidput@plt+0x5068>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
subl   $0x1,(%esi)
je     8052c78 <sidput@plt+0x5118>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8052bb0 <sidput@plt+0x5050>
mov    0x38(%esi),%eax
test   %eax,%eax
je     8052c96 <sidput@plt+0x5136>
mov    %eax,(%esp)
call   805a0f0 <sidput@plt+0xc590>
movl   $0x0,0x38(%esi)
mov    0x40(%esi),%eax
test   %eax,%eax
je     8052cac <sidput@plt+0x514c>
mov    %eax,(%esp)
call   8060b30 <sidput@plt+0x12fd0>
movl   $0x0,0x40(%esi)
mov    0x3c(%esi),%eax
test   %eax,%eax
je     8052cc2 <sidput@plt+0x5162>
mov    %eax,(%esp)
call   804fcb0 <sidput@plt+0x2150>
movl   $0x0,0x3c(%esi)
lea    0x34(%esi),%edi
mov    %edi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
nop
test   %ebx,%ebx
je     8052ce7 <sidput@plt+0x5187>
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8076070 <dbus_server_unref>
mov    0x4(%ebx),%ebx
cmp    0x34(%esi),%ebx
jne    8052cd0 <sidput@plt+0x5170>
mov    %edi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x44(%esi),%eax
test   %eax,%eax
je     8052d05 <sidput@plt+0x51a5>
mov    %eax,(%esp)
call   805eda0 <sidput@plt+0x11240>
movl   $0x0,0x44(%esi)
mov    0x30(%esi),%eax
test   %eax,%eax
je     8052d1b <sidput@plt+0x51bb>
mov    %eax,(%esp)
call   8087f00 <dbus_shutdown+0x9220>
movl   $0x0,0x30(%esi)
mov    0x48(%esi),%eax
test   %eax,%eax
je     8052d31 <sidput@plt+0x51d1>
mov    %eax,(%esp)
call   8063560 <sidput@plt+0x15a00>
movl   $0x0,0x48(%esi)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x28(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x24(%esi),%eax
test   %eax,%eax
je     8052da5 <sidput@plt+0x5245>
lea    0x10(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   80813a0 <dbus_shutdown+0x26c0>
mov    0x24(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x90(%esi),%eax
test   %eax,%eax
je     8052db7 <sidput@plt+0x5257>
mov    %eax,(%esp)
call   8089c30 <dbus_shutdown+0xaf50>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
movl   $0x80b830c,(%esp)
call   8076810 <dbus_server_free_data_slot>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x18(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x20(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x1c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x94(%eax),%eax
shr    $0x4,%al
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x40(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x38(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x3c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x48(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x30(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x44(%eax),%eax
mov    %eax,0x4(%esp)
jmp    805ef10 <sidput@plt+0x113b0>
mov    0x4(%esp),%eax
mov    0x44(%eax),%eax
mov    %eax,0x4(%esp)
jmp    805ef90 <sidput@plt+0x11430>
mov    0x4(%esp),%eax
mov    0x44(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x44(%eax),%eax
mov    %eax,0x4(%esp)
jmp    805f330 <sidput@plt+0x117d0>
mov    0x4(%esp),%eax
mov    0x64(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x68(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x6c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x70(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x74(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x78(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x7c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x80(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x84(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x88(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x90(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
testb  $0x2,0x94(%ebx)
je     8052fb0 <sidput@plt+0x5450>
mov    0x2c(%ebx),%eax
test   %eax,%eax
je     8053018 <sidput@plt+0x54b8>
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    8052ff0 <sidput@plt+0x5490>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80b83a0,%eax
mov    %eax,(%esp)
call   804d0b0 <__vfprintf_chk@plt>
mov    0x80b83a0,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   804d8e0 <fputc@plt>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x2c(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    8053040 <sidput@plt+0x54e0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8089c90 <dbus_shutdown+0xafb0>
jmp    8052fa9 <sidput@plt+0x5449>
lea    0x0(%esi,%eiz,1),%esi
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f960 <dbus_shutdown+0xc80>
test   %eax,%eax
je     8053003 <sidput@plt+0x54a3>
mov    0x10(%esp),%eax
movl   $0x809fd72,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8089d20 <dbus_shutdown+0xb040>
jmp    8053003 <sidput@plt+0x54a3>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x4c,%esp
mov    %eax,0x18(%esp)
mov    0x90(%eax),%eax
movl   $0x0,0x38(%esp)
mov    %ecx,0x1c(%esp)
movl   $0x0,0x2c(%esp)
test   %eax,%eax
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x3c(%esp)
movb   $0x1,0x38(%esp)
je     80531d0 <sidput@plt+0x5670>
mov    %ebx,(%esp)
call   8057fd0 <sidput@plt+0xa470>
mov    %eax,0x4(%esp)
mov    %eax,%esi
mov    0x18(%esp),%eax
mov    0x40(%eax),%eax
mov    %eax,(%esp)
call   8060da0 <sidput@plt+0x13240>
test   %eax,%eax
je     80531a8 <sidput@plt+0x5648>
mov    %esi,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %ebx,(%esp)
call   8057ef0 <sidput@plt+0xa390>
mov    %ebx,(%esp)
lea    0x2c(%esp),%ebx
mov    %eax,%edi
call   8057f00 <sidput@plt+0xa3a0>
movl   $0x0,0x2c(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     8053146 <sidput@plt+0x55e6>
mov    0x8(%ebp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     80531a0 <sidput@plt+0x5640>
mov    0x4(%ebp),%ebp
cmp    (%esi),%ebp
jne    8053128 <sidput@plt+0x55c8>
mov    %edi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%esi
jne    805315c <sidput@plt+0x55fc>
jmp    8053176 <sidput@plt+0x5616>
xchg   %ax,%ax
test   %esi,%esi
je     8053176 <sidput@plt+0x5616>
mov    0x8(%esi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     80531a0 <sidput@plt+0x5640>
mov    0x4(%esi),%esi
cmp    (%edi),%esi
jne    8053158 <sidput@plt+0x55f8>
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805b6a0 <sidput@plt+0xdb40>
mov    %ebx,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x1c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   80899e0 <dbus_shutdown+0xad00>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,0x90(%edx)
je     805323b <sidput@plt+0x56db>
mov    %esi,0x4(%esp)
movl   $0x10000,(%esp)
call   8089aa0 <dbus_shutdown+0xadc0>
test   %eax,%eax
jne    80530cc <sidput@plt+0x556c>
mov    0x34(%esp),%eax
movl   $0x809eda2,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
jmp    80530cc <sidput@plt+0x556c>
mov    0x34(%esp),%eax
movl   $0x809eda2,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,0xc(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
jmp    80530cc <sidput@plt+0x556c>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
movl   $0x80b830c,(%esp)
mov    0x80(%esp),%esi
call   80767d0 <dbus_server_allocate_data_slot>
test   %eax,%eax
je     8053738 <sidput@plt+0x5bd8>
movl   $0x9c,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     8053690 <sidput@plt+0x5b30>
movl   $0x1,(%eax)
lea    0x4(%eax),%eax
mov    %eax,(%esp)
call   807cf70 <dbus_watch_handle+0x13b0>
lea    0x14(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8053690 <sidput@plt+0x5b30>
call   8087e50 <dbus_shutdown+0x9170>
test   %eax,%eax
mov    %eax,0x30(%ebx)
je     8053690 <sidput@plt+0x5b30>
movl   $0x1,0x98(%ebx)
00
mov    %ebx,(%esp)
call   8060b90 <sidput@plt+0x13030>
test   %eax,%eax
mov    %eax,0x40(%ebx)
je     8053690 <sidput@plt+0x5b30>
mov    0x94(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8063ec0 <sidput@plt+0x16360>
test   %eax,%eax
mov    %eax,%ebp
je     8053729 <sidput@plt+0x5bc9>
call   8089c50 <dbus_shutdown+0xaf70>
testb  $0x10,0x84(%esp)
je     8053768 <sidput@plt+0x5c08>
orb    $0x10,0x94(%ebx)
xor    %esi,%esi
testb  $0x8,0x84(%esp)
jne    8053778 <sidput@plt+0x5c18>
mov    %esi,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x24(%ebx)
mov    %ebp,(%esp)
call   8057ec0 <sidput@plt+0xa360>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x18(%ebx)
mov    %ebp,(%esp)
call   8057ec0 <sidput@plt+0xa360>
test   %eax,%eax
je     8053389 <sidput@plt+0x5829>
mov    0x18(%ebx),%eax
test   %eax,%eax
je     80536f8 <sidput@plt+0x5b98>
mov    %ebp,(%esp)
call   8057eb0 <sidput@plt+0xa350>
test   %eax,%eax
je     80533a8 <sidput@plt+0x5848>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x28(%ebx)
je     80536f8 <sidput@plt+0x5b98>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80536f8 <sidput@plt+0x5b98>
mov    0x18(%ebx),%eax
test   %eax,%eax
je     80533eb <sidput@plt+0x588b>
mov    $0x8099f7c,%edi
mov    $0x7,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80536db <sidput@plt+0x5b7b>
mov    $0x8099f85,%edi
mov    $0x8,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     80537ec <sidput@plt+0x5c8c>
lea    0x2c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     80536f8 <sidput@plt+0x5b98>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   8057ee0 <sidput@plt+0xa380>
mov    %eax,(%esp)
mov    %eax,%edi
call   807db40 <dbus_watch_handle+0x1f80>
test   %eax,%eax
jg     80538d1 <sidput@plt+0x5d71>
xor    %esi,%esi
mov    0x90(%esp),%eax
test   %eax,%eax
je     8053a38 <sidput@plt+0x5ed8>
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8075ca0 <dbus_server_listen>
test   %eax,%eax
mov    %eax,%edi
je     80537df <sidput@plt+0x5c7f>
mov    0x94(%esp),%eax
mov    %esi,%ecx
mov    %edi,%edx
mov    %eax,(%esp)
mov    %ebx,%eax
call   8052a90 <sidput@plt+0x4f30>
test   %eax,%eax
je     80537df <sidput@plt+0x5c7f>
lea    0x34(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     80536fa <sidput@plt+0x5b9a>
mov    %ebp,(%esp)
call   8057f10 <sidput@plt+0xa3b0>
movzbl 0x94(%ebx),%edx
and    $0xfffffffe,%edx
and    $0x1,%eax
or     %eax,%edx
mov    %dl,0x94(%ebx)
mov    %ebp,(%esp)
call   8057f20 <sidput@plt+0xa3c0>
mov    %eax,%edx
movzbl 0x94(%ebx),%eax
and    $0x1,%edx
add    %edx,%edx
and    $0xfffffffd,%eax
or     %edx,%eax
mov    %al,0x94(%ebx)
mov    %ebp,(%esp)
call   8057f40 <sidput@plt+0xa3e0>
mov    %eax,%edx
movzbl 0x94(%ebx),%eax
and    $0x1,%edx
shl    $0x2,%edx
and    $0xfffffffb,%eax
or     %edx,%eax
mov    %al,0x94(%ebx)
mov    %ebp,(%esp)
call   8057f60 <sidput@plt+0xa400>
mov    %eax,%edx
movzbl 0x94(%ebx),%eax
and    $0x1,%edx
shl    $0x3,%edx
and    $0xfffffff7,%eax
or     %edx,%eax
mov    %al,0x94(%ebx)
mov    %esi,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0x94(%esp),%eax
xor    %ecx,%ecx
mov    %ebp,%edx
mov    %eax,(%esp)
mov    %ebx,%eax
call   8052860 <sidput@plt+0x4d00>
test   %eax,%eax
je     8053721 <sidput@plt+0x5bc1>
movl   $0x80b830c,(%esp)
call   80767d0 <dbus_server_allocate_data_slot>
mov    0x88(%esp),%eax
test   %eax,%eax
je     805356c <sidput@plt+0x5a0c>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   807ef40 <dbus_shutdown+0x260>
test   %eax,%eax
jne    805385e <sidput@plt+0x5cfe>
mov    %ebx,(%esp)
call   80587d0 <sidput@plt+0xac70>
test   %eax,%eax
mov    %eax,0x38(%ebx)
je     80538ad <sidput@plt+0x5d4d>
call   80634c0 <sidput@plt+0x15960>
test   %eax,%eax
mov    %eax,0x48(%ebx)
je     80538ad <sidput@plt+0x5d4d>
mov    0x28(%ebx),%eax
test   %eax,%eax
je     80535a6 <sidput@plt+0x5a46>
mov    %eax,(%esp)
call   8089810 <dbus_shutdown+0xab30>
test   %eax,%eax
je     8053958 <sidput@plt+0x5df8>
mov    0x24(%ebx),%eax
test   %eax,%eax
je     80535bd <sidput@plt+0x5a5d>
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
testb  $0x4,0x84(%esp)
jne    80535d2 <sidput@plt+0x5a72>
movzbl 0x94(%ebx),%eax
test   $0x1,%al
jne    80535e9 <sidput@plt+0x5a89>
mov    0x84(%esp),%esi
and    $0x2,%esi
je     80539f8 <sidput@plt+0x5e98>
movzbl 0x94(%ebx),%eax
shr    $0x2,%al
mov    0x24(%ebx),%edi
mov    %eax,%edx
xor    %eax,%eax
and    $0x1,%edx
mov    %edx,0xc(%esp)
mov    0x94(%esp),%edx
lea    0x40(%esp),%ecx
test   %edi,%edi
cmovne %ecx,%eax
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    0x8c(%esp),%edx
mov    %edx,0x4(%esp)
call   8089670 <dbus_shutdown+0xa990>
test   %eax,%eax
je     8053721 <sidput@plt+0x5bc1>
mov    0x8c(%esp),%esi
test   %esi,%esi
je     805364b <sidput@plt+0x5aeb>
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
call   807ef40 <dbus_shutdown+0x260>
test   %eax,%eax
jne    8053b27 <sidput@plt+0x5fc7>
call   805fe10 <sidput@plt+0x122b0>
test   %eax,%eax
je     8053ad6 <sidput@plt+0x5f76>
call   80515c0 <sidput@plt+0x3a60>
test   %eax,%eax
nop
jne    8053983 <sidput@plt+0x5e23>
mov    0x94(%esp),%eax
movl   $0x8096f2c,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8053721 <sidput@plt+0x5bc1>
lea    0x0(%esi),%esi
mov    0x94(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
test   %ebx,%ebx
jne    8053729 <sidput@plt+0x5bc9>
mov    0x80b830c,%edx
xor    %eax,%eax
test   %edx,%edx
js     80536d3 <sidput@plt+0x5b73>
movl   $0x80b830c,(%esp)
mov    %eax,0x20(%esp)
call   8076810 <dbus_server_free_data_slot>
mov    0x20(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x40(%esp),%eax
movl   $0x80971c5,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    80533eb <sidput@plt+0x588b>
nop
xor    %esi,%esi
mov    0x94(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807ec20 <dbus_free_string_array>
mov    %ebp,(%esp)
call   8056440 <sidput@plt+0x88e0>
mov    %ebx,(%esp)
call   8052c60 <sidput@plt+0x5100>
jmp    80536b3 <sidput@plt+0x5b53>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x94(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
andb   $0xef,0x94(%ebx)
jmp    8053344 <sidput@plt+0x57e4>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8057f80 <sidput@plt+0xa420>
test   %eax,%eax
mov    %eax,%esi
je     8053354 <sidput@plt+0x57f4>
lea    0x30(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
lea    0x40(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8089f00 <dbus_shutdown+0xb220>
test   %eax,%eax
je     8053354 <sidput@plt+0x57f4>
mov    0x94(%esp),%eax
mov    %esi,0xc(%esp)
xor    %esi,%esi
movl   $0x8096e34,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   807ec20 <dbus_free_string_array>
jmp    8053721 <sidput@plt+0x5bc1>
lea    0x0(%esi,%eiz,1),%esi
call   806a4e0 <dbus_connection_get_outgoing_unix_fds+0x140>
test   %eax,%eax
mov    %eax,%esi
je     80536f8 <sidput@plt+0x5b98>
lea    0x40(%esp),%eax
movl   $0x80971cf,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805393c <sidput@plt+0x5ddc>
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806aa30 <dbus_connection_get_outgoing_unix_fds+0x690>
test   %eax,%eax
je     805393c <sidput@plt+0x5ddc>
lea    0x40(%esp),%eax
movl   $0x80971cc,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
mov    %esi,(%esp)
test   %eax,%eax
jne    8053b1d <sidput@plt+0x5fbd>
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
xor    %esi,%esi
jmp    80536fa <sidput@plt+0x5b9a>
lea    0x40(%esp),%eax
mov    0x20(%ebx),%esi
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80538ad <sidput@plt+0x5d4d>
lea    0x40(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80538a1 <sidput@plt+0x5d41>
lea    0x40(%esp),%eax
movl   $0x80a05b2,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    8053b67 <sidput@plt+0x6007>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x94(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8053721 <sidput@plt+0x5bc1>
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     80536f8 <sidput@plt+0x5b98>
mov    %edi,(%esp)
mov    %edi,0x24(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     805342e <sidput@plt+0x58ce>
mov    %ebx,0x20(%esp)
mov    0x24(%esp),%edi
mov    %esi,%ebx
mov    %esi,0x24(%esp)
mov    %eax,%esi
jmp    8053917 <sidput@plt+0x5db7>
add    $0x4,%ebx
test   %esi,%esi
je     805392f <sidput@plt+0x5dcf>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,(%ebx)
je     805394b <sidput@plt+0x5deb>
mov    0x4(%esi),%esi
cmp    (%edi),%esi
jne    8053910 <sidput@plt+0x5db0>
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
jmp    805342e <sidput@plt+0x58ce>
mov    %esi,(%esp)
xor    %esi,%esi
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
jmp    80536fa <sidput@plt+0x5b9a>
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
jmp    80536fa <sidput@plt+0x5b9a>
mov    0x28(%ebx),%eax
movl   $0x8096ebc,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8053721 <sidput@plt+0x5bc1>
call   80516d0 <sidput@plt+0x3b70>
test   %eax,%eax
lea    0x0(%esi),%esi
jne    8053af3 <sidput@plt+0x5f93>
mov    0x94(%esp),%ecx
mov    %ebp,%edx
mov    %ebx,%eax
call   8053080 <sidput@plt+0x5520>
test   %eax,%eax
je     8053721 <sidput@plt+0x5bc1>
mov    %ebp,(%esp)
call   8056440 <sidput@plt+0x88e0>
mov    0x28(%ebx),%eax
test   %eax,%eax
je     80539e5 <sidput@plt+0x5e85>
mov    0x94(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8089860 <dbus_shutdown+0xab80>
test   %eax,%eax
je     8053729 <sidput@plt+0x5bc9>
call   805fda0 <sidput@plt+0x12240>
lea    0x0(%esi),%esi
call   80514c0 <sidput@plt+0x3960>
movl   $0x80b830c,(%esp)
call   8076810 <dbus_server_free_data_slot>
mov    %ebx,%eax
jmp    80536d3 <sidput@plt+0x5b73>
call   8081ab0 <dbus_shutdown+0x2dd0>
mov    0x24(%ebx),%ecx
test   %ecx,%ecx
lea    0x40(%esp),%ecx
cmovne %ecx,%esi
mov    0x94(%esp),%ecx
mov    %eax,0x8(%esp)
mov    0x8c(%esp),%eax
mov    %esi,(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
call   8089380 <dbus_shutdown+0xa6a0>
test   %eax,%eax
je     8053721 <sidput@plt+0x5bc1>
jmp    8053629 <sidput@plt+0x5ac9>
mov    %ebp,(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
call   8057ed0 <sidput@plt+0xa370>
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%edi
je     8053497 <sidput@plt+0x5937>
mov    %ebp,0x2c(%esp)
mov    0x94(%esp),%ebp
lea    0x34(%ebx),%eax
mov    %eax,0x28(%esp)
mov    %ebx,0x20(%esp)
mov    %ebp,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   8075ca0 <dbus_server_listen>
test   %eax,%eax
mov    %eax,%ebx
je     8053b5a <sidput@plt+0x5ffa>
mov    %eax,%edx
mov    0x20(%esp),%eax
mov    %esi,%ecx
mov    %ebp,(%esp)
call   8052a90 <sidput@plt+0x4f30>
test   %eax,%eax
je     8053b5a <sidput@plt+0x5ffa>
mov    0x28(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8053bea <sidput@plt+0x608a>
mov    0x24(%esp),%eax
mov    0x4(%edi),%edi
cmp    (%eax),%edi
je     8053ac9 <sidput@plt+0x5f69>
test   %edi,%edi
jne    8053a71 <sidput@plt+0x5f11>
mov    0x20(%esp),%ebx
mov    0x2c(%esp),%ebp
jmp    8053497 <sidput@plt+0x5937>
movl   $0x8096ee8,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   8052f80 <sidput@plt+0x5420>
jmp    8053658 <sidput@plt+0x5af8>
testb  $0x2,0x94(%ebx)
je     8053996 <sidput@plt+0x5e36>
movl   $0x8096f70,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   8052f80 <sidput@plt+0x5420>
jmp    8053996 <sidput@plt+0x5e36>
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
jmp    80533eb <sidput@plt+0x588b>
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
call   807ef50 <dbus_shutdown+0x270>
test   %eax,%eax
jne    805364b <sidput@plt+0x5aeb>
mov    0x8c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80814b0 <dbus_shutdown+0x27d0>
jmp    805364b <sidput@plt+0x5aeb>
mov    0x20(%esp),%ebx
mov    0x2c(%esp),%ebp
jmp    80537df <sidput@plt+0x5c7f>
mov    0x94(%esp),%eax
mov    0x44(%esp),%esi
movl   $0x0,0x8(%esp)
mov    %eax,0x10(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
call   8081420 <dbus_shutdown+0x2740>
cmp    %esi,%eax
je     8053bf7 <sidput@plt+0x6097>
cmpl   $0x0,0x94(%esp)
je     8053bd9 <sidput@plt+0x6079>
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8053bd9 <sidput@plt+0x6079>
mov    0x94(%esp),%eax
movl   $0x8096e84,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8053721 <sidput@plt+0x5bc1>
mov    0x20(%esp),%ebx
mov    0x2c(%esp),%ebp
jmp    80536fa <sidput@plt+0x5b9a>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   807ef50 <dbus_shutdown+0x270>
test   %eax,%eax
jne    8053c21 <sidput@plt+0x60c1>
mov    0x88(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80814b0 <dbus_shutdown+0x27d0>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    805356c <sidput@plt+0x5a0c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
lea    0x10(%esp),%edi
mov    0x34(%esp),%esi
call   80846b0 <dbus_shutdown+0x59d0>
mov    0x14(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8063ec0 <sidput@plt+0x16360>
test   %eax,%eax
mov    %eax,%edi
je     8053d00 <sidput@plt+0x61a0>
mov    %eax,%edx
mov    $0x1,%ecx
mov    %esi,(%esp)
mov    %ebx,%eax
call   8052860 <sidput@plt+0x4d00>
test   %eax,%eax
jne    8053cd0 <sidput@plt+0x6170>
mov    0x4(%esi),%eax
mov    %ebx,(%esp)
xor    %ebx,%ebx
movl   $0x8096f98,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %edi,(%esp)
call   8056440 <sidput@plt+0x88e0>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,%ecx
mov    %edi,%edx
mov    %ebx,%eax
call   8053080 <sidput@plt+0x5520>
test   %eax,%eax
je     8053c9d <sidput@plt+0x613d>
mov    %ebx,(%esp)
mov    $0x1,%ebx
movl   $0x80971d9,0x8(%esp)
movl   $0x0,0x4(%esp)
call   8052f80 <sidput@plt+0x5420>
jmp    8053cbe <sidput@plt+0x615e>
xchg   %ax,%ax
mov    0x4(%esi),%eax
mov    %ebx,(%esp)
xor    %ebx,%ebx
movl   $0x8096f98,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
call   8052f80 <sidput@plt+0x5420>
add    $0x20,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x48(%esp)
mov    0xa8(%esp),%eax
movl   $0x0,0x68(%esp)
mov    0x94(%esp),%ebx
mov    %ecx,0x44(%esp)
mov    0x98(%esp),%esi
movl   $0x0,0x60(%esp)
test   %eax,%eax
movl   $0x0,0x64(%esp)
movl   $0x0,0x6c(%esp)
movb   $0x1,0x68(%esp)
jne    8053d98 <sidput@plt+0x6238>
mov    0xa4(%esp),%edi
test   %edi,%edi
jne    8053d98 <sidput@plt+0x6238>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %esi,%esi
je     8053ee8 <sidput@plt+0x6388>
mov    %esi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %esi,(%esp)
mov    %eax,0x58(%esp)
call   80591e0 <sidput@plt+0xb680>
mov    %eax,0x5c(%esp)
mov    0x9c(%esp),%ecx
mov    $0x809fdf7,%edx
test   %ecx,%ecx
je     8053dd9 <sidput@plt+0x6279>
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   80591e0 <sidput@plt+0xb680>
mov    %eax,%edx
mov    %ebx,(%esp)
mov    $0x8096b7c,%edi
mov    $0x80971f6,%esi
mov    %edx,0x54(%esp)
call   80721c0 <dbus_message_get_destination>
mov    %ebx,(%esp)
test   %eax,%eax
cmovne %eax,%edi
call   8072050 <dbus_message_get_error_name>
mov    %ebx,(%esp)
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,0x50(%esp)
call   8071e00 <dbus_message_get_member>
mov    %ebx,(%esp)
test   %eax,%eax
cmove  %esi,%eax
mov    %eax,0x4c(%esp)
call   8071c30 <dbus_message_get_interface>
mov    %ebx,(%esp)
test   %eax,%eax
cmovne %eax,%esi
call   806f7e0 <dbus_message_get_type>
mov    %eax,(%esp)
call   80737d0 <dbus_message_type_to_string>
mov    0x50(%esp),%ecx
mov    %edi,0x30(%esp)
mov    0x4c(%esp),%edi
mov    0xa0(%esp),%ebx
mov    0x54(%esp),%edx
mov    %ecx,0x28(%esp)
mov    0x58(%esp),%ecx
mov    %edi,0x24(%esp)
mov    0x5c(%esp),%edi
mov    %eax,0x14(%esp)
mov    0x90(%esp),%eax
mov    %ebx,0x2c(%esp)
lea    0x60(%esp),%ebx
mov    %edx,0x34(%esp)
mov    %esi,0x20(%esp)
mov    %eax,0x10(%esp)
mov    0x44(%esp),%eax
mov    %edi,0x1c(%esp)
mov    %ecx,0x18(%esp)
movl   $0x8096fbc,0x8(%esp)
mov    %eax,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   806b100 <dbus_set_error>
mov    0xa4(%esp),%eax
test   %eax,%eax
je     8053ecc <sidput@plt+0x636c>
mov    0x64(%esp),%eax
movl   $0x809fd72,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    0xa8(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
movl   $0x80971f0,0x5c(%esp)
movl   $0x80971f6,0x58(%esp)
jmp    8053db8 <sidput@plt+0x6258>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x94(%esp),%ebp
mov    %ebp,(%esp)
call   806f7e0 <dbus_message_get_type>
mov    %ebp,(%esp)
mov    %eax,%esi
mov    %eax,0x3c(%esp)
call   8072330 <dbus_message_get_sender>
mov    %ebp,(%esp)
mov    %eax,%edi
call   80721c0 <dbus_message_get_destination>
mov    %eax,%ebx
mov    %esi,%eax
sub    $0x1,%eax
cmp    $0x3,%eax
ja     8054140 <sidput@plt+0x65e0>
mov    0x88(%esp),%eax
test   %eax,%eax
je     80541c8 <sidput@plt+0x6668>
mov    $0x8096b7c,%esi
test   %ebx,%ebx
mov    %esi,%ecx
cmovne %ebx,%ecx
mov    %ebp,(%esp)
mov    %ecx,0x38(%esp)
call   8072050 <dbus_message_get_error_name>
mov    %ebp,(%esp)
mov    %eax,0x34(%esp)
call   8071e00 <dbus_message_get_member>
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
call   8071c30 <dbus_message_get_interface>
mov    %ebp,(%esp)
mov    %eax,0x30(%esp)
call   806f7e0 <dbus_message_get_type>
mov    %eax,(%esp)
call   80737d0 <dbus_message_type_to_string>
mov    0x98(%esp),%edx
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x34(%esp),%edx
mov    %ecx,0x18(%esp)
mov    0x30(%esp),%ecx
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x2c(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   80600f0 <sidput@plt+0x12590>
test   %eax,%eax
jne    8054010 <sidput@plt+0x64b0>
mov    0x98(%esp),%eax
test   %eax,%eax
je     8054000 <sidput@plt+0x64a0>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     8054170 <sidput@plt+0x6610>
xor    %eax,%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %edi,%edi
cmove  %esi,%edi
test   %ebx,%ebx
cmovne %ebx,%esi
mov    %ebp,(%esp)
mov    %edi,0x34(%esp)
mov    %esi,0x30(%esp)
call   8072050 <dbus_message_get_error_name>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   8071e00 <dbus_message_get_member>
mov    %ebp,(%esp)
mov    %eax,%esi
call   8071c30 <dbus_message_get_interface>
mov    %ebp,(%esp)
mov    %eax,0x2c(%esp)
call   8071990 <dbus_message_get_path>
mov    %ebp,(%esp)
mov    %eax,%edi
call   806f7e0 <dbus_message_get_type>
mov    %eax,(%esp)
call   80737d0 <dbus_message_type_to_string>
mov    0x98(%esp),%edx
mov    %ebx,0x1c(%esp)
mov    0x34(%esp),%ecx
mov    0x2c(%esp),%ebx
mov    %esi,0x18(%esp)
mov    %edx,0x28(%esp)
mov    0x30(%esp),%edx
mov    %ecx,0x24(%esp)
mov    %eax,0xc(%esp)
mov    0x80(%esp),%eax
mov    %ebx,0x14(%esp)
mov    %edx,0x20(%esp)
mov    %edi,0x10(%esp)
mov    0x18(%eax),%eax
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   8051ba0 <sidput@plt+0x4040>
test   %eax,%eax
jne    8054350 <sidput@plt+0x67f0>
mov    0x98(%esp),%eax
test   %eax,%eax
je     8054000 <sidput@plt+0x64a0>
mov    0x98(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8054000 <sidput@plt+0x64a0>
mov    0x98(%esp),%eax
mov    $0x80970f8,%ecx
mov    $0x809707c,%edx
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x90(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
call   8053d30 <sidput@plt+0x61d0>
xor    %eax,%eax
jmp    8054002 <sidput@plt+0x64a2>
xchg   %ax,%ax
mov    0x98(%esp),%eax
movl   $0x8097044,0x8(%esp)
movl   $0x809707c,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x98(%esp),%eax
mov    $0x80970a4,%ecx
mov    $0x809707c,%edx
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x90(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
call   8053d30 <sidput@plt+0x61d0>
jmp    8054000 <sidput@plt+0x64a0>
nop
mov    0x90(%esp),%eax
xor    %esi,%esi
xor    %edi,%edi
cmp    %eax,0x8c(%esp)
je     8054652 <sidput@plt+0x6af2>
mov    0x90(%esp),%eax
xor    %ebx,%ebx
test   %eax,%eax
je     8054206 <sidput@plt+0x66a6>
mov    0x90(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
jne    80544b8 <sidput@plt+0x6958>
test   %edi,%edi
movl   $0x0,0x50(%esp)
je     805425f <sidput@plt+0x66ff>
lea    0x50(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x90(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x80(%esp),%eax
mov    0x40(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   805f560 <sidput@plt+0x11a00>
test   %eax,%eax
je     8054588 <sidput@plt+0x6a28>
mov    0x50(%esp),%edi
test   %edi,%edi
jne    8054468 <sidput@plt+0x6908>
test   %ebx,%ebx
je     80542b2 <sidput@plt+0x6752>
lea    0x4c(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x90(%esp),%eax
mov    %ebp,0x18(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x88(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x80(%esp),%eax
mov    0x40(%eax),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   805f7d0 <sidput@plt+0x11c70>
test   %eax,%eax
je     80545f0 <sidput@plt+0x6a90>
mov    0x90(%esp),%ecx
test   %ecx,%ecx
je     80543a8 <sidput@plt+0x6848>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   806a310 <dbus_connection_get_outgoing_size>
mov    0x80(%esp),%edi
cmp    0x54(%edi),%eax
jg     80542fb <sidput@plt+0x679b>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   806a3a0 <dbus_connection_get_outgoing_unix_fds>
mov    0x80(%esp),%edi
cmp    0x58(%edi),%eax
jle    80543a8 <sidput@plt+0x6848>
mov    0x98(%esp),%eax
mov    $0x8097194,%ecx
mov    $0x8096864,%edx
movl   $0x1,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x90(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
call   8053d30 <sidput@plt+0x61d0>
xor    %eax,%eax
jmp    8054002 <sidput@plt+0x64a2>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
jne    80544d0 <sidput@plt+0x6970>
mov    0x90(%esp),%eax
test   %eax,%eax
je     8054438 <sidput@plt+0x68d8>
mov    0x98(%esp),%eax
movl   $0x80971fe,0xc(%esp)
movl   $0x809714c,0x8(%esp)
movl   $0x809707c,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8054002 <sidput@plt+0x64a2>
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x3c(%esp)
jne    8054458 <sidput@plt+0x68f8>
mov    0x88(%esp),%edx
test   %edx,%edx
je     8054458 <sidput@plt+0x68f8>
mov    0x8c(%esp),%eax
test   %eax,%eax
je     8054458 <sidput@plt+0x68f8>
mov    0x90(%esp),%eax
cmp    %eax,0x8c(%esp)
jne    8054458 <sidput@plt+0x68f8>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   80590a0 <sidput@plt+0xb540>
mov    0x98(%esp),%edi
mov    %ebp,0x10(%esp)
mov    %edi,0x14(%esp)
mov    0x8c(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0xc(%esp)
mov    0x88(%esp),%edi
mov    %edi,0x8(%esp)
mov    0x84(%esp),%edi
mov    %edi,0x4(%esp)
call   805a3f0 <sidput@plt+0xc890>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    8054002 <sidput@plt+0x64a2>
lea    0x0(%esi),%esi
movl   $0x80971fe,0x8(%esp)
movl   $0x8096b7c,0x4(%esp)
mov    %ebp,(%esp)
call   8072860 <dbus_message_is_method_call>
test   %eax,%eax
je     8054376 <sidput@plt+0x6816>
mov    $0x1,%eax
jmp    8054002 <sidput@plt+0x64a2>
lea    0x0(%esi),%esi
mov    0x90(%esp),%eax
mov    $0x809721a,%ecx
mov    $0x809707c,%edx
movl   $0x0,0x18(%esp)
movl   $0x1,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   8053d30 <sidput@plt+0x61d0>
jmp    805425f <sidput@plt+0x66ff>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   8058f60 <sidput@plt+0xb400>
mov    %eax,%ebx
jmp    8054206 <sidput@plt+0x66a6>
xchg   %ax,%ax
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   8058f60 <sidput@plt+0xb400>
mov    %ebp,(%esp)
mov    %eax,%edi
call   806f1f0 <dbus_message_get_reply_serial>
test   %eax,%eax
je     80544f8 <sidput@plt+0x6998>
mov    0x90(%esp),%eax
test   %eax,%eax
jne    80544ff <sidput@plt+0x699f>
xor    %esi,%esi
jmp    80541e0 <sidput@plt+0x6680>
mov    0x90(%esp),%eax
cmp    %eax,0x8c(%esp)
jne    80544f8 <sidput@plt+0x6998>
lea    0x50(%esp),%ebx
mov    %ebx,(%esp)
call   806ad70 <dbus_error_init>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   80590a0 <sidput@plt+0xb540>
mov    0x8c(%esp),%esi
mov    %ebx,0x14(%esp)
mov    %ebp,0x10(%esp)
mov    %esi,0xc(%esp)
mov    0x88(%esp),%esi
mov    %eax,(%esp)
mov    %esi,0x8(%esp)
mov    0x84(%esp),%esi
mov    %esi,0x4(%esp)
call   805a630 <sidput@plt+0xcad0>
mov    %ebx,(%esp)
mov    %eax,%esi
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     80541ed <sidput@plt+0x668d>
mov    0x98(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
xor    %eax,%eax
jmp    8054002 <sidput@plt+0x64a2>
nop
mov    0x98(%esp),%eax
mov    $0x8097204,%ecx
mov    $0x809707c,%edx
mov    %esi,0x10(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x90(%esp),%eax
cmp    %eax,0x8c(%esp)
sete   %al
movzbl %al,%eax
mov    %eax,0x14(%esp)
mov    0x90(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   8053d30 <sidput@plt+0x61d0>
xor    %eax,%eax
jmp    8054002 <sidput@plt+0x64a2>
lea    0x0(%esi),%esi
mov    0x90(%esp),%eax
mov    $0x809722f,%ecx
mov    $0x809707c,%edx
cmp    %eax,0x8c(%esp)
movl   $0x0,0x18(%esp)
mov    %esi,0x10(%esp)
sete   %al
movzbl %al,%eax
mov    %eax,0x14(%esp)
mov    0x90(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   8053d30 <sidput@plt+0x61d0>
xor    %eax,%eax
jmp    8054002 <sidput@plt+0x64a2>
mov    %ebp,(%esp)
call   806f1f0 <dbus_message_get_reply_serial>
mov    0x88(%esp),%edi
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
jmp    80541e0 <sidput@plt+0x6680>
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x38(%esi),%eax
mov    %eax,(%esp)
call   805a750 <sidput@plt+0xcbf0>
cmp    0x74(%esi),%eax
setl   %al
movzbl %al,%eax
cmp    %eax,0x98(%esi)
mov    %eax,%edi
je     80546cb <sidput@plt+0x6b6b>
mov    %eax,0x98(%esi)
lea    0x34(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     80546cb <sidput@plt+0x6b6b>
mov    %edi,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80759a0 <dbus_pending_call_get_data+0x450>
mov    0x4(%ebx),%ebx
cmp    0x34(%esi),%ebx
jne    80546b0 <sidput@plt+0x6b50>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
movl   $0x10,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     8054720 <sidput@plt+0x6bc0>
add    $0x14,%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8054728 <sidput@plt+0x6bc8>
mov    %edi,(%ebx)
mov    %ebx,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8054713 <sidput@plt+0x6bb3>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8054713 <sidput@plt+0x6bb3>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xfc,%esp
mov    0x128(%esp),%eax
mov    0x124(%esp),%edx
movl   $0x0,(%eax)
mov    0x130(%esp),%ecx
mov    %eax,0x34(%esp)
mov    0x12c(%esp),%eax
mov    %edx,0x30(%esp)
test   %eax,%eax
je     80548ba <sidput@plt+0x6d5a>
lea    0x134(%esp),%ebx
mov    $0x1,%esi
lea    0x30(%esp),%edi
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%edi,%esi,8)
add    $0x8,%ebx
movl   $0x0,(%ecx)
mov    -0x8(%ebx),%eax
mov    %ecx,0x4(%edi,%esi,8)
add    $0x1,%esi
mov    -0x4(%ebx),%ecx
test   %eax,%eax
jne    8054790 <sidput@plt+0x6c30>
mov    0x118(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8054859 <sidput@plt+0x6cf9>
mov    0x118(%esp),%edx
xor    %ebp,%ebp
lea    0x30(%esp),%edi
mov    %esi,0x20(%esp)
add    $0x4,%edx
mov    %edx,0x2c(%esp)
mov    0x118(%esp),%edx
mov    %edx,0x24(%esp)
xor    %ebx,%ebx
movl   $0x0,0x28(%esp)
mov    %ebx,%esi
jmp    80547f6 <sidput@plt+0x6c96>
nop
mov    0x24(%esp),%eax
mov    (%eax),%eax
mov    (%edi,%esi,8),%ebx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8054827 <sidput@plt+0x6cc7>
mov    0x4(%edi,%esi,8),%eax
mov    (%eax),%edx
test   %edx,%edx
jne    8054860 <sidput@plt+0x6d00>
mov    0x11c(%esp),%edx
movl   $0x1,0x28(%esp)
mov    (%edx,%ebp,1),%ecx
mov    %ecx,(%eax)
add    $0x1,%esi
cmp    0x20(%esp),%esi
jl     80547f0 <sidput@plt+0x6c90>
mov    0x28(%esp),%eax
test   %eax,%eax
je     805489b <sidput@plt+0x6d3b>
mov    0x2c(%esp),%eax
addl   $0x4,0x2c(%esp)
mov    %eax,%ebp
mov    %eax,0x24(%esp)
mov    0x2c(%esp),%eax
sub    0x118(%esp),%ebp
mov    -0x4(%eax),%eax
test   %eax,%eax
jne    80547e1 <sidput@plt+0x6c81>
mov    $0x1,%eax
jmp    8054890 <sidput@plt+0x6d30>
mov    0x114(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8097248,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x120(%esp),%eax
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0xfc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x114(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    (%eax),%eax
movl   $0x8097280,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    8054877 <sidput@plt+0x6d17>
mov    $0x1,%esi
jmp    80547ad <sidput@plt+0x6c4d>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x16c,%esp
lea    0xfc(%esp),%eax
mov    0x188(%esp),%ebp
mov    %eax,0xb0(%esp)
lea    0x148(%esp),%eax
mov    %eax,0xa8(%esp)
lea    0x144(%esp),%eax
mov    %eax,0xa0(%esp)
lea    0x140(%esp),%eax
mov    %eax,0x98(%esp)
lea    0x13c(%esp),%eax
mov    %eax,0x90(%esp)
lea    0x138(%esp),%eax
mov    %eax,0x88(%esp)
lea    0x134(%esp),%eax
mov    %eax,0x80(%esp)
lea    0x130(%esp),%eax
mov    %eax,0x78(%esp)
lea    0x12c(%esp),%eax
mov    %eax,0x70(%esp)
lea    0x128(%esp),%eax
mov    %eax,0x68(%esp)
lea    0x124(%esp),%eax
mov    %eax,0x60(%esp)
lea    0x120(%esp),%eax
mov    %eax,0x58(%esp)
lea    0x11c(%esp),%eax
mov    %eax,0x50(%esp)
lea    0x118(%esp),%eax
movl   $0x0,0xb4(%esp)
00
movl   $0x8097c6f,0xac(%esp)
08
movl   $0x8097b60,0xa4(%esp)
08
movl   $0x8097e99,0x9c(%esp)
08
movl   $0x8097b66,0x94(%esp)
08
movl   $0x809be4b,0x8c(%esp)
08
movl   $0x8097b71,0x84(%esp)
08
movl   $0x8097b89,0x7c(%esp)
movl   $0x8096ca6,0x74(%esp)
movl   $0x8097b9e,0x6c(%esp)
movl   $0x8097bab,0x64(%esp)
movl   $0x8097bb8,0x5c(%esp)
movl   $0x8097bc7,0x54(%esp)
movl   $0x8097bd5,0x4c(%esp)
mov    %eax,0x48(%esp)
lea    0x114(%esp),%eax
mov    %eax,0x40(%esp)
lea    0x110(%esp),%eax
mov    %eax,0x38(%esp)
lea    0x10c(%esp),%eax
mov    %eax,0x30(%esp)
lea    0x108(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x104(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x100(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x180(%esp),%eax
movl   $0x8097be4,0x44(%esp)
movl   $0x8097bf6,0x3c(%esp)
movl   $0x8097c00,0x34(%esp)
movl   $0x8097c0a,0x2c(%esp)
movl   $0x8097c1b,0x24(%esp)
movl   $0x8097c26,0x1c(%esp)
movl   $0x8097c32,0x14(%esp)
mov    %ebp,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   8054740 <sidput@plt+0x6be0>
test   %eax,%eax
je     8054bb0 <sidput@plt+0x7050>
mov    0x100(%esp),%eax
mov    0x104(%esp),%edi
test   %eax,%eax
mov    %edi,0xc4(%esp)
je     8055248 <sidput@plt+0x76e8>
mov    0x11c(%esp),%edx
test   %edx,%edx
je     8054af1 <sidput@plt+0x6f91>
mov    0x118(%esp),%ecx
test   %ecx,%ecx
je     8055210 <sidput@plt+0x76b0>
test   %eax,%eax
je     8055260 <sidput@plt+0x7700>
mov    0x108(%esp),%ecx
test   %ecx,%ecx
je     8054be0 <sidput@plt+0x7080>
mov    %ebx,0xc(%esp)
movl   $0x809737c,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x16c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x148(%esp),%eax
test   %eax,%eax
je     80558ce <sidput@plt+0x7d6e>
cmpb   $0x2a,(%eax)
je     8055c11 <sidput@plt+0x80b1>
lea    0x150(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
lea    0x14c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   808a220 <dbus_shutdown+0xb540>
test   %eax,%eax
je     8055bf1 <sidput@plt+0x8091>
mov    0x184(%esp),%eax
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
call   805ece0 <sidput@plt+0x11180>
test   %eax,%eax
mov    %eax,%edi
jne    80558bc <sidput@plt+0x7d5c>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebp,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
add    $0x16c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x0,0x120(%esp)
je     8055355 <sidput@plt+0x77f5>
mov    0x11c(%esp),%edx
mov    0x108(%esp),%ecx
test   %ecx,%ecx
je     8054c5b <sidput@plt+0x70fb>
lea    0x0(%esi),%esi
mov    0x118(%esp),%edi
test   %edi,%edi
jne    8054b08 <sidput@plt+0x6fa8>
test   %edx,%edx
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x120(%esp),%edi
test   %edi,%edi
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x124(%esp),%edi
test   %edi,%edi
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x138(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x13c(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x140(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x144(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x10c(%esp),%edi
test   %edi,%edi
mov    %edi,0xd0(%esp)
je     8054ce6 <sidput@plt+0x7186>
mov    0x118(%esp),%edi
test   %edi,%edi
jne    8054b08 <sidput@plt+0x6fa8>
test   %edx,%edx
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x120(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x124(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x138(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x13c(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x140(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x144(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x114(%esp),%edi
test   %edi,%edi
mov    %edi,0xd4(%esp)
je     8054d70 <sidput@plt+0x7210>
cmpl   $0x0,0x118(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
test   %edx,%edx
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x120(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x124(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x138(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x13c(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x140(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x144(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x110(%esp),%edi
test   %edi,%edi
mov    %edi,0xe0(%esp)
je     8054dfa <sidput@plt+0x729a>
cmpl   $0x0,0x118(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
test   %edx,%edx
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x120(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x124(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x138(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x13c(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x140(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x144(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x134(%esp),%edi
mov    %edi,0xe8(%esp)
test   %edi,%edi
mov    0x118(%esp),%edi
mov    %edi,0xdc(%esp)
je     80552d7 <sidput@plt+0x7777>
test   %edi,%edi
jne    8054b08 <sidput@plt+0x6fa8>
test   %edx,%edx
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x120(%esp),%edi
test   %edi,%edi
mov    %edi,0xcc(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x124(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x138(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x13c(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x140(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x144(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x130(%esp),%edi
test   %edi,%edi
mov    %edi,0xc8(%esp)
je     8054ee2 <sidput@plt+0x7382>
cmpl   $0x0,0x13c(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x140(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x144(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x138(%esp),%edi
test   %edi,%edi
mov    %edi,0xec(%esp)
je     80558d8 <sidput@plt+0x7d78>
cmpl   $0x0,0x13c(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x140(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x144(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x144(%esp),%edi
test   %edi,%edi
je     8054f49 <sidput@plt+0x73e9>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
movl   $0x0,0xd8(%esp)
00
movl   $0x0,0xe4(%esp)
00
test   %eax,%eax
je     805541e <sidput@plt+0x78be>
cmpb   $0x2a,(%eax)
je     8055404 <sidput@plt+0x78a4>
cmpl   $0x0,0xc4(%esp)
je     8054f8a <sidput@plt+0x742a>
mov    0xc4(%esp),%eax
cmpb   $0x2a,(%eax)
je     8055926 <sidput@plt+0x7dc6>
test   %ecx,%ecx
je     8054f97 <sidput@plt+0x7437>
cmpb   $0x2a,(%ecx)
je     8055a67 <sidput@plt+0x7f07>
mov    0xd0(%esp),%eax
test   %eax,%eax
je     8054fab <sidput@plt+0x744b>
cmpb   $0x2a,(%eax)
je     8055a86 <sidput@plt+0x7f26>
mov    0xe0(%esp),%eax
test   %eax,%eax
je     8054fbf <sidput@plt+0x745f>
cmpb   $0x2a,(%eax)
je     8055aa0 <sidput@plt+0x7f40>
mov    0xd4(%esp),%eax
test   %eax,%eax
je     8055af7 <sidput@plt+0x7f97>
cmpb   $0x2a,(%eax)
je     8055ad2 <sidput@plt+0x7f72>
mov    0xd4(%esp),%eax
mov    %eax,(%esp)
call   8073730 <dbus_message_type_from_string>
test   %eax,%eax
mov    %eax,0xc4(%esp)
je     8055b07 <sidput@plt+0x7fa7>
mov    0x130(%esp),%eax
mov    %eax,0xc8(%esp)
mov    0xc8(%esp),%eax
test   %eax,%eax
je     8055041 <sidput@plt+0x74e1>
movl   $0x8097c57,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     8055041 <sidput@plt+0x74e1>
mov    0xc8(%esp),%eax
movl   $0x8097c5c,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8055aba <sidput@plt+0x7f5a>
mov    0x134(%esp),%edi
test   %edi,%edi
je     8055078 <sidput@plt+0x7518>
movl   $0x8097c57,0x4(%esp)
mov    %edi,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     8055078 <sidput@plt+0x7518>
movl   $0x8097c5c,0x4(%esp)
mov    %edi,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8055b13 <sidput@plt+0x7fb3>
mov    0x184(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   805ece0 <sidput@plt+0x11180>
test   %eax,%eax
mov    %eax,%edi
je     8054b98 <sidput@plt+0x7038>
mov    0x130(%esp),%eax
test   %eax,%eax
je     80550c5 <sidput@plt+0x7565>
movl   $0x8097c57,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
movzbl 0x24(%edi),%eax
sete   %dl
and    $0xfffffffe,%eax
or     %edx,%eax
mov    %al,0x24(%edi)
mov    0xfc(%esp),%eax
test   %eax,%eax
je     80550f4 <sidput@plt+0x7594>
movl   $0x8097c57,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
movzbl 0x24(%edi),%eax
sete   %dl
shl    $0x2,%edx
and    $0xfffffffb,%eax
or     %edx,%eax
mov    %al,0x24(%edi)
mov    0x134(%esp),%eax
test   %eax,%eax
je     8055122 <sidput@plt+0x75c2>
movl   $0x8097c57,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
movzbl 0x24(%edi),%eax
sete   %dl
add    %edx,%edx
and    $0xfffffffd,%eax
or     %edx,%eax
mov    %al,0x24(%edi)
mov    0xc4(%esp),%eax
mov    %eax,0xc(%edi)
mov    0x110(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x10(%edi)
mov    0x100(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x14(%edi)
mov    0x104(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x18(%edi)
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x1c(%edi)
mov    0x10c(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
cmpl   $0x0,0x110(%esp)
mov    %eax,0x20(%edi)
je     805519a <sidput@plt+0x763a>
cmpl   $0x0,0x10(%edi)
je     8055a13 <sidput@plt+0x7eb3>
cmpl   $0x0,0x100(%esp)
je     80551ae <sidput@plt+0x764e>
cmpl   $0x0,0x14(%edi)
je     8055a13 <sidput@plt+0x7eb3>
cmpl   $0x0,0x104(%esp)
je     80551c2 <sidput@plt+0x7662>
cmpl   $0x0,0x18(%edi)
je     8055a13 <sidput@plt+0x7eb3>
cmpl   $0x0,0x108(%esp)
je     80551d6 <sidput@plt+0x7676>
cmpl   $0x0,0x1c(%edi)
je     8055a13 <sidput@plt+0x7eb3>
cmpl   $0x0,0x10c(%esp)
je     80551e8 <sidput@plt+0x7688>
test   %eax,%eax
je     8055a13 <sidput@plt+0x7eb3>
lea    0x14(%esi),%eax
mov    %eax,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
mov    0x8(%eax),%edx
sub    $0x1,%edx
cmp    $0x4,%edx
ja     8055b3b <sidput@plt+0x7fdb>
jmp    *0x8097ef0(,%edx,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x128(%esp),%edi
test   %edi,%edi
jne    8054af1 <sidput@plt+0x6f91>
mov    %ebx,0xc(%esp)
movl   $0x80972ec,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8054b26 <sidput@plt+0x6fc6>
lea    0x0(%esi),%esi
test   %edi,%edi
je     8055275 <sidput@plt+0x7715>
mov    0x110(%esp),%edx
test   %edx,%edx
jne    8054ad7 <sidput@plt+0x6f77>
jmp    805521f <sidput@plt+0x76bf>
lea    0x0(%esi),%esi
mov    0xc4(%esp),%ecx
test   %ecx,%ecx
jne    8054af9 <sidput@plt+0x6f99>
nop
jmp    8054bd2 <sidput@plt+0x7072>
mov    0x108(%esp),%edx
test   %edx,%edx
jne    8054ad7 <sidput@plt+0x6f77>
mov    0x10c(%esp),%edi
test   %edi,%edi
jne    8054ad7 <sidput@plt+0x6f77>
cmpl   $0x0,0x114(%esp)
jne    8054ad7 <sidput@plt+0x6f77>
cmpl   $0x0,0x110(%esp)
jne    8054ad7 <sidput@plt+0x6f77>
cmpl   $0x0,0x118(%esp)
jne    8054ad7 <sidput@plt+0x6f77>
cmpl   $0x0,0x11c(%esp)
je     8054bbd <sidput@plt+0x705d>
mov    0x11c(%esp),%edx
jmp    8054ae2 <sidput@plt+0x6f82>
test   %edi,%edi
je     8055321 <sidput@plt+0x77c1>
cmpl   $0x0,0x120(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x13c(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x140(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x144(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x120(%esp),%edi
test   %edx,%edx
mov    %edi,0xcc(%esp)
je     8055340 <sidput@plt+0x77e0>
test   %edi,%edi
jne    8054b08 <sidput@plt+0x6fa8>
jmp    8054e60 <sidput@plt+0x7300>
test   %edi,%edi
jne    8054e60 <sidput@plt+0x7300>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    8054e98 <sidput@plt+0x7338>
cmpl   $0x0,0x124(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x12c(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x128(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x130(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x134(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x138(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x13c(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x140(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x144(%esp)
jne    8054bcb <sidput@plt+0x706b>
cmpl   $0x0,0x148(%esp)
jne    8054bcb <sidput@plt+0x706b>
mov    %ebx,0xc(%esp)
movl   $0x80972bc,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8054b26 <sidput@plt+0x6fc6>
cmpb   $0x0,0x1(%eax)
jne    8054f70 <sidput@plt+0x7410>
movl   $0x0,0x100(%esp)
00
jmp    8054f70 <sidput@plt+0x7410>
cmpl   $0x0,0xc4(%esp)
jne    8054f7a <sidput@plt+0x741a>
test   %ecx,%ecx
jne    8054f8e <sidput@plt+0x742e>
cmpl   $0x0,0xd0(%esp)
jne    8054f97 <sidput@plt+0x7437>
cmpl   $0x0,0xe0(%esp)
jne    8054fab <sidput@plt+0x744b>
cmpl   $0x0,0xd4(%esp)
jne    8054fbf <sidput@plt+0x745f>
cmpl   $0x0,0xe8(%esp)
jne    8054fbf <sidput@plt+0x745f>
cmpl   $0x0,0xdc(%esp)
je     8055747 <sidput@plt+0x7be7>
mov    0xdc(%esp),%eax
cmpb   $0x2a,(%eax)
je     8055947 <sidput@plt+0x7de7>
test   %edx,%edx
je     8055497 <sidput@plt+0x7937>
cmpb   $0x2a,(%edx)
je     8055804 <sidput@plt+0x7ca4>
cmpl   $0x0,0xcc(%esp)
je     80554b1 <sidput@plt+0x7951>
mov    0xcc(%esp),%eax
cmpb   $0x2a,(%eax)
je     8055961 <sidput@plt+0x7e01>
mov    0x124(%esp),%eax
test   %eax,%eax
je     80554c5 <sidput@plt+0x7965>
cmpb   $0x2a,(%eax)
je     805597b <sidput@plt+0x7e1b>
mov    0x128(%esp),%eax
test   %eax,%eax
je     80554d9 <sidput@plt+0x7979>
cmpb   $0x2a,(%eax)
je     8055995 <sidput@plt+0x7e35>
mov    0x12c(%esp),%eax
test   %eax,%eax
je     80556e2 <sidput@plt+0x7b82>
cmpb   $0x2a,(%eax)
je     80556cd <sidput@plt+0x7b6d>
mov    %eax,(%esp)
call   8073730 <dbus_message_type_from_string>
test   %eax,%eax
mov    %eax,0xc4(%esp)
je     80556f2 <sidput@plt+0x7b92>
mov    0x130(%esp),%eax
mov    %eax,0xc8(%esp)
mov    0xc8(%esp),%eax
test   %eax,%eax
je     8055554 <sidput@plt+0x79f4>
movl   $0x8097c57,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     8055554 <sidput@plt+0x79f4>
mov    0xc8(%esp),%eax
movl   $0x8097c5c,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8055aba <sidput@plt+0x7f5a>
mov    0x138(%esp),%edi
test   %edi,%edi
je     805558b <sidput@plt+0x7a2b>
movl   $0x8097c57,0x4(%esp)
mov    %edi,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     805558b <sidput@plt+0x7a2b>
movl   $0x8097c5c,0x4(%esp)
mov    %edi,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805571c <sidput@plt+0x7bbc>
mov    0x184(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   805ece0 <sidput@plt+0x11180>
test   %eax,%eax
mov    %eax,%edi
je     8054b98 <sidput@plt+0x7038>
mov    0x130(%esp),%eax
test   %eax,%eax
je     80555d8 <sidput@plt+0x7a78>
movl   $0x8097c57,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
movzbl 0x24(%edi),%eax
sete   %dl
and    $0xfffffffe,%eax
or     %edx,%eax
mov    %al,0x24(%edi)
mov    0x138(%esp),%eax
test   %eax,%eax
je     8055606 <sidput@plt+0x7aa6>
movl   $0x8097c57,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
movzbl 0x24(%edi),%eax
sete   %dl
add    %edx,%edx
and    $0xfffffffd,%eax
or     %edx,%eax
mov    %al,0x24(%edi)
mov    0xc4(%esp),%eax
mov    %eax,0xc(%edi)
mov    0x128(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x10(%edi)
mov    0x118(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x14(%edi)
mov    0x11c(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x18(%edi)
mov    0x120(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x1c(%edi)
mov    0x124(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
cmpl   $0x0,0x128(%esp)
mov    %eax,0x20(%edi)
je     805567e <sidput@plt+0x7b1e>
cmpl   $0x0,0x10(%edi)
je     8055a13 <sidput@plt+0x7eb3>
cmpl   $0x0,0x118(%esp)
je     8055692 <sidput@plt+0x7b32>
cmpl   $0x0,0x14(%edi)
je     8055a13 <sidput@plt+0x7eb3>
cmpl   $0x0,0x11c(%esp)
je     80556a6 <sidput@plt+0x7b46>
cmpl   $0x0,0x18(%edi)
je     8055a13 <sidput@plt+0x7eb3>
cmpl   $0x0,0x120(%esp)
je     80556ba <sidput@plt+0x7b5a>
cmpl   $0x0,0x1c(%edi)
je     8055a13 <sidput@plt+0x7eb3>
cmpl   $0x0,0x124(%esp)
jne    80551e0 <sidput@plt+0x7680>
jmp    80551e8 <sidput@plt+0x7688>
cmpb   $0x0,0x1(%eax)
jne    80554f1 <sidput@plt+0x7991>
movl   $0x0,0x12c(%esp)
00
movl   $0x0,0xc4(%esp)
00
jmp    8055516 <sidput@plt+0x79b6>
mov    0x12c(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x8097c41,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8054bb2 <sidput@plt+0x7052>
mov    %edi,0x10(%esp)
movl   $0x8097b71,0xc(%esp)
movl   $0x80973b0,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8054bb2 <sidput@plt+0x7052>
test   %edx,%edx
jne    805548e <sidput@plt+0x792e>
cmpl   $0x0,0xcc(%esp)
jne    80554a1 <sidput@plt+0x7941>
cmpl   $0x0,0x124(%esp)
jne    80554b1 <sidput@plt+0x7951>
cmpl   $0x0,0x128(%esp)
jne    80554b1 <sidput@plt+0x7951>
cmpl   $0x0,0x12c(%esp)
jne    80554b1 <sidput@plt+0x7951>
cmpl   $0x0,0xc8(%esp)
jne    80554b1 <sidput@plt+0x7951>
cmpl   $0x0,0xec(%esp)
jne    80554b1 <sidput@plt+0x7951>
cmpl   $0x0,0xe4(%esp)
je     805584e <sidput@plt+0x7cee>
mov    0x184(%esp),%eax
movl   $0x2,(%esp)
mov    %eax,0x4(%esp)
call   805ece0 <sidput@plt+0x11180>
test   %eax,%eax
mov    %eax,%edi
je     8054b98 <sidput@plt+0x7038>
mov    0x13c(%esp),%eax
test   %eax,%eax
je     8055833 <sidput@plt+0x7cd3>
cmpb   $0x2a,(%eax)
je     805581e <sidput@plt+0x7cbe>
andb   $0xfe,0x10(%edi)
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
cmpl   $0x0,0x13c(%esp)
mov    %eax,0xc(%edi)
jne    80551e0 <sidput@plt+0x7680>
jmp    80551e8 <sidput@plt+0x7688>
cmpb   $0x0,0x1(%edx)
jne    8055497 <sidput@plt+0x7937>
movl   $0x0,0x11c(%esp)
00
jmp    8055497 <sidput@plt+0x7937>
cmpb   $0x0,0x1(%eax)
jne    80557e2 <sidput@plt+0x7c82>
movl   $0x0,0x13c(%esp)
00
xor    %eax,%eax
jmp    80557e2 <sidput@plt+0x7c82>
mov    0x140(%esp),%eax
orb    $0x1,0x10(%edi)
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0xc(%edi)
jmp    80551e0 <sidput@plt+0x7680>
cmpl   $0x0,0xd8(%esp)
jne    80557b1 <sidput@plt+0x7c51>
test   %edi,%edi
je     8054b31 <sidput@plt+0x6fd1>
cmpb   $0x2a,(%edi)
je     80559af <sidput@plt+0x7e4f>
mov    %edi,0x4(%esp)
lea    0x150(%esp),%edi
mov    %edi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
lea    0x14c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   808a1f0 <dbus_shutdown+0xb510>
test   %eax,%eax
je     8055a3a <sidput@plt+0x7eda>
mov    0x184(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   805ece0 <sidput@plt+0x11180>
test   %eax,%eax
mov    %eax,%edi
je     8054b98 <sidput@plt+0x7038>
mov    0x14c(%esp),%eax
test   %edi,%edi
mov    %eax,0xc(%edi)
jne    80551e8 <sidput@plt+0x7688>
mov    $0x1,%eax
jmp    8054b26 <sidput@plt+0x6fc6>
mov    0x13c(%esp),%edi
mov    %edi,0xe4(%esp)
test   %edi,%edi
mov    0x140(%esp),%edi
mov    %edi,0xd8(%esp)
je     8055a5a <sidput@plt+0x7efa>
test   %edi,%edi
jne    8054b08 <sidput@plt+0x6fa8>
mov    0x144(%esp),%edi
test   %edi,%edi
jne    8054b08 <sidput@plt+0x6fa8>
cmpl   $0x0,0x148(%esp)
jne    8054b08 <sidput@plt+0x6fa8>
jmp    8054f5f <sidput@plt+0x73ff>
mov    0xc4(%esp),%eax
cmpb   $0x0,0x1(%eax)
jne    8054f8a <sidput@plt+0x742a>
movl   $0x0,0x104(%esp)
00
jmp    8054f8a <sidput@plt+0x742a>
cmpb   $0x0,0x1(%eax)
jne    805548a <sidput@plt+0x792a>
movl   $0x0,0x118(%esp)
00
jmp    805548a <sidput@plt+0x792a>
cmpb   $0x0,0x1(%eax)
jne    80554b1 <sidput@plt+0x7951>
movl   $0x0,0x120(%esp)
00
jmp    80554b1 <sidput@plt+0x7951>
cmpb   $0x0,0x1(%eax)
jne    80554c5 <sidput@plt+0x7965>
movl   $0x0,0x124(%esp)
00
jmp    80554c5 <sidput@plt+0x7965>
cmpb   $0x0,0x1(%eax)
jne    80554d9 <sidput@plt+0x7979>
movl   $0x0,0x128(%esp)
00
jmp    80554d9 <sidput@plt+0x7979>
cmpb   $0x0,0x1(%edi)
jne    805586d <sidput@plt+0x7d0d>
mov    0x184(%esp),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   805ece0 <sidput@plt+0x11180>
test   %eax,%eax
mov    %eax,%edi
je     8054b98 <sidput@plt+0x7038>
movl   $0xffffffff,0xc(%edi)
jmp    80551e8 <sidput@plt+0x7688>
mov    0x4(%edi),%edx
sub    $0x3,%edx
cmp    $0x1,%edx
jbe    8055bd0 <sidput@plt+0x8070>
mov    %edi,0x8(%esp)
mov    0xc(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   805f000 <sidput@plt+0x114a0>
test   %eax,%eax
jne    8055b3b <sidput@plt+0x7fdb>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebp,(%esp)
call   806af90 <dbus_set_error_const>
mov    %edi,(%esp)
call   805ed70 <sidput@plt+0x11210>
xor    %eax,%eax
jmp    8054b26 <sidput@plt+0x6fc6>
mov    0x144(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x80973e8,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80558ce <sidput@plt+0x7d6e>
test   %edi,%edi
jne    8055904 <sidput@plt+0x7da4>
jmp    8054f30 <sidput@plt+0x73d0>
cmpb   $0x0,0x1(%ecx)
nop
lea    0x0(%esi,%eiz,1),%esi
jne    8054f97 <sidput@plt+0x7437>
movl   $0x0,0x108(%esp)
00
jmp    8054f97 <sidput@plt+0x7437>
cmpb   $0x0,0x1(%eax)
jne    8054fab <sidput@plt+0x744b>
movl   $0x0,0x10c(%esp)
00
jmp    8054fab <sidput@plt+0x744b>
cmpb   $0x0,0x1(%eax)
jne    8054fbf <sidput@plt+0x745f>
movl   $0x0,0x110(%esp)
00
jmp    8054fbf <sidput@plt+0x745f>
mov    0xc8(%esp),%eax
movl   $0x8096ca6,0xc(%esp)
mov    %eax,0x10(%esp)
jmp    8055728 <sidput@plt+0x7bc8>
cmpb   $0x0,0x1(%eax)
jne    8054fd7 <sidput@plt+0x7477>
movl   $0x0,0x114(%esp)
00
movl   $0x0,0xc4(%esp)
00
jmp    8055003 <sidput@plt+0x74a3>
movl   $0x0,0xc4(%esp)
00
jmp    8055003 <sidput@plt+0x74a3>
mov    0x114(%esp),%eax
jmp    80556f9 <sidput@plt+0x7b99>
mov    %edi,0x10(%esp)
movl   $0x8097b89,0xc(%esp)
jmp    8055728 <sidput@plt+0x7bc8>
mov    0x34(%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805efa0 <sidput@plt+0x11440>
test   %eax,%eax
je     8055a13 <sidput@plt+0x7eb3>
mov    %edi,(%esp)
call   805ed70 <sidput@plt+0x11210>
jmp    80558ce <sidput@plt+0x7d6e>
mov    0x4(%edi),%edx
sub    $0x3,%edx
cmp    $0x1,%edx
jbe    8055b93 <sidput@plt+0x8033>
mov    %edi,0x8(%esp)
mov    0xc(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   805f050 <sidput@plt+0x114f0>
test   %eax,%eax
je     8055a13 <sidput@plt+0x7eb3>
jmp    8055b3b <sidput@plt+0x7fdb>
mov    %edi,0x8(%esp)
mov    0xc(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   805f0a0 <sidput@plt+0x11540>
test   %eax,%eax
je     8055a13 <sidput@plt+0x7eb3>
jmp    8055b3b <sidput@plt+0x7fdb>
mov    %ebx,0xc(%esp)
movl   $0x8097478,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    8055a2b <sidput@plt+0x7ecb>
mov    0x34(%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805efd0 <sidput@plt+0x11470>
test   %eax,%eax
je     8055a13 <sidput@plt+0x7eb3>
jmp    8055b3b <sidput@plt+0x7fdb>
mov    %ebx,0xc(%esp)
movl   $0x8097434,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    8055a2b <sidput@plt+0x7ecb>
mov    0x148(%esp),%eax
mov    %ebx,0x8(%esp)
movl   $0x8097410,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80558ce <sidput@plt+0x7d6e>
cmpb   $0x0,0x1(%eax)
jne    8054b49 <sidput@plt+0x6fe9>
mov    0x184(%esp),%eax
movl   $0x4,(%esp)
mov    %eax,0x4(%esp)
call   805ece0 <sidput@plt+0x11180>
test   %eax,%eax
mov    %eax,%edi
jne    80559da <sidput@plt+0x7e7a>
jmp    8054b98 <sidput@plt+0x7038>
jmp    8055c50 <sidput@plt+0x80f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8055c7e <sidput@plt+0x811e>
mov    0x8(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     8055c88 <sidput@plt+0x8128>
mov    0x4(%ebx),%ebx
cmp    %esi,%ebx
jne    8055c60 <sidput@plt+0x8100>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x10,%esp
mov    0x8(%edx),%esi
mov    (%eax),%eax
mov    %esi,%edx
call   8055c50 <sidput@plt+0x80f0>
test   %eax,%eax
je     8055cd8 <sidput@plt+0x8178>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %eax,%edi
push   %esi
mov    %ecx,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x10,%esp
mov    %edx,(%esp)
call   8089ee0 <dbus_shutdown+0xb200>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
test   %eax,%eax
jne    8055d58 <sidput@plt+0x81f8>
mov    %edi,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    8055d38 <sidput@plt+0x81d8>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
setne  %al
add    $0x10,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
mov    0x14(%eax),%edx
lea    0x14(%eax),%edi
test   %edx,%edx
jne    8055d97 <sidput@plt+0x8237>
jmp    8055dc8 <sidput@plt+0x8268>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x14(%esi),%eax
test   %eax,%eax
je     8055dc8 <sidput@plt+0x8268>
mov    %edi,(%esp)
call   807da80 <dbus_watch_handle+0x1ec0>
cmpl   $0x7,(%eax)
jne    8055d88 <sidput@plt+0x8228>
mov    0x8(%eax),%edx
mov    %eax,0xc(%esp)
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x14(%esi),%eax
test   %eax,%eax
jne    8055d97 <sidput@plt+0x8237>
xchg   %ax,%ax
mov    0x18(%esi),%eax
lea    0x24(%esi),%ebx
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x7c(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x807ebb0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %ebx,(%esp)
lea    0x2c(%esi),%ebx
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x807ebb0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %ebx,(%esp)
lea    0x30(%esi),%ebx
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x807ebb0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %ebx,(%esp)
lea    0x28(%esi),%ebx
call   807d8c0 <dbus_watch_handle+0x1d00>
movl   $0x0,0x8(%esp)
movl   $0x807ebb0,0x4(%esp)
mov    %ebx,(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %ebx,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x4(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x34(%esi),%eax
test   %eax,%eax
je     8055e9a <sidput@plt+0x833a>
mov    %eax,(%esp)
call   805eda0 <sidput@plt+0x11240>
mov    0x84(%esi),%eax
test   %eax,%eax
je     8055eac <sidput@plt+0x834c>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x5c,%esp
lea    0x28(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x14(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
call   806ad70 <dbus_error_init>
mov    0x80(%esi),%esi
mov    (%edi),%edi
mov    %esi,%ebp
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     8055f12 <sidput@plt+0x83b2>
mov    0x8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     80561e0 <sidput@plt+0x8680>
mov    0x4(%ebp),%ebp
cmp    %ebp,%esi
jne    8055ef0 <sidput@plt+0x8390>
mov    0x14(%esp),%eax
mov    %edi,0x4(%esp)
lea    0x80(%eax),%esi
mov    %esi,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8056170 <sidput@plt+0x8610>
mov    0x14(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8063ec0 <sidput@plt+0x16360>
mov    %esi,(%esp)
mov    %eax,%ebp
call   807da80 <dbus_watch_handle+0x1ec0>
test   %ebp,%ebp
je     805621b <sidput@plt+0x86bb>
mov    0x34(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    0x34(%eax),%eax
mov    %eax,(%esp)
call   805f0f0 <sidput@plt+0x11590>
test   %eax,%eax
je     80561b0 <sidput@plt+0x8650>
mov    0x14(%esp),%eax
lea    0x38(%esp),%ebx
mov    0x84(%eax),%eax
mov    %ebx,0x4(%esp)
mov    %eax,%edi
mov    0x84(%ebp),%eax
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
mov    %ebp,0x18(%esp)
mov    %edi,%ebp
jmp    8056000 <sidput@plt+0x84a0>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   807c3f0 <dbus_watch_handle+0x830>
mov    %ebx,(%esp)
mov    %eax,%esi
call   807c380 <dbus_watch_handle+0x7c0>
mov    %esi,(%esp)
mov    %eax,%edi
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%esi
je     805625c <sidput@plt+0x86fc>
mov    %edi,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%edi
je     8056265 <sidput@plt+0x8705>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
je     8056196 <sidput@plt+0x8636>
mov    %ebx,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    8055fb0 <sidput@plt+0x8450>
mov    0x18(%esp),%ebp
mov    0x18(%ebp),%eax
test   %eax,%eax
je     8056033 <sidput@plt+0x84d3>
mov    0x14(%esp),%ebx
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%ebp),%eax
mov    %eax,0x18(%ebx)
movl   $0x0,0x18(%ebp)
mov    0x20(%ebp),%ecx
test   %ecx,%ecx
je     8056056 <sidput@plt+0x84f6>
mov    0x14(%esp),%ebx
mov    0x20(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x20(%ebp),%eax
mov    %eax,0x20(%ebx)
movl   $0x0,0x20(%ebp)
movzbl 0x88(%ebp),%eax
test   $0x1,%al
je     8056073 <sidput@plt+0x8513>
mov    0x14(%esp),%eax
orb    $0x1,0x88(%eax)
movzbl 0x88(%ebp),%eax
test   $0x4,%al
je     8056082 <sidput@plt+0x8522>
mov    0x14(%esp),%eax
orb    $0x4,0x88(%eax)
mov    0x7c(%ebp),%edx
test   %edx,%edx
je     80560a5 <sidput@plt+0x8545>
mov    0x14(%esp),%ebx
mov    0x7c(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x7c(%ebp),%eax
mov    %eax,0x7c(%ebx)
movl   $0x0,0x7c(%ebp)
mov    0x14(%esp),%eax
lea    0x24(%ebp),%ebx
lea    0x24(%eax),%esi
jmp    80560c4 <sidput@plt+0x8564>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    %ebx,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
jne    80560b8 <sidput@plt+0x8558>
mov    0x14(%esp),%eax
lea    0x28(%ebp),%ebx
lea    0x28(%eax),%esi
jmp    80560ec <sidput@plt+0x858c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    %ebx,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
jne    80560e0 <sidput@plt+0x8580>
mov    0x14(%esp),%eax
lea    0x2c(%ebp),%ebx
lea    0x2c(%eax),%esi
jmp    8056111 <sidput@plt+0x85b1>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edx
mov    %esi,%eax
call   8055ca0 <sidput@plt+0x8140>
mov    %ebx,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
jne    8056108 <sidput@plt+0x85a8>
mov    0x14(%esp),%eax
lea    0x30(%ebp),%ebx
lea    0x30(%eax),%esi
jmp    805613c <sidput@plt+0x85dc>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    %ebx,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
jne    8056130 <sidput@plt+0x85d0>
mov    0x14(%esp),%edi
lea    0x38(%ebp),%esi
mov    $0x11,%ecx
add    $0x38,%edi
rep movsl %ds:(%esi),%es:(%edi)
subl   $0x1,0x0(%ebp)
je     805620a <sidput@plt+0x86aa>
mov    $0x1,%eax
jmp    805618e <sidput@plt+0x862e>
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
mov    0x18(%esp),%ebp
call   807ebb0 <dbus_free>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
subl   $0x1,0x0(%ebp)
je     805624e <sidput@plt+0x86ee>
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x80974e4,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,%eax
call   8055d70 <sidput@plt+0x8210>
mov    $0x1,%eax
jmp    805618e <sidput@plt+0x862e>
movl   $0x80974bc,0x4(%esp)
mov    %ebx,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
je     8056237 <sidput@plt+0x86d7>
mov    0x1c(%esp),%esi
test   %esi,%esi
jne    8056276 <sidput@plt+0x8716>
mov    0x70(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
xor    %eax,%eax
jmp    805618e <sidput@plt+0x862e>
mov    %ebp,%eax
call   8055d70 <sidput@plt+0x8210>
xor    %eax,%eax
jmp    805618e <sidput@plt+0x862e>
mov    0x18(%esp),%ebp
jmp    80561b0 <sidput@plt+0x8650>
mov    %esi,(%esp)
mov    0x18(%esp),%ebp
call   807ebb0 <dbus_free>
jmp    80561b0 <sidput@plt+0x8650>
mov    %ebx,(%esp)
call   806ade0 <dbus_error_free>
mov    $0x1,%eax
jmp    805618e <sidput@plt+0x862e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
movl   $0x8c,(%esp)
mov    0x38(%esp),%ebp
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     8056420 <sidput@plt+0x88c0>
mov    0x34(%esp),%eax
lea    0x4(%ebx),%esi
mov    %esi,(%esp)
test   %eax,%eax
movzbl 0x88(%ebx),%eax
setne  %dl
shl    $0x3,%edx
and    $0xfffffff7,%eax
or     %edx,%eax
mov    %al,0x88(%ebx)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8056387 <sidput@plt+0x8827>
call   805ee80 <sidput@plt+0x11320>
test   %eax,%eax
mov    %eax,0x34(%ebx)
je     805637f <sidput@plt+0x881f>
mov    0x30(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     8056370 <sidput@plt+0x8810>
movl   $0x807ebb0,0x8(%esp)
movl   $0x807ebb0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x84(%ebx)
je     8056370 <sidput@plt+0x8810>
test   %ebp,%ebp
je     80563a0 <sidput@plt+0x8840>
lea    0x38(%ebx),%edi
mov    $0x11,%ecx
lea    0x38(%ebp),%esi
rep movsl %ds:(%esi),%es:(%edi)
mov    0x80(%ebp),%eax
mov    %eax,0x80(%ebx)
movl   $0x1,(%ebx)
mov    %ebx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%ebx),%eax
test   %eax,%eax
je     805637f <sidput@plt+0x881f>
mov    %eax,(%esp)
call   805eda0 <sidput@plt+0x11240>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x7f00000,0x38(%ebx)
movl   $0x7f00000,0x40(%ebx)
movl   $0x2000000,0x48(%ebx)
movl   $0x40,0x3c(%ebx)
movl   $0x40,0x44(%ebx)
movl   $0x10,0x4c(%ebx)
movl   $0x61a8,0x50(%ebx)
movl   $0x7530,0x54(%ebx)
movl   $0x249f0,0x58(%ebx)
movl   $0x40,0x60(%ebx)
movl   $0x100,0x64(%ebx)
movl   $0x800,0x5c(%ebx)
movl   $0x200,0x68(%ebx)
movl   $0x200,0x6c(%ebx)
movl   $0x200,0x70(%ebx)
movl   $0xffffffff,0x78(%ebx)
movl   $0x80,0x74(%ebx)
jmp    8056359 <sidput@plt+0x87f9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8056361 <sidput@plt+0x8801>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
jne    8056458 <sidput@plt+0x88f8>
jmp    8055d70 <sidput@plt+0x8210>
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
push   %edi
mov    $0xa,%ecx
push   %esi
mov    $0x8097c62,%edi
sub    $0x14,%esp
mov    $0x1,%eax
mov    0x24(%esp),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     80564aa <sidput@plt+0x894a>
mov    0x24(%esp),%eax
movl   $0x8097504,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x14,%esp
pop    %esi
pop    %edi
ret
push   %edi
push   %esi
push   %ebx
sub    $0x60,%esp
mov    0x70(%esp),%ebx
lea    0x14(%ebx),%eax
mov    %eax,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
test   %eax,%eax
je     8056520 <sidput@plt+0x89c0>
mov    (%eax),%edx
test   %edx,%edx
je     8056520 <sidput@plt+0x89c0>
cmp    $0x1,%edx
je     80566d8 <sidput@plt+0x8b78>
cmp    $0x6,%edx
je     80567b0 <sidput@plt+0x8c50>
cmp    $0x10,%edx
je     80565b8 <sidput@plt+0x8a58>
mov    0x74(%esp),%eax
movl   $0x8097854,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x80(%esp),%eax
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %esi,%esi
add    $0x60,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x74(%esp),%esi
mov    $0x8097c62,%edi
mov    $0xa,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8056578 <sidput@plt+0x8a18>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056590 <sidput@plt+0x8a30>
movl   $0x8097c62,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x8097280,0x8(%esp)
mov    0x80(%esp),%eax
xor    %esi,%esi
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x60,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
movl   $0x8097538,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    80564fa <sidput@plt+0x899a>
lea    0x0(%esi),%esi
mov    $0x1,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
add    $0x60,%esp
mov    $0x1,%esi
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x74(%esp),%esi
mov    $0x8097d8a,%edi
mov    $0xa,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8056828 <sidput@plt+0x8cc8>
lea    0x50(%esp),%eax
xor    %esi,%esi
mov    %eax,0x20(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x80(%esp),%eax
movl   $0x0,0x24(%esp)
movl   $0x8097d42,0x1c(%esp)
movl   $0x809be4b,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x7c(%esp),%eax
movl   $0x8097d8a,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x8(%esp)
call   8054740 <sidput@plt+0x6be0>
test   %eax,%eax
je     8056513 <sidput@plt+0x89b3>
mov    $0x11,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     8056a1d <sidput@plt+0x8ebd>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     80568fe <sidput@plt+0x8d9e>
mov    0x50(%esp),%edx
test   %edx,%edx
je     80568fe <sidput@plt+0x8d9e>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%esi
je     80566b0 <sidput@plt+0x8b50>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%edi
je     80569ab <sidput@plt+0x8e4b>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x84(%ebx),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80(%esp),%eax
xor    %esi,%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8056513 <sidput@plt+0x89b3>
xchg   %ax,%ax
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8057ff0 <sidput@plt+0xa490>
cmp    $0x3,%eax
je     8056862 <sidput@plt+0x8d02>
cmp    $0xf,%eax
je     80568c8 <sidput@plt+0x8d68>
cmp    $0xa,%eax
je     80568e3 <sidput@plt+0x8d83>
cmp    $0x15,%eax
je     8056922 <sidput@plt+0x8dc2>
cmp    $0x14,%eax
je     8056958 <sidput@plt+0x8df8>
cmp    $0xb,%eax
je     8056990 <sidput@plt+0x8e30>
cmp    $0x4,%eax
je     80569dd <sidput@plt+0x8e7d>
cmp    $0x5,%eax
je     8056a41 <sidput@plt+0x8ee1>
cmp    $0xd,%eax
nop
je     8056a81 <sidput@plt+0x8f21>
cmp    $0xe,%eax
je     8056ab5 <sidput@plt+0x8f55>
cmp    $0x12,%eax
je     8056ae9 <sidput@plt+0x8f89>
cmp    $0x13,%eax
je     8056b25 <sidput@plt+0x8fc5>
cmp    $0x16,%eax
je     8056b48 <sidput@plt+0x8fe8>
cmp    $0xc,%eax
je     8056b7c <sidput@plt+0x901c>
cmp    $0x2,%eax
je     8056dd7 <sidput@plt+0x9277>
cmp    $0x6,%eax
nop
je     8056d19 <sidput@plt+0x91b9>
cmp    $0x7,%eax
je     8056f0e <sidput@plt+0x93ae>
cmp    $0x10,%eax
je     8056cfe <sidput@plt+0x919e>
cmp    $0x17,%eax
je     8056c5a <sidput@plt+0x90fa>
mov    0x74(%esp),%eax
movl   $0x8097c62,0x10(%esp)
movl   $0x80977b8,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    8056550 <sidput@plt+0x89f0>
xchg   %ax,%ax
mov    0x74(%esp),%esi
mov    $0x8097d7f,%edi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     805687d <sidput@plt+0x8d1d>
mov    0x74(%esp),%esi
mov    $0x8097d85,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8056845 <sidput@plt+0x8ce5>
mov    0x80(%esp),%eax
mov    0x78(%esp),%ecx
mov    0x74(%esp),%edx
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   80548d0 <sidput@plt+0x6d70>
test   %eax,%eax
je     8056511 <sidput@plt+0x89b1>
mov    $0x9,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
movl   $0x8097d69,0x10(%esp)
movl   $0x80977b8,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    8056550 <sidput@plt+0x89f0>
mov    0x74(%esp),%eax
movl   $0x8097d4a,0x10(%esp)
movl   $0x80977b8,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    8056550 <sidput@plt+0x89f0>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     805693d <sidput@plt+0x8ddd>
movl   $0x8097e99,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    0x80(%esp),%eax
mov    0x78(%esp),%ecx
mov    0x74(%esp),%edx
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
mov    %ebx,%eax
call   80548d0 <sidput@plt+0x6d70>
test   %eax,%eax
je     8056511 <sidput@plt+0x89b1>
mov    $0x8,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
nop
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056973 <sidput@plt+0x8e13>
movl   $0x809c204,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     80569b8 <sidput@plt+0x8e58>
movl   $0x8099f54,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
movl   $0x80977f4,0x8(%esp)
mov    0x80(%esp),%eax
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8056511 <sidput@plt+0x89b1>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     80569f8 <sidput@plt+0x8e98>
movl   $0x8097c6c,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0x3,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
xchg   %ax,%ax
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056a5c <sidput@plt+0x8efc>
movl   $0x8097c73,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0xf,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056a9c <sidput@plt+0x8f3c>
movl   $0x8099f5d,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
jmp    80566b0 <sidput@plt+0x8b50>
mov    $0xa,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
orb    $0x1,0x88(%ebx)
mov    $0x1,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056ad0 <sidput@plt+0x8f70>
movl   $0x8097c7e,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0x15,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
orb    $0x2,0x88(%ebx)
mov    $0x1,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    0x80(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8056513 <sidput@plt+0x89b3>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056b0c <sidput@plt+0x8fac>
movl   $0x8097c85,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0x14,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
orb    $0x4,0x88(%ebx)
mov    $0x1,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056b63 <sidput@plt+0x9003>
movl   $0x8097c8a,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0xb,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056b97 <sidput@plt+0x9037>
movl   $0x8097c98,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0x4,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
mov    0x78(%esp),%eax
movl   $0x0,0x50(%esp)
mov    (%eax),%eax
test   %eax,%eax
je     8056bb0 <sidput@plt+0x9050>
movl   $0x8097ca3,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0x5,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
mov    0x78(%esp),%eax
movl   $0x0,0x50(%esp)
mov    (%eax),%eax
test   %eax,%eax
je     8056bfa <sidput@plt+0x909a>
movl   $0x8097cc0,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056cd9 <sidput@plt+0x9179>
movl   $0x8097cdc,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0xd,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056c41 <sidput@plt+0x90e1>
movl   $0x8097cec,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0xe,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
mov    $0x12,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
lea    0x50(%esp),%esi
mov    %esi,(%esp)
call   8084470 <dbus_shutdown+0x5790>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
add    $0x2c,%ebx
jmp    8056be7 <sidput@plt+0x9087>
lea    0x0(%esi),%esi
mov    %ebx,%eax
call   8055ca0 <sidput@plt+0x8140>
mov    %esi,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
mov    %eax,%edx
jne    8056be0 <sidput@plt+0x9080>
jmp    80565a4 <sidput@plt+0x8a44>
mov    $0x13,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
lea    0x50(%esp),%esi
mov    %esi,(%esp)
call   8084600 <dbus_shutdown+0x5920>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
add    $0x2c,%ebx
jmp    8056c2e <sidput@plt+0x90ce>
mov    %ebx,%eax
call   8055ca0 <sidput@plt+0x8140>
mov    %esi,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
mov    %eax,%edx
jne    8056c27 <sidput@plt+0x90c7>
jmp    80565a4 <sidput@plt+0x8a44>
mov    $0xc,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
mov    $0x17,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
lea    0x50(%esp),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
mov    0x80(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x8097d71,0x14(%esp)
movl   $0x8097d76,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x7c(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x8(%esp)
call   8054740 <sidput@plt+0x6be0>
test   %eax,%eax
je     8056513 <sidput@plt+0x89b3>
mov    0x80(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8051500 <sidput@plt+0x39a0>
mov    %eax,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    $0x16,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
je     80566b0 <sidput@plt+0x8b50>
orb    $0x10,0x88(%ebx)
mov    $0x1,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    0x78(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8056f91 <sidput@plt+0x9431>
movl   $0x8097d69,0x10(%esp)
jmp    8056544 <sidput@plt+0x89e4>
mov    $0x6,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
mov    %eax,%edi
je     80566b0 <sidput@plt+0x8b50>
movl   $0x0,0x8(%eax)
lea    0x4c(%esp),%eax
xor    %esi,%esi
mov    %eax,0x30(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x80(%esp),%eax
movl   $0x0,0x34(%esp)
movl   $0x8097d37,0x2c(%esp)
movl   $0x8097b60,0x24(%esp)
mov    %eax,0x10(%esp)
mov    0x7c(%esp),%eax
movl   $0x8097e99,0x1c(%esp)
movl   $0x8097d42,0x14(%esp)
movl   $0x8097d4a,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8054740 <sidput@plt+0x6be0>
test   %eax,%eax
je     8056513 <sidput@plt+0x89b3>
mov    0x40(%esp),%ebx
test   %ebx,%ebx
je     8057057 <sidput@plt+0x94f7>
cmpl   $0x0,0x44(%esp)
je     805701c <sidput@plt+0x94bc>
movl   $0x8097620,0x8(%esp)
jmp    8056906 <sidput@plt+0x8da6>
mov    $0x2,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
mov    %eax,%edi
je     80566b0 <sidput@plt+0x8b50>
andb   $0xf8,0x8(%eax)
xor    %esi,%esi
lea    0x50(%esp),%eax
mov    %eax,0x28(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x20(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0x18(%esp)
mov    0x80(%esp),%eax
movl   $0x0,0x2c(%esp)
movl   $0x8097cf7,0x24(%esp)
movl   $0x8097d0d,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x7c(%esp),%eax
movl   $0x8097d20,0x14(%esp)
movl   $0x8097d2f,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x8(%esp)
call   8054740 <sidput@plt+0x6be0>
test   %eax,%eax
je     8056513 <sidput@plt+0x89b3>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     8056e94 <sidput@plt+0x9334>
movzbl (%eax),%edx
cmp    $0x79,%edx
jne    8056fdb <sidput@plt+0x947b>
cmpb   $0x65,0x1(%eax)
jne    8056fce <sidput@plt+0x946e>
cmpb   $0x73,0x2(%eax)
jne    8056fce <sidput@plt+0x946e>
cmpb   $0x0,0x3(%eax)
jne    8056fce <sidput@plt+0x946e>
orb    $0x1,0x8(%edi)
mov    0x48(%esp),%eax
test   %eax,%eax
je     8056eca <sidput@plt+0x936a>
movzbl (%eax),%edx
cmp    $0x79,%edx
jne    8057002 <sidput@plt+0x94a2>
cmpb   $0x65,0x1(%eax)
jne    8056ff5 <sidput@plt+0x9495>
cmpb   $0x73,0x2(%eax)
jne    8056ff5 <sidput@plt+0x9495>
cmpb   $0x0,0x3(%eax)
jne    8056ff5 <sidput@plt+0x9495>
orb    $0x2,0x8(%edi)
mov    0x50(%esp),%eax
test   %eax,%eax
je     80565a4 <sidput@plt+0x8a44>
movzbl (%eax),%edx
cmp    $0x79,%edx
jne    80570f7 <sidput@plt+0x9597>
cmpb   $0x65,0x1(%eax)
jne    80570ea <sidput@plt+0x958a>
cmpb   $0x73,0x2(%eax)
jne    80570ea <sidput@plt+0x958a>
cmpb   $0x0,0x3(%eax)
jne    80570ea <sidput@plt+0x958a>
orb    $0x4,0x8(%edi)
mov    $0x1,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    $0x7,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
mov    %eax,%edi
je     80566b0 <sidput@plt+0x8b50>
lea    0x50(%esp),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
mov    0x80(%esp),%eax
movl   $0x0,0x1c(%esp)
movl   $0x809c05a,0x14(%esp)
movl   $0x8097d63,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x7c(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x8(%esp)
call   8054740 <sidput@plt+0x6be0>
test   %eax,%eax
je     8056513 <sidput@plt+0x89b3>
mov    0x50(%esp),%eax
test   %eax,%eax
je     8056faa <sidput@plt+0x944a>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x8(%edi)
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
mov    $0x10,%edx
mov    %ebx,%eax
call   80546e0 <sidput@plt+0x6b80>
test   %eax,%eax
jne    80565a4 <sidput@plt+0x8a44>
jmp    80566b0 <sidput@plt+0x8b50>
mov    0x80(%esp),%eax
movl   $0x8097788,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8056513 <sidput@plt+0x89b3>
movl   $0x809756c,0x8(%esp)
jmp    8056906 <sidput@plt+0x8da6>
cmp    $0x6e,%edx
jne    8056fce <sidput@plt+0x946e>
cmpb   $0x6f,0x1(%eax)
jne    8056fce <sidput@plt+0x946e>
cmpb   $0x0,0x2(%eax)
jne    8056fce <sidput@plt+0x946e>
andb   $0xfe,0x8(%edi)
jmp    8056e94 <sidput@plt+0x9334>
movl   $0x80975a4,0x8(%esp)
jmp    8056906 <sidput@plt+0x8da6>
cmp    $0x6e,%edx
jne    8056ff5 <sidput@plt+0x9495>
cmpb   $0x6f,0x1(%eax)
jne    8056ff5 <sidput@plt+0x9495>
cmpb   $0x0,0x2(%eax)
jne    8056ff5 <sidput@plt+0x9495>
andb   $0xfd,0x8(%edi)
jmp    8056eca <sidput@plt+0x936a>
cmpl   $0x0,0x48(%esp)
jne    8056dca <sidput@plt+0x926a>
cmpl   $0x0,0x4c(%esp)
jne    8056dca <sidput@plt+0x926a>
movl   $0x8097d51,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    80570a8 <sidput@plt+0x9548>
movl   $0x1,0x8(%edi)
mov    $0x1,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    0x44(%esp),%eax
test   %eax,%eax
je     8057116 <sidput@plt+0x95b6>
cmpl   $0x0,0x48(%esp)
jne    8056dca <sidput@plt+0x926a>
cmpl   $0x0,0x4c(%esp)
jne    8056dca <sidput@plt+0x926a>
lea    0x50(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
lea    0xc(%edi),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   808a1f0 <dbus_shutdown+0xb510>
test   %eax,%eax
je     80570d1 <sidput@plt+0x9571>
movl   $0x3,0x8(%edi)
jmp    80565a4 <sidput@plt+0x8a44>
movl   $0x8097d59,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8057158 <sidput@plt+0x95f8>
movl   $0x2,0x8(%edi)
mov    $0x1,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    0x44(%esp),%eax
movl   $0x80976d0,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80565a4 <sidput@plt+0x8a44>
movl   $0x80975e0,0x8(%esp)
jmp    8056906 <sidput@plt+0x8da6>
cmp    $0x6e,%edx
jne    80570ea <sidput@plt+0x958a>
cmpb   $0x6f,0x1(%eax)
jne    80570ea <sidput@plt+0x958a>
cmpb   $0x0,0x2(%eax)
jne    80570ea <sidput@plt+0x958a>
andb   $0xfb,0x8(%edi)
mov    $0x1,%esi
jmp    8056513 <sidput@plt+0x89b3>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8057199 <sidput@plt+0x9639>
cmpl   $0x0,0x4c(%esp)
jne    8056dca <sidput@plt+0x926a>
lea    0x50(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
lea    0xc(%edi),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   808a220 <dbus_shutdown+0xb540>
test   %eax,%eax
je     8057180 <sidput@plt+0x9620>
movl   $0x4,0x8(%edi)
jmp    80565a4 <sidput@plt+0x8a44>
mov    0x80(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8097678,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8056513 <sidput@plt+0x89b3>
mov    0x48(%esp),%eax
movl   $0x809770c,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80565a4 <sidput@plt+0x8a44>
mov    0x4c(%esp),%ebx
test   %ebx,%ebx
je     8056dca <sidput@plt+0x926a>
movl   $0x8097c57,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
mov    %eax,%esi
je     80571d5 <sidput@plt+0x9675>
movl   $0x8097c5c,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    80571e9 <sidput@plt+0x9689>
mov    %esi,0xc(%edi)
mov    $0x1,%esi
movl   $0x5,0x8(%edi)
jmp    8056513 <sidput@plt+0x89b3>
mov    %ebx,0xc(%esp)
movl   $0x8097744,0x8(%esp)
jmp    80564fa <sidput@plt+0x899a>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
lea    0x14(%eax),%ebx
mov    %ebx,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
test   %eax,%eax
je     80572e0 <sidput@plt+0x9780>
mov    (%eax),%eax
test   %eax,%eax
je     80572e0 <sidput@plt+0x9780>
mov    %eax,(%esp)
call   80582d0 <sidput@plt+0xa770>
mov    %eax,%ebp
mov    0x44(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    80572a8 <sidput@plt+0x9748>
mov    %ebx,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
mov    (%eax),%edx
lea    -0x2(%edx),%ecx
cmp    $0xd,%ecx
ja     8057280 <sidput@plt+0x9720>
mov    $0x1,%ebp
shl    %cl,%ebp
and    $0x3e2f,%ebp
je     8057280 <sidput@plt+0x9720>
testb  $0x1,0x4(%eax)
je     8057370 <sidput@plt+0x9810>
cmp    $0x7,%edx
je     8057320 <sidput@plt+0x97c0>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   807da80 <dbus_watch_handle+0x1ec0>
cmpl   $0x7,(%eax)
je     8057308 <sidput@plt+0x97a8>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
mov    %ebp,0x10(%esp)
movl   $0x80978b8,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x48(%esp),%eax
movl   $0x8097880,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x8(%eax),%edx
mov    %eax,0x1c(%esp)
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    0x1c(%esp),%eax
jmp    805728d <sidput@plt+0x972d>
mov    0x8(%eax),%ebp
mov    $0x8097d94,%edi
mov    $0x13,%ecx
mov    0xc(%eax),%edx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805739f <sidput@plt+0x983f>
mov    0x40(%esp),%eax
mov    %edx,0x38(%eax)
test   %edx,%edx
jns    8057280 <sidput@plt+0x9720>
mov    0x48(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x8097974,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    80572d2 <sidput@plt+0x9772>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   80582d0 <sidput@plt+0xa770>
movl   $0x80978fc,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    80572d2 <sidput@plt+0x9772>
mov    $0x8097da7,%edi
mov    $0x16,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80573b8 <sidput@plt+0x9858>
mov    0x40(%esp),%eax
mov    %edx,0x3c(%eax)
jmp    805733d <sidput@plt+0x97dd>
mov    $0x8097dbd,%edi
mov    $0x13,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80573d4 <sidput@plt+0x9874>
mov    0x40(%esp),%eax
mov    %edx,0x40(%eax)
jmp    805733d <sidput@plt+0x97dd>
mov    $0x8097dd0,%edi
mov    $0x16,%ecx
mov    %ebp,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80573f0 <sidput@plt+0x9890>
mov    0x40(%esp),%eax
mov    %edx,0x44(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097de6,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057418 <sidput@plt+0x98b8>
mov    0x40(%esp),%eax
mov    %edx,0x48(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097df7,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057440 <sidput@plt+0x98e0>
mov    0x40(%esp),%eax
mov    %edx,0x4c(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097e0c,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057468 <sidput@plt+0x9908>
mov    0x40(%esp),%eax
mov    %edx,0x50(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097e22,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057490 <sidput@plt+0x9930>
mov    0x40(%esp),%eax
mov    %edx,0x54(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097e2f,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    80574b8 <sidput@plt+0x9958>
mov    0x40(%esp),%eax
mov    %edx,0x58(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097e42,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    80574e0 <sidput@plt+0x9980>
mov    0x40(%esp),%eax
mov    %edx,0x78(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097e50,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057508 <sidput@plt+0x99a8>
mov    0x40(%esp),%eax
mov    %edx,0x5c(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097e6a,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057530 <sidput@plt+0x99d0>
mov    0x40(%esp),%eax
mov    %edx,0x60(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097e85,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057558 <sidput@plt+0x99f8>
mov    0x40(%esp),%eax
mov    %edx,0x64(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097e9e,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8057580 <sidput@plt+0x9a20>
mov    0x40(%esp),%eax
mov    %edx,0x68(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097eb9,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    80575a8 <sidput@plt+0x9a48>
mov    0x40(%esp),%eax
mov    %edx,0x6c(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097934,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    80575d0 <sidput@plt+0x9a70>
mov    0x40(%esp),%eax
mov    %edx,0x70(%eax)
jmp    805733d <sidput@plt+0x97dd>
movl   $0x8097ed2,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    80575f8 <sidput@plt+0x9a98>
mov    0x40(%esp),%eax
mov    0x1c(%esp),%edx
mov    %edx,0x74(%eax)
jmp    805733d <sidput@plt+0x97dd>
mov    0x48(%esp),%eax
mov    %ebp,0xc(%esp)
movl   $0x8097954,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    80572d2 <sidput@plt+0x9772>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%ebx
lea    0x14(%ebx),%edi
mov    %edi,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
test   %eax,%eax
mov    %eax,%esi
je     8057a68 <sidput@plt+0x9f08>
testb  $0x1,0x4(%eax)
je     8057658 <sidput@plt+0x9af8>
xor    %eax,%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
test   %eax,%eax
je     8057649 <sidput@plt+0x9ae9>
cmpl   $0x17,(%eax)
ja     8057ca0 <sidput@plt+0xa140>
mov    (%eax),%eax
nop
jmp    *0x8097f04(,%eax,4)
nop
orb    $0x1,0x4(%esi)
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    8057a9b <sidput@plt+0x9f3b>
mov    0x88(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8057649 <sidput@plt+0x9ae9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x50(%esp),%eax
orb    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8057690 <sidput@plt+0x9b30>
mov    0x20(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x50(%esp),%eax
mov    %eax,0x20(%ebx)
mov    $0x1,%eax
jmp    805764b <sidput@plt+0x9aeb>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8080150 <dbus_shutdown+0x1470>
mov    0x84(%esp),%ecx
mov    $0x1,%eax
mov    0x50(%esp),%edx
cmp    %edx,0x4(%ecx)
je     805764b <sidput@plt+0x9aeb>
mov    %edi,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
test   %eax,%eax
je     8057caa <sidput@plt+0xa14a>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80582d0 <sidput@plt+0xa770>
movl   $0x80979e4,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8057649 <sidput@plt+0x9ae9>
lea    0x0(%esi),%esi
orb    $0x1,0x4(%esi)
testb  $0x2,0x8(%esi)
je     8057796 <sidput@plt+0x9c36>
call   805fdb0 <sidput@plt+0x12250>
mov    %eax,%edx
mov    $0x1,%eax
test   %edx,%edx
je     805764b <sidput@plt+0x9aeb>
lea    0x40(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8057690 <sidput@plt+0x9b30>
testb  $0x4,0x8(%esi)
je     8057ad1 <sidput@plt+0x9f71>
call   80606e0 <sidput@plt+0x12b80>
test   %eax,%eax
je     8057cdf <sidput@plt+0xa17f>
call   80606e0 <sidput@plt+0x12b80>
lea    0x50(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x84(%esp),%edx
mov    %edi,%ecx
mov    %ebp,%eax
call   8055cf0 <sidput@plt+0x8190>
test   %eax,%eax
je     8057aea <sidput@plt+0x9f8a>
movzbl 0x8(%esi),%ecx
mov    %edi,%edx
mov    0x88(%esp),%eax
and    $0x1,%ecx
mov    %eax,(%esp)
mov    %ebx,%eax
call   8055ec0 <sidput@plt+0x8360>
mov    %edi,(%esp)
test   %eax,%eax
jne    8057c98 <sidput@plt+0xa138>
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8057649 <sidput@plt+0x9ae9>
lea    0x0(%esi),%esi
lea    0x50(%esp),%eax
orb    $0x1,0x4(%esi)
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x50(%esp)
mov    %eax,(%esp)
call   8087990 <dbus_shutdown+0x8cb0>
test   %eax,%eax
je     8057abd <sidput@plt+0x9f5d>
mov    0x50(%esp),%eax
mov    %eax,0xc(%esi)
mov    $0x1,%eax
jmp    805764b <sidput@plt+0x9aeb>
lea    0x0(%esi,%eiz,1),%esi
lea    0x50(%esp),%eax
orb    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8057690 <sidput@plt+0x9b30>
mov    0x7c(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x50(%esp),%eax
mov    %eax,0x7c(%ebx)
mov    $0x1,%eax
jmp    805764b <sidput@plt+0x9aeb>
nop
orb    $0x1,0x4(%esi)
lea    0x50(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8057690 <sidput@plt+0x9b30>
mov    0x84(%esp),%edx
lea    0x4(%ebx),%eax
mov    %esi,%ecx
call   8055cf0 <sidput@plt+0x8190>
test   %eax,%eax
je     8057a8e <sidput@plt+0x9f2e>
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8057a8e <sidput@plt+0x9f2e>
mov    0x40(%esp),%edi
mov    0x2c(%ebx),%eax
mov    %edi,%edx
call   8055c50 <sidput@plt+0x80f0>
test   %eax,%eax
je     8057d5d <sidput@plt+0xa1fd>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%eax
jmp    805764b <sidput@plt+0x9aeb>
lea    0x0(%esi,%eiz,1),%esi
orb    $0x1,0x4(%esi)
lea    0x50(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8057690 <sidput@plt+0x9b30>
mov    0x84(%esp),%edx
lea    0x4(%ebx),%eax
mov    %esi,%ecx
call   8055cf0 <sidput@plt+0x8190>
test   %eax,%eax
je     8057a8e <sidput@plt+0x9f2e>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%edi
je     8057de9 <sidput@plt+0xa289>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,0x1c(%ebx)
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%eax
jmp    805764b <sidput@plt+0x9aeb>
nop
lea    0x50(%esp),%eax
orb    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8057690 <sidput@plt+0x9b30>
mov    0x50(%esp),%eax
add    $0x24,%ebx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
mov    %eax,%edx
mov    $0x1,%eax
test   %edx,%edx
jne    805764b <sidput@plt+0x9aeb>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    8057690 <sidput@plt+0x9b30>
xchg   %ax,%ax
lea    0x50(%esp),%eax
orb    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8057690 <sidput@plt+0x9b30>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x50(%esp),%eax
mov    %eax,0x18(%ebx)
mov    $0x1,%eax
jmp    805764b <sidput@plt+0x9aeb>
nop
lea    0x50(%esp),%eax
orb    $0x1,0x4(%esi)
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8057690 <sidput@plt+0x9b30>
mov    0x50(%esp),%eax
add    $0x28,%ebx
mov    %eax,0x4(%esp)
jmp    80579c6 <sidput@plt+0x9e66>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x88(%esp),%eax
movl   $0x80979a4,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    805764b <sidput@plt+0x9aeb>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8057690 <sidput@plt+0x9b30>
mov    0x84(%esp),%edx
lea    0x4(%ebx),%eax
mov    %ebp,%ecx
call   8055cf0 <sidput@plt+0x8190>
test   %eax,%eax
jne    8057af7 <sidput@plt+0x9f97>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8057690 <sidput@plt+0x9b30>
mov    0x8(%esi),%eax
movl   $0x8097a98,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    8057756 <sidput@plt+0x9bf6>
mov    0x84(%esp),%edx
lea    0x4(%ebx),%eax
mov    %edi,%ecx
call   8055cf0 <sidput@plt+0x8190>
test   %eax,%eax
jne    80577ee <sidput@plt+0x9c8e>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8057690 <sidput@plt+0x9b30>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8057cb1 <sidput@plt+0xa151>
mov    0x88(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8089fd0 <dbus_shutdown+0xb2f0>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8057d0b <sidput@plt+0xa1ab>
lea    0x40(%esp),%edi
mov    %edi,(%esp)
lea    0x50(%esp),%esi
call   806ad70 <dbus_error_init>
mov    %ebx,0x80(%esp)
mov    0x1c(%esp),%ebx
jmp    8057b50 <sidput@plt+0x9ff0>
nop
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   808a080 <dbus_shutdown+0xb3a0>
test   %eax,%eax
je     8057dba <sidput@plt+0xa25a>
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8057d99 <sidput@plt+0xa239>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     8057d19 <sidput@plt+0xa1b9>
lea    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     8057d19 <sidput@plt+0xa1b9>
movl   $0x809f093,0x4(%esp)
mov    %esi,(%esp)
call   808c390 <dbus_shutdown+0xd6b0>
test   %eax,%eax
je     8057b48 <sidput@plt+0x9fe8>
mov    0x88(%esp),%eax
mov    $0x1,%ecx
mov    %esi,%edx
mov    %eax,(%esp)
mov    0x80(%esp),%eax
call   8055ec0 <sidput@plt+0x8360>
test   %eax,%eax
jne    8057b48 <sidput@plt+0x9fe8>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     8057b48 <sidput@plt+0x9fe8>
mov    0x50(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x8097a6c,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8089d20 <dbus_shutdown+0xb040>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
jmp    8057b48 <sidput@plt+0x9fe8>
lea    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8057d99 <sidput@plt+0xa239>
mov    0x50(%esp),%eax
add    $0x30,%ebx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8057d8d <sidput@plt+0xa22d>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   808a180 <dbus_shutdown+0xb4a0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x0(%esi),%esi
mov    $0x1,%eax
jmp    805764b <sidput@plt+0x9aeb>
xor    %eax,%eax
jmp    8057742 <sidput@plt+0x9be2>
mov    0x88(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
jmp    805764b <sidput@plt+0x9aeb>
mov    0x88(%esp),%eax
movl   $0x8097a2c,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8057649 <sidput@plt+0x9ae9>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8057cd0 <sidput@plt+0xa170>
mov    0x88(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   808a180 <dbus_shutdown+0xb4a0>
jmp    8057cd0 <sidput@plt+0xa170>
add    $0x2c,%ebx
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    8057917 <sidput@plt+0x9db7>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    8057690 <sidput@plt+0x9b30>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x88(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8057d40 <sidput@plt+0xa1e0>
mov    %edi,(%esp)
mov    0x80(%esp),%ebx
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     8057c4a <sidput@plt+0xa0ea>
mov    0x88(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
jmp    8057d40 <sidput@plt+0xa1e0>
mov    0x88(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
jmp    805764b <sidput@plt+0x9aeb>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%edx
mov    0x14(%edx),%ecx
test   %ecx,%ecx
je     8057e70 <sidput@plt+0xa310>
add    $0x14,%edx
mov    %edx,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
test   %eax,%eax
je     8057ea8 <sidput@plt+0xa348>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80582d0 <sidput@plt+0xa770>
movl   $0x8097ae4,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
testb  $0x8,0x88(%edx)
mov    $0x1,%eax
je     8057e69 <sidput@plt+0xa309>
mov    0x24(%edx),%edx
test   %edx,%edx
jne    8057e69 <sidput@plt+0xa309>
mov    0x24(%esp),%eax
movl   $0x8097b18,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8057e69 <sidput@plt+0xa309>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8057e3f <sidput@plt+0xa2df>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x18(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x20(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
add    $0x24,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
add    $0x28,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
add    $0x2c,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
add    $0x30,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x88(%eax),%eax
and    $0x1,%eax
ret
nop
mov    0x4(%esp),%eax
movzbl 0x88(%eax),%eax
shr    %al
and    $0x1,%eax
ret
jmp    8057f40 <sidput@plt+0xa3e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
movzbl 0x88(%eax),%eax
shr    $0x2,%al
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movzbl 0x88(%eax),%eax
shr    $0x4,%al
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x7c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x1c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    0x34(%edx),%eax
movl   $0x0,0x34(%edx)
ret
nop
push   %edi
mov    $0x11,%ecx
push   %esi
mov    0xc(%esp),%eax
mov    0x10(%esp),%edi
lea    0x38(%eax),%esi
rep movsl %ds:(%esi),%es:(%edi)
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    0x84(%edx),%eax
movl   $0x0,0x84(%edx)
00
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    $0x5,%ecx
push   %esi
mov    $0x8097f64,%edi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
xor    %eax,%eax
cmp    %dl,%cl
je     8058048 <sidput@plt+0xa4e8>
mov    $0xa,%ecx
mov    $0x8097c62,%edi
mov    %ebx,%esi
mov    $0x1,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     8058048 <sidput@plt+0xa4e8>
mov    $0x5,%ecx
mov    $0x8097e99,%edi
mov    %ebx,%esi
mov    $0x3,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
jne    8058050 <sidput@plt+0xa4f0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    $0x5,%ecx
mov    $0x8097c85,%edi
mov    %ebx,%esi
mov    $0x5,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     8058048 <sidput@plt+0xa4e8>
mov    $0x5,%ecx
mov    $0x809c204,%edi
mov    %ebx,%esi
mov    $0xf,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     8058048 <sidput@plt+0xa4e8>
mov    $0x5,%ecx
mov    $0x8099f54,%edi
mov    %ebx,%esi
mov    $0xa,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     8058048 <sidput@plt+0xa4e8>
mov    $0x8,%ecx
mov    $0x8099f5d,%edi
mov    %ebx,%esi
mov    $0xb,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     8058048 <sidput@plt+0xa4e8>
mov    $0x7,%ecx
mov    $0x8097c7e,%edi
mov    %ebx,%esi
mov    $0x4,%al
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097d7f,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x8,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097d85,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x9,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097c8a,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0xd,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097c98,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0xe,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097ca3,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x12,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097cc0,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x13,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097cec,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0xc,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097d2f,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x2,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097d4a,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x6,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097d63,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x7,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097d69,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x10,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097d8a,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x11,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097c6c,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x15,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097c73,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x14,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097cdc,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
mov    $0x16,%eax
test   %edx,%edx
je     8058048 <sidput@plt+0xa4e8>
movl   $0x8097d76,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0x17,%eax
jmp    8058048 <sidput@plt+0xa4e8>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
lea    -0x1(%eax),%edx
xor    %eax,%eax
cmp    $0x16,%edx
ja     80582e5 <sidput@plt+0xa785>
mov    0x8097f80(,%edx,4),%eax
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%edx
mov    (%edx),%eax
test   %eax,%eax
je     8058308 <sidput@plt+0xa7a8>
mov    0x8(%edx),%edx
mov    %edx,0x4(%esp)
jmp    *%eax
nop
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x80b8310,%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8069db0 <dbus_connection_get_data>
mov    (%eax),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8058310 <sidput@plt+0xa7b0>
mov    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8088270 <dbus_shutdown+0x9590>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x14,%esp
mov    0x4(%edx),%edx
test   %edx,%edx
je     8058388 <sidput@plt+0xa828>
mov    %edx,(%esp)
call   806e970 <dbus_message_unref>
mov    0x8(%ebx),%edx
test   %edx,%edx
je     805839b <sidput@plt+0xa83b>
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   8065850 <dbus_connection_free_preallocated_send>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x4(%ebx),%eax
test   %eax,%eax
je     80583d7 <sidput@plt+0xa877>
mov    0x8(%ebx),%edx
mov    %edx,(%esp)
call   *%eax
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
mov    %ecx,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    %edx,0x4(%esp)
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   807c4f0 <dbus_watch_handle+0x930>
add    %eax,%edi
je     8058430 <sidput@plt+0xa8d0>
mov    0x18(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807c6b0 <dbus_watch_handle+0xaf0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807c5d0 <dbus_watch_handle+0xa10>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8058310 <sidput@plt+0xa7b0>
mov    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    80881e0 <dbus_shutdown+0x9500>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8067c50 <dbus_connection_close>
mov    $0x1,%eax
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
cmpl   $0x1,0x24(%esp)
mov    0x20(%esp),%esi
mov    0x28(%esp),%ebx
jne    80584bd <sidput@plt+0xa95d>
jmp    80584cd <sidput@plt+0xa96d>
xchg   %ax,%ax
call   8088380 <dbus_shutdown+0x96a0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8088310 <dbus_shutdown+0x9630>
test   %eax,%eax
je     80584b8 <sidput@plt+0xa958>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     8058503 <sidput@plt+0xa9a3>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x80b8310,%eax
mov    0x20(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    0x48(%eax),%edi
mov    %eax,%ebx
mov    %esi,(%esp)
call   8065300 <dbus_connection_has_messages_to_send+0x9b0>
test   %eax,%eax
mov    %eax,%esi
jg     8058578 <sidput@plt+0xaa18>
test   %esi,%esi
je     8058550 <sidput@plt+0xa9f0>
mov    %esi,0x48(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
jle    8058542 <sidput@plt+0xa9e2>
movl   $0x0,0x4(%esp)
mov    0x4c(%ebx),%eax
mov    %eax,(%esp)
call   8077f70 <dbus_type_is_fixed+0x110>
mov    %esi,0x48(%ebx)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
jne    805853e <sidput@plt+0xa9de>
mov    (%ebx),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8052ee0 <sidput@plt+0x5380>
mov    %eax,0x4(%esp)
mov    0x4c(%ebx),%eax
mov    %eax,(%esp)
call   8077f60 <dbus_type_is_fixed+0x100>
movl   $0x1,0x4(%esp)
mov    0x4c(%ebx),%eax
mov    %eax,(%esp)
call   8077f70 <dbus_type_is_fixed+0x110>
jmp    805853e <sidput@plt+0xa9de>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x80b8310,%eax
mov    0x24(%esp),%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %ebx,0x24(%esp)
mov    (%eax),%eax
mov    0x14(%eax),%eax
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8052e80 <sidput@plt+0x5320>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8058310 <sidput@plt+0xa7b0>
mov    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    80880c0 <dbus_shutdown+0x93e0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8058310 <sidput@plt+0xa7b0>
mov    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8088100 <dbus_shutdown+0x9420>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%ebx
call   8058310 <sidput@plt+0xa7b0>
mov    %ebx,0x14(%esp)
mov    %eax,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    8087f70 <dbus_shutdown+0x9290>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x28(%ebx),%eax
test   %eax,%eax
je     805869e <sidput@plt+0xab3e>
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8065850 <dbus_connection_free_preallocated_send>
mov    0x24(%ebx),%eax
test   %eax,%eax
je     80586ad <sidput@plt+0xab4d>
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
mov    0x2c(%ebx),%eax
test   %eax,%eax
je     80586bc <sidput@plt+0xab5c>
mov    %eax,(%esp)
call   805f1a0 <sidput@plt+0x11640>
mov    0x34(%ebx),%eax
test   %eax,%eax
je     80586cb <sidput@plt+0xab6b>
mov    %eax,(%esp)
call   805ff60 <sidput@plt+0x12400>
mov    0x38(%ebx),%eax
test   %eax,%eax
je     80586da <sidput@plt+0xab7a>
mov    %eax,(%esp)
call   8051700 <sidput@plt+0x3ba0>
mov    0x30(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
push   %ebp
mov    %ecx,%ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
lea    0x4(%eax),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
jmp    8058726 <sidput@plt+0xabc6>
lea    0x0(%esi,%eiz,1),%esi
call   *%edi
test   %eax,%eax
je     8058758 <sidput@plt+0xabf8>
test   %ebx,%ebx
je     8058748 <sidput@plt+0xabe8>
mov    0x8(%ebx),%eax
mov    0x4(%ebx),%ebx
cmp    0x4(%esi),%ebx
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
jne    8058720 <sidput@plt+0xabc0>
call   *%edi
test   %eax,%eax
je     8058758 <sidput@plt+0xabf8>
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    0x24(%eax),%eax
mov    %eax,(%esp)
call   805e7e0 <sidput@plt+0x10c80>
mov    (%ebx),%eax
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    0x24(%eax),%eax
mov    %eax,(%esp)
call   805e860 <sidput@plt+0x10d00>
movl   $0x0,(%ebx)
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x10,%esp
movl   $0x80b8310,(%esp)
mov    0x20(%esp),%esi
call   8069be0 <dbus_connection_allocate_data_slot>
test   %eax,%eax
je     80588bd <sidput@plt+0xad5d>
movl   $0x28,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     80588f1 <sidput@plt+0xad91>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x18(%ebx)
je     80588e9 <sidput@plt+0xad89>
movl   $0x0,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x8058a50,0x4(%esp)
movl   $0x64,(%esp)
call   8077f00 <dbus_type_is_fixed+0xa0>
test   %eax,%eax
mov    %eax,0x1c(%ebx)
je     80588de <sidput@plt+0xad7e>
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   8077f70 <dbus_type_is_fixed+0x110>
mov    %esi,(%esp)
call   8052f60 <sidput@plt+0x5400>
mov    %esi,(%esp)
mov    %eax,%edi
call   8052e70 <sidput@plt+0x5310>
mov    %ebx,0xc(%esp)
movl   $0x805a1d0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   805e4b0 <sidput@plt+0x10950>
test   %eax,%eax
mov    %eax,0x24(%ebx)
je     80588d3 <sidput@plt+0xad73>
mov    0x1c(%ebx),%edi
mov    %esi,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80881e0 <dbus_shutdown+0x9500>
test   %eax,%eax
je     80588c8 <sidput@plt+0xad68>
movl   $0x1,(%ebx)
mov    %esi,0x14(%ebx)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   805e570 <sidput@plt+0x10a10>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
movl   $0x80b8310,(%esp)
xor    %ebx,%ebx
call   8069c20 <dbus_connection_free_data_slot>
jmp    80588bd <sidput@plt+0xad5d>
jmp    8058910 <sidput@plt+0xadb0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0xffffffff,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%esi
mov    0xc(%esi),%edx
test   %edx,%edx
je     8058a29 <sidput@plt+0xaec9>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8052ed0 <sidput@plt+0x5370>
mov    %eax,%edi
lea    0xc(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     8058a40 <sidput@plt+0xaee0>
mov    %edi,0x28(%esp)
fildl  0x28(%esp)
fstpl  0x20(%esp)
jmp    80589b5 <sidput@plt+0xae55>
lea    0x0(%esi),%esi
fstpl  0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x8097fdc,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8052f80 <sidput@plt+0x5420>
mov    %ebx,(%esp)
call   8067c50 <dbus_connection_close>
test   %ebp,%ebp
je     8058a40 <sidput@plt+0xaee0>
mov    %ebp,%eax
mov    0x4(%eax),%ebp
mov    $0x0,%edx
mov    0x8(%eax),%ebx
mov    0x80b8310,%eax
cmp    0xc(%esi),%ebp
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
cmove  %edx,%ebp
call   8069db0 <dbus_connection_get_data>
fildl  0x38(%esp)
fildl  0x3c(%eax)
fsubrp %st,%st(1)
flds   0x80981e4
fmul   %st,%st(1)
fildl  0x3c(%esp)
fildl  0x40(%eax)
fsubrp %st,%st(1)
fdivp  %st,%st(1)
faddp  %st,%st(1)
fldl   0x20(%esp)
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    8058980 <sidput@plt+0xae20>
fnstcw 0x2e(%esp)
fsubrl 0x20(%esp)
movzwl 0x2e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x2c(%esp)
fldcw  0x2c(%esp)
fistpl 0x28(%esp)
fldcw  0x2e(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   805e5b0 <sidput@plt+0x10a50>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0xffffffff,%eax
jmp    8058a29 <sidput@plt+0xaec9>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8058920 <sidput@plt+0xadc0>
mov    $0x1,%eax
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x30,%esp
movl   $0x50,(%esp)
mov    0x44(%esp),%esi
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     8058c7b <sidput@plt+0xb11b>
mov    0x40(%esp),%eax
mov    %esi,0x8(%ebx)
mov    %eax,(%ebx)
lea    0x40(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x3c(%ebx),%eax
mov    %eax,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
mov    0x80b8310,%eax
movl   $0x8058680,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8069c90 <dbus_connection_set_data>
test   %eax,%eax
je     8058c88 <sidput@plt+0xb128>
lea    0x20(%esp),%edi
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8069040 <dbus_connection_set_route_peer_messages>
mov    %edi,(%esp)
call   806ad70 <dbus_error_init>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8060480 <sidput@plt+0x12920>
mov    %edi,(%esp)
mov    %eax,0x34(%ebx)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8058b28 <sidput@plt+0xafc8>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8051790 <sidput@plt+0x3c30>
mov    %edi,(%esp)
mov    %eax,0x38(%ebx)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     8058ca0 <sidput@plt+0xb140>
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
mov    0x34(%ebx),%eax
test   %eax,%eax
je     8058b3f <sidput@plt+0xafdf>
mov    %eax,(%esp)
call   805ff60 <sidput@plt+0x12400>
mov    0x38(%ebx),%eax
movl   $0x0,0x34(%ebx)
test   %eax,%eax
je     8058b55 <sidput@plt+0xaff5>
mov    %eax,(%esp)
call   8051700 <sidput@plt+0x3ba0>
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x38(%ebx)
call   80659c0 <dbus_connection_set_watch_functions>
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065a80 <dbus_connection_set_timeout_functions>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80660b0 <dbus_connection_set_unix_user_function>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8068ee0 <dbus_connection_set_windows_user_function>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8065be0 <dbus_connection_set_dispatch_status_function>
mov    0x4c(%ebx),%eax
test   %eax,%eax
je     8058c23 <sidput@plt+0xb0c3>
mov    %eax,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x4c(%ebx)
call   8065330 <dbus_connection_has_messages_to_send+0x9e0>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     8058c58 <sidput@plt+0xb0f8>
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
movl   $0x0,0x4(%ebx)
mov    0x80b8310,%eax
xor    %edi,%edi
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8069c90 <dbus_connection_set_data>
add    $0x30,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
add    $0x30,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x80585f0,0xc(%esp)
movl   $0x8058620,0x8(%esp)
movl   $0x8058650,0x4(%esp)
mov    %esi,(%esp)
call   80659c0 <dbus_connection_set_watch_functions>
test   %eax,%eax
je     8058b30 <sidput@plt+0xafd0>
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x8058340,0x8(%esp)
movl   $0x8058450,0x4(%esp)
mov    %esi,(%esp)
call   8065a80 <dbus_connection_set_timeout_functions>
test   %eax,%eax
je     8058b30 <sidput@plt+0xafd0>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80585b0,0x4(%esp)
mov    %esi,(%esp)
call   80660b0 <dbus_connection_set_unix_user_function>
mov    0x40(%esp),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
movl   $0x0,0xc(%esp)
movl   $0x80584a0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8065be0 <dbus_connection_set_dispatch_status_function>
mov    %esi,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
test   %eax,%eax
mov    %eax,0x4(%ebx)
je     8058b30 <sidput@plt+0xafd0>
mov    %esi,(%esp)
call   805bdc0 <sidput@plt+0xe260>
test   %eax,%eax
je     8058b30 <sidput@plt+0xafd0>
mov    %esi,(%esp)
call   8065930 <dbus_connection_get_dispatch_status>
cmp    $0x1,%eax
je     8058da6 <sidput@plt+0xb246>
mov    0x40(%esp),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8088310 <dbus_shutdown+0x9630>
test   %eax,%eax
je     8058e64 <sidput@plt+0xb304>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x8058480,0x4(%esp)
movl   $0x64,(%esp)
call   8077f00 <dbus_type_is_fixed+0xa0>
test   %eax,%eax
mov    %eax,0x4c(%ebx)
je     8058b30 <sidput@plt+0xafd0>
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   8077f70 <dbus_type_is_fixed+0x110>
mov    0x40(%esp),%eax
mov    0x4c(%ebx),%edi
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80881e0 <dbus_shutdown+0x9500>
test   %eax,%eax
je     8058b30 <sidput@plt+0xafd0>
mov    %esi,0x8(%esp)
mov    $0x1,%edi
movl   $0x8058510,0x4(%esp)
mov    %esi,(%esp)
call   8065330 <dbus_connection_has_messages_to_send+0x9e0>
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
add    $0xc,%eax
mov    %eax,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    0x40(%esp),%eax
addl   $0x1,0x10(%eax)
mov    %esi,(%esp)
call   8065370 <dbus_connection_ref>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8058920 <sidput@plt+0xadc0>
mov    (%ebx),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8054670 <sidput@plt+0x6b10>
jmp    8058c7b <sidput@plt+0xb11b>
mov    %esi,(%esp)
call   805be00 <sidput@plt+0xe2a0>
lea    0x0(%esi,%eiz,1),%esi
jmp    8058b30 <sidput@plt+0xafd0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x34(%esp),%ebx
lea    0x1c(%esp),%eax
mov    0x38(%esp),%esi
movl   $0x0,(%ebx)
movl   $0x0,(%esi)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8065de0 <dbus_connection_get_unix_user>
mov    $0x1,%edx
test   %eax,%eax
je     8058ed1 <sidput@plt+0xb371>
mov    0x1c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   808a250 <dbus_shutdown+0xb570>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
lea    0x1c(%esp),%eax
mov    0x34(%esp),%ebx
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
call   8058e80 <sidput@plt+0xb320>
xor    %edx,%edx
test   %eax,%eax
je     8058f3e <sidput@plt+0xb3de>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
test   %ecx,%ecx
jle    8058f34 <sidput@plt+0xb3d4>
xor    %eax,%eax
cmp    %ebx,(%edx)
jne    8058f2d <sidput@plt+0xb3cd>
jmp    8058f48 <sidput@plt+0xb3e8>
xchg   %ax,%ax
cmp    %ebx,(%edx,%eax,4)
je     8058f48 <sidput@plt+0xb3e8>
add    $0x1,%eax
cmp    %ecx,%eax
jne    8058f28 <sidput@plt+0xb3c8>
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
xor    %edx,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    0x2c(%eax),%eax
add    $0x1c,%esp
ret
nop
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
jmp    8058700 <sidput@plt+0xaba0>
jmp    8058fa0 <sidput@plt+0xb440>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
mov    %esi,%eax
mov    %edi,%edx
mov    %ebp,%ecx
call   8058700 <sidput@plt+0xaba0>
test   %eax,%eax
jne    8058fd0 <sidput@plt+0xb470>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0xc(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
jmp    8058fed <sidput@plt+0xb48d>
nop
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
test   %eax,%eax
je     8058fc2 <sidput@plt+0xb462>
test   %ebx,%ebx
je     8058fc2 <sidput@plt+0xb462>
mov    0x8(%ebx),%eax
mov    0x4(%ebx),%ebx
cmp    0xc(%esi),%ebx
jne    8058fe0 <sidput@plt+0xb480>
mov    %ebp,0x34(%esp)
mov    %eax,0x30(%esp)
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    *%eax
nop
mov    0x4(%esp),%eax
mov    0x14(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
addl   $0x1,0x20(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    (%eax),%edx
mov    0x20(%edx),%edx
cmp    %edx,0x44(%eax)
je     8059060 <sidput@plt+0xb500>
mov    %edx,0x44(%eax)
mov    $0x1,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    (%eax),%eax
mov    0x14(%eax),%eax
add    $0x1c,%esp
ret
jmp    80590a0 <sidput@plt+0xb540>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    (%eax),%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    (%eax),%eax
mov    0x14(%eax),%eax
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    8052e30 <sidput@plt+0x52d0>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    (%eax),%eax
mov    0x14(%eax),%eax
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    8052e50 <sidput@plt+0x52f0>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    (%eax),%eax
mov    0x14(%eax),%eax
mov    %eax,0x20(%esp)
add    $0x1c,%esp
jmp    8052e60 <sidput@plt+0x5300>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    0x34(%eax),%eax
add    $0x1c,%esp
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%ebx
mov    0x38(%eax),%eax
mov    %eax,(%esp)
call   8051770 <sidput@plt+0x3c10>
mov    0x38(%ebx),%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
test   %eax,%eax
je     80591d0 <sidput@plt+0xb670>
mov    0x1c(%eax),%eax
test   %eax,%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80b8310,%eax
mov    0x20(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %ebx,(%esp)
mov    %eax,%esi
call   80591a0 <sidput@plt+0xb640>
mov    %eax,%ecx
mov    $0x80981ba,%eax
test   %ecx,%ecx
je     8059212 <sidput@plt+0xb6b2>
mov    0x30(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%ebx
mov    0x28(%eax),%eax
test   %eax,%eax
je     8059258 <sidput@plt+0xb6f8>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
xor    %si,%si
mov    %eax,(%esp)
call   80657c0 <dbus_connection_preallocate_send>
test   %eax,%eax
mov    %eax,%ebp
je     805924a <sidput@plt+0xb6ea>
movl   $0x3,(%esp)
call   806f280 <dbus_message_new>
test   %eax,%eax
mov    %eax,%edi
je     8059307 <sidput@plt+0xb7a7>
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   8071f70 <dbus_message_set_error_name>
test   %eax,%eax
je     80592e8 <sidput@plt+0xb788>
mov    0x1c(%ebx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80720e0 <dbus_message_set_destination>
test   %eax,%eax
je     80592e8 <sidput@plt+0xb788>
movl   $0x8096b7c,0x4(%esp)
mov    %edi,(%esp)
call   8072250 <dbus_message_set_sender>
test   %eax,%eax
je     80592e8 <sidput@plt+0xb788>
movl   $0xe,0x4(%esp)
mov    %edi,(%esp)
call   806f110 <dbus_message_set_reply_serial>
test   %eax,%eax
je     805931c <sidput@plt+0xb7bc>
mov    %edi,0x24(%ebx)
mov    $0x1,%esi
mov    %ebp,0x28(%ebx)
jmp    805924a <sidput@plt+0xb6ea>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
xor    %esi,%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8065850 <dbus_connection_free_preallocated_send>
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
jmp    805924a <sidput@plt+0xb6ea>
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8065850 <dbus_connection_free_preallocated_send>
jmp    805924a <sidput@plt+0xb6ea>
mov    0x30(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8065850 <dbus_connection_free_preallocated_send>
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
jmp    805924a <sidput@plt+0xb6ea>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80b8310,%eax
mov    0x20(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%ebx
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   806f0a0 <dbus_message_get_serial>
mov    %eax,0x4(%esp)
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   806f110 <dbus_message_set_reply_serial>
movl   $0x0,0xc(%esp)
mov    0x24(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x28(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8066bf0 <dbus_connection_send_preallocated>
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
movl   $0x0,0x24(%ebx)
movl   $0x0,0x28(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%ebx
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x14(%ebx),%eax
mov    %eax,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
addl   $0x1,0x18(%ebx)
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
xor    %edx,%edx
test   %eax,%eax
je     805942a <sidput@plt+0xb8ca>
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80593c0 <sidput@plt+0xb860>
mov    $0x1,%edx
mov    %edx,%eax
add    $0x1c,%esp
ret
push   %ebx
sub    $0x18,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%ebx
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x14(%ebx),%eax
mov    %eax,(%esp)
call   807d960 <dbus_watch_handle+0x1da0>
subl   $0x1,0x18(%ebx)
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    0x18(%eax),%eax
add    $0x1c,%esp
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%ebx
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    0xc(%ebx),%eax
mov    %eax,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
addl   $0x1,0x10(%ebx)
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
xor    %edx,%edx
test   %eax,%eax
je     80594fa <sidput@plt+0xb99a>
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8059490 <sidput@plt+0xb930>
mov    $0x1,%edx
mov    %edx,%eax
add    $0x1c,%esp
ret
push   %ebx
sub    $0x18,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%ebx
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    0xc(%ebx),%eax
mov    %eax,(%esp)
call   807d960 <dbus_watch_handle+0x1da0>
subl   $0x1,0x10(%ebx)
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    0x10(%eax),%eax
add    $0x1c,%esp
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x80b8310,%eax
mov    0x50(%esp),%esi
mov    0x58(%esp),%edi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%ebx
lea    0x1c(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8059688 <sidput@plt+0xbb28>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8052eb0 <sidput@plt+0x5350>
test   %eax,%eax
mov    %eax,0x2c(%ebx)
je     8059818 <sidput@plt+0xbcb8>
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065de0 <dbus_connection_get_unix_user>
test   %eax,%eax
jne    8059630 <sidput@plt+0xbad0>
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    8059654 <sidput@plt+0xbaf4>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %edi,(%esp)
call   806af90 <dbus_set_error_const>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%ebx),%eax
movl   $0x0,0x1c(%ebx)
test   %eax,%eax
je     805961a <sidput@plt+0xbaba>
mov    %eax,(%esp)
call   805f1a0 <sidput@plt+0x11640>
movl   $0x0,0x2c(%ebx)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%edx
mov    $0x1,%ecx
mov    (%ebx),%eax
call   80583f0 <sidput@plt+0xa890>
test   %eax,%eax
je     80595e1 <sidput@plt+0xba81>
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80595e1 <sidput@plt+0xba81>
lea    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065de0 <dbus_connection_get_unix_user>
test   %eax,%eax
jne    80596b0 <sidput@plt+0xbb50>
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    80596fc <sidput@plt+0xbb9c>
jmp    8059754 <sidput@plt+0xbbf4>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
call   806af90 <dbus_set_error_const>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x14(%esp),%eax
movl   $0x80981c3,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     8059808 <sidput@plt+0xbca8>
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
je     8059754 <sidput@plt+0xbbf4>
movl   $0x20,0x4(%esp)
mov    %ebp,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8059808 <sidput@plt+0xbca8>
mov    0x18(%esp),%eax
movl   $0x80981cb,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     8059808 <sidput@plt+0xbca8>
mov    0x18(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x32,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   808a3f0 <dbus_shutdown+0xb710>
movl   $0x22,0x4(%esp)
mov    %ebp,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8059808 <sidput@plt+0xbca8>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8068e00 <dbus_connection_get_windows_user>
test   %eax,%eax
je     8059792 <sidput@plt+0xbc32>
mov    0x1c(%esp),%eax
movl   $0x80981da,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
mov    %eax,%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
test   %esi,%esi
je     8059808 <sidput@plt+0xbca8>
lea    0x30(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     8059808 <sidput@plt+0xbca8>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
add    $0xc,%eax
mov    %eax,(%esp)
call   807d7e0 <dbus_watch_handle+0x1c20>
mov    (%ebx),%eax
subl   $0x1,0x10(%eax)
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    (%ebx),%eax
addl   $0x1,0x8(%eax)
mov    (%ebx),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8054670 <sidput@plt+0x6b10>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8058920 <sidput@plt+0xadc0>
mov    $0x1,%eax
jmp    8059623 <sidput@plt+0xbac3>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    80595e1 <sidput@plt+0xba81>
lea    0x0(%esi),%esi
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
movl   $0x0,0x1c(%ebx)
jmp    8059623 <sidput@plt+0xbac3>
jmp    8059840 <sidput@plt+0xbce0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub    $0x1c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    0x1c(%eax),%eax
add    $0x1c,%esp
ret
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    0x14(%ebx),%eax
mov    0x8(%ebx),%esi
mov    %eax,(%esp)
call   8052ef0 <sidput@plt+0x5390>
cmp    %eax,%esi
jge    80598f0 <sidput@plt+0xbd90>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8065de0 <dbus_connection_get_unix_user>
test   %eax,%eax
jne    80598a0 <sidput@plt+0xbd40>
mov    $0x1,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   807c4f0 <dbus_watch_handle+0x930>
mov    %eax,%esi
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8052f10 <sidput@plt+0x53b0>
cmp    %eax,%esi
jl     8059893 <sidput@plt+0xbd33>
mov    0x1c(%esp),%eax
movl   $0x8098078,0x8(%esp)
movl   $0x8096864,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8059898 <sidput@plt+0xbd38>
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
movl   $0x809803c,0x8(%esp)
movl   $0x8096864,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
movl   $0xc,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     805993a <sidput@plt+0xbdda>
mov    0x20(%esp),%edx
mov    %edx,0x4(%eax)
add    $0x1c,%esp
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x4(%esp)
jmp    8052e40 <sidput@plt+0x52e0>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x30(%esp),%ebx
mov    %esi,(%esp)
call   8065400 <dbus_connection_get_is_connected>
test   %eax,%eax
jne    8059990 <sidput@plt+0xbe30>
mov    $0x1,%ebp
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x80b8310,%eax
xor    %ebp,%ebp
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8069db0 <dbus_connection_get_data>
movl   $0xc,(%esp)
mov    %eax,0x8(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%edi
je     8059980 <sidput@plt+0xbe20>
mov    %esi,(%esp)
call   80657c0 <dbus_connection_preallocate_send>
test   %eax,%eax
mov    %eax,0x8(%edi)
je     8059a88 <sidput@plt+0xbf28>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806f720 <dbus_message_ref>
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebx,(%edi)
mov    %eax,0x4(%edi)
mov    0x8(%esp),%eax
add    $0x20,%eax
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   807d570 <dbus_watch_handle+0x19b0>
test   %eax,%eax
je     8059a70 <sidput@plt+0xbf10>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x8(%esp),%ecx
mov    0x20(%ecx),%ecx
mov    0x4(%eax),%eax
cmp    %ecx,%eax
jne    8059a20 <sidput@plt+0xbec0>
jmp    8059a38 <sidput@plt+0xbed8>
cmp    %ebx,(%edx)
je     805997b <sidput@plt+0xbe1b>
test   %eax,%eax
je     8059a38 <sidput@plt+0xbed8>
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
cmp    %eax,%ecx
jne    8059a18 <sidput@plt+0xbeb8>
cmp    %ebx,(%edx)
je     805997b <sidput@plt+0xbe1b>
xchg   %ax,%ax
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   807d570 <dbus_watch_handle+0x19b0>
test   %eax,%eax
jne    805997b <sidput@plt+0xbe1b>
mov    0xc(%esp),%eax
xor    %ebp,%ebp
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
mov    %edi,%edx
mov    %esi,%eax
call   8058370 <sidput@plt+0xa810>
jmp    8059980 <sidput@plt+0xbe20>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
mov    %edi,%edx
call   8058370 <sidput@plt+0xa810>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
jmp    8059980 <sidput@plt+0xbe20>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x38(%esp),%ebx
movl   $0x8096b7c,0x4(%esp)
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    %ebx,(%esp)
call   8072250 <dbus_message_set_sender>
test   %eax,%eax
jne    8059ad0 <sidput@plt+0xbf70>
xor    %eax,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
je     8059b00 <sidput@plt+0xbfa0>
mov    0x80b8310,%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8069db0 <dbus_connection_get_data>
mov    0x1c(%eax),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80720e0 <dbus_message_set_destination>
test   %eax,%eax
je     8059ac6 <sidput@plt+0xbf66>
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
call   80714a0 <dbus_message_set_no_reply>
movl   $0x0,0x18(%esp)
mov    %ebx,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8053f00 <sidput@plt+0x63a0>
mov    %eax,%edx
mov    $0x1,%eax
test   %edx,%edx
je     8059ac8 <sidput@plt+0xbf68>
mov    %ebx,0x38(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8059960 <sidput@plt+0xbe00>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8059be9 <sidput@plt+0xc089>
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%esi
lea    0x20(%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
jne    8059bb6 <sidput@plt+0xc056>
jmp    8059b70 <sidput@plt+0xc010>
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8059b70 <sidput@plt+0xc010>
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    0x8(%eax),%edx
cmp    0x20(%esi),%ebx
cmove  %edi,%ebx
cmp    (%edx),%ebp
jne    8059bb0 <sidput@plt+0xc050>
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    0x1c(%esp),%edx
mov    0x14(%esp),%eax
call   8058370 <sidput@plt+0xa810>
jmp    8059bb0 <sidput@plt+0xc050>
lea    0x8(%ebp),%ebx
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80582f0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80583c0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %ebx,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %ebp,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
test   %eax,%eax
mov    %eax,%edi
je     8059cfa <sidput@plt+0xc19a>
mov    0x80b8310,%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8069db0 <dbus_connection_get_data>
mov    %eax,%esi
lea    0x20(%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807d910 <dbus_watch_handle+0x1d50>
test   %eax,%eax
jne    8059c9c <sidput@plt+0xc13c>
jmp    8059c50 <sidput@plt+0xc0f0>
lea    0x0(%esi),%esi
cmp    (%edx),%ebp
mov    (%eax),%ebx
je     8059cb0 <sidput@plt+0xc150>
test   %ebx,%ebx
je     8059c50 <sidput@plt+0xc0f0>
mov    %ebx,%eax
cmp    0x20(%esi),%eax
mov    0x8(%eax),%edx
jne    8059c90 <sidput@plt+0xc130>
xor    %ebx,%ebx
cmp    (%edx),%ebp
jne    8059c96 <sidput@plt+0xc136>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    0x1c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    0x4(%edx),%eax
mov    %eax,0x8(%esp)
mov    0x8(%edx),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8066bf0 <dbus_connection_send_preallocated>
mov    0x1c(%esp),%edx
mov    %edi,%eax
movl   $0x0,0x8(%edx)
call   8058370 <sidput@plt+0xa810>
jmp    8059c96 <sidput@plt+0xc136>
lea    0x8(%ebp),%ebx
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80583c0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %ebx,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %ebp,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
mov    0x18(%eax),%ecx
mov    %eax,%edi
test   %ecx,%ecx
jle    8059d72 <sidput@plt+0xc212>
mov    (%eax),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8052e60 <sidput@plt+0x5300>
mov    0x50(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   8063a40 <sidput@plt+0x15ee0>
lea    0xc(%edi),%eax
mov    %eax,0x1c(%esp)
lea    0x20(%esp),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
test   %eax,%eax
mov    %eax,0x18(%esp)
jne    8059de4 <sidput@plt+0xc284>
jmp    8059e1d <sidput@plt+0xc2bd>
xchg   %ax,%ax
mov    %ebx,0x4(%eax)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %esi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8061340 <sidput@plt+0x137e0>
test   %eax,%eax
jne    8059e10 <sidput@plt+0xc2b0>
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
je     8059e10 <sidput@plt+0xc2b0>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
mov    %ebp,(%esp)
call   8059b60 <sidput@plt+0xc000>
call   8088380 <dbus_shutdown+0x96a0>
mov    %esi,(%esp)
call   806ad70 <dbus_error_init>
mov    (%edi),%eax
mov    0x14(%eax),%ebx
movl   $0xc,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebp
jne    8059d98 <sidput@plt+0xc238>
call   8088380 <dbus_shutdown+0x96a0>
jmp    8059dec <sidput@plt+0xc28c>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8059c40 <sidput@plt+0xc0e0>
jmp    8059d7d <sidput@plt+0xc21d>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   805be00 <sidput@plt+0xe2a0>
mov    0x50(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80659c0 <dbus_connection_set_watch_functions>
mov    0x50(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8065a80 <dbus_connection_set_timeout_functions>
mov    0x50(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80660b0 <dbus_connection_set_unix_user_function>
mov    0x50(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8068ee0 <dbus_connection_set_windows_user_function>
mov    0x50(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8065be0 <dbus_connection_set_dispatch_status_function>
mov    0x4c(%edi),%ebx
test   %ebx,%ebx
je     8059f20 <sidput@plt+0xc3c0>
mov    (%edi),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8088270 <dbus_shutdown+0x9590>
mov    0x4c(%edi),%eax
mov    %eax,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
mov    0x50(%esp),%eax
movl   $0x0,0x4c(%edi)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8065330 <dbus_connection_has_messages_to_send+0x9e0>
mov    0x80b8310,%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8069db0 <dbus_connection_get_data>
lea    0x20(%eax),%esi
jmp    8059f86 <sidput@plt+0xc426>
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
mov    0x50(%esp),%eax
mov    %ebx,%edx
call   8058370 <sidput@plt+0xa810>
mov    %esi,(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
test   %eax,%eax
mov    %eax,%ebx
jne    8059f5d <sidput@plt+0xc3fd>
mov    0x4(%edi),%eax
test   %eax,%eax
je     8059fec <sidput@plt+0xc48c>
mov    0x1c(%edi),%edx
mov    %eax,0x4(%esp)
mov    (%edi),%eax
test   %edx,%edx
je     805a0b8 <sidput@plt+0xc558>
add    $0x4,%eax
mov    %eax,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    (%edi),%eax
movl   $0x0,0x4(%edi)
subl   $0x1,0x8(%eax)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8065de0 <dbus_connection_get_unix_user>
test   %eax,%eax
je     8059fec <sidput@plt+0xc48c>
mov    0x20(%esp),%edx
mov    $0xffffffff,%ecx
mov    (%edi),%eax
call   80583f0 <sidput@plt+0xa890>
mov    (%edi),%edi
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   805e8b0 <sidput@plt+0x10d50>
test   %eax,%eax
mov    %eax,%esi
jne    805a00a <sidput@plt+0xc4aa>
jmp    805a032 <sidput@plt+0xc4d2>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%esi
mov    %esi,0x4(%esp)
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   805e8c0 <sidput@plt+0x10d60>
mov    0x8(%esi),%ebx
mov    0x8(%ebx),%ecx
cmp    %ecx,0x50(%esp)
je     805a094 <sidput@plt+0xc534>
mov    0xc(%ebx),%edx
cmp    %edx,0x50(%esp)
je     805a06b <sidput@plt+0xc50b>
test   %eax,%eax
jne    805a008 <sidput@plt+0xc4a8>
mov    0x80b8310,%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8069c90 <dbus_connection_set_data>
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0xc(%ebx)
movl   $0x0,(%ebx)
movl   $0x0,0x4(%ebx)
mov    0x24(%edi),%edx
mov    %eax,0x18(%esp)
mov    %edx,(%esp)
call   805e7b0 <sidput@plt+0x10c50>
mov    0x18(%esp),%eax
jmp    805a02e <sidput@plt+0xc4ce>
mov    %esi,0x4(%esp)
mov    0x24(%edi),%edx
mov    %eax,0x18(%esp)
mov    %edx,(%esp)
call   805e7d0 <sidput@plt+0x10c70>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esp),%eax
jmp    805a02e <sidput@plt+0xc4ce>
add    $0xc,%eax
mov    %eax,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    (%edi),%eax
movl   $0x0,0x4(%edi)
subl   $0x1,0x10(%eax)
mov    (%edi),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   8054670 <sidput@plt+0x6b10>
jmp    8059fec <sidput@plt+0xc48c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
subl   $0x1,(%esi)
je     805a12b <sidput@plt+0xc5cb>
jmp    805a1bf <sidput@plt+0xc65f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%ebx
mov    %ebx,(%esp)
call   8065370 <dbus_connection_ref>
mov    %ebx,(%esp)
call   8067c50 <dbus_connection_close>
mov    %ebx,(%esp)
call   8059d30 <sidput@plt+0xc1d0>
mov    %ebx,(%esp)
call   8066920 <dbus_connection_unref>
mov    0xc(%esi),%eax
test   %eax,%eax
jne    805a108 <sidput@plt+0xc5a8>
mov    0x4(%esi),%eax
test   %eax,%eax
je     805a16a <sidput@plt+0xc60a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%ebx
mov    %ebx,(%esp)
call   8065370 <dbus_connection_ref>
mov    %ebx,(%esp)
call   8067c50 <dbus_connection_close>
mov    %ebx,(%esp)
call   8059d30 <sidput@plt+0xc1d0>
mov    %ebx,(%esp)
call   8066920 <dbus_connection_unref>
mov    0x4(%esi),%eax
test   %eax,%eax
jne    805a140 <sidput@plt+0xc5e0>
mov    0x24(%esi),%eax
mov    %eax,(%esp)
call   805e570 <sidput@plt+0x10a10>
mov    0x14(%esi),%eax
mov    0x1c(%esi),%ebx
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8088270 <dbus_shutdown+0x9590>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
movl   $0x80b8310,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    8069c20 <dbus_connection_free_data_slot>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x78(%esp),%esi
mov    0x74(%esp),%eax
mov    0x14(%esi),%ebp
mov    0x8(%eax),%edi
movl   $0xc,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     805a300 <sidput@plt+0xc7a0>
mov    %ebp,0x4(%eax)
movl   $0x3,(%esp)
call   806f280 <dbus_message_new>
test   %eax,%eax
mov    %eax,%ebp
je     805a23b <sidput@plt+0xc6db>
mov    %eax,(%esp)
movl   $0x1,0x4(%esp)
call   80714a0 <dbus_message_set_no_reply>
mov    0x10(%edi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   806f110 <dbus_message_set_reply_serial>
test   %eax,%eax
jne    805a250 <sidput@plt+0xc6f0>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
mov    %ebx,(%esp)
call   8059b60 <sidput@plt+0xc000>
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x80980c0,0x4(%esp)
mov    %ebp,(%esp)
call   8071f70 <dbus_message_set_error_name>
test   %eax,%eax
je     805a233 <sidput@plt+0xc6d3>
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
movl   $0x80980e4,0x14(%esp)
call   8070660 <dbus_message_iter_init_append>
mov    0xc(%esp),%eax
lea    0x14(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %eax,(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
je     805a233 <sidput@plt+0xc6d3>
mov    %ebp,0x8(%esp)
mov    0x8(%edi),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
call   806e970 <dbus_message_unref>
mov    0xc(%esp),%eax
test   %eax,%eax
je     805a23b <sidput@plt+0xc6db>
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esi),%eax
mov    %eax,(%esp)
call   805e7d0 <sidput@plt+0x10c70>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
call   8059c40 <sidput@plt+0xc0e0>
add    $0x5c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x4(%eax),%edx
mov    %edx,0x8(%esp)
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   80724d0 <dbus_message_new_error>
test   %eax,%eax
mov    %eax,%ebx
je     805a363 <sidput@plt+0xc803>
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    %ebx,(%esp)
test   %eax,%eax
je     805a370 <sidput@plt+0xc810>
call   806e970 <dbus_message_unref>
mov    $0x1,%esi
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   806e970 <dbus_message_unref>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
movl   $0xc,(%esp)
call   807eb50 <dbus_malloc>
xor    %edx,%edx
test   %eax,%eax
mov    %eax,%ebx
je     805a3c8 <sidput@plt+0xc868>
mov    0x24(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%ebx)
mov    0x28(%esp),%eax
mov    %eax,0x8(%ebx)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%ebx)
mov    0x20(%esp),%eax
add    $0x8,%eax
mov    %eax,(%esp)
call   807d570 <dbus_watch_handle+0x19b0>
mov    $0x1,%edx
test   %eax,%eax
je     805a3d0 <sidput@plt+0xc870>
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
nop
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
xor    %edx,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
jmp    805a3f0 <sidput@plt+0xc890>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x50(%esp),%ebx
mov    0x40(%esp),%edi
mov    0x48(%esp),%esi
mov    %ebx,(%esp)
call   8071710 <dbus_message_get_no_reply>
mov    $0x1,%edx
test   %eax,%eax
je     805a420 <sidput@plt+0xc8c0>
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
xor    %ebx,%ebx
call   806f0a0 <dbus_message_get_serial>
mov    %eax,0x1c(%esp)
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   805e8b0 <sidput@plt+0x10d50>
test   %eax,%eax
jne    805a45d <sidput@plt+0xc8fd>
jmp    805a4a0 <sidput@plt+0xc940>
nop
mov    %eax,0x4(%esp)
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   805e8c0 <sidput@plt+0x10d60>
xor    %edx,%edx
cmp    %esi,0x8(%ebp)
sete   %dl
add    %edx,%ebx
test   %eax,%eax
je     805a4a0 <sidput@plt+0xc940>
mov    0x8(%eax),%ebp
mov    0x1c(%esp),%ecx
cmp    %ecx,0x10(%ebp)
jne    805a440 <sidput@plt+0xc8e0>
cmp    %esi,0x8(%ebp)
jne    805a440 <sidput@plt+0xc8e0>
mov    0x4c(%esp),%ecx
cmp    %ecx,0xc(%ebp)
jne    805a440 <sidput@plt+0xc8e0>
mov    0x54(%esp),%eax
movl   $0x8098120,0x8(%esp)
movl   $0x809707c,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %edx,%edx
jmp    805a414 <sidput@plt+0xc8b4>
lea    0x0(%esi),%esi
mov    0x14(%edi),%eax
mov    %eax,(%esp)
call   8052f50 <sidput@plt+0x53f0>
cmp    %ebx,%eax
jle    805a550 <sidput@plt+0xc9f0>
movl   $0x14,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     805a5b0 <sidput@plt+0xca50>
mov    %esi,0x8(%eax)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%ebx)
mov    0x1c(%esp),%eax
mov    %eax,0x10(%ebx)
movl   $0x8,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     805a5d3 <sidput@plt+0xca73>
mov    %ebx,0x4(%esp)
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   805e800 <sidput@plt+0x10ca0>
test   %eax,%eax
je     805a578 <sidput@plt+0xca18>
mov    0x44(%esp),%eax
movl   $0x80583b0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x8058770,0x4(%esp)
mov    %eax,(%esp)
call   805a380 <sidput@plt+0xc820>
test   %eax,%eax
je     805a5fe <sidput@plt+0xca9e>
lea    0x4(%ebx),%eax
mov    %ebx,(%esi)
mov    %edi,0x4(%esi)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
mov    $0x1,%edx
jmp    805a414 <sidput@plt+0xc8b4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
movl   $0x8098174,0x8(%esp)
movl   $0x8096864,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x2c,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x54(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
add    $0x2c,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x54(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %edx,%edx
jmp    805a414 <sidput@plt+0xc8b4>
mov    0x54(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
xor    %edx,%edx
jmp    805a414 <sidput@plt+0xc8b4>
mov    0x54(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,0x4(%esp)
mov    0x24(%edi),%eax
mov    %eax,(%esp)
call   805e7e0 <sidput@plt+0x10c80>
jmp    805a594 <sidput@plt+0xca34>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x40(%esp),%eax
mov    0x30(%esp),%ebx
mov    0x3c(%esp),%edi
mov    %eax,(%esp)
call   806f1f0 <dbus_message_get_reply_serial>
mov    %eax,%esi
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   805e8b0 <sidput@plt+0x10d50>
test   %eax,%eax
mov    %eax,%ebp
jne    805a681 <sidput@plt+0xcb21>
jmp    805a714 <sidput@plt+0xcbb4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   805e8c0 <sidput@plt+0x10d60>
test   %eax,%eax
mov    %eax,%ebp
je     805a714 <sidput@plt+0xcbb4>
mov    0x8(%ebp),%eax
cmp    %esi,0x10(%eax)
jne    805a668 <sidput@plt+0xcb08>
cmp    %edi,0x8(%eax)
jne    805a668 <sidput@plt+0xcb08>
mov    0x38(%esp),%edx
cmp    %edx,0xc(%eax)
jne    805a668 <sidput@plt+0xcb08>
movl   $0x8,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     805a71e <sidput@plt+0xcbbe>
mov    0x34(%esp),%eax
movl   $0x80584e0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x80587a0,0x4(%esp)
mov    %eax,(%esp)
call   805a380 <sidput@plt+0xc820>
test   %eax,%eax
je     805a6f0 <sidput@plt+0xcb90>
mov    %ebp,(%esi)
mov    %ebx,0x4(%esi)
mov    %ebp,0x4(%esp)
mov    0x24(%ebx),%eax
mov    %eax,(%esp)
call   805e7f0 <sidput@plt+0x10c90>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x44(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x44(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    805a716 <sidput@plt+0xcbb6>
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x14(%eax),%ebx
cmp    $0xffffffff,%ebx
je     805a7b0 <sidput@plt+0xcc50>
mov    0x10(%eax),%esi
shl    $0x4,%ebx
add    0x4(%esi),%ebx
mov    (%ebx),%ebx
test   %ebx,%ebx
je     805a7b0 <sidput@plt+0xcc50>
mov    %edx,0x14(%esp)
mov    0x20(%eax),%eax
mov    %ebx,0xc(%esp)
movl   $0x80981e8,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,0x10(%esp)
mov    0x20(%eax),%eax
movl   $0x80983d3,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %ecx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    %eax,0xc(%esp)
mov    %esi,%eax
sub    %ecx,%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
je     805a939 <sidput@plt+0xcdd9>
cmp    %ebx,%esi
jle    805a932 <sidput@plt+0xcdd2>
mov    (%edi),%edi
lea    0x1(%eax),%edx
movzbl (%edi,%ebx,1),%ecx
test   %cl,%cl
jne    805a843 <sidput@plt+0xcce3>
jmp    805a8e0 <sidput@plt+0xcd80>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebx
mov    %edx,%ebp
cmp    %ebx,%esi
mov    %cl,-0x1(%edx)
jle    805a87d <sidput@plt+0xcd1d>
movzbl (%edi,%ebx,1),%ecx
add    $0x1,%edx
test   %cl,%cl
je     805a8e0 <sidput@plt+0xcd80>
cmp    $0x5c,%cl
jne    805a828 <sidput@plt+0xccc8>
lea    0x1(%ebx),%ecx
cmp    %ecx,%esi
jle    805a90c <sidput@plt+0xcdac>
movzbl 0x1(%edi,%ebx,1),%ecx
sub    $0x5c,%ecx
cmp    $0x18,%cl
ja     805a8b0 <sidput@plt+0xcd50>
movzbl %cl,%ecx
jmp    *0x8098440(,%ecx,4)
lea    0x0(%esi),%esi
mov    %edx,%ebp
movb   $0x9,-0x1(%edx)
add    $0x2,%ebx
cmp    %ebx,%esi
jg     805a834 <sidput@plt+0xccd4>
movb   $0x0,0x0(%ebp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%ebp
movb   $0x20,-0x1(%edx)
jmp    805a876 <sidput@plt+0xcd16>
mov    %edx,%ebp
movb   $0xd,-0x1(%edx)
jmp    805a876 <sidput@plt+0xcd16>
mov    %edx,%ebp
movb   $0xa,-0x1(%edx)
jmp    805a876 <sidput@plt+0xcd16>
mov    %edx,%ebp
movb   $0x5c,-0x1(%edx)
jmp    805a876 <sidput@plt+0xcd16>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x34(%esp),%eax
mov    $0x809820c,%ecx
mov    $0x8098290,%edx
mov    %eax,(%esp)
mov    0xc(%esp),%eax
call   805a760 <sidput@plt+0xcc00>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x34(%esp),%eax
mov    $0x809820c,%ecx
mov    $0x8098244,%edx
mov    %eax,(%esp)
mov    0xc(%esp),%eax
call   805a760 <sidput@plt+0xcc00>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x34(%esp),%eax
mov    $0x809820c,%ecx
mov    $0x8098270,%edx
mov    %eax,(%esp)
mov    0xc(%esp),%eax
call   805a760 <sidput@plt+0xcc00>
xor    %eax,%eax
jmp    805a8d4 <sidput@plt+0xcd74>
mov    %eax,%ebp
jmp    805a87d <sidput@plt+0xcd1d>
mov    0x34(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    805a8d4 <sidput@plt+0xcd74>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    (%eax),%edx
mov    %eax,0xc(%esp)
test   %edx,%edx
jle    805a9d4 <sidput@plt+0xce74>
nop
mov    0xc(%esp),%eax
mov    %edi,%ebp
xor    %ebx,%ebx
shl    $0x4,%ebp
add    0x4(%eax),%ebp
mov    0x4(%ebp),%eax
test   %eax,%eax
jle    805a9b3 <sidput@plt+0xce53>
lea    0x0(%esi),%esi
mov    0x8(%ebp),%edx
lea    (%edx,%ebx,8),%esi
add    $0x1,%ebx
mov    (%esi),%edx
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    0x4(%esi),%edx
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
cmp    0x4(%ebp),%ebx
jl     805a990 <sidput@plt+0xce30>
mov    0x8(%ebp),%edx
add    $0x1,%edi
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0xc(%esp),%eax
cmp    %edi,(%eax)
jg     805a978 <sidput@plt+0xce18>
mov    0xc(%esp),%edi
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb4(%esp),%eax
mov    0xb0(%esp),%esi
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8089f00 <dbus_shutdown+0xb220>
test   %eax,%eax
je     805abd8 <sidput@plt+0xd078>
mov    0x5c(%esp),%eax
cmp    $0x20000,%eax
ja     805b10c <sidput@plt+0xd5ac>
lea    0x2c(%esp),%ebx
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     805ac29 <sidput@plt+0xd0c9>
mov    0xb4(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8080bd0 <dbus_shutdown+0x1ef0>
test   %eax,%eax
je     805b148 <sidput@plt+0xd5e8>
mov    0x30(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   8080990 <dbus_shutdown+0x1cb0>
test   %eax,%eax
je     805b157 <sidput@plt+0xd5f7>
movl   $0xc,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x7c(%esp)
je     805b1a3 <sidput@plt+0xd643>
mov    0x2c(%esp),%eax
mov    0x34(%esp),%edx
movl   $0x1,0x8c(%esp)
00
movl   $0x0,0x84(%esp)
00
mov    %eax,0x6c(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x74(%esp)
mov    0x38(%esp),%edx
movl   $0xffffffff,0x80(%esp)
ff
mov    %eax,0x70(%esp)
mov    %edx,0x78(%esp)
xor    %edx,%edx
mov    %eax,0x88(%esp)
cmp    %edx,%eax
jle    805ab98 <sidput@plt+0xd038>
mov    0x6c(%esp),%ecx
add    %edx,%ecx
movzbl (%ecx),%ebx
cmp    $0x5b,%bl
je     805aed9 <sidput@plt+0xd379>
test   %bl,%bl
mov    %ebx,%eax
je     805ab51 <sidput@plt+0xcff1>
cmp    $0xa,%bl
jne    805ab32 <sidput@plt+0xcfd2>
lea    0x0(%esi),%esi
jmp    805ab51 <sidput@plt+0xcff1>
lea    0x0(%esi),%esi
cmp    $0xa,%al
lea    0x0(%esi),%esi
je     805ab51 <sidput@plt+0xcff1>
cmp    $0x20,%al
je     805ab46 <sidput@plt+0xcfe6>
cmp    $0x9,%al
je     805ab46 <sidput@plt+0xcfe6>
sub    $0xc,%eax
cmp    $0x1,%al
nop
ja     805ac50 <sidput@plt+0xd0f0>
movzbl 0x1(%ecx),%eax
add    $0x1,%ecx
test   %al,%al
jne    805ab28 <sidput@plt+0xcfc8>
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x6c(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807fd70 <dbus_shutdown+0x1090>
test   %eax,%eax
mov    0x88(%esp),%eax
jne    805abe8 <sidput@plt+0xd088>
mov    %eax,0x84(%esp)
mov    %eax,%edx
lea    0x0(%esi),%esi
addl   $0x1,0x8c(%esp)
cmp    %edx,%eax
jg     805ab00 <sidput@plt+0xcfa0>
lea    0x6c(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x7c(%esp),%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x809834c,0x8(%esp)
mov    0xb4(%esp),%eax
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x28(%esp),%edx
cmp    %edx,%eax
je     805ab7c <sidput@plt+0xd01c>
add    0x3c(%esp),%edx
mov    %edx,0x84(%esp)
jmp    805ab88 <sidput@plt+0xd028>
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   805a960 <sidput@plt+0xce00>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0xb4(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805abd8 <sidput@plt+0xd078>
lea    0x0(%esi),%esi
cmp    $0x23,%bl
je     805ab51 <sidput@plt+0xcff1>
mov    0x80(%esp),%eax
test   %eax,%eax
js     805abb3 <sidput@plt+0xd053>
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x6c(%esp),%esi
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807fd70 <dbus_shutdown+0x1090>
test   %eax,%eax
je     805ad18 <sidput@plt+0xd1b8>
mov    0x20(%esp),%edx
mov    0x84(%esp),%edi
cmp    %edx,%edi
jge    805ad32 <sidput@plt+0xd1d2>
mov    0x6c(%esp),%ebp
movzbl 0x0(%ebp,%edi,1),%eax
testb  $0x1,0x80984c0(%eax)
je     805ad32 <sidput@plt+0xd1d2>
mov    %edi,%ebx
jmp    805acd1 <sidput@plt+0xd171>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x0(%ebp,%ebx,1),%ecx
movzbl %cl,%eax
testb  $0x1,0x80984c0(%eax)
je     805ad50 <sidput@plt+0xd1f0>
add    $0x1,%ebx
cmp    %edx,%ebx
jne    805acc0 <sidput@plt+0xd160>
mov    0xb4(%esp),%eax
mov    $0x80982f0,%ecx
mov    $0x8098406,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   805a760 <sidput@plt+0xcc00>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x7c(%esp),%eax
mov    %eax,(%esp)
call   805a960 <sidput@plt+0xce00>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    805abd8 <sidput@plt+0xd078>
lea    0x0(%esi,%eiz,1),%esi
mov    0x88(%esp),%edx
mov    0x84(%esp),%edi
mov    %edx,0x20(%esp)
cmp    %edx,%edi
jl     805aca3 <sidput@plt+0xd143>
mov    0xb4(%esp),%eax
mov    $0x80982f0,%ecx
mov    $0x80983f7,%edx
mov    %eax,(%esp)
jmp    805aecd <sidput@plt+0xd36d>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%edi
je     805ad32 <sidput@plt+0xd1d2>
cmp    $0x5b,%cl
je     805af84 <sidput@plt+0xd424>
cmp    $0x20,%cl
mov    %ebx,%eax
je     805ad7e <sidput@plt+0xd21e>
jmp    805aeb0 <sidput@plt+0xd350>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x0(%ebp,%eax,1),%ecx
cmp    $0x20,%cl
jne    805aeb0 <sidput@plt+0xd350>
add    $0x1,%eax
cmp    %edx,%eax
jl     805ad70 <sidput@plt+0xd210>
je     805acd8 <sidput@plt+0xd178>
lea    0x1(%eax),%ecx
cmp    %edx,%ecx
jge    805adae <sidput@plt+0xd24e>
cmpb   $0x20,0x1(%ebp,%eax,1)
je     805ada7 <sidput@plt+0xd247>
jmp    805adae <sidput@plt+0xd24e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x20,0x0(%ebp,%ecx,1)
jne    805adae <sidput@plt+0xd24e>
add    $0x1,%ecx
cmp    %edx,%ecx
jne    805ada0 <sidput@plt+0xd240>
mov    0xb4(%esp),%eax
mov    %edx,(%esp)
mov    %esi,%edx
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   805a7e0 <sidput@plt+0xcc80>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     805acf8 <sidput@plt+0xd198>
mov    0x7c(%esp),%eax
mov    0x80(%esp),%edx
shl    $0x4,%edx
add    0x4(%eax),%edx
mov    0xc(%edx),%eax
mov    0x4(%edx),%ecx
cmp    %ecx,%eax
je     805af4d <sidput@plt+0xd3ed>
mov    0x8(%edx),%eax
lea    0x1(%ecx),%ebp
mov    %ebp,0x4(%edx)
lea    (%eax,%ecx,8),%ebp
test   %ebp,%ebp
movl   $0x0,0x0(%ebp)
movl   $0x0,0x4(%ebp)
je     805ac09 <sidput@plt+0xd0a9>
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     805ac09 <sidput@plt+0xd0a9>
lea    0x3c(%esp),%eax
sub    %edi,%ebx
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     805abfd <sidput@plt+0xd09d>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
lea    0x3c(%esp),%eax
mov    %eax,(%esp)
je     805ac04 <sidput@plt+0xd0a4>
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x28(%esp),%eax
mov    %eax,0x0(%ebp)
mov    0x18(%esp),%eax
mov    0x20(%esp),%edx
mov    %eax,0x4(%ebp)
mov    0x88(%esp),%eax
cmp    %edx,%eax
je     805ab7c <sidput@plt+0xd01c>
add    0x24(%esp),%edx
mov    %edx,0x84(%esp)
jmp    805ab88 <sidput@plt+0xd028>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x3d,%cl
je     805ad8b <sidput@plt+0xd22b>
mov    0xb4(%esp),%eax
mov    $0x8098380,%ecx
mov    $0x80983b4,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   805a760 <sidput@plt+0xcc00>
jmp    805acf8 <sidput@plt+0xd198>
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x6c(%esp),%esi
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807fd70 <dbus_shutdown+0x1090>
test   %eax,%eax
je     805af40 <sidput@plt+0xd3e0>
mov    0x28(%esp),%eax
mov    0x84(%esp),%edx
mov    %eax,%ecx
sub    %edx,%ecx
cmp    $0x2,%ecx
jle    805af20 <sidput@plt+0xd3c0>
mov    0x6c(%esp),%ecx
cmpb   $0x5d,-0x1(%ecx,%eax,1)
je     805afa4 <sidput@plt+0xd444>
mov    0xb4(%esp),%eax
mov    $0x80982f0,%ecx
mov    $0x8098328,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   805a760 <sidput@plt+0xcc00>
jmp    805acf8 <sidput@plt+0xd198>
mov    0x88(%esp),%eax
mov    %eax,0x28(%esp)
jmp    805af01 <sidput@plt+0xd3a1>
test   %eax,%eax
je     805af98 <sidput@plt+0xd438>
lea    (%eax,%eax,1),%ebp
shl    $0x4,%eax
mov    %eax,0x4(%esp)
mov    0x8(%edx),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805ac09 <sidput@plt+0xd0a9>
mov    %eax,0x8(%edx)
mov    0x4(%edx),%ecx
mov    %ebp,0xc(%edx)
jmp    805adf3 <sidput@plt+0xd293>
mov    0x88(%esp),%eax
cmp    %edx,%eax
jne    805ae99 <sidput@plt+0xd339>
jmp    805ae9d <sidput@plt+0xd33d>
mov    $0x8,%eax
mov    $0x1,%ebp
jmp    805af57 <sidput@plt+0xd3f7>
mov    0xb4(%esp),%edi
sub    $0x1,%eax
lea    0x1(%edx),%ecx
mov    %esi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
mov    %edi,0x4(%esp)
call   805a7e0 <sidput@plt+0xcc80>
test   %eax,%eax
mov    %eax,%ebp
je     805acf8 <sidput@plt+0xd198>
cmpb   $0x0,(%eax)
mov    %eax,%edx
je     805afe0 <sidput@plt+0xd480>
lea    0x0(%esi),%esi
add    $0x1,%edx
cmpb   $0x0,(%edx)
jne    805afd8 <sidput@plt+0xd478>
mov    0x7c(%esp),%ebx
mov    0x8(%ebx),%eax
cmp    (%ebx),%eax
je     805b0dc <sidput@plt+0xd57c>
mov    %ebp,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
je     805b18c <sidput@plt+0xd62c>
mov    (%ebx),%edi
mov    0x4(%ebx),%edx
shl    $0x4,%edi
mov    %eax,(%edx,%edi,1)
mov    0x4(%ebx),%eax
movl   $0x0,0x4(%eax,%edi,1)
mov    0x4(%ebx),%eax
movl   $0x0,0x8(%eax,%edi,1)
mov    0x4(%ebx),%eax
movl   $0x0,0xc(%eax,%edi,1)
mov    0x4(%ebx),%edx
add    %edi,%edx
mov    0xc(%edx),%eax
test   %eax,%eax
je     805b0cd <sidput@plt+0xd56d>
lea    (%eax,%eax,1),%ecx
shl    $0x4,%eax
mov    %eax,0x4(%esp)
mov    0x8(%edx),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     805b16c <sidput@plt+0xd60c>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %eax,0x8(%edx)
mov    %ecx,0xc(%edx)
add    0x4(%ebx),%edi
addl   $0x1,(%ebx)
test   %edi,%edi
je     805b18c <sidput@plt+0xd62c>
mov    0x7c(%esp),%eax
mov    0x88(%esp),%edx
mov    (%eax),%eax
sub    $0x1,%eax
mov    %eax,0x80(%esp)
mov    0x28(%esp),%eax
cmp    %eax,%edx
je     805b13c <sidput@plt+0xd5dc>
add    0x3c(%esp),%eax
mov    %eax,0x84(%esp)
mov    %ebp,(%esp)
addl   $0x1,0x8c(%esp)
call   807ebb0 <dbus_free>
mov    0x88(%esp),%eax
mov    0x84(%esp),%edx
jmp    805aaf8 <sidput@plt+0xcf98>
mov    $0x8,%eax
mov    $0x1,%ecx
jmp    805b041 <sidput@plt+0xd4e1>
test   %eax,%eax
je     805b194 <sidput@plt+0xd634>
lea    (%eax,%eax,1),%edi
shl    $0x5,%eax
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     805b18c <sidput@plt+0xd62c>
mov    %eax,0x4(%ebx)
mov    %edi,0x8(%ebx)
jmp    805afef <sidput@plt+0xd48f>
mov    %eax,0xc(%esp)
mov    0xb4(%esp),%eax
movl   $0x80982c4,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x9c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edx,0x84(%esp)
jmp    805b0aa <sidput@plt+0xd54a>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
jmp    805abda <sidput@plt+0xd07a>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
movl   $0x80983e9,0x8(%esp)
jmp    805abbb <sidput@plt+0xd05b>
mov    0x4(%ebx),%eax
mov    %edi,0x18(%esp)
mov    (%eax,%edi,1),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x4(%ebx),%eax
mov    0x18(%esp),%ecx
movl   $0x0,(%eax,%ecx,1)
mov    %ebp,(%esp)
jmp    805ac10 <sidput@plt+0xd0b0>
mov    $0x10,%eax
mov    $0x1,%edi
jmp    805b0ea <sidput@plt+0xd58a>
mov    %ebx,(%esp)
jmp    805ac24 <sidput@plt+0xd0c4>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%ebx
mov    0x3c(%esp),%edx
mov    0x30(%esp),%eax
test   %ebx,%ebx
movl   $0x0,(%edx)
je     805b248 <sidput@plt+0xd6e8>
mov    (%eax),%esi
test   %esi,%esi
jle    805b248 <sidput@plt+0xd6e8>
mov    0x4(%eax),%ebp
xor    %edi,%edi
jmp    805b1ea <sidput@plt+0xd68a>
lea    0x0(%esi),%esi
add    $0x1,%edi
add    $0x10,%ebp
cmp    %esi,%edi
je     805b248 <sidput@plt+0xd6e8>
mov    %ebx,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805b1e0 <sidput@plt+0xd680>
mov    0x4(%ebp),%ebx
test   %ebx,%ebx
jle    805b248 <sidput@plt+0xd6e8>
mov    0x8(%ebp),%esi
xor    %ebp,%ebp
jmp    805b21a <sidput@plt+0xd6ba>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
add    $0x8,%esi
cmp    %ebx,%ebp
je     805b248 <sidput@plt+0xd6e8>
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805b210 <sidput@plt+0xd6b0>
mov    0x4(%esi),%eax
mov    0x3c(%esp),%ecx
mov    %eax,(%ecx)
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x3c(%esp),%ebx
lea    0x1c(%esp),%eax
mov    0x38(%esp),%esi
movl   $0x0,(%ebx)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   805b1b0 <sidput@plt+0xd650>
test   %eax,%eax
je     805b2b8 <sidput@plt+0xd758>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    $0x1,%edx
test   %eax,%eax
mov    %eax,(%ebx)
je     805b2e8 <sidput@plt+0xd788>
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x40(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0x809841f,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %edx,%edx
jmp    805b2ae <sidput@plt+0xd74e>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x8020,%esp
mov    %gs:0x14,%eax
mov    %eax,0x801c(%esp)
xor    %eax,%eax
mov    0x80b8314,%eax
lea    0x1c(%esp),%edi
movl   $0x8000,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d0d0 <read@plt>
test   %eax,%eax
mov    %eax,%esi
jle    805b371 <sidput@plt+0xd811>
xor    %ebx,%ebx
lea    0x0(%esi),%esi
call   8081ab0 <dbus_shutdown+0x2dd0>
mov    0xc(%edi,%ebx,1),%edx
lea    0x10(%ebx,%edx,1),%ebx
cmp    %esi,%ebx
jl     805b350 <sidput@plt+0xd7f0>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804d560 <kill@plt>
mov    0x801c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    $0x1,%eax
jne    805b390 <sidput@plt+0xd830>
add    $0x8020,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   804d240 <__stack_chk_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %edx,%edx
push   %edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x41c,%esp
xchg   %ax,%ax
movl   $0xffffffff,0x10(%esp,%edx,4)
movl   $0x0,0x210(%esp,%edx,4)
00
add    $0x1,%edx
cmp    $0x80,%edx
jne    805b3b0 <sidput@plt+0xd850>
mov    %ebx,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%edx
je     805b3fb <sidput@plt+0xd89b>
mov    (%ebx),%ebx
lea    0x210(%esp),%eax
jmp    805b3ef <sidput@plt+0xd88f>
nop
add    $0x4,%eax
test   %edx,%edx
je     805b3fb <sidput@plt+0xd89b>
mov    0x8(%edx),%ecx
mov    0x4(%edx),%edx
mov    %ecx,(%eax)
cmp    %edx,%ebx
jne    805b3e8 <sidput@plt+0xd888>
mov    0x210(%esp),%esi
test   %esi,%esi
je     805b603 <sidput@plt+0xdaa3>
mov    0x80b83c8,%edi
movl   $0x0,0xc(%esp)
test   %edi,%edi
jle    805b446 <sidput@plt+0xd8e6>
xor    %ebx,%ebx
xchg   %ax,%ax
mov    0x80b83e0(,%ebx,4),%ebp
test   %ebp,%ebp
je     805b43f <sidput@plt+0xd8df>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     805b580 <sidput@plt+0xda20>
add    $0x1,%ebx
cmp    %edi,%ebx
jne    805b420 <sidput@plt+0xd8c0>
addl   $0x1,0xc(%esp)
mov    0xc(%esp),%eax
mov    0x210(%esp,%eax,4),%esi
test   %esi,%esi
jne    805b418 <sidput@plt+0xd8b8>
mov    0x210(%esp),%esi
test   %edi,%edi
jle    805b4b5 <sidput@plt+0xd955>
xor    %ebx,%ebx
nop
mov    0x80b85e0(,%ebx,4),%eax
cmp    $0xffffffff,%eax
je     805b4aa <sidput@plt+0xd94a>
mov    %eax,0x4(%esp)
mov    0x80b8314,%eax
mov    %eax,(%esp)
call   804da70 <inotify_rm_watch@plt>
mov    0x80b83e0(,%ebx,4),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0xffffffff,0x80b85e0(,%ebx,4)
ff
movl   $0x0,0x80b83e0(,%ebx,4)
00
add    $0x1,%ebx
cmp    %ebx,0x80b83c8
jg     805b468 <sidput@plt+0xd908>
xor    %ebx,%ebx
test   %esi,%esi
jne    805b4ce <sidput@plt+0xd96e>
jmp    805b5fc <sidput@plt+0xda9c>
add    $0x1,%ebx
mov    0x210(%esp,%ebx,4),%esi
test   %esi,%esi
je     805b53d <sidput@plt+0xd9dd>
cmpl   $0xffffffff,0x10(%esp,%ebx,4)
jne    805b4c0 <sidput@plt+0xd960>
mov    0x80b8314,%eax
movl   $0x2c8,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d6a0 <inotify_add_watch@plt>
test   %eax,%eax
mov    %eax,%edi
js     805b5b1 <sidput@plt+0xda51>
mov    %eax,0x10(%esp,%ebx,4)
mov    0x210(%esp,%ebx,4),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x210(%esp,%ebx,4)
jne    805b4c0 <sidput@plt+0xd960>
mov    0x80b8314,%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804da70 <inotify_rm_watch@plt>
movl   $0xffffffff,0x10(%esp,%ebx,4)
add    $0x1,%ebx
mov    0x210(%esp,%ebx,4),%esi
test   %esi,%esi
jne    805b4ce <sidput@plt+0xd96e>
mov    0x210(%esp),%esi
mov    %ebx,0x80b83c8
xor    %eax,%eax
jmp    805b557 <sidput@plt+0xd9f7>
xchg   %ax,%ax
mov    0x210(%esp,%eax,4),%esi
mov    0x10(%esp,%eax,4),%edx
mov    %esi,0x80b83e0(,%eax,4)
mov    %edx,0x80b85e0(,%eax,4)
add    $0x1,%eax
cmp    $0x80,%eax
jne    805b550 <sidput@plt+0xd9f0>
add    $0x41c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x80b85e0(,%ebx,4),%eax
mov    0xc(%esp),%ecx
movl   $0xffffffff,0x80b85e0(,%ebx,4)
ff
movl   $0x0,0x80b83e0(,%ebx,4)
00
mov    %eax,0x10(%esp,%ecx,4)
mov    %ebp,0x210(%esp,%ecx,4)
jmp    805b446 <sidput@plt+0xd8e6>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x2,%eax
jne    805b5d5 <sidput@plt+0xda75>
movl   $0xffffffff,0x10(%esp,%ebx,4)
movl   $0x0,0x210(%esp,%ebx,4)
00
jmp    805b4c0 <sidput@plt+0xd960>
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,0x4(%esp)
movl   $0x80985c0,(%esp)
mov    %eax,0x8(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x41c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%ebx
jmp    805b544 <sidput@plt+0xd9e4>
mov    0x80b83c8,%edi
jmp    805b461 <sidput@plt+0xd901>
xchg   %ax,%ax
sub    $0x2c,%esp
cmpl   $0xffffffff,0x80b8314
movl   $0x0,0x1c(%esp)
je     805b699 <sidput@plt+0xdb39>
lea    0x1c(%esp),%eax
call   805b3a0 <sidput@plt+0xd840>
mov    0x80b83c4,%eax
test   %eax,%eax
je     805b66e <sidput@plt+0xdb0e>
mov    %eax,0x4(%esp)
mov    0x80b83c0,%eax
mov    %eax,(%esp)
call   8088100 <dbus_shutdown+0x9420>
mov    0x80b83c4,%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x80b83c4,%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    0x80b83c0,%eax
mov    %eax,(%esp)
call   8087f00 <dbus_shutdown+0x9220>
mov    0x80b8314,%eax
movl   $0x0,0x80b83c4
00
movl   $0x0,0x80b83c0
00
mov    %eax,(%esp)
call   804dae0 <close@plt>
movl   $0xffffffff,0x80b8314
ff
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
cmpl   $0xffffffff,0x80b8314
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebx
je     805b6c8 <sidput@plt+0xdb68>
add    $0x24,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
jmp    805b3a0 <sidput@plt+0xd840>
lea    0x0(%esi),%esi
movl   $0x80000,(%esp)
call   804dac0 <inotify_init1@plt>
test   %eax,%eax
mov    %eax,0x80b8314
js     805b7c8 <sidput@plt+0xdc68>
test   %eax,%eax
jle    805b7b0 <sidput@plt+0xdc50>
mov    %esi,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    %eax,(%esp)
mov    %eax,0x80b83c0
call   8087ef0 <dbus_shutdown+0x9210>
mov    0x80b8314,%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x805b310,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   807b420 <dbus_threads_init_default+0x2830>
test   %eax,%eax
mov    %eax,0x80b83c4
je     805b7d8 <sidput@plt+0xdc78>
mov    %eax,0x4(%esp)
mov    0x80b83c0,%eax
mov    %eax,(%esp)
call   8087f70 <dbus_shutdown+0x9290>
test   %eax,%eax
je     805b780 <sidput@plt+0xdc20>
movl   $0x0,0x4(%esp)
movl   $0x805b610,(%esp)
call   807ec70 <dbus_free_string_array+0x50>
test   %eax,%eax
jne    805b6b6 <sidput@plt+0xdb56>
movl   $0x8098634,(%esp)
jmp    805b787 <sidput@plt+0xdc27>
lea    0x0(%esi),%esi
movl   $0x809860c,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x80b83c4,%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
movl   $0x0,0x80b83c4
00
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8098655,0x30(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    807ccc0 <dbus_watch_handle+0x1100>
lea    0x0(%esi),%esi
call   804d5e0 <inotify_init@plt>
mov    %eax,0x80b8314
jmp    805b6e1 <sidput@plt+0xdb81>
nop
movl   $0x80985ec,0x30(%esp)
add    $0x24,%esp
pop    %ebx
pop    %esi
jmp    807ccc0 <dbus_watch_handle+0x1100>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x68(%esp),%esi
mov    0x6c(%esp),%ebx
mov    %eax,(%esp)
call   8059940 <sidput@plt+0xbde0>
test   %esi,%esi
mov    %eax,0x1c(%esp)
je     805b890 <sidput@plt+0xdd30>
mov    0x70(%esp),%edx
xor    %ebp,%ebp
mov    0x64(%esp),%ecx
mov    %ebx,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %edx,0x18(%esp)
mov    0x60(%esp),%edx
mov    %esi,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8053f00 <sidput@plt+0x63a0>
test   %eax,%eax
jne    805b850 <sidput@plt+0xdcf0>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebx,(%esp)
call   8072e00 <dbus_message_contains_unix_fds>
test   %eax,%eax
je     805b874 <sidput@plt+0xdd14>
movl   $0x68,0x4(%esp)
mov    %esi,(%esp)
call   8065660 <dbus_connection_can_send_type>
test   %eax,%eax
je     805ba18 <sidput@plt+0xdeb8>
mov    0x60(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8059960 <sidput@plt+0xbe00>
test   %eax,%eax
je     805b9f0 <sidput@plt+0xde90>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8059950 <sidput@plt+0xbdf0>
mov    %eax,%ebp
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806ad70 <dbus_error_init>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8052e60 <sidput@plt+0x5300>
lea    0x2c(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    0x64(%esp),%ecx
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   8063ac0 <sidput@plt+0x15f60>
test   %eax,%eax
je     805b9f0 <sidput@plt+0xde90>
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%edi
je     805b9ac <sidput@plt+0xde4c>
mov    %esi,0x68(%esp)
mov    0x60(%esp),%esi
jmp    805b925 <sidput@plt+0xddc5>
lea    0x0(%esi),%esi
mov    0x4(%edi),%edi
cmp    0x2c(%esp),%edi
je     805b9ac <sidput@plt+0xde4c>
test   %edi,%edi
je     805b9ac <sidput@plt+0xde4c>
mov    0x68(%esp),%eax
mov    0x8(%edi),%ebp
movl   $0x0,0x18(%esp)
mov    %ebx,0x14(%esp)
mov    %eax,0xc(%esp)
mov    0x64(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8053f00 <sidput@plt+0x63a0>
test   %eax,%eax
je     805b910 <sidput@plt+0xddb0>
mov    %ebx,(%esp)
call   8072e00 <dbus_message_contains_unix_fds>
test   %eax,%eax
je     805b97c <sidput@plt+0xde1c>
movl   $0x68,0x4(%esp)
mov    %ebp,(%esp)
call   8065660 <dbus_connection_can_send_type>
test   %eax,%eax
je     805b910 <sidput@plt+0xddb0>
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8059960 <sidput@plt+0xbe00>
test   %eax,%eax
jne    805b910 <sidput@plt+0xddb0>
lea    0x30(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
lea    0x2c(%esp),%eax
mov    $0x1,%ebp
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     805b845 <sidput@plt+0xdce5>
mov    0x70(%esp),%eax
xor    %bp,%bp
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b050 <dbus_move_error>
jmp    805b845 <sidput@plt+0xdce5>
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
xor    %ebp,%ebp
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x70(%esp),%eax
movl   $0x8098670,0x8(%esp)
movl   $0x80986c8,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    805b845 <sidput@plt+0xdce5>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%ebx
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806ad70 <dbus_error_init>
mov    %ebx,(%esp)
call   8059070 <sidput@plt+0xb510>
mov    %eax,0x28(%esp)
jmp    805ba6d <sidput@plt+0xdf0d>
lea    0x0(%esi),%esi
call   8088380 <dbus_shutdown+0x96a0>
mov    %ebx,(%esp)
call   8059220 <sidput@plt+0xb6c0>
test   %eax,%eax
je     805ba68 <sidput@plt+0xdf08>
mov    %ebx,(%esp)
call   8065370 <dbus_connection_ref>
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   80721c0 <dbus_message_get_destination>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     805bc68 <sidput@plt+0xe108>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8059920 <sidput@plt+0xbdc0>
test   %eax,%eax
mov    %eax,%ebp
je     805bb98 <sidput@plt+0xe038>
mov    %ebx,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
jne    805bb78 <sidput@plt+0xe018>
mov    0x2c(%esp),%esi
test   %esi,%esi
je     805bd93 <sidput@plt+0xe233>
mov    $0x8096b7c,%edi
mov    $0x15,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     805bbe8 <sidput@plt+0xe088>
mov    %ebx,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
je     805bda6 <sidput@plt+0xe246>
mov    %ebx,(%esp)
lea    0x40(%esp),%esi
call   80590c0 <sidput@plt+0xb560>
mov    %esi,(%esp)
mov    %eax,%edi
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805bd19 <sidput@plt+0xe1b9>
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
mov    0x74(%esp),%ecx
lea    0x30(%esp),%edx
xor    %esi,%esi
mov    %edx,0x10(%esp)
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %ebp,(%esp)
call   805b7f0 <sidput@plt+0xdc90>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     805bbc6 <sidput@plt+0xe066>
mov    %ebx,(%esp)
call   8065400 <dbus_connection_get_is_connected>
test   %eax,%eax
jne    805bc99 <sidput@plt+0xe139>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
jmp    805bbc6 <sidput@plt+0xe066>
nop
mov    %ebx,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8072250 <dbus_message_set_sender>
test   %eax,%eax
jne    805bc4d <sidput@plt+0xe0ed>
lea    0x30(%esp),%eax
xor    %esi,%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    805bb59 <sidput@plt+0xdff9>
test   %ebp,%ebp
je     805bbd2 <sidput@plt+0xe072>
mov    %ebp,(%esp)
call   8059c40 <sidput@plt+0xc0e0>
mov    %ebx,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x5c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
xor    %esi,%esi
mov    %eax,0x18(%esp)
mov    0x74(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8053f00 <sidput@plt+0x63a0>
test   %eax,%eax
je     805bbb6 <sidput@plt+0xe056>
lea    0x30(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x74(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   805e2b0 <sidput@plt+0x10750>
test   %eax,%eax
je     805bbb6 <sidput@plt+0xe056>
xor    %eax,%eax
jmp    805bb27 <sidput@plt+0xdfc7>
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   80721c0 <dbus_message_get_destination>
mov    %eax,0x2c(%esp)
jmp    805babf <sidput@plt+0xdf5f>
lea    0x0(%esi),%esi
mov    0x74(%esp),%eax
movl   $0x809871a,0x8(%esp)
movl   $0x8098727,0x4(%esp)
mov    %eax,(%esp)
call   8072920 <dbus_message_is_signal>
test   %eax,%eax
je     805bcf8 <sidput@plt+0xe198>
mov    %ebx,(%esp)
xor    %esi,%esi
xor    %ebp,%ebp
call   8059d30 <sidput@plt+0xc1d0>
jmp    805bbb6 <sidput@plt+0xe056>
lea    0x30(%esp),%eax
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
mov    0x74(%esp),%eax
jne    805bcd9 <sidput@plt+0xe179>
mov    %eax,0xc(%esp)
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   805a310 <sidput@plt+0xc7b0>
test   %eax,%eax
jne    805bb69 <sidput@plt+0xe009>
mov    0x74(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8059340 <sidput@plt+0xb7e0>
test   %ebp,%ebp
je     805bcf1 <sidput@plt+0xe191>
mov    %ebp,(%esp)
call   8059b60 <sidput@plt+0xc000>
xor    %ebp,%ebp
jmp    805bb69 <sidput@plt+0xe009>
mov    0x74(%esp),%eax
xor    %ebp,%ebp
mov    $0x1,%esi
mov    %eax,(%esp)
call   806f7e0 <dbus_message_get_type>
cmp    $0x4,%eax
jne    805bbb6 <sidput@plt+0xe056>
jmp    805ba99 <sidput@plt+0xdf39>
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   8071830 <dbus_message_get_auto_start>
test   %eax,%eax
jne    805bd54 <sidput@plt+0xe1f4>
mov    0x2c(%esp),%eax
xor    %esi,%esi
movl   $0x8098742,0x8(%esp)
movl   $0x80986f0,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    805bb49 <sidput@plt+0xdfe9>
lea    0x30(%esp),%edi
xor    %esi,%esi
mov    %ebx,(%esp)
call   80590f0 <sidput@plt+0xb590>
mov    %edi,0x18(%esp)
mov    0x2c(%esp),%edi
movl   $0x1,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,0x14(%esp)
mov    0x74(%esp),%edi
mov    %eax,(%esp)
mov    %edi,0x10(%esp)
call   8050310 <sidput@plt+0x27b0>
jmp    805bb49 <sidput@plt+0xdfe9>
mov    %ebx,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
lea    0x0(%esi),%esi
jne    805bc46 <sidput@plt+0xe0e6>
mov    %ebx,(%esp)
xor    %esi,%esi
call   8067c50 <dbus_connection_close>
jmp    805bbb6 <sidput@plt+0xe056>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x805ba40,0x4(%esp)
mov    %eax,(%esp)
call   80690e0 <dbus_connection_add_filter>
test   %eax,%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   805e4a0 <sidput@plt+0x10940>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x805ba40,0x4(%esp)
call   8069200 <dbus_connection_remove_filter>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x34,%esp
lea    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     805bf00 <sidput@plt+0xe3a0>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8059070 <sidput@plt+0xb510>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8052ba0 <sidput@plt+0x5040>
test   %eax,%eax
jne    805be98 <sidput@plt+0xe338>
mov    0x4c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%esi
je     805be65 <sidput@plt+0xe305>
mov    0x20(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x73,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805bf28 <sidput@plt+0xe3c8>
mov    0x4c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
jmp    805be81 <sidput@plt+0xe321>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x34,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805bed6 <sidput@plt+0xe376>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805be8b <sidput@plt+0xe32b>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x3c(%esp),%edi
mov    %esi,(%esp)
call   8059070 <sidput@plt+0xb510>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8053c40 <sidput@plt+0x60e0>
test   %eax,%eax
jne    805bf98 <sidput@plt+0xe438>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ebp
je     805c000 <sidput@plt+0xe4a0>
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
jne    805bff0 <sidput@plt+0xe490>
mov    %edi,(%esp)
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    $0x1,%bl
call   806e970 <dbus_message_unref>
jmp    805bf89 <sidput@plt+0xe429>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %edi,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805bf89 <sidput@plt+0xe429>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x68(%esp),%ebx
mov    0x6c(%esp),%esi
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x0,0x28(%esp)
mov    %eax,%ebp
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805c078 <sidput@plt+0xe518>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x28(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805c1a0 <sidput@plt+0xe640>
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ebx
je     805c1c8 <sidput@plt+0xe668>
mov    %ebp,(%esp)
call   8059170 <sidput@plt+0xb610>
mov    %eax,(%esp)
mov    %eax,%ebp
call   80516e0 <sidput@plt+0x3b80>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     805c160 <sidput@plt+0xe600>
lea    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805c128 <sidput@plt+0xe5c8>
test   %ebp,%ebp
je     805c10a <sidput@plt+0xe5aa>
mov    %ebp,(%esp)
call   8051700 <sidput@plt+0x3ba0>
test   %ebx,%ebx
je     805c06d <sidput@plt+0xe50d>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
jne    805c185 <sidput@plt+0xe625>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805c0fe <sidput@plt+0xe59e>
xchg   %ax,%ax
mov    0x28(%esp),%eax
movl   $0x8098798,0x8(%esp)
movl   $0x80987c8,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c0fe <sidput@plt+0xe59e>
mov    %ebp,(%esp)
call   8051700 <sidput@plt+0x3ba0>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805c06f <sidput@plt+0xe50f>
nop
mov    0x28(%esp),%eax
movl   $0x809875c,0x8(%esp)
movl   $0x80986f0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c06d <sidput@plt+0xe50d>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
jmp    805c144 <sidput@plt+0xe5e4>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x68(%esp),%esi
mov    0x6c(%esp),%ebx
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x2c(%esp)
mov    %eax,%ebp
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805c228 <sidput@plt+0xe6c8>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x2c(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805c310 <sidput@plt+0xe7b0>
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
mov    %esi,(%esp)
mov    %eax,%ebp
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%esi
je     805c338 <sidput@plt+0xe7d8>
mov    %ebp,(%esp)
call   8059150 <sidput@plt+0xb5f0>
test   %eax,%eax
je     805c2d8 <sidput@plt+0xe778>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8060390 <sidput@plt+0x12830>
test   %eax,%eax
jne    805c2a0 <sidput@plt+0xe740>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x60(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
jne    805c2fa <sidput@plt+0xe79a>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805c28c <sidput@plt+0xe72c>
xchg   %ax,%ax
mov    0x2c(%esp),%eax
movl   $0x8098798,0x8(%esp)
movl   $0x8098804,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c28c <sidput@plt+0xe72c>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805c21f <sidput@plt+0xe6bf>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x809875c,0x8(%esp)
movl   $0x80986f0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c21d <sidput@plt+0xe6bd>
lea    0x0(%esi),%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805c21d <sidput@plt+0xe6bd>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x68(%esp),%esi
mov    0x6c(%esp),%ebx
movl   $0x0,0x28(%esp)
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,%ebp
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805c3c0 <sidput@plt+0xe860>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x24(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805c4b0 <sidput@plt+0xe950>
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
mov    %esi,(%esp)
mov    %eax,%ebp
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%esi
je     805c4d8 <sidput@plt+0xe978>
lea    0x2c(%esp),%eax
lea    0x28(%esp),%edi
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8065fa0 <dbus_connection_get_adt_audit_session_data>
test   %eax,%eax
je     805c488 <sidput@plt+0xe928>
mov    0x28(%esp),%eax
test   %eax,%eax
je     805c488 <sidput@plt+0xe928>
mov    0x2c(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %edi,0xc(%esp)
movl   $0x79,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x61,0x4(%esp)
mov    %esi,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805c4f8 <sidput@plt+0xe998>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x24(%esp),%eax
movl   $0x8098880,0x8(%esp)
movl   $0x80988b0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c474 <sidput@plt+0xe914>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
movl   $0x8098840,0x8(%esp)
movl   $0x80986f0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c3b5 <sidput@plt+0xe855>
lea    0x0(%esi),%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805c3b5 <sidput@plt+0xe855>
lea    0x0(%esi),%esi
mov    0x60(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805c45c <sidput@plt+0xe8fc>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805c3b7 <sidput@plt+0xe857>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x68(%esp),%esi
mov    0x6c(%esp),%ebx
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,%ebp
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805c588 <sidput@plt+0xea28>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x24(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805c668 <sidput@plt+0xeb08>
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
mov    %esi,(%esp)
mov    %eax,%ebp
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%esi
je     805c690 <sidput@plt+0xeb30>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
je     805c640 <sidput@plt+0xeae0>
mov    0x28(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x75,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805c6b0 <sidput@plt+0xeb50>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
movl   $0x8098910,0x8(%esp)
movl   $0x8098934,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c628 <sidput@plt+0xeac8>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
movl   $0x80988e0,0x8(%esp)
movl   $0x80986f0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c57d <sidput@plt+0xea1d>
lea    0x0(%esi),%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805c57d <sidput@plt+0xea1d>
lea    0x0(%esi),%esi
mov    0x60(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805c610 <sidput@plt+0xeab0>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805c57f <sidput@plt+0xea1f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x68(%esp),%esi
mov    0x6c(%esp),%ebx
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x24(%esp)
mov    %eax,%ebp
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805c748 <sidput@plt+0xebe8>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x24(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805c828 <sidput@plt+0xecc8>
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
mov    %esi,(%esp)
mov    %eax,%ebp
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%esi
je     805c850 <sidput@plt+0xecf0>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8065de0 <dbus_connection_get_unix_user>
test   %eax,%eax
je     805c800 <sidput@plt+0xeca0>
mov    0x28(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x75,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805c870 <sidput@plt+0xed10>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
movl   $0x8098994,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c7e8 <sidput@plt+0xec88>
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
movl   $0x8098964,0x8(%esp)
movl   $0x80986f0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c73d <sidput@plt+0xebdd>
lea    0x0(%esi),%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805c73d <sidput@plt+0xebdd>
lea    0x0(%esi),%esi
mov    0x60(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805c7d0 <sidput@plt+0xec70>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805c73f <sidput@plt+0xebdf>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x68(%esp),%esi
mov    0x6c(%esp),%ebx
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x28(%esp)
mov    %eax,%edi
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805c908 <sidput@plt+0xeda8>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x28(%esp),%eax
lea    0x30(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805c9f8 <sidput@plt+0xee98>
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
mov    %eax,(%esp)
call   8059840 <sidput@plt+0xbce0>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     805ca20 <sidput@plt+0xeec0>
mov    %esi,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%esi
je     805c9d8 <sidput@plt+0xee78>
lea    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %esi,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805c9a8 <sidput@plt+0xee48>
mov    %ebx,(%esp)
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x60(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805c97e <sidput@plt+0xee1e>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805c8ff <sidput@plt+0xed9f>
xchg   %ax,%ax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805c8fd <sidput@plt+0xed9d>
lea    0x0(%esi),%esi
movl   $0x8096b7c,0x4(%esp)
mov    %ebp,(%esp)
call   8080450 <dbus_shutdown+0x1770>
test   %eax,%eax
je     805ca45 <sidput@plt+0xeee5>
movl   $0x8096b7c,0x2c(%esp)
jmp    805c94c <sidput@plt+0xedec>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
movl   $0x80989b8,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c8fd <sidput@plt+0xed9d>
mov    0x28(%esp),%eax
movl   $0x80989e4,0x8(%esp)
movl   $0x80986f0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805c8fd <sidput@plt+0xed9d>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
mov    0xd0(%esp),%eax
mov    0xd8(%esp),%edi
mov    0xdc(%esp),%ebx
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
movl   $0x0,0x28(%esp)
mov    %eax,%esi
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x0,0x24(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805caf8 <sidput@plt+0xef98>
mov    0x28(%esp),%eax
xor    %ebx,%ebx
test   %eax,%eax
je     805cae7 <sidput@plt+0xef87>
lea    0x28(%esp),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0xbc,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
lea    0x30(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805cc78 <sidput@plt+0xf118>
lea    0x28(%esp),%esi
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8061cf0 <sidput@plt+0x14190>
test   %eax,%eax
je     805cad1 <sidput@plt+0xef71>
mov    %edi,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ebp
je     805cbc0 <sidput@plt+0xf060>
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x78(%esp),%edi
mov    %ebp,(%esp)
call   8070660 <dbus_message_iter_init_append>
lea    0x40(%esp),%eax
mov    %edi,0xc(%esp)
movl   $0x809fd73,0x8(%esp)
movl   $0x61,0x4(%esp)
mov    %eax,(%esp)
call   8070cd0 <dbus_message_iter_open_container>
test   %eax,%eax
jne    805cbe0 <sidput@plt+0xf080>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
jmp    805cad1 <sidput@plt+0xef71>
lea    0x28(%esp),%esi
movl   $0x8096b7c,0x4(%esp)
mov    %esi,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    805cb38 <sidput@plt+0xefd8>
nop
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805cad1 <sidput@plt+0xef71>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%esi
lea    0x0(%esi),%esi
test   %esi,%esi
je     805cc24 <sidput@plt+0xf0c4>
mov    0x8(%esi),%eax
movl   $0x73,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x2c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
je     805cb7e <sidput@plt+0xf01e>
mov    0x4(%esi),%esi
cmp    0x28(%esp),%esi
jne    805cbf0 <sidput@plt+0xf090>
lea    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8070f60 <dbus_message_iter_close_container>
test   %eax,%eax
je     805cb7e <sidput@plt+0xf01e>
mov    0xd0(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xd4(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805cb7e <sidput@plt+0xf01e>
mov    %ebp,(%esp)
mov    $0x1,%ebx
call   806e970 <dbus_message_unref>
jmp    805cae7 <sidput@plt+0xef87>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8096b7c,0x4(%esp)
mov    %ebp,(%esp)
call   8080450 <dbus_shutdown+0x1770>
test   %eax,%eax
jne    805cba3 <sidput@plt+0xf043>
mov    0x24(%esp),%eax
movl   $0x8098a14,0x8(%esp)
movl   $0x80986f0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
jmp    805cad1 <sidput@plt+0xef71>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   80590f0 <sidput@plt+0xb590>
mov    0xb8(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebx
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%esi
je     805cdb4 <sidput@plt+0xf254>
lea    0x14(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8050f70 <sidput@plt+0x3410>
test   %eax,%eax
je     805cdac <sidput@plt+0xf24c>
lea    0x20(%esp),%ebp
mov    %ebp,0x4(%esp)
lea    0x58(%esp),%ebx
mov    %esi,(%esp)
call   8070660 <dbus_message_iter_init_append>
mov    %ebx,0xc(%esp)
movl   $0x809fd73,0x8(%esp)
movl   $0x61,0x4(%esp)
mov    %ebp,(%esp)
call   8070cd0 <dbus_message_iter_open_container>
test   %eax,%eax
je     805cda0 <sidput@plt+0xf240>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x8096b7c,0x1c(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
je     805cda0 <sidput@plt+0xf240>
mov    0x14(%esp),%eax
xor    %edi,%edi
test   %eax,%eax
jg     805cd81 <sidput@plt+0xf221>
jmp    805cde0 <sidput@plt+0xf280>
add    $0x1,%edi
cmp    %edi,0x14(%esp)
jle    805cde0 <sidput@plt+0xf280>
mov    0x18(%esp),%eax
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
lea    (%eax,%edi,4),%eax
mov    %eax,0x8(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
jne    805cd78 <sidput@plt+0xf218>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    0xbc(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8070f60 <dbus_message_iter_close_container>
test   %eax,%eax
je     805cdac <sidput@plt+0xf24c>
mov    0xb0(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    %esi,(%esp)
test   %eax,%eax
je     805cdaf <sidput@plt+0xf24f>
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805cdd5 <sidput@plt+0xf275>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
mov    0xb8(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebx
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%esi
je     805cf24 <sidput@plt+0xf3c4>
lea    0x14(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8060cb0 <sidput@plt+0x13150>
test   %eax,%eax
je     805cf1c <sidput@plt+0xf3bc>
lea    0x20(%esp),%ebp
mov    %ebp,0x4(%esp)
lea    0x58(%esp),%ebx
mov    %esi,(%esp)
call   8070660 <dbus_message_iter_init_append>
mov    %ebx,0xc(%esp)
movl   $0x809fd73,0x8(%esp)
movl   $0x61,0x4(%esp)
mov    %ebp,(%esp)
call   8070cd0 <dbus_message_iter_open_container>
test   %eax,%eax
je     805cf10 <sidput@plt+0xf3b0>
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
movl   $0x8096b7c,0x1c(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
je     805cf10 <sidput@plt+0xf3b0>
mov    0x14(%esp),%eax
xor    %edi,%edi
test   %eax,%eax
jg     805cef1 <sidput@plt+0xf391>
jmp    805cf50 <sidput@plt+0xf3f0>
add    $0x1,%edi
cmp    %edi,0x14(%esp)
jle    805cf50 <sidput@plt+0xf3f0>
mov    0x18(%esp),%eax
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
lea    (%eax,%edi,4),%eax
mov    %eax,0x8(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
jne    805cee8 <sidput@plt+0xf388>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    0xbc(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
call   8070f60 <dbus_message_iter_close_container>
test   %eax,%eax
je     805cf1c <sidput@plt+0xf3bc>
mov    0xb0(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xb4(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    %esi,(%esp)
test   %eax,%eax
je     805cf1f <sidput@plt+0xf3bf>
call   806e970 <dbus_message_unref>
mov    $0x1,%eax
jmp    805cf45 <sidput@plt+0xf3e5>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x68(%esp),%ebp
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,%ebx
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0x4(%esp)
call   8070090 <dbus_message_get_args>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     805d06e <sidput@plt+0xf50e>
mov    0x2c(%esp),%eax
mov    $0x8096b7c,%edi
mov    $0x15,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    805d0a8 <sidput@plt+0xf548>
movl   $0x1,0x28(%esp)
mov    %ebp,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ebx
je     805d0d8 <sidput@plt+0xf578>
lea    0x28(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x62,0x4(%esp)
mov    %ebx,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     805d078 <sidput@plt+0xf518>
mov    0x60(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805d078 <sidput@plt+0xf518>
mov    $0x1,%esi
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
mov    %esi,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x6c(%esp),%eax
xor    %esi,%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x30(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x28(%esp)
jmp    805d00d <sidput@plt+0xf4ad>
lea    0x0(%esi),%esi
mov    0x6c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    805d06e <sidput@plt+0xf50e>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0x58(%esp),%esi
mov    0x5c(%esp),%edi
mov    %ebx,(%esp)
call   80590f0 <sidput@plt+0xb590>
movl   $0x0,0x18(%esp)
movl   $0x75,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,%ebp
lea    0x28(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
call   8070090 <dbus_message_get_args>
xor    %edx,%edx
test   %eax,%eax
je     805d18a <sidput@plt+0xf62a>
mov    0x2c(%esp),%eax
mov    %edi,0x18(%esp)
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x54(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8050310 <sidput@plt+0x27b0>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x6c(%esp),%ebx
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,%edi
lea    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8070090 <dbus_message_get_args>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    805d1f8 <sidput@plt+0xf698>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
lea    0x30(%esp),%esi
mov    %esi,(%esp)
lea    0x2c(%esp),%ebp
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x64(%esp),%eax
mov    %ebx,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x60(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8061b00 <sidput@plt+0x13fa0>
test   %eax,%eax
jne    805d248 <sidput@plt+0xf6e8>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%edi
je     805d2cb <sidput@plt+0xf76b>
movl   $0x0,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x75,0x4(%esp)
mov    %eax,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805d2a8 <sidput@plt+0xf748>
mov    %ebx,(%esp)
xor    %ebx,%ebx
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
mov    %ebx,%eax
jmp    805d1e9 <sidput@plt+0xf689>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805d27a <sidput@plt+0xf71a>
mov    $0x1,%ebx
jmp    805d294 <sidput@plt+0xf734>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    805d23a <sidput@plt+0xf6da>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%eax
mov    0x6c(%esp),%ebx
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
movl   $0x0,0x18(%esp)
movl   $0x75,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8070090 <dbus_message_get_args>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    805d358 <sidput@plt+0xf7f8>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
lea    0x30(%esp),%esi
mov    %esi,(%esp)
lea    0x28(%esp),%ebp
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x64(%esp),%eax
mov    0x2c(%esp),%edx
mov    %ebx,0x18(%esp)
mov    %ebp,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x60(%esp),%eax
mov    %edx,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8061510 <sidput@plt+0x139b0>
test   %eax,%eax
jne    805d3b0 <sidput@plt+0xf850>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%edi
je     805d433 <sidput@plt+0xf8d3>
movl   $0x0,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x75,0x4(%esp)
mov    %eax,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805d410 <sidput@plt+0xf8b0>
mov    %ebx,(%esp)
xor    %ebx,%ebx
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
mov    %ebx,%eax
jmp    805d349 <sidput@plt+0xf7e9>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805d3e2 <sidput@plt+0xf882>
mov    $0x1,%ebx
jmp    805d3fc <sidput@plt+0xf89c>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %ebx,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    805d3a2 <sidput@plt+0xf842>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %ecx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x5c,%esp
lea    0x24(%esp),%ebx
mov    %edx,0x4(%esp)
lea    0x20(%esp),%edi
mov    %ebx,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %ebx,0x4(%esp)
lea    0x34(%esp),%ebx
movl   $0x0,0x8(%esp)
mov    %ebx,(%esp)
call   806b830 <dbus_set_error+0x730>
jmp    805d521 <sidput@plt+0xf9c1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
call   806bec0 <dbus_set_error+0xdc0>
test   %ebp,%ebp
mov    $0x809b49c,%edx
mov    $0x8096c6a,%eax
cmove  %edx,%eax
mov    %eax,0x8(%esp)
movl   $0x8098a44,0x4(%esp)
mov    %esi,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     805d540 <sidput@plt+0xf9e0>
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    (%eax),%eax
add    0x1c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807fa10 <dbus_shutdown+0xd30>
test   %eax,%eax
je     805d540 <sidput@plt+0xf9e0>
movl   $0x809d8ac,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805d540 <sidput@plt+0xf9e0>
mov    %ebx,(%esp)
call   806bb40 <dbus_set_error+0xa40>
mov    %ebx,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
jne    805d4a0 <sidput@plt+0xf940>
add    $0x5c,%esp
mov    $0x1,%al
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
mov    %ecx,(%esp)
call   8071710 <dbus_message_get_no_reply>
test   %eax,%eax
je     805d578 <sidput@plt+0xfa18>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ebx
je     805d5e0 <sidput@plt+0xfa80>
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805d5b0 <sidput@plt+0xfa50>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x20(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    805d56d <sidput@plt+0xfa0d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x58(%esp),%esi
lea    0x2c(%esp),%eax
mov    0x5c(%esp),%ebx
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x73,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x2c(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805d658 <sidput@plt+0xfaf8>
xor    %eax,%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x2c(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x50(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
call   8062860 <sidput@plt+0x14d00>
test   %eax,%eax
mov    %eax,%edi
je     805d64e <sidput@plt+0xfaee>
mov    0x54(%esp),%edx
mov    %esi,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   805d550 <sidput@plt+0xf9f0>
test   %eax,%eax
jne    805d6b0 <sidput@plt+0xfb50>
mov    %edi,(%esp)
call   8062570 <sidput@plt+0x14a10>
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8059120 <sidput@plt+0xb5c0>
mov    %ebx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80636e0 <sidput@plt+0x15b80>
test   %eax,%eax
je     805d69c <sidput@plt+0xfb3c>
mov    %edi,(%esp)
call   8062570 <sidput@plt+0x14a10>
mov    $0x1,%eax
jmp    805d650 <sidput@plt+0xfaf0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebx
mov    0x6c(%esp),%esi
movl   $0x0,0x2c(%esp)
mov    %ebx,(%esp)
call   8059470 <sidput@plt+0xb910>
mov    %eax,%edi
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059940 <sidput@plt+0xbde0>
mov    %eax,(%esp)
call   8052f40 <sidput@plt+0x53e0>
cmp    %eax,%edi
jl     805d768 <sidput@plt+0xfc08>
mov    %ebx,(%esp)
call   80591a0 <sidput@plt+0xb640>
mov    $0x8098de1,%edx
test   %eax,%eax
jne    805d848 <sidput@plt+0xfce8>
mov    %edx,0xc(%esp)
movl   $0x8098a68,0x8(%esp)
movl   $0x8096864,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x73,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
je     805d75a <sidput@plt+0xfbfa>
mov    0x2c(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,(%esp)
call   8062860 <sidput@plt+0x14d00>
test   %eax,%eax
mov    %eax,%edi
je     805d75a <sidput@plt+0xfbfa>
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   8059940 <sidput@plt+0xbde0>
mov    %edi,(%esp)
mov    %eax,%ebp
call   80626d0 <sidput@plt+0x14b70>
test   %eax,%eax
je     805d7fa <sidput@plt+0xfc9a>
xor    %eax,%eax
test   %ebp,%ebp
je     805d7e6 <sidput@plt+0xfc86>
mov    %ebp,(%esp)
call   8052de0 <sidput@plt+0x5280>
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   80523b0 <sidput@plt+0x4850>
test   %eax,%eax
je     805d878 <sidput@plt+0xfd18>
mov    %ebx,(%esp)
call   8059120 <sidput@plt+0xb5c0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   80635b0 <sidput@plt+0x15a50>
test   %eax,%eax
je     805d858 <sidput@plt+0xfcf8>
mov    0x68(%esp),%ecx
mov    %ebx,%eax
mov    0x64(%esp),%edx
mov    %esi,(%esp)
call   805d550 <sidput@plt+0xf9f0>
test   %eax,%eax
jne    805d8a7 <sidput@plt+0xfd47>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8063650 <sidput@plt+0x15af0>
mov    %edi,(%esp)
call   8062570 <sidput@plt+0x14a10>
xor    %eax,%eax
jmp    805d75c <sidput@plt+0xfbfc>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,%edx
jmp    805d73e <sidput@plt+0xfbde>
nop
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805d836 <sidput@plt+0xfcd6>
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   80591a0 <sidput@plt+0xb640>
mov    $0x8098de1,%edx
test   %eax,%eax
jne    805d8b9 <sidput@plt+0xfd59>
mov    %edx,0xc(%esp)
movl   $0x8098ad4,0x8(%esp)
movl   $0x809707c,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
jmp    805d836 <sidput@plt+0xfcd6>
mov    %edi,(%esp)
call   8062570 <sidput@plt+0x14a10>
mov    $0x1,%eax
jmp    805d75c <sidput@plt+0xfbfc>
mov    %ebx,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,%edx
jmp    805d889 <sidput@plt+0xfd29>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xec,%esp
mov    0x100(%esp),%eax
lea    0x38(%esp),%ebx
lea    0x28(%esp),%ebp
lea    0x30(%esp),%edi
mov    %eax,(%esp)
call   80590f0 <sidput@plt+0xb590>
mov    %ebx,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   806f850 <dbus_message_iter_init>
lea    0x70(%esp),%eax
mov    %ebx,(%esp)
lea    0xa8(%esp),%ebx
mov    %eax,0x4(%esp)
call   8070210 <dbus_message_iter_recurse>
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x70(%esp),%eax
mov    %eax,(%esp)
call   806fae0 <dbus_message_iter_get_arg_type>
cmp    $0x65,%eax
jne    805da32 <sidput@plt+0xfed2>
lea    0x70(%esp),%eax
mov    %ebx,0x4(%esp)
lea    0x34(%esp),%esi
mov    %eax,(%esp)
call   8070210 <dbus_message_iter_recurse>
jmp    805d9cd <sidput@plt+0xfe6d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %ebx,(%esp)
call   80703e0 <dbus_message_iter_get_basic>
mov    %ebx,(%esp)
call   806fa30 <dbus_message_iter_next>
mov    %ebx,(%esp)
call   806fae0 <dbus_message_iter_get_arg_type>
cmp    $0x73,%eax
jne    805da0f <sidput@plt+0xfeaf>
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   80703e0 <dbus_message_iter_get_basic>
mov    0x30(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     805d9f0 <sidput@plt+0xfe90>
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     805d9f0 <sidput@plt+0xfe90>
mov    %ebx,(%esp)
call   806fa30 <dbus_message_iter_next>
mov    %ebx,(%esp)
call   806fae0 <dbus_message_iter_get_arg_type>
cmp    $0x73,%eax
je     805d968 <sidput@plt+0xfe08>
test   %eax,%eax
jne    805da0f <sidput@plt+0xfeaf>
lea    0x70(%esp),%eax
mov    %eax,(%esp)
call   806fa30 <dbus_message_iter_next>
jmp    805d938 <sidput@plt+0xfdd8>
nop
mov    0x10c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %ebx,%ebx
mov    %ebp,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0xec,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   %eax,%eax
jne    805da0f <sidput@plt+0xfeaf>
mov    0x28(%esp),%esi
mov    0x2c(%esp),%edi
test   %esi,%esi
je     805da96 <sidput@plt+0xff36>
mov    %edi,%eax
xor    %ebx,%ebx
mov    %esi,%edi
mov    %eax,%esi
jmp    805da68 <sidput@plt+0xff08>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%edi
cmp    0x28(%esp),%edi
mov    0x4(%esi),%esi
cmove  %ebx,%edi
cmp    0x2c(%esp),%esi
cmove  %ebx,%esi
test   %edi,%edi
je     805da96 <sidput@plt+0xff36>
mov    0x10c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x8(%esi),%eax
mov    %eax,0x8(%esp)
mov    0x8(%edi),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8050280 <sidput@plt+0x2720>
test   %eax,%eax
jne    805da50 <sidput@plt+0xfef0>
jmp    805da0f <sidput@plt+0xfeaf>
mov    0x10c(%esp),%eax
xor    %ebx,%ebx
mov    0x108(%esp),%ecx
mov    0x104(%esp),%edx
mov    %eax,(%esp)
mov    0x100(%esp),%eax
call   805d550 <sidput@plt+0xf9f0>
test   %eax,%eax
setne  %bl
jmp    805da11 <sidput@plt+0xfeb1>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%esi
mov    %esi,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
jne    805dbf0 <sidput@plt+0x10090>
mov    %esi,(%esp)
xor    %ebp,%ebp
call   80590a0 <sidput@plt+0xb540>
mov    0x6c(%esp),%edx
mov    %esi,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8059860 <sidput@plt+0xbd00>
test   %eax,%eax
jne    805db18 <sidput@plt+0xffb8>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x30(%esp),%ebx
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     805dc18 <sidput@plt+0x100b8>
mov    %esi,(%esp)
call   80590c0 <sidput@plt+0xb560>
mov    0x34(%esp),%ebp
mov    %eax,%edi
jmp    805dbc9 <sidput@plt+0x10069>
nop
movl   $0x809df48,0x4(%esp)
mov    %ebx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805dc40 <sidput@plt+0x100e0>
mov    0x80b87e0,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8087590 <dbus_shutdown+0x88b0>
test   %eax,%eax
je     805dc40 <sidput@plt+0x100e0>
movl   $0x809b4d7,0x4(%esp)
mov    %ebx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805dc40 <sidput@plt+0x100e0>
mov    0x80b87e4,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8087590 <dbus_shutdown+0x88b0>
test   %eax,%eax
je     805dc40 <sidput@plt+0x100e0>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
addl   $0x1,0x80b87e4
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805dc70 <sidput@plt+0x10110>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0x80b87e4,%eax
test   %eax,%eax
jg     805db40 <sidput@plt+0xffe0>
addl   $0x1,0x80b87e0
movl   $0x0,0x80b87e4
00
jmp    805db40 <sidput@plt+0xffe0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%esp),%eax
xor    %ebp,%ebp
movl   $0x8098b18,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x6c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805db0d <sidput@plt+0xffad>
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%esp),%eax
xor    %ebp,%ebp
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x6c(%esp),%eax
xor    %ebp,%ebp
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8059560 <sidput@plt+0xba00>
test   %eax,%eax
je     805dc5e <sidput@plt+0x100fe>
mov    %esi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8072250 <dbus_message_set_sender>
test   %eax,%eax
je     805dc40 <sidput@plt+0x100e0>
mov    %esi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,0x2c(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ebp
je     805dd4b <sidput@plt+0x101eb>
lea    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebp,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     805dd43 <sidput@plt+0x101e3>
mov    0x64(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    %ebp,(%esp)
test   %eax,%eax
je     805dd46 <sidput@plt+0x101e6>
call   806e970 <dbus_message_unref>
mov    0x6c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x64(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   8061050 <sidput@plt+0x134f0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%ebp
jmp    805dc5e <sidput@plt+0x100fe>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
mov    0x6c(%esp),%eax
xor    %ebp,%ebp
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    805dc5e <sidput@plt+0x100fe>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x34,%esp
movl   $0x8098dec,0x8(%esp)
movl   $0x8096b7c,0x4(%esp)
movl   $0x8096b66,(%esp)
movl   $0x80a05b3,0x2c(%esp)
call   8071540 <dbus_message_new_signal>
test   %eax,%eax
mov    %eax,%ebx
je     805de15 <sidput@plt+0x102b5>
movl   $0x8096b7c,0x4(%esp)
mov    %eax,(%esp)
call   8072250 <dbus_message_set_sender>
test   %eax,%eax
je     805de0d <sidput@plt+0x102ad>
mov    0x48(%esp),%eax
lea    0x2c(%esp),%ecx
mov    0x44(%esp),%esi
lea    0x48(%esp),%edx
movl   $0x0,0x1c(%esp)
movl   $0x73,0x14(%esp)
test   %eax,%eax
cmove  %ecx,%edx
test   %esi,%esi
lea    0x44(%esp),%eax
cmove  %ecx,%eax
mov    %eax,0x10(%esp)
lea    0x40(%esp),%eax
mov    %edx,0x18(%esp)
movl   $0x73,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805de40 <sidput@plt+0x102e0>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
mov    0x50(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x34,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   805b7f0 <sidput@plt+0xdc90>
mov    %ebx,(%esp)
mov    %eax,%esi
call   806e970 <dbus_message_unref>
add    $0x34,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
movl   $0x8098dfd,0x8(%esp)
mov    0x20(%esp),%esi
movl   $0x8096b7c,0x4(%esp)
movl   $0x8096b66,(%esp)
call   8071540 <dbus_message_new_signal>
test   %eax,%eax
mov    %eax,%ebx
je     805deef <sidput@plt+0x1038f>
mov    %esi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80720e0 <dbus_message_set_destination>
test   %eax,%eax
je     805dee7 <sidput@plt+0x10387>
lea    0x24(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805df18 <sidput@plt+0x103b8>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
mov    0x2c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    %ebx,(%esp)
test   %eax,%eax
je     805deea <sidput@plt+0x1038a>
call   806e970 <dbus_message_unref>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
movl   $0x8098e06,0x8(%esp)
mov    0x20(%esp),%esi
movl   $0x8096b7c,0x4(%esp)
movl   $0x8096b66,(%esp)
call   8071540 <dbus_message_new_signal>
test   %eax,%eax
mov    %eax,%ebx
je     805dfbf <sidput@plt+0x1045f>
mov    %esi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   80720e0 <dbus_message_set_destination>
test   %eax,%eax
je     805dfb7 <sidput@plt+0x10457>
lea    0x24(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805dfe8 <sidput@plt+0x10488>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
mov    0x2c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
mov    %ebx,(%esp)
test   %eax,%eax
je     805dfba <sidput@plt+0x1045a>
call   806e970 <dbus_message_unref>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
movl   $0x8098b3c,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    805e048 <sidput@plt+0x104e8>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
movl   $0x8098e13,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805e03e <sidput@plt+0x104de>
mov    0x80b8320,%eax
test   %eax,%eax
je     805e140 <sidput@plt+0x105e0>
mov    $0x80b8320,%edi
mov    %eax,0x8(%esp)
movl   $0x8098e24,0x4(%esp)
mov    %esi,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     805e03e <sidput@plt+0x104de>
mov    0x4(%edi),%ebx
mov    (%ebx),%eax
test   %eax,%eax
jne    805e0dc <sidput@plt+0x1057c>
nop
jmp    805e100 <sidput@plt+0x105a0>
lea    0x0(%esi),%esi
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
mov    %esi,%eax
call   805d460 <sidput@plt+0xf900>
test   %eax,%eax
je     805e03e <sidput@plt+0x104de>
mov    0x8(%ebx),%edx
xor    %ecx,%ecx
mov    %esi,%eax
call   805d460 <sidput@plt+0xf900>
test   %eax,%eax
je     805e03e <sidput@plt+0x104de>
movl   $0x8098e55,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805e03e <sidput@plt+0x104de>
add    $0x10,%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     805e100 <sidput@plt+0x105a0>
mov    %eax,0x8(%esp)
movl   $0x8098e3d,0x4(%esp)
mov    %esi,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
jne    805e098 <sidput@plt+0x10538>
jmp    805e03e <sidput@plt+0x104de>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edi),%eax
test   %eax,%eax
je     805e11b <sidput@plt+0x105bb>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805e03e <sidput@plt+0x104de>
movl   $0x8098e64,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805e03e <sidput@plt+0x104de>
add    $0xc,%edi
mov    (%edi),%eax
test   %eax,%eax
jne    805e06e <sidput@plt+0x1050e>
movl   $0x8098e1b,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    805e040 <sidput@plt+0x104e0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x3c,%esp
mov    0x58(%esp),%edi
mov    0x5c(%esp),%esi
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
jne    805e198 <sidput@plt+0x10638>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     805e248 <sidput@plt+0x106e8>
mov    %ebp,(%esp)
call   805e020 <sidput@plt+0x104c0>
test   %eax,%eax
je     805e218 <sidput@plt+0x106b8>
mov    0x20(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ebx
je     805e218 <sidput@plt+0x106b8>
lea    0x1c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebx,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    805e270 <sidput@plt+0x10710>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   806e970 <dbus_message_unref>
jmp    805e230 <sidput@plt+0x106d0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebp,(%esp)
xor    %ebx,%ebx
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
call   806af90 <dbus_set_error_const>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x50(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8059aa0 <sidput@plt+0xbf40>
test   %eax,%eax
je     805e1f2 <sidput@plt+0x10692>
mov    %ebx,(%esp)
mov    $0x1,%ebx
call   806e970 <dbus_message_unref>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    805e189 <sidput@plt+0x10629>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%ebx
movl   $0x8098e74,0x8(%esp)
mov    0x50(%esp),%esi
movl   $0x80968f0,0x4(%esp)
mov    0x54(%esp),%ebp
mov    0x5c(%esp),%edi
mov    %ebx,(%esp)
call   8072920 <dbus_message_is_signal>
test   %eax,%eax
jne    805e300 <sidput@plt+0x107a0>
mov    %ebx,(%esp)
call   806f7e0 <dbus_message_get_type>
mov    $0x1,%edx
cmp    $0x1,%eax
je     805e328 <sidput@plt+0x107c8>
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
call   8059070 <sidput@plt+0xb510>
mov    %eax,(%esp)
call   8052e50 <sidput@plt+0x52f0>
mov    %ebx,0x54(%esp)
mov    %eax,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8051060 <sidput@plt+0x3500>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8071c30 <dbus_message_get_interface>
mov    %ebx,(%esp)
mov    %eax,0x1c(%esp)
call   8071e00 <dbus_message_get_member>
mov    %eax,0x18(%esp)
mov    0x80b8320,%eax
test   %eax,%eax
je     805e492 <sidput@plt+0x10932>
mov    %ebx,0x28(%esp)
mov    0x1c(%esp),%ebx
mov    $0x80b8320,%ecx
mov    %esi,0x20(%esp)
mov    %ecx,%esi
movl   $0x0,0x2c(%esp)
mov    %ebp,0x24(%esp)
test   %ebx,%ebx
je     805e3c8 <sidput@plt+0x10868>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     805e3c8 <sidput@plt+0x10868>
add    $0xc,%esi
mov    (%esi),%eax
test   %eax,%eax
jne    805e36c <sidput@plt+0x1080c>
mov    0x2c(%esp),%edx
mov    $0x8098bf8,%eax
test   %edx,%edx
mov    $0x8098bcc,%edx
cmovne %edx,%eax
mov    0x18(%esp),%ecx
movl   $0x8096b7c,0xc(%esp)
movl   $0x8098c54,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    %edi,(%esp)
call   806b100 <dbus_set_error>
xor    %edx,%edx
jmp    805e2f5 <sidput@plt+0x10795>
nop
mov    0x4(%esi),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     805e3ff <sidput@plt+0x1089f>
mov    %ebx,0x1c(%esp)
mov    0x18(%esp),%ebx
mov    %esi,%ecx
mov    %ebp,%esi
mov    %ecx,%ebp
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     805e410 <sidput@plt+0x108b0>
add    $0x10,%esi
mov    (%esi),%eax
test   %eax,%eax
jne    805e3e0 <sidput@plt+0x10880>
mov    0x1c(%esp),%ebx
mov    %ebp,%esi
movl   $0x1,0x2c(%esp)
jmp    805e380 <sidput@plt+0x10820>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%edx
mov    0x28(%esp),%ebx
mov    0x4(%edx),%eax
mov    %edx,0x1c(%esp)
mov    0x20(%esp),%esi
mov    0x24(%esp),%ebp
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8072c20 <dbus_message_has_signature>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     805e458 <sidput@plt+0x108f8>
mov    %edi,0xc(%esp)
mov    %ebx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   *0xc(%edx)
xor    %edx,%edx
test   %eax,%eax
setne  %dl
jmp    805e2f5 <sidput@plt+0x10795>
nop
mov    0x4(%edx),%esi
mov    %ebx,(%esp)
call   80727e0 <dbus_message_get_signature>
movl   $0x8098c24,0x8(%esp)
mov    %esi,0x14(%esp)
movl   $0x80965d4,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
call   806b100 <dbus_set_error>
xor    %edx,%edx
jmp    805e2f5 <sidput@plt+0x10795>
mov    $0x8098bf8,%eax
jmp    805e39c <sidput@plt+0x1083c>
lea    0x0(%esi,%eiz,1),%esi
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x18,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     805e560 <sidput@plt+0x10a00>
mov    0x28(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %ebx,0x8(%esp)
movl   $0x805e620,0x4(%esp)
mov    %eax,0xc(%ebx)
mov    0x2c(%esp),%eax
movl   $0x64,(%esp)
mov    %eax,0x10(%ebx)
mov    0x20(%esp),%eax
mov    %eax,0x8(%ebx)
mov    0x24(%esp),%eax
mov    %eax,0x14(%ebx)
call   8077f00 <dbus_type_is_fixed+0xa0>
test   %eax,%eax
mov    %eax,0x4(%ebx)
je     805e54f <sidput@plt+0x109ef>
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   8077f70 <dbus_type_is_fixed+0x110>
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   80881e0 <dbus_shutdown+0x9500>
mov    %ebx,%edx
test   %eax,%eax
je     805e540 <sidput@plt+0x109e0>
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebx),%eax
test   %eax,%eax
je     805e54f <sidput@plt+0x109ef>
mov    %eax,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
xor    %edx,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
xor    %edx,%edx
jmp    805e535 <sidput@plt+0x109d5>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8088270 <dbus_shutdown+0x9590>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
test   %eax,%eax
js     805e5e8 <sidput@plt+0x10a88>
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8077f60 <dbus_type_is_fixed+0x100>
mov    %ebx,0x20(%esp)
movl   $0x1,0x24(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8077f70 <dbus_type_is_fixed+0x110>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8078360 <dbus_timeout_get_enabled>
test   %eax,%eax
jne    805e600 <sidput@plt+0x10aa0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x20(%esp)
movl   $0x0,0x24(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8077f70 <dbus_type_is_fixed+0x110>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%esi
movl   $0xffffffff,0x20(%esp)
mov    (%esi),%ebx
test   %ebx,%ebx
je     805e766 <sidput@plt+0x10c06>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
mov    0x3c(%esp),%ebx
mov    %esi,(%esp)
mov    0x38(%esp),%edi
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     805e766 <sidput@plt+0x10c06>
mov    %edi,0x28(%esp)
xor    %edi,%edi
fildl  0x28(%esp)
fstpl  0x10(%esp)
mov    %ebx,0x28(%esp)
fildl  0x28(%esp)
fstpl  0x18(%esp)
movl   $0x0,0x24(%esp)
movl   $0x36ee80,0x20(%esp)
jmp    805e6c7 <sidput@plt+0x10b67>
lea    0x0(%esi),%esi
test   %ebp,%ebp
jne    805e6db <sidput@plt+0x10b7b>
jmp    805e6a4 <sidput@plt+0x10b44>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
mov    0x10(%esi),%edx
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
call   *0xc(%esi)
test   %eax,%eax
je     805e7a0 <sidput@plt+0x10c40>
test   %ebx,%ebx
je     805e750 <sidput@plt+0x10bf0>
mov    %ebx,%eax
mov    0x8(%eax),%ecx
mov    0x4(%eax),%ebx
cmp    (%esi),%ebx
mov    (%ecx),%edx
cmove  %edi,%ebx
mov    0x4(%ecx),%ebp
test   %edx,%edx
je     805e698 <sidput@plt+0x10b38>
mov    0x14(%esi),%ecx
test   %ecx,%ecx
jle    805e6bd <sidput@plt+0x10b5d>
mov    %edx,0x28(%esp)
fildl  0x28(%esp)
fsubrl 0x10(%esp)
mov    %ebp,0x28(%esp)
flds   0x80981e4
fmul   %st,%st(1)
fildl  0x28(%esp)
fsubrl 0x18(%esp)
mov    %ecx,0x28(%esp)
fdivp  %st,%st(1)
faddp  %st,%st(1)
fildl  0x28(%esp)
fxch   %st(1)
fucomi %st(1),%st
jae    805e6a0 <sidput@plt+0x10b40>
fsubrp %st,%st(1)
fildl  0x20(%esp)
fucomip %st(1),%st
jbe    805e788 <sidput@plt+0x10c28>
fnstcw 0x2e(%esp)
test   %ebx,%ebx
movl   $0x1,0x24(%esp)
movzwl 0x2e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x2c(%esp)
fldcw  0x2c(%esp)
fistpl 0x20(%esp)
fldcw  0x2e(%esp)
jne    805e6c5 <sidput@plt+0x10b65>
lea    0x0(%esi),%esi
mov    $0x1,%edx
mov    $0xffffffff,%eax
mov    0x24(%esp),%ecx
test   %ecx,%ecx
je     805e798 <sidput@plt+0x10c38>
test   %dl,%dl
je     805e798 <sidput@plt+0x10c38>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   805e5b0 <sidput@plt+0x10a50>
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
fstp   %st(0)
movl   $0x1,0x24(%esp)
jmp    805e6bd <sidput@plt+0x10b5d>
nop
mov    %eax,0x20(%esp)
jmp    805e766 <sidput@plt+0x10c06>
xchg   %ax,%ax
call   8088370 <dbus_shutdown+0x9690>
mov    %eax,%edi
shr    $0x1f,%edi
mov    %edi,%edx
jmp    805e75a <sidput@plt+0x10bfa>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   805e5b0 <sidput@plt+0x10a50>
add    $0x1c,%esp
ret
xchg   %ax,%ax
jmp    807d840 <dbus_watch_handle+0x1c80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    807d870 <dbus_watch_handle+0x1cb0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    807d7e0 <dbus_watch_handle+0x1c20>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807d570 <dbus_watch_handle+0x19b0>
test   %eax,%eax
mov    %eax,%ebx
jne    805e828 <sidput@plt+0x10cc8>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078360 <dbus_timeout_get_enabled>
test   %eax,%eax
jne    805e81f <sidput@plt+0x10cbf>
movl   $0x0,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   805e5b0 <sidput@plt+0x10a50>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8078360 <dbus_timeout_get_enabled>
test   %eax,%eax
je     805e890 <sidput@plt+0x10d30>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x24(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    805e5b0 <sidput@plt+0x10a50>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    807d900 <dbus_watch_handle+0x1d40>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x4(%esp),%ecx
mov    0x4(%eax),%edx
xor    %eax,%eax
cmp    (%ecx),%edx
cmovne %edx,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d920 <dbus_watch_handle+0x1d60>
test   %eax,%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     805e950 <sidput@plt+0x10df0>
mov    %ebx,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x805eca0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %ebx,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    %edx,%ebx
sub    $0x1c,%esp
mov    %edx,(%esp)
mov    0x30(%esp),%edi
mov    %eax,0x8(%esp)
mov    0x34(%esp),%esi
mov    %ecx,0xc(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     805e9d0 <sidput@plt+0x10e70>
mov    (%ebx),%ebp
jmp    805e999 <sidput@plt+0x10e39>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x4,%edx
je     805e9e0 <sidput@plt+0x10e80>
test   %eax,%eax
je     805e9d0 <sidput@plt+0x10e70>
mov    0x8(%eax),%ecx
mov    $0x0,%ebx
mov    0x4(%eax),%eax
mov    0x4(%ecx),%edx
cmp    %ebp,%eax
cmove  %ebx,%eax
cmp    $0x3,%edx
jne    805e990 <sidput@plt+0x10e30>
mov    0xc(%ecx),%edx
cmp    $0xffffffff,%edx
je     805e9bf <sidput@plt+0x10e5f>
cmp    0xc(%esp),%edx
jne    805e995 <sidput@plt+0x10e35>
movzbl 0x8(%ecx),%edx
mov    %edx,%ecx
and    $0x1,%ecx
mov    %ecx,0x8(%esp)
test   %eax,%eax
jne    805e999 <sidput@plt+0x10e39>
mov    0x8(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ecx),%ebx
cmp    $0xffffffff,%ebx
je     805e9bf <sidput@plt+0x10e5f>
cmp    $0x0,%esi
jle    805ea13 <sidput@plt+0x10eb3>
cmp    (%edi),%ebx
je     805e9bf <sidput@plt+0x10e5f>
xor    %dl,%dl
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
cmp    %esi,%edx
je     805e995 <sidput@plt+0x10e35>
cmp    (%edi,%edx,4),%ebx
jne    805e9f8 <sidput@plt+0x10e98>
movzbl 0x8(%ecx),%edx
mov    %edx,%ecx
and    $0x1,%ecx
mov    %ecx,0x8(%esp)
jmp    805e9cc <sidput@plt+0x10e6c>
jne    805e9bf <sidput@plt+0x10e5f>
jmp    805e995 <sidput@plt+0x10e35>
lea    0x0(%esi),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
lea    0x4(%esi),%eax
mov    %eax,0xc(%esp)
xchg   %ax,%ax
test   %ebx,%ebx
je     805ea70 <sidput@plt+0x10f10>
mov    0x8(%ebx),%esi
mov    0x4(%ebx),%ebx
cmp    (%edi),%ebx
cmove  %ebp,%ebx
cmpl   $0x2,0x4(%esi)
ja     805ea40 <sidput@plt+0x10ee0>
mov    0xc(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     805ea80 <sidput@plt+0x10f20>
addl   $0x1,(%esi)
test   %ebx,%ebx
jne    805ea44 <sidput@plt+0x10ee4>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807c4f0 <dbus_watch_handle+0x930>
test   %eax,%eax
je     805eab8 <sidput@plt+0x10f58>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
je     805eaee <sidput@plt+0x10f8e>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   807c6b0 <dbus_watch_handle+0xaf0>
mov    %eax,%edx
mov    %edi,%eax
test   %edx,%edx
jne    805eaaa <sidput@plt+0x10f4a>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    805eaaa <sidput@plt+0x10f4a>
xor    %eax,%eax
jmp    805eaaa <sidput@plt+0x10f4a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    %edx,(%esp)
lea    0x1c(%esp),%esi
movl   $0x0,0x1c(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     805eb67 <sidput@plt+0x11007>
mov    0x8(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     805eb88 <sidput@plt+0x11028>
mov    0x4(%ebx),%ebx
cmp    0x0(%ebp),%ebx
jne    805eb28 <sidput@plt+0x10fc8>
mov    %esi,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
mov    %eax,%edx
je     805eb75 <sidput@plt+0x11015>
mov    0x8(%edx),%eax
addl   $0x1,(%eax)
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    %esi,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
mov    %eax,%edx
jne    805eb55 <sidput@plt+0x10ff5>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x3c,%esp
lea    0x18(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %edx,(%esp)
call   807c250 <dbus_watch_handle+0x690>
jmp    805ebec <sidput@plt+0x1108c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   807c3e0 <dbus_watch_handle+0x820>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   807c380 <dbus_watch_handle+0x7c0>
mov    %ebp,%edx
mov    %eax,%edi
mov    %esi,%eax
call   805ea90 <sidput@plt+0x10f30>
test   %eax,%eax
je     805ec08 <sidput@plt+0x110a8>
mov    %edi,%edx
call   805eb00 <sidput@plt+0x10fa0>
test   %eax,%eax
je     805ec08 <sidput@plt+0x110a8>
mov    %ebx,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    805ebc0 <sidput@plt+0x11060>
add    $0x3c,%esp
mov    $0x1,%al
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x4(%eax),%eax
cmp    $0x1,%eax
je     805ec50 <sidput@plt+0x110f0>
jb     805ec50 <sidput@plt+0x110f0>
cmp    $0x2,%eax
jne    805ec40 <sidput@plt+0x110e0>
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x1c(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x20(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
je     805ecb8 <sidput@plt+0x11158>
repz ret
lea    0x0(%esi,%eiz,1),%esi
jmp    805ec20 <sidput@plt+0x110c0>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
je     805ecd8 <sidput@plt+0x11178>
repz ret
lea    0x0(%esi,%eiz,1),%esi
jmp    805ec20 <sidput@plt+0x110c0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x28,(%esp)
mov    0x20(%esp),%ebx
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     805ed58 <sidput@plt+0x111f8>
movzbl 0x8(%eax),%edx
movzbl 0x24(%esp),%ecx
mov    %ebx,0x4(%eax)
movl   $0x1,(%eax)
and    $0xfffffffe,%edx
and    $0x1,%ecx
or     %ecx,%edx
cmp    $0x1,%ebx
mov    %dl,0x8(%eax)
je     805ed38 <sidput@plt+0x111d8>
jb     805ed38 <sidput@plt+0x111d8>
cmp    $0x3,%ebx
je     805ed26 <sidput@plt+0x111c6>
cmp    $0x4,%ebx
jne    805ed2d <sidput@plt+0x111cd>
movl   $0xffffffff,0xc(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
movzbl 0x24(%eax),%edx
add    %ecx,%ecx
movl   $0x0,0xc(%eax)
and    $0xfffffffd,%edx
or     %ecx,%edx
mov    %dl,0x24(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    805ed2d <sidput@plt+0x111cd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
jne    805ed88 <sidput@plt+0x11228>
jmp    805ec20 <sidput@plt+0x110c0>
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
subl   $0x1,(%ebx)
je     805edb8 <sidput@plt+0x11258>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x4(%ebx),%esi
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x805eca0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
lea    0x8(%ebx),%esi
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x805eca0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
lea    0x14(%ebx),%esi
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x805eca0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
lea    0x18(%ebx),%esi
call   807d8c0 <dbus_watch_handle+0x1d00>
movl   $0x0,0x8(%esp)
movl   $0x805eca0,0x4(%esp)
mov    %esi,(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     805ee5a <sidput@plt+0x112fa>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
movl   $0x0,0xc(%ebx)
mov    0x10(%ebx),%eax
test   %eax,%eax
je     805ee70 <sidput@plt+0x11310>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
movl   $0x0,0x10(%ebx)
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    807ebb0 <dbus_free>
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x1c,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     805eef0 <sidput@plt+0x11390>
movl   $0x1,(%eax)
movl   $0x805e910,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0xc(%ebx)
je     805eef8 <sidput@plt+0x11398>
movl   $0x805e910,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x10(%ebx)
je     805eef8 <sidput@plt+0x11398>
mov    %ebx,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    805eee4 <sidput@plt+0x11384>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   805eda0 <sidput@plt+0x11240>
xor    %eax,%eax
jmp    805eee4 <sidput@plt+0x11384>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x28,%esp
mov    0x34(%esp),%ebx
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   808a250 <dbus_shutdown+0xb570>
xor    %edx,%edx
test   %eax,%eax
je     805ef88 <sidput@plt+0x11428>
mov    %ebx,(%esp)
call   808a2b0 <dbus_shutdown+0xb5d0>
mov    0x30(%esp),%ecx
lea    0x4(%ecx),%edx
mov    0x1c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    0x18(%esp),%ecx
mov    %ecx,(%esp)
mov    %ebx,%ecx
call   805e960 <sidput@plt+0x10e00>
mov    0x30(%esp),%ecx
lea    0x8(%ecx),%edx
mov    0x1c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    0x18(%esp),%ecx
mov    %ecx,(%esp)
mov    %ebx,%ecx
call   805e960 <sidput@plt+0x10e00>
mov    %eax,%ebx
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,%edx
add    $0x28,%esp
mov    %edx,%eax
pop    %ebx
ret
nop
mov    0x8(%esp),%eax
mov    %eax,0x4(%esp)
jmp    808a2e0 <dbus_shutdown+0xb600>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ebx
add    $0x4,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
xor    %edx,%edx
test   %eax,%eax
je     805efc6 <sidput@plt+0x11466>
addl   $0x1,(%ebx)
mov    $0x1,%dl
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ebx
add    $0x8,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
xor    %edx,%edx
test   %eax,%eax
je     805eff6 <sidput@plt+0x11496>
addl   $0x1,(%ebx)
mov    $0x1,%dl
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    0x28(%esp),%ebx
mov    0xc(%eax),%eax
call   805ea90 <sidput@plt+0x10f30>
test   %eax,%eax
je     805f040 <sidput@plt+0x114e0>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     805f040 <sidput@plt+0x114e0>
addl   $0x1,(%ebx)
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
mov    0x28(%esp),%ebx
mov    0x10(%eax),%eax
call   805ea90 <sidput@plt+0x10f30>
test   %eax,%eax
je     805f090 <sidput@plt+0x11530>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     805f090 <sidput@plt+0x11530>
addl   $0x1,(%ebx)
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
mov    0x28(%esp),%ebx
test   %eax,%eax
mov    0x20(%esp),%eax
mov    %ebx,0x4(%esp)
je     805f0d8 <sidput@plt+0x11578>
add    $0x14,%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     805f0e7 <sidput@plt+0x11587>
addl   $0x1,(%ebx)
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    805f0c7 <sidput@plt+0x11567>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x4,%esp
mov    0x10(%esp),%ebx
mov    0x14(%esp),%esi
lea    0x4(%ebx),%eax
lea    0x4(%esi),%edx
call   805eb00 <sidput@plt+0x10fa0>
test   %eax,%eax
jne    805f118 <sidput@plt+0x115b8>
xor    %eax,%eax
add    $0x4,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x8(%esi),%edx
lea    0x8(%ebx),%eax
call   805eb00 <sidput@plt+0x10fa0>
test   %eax,%eax
je     805f10c <sidput@plt+0x115ac>
lea    0x14(%esi),%edx
lea    0x14(%ebx),%eax
call   805eb00 <sidput@plt+0x10fa0>
test   %eax,%eax
je     805f10c <sidput@plt+0x115ac>
lea    0x18(%esi),%edx
lea    0x18(%ebx),%eax
call   805eb00 <sidput@plt+0x10fa0>
test   %eax,%eax
je     805f10c <sidput@plt+0x115ac>
mov    0xc(%esi),%edx
mov    0xc(%ebx),%eax
call   805eba0 <sidput@plt+0x11040>
test   %eax,%eax
je     805f10c <sidput@plt+0x115ac>
mov    0x10(%esi),%edx
mov    0x10(%ebx),%eax
call   805eba0 <sidput@plt+0x11040>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    805f10e <sidput@plt+0x115ae>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
movl   $0x8,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     805f189 <sidput@plt+0x11629>
movl   $0x1,(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
subl   $0x1,(%ebx)
je     805f1b8 <sidput@plt+0x11658>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x4(%ebx),%esi
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x805ecc0,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ecx
lea    0x4(%ecx),%eax
mov    %eax,(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x18(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%esi
je     805f2de <sidput@plt+0x1177e>
mov    0x14(%esp),%ecx
jmp    805f22a <sidput@plt+0x116ca>
xchg   %ax,%ax
test   %edi,%edi
je     805f2de <sidput@plt+0x1177e>
mov    %edi,%esi
mov    0x4(%esi),%edi
mov    $0x0,%eax
cmp    0x4(%ecx),%edi
cmove  %eax,%edi
mov    0x8(%esi),%eax
mov    0x4(%eax),%ebp
cmp    $0x1,%ebp
je     805f2e8 <sidput@plt+0x11788>
jb     805f2e8 <sidput@plt+0x11788>
cmp    $0x2,%ebp
jne    805f220 <sidput@plt+0x116c0>
mov    0xc(%eax),%eax
test   %eax,%eax
sete   %al
movzbl %al,%eax
test   %eax,%eax
je     805f220 <sidput@plt+0x116c0>
mov    0x18(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x14(%esp),%ecx
cmp    %esi,%eax
mov    %eax,%edx
je     805f220 <sidput@plt+0x116c0>
mov    %edi,0x1c(%esp)
mov    %ecx,%edi
jmp    805f28e <sidput@plt+0x1172e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ebx
je     805f2d0 <sidput@plt+0x11770>
mov    %ebx,%edx
mov    0x4(%edx),%ebx
mov    $0x0,%ecx
mov    0x8(%edx),%eax
cmp    0x4(%edi),%ebx
cmove  %ecx,%ebx
cmp    0x4(%eax),%ebp
jne    805f288 <sidput@plt+0x11728>
mov    %eax,0x14(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    0x14(%esp),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
jne    805f288 <sidput@plt+0x11728>
call   805ec20 <sidput@plt+0x110c0>
cmp    %esi,%ebx
jne    805f28c <sidput@plt+0x1172c>
mov    %edi,%ecx
mov    0x1c(%esp),%edi
test   %edi,%edi
jne    805f228 <sidput@plt+0x116c8>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0xc(%eax),%ebx
test   %ebx,%ebx
jne    805f220 <sidput@plt+0x116c0>
mov    0x10(%eax),%edx
test   %edx,%edx
jne    805f220 <sidput@plt+0x116c0>
mov    0x14(%eax),%ebx
test   %ebx,%ebx
jne    805f220 <sidput@plt+0x116c0>
mov    0x18(%eax),%edx
test   %edx,%edx
jne    805f220 <sidput@plt+0x116c0>
mov    0x1c(%eax),%ebx
test   %ebx,%ebx
jne    805f220 <sidput@plt+0x116c0>
mov    0x20(%eax),%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
jmp    805f25d <sidput@plt+0x116fd>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
movl   $0x8,(%esp)
mov    0x40(%esp),%esi
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     805f4c0 <sidput@plt+0x11960>
movl   $0x1,(%eax)
mov    %ebx,%edx
lea    0x4(%esi),%eax
call   805ea20 <sidput@plt+0x10ec0>
test   %eax,%eax
jne    805f398 <sidput@plt+0x11838>
mov    0x48(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebx,(%esp)
call   805f1a0 <sidput@plt+0x11640>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%eax
lea    0x1c(%esp),%ebp
mov    %eax,(%esp)
call   807cbf0 <dbus_watch_handle+0x1030>
test   %eax,%eax
jle    805f41e <sidput@plt+0x118be>
mov    0x48(%esp),%eax
lea    0x1c(%esp),%ebp
mov    %ebp,0x8(%esp)
mov    %eax,0xc(%esp)
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8058e80 <sidput@plt+0xb320>
test   %eax,%eax
je     805f381 <sidput@plt+0x11821>
mov    0x1c(%esp),%eax
xor    %edi,%edi
test   %eax,%eax
jle    805f412 <sidput@plt+0x118b2>
lea    0x0(%esi),%esi
mov    0x18(%esp),%eax
mov    (%eax,%edi,4),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   807c4f0 <dbus_watch_handle+0x930>
test   %eax,%eax
je     805f409 <sidput@plt+0x118a9>
mov    %ebx,%edx
call   805ea20 <sidput@plt+0x10ec0>
test   %eax,%eax
je     805f4e8 <sidput@plt+0x11988>
add    $0x1,%edi
cmp    %edi,0x1c(%esp)
jg     805f3e0 <sidput@plt+0x11880>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x44(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8065de0 <dbus_connection_get_unix_user>
test   %eax,%eax
je     805f498 <sidput@plt+0x11938>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807cbf0 <dbus_watch_handle+0x1030>
test   %eax,%eax
jle    805f467 <sidput@plt+0x11907>
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807c4f0 <dbus_watch_handle+0x930>
test   %eax,%eax
je     805f467 <sidput@plt+0x11907>
mov    %ebx,%edx
call   805ea20 <sidput@plt+0x10ec0>
test   %eax,%eax
je     805f365 <sidput@plt+0x11805>
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   808a280 <dbus_shutdown+0xb5a0>
test   %eax,%eax
je     805f500 <sidput@plt+0x119a0>
lea    0x14(%esi),%eax
mov    %ebx,%edx
call   805ea20 <sidput@plt+0x10ec0>
test   %eax,%eax
je     805f365 <sidput@plt+0x11805>
lea    0x0(%esi),%esi
lea    0x8(%esi),%eax
mov    %ebx,%edx
call   805ea20 <sidput@plt+0x10ec0>
test   %eax,%eax
je     805f365 <sidput@plt+0x11805>
mov    %ebx,(%esp)
call   805f1f0 <sidput@plt+0x11690>
mov    %ebx,%eax
jmp    805f38b <sidput@plt+0x1182b>
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    805f365 <sidput@plt+0x11805>
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
cmp    $0x1,%eax
je     805f381 <sidput@plt+0x11821>
lea    0x18(%esi),%eax
mov    %ebx,%edx
call   805ea20 <sidput@plt+0x10ec0>
test   %eax,%eax
je     805f365 <sidput@plt+0x11805>
jmp    805f498 <sidput@plt+0x11938>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ebx
add    $0x4,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
xor    %edx,%edx
test   %eax,%eax
je     805f556 <sidput@plt+0x119f6>
addl   $0x1,(%ebx)
mov    $0x1,%dl
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x54(%esp),%eax
mov    0x40(%esp),%edi
mov    0x50(%esp),%esi
movl   $0x0,(%eax)
lea    0x4(%edi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
movl   $0x0,0xc(%esp)
mov    %eax,%ebx
xchg   %ax,%ax
test   %ebx,%ebx
je     805f758 <sidput@plt+0x11bf8>
mov    0x8(%ebx),%ebp
mov    $0x0,%eax
mov    0x4(%ebx),%ebx
cmp    0x4(%edi),%ebx
cmove  %eax,%ebx
mov    0x4(%ebp),%eax
test   %eax,%eax
jne    805f590 <sidput@plt+0x11a30>
mov    0xc(%ebp),%eax
test   %eax,%eax
je     805f5c4 <sidput@plt+0x11a64>
mov    %esi,(%esp)
call   806f7e0 <dbus_message_get_type>
cmp    0xc(%ebp),%eax
jne    805f590 <sidput@plt+0x11a30>
mov    %esi,(%esp)
call   806f1f0 <dbus_message_get_reply_serial>
test   %eax,%eax
je     805f5e8 <sidput@plt+0x11a88>
mov    0x48(%esp),%eax
test   %eax,%eax
jne    805f778 <sidput@plt+0x11c18>
testb  $0x1,0x8(%ebp)
jne    805f798 <sidput@plt+0x11c38>
xchg   %ax,%ax
mov    0x10(%ebp),%eax
test   %eax,%eax
je     805f622 <sidput@plt+0x11ac2>
mov    %esi,(%esp)
call   8071990 <dbus_message_get_path>
test   %eax,%eax
je     805f622 <sidput@plt+0x11ac2>
mov    0x10(%ebp),%ecx
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
call   8071990 <dbus_message_get_path>
mov    0x8(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805f590 <sidput@plt+0x11a30>
mov    0x14(%ebp),%eax
test   %eax,%eax
je     805f660 <sidput@plt+0x11b00>
mov    %esi,(%esp)
call   8071c30 <dbus_message_get_interface>
test   %eax,%eax
je     805f768 <sidput@plt+0x11c08>
mov    0x14(%ebp),%ecx
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
call   8071c30 <dbus_message_get_interface>
mov    0x8(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805f590 <sidput@plt+0x11a30>
mov    0x18(%ebp),%eax
test   %eax,%eax
je     805f69a <sidput@plt+0x11b3a>
mov    %esi,(%esp)
call   8071e00 <dbus_message_get_member>
test   %eax,%eax
je     805f69a <sidput@plt+0x11b3a>
mov    0x18(%ebp),%ecx
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
call   8071e00 <dbus_message_get_member>
mov    0x8(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805f590 <sidput@plt+0x11a30>
mov    0x1c(%ebp),%ecx
test   %ecx,%ecx
je     805f6d4 <sidput@plt+0x11b74>
mov    %esi,(%esp)
call   8072050 <dbus_message_get_error_name>
test   %eax,%eax
je     805f6d4 <sidput@plt+0x11b74>
mov    0x1c(%ebp),%ecx
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
call   8072050 <dbus_message_get_error_name>
mov    0x8(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805f590 <sidput@plt+0x11a30>
mov    0x20(%ebp),%eax
test   %eax,%eax
je     805f72b <sidput@plt+0x11bcb>
mov    0x4c(%esp),%edx
mov    %eax,0x4(%esp)
test   %edx,%edx
je     805f7b0 <sidput@plt+0x11c50>
lea    0x10(%esp),%eax
mov    %eax,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
lea    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805f590 <sidput@plt+0x11a30>
mov    0x4c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8061cd0 <sidput@plt+0x14170>
test   %eax,%eax
je     805f590 <sidput@plt+0x11a30>
movzbl 0x8(%ebp),%eax
mov    0x58(%esp),%edx
and    $0x1,%eax
mov    %eax,0xc(%esp)
movzbl 0x24(%ebp),%eax
shr    $0x2,%al
and    $0x1,%eax
mov    %eax,(%edx)
mov    0x54(%esp),%eax
addl   $0x1,(%eax)
test   %ebx,%ebx
jne    805f598 <sidput@plt+0x11a38>
lea    0x0(%esi),%esi
mov    0xc(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x8(%ebp)
jne    805f590 <sidput@plt+0x11a30>
jmp    805f660 <sidput@plt+0x11b00>
nop
testb  $0x1,0x8(%ebp)
jne    805f5e8 <sidput@plt+0x11a88>
testb  $0x2,0x24(%ebp)
je     805f590 <sidput@plt+0x11a30>
jmp    805f5e8 <sidput@plt+0x11a88>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x24(%ebp),%eax
and    $0x3,%eax
cmp    $0x2,%al
jne    805f5e8 <sidput@plt+0x11a88>
jmp    805f590 <sidput@plt+0x11a30>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8072ac0 <dbus_message_has_destination>
test   %eax,%eax
je     805f590 <sidput@plt+0x11a30>
jmp    805f72b <sidput@plt+0x11bcb>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x64(%esp),%eax
cmp    %eax,0x60(%esp)
mov    0x50(%esp),%esi
movl   $0x0,0x14(%esp)
je     805f805 <sidput@plt+0x11ca5>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   80721c0 <dbus_message_get_destination>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
movl   $0x0,(%eax)
lea    0x4(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
movl   $0x0,0x18(%esp)
test   %eax,%eax
mov    %eax,%ebx
je     805fa00 <sidput@plt+0x11ea0>
xor    %edi,%edi
jmp    805f838 <sidput@plt+0x11cd8>
test   %ebx,%ebx
je     805fa00 <sidput@plt+0x11ea0>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%ebx
cmp    0x4(%esi),%ebx
cmove  %edi,%ebx
cmpl   $0x1,0x4(%ebp)
jne    805f830 <sidput@plt+0x11cd0>
mov    0xc(%ebp),%eax
test   %eax,%eax
jne    805fa30 <sidput@plt+0x11ed0>
mov    0x14(%esp),%eax
test   %eax,%eax
je     805fa10 <sidput@plt+0x11eb0>
testb  $0x1,0x8(%ebp)
je     805f870 <sidput@plt+0x11d10>
testb  $0x1,0x24(%ebp)
je     805f830 <sidput@plt+0x11cd0>
lea    0x0(%esi),%esi
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   806f1f0 <dbus_message_get_reply_serial>
test   %eax,%eax
je     805f8a0 <sidput@plt+0x11d40>
mov    0x58(%esp),%eax
test   %eax,%eax
jne    805fa50 <sidput@plt+0x11ef0>
testb  $0x1,0x8(%ebp)
je     805f8a0 <sidput@plt+0x11d40>
movzbl 0x24(%ebp),%eax
and    $0x3,%eax
cmp    $0x2,%al
je     805f830 <sidput@plt+0x11cd0>
lea    0x0(%esi),%esi
mov    0x10(%ebp),%eax
test   %eax,%eax
je     805f8e2 <sidput@plt+0x11d82>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8071990 <dbus_message_get_path>
test   %eax,%eax
je     805f8e2 <sidput@plt+0x11d82>
mov    0x68(%esp),%eax
mov    0x10(%ebp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
call   8071990 <dbus_message_get_path>
mov    0x1c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805f830 <sidput@plt+0x11cd0>
mov    0x14(%ebp),%eax
test   %eax,%eax
je     805f907 <sidput@plt+0x11da7>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8071c30 <dbus_message_get_interface>
test   %eax,%eax
jne    805fa70 <sidput@plt+0x11f10>
testb  $0x1,0x8(%ebp)
jne    805f830 <sidput@plt+0x11cd0>
mov    0x18(%ebp),%eax
test   %eax,%eax
je     805f949 <sidput@plt+0x11de9>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8071e00 <dbus_message_get_member>
test   %eax,%eax
je     805f949 <sidput@plt+0x11de9>
mov    0x68(%esp),%eax
mov    0x18(%ebp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
call   8071e00 <dbus_message_get_member>
mov    0x1c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805f830 <sidput@plt+0x11cd0>
mov    0x1c(%ebp),%ecx
test   %ecx,%ecx
je     805f98b <sidput@plt+0x11e2b>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8072050 <dbus_message_get_error_name>
test   %eax,%eax
je     805f98b <sidput@plt+0x11e2b>
mov    0x68(%esp),%eax
mov    0x1c(%ebp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
call   8072050 <dbus_message_get_error_name>
mov    0x1c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805f830 <sidput@plt+0x11cd0>
mov    0x20(%ebp),%eax
test   %eax,%eax
je     805f9e2 <sidput@plt+0x11e82>
mov    0x5c(%esp),%edx
mov    %eax,0x4(%esp)
test   %edx,%edx
je     805faa0 <sidput@plt+0x11f40>
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     805f830 <sidput@plt+0x11cd0>
mov    0x5c(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8061cd0 <sidput@plt+0x14170>
test   %eax,%eax
je     805f830 <sidput@plt+0x11cd0>
movzbl 0x8(%ebp),%eax
and    $0x1,%eax
mov    %eax,0x18(%esp)
mov    0x6c(%esp),%eax
addl   $0x1,(%eax)
test   %ebx,%ebx
jne    805f838 <sidput@plt+0x11cd8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x8(%ebp)
jne    805f870 <sidput@plt+0x11d10>
testb  $0x1,0x24(%ebp)
jne    805f830 <sidput@plt+0x11cd0>
jmp    805f870 <sidput@plt+0x11d10>
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   806f7e0 <dbus_message_get_type>
cmp    0xc(%ebp),%eax
jne    805f830 <sidput@plt+0x11cd0>
jmp    805f855 <sidput@plt+0x11cf5>
lea    0x0(%esi),%esi
testb  $0x1,0x8(%ebp)
jne    805f8a0 <sidput@plt+0x11d40>
testb  $0x2,0x24(%ebp)
xchg   %ax,%ax
je     805f830 <sidput@plt+0x11cd0>
jmp    805f8a0 <sidput@plt+0x11d40>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%eax
mov    0x14(%ebp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x1c(%esp)
call   8071c30 <dbus_message_get_interface>
mov    0x1c(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    805f830 <sidput@plt+0x11cd0>
jmp    805f907 <sidput@plt+0x11da7>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   8072b70 <dbus_message_has_sender>
test   %eax,%eax
je     805f830 <sidput@plt+0x11cd0>
jmp    805f9e2 <sidput@plt+0x11e82>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x1c(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%ebx
je     805fb50 <sidput@plt+0x11ff0>
xor    %ebp,%ebp
jmp    805faf4 <sidput@plt+0x11f94>
lea    0x0(%esi),%esi
test   %ebx,%ebx
je     805fb50 <sidput@plt+0x11ff0>
mov    0x8(%ebx),%esi
mov    0x4(%ebx),%ebx
cmp    0x1c(%esp),%ebx
cmove  %ebp,%ebx
cmpl   $0x2,0x4(%esi)
jne    805faf0 <sidput@plt+0x11f90>
testb  $0x1,0x10(%esi)
mov    0xc(%esi),%eax
je     805fb60 <sidput@plt+0x12000>
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   80804a0 <dbus_shutdown+0x17c0>
test   %eax,%eax
je     805faf0 <sidput@plt+0x11f90>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   804d600 <strlen@plt>
mov    0x44(%esp),%edx
mov    (%edx),%ecx
movzbl (%ecx,%eax,1),%eax
cmp    $0x2e,%al
jne    805fb88 <sidput@plt+0x12028>
movzbl 0x8(%esi),%eax
mov    %eax,%edi
and    $0x1,%edi
test   %ebx,%ebx
jne    805faf4 <sidput@plt+0x11f94>
lea    0x0(%esi),%esi
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     805fb3d <sidput@plt+0x11fdd>
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8080450 <dbus_shutdown+0x1770>
test   %eax,%eax
je     805faf0 <sidput@plt+0x11f90>
movzbl 0x8(%esi),%eax
mov    %eax,%edi
and    $0x1,%edi
jmp    805fb46 <sidput@plt+0x11fe6>
nop
test   %al,%al
je     805fb3d <sidput@plt+0x11fdd>
jmp    805faf0 <sidput@plt+0x11f90>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804d0e0 <pthread_mutex_destroy@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
jmp    804d010 <pthread_mutex_unlock@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    804d2e0 <pthread_mutex_lock@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
jmp    804d740 <pthread_cancel@plt>
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x80b87e8,(%esp)
mov    %eax,0x8(%esp)
call   804d9c0 <pthread_create@plt>
test   %eax,%eax
jne    805fc24 <sidput@plt+0x120c4>
mov    $0x80b87e8,%eax
add    $0x1c,%esp
ret
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x8099100,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
movl   $0xe,(%esp)
mov    %eax,0x8(%esp)
call   804d410 <__vsyslog_chk@plt>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
test   %eax,%eax
je     805fc91 <sidput@plt+0x12131>
mov    0x80b87f4,%eax
test   %eax,%eax
jne    805fc98 <sidput@plt+0x12138>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    804db60 <sidput@plt>
lea    0x0(%esi),%esi
cmpl   $0x8,0x4(%esp)
je     805fcb0 <sidput@plt+0x12150>
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
jmp    804d030 <raise@plt>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x18,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%ebx
je     805fced <sidput@plt+0x1218d>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d1a0 <pthread_mutex_init@plt>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x809924a,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
mov    0x3c(%esp),%ebx
cmp    %ebx,0x4(%eax)
jb     805fd58 <sidput@plt+0x121f8>
lea    0x10(%esp),%esi
movl   $0x8099120,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
cmp    0x14(%esp),%ebx
ja     805fd78 <sidput@plt+0x12218>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x38(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807f6b0 <dbus_shutdown+0x9d0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f6b0 <dbus_shutdown+0x9d0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80b87f4,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
call   804d080 <is_selinux_enabled@plt>
test   %eax,%eax
js     805fde0 <sidput@plt+0x12280>
setne  %al
movzbl %al,%eax
mov    %eax,0x80b87f4
mov    $0x1,%eax
add    $0x1c,%esp
ret
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x8099144,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
xor    %eax,%eax
jmp    805fddc <sidput@plt+0x1227c>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    $0x1,%ebx
sub    $0x38,%esp
mov    0x80b87f4,%eax
test   %eax,%eax
jne    805fe30 <sidput@plt+0x122d0>
add    $0x38,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80992b4,0x10(%esp)
movl   $0x80992c4,0xc(%esp)
movl   $0x80992cc,0x8(%esp)
movl   $0x80992d4,0x4(%esp)
movl   $0x8099266,(%esp)
movl   $0x0,0x80b87f0
00
call   804d300 <avc_init@plt>
test   %eax,%eax
js     805ff00 <sidput@plt+0x123a0>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x8,0x4(%esp)
movl   $0x805fca0,(%esp)
call   804d490 <avc_add_callback@plt>
test   %eax,%eax
js     805ff18 <sidput@plt+0x123b8>
lea    0x2c(%esp),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
movl   $0x0,0x80b87ec
00
call   804d440 <getcon@plt>
test   %eax,%eax
js     805fe22 <sidput@plt+0x122c2>
mov    0x2c(%esp),%eax
movl   $0x80b87ec,0x4(%esp)
mov    %eax,(%esp)
call   804d860 <avc_context_to_sid@plt>
test   %eax,%eax
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
js     805ff48 <sidput@plt+0x123e8>
call   804d940 <freecon@plt>
mov    $0x1,%ebx
add    $0x38,%esp
mov    %ebx,%eax
pop    %ebx
ret
xchg   %ax,%ax
movl   $0x8099170,(%esp)
xor    %bl,%bl
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    805fe22 <sidput@plt+0x122c2>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
xor    %ebx,%ebx
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x809919c,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
call   804d380 <avc_destroy@plt>
jmp    805fe22 <sidput@plt+0x122c2>
nop
lea    0x0(%esi,%eiz,1),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d940 <freecon@plt>
jmp    805fe22 <sidput@plt+0x122c2>
lea    0x0(%esi),%esi
mov    0x80b87f4,%eax
test   %eax,%eax
jne    805ff70 <sidput@plt+0x12410>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    804db60 <sidput@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80b87f4,%eax
test   %eax,%eax
jne    805ff90 <sidput@plt+0x12430>
repz ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    804d0a0 <sidget@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80b87f4,%edx
mov    $0x1,%eax
test   %edx,%edx
jne    805ffb0 <sidput@plt+0x12450>
ret
push   %edi
push   %esi
sub    $0x44,%esp
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8059150 <sidput@plt+0xb5f0>
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    805ffe3 <sidput@plt+0x12483>
movl   $0x0,0x2c(%esp)
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    8060020 <sidput@plt+0x124c0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x5c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
add    $0x44,%esp
pop    %esi
pop    %edi
ret
nop
movl   $0x809926a,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805fff3 <sidput@plt+0x12493>
mov    0x58(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805fff3 <sidput@plt+0x12493>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
jne    80600b2 <sidput@plt+0x12552>
mov    0x80b87f4,%edx
mov    $0x1,%eax
test   %edx,%edx
je     806009d <sidput@plt+0x1253d>
mov    0x54(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x80b87f0,0x10(%esp)
movl   $0x1,0xc(%esp)
test   %eax,%eax
mov    0x54(%esp),%eax
cmove  0x80b87ec,%eax
movl   $0x34,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   804d760 <avc_has_perm@plt>
not    %eax
shr    $0x1f,%eax
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
jmp    8060019 <sidput@plt+0x124b9>
movl   $0x8099273,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     805fff3 <sidput@plt+0x12493>
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8087650 <dbus_shutdown+0x8970>
test   %eax,%eax
je     805fff3 <sidput@plt+0x12493>
jmp    8060050 <sidput@plt+0x124f0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    $0x1,%eax
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x80b87f4,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebx
test   %edx,%edx
je     806017b <sidput@plt+0x1261b>
test   %esi,%esi
je     8060125 <sidput@plt+0x125c5>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    806012d <sidput@plt+0x125cd>
movl   $0x0,0x28(%esp)
test   %ebx,%ebx
je     8060145 <sidput@plt+0x125e5>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8065ec0 <dbus_connection_get_unix_process_id>
test   %eax,%eax
jne    806014d <sidput@plt+0x125ed>
movl   $0x0,0x2c(%esp)
lea    0x30(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    8060188 <sidput@plt+0x12628>
mov    0x6c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x809927a,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    80601a8 <sidput@plt+0x12648>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    806015d <sidput@plt+0x125fd>
xchg   %ax,%ax
mov    0x58(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x5c(%esp),%eax
test   %eax,%eax
je     80601ec <sidput@plt+0x1268c>
movl   $0x8099283,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x5c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x60(%esp),%ecx
test   %ecx,%ecx
je     806021c <sidput@plt+0x126bc>
movl   $0x809928f,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x60(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x64(%esp),%edx
test   %edx,%edx
je     8060254 <sidput@plt+0x126f4>
movl   $0x8099298,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x64(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x68(%esp),%eax
test   %eax,%eax
je     806028c <sidput@plt+0x1272c>
movl   $0x80992a5,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x68(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
cmpl   $0x0,0x28(%esp)
jne    8060343 <sidput@plt+0x127e3>
cmpl   $0x0,0x2c(%esp)
je     80602ce <sidput@plt+0x1276e>
movl   $0x80992ac,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x2c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8087650 <dbus_shutdown+0x8970>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    %esi,(%esp)
call   8059150 <sidput@plt+0xb5f0>
test   %ebx,%ebx
mov    %eax,%esi
je     8060378 <sidput@plt+0x12818>
mov    %ebx,(%esp)
call   8059150 <sidput@plt+0xb5f0>
mov    %eax,%edx
cmpl   $0x0,0x80b87f4
mov    $0x1,%eax
je     806032e <sidput@plt+0x127ce>
test   %edx,%edx
cmove  0x80b87ec,%edx
mov    %edi,0x14(%esp)
movl   $0x80b87f0,0x10(%esp)
movl   $0x2,0xc(%esp)
movl   $0x34,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   804d760 <avc_has_perm@plt>
not    %eax
shr    $0x1f,%eax
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
jmp    806017b <sidput@plt+0x1261b>
movl   $0x8099273,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
mov    0x28(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8087650 <dbus_shutdown+0x8970>
test   %eax,%eax
je     806019c <sidput@plt+0x1263c>
jmp    8060297 <sidput@plt+0x12737>
mov    0x80b87ec,%edx
xchg   %ax,%ax
jmp    80602ea <sidput@plt+0x1278a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
mov    0x44(%esp),%eax
lea    0x2c(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804d210 <avc_sid_to_context@plt>
test   %eax,%eax
js     8060428 <sidput@plt+0x128c8>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d600 <strlen@plt>
movl   $0x0,0x14(%esp)
mov    %ebx,0xc(%esp)
movl   $0x79,0x8(%esp)
movl   $0x61,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     8060400 <sidput@plt+0x128a0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d940 <freecon@plt>
add    $0x38,%esp
mov    $0x1,%eax
pop    %ebx
ret
xchg   %ax,%ax
mov    0x80b834c,%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x38,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0xc,%eax
je     8060468 <sidput@plt+0x12908>
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x80991c8,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x38,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8099a80,0x8(%esp)
jmp    8060409 <sidput@plt+0x128a9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80b87f4,%edx
xor    %eax,%eax
test   %edx,%edx
je     80604ca <sidput@plt+0x1296a>
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
lea    0x2c(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8065d40 <dbus_connection_get_unix_fd>
test   %eax,%eax
jne    80604d0 <sidput@plt+0x12970>
mov    0x44(%esp),%eax
movl   $0x8099218,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x38,%esp
pop    %ebx
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d470 <getpeercon@plt>
test   %eax,%eax
js     80604a8 <sidput@plt+0x12948>
mov    0x28(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804d860 <avc_context_to_sid@plt>
test   %eax,%eax
js     806050e <sidput@plt+0x129ae>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804d940 <freecon@plt>
mov    0x2c(%esp),%eax
jmp    80604c6 <sidput@plt+0x12966>
call   804d730 <__errno_location@plt>
mov    %eax,%ebx
mov    (%eax),%eax
cmp    $0xc,%eax
je     8060588 <sidput@plt+0x12a28>
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x80991ec,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x80991ec,(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804d940 <freecon@plt>
xor    %eax,%eax
jmp    80604c6 <sidput@plt+0x12966>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    806054c <sidput@plt+0x129ec>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
movl   $0x805fc80,0x8(%esp)
movl   $0x807ebb0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x24,%esp
mov    0x80b87f4,%eax
test   %eax,%eax
jne    8060600 <sidput@plt+0x12aa0>
add    $0x24,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
xor    %bl,%bl
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%esi
je     80605f3 <sidput@plt+0x12a93>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804d860 <avc_context_to_sid@plt>
test   %eax,%eax
js     8060678 <sidput@plt+0x12b18>
mov    0x1c(%esp),%eax
mov    $0x1,%ebx
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
jne    80605f3 <sidput@plt+0x12a93>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     8060665 <sidput@plt+0x12b05>
mov    %eax,(%esp)
call   804db60 <sidput@plt>
mov    %esi,(%esp)
xor    %ebx,%ebx
call   807ebb0 <dbus_free>
add    $0x24,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
nop
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0xc,%eax
je     80606a8 <sidput@plt+0x12b48>
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x80991ec,(%esp)
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    8060655 <sidput@plt+0x12af5>
xchg   %ax,%ax
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
jmp    80605f3 <sidput@plt+0x12a93>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80b87f4,%eax
mov    0x8(%esp),%edx
test   %eax,%eax
je     80606d8 <sidput@plt+0x12b78>
mov    (%edx),%edx
mov    %edx,0x8(%esp)
jmp    807c470 <dbus_watch_handle+0x8b0>
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    804d020 <selinux_policy_root@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x80b87f4,%eax
test   %eax,%eax
je     8060730 <sidput@plt+0x12bd0>
mov    0x80b87ec,%eax
test   %eax,%eax
je     8060730 <sidput@plt+0x12bd0>
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804db60 <sidput@plt>
movl   $0x0,0x80b87ec
00
add    $0x1c,%esp
jmp    804d380 <avc_destroy@plt>
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
lea    0xc(%eax),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     806076e <sidput@plt+0x12c0e>
mov    0x8(%eax),%ecx
cmp    %esi,0x8(%ecx)
je     806076e <sidput@plt+0x12c0e>
mov    0x4(%eax),%eax
cmp    0xc(%ebx),%eax
jne    8060758 <sidput@plt+0x12bf8>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x4(%ebx),%esi
mov    0xc(%esi),%eax
test   %eax,%eax
je     8060803 <sidput@plt+0x12ca3>
add    $0xc,%esi
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x4(%ebx),%edx
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     80607be <sidput@plt+0x12c5e>
mov    0x8(%ebx),%ecx
cmp    %ecx,0x8(%eax)
je     80607be <sidput@plt+0x12c5e>
mov    0x4(%eax),%eax
cmp    0xc(%edx),%eax
jne    80607a8 <sidput@plt+0x12c48>
xor    %eax,%eax
mov    0xc(%ebx),%ecx
add    $0xc,%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
mov    %ecx,0x8(%esp)
call   807d710 <dbus_watch_handle+0x1b50>
mov    0x10(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8059490 <sidput@plt+0xb930>
movl   $0x0,0x14(%ebx)
movl   $0x0,0x10(%ebx)
movl   $0x0,0xc(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,0xc(%esp)
mov    0x8(%esi),%eax
mov    %eax,0x8(%esp)
mov    0x14(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807cb30 <dbus_watch_handle+0xf70>
addl   $0x1,(%esi)
mov    0x4(%ebx),%esi
jmp    8060793 <sidput@plt+0x12c33>
xchg   %ax,%ax
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x4(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8059500 <sidput@plt+0xb9a0>
mov    0x4(%ebx),%eax
mov    %ebx,0x4(%esp)
mov    0x4(%eax),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   807eed0 <dbus_shutdown+0x1f0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
add    $0xc,%eax
sub    $0x18,%esp
mov    %edx,%ebx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807d960 <dbus_watch_handle+0x1da0>
subl   $0x1,(%ebx)
je     8060890 <sidput@plt+0x12d30>
add    $0x18,%esp
pop    %ebx
ret
nop
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
jmp    8060830 <sidput@plt+0x12cd0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x4(%ebx),%eax
mov    %ebx,0x4(%esp)
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   807eed0 <dbus_shutdown+0x1f0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8066920 <dbus_connection_unref>
mov    (%ebx),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
je     8060918 <sidput@plt+0x12db8>
mov    0x4(%ebx),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
jne    8060905 <sidput@plt+0x12da5>
call   80608a0 <sidput@plt+0x12d40>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi),%esi
call   8060830 <sidput@plt+0x12cd0>
jmp    80608f2 <sidput@plt+0x12d92>
nop
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
subl   $0x1,(%ebx)
je     8060948 <sidput@plt+0x12de8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
jmp    80608a0 <sidput@plt+0x12d40>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ebx
mov    0x4(%ebx),%eax
mov    (%ebx),%edx
call   8060870 <sidput@plt+0x12d10>
mov    0x4(%ebx),%eax
mov    0xc(%eax),%edx
test   %edx,%edx
je     8060988 <sidput@plt+0x12e28>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%esp
pop    %ebx
jmp    8060920 <sidput@plt+0x12dc0>
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x10(%ebx),%eax
test   %eax,%eax
je     80609a7 <sidput@plt+0x12e47>
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     80609b6 <sidput@plt+0x12e56>
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    0x14(%ebx),%eax
test   %eax,%eax
je     80609d2 <sidput@plt+0x12e72>
mov    %eax,0x4(%esp)
mov    0x4(%ebx),%eax
mov    0x4(%eax),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c770 <dbus_watch_handle+0xbb0>
mov    (%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8066920 <dbus_connection_unref>
mov    (%ebx),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
je     8060a10 <sidput@plt+0x12eb0>
mov    0x4(%ebx),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
jne    80609ff <sidput@plt+0x12e9f>
call   80608a0 <sidput@plt+0x12d40>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
call   8060830 <sidput@plt+0x12cd0>
jmp    80609ec <sidput@plt+0x12e8c>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %ecx,%ebx
sub    $0x1c,%esp
movl   $0x18,(%esp)
call   807eb50 <dbus_malloc>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     8060af0 <sidput@plt+0x12f90>
mov    %edi,(%esp)
mov    %edi,0x4(%esi)
mov    %ebx,(%esi)
call   807d550 <dbus_watch_handle+0x1990>
mov    %ebx,(%esp)
mov    %eax,0x10(%esi)
call   807d550 <dbus_watch_handle+0x1990>
mov    %eax,0xc(%esi)
mov    0x4(%edi),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c740 <dbus_watch_handle+0xb80>
mov    %eax,0x14(%esi)
mov    0x4(%esi),%eax
addl   $0x1,(%eax)
mov    (%esi),%eax
addl   $0x1,(%eax)
mov    (%esi),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8065370 <dbus_connection_ref>
lea    0xc(%edi),%eax
mov    %eax,(%esp)
movl   $0x0,0x8(%esi)
call   807d900 <dbus_watch_handle+0x1d40>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     8060ab1 <sidput@plt+0x12f51>
cmp    %ebx,0x8(%eax)
mov    0x4(%eax),%eax
je     8060af8 <sidput@plt+0x12f98>
cmp    0xc(%edi),%eax
jne    8060aa0 <sidput@plt+0x12f40>
mov    0x10(%esi),%ecx
test   %ecx,%ecx
je     8060ae6 <sidput@plt+0x12f86>
mov    0xc(%esi),%edx
test   %edx,%edx
je     8060ae6 <sidput@plt+0x12f86>
mov    0x14(%esi),%eax
test   %eax,%eax
je     8060ae6 <sidput@plt+0x12f86>
movl   $0x8060990,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x8060780,0x4(%esp)
mov    %ebp,(%esp)
call   805a380 <sidput@plt+0xc820>
test   %eax,%eax
jne    8060b10 <sidput@plt+0x12fb0>
mov    %esi,(%esp)
call   8060990 <sidput@plt+0x12e30>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmp    0xc(%edi),%eax
je     8060ab1 <sidput@plt+0x12f51>
test   %eax,%eax
je     8060ab1 <sidput@plt+0x12f51>
mov    0x8(%eax),%eax
mov    %eax,0x8(%esi)
jmp    8060ab1 <sidput@plt+0x12f51>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
subl   $0x1,(%ebx)
jne    8060b88 <sidput@plt+0x13028>
mov    0x8(%ebx),%eax
test   %eax,%eax
je     8060b4c <sidput@plt+0x12fec>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     8060b5b <sidput@plt+0x12ffb>
mov    %eax,(%esp)
call   807edc0 <dbus_shutdown+0xe0>
mov    0x10(%ebx),%eax
test   %eax,%eax
je     8060b6a <sidput@plt+0x1300a>
mov    %eax,(%esp)
call   807edc0 <dbus_shutdown+0xe0>
mov    0x14(%ebx),%eax
test   %eax,%eax
je     8060b79 <sidput@plt+0x13019>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
xchg   %ax,%ax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
movl   $0x18,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebx
je     8060c30 <sidput@plt+0x130d0>
movl   $0x1,(%eax)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%ebx)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x8(%ebx)
je     8060c20 <sidput@plt+0x130c0>
movl   $0x1,0x4(%esp)
movl   $0x10,(%esp)
call   807ed40 <dbus_shutdown+0x60>
test   %eax,%eax
mov    %eax,0xc(%ebx)
je     8060c20 <sidput@plt+0x130c0>
movl   $0x1,0x4(%esp)
movl   $0x10,(%esp)
call   807ed40 <dbus_shutdown+0x60>
test   %eax,%eax
mov    %eax,0x10(%ebx)
je     8060c20 <sidput@plt+0x130c0>
movl   $0x0,0x14(%ebx)
mov    %ebx,%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
call   8060b30 <sidput@plt+0x12fd0>
xor    %eax,%eax
jmp    8060c19 <sidput@plt+0x130b9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8060c19 <sidput@plt+0x130b9>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x8(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,0x4(%esp)
jmp    807c470 <dbus_watch_handle+0x8b0>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%eax
lea    0x18(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    0x44(%esp),%edi
mov    0x48(%esp),%esi
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
jmp    8060c99 <sidput@plt+0x13139>
nop
mov    %ebx,(%esp)
call   807c380 <dbus_watch_handle+0x7c0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   *%edi
mov    %ebx,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    8060c88 <sidput@plt+0x13128>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebx
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   807cbf0 <dbus_watch_handle+0x1030>
mov    %eax,0xc(%esp)
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
mov    %eax,%edi
mov    %eax,0x8(%esp)
xor    %eax,%eax
test   %edi,%edi
je     8060d5a <sidput@plt+0x131fa>
lea    0x18(%esp),%esi
mov    %esi,0x4(%esp)
mov    0x8(%ebx),%eax
xor    %ebx,%ebx
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
jmp    8060d22 <sidput@plt+0x131c2>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
mov    %edi,%ebp
call   807c380 <dbus_watch_handle+0x7c0>
lea    0x4(%edi),%edi
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,-0x4(%edi)
je     8060d68 <sidput@plt+0x13208>
add    $0x1,%ebx
mov    %esi,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    8060d00 <sidput@plt+0x131a0>
mov    0x8(%esp),%eax
movl   $0x0,(%eax,%ebx,4)
mov    0x58(%esp),%eax
test   %eax,%eax
je     8060d4b <sidput@plt+0x131eb>
mov    0x58(%esp),%eax
mov    0xc(%esp),%ecx
mov    %ecx,(%eax)
mov    0x54(%esp),%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
mov    $0x1,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %esi,%esi
test   %ebx,%ebx
jne    8060d73 <sidput@plt+0x13213>
jmp    8060d82 <sidput@plt+0x13222>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
add    $0x1,%esi
call   807ebb0 <dbus_free>
cmp    %ebx,%esi
jne    8060d70 <sidput@plt+0x13210>
mov    0x8(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
call   80605b0 <sidput@plt+0x12a50>
test   %eax,%eax
mov    %eax,%edi
je     8060e20 <sidput@plt+0x132c0>
mov    0x44(%esp),%eax
lea    0x18(%esp),%ebx
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
jmp    8060dee <sidput@plt+0x1328e>
nop
mov    %ebx,(%esp)
call   807c3f0 <dbus_watch_handle+0x830>
mov    %ebx,(%esp)
mov    %eax,%esi
call   807c380 <dbus_watch_handle+0x7c0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   80605e0 <sidput@plt+0x12a80>
test   %eax,%eax
je     8060e20 <sidput@plt+0x132c0>
mov    %ebx,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    8060dc8 <sidput@plt+0x13268>
mov    0x40(%esp),%eax
mov    0x14(%eax),%eax
test   %eax,%eax
je     8060e0d <sidput@plt+0x132ad>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x40(%esp),%eax
mov    %edi,0x14(%eax)
add    $0x30,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x38(%esp),%ebx
mov    0xc(%esi),%edx
test   %edx,%edx
je     8060eb8 <sidput@plt+0x13358>
mov    0x34(%esp),%edx
mov    %esi,%eax
call   8060740 <sidput@plt+0x12be0>
test   %eax,%eax
mov    %eax,%edi
je     8060ef0 <sidput@plt+0x13390>
test   $0x2,%bl
mov    0x8(%eax),%ebp
je     8060e8a <sidput@plt+0x1332a>
add    $0xc,%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d7e0 <dbus_watch_handle+0x1c20>
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807d780 <dbus_watch_handle+0x1bc0>
movzbl 0xc(%ebp),%eax
mov    %ebx,%edx
shr    $0x2,%ebx
and    $0x1,%edx
and    $0x1,%ebx
add    %ebx,%ebx
and    $0xfffffffc,%eax
or     %edx,%eax
or     %ebx,%eax
mov    %al,0xc(%ebp)
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   805df50 <sidput@plt+0x103f0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    8060e46 <sidput@plt+0x132e6>
jmp    8060eaa <sidput@plt+0x1334a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   807ee00 <dbus_shutdown+0x120>
test   %eax,%eax
mov    %eax,%edi
je     8060f80 <sidput@plt+0x13420>
movl   $0x1,(%eax)
mov    0x34(%esp),%eax
mov    %esi,0x4(%edi)
mov    %eax,0x8(%edi)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80594d0 <sidput@plt+0xb970>
test   %eax,%eax
je     806102c <sidput@plt+0x134cc>
movzbl 0xc(%edi),%eax
mov    %ebx,%edx
mov    %ebx,%ecx
shr    $0x2,%edx
and    $0x1,%ecx
and    $0x1,%edx
add    %edx,%edx
and    $0xfffffffc,%eax
or     %ecx,%eax
or     %edx,%eax
and    $0x2,%ebx
mov    %al,0xc(%edi)
je     8060fa8 <sidput@plt+0x13448>
mov    0xc(%esi),%eax
test   %eax,%eax
je     8060fa8 <sidput@plt+0x13448>
lea    0xc(%esi),%ebx
mov    %ebx,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %edi,0x8(%esp)
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   807d690 <dbus_watch_handle+0x1ad0>
test   %eax,%eax
jne    8060fbb <sidput@plt+0x1345b>
subl   $0x1,(%edi)
jne    8060f80 <sidput@plt+0x13420>
mov    %edi,%eax
call   8060830 <sidput@plt+0x12cd0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    8060eaa <sidput@plt+0x1334a>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0xc(%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8060f70 <sidput@plt+0x13410>
movl   $0x8,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%ebx
je     806101e <sidput@plt+0x134be>
mov    %esi,0x4(%eax)
mov    %edi,(%eax)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
movl   $0x80608d0,0xc(%esp)
movl   $0x8060960,0x4(%esp)
mov    %eax,(%esp)
call   805a380 <sidput@plt+0xc820>
test   %eax,%eax
je     8061016 <sidput@plt+0x134b6>
mov    0x4(%ebx),%eax
addl   $0x1,(%eax)
addl   $0x1,(%edi)
mov    (%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8065370 <dbus_connection_ref>
mov    $0x1,%eax
jmp    8060eaa <sidput@plt+0x1334a>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,%edx
mov    %esi,%eax
call   8060870 <sidput@plt+0x12d10>
jmp    8060f80 <sidput@plt+0x13420>
mov    %edi,0x4(%esp)
mov    0x4(%esi),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   807eed0 <dbus_shutdown+0x1f0>
jmp    8060f80 <sidput@plt+0x13420>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
mov    (%edi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,%ebx
je     8061080 <sidput@plt+0x13520>
add    $0x2c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807ee00 <dbus_shutdown+0x120>
test   %eax,%eax
mov    %eax,%ebp
je     80611bc <sidput@plt+0x1365c>
mov    %esi,0x4(%eax)
lea    0x8(%eax),%eax
movl   $0x1,-0x8(%eax)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     806118c <sidput@plt+0x1362c>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    0x54(%esp),%edx
mov    0x50(%esp),%ecx
movl   $0x0,0x4(%esp)
mov    %edx,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   805dd70 <sidput@plt+0x10210>
test   %eax,%eax
jne    8061100 <sidput@plt+0x135a0>
subl   $0x1,0x0(%ebp)
je     8061180 <sidput@plt+0x13620>
xor    %ebx,%ebx
jmp    8061076 <sidput@plt+0x13516>
xchg   %ax,%ax
mov    0x4(%esi),%eax
mov    0x8(%ebp),%edi
mov    %eax,(%esp)
call   8052e50 <sidput@plt+0x52f0>
mov    0x54(%esp),%edx
mov    0x50(%esp),%ecx
mov    %edi,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   804ff90 <sidput@plt+0x2430>
test   %eax,%eax
je     80610ed <sidput@plt+0x1358d>
mov    0x54(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
call   8060e30 <sidput@plt+0x132d0>
test   %eax,%eax
je     80610ed <sidput@plt+0x1358d>
mov    %ebp,0x8(%esp)
mov    0x8(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
test   %eax,%eax
je     80611bc <sidput@plt+0x1365c>
mov    %ebp,%ebx
jmp    8061076 <sidput@plt+0x13516>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
call   80608a0 <sidput@plt+0x12d40>
jmp    8061076 <sidput@plt+0x13516>
mov    %ebp,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807eed0 <dbus_shutdown+0x1f0>
mov    0x54(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8061076 <sidput@plt+0x13516>
mov    0x54(%esp),%eax
xor    %ebx,%ebx
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8061076 <sidput@plt+0x13516>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
mov    0x48(%esp),%edi
lea    0xc(%ebx),%esi
mov    %esi,(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
mov    %edi,0x8(%esp)
mov    %eax,%ebp
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   805de80 <sidput@plt+0x10320>
test   %eax,%eax
je     806129c <sidput@plt+0x1373c>
mov    0xc(%ebx),%eax
test   %eax,%eax
je     8061232 <sidput@plt+0x136d2>
mov    %esi,(%esp)
call   807dbc0 <dbus_watch_handle+0x2000>
test   %eax,%eax
je     80612a8 <sidput@plt+0x13748>
mov    %ebp,%ecx
mov    %ebx,%edx
mov    %edi,%eax
call   8060a20 <sidput@plt+0x12ec0>
test   %eax,%eax
je     8061280 <sidput@plt+0x13720>
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%ebx
call   807d7e0 <dbus_watch_handle+0x1c20>
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807d780 <dbus_watch_handle+0x1bc0>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x18(%esp),%edx
mov    0x4(%eax),%eax
cmp    0xc(%ebx),%eax
cmove  %edx,%eax
mov    0x8(%eax),%eax
mov    0x8(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,0x18(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    0x4c(%esp),%ecx
mov    %edi,0xc(%esp)
mov    %ecx,0x10(%esp)
mov    0x18(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   805dd70 <sidput@plt+0x10210>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     806129c <sidput@plt+0x1373c>
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x8(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   805df50 <sidput@plt+0x103f0>
test   %eax,%eax
jne    8061232 <sidput@plt+0x136d2>
jmp    806129c <sidput@plt+0x1373c>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebx
mov    0x44(%esp),%ebp
lea    0xc(%ebx),%esi
mov    %esi,(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
test   %eax,%eax
mov    %eax,%edi
je     8061367 <sidput@plt+0x13807>
mov    0x8(%eax),%edx
cmp    %ebp,%edx
je     80613a8 <sidput@plt+0x13848>
mov    %ebp,%edx
mov    %ebx,%eax
call   8060740 <sidput@plt+0x12be0>
mov    %esi,(%esp)
mov    %eax,%ebx
mov    %eax,0x4(%esp)
call   807d7e0 <dbus_watch_handle+0x1c20>
mov    0x8(%ebx),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
jne    8061391 <sidput@plt+0x13831>
call   8060830 <sidput@plt+0x12cd0>
mov    %ebx,(%esp)
mov    $0x1,%esi
call   807d560 <dbus_watch_handle+0x19a0>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4c(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8(%ebx),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   805de80 <sidput@plt+0x10320>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8061480 <sidput@plt+0x13920>
mov    0xc(%ebx),%ecx
test   %ecx,%ecx
je     806142b <sidput@plt+0x138cb>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   807dbc0 <dbus_watch_handle+0x2000>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,%ebp
je     8061488 <sidput@plt+0x13928>
mov    %edx,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    0x4c(%esp),%ecx
movl   $0x0,0x8(%esp)
mov    %ecx,0x10(%esp)
mov    0x48(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   805dd70 <sidput@plt+0x10210>
test   %eax,%eax
je     8061480 <sidput@plt+0x13920>
mov    0x48(%esp),%eax
mov    %edi,%ecx
mov    %ebx,%edx
call   8060a20 <sidput@plt+0x12ec0>
test   %eax,%eax
je     8061461 <sidput@plt+0x13901>
mov    %ebx,%eax
mov    %edi,%edx
call   8060870 <sidput@plt+0x12d10>
mov    0xc(%ebx),%eax
mov    $0x1,%esi
test   %eax,%eax
jne    806139e <sidput@plt+0x1383e>
mov    %ebx,%eax
call   8060920 <sidput@plt+0x12dc0>
jmp    806139e <sidput@plt+0x1383e>
mov    0x4c(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
lea    0x0(%esi),%esi
xor    %esi,%esi
jmp    806139e <sidput@plt+0x1383e>
nop
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x4(%eax),%eax
cmp    0xc(%ebx),%eax
cmove  %ebp,%eax
mov    0x8(%eax),%eax
mov    0x8(%eax),%esi
mov    %esi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%ebp
call   8059840 <sidput@plt+0xbce0>
mov    0x4c(%esp),%ecx
mov    %ebp,0x8(%esp)
mov    %ecx,0x10(%esp)
mov    0x48(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   805dd70 <sidput@plt+0x10210>
test   %eax,%eax
je     8061480 <sidput@plt+0x13920>
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x8(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   805df50 <sidput@plt+0x103f0>
test   %eax,%eax
jne    806142b <sidput@plt+0x138cb>
xor    %esi,%esi
jmp    806139e <sidput@plt+0x1383e>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%ebx
mov    0x44(%esp),%edi
mov    0x58(%esp),%esi
mov    0x4(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   806e190 <dbus_set_error+0x3090>
test   %eax,%eax
mov    (%ebx),%eax
je     8061688 <sidput@plt+0x13b28>
cmpb   $0x3a,(%eax)
je     8061778 <sidput@plt+0x13c18>
movl   $0x8096b7c,0x4(%esp)
mov    %ebx,(%esp)
call   8080450 <dbus_shutdown+0x1770>
mov    %edi,(%esp)
test   %eax,%eax
jne    8061648 <sidput@plt+0x13ae8>
call   8058f60 <sidput@plt+0xb400>
mov    %ebx,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x40(%esp),%eax
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   80606c0 <sidput@plt+0x12b60>
mov    %esi,0xc(%esp)
mov    %eax,%ebp
mov    (%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   805ffa0 <sidput@plt+0x12440>
test   %eax,%eax
je     80617a0 <sidput@plt+0x13c40>
mov    0x40(%esp),%eax
mov    (%ebx),%edx
mov    0x4(%eax),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     80615c3 <sidput@plt+0x13a63>
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
call   8052de0 <sidput@plt+0x5280>
mov    0x1c(%esp),%edx
mov    %esi,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   80518d0 <sidput@plt+0x3d70>
test   %eax,%eax
jne    80616c0 <sidput@plt+0x13b60>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     8061607 <sidput@plt+0x13aa7>
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    8061770 <sidput@plt+0x13c10>
mov    (%ebx),%ebx
mov    %edi,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
jne    8061988 <sidput@plt+0x13e28>
mov    $0x8098de1,%eax
mov    %eax,0xc(%esp)
mov    %ebx,0x10(%esp)
movl   $0x80993f0,0x8(%esp)
movl   $0x809707c,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    806167c <sidput@plt+0x13b1c>
lea    0x0(%esi),%esi
call   80591a0 <sidput@plt+0xb640>
mov    $0x8098de1,%edx
test   %eax,%eax
jne    80616b0 <sidput@plt+0x13b50>
movl   $0x8096b7c,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x809933c,0x8(%esp)
movl   $0x80965d4,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
mov    %esi,(%esp)
movl   $0x80992dc,0x8(%esp)
movl   $0x80965d4,0x4(%esp)
call   806b100 <dbus_set_error>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %edi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,%edx
jmp    8061656 <sidput@plt+0x13af6>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   805fac0 <sidput@plt+0x11f60>
test   %eax,%eax
jne    8061718 <sidput@plt+0x13bb8>
mov    (%ebx),%ebx
mov    %edi,(%esp)
call   80591a0 <sidput@plt+0xb640>
mov    $0x8098de1,%edx
test   %eax,%eax
jne    8061978 <sidput@plt+0x13e18>
mov    %ebx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x8099440,0x8(%esp)
movl   $0x809707c,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    806167c <sidput@plt+0x13b1c>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8059540 <sidput@plt+0xb9e0>
mov    %eax,%ebp
mov    0x40(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8052f30 <sidput@plt+0x53d0>
cmp    %eax,%ebp
jl     8061810 <sidput@plt+0x13cb0>
mov    %edi,(%esp)
call   80591a0 <sidput@plt+0xb640>
mov    $0x8098de1,%edx
test   %eax,%eax
je     8061754 <sidput@plt+0x13bf4>
mov    %edi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,%edx
mov    %edx,0xc(%esp)
movl   $0x80994ac,0x8(%esp)
movl   $0x8096864,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    806167c <sidput@plt+0x13b1c>
nop
mov    %eax,0xc(%esp)
mov    %esi,(%esp)
movl   $0x8099304,0x8(%esp)
movl   $0x80965d4,0x4(%esp)
call   806b100 <dbus_set_error>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     80617c0 <sidput@plt+0x13c60>
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    8061770 <sidput@plt+0x13c10>
mov    (%ebx),%ebx
mov    %edi,(%esp)
call   80591a0 <sidput@plt+0xb640>
test   %eax,%eax
jne    8061800 <sidput@plt+0x13ca0>
mov    $0x8098de1,%eax
mov    %eax,0xc(%esp)
mov    %ebx,0x10(%esp)
movl   $0x80993a0,0x8(%esp)
movl   $0x809707c,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    806167c <sidput@plt+0x13b1c>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8059840 <sidput@plt+0xbce0>
jmp    80617d3 <sidput@plt+0x13c73>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,%ebp
je     8061995 <sidput@plt+0x13e35>
lea    0xc(%eax),%ebx
mov    %ebx,(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
test   %eax,%eax
je     8061ae2 <sidput@plt+0x13f82>
mov    0x8(%eax),%edx
mov    %ebx,(%esp)
mov    %edx,0x18(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
test   %eax,%eax
mov    %eax,%ecx
je     8061770 <sidput@plt+0x13c10>
mov    0x18(%esp),%edx
test   %edx,%edx
je     806191c <sidput@plt+0x13dbc>
cmp    %edx,%edi
je     8061a90 <sidput@plt+0x13f30>
testb  $0x4,0x4c(%esp)
jne    8061a1f <sidput@plt+0x13ebf>
mov    0x4c(%esp),%eax
and    $0x6,%eax
cmp    $0x4,%eax
je     8061a50 <sidput@plt+0x13ef0>
testb  $0x2,0x4c(%esp)
je     80619e8 <sidput@plt+0x13e88>
mov    %ebx,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    0x8(%eax),%eax
testb  $0x1,0xc(%eax)
je     80619e8 <sidput@plt+0x13e88>
mov    0x54(%esp),%eax
mov    %esi,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x8(%esp)
call   8060e30 <sidput@plt+0x132d0>
test   %eax,%eax
je     8061770 <sidput@plt+0x13c10>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    0x54(%esp),%eax
testb  $0x2,0xc(%ecx)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
je     8061ac1 <sidput@plt+0x13f61>
call   8061340 <sidput@plt+0x137e0>
test   %eax,%eax
je     8061770 <sidput@plt+0x13c10>
mov    0x50(%esp),%eax
movl   $0x1,(%eax)
mov    0x40(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8052e50 <sidput@plt+0x52f0>
mov    0x54(%esp),%ecx
mov    %ebp,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   80500e0 <sidput@plt+0x2580>
test   %eax,%eax
jne    806167c <sidput@plt+0x13b1c>
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   806af90 <dbus_set_error_const>
mov    0x18(%esp),%eax
jmp    806167c <sidput@plt+0x13b1c>
xchg   %ax,%ax
mov    %edi,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %eax,%edx
jmp    80616eb <sidput@plt+0x13b8b>
nop
mov    %edi,(%esp)
call   8059840 <sidput@plt+0xbce0>
jmp    806161e <sidput@plt+0x13abe>
mov    0x54(%esp),%eax
mov    %esi,0x14(%esp)
mov    %edi,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8061050 <sidput@plt+0x134f0>
test   %eax,%eax
mov    %eax,%ebp
je     8061770 <sidput@plt+0x13c10>
lea    0xc(%eax),%eax
mov    %eax,(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
test   %eax,%eax
jne    806191c <sidput@plt+0x13dbc>
xor    %eax,%eax
jmp    806167c <sidput@plt+0x13b1c>
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
mov    %esi,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
call   8060e30 <sidput@plt+0x132d0>
test   %eax,%eax
je     8061770 <sidput@plt+0x13c10>
mov    0x50(%esp),%eax
movl   $0x2,(%eax)
jmp    8061926 <sidput@plt+0x13dc6>
mov    %ebx,(%esp)
mov    %edx,0x18(%esp)
mov    %eax,0x1c(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
mov    0x8(%eax),%eax
testb  $0x1,0xc(%eax)
je     8061a50 <sidput@plt+0x13ef0>
mov    0x4c(%esp),%eax
and    $0x6,%eax
cmp    $0x4,%eax
jne    80618ba <sidput@plt+0x13d5a>
mov    %edi,%edx
mov    %ebp,%eax
call   8060740 <sidput@plt+0x12be0>
test   %eax,%eax
mov    %eax,%edi
je     8061a81 <sidput@plt+0x13f21>
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   807d7e0 <dbus_watch_handle+0x1c20>
mov    0x8(%edi),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
je     8061ad5 <sidput@plt+0x13f75>
mov    %edi,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    0x50(%esp),%eax
movl   $0x3,(%eax)
jmp    8061926 <sidput@plt+0x13dc6>
mov    0x4c(%esp),%edx
movzbl 0xc(%eax),%eax
movzbl 0x4c(%esp),%ebx
shr    $0x2,%edx
and    $0xfffffffc,%eax
and    $0x1,%edx
and    $0x1,%ebx
add    %edx,%edx
or     %ebx,%eax
or     %edx,%eax
mov    %al,0xc(%ecx)
mov    0x50(%esp),%eax
movl   $0x4,(%eax)
jmp    8061926 <sidput@plt+0x13dc6>
call   80611e0 <sidput@plt+0x13680>
test   %eax,%eax
jne    806191c <sidput@plt+0x13dbc>
xor    %eax,%eax
jmp    806167c <sidput@plt+0x13b1c>
call   8060830 <sidput@plt+0x12cd0>
lea    0x0(%esi),%esi
jmp    8061a79 <sidput@plt+0x13f19>
mov    %ebx,(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
test   %eax,%eax
jne    806191c <sidput@plt+0x13dbc>
xor    %eax,%eax
jmp    806167c <sidput@plt+0x13b1c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%ebx
mov    0x4(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   806e190 <dbus_set_error+0x3090>
test   %eax,%eax
mov    (%ebx),%eax
je     8061be0 <sidput@plt+0x14080>
cmpb   $0x3a,(%eax)
je     8061bf0 <sidput@plt+0x14090>
movl   $0x8096b7c,0x4(%esp)
mov    %ebx,(%esp)
call   8080450 <dbus_shutdown+0x1770>
test   %eax,%eax
jne    8061bb0 <sidput@plt+0x14050>
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,%ebx
je     8061c00 <sidput@plt+0x140a0>
mov    0x24(%esp),%edx
call   8060740 <sidput@plt+0x12be0>
test   %eax,%eax
je     8061c18 <sidput@plt+0x140b8>
mov    0x34(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   8061340 <sidput@plt+0x137e0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     8061bd6 <sidput@plt+0x14076>
mov    0x2c(%esp),%eax
movl   $0x1,(%eax)
mov    $0x1,%eax
jmp    8061bd6 <sidput@plt+0x14076>
nop
movl   $0x8096b7c,0xc(%esp)
movl   $0x8099570,0x8(%esp)
mov    0x34(%esp),%eax
movl   $0x80965d4,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
movl   $0x8099514,0x8(%esp)
jmp    8061bc0 <sidput@plt+0x14060>
xchg   %ax,%ax
mov    %eax,0xc(%esp)
movl   $0x8099538,0x8(%esp)
jmp    8061bc0 <sidput@plt+0x14060>
xchg   %ax,%ax
mov    0x2c(%esp),%eax
movl   $0x2,(%eax)
mov    $0x1,%eax
jmp    8061bd6 <sidput@plt+0x14076>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x3,(%eax)
mov    $0x1,%eax
jmp    8061bd6 <sidput@plt+0x14076>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
je     8061c58 <sidput@plt+0x140f8>
repz ret
lea    0x0(%esi,%eiz,1),%esi
jmp    80608a0 <sidput@plt+0x12d40>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
add    $0xc,%eax
mov    %eax,(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
test   %eax,%eax
je     8061c80 <sidput@plt+0x14120>
mov    0x8(%eax),%eax
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8061c79 <sidput@plt+0x14119>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
addl   $0xc,0x4(%esp)
jmp    807d9d0 <dbus_watch_handle+0x1e10>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
add    $0xc,%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x8(%eax),%eax
movzbl 0xc(%eax),%eax
add    $0x1c,%esp
and    $0x1,%eax
ret
sub    $0xc,%esp
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
call   8060740 <sidput@plt+0x12be0>
test   %eax,%eax
setne  %al
add    $0xc,%esp
movzbl %al,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
lea    0xc(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebx
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebx,%ebx
je     8061d3a <sidput@plt+0x141da>
mov    0x8(%ebx),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8061d48 <sidput@plt+0x141e8>
mov    0x4(%ebx),%ebx
cmp    0xc(%esi),%ebx
jne    8061d10 <sidput@plt+0x141b0>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %edi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x28(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
mov    %ecx,%ebx
sub    $0x10,%esp
test   %ecx,%ecx
lea    (%eax,%edx,8),%esi
lea    0x8(%esi),%eax
je     8061da5 <sidput@plt+0x14245>
mov    %ecx,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
je     8061db0 <sidput@plt+0x14250>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%edx
test   %edx,%edx
je     8061da5 <sidput@plt+0x14245>
movl   $0x4,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
je     8061e08 <sidput@plt+0x142a8>
mov    %ebx,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%ebx
je     8061e0c <sidput@plt+0x142ac>
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
mov    %eax,%edx
mov    %edi,%eax
test   %edx,%edx
jne    8061da5 <sidput@plt+0x14245>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    %ebx,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8061da5 <sidput@plt+0x14245>
nop
xor    %eax,%eax
jmp    8061da5 <sidput@plt+0x14245>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8061da5 <sidput@plt+0x14245>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    %edx,%ebx
sub    $0x20,%esp
mov    %eax,(%esp)
call   80590c0 <sidput@plt+0xb560>
mov    %ebx,0x4(%esp)
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,%edi
call   807f390 <dbus_shutdown+0x6b0>
mov    %ebx,0x4(%esp)
mov    %edi,(%esp)
call   8060c40 <sidput@plt+0x130e0>
test   %eax,%eax
je     8061e70 <sidput@plt+0x14310>
mov    %eax,(%esp)
call   8061c60 <sidput@plt+0x14100>
cmp    %esi,%eax
sete   %al
add    $0x20,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x24(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x28(%esi),%edx
test   %edx,%edx
je     8061f02 <sidput@plt+0x143a2>
mov    0x2c(%esi),%eax
test   %eax,%eax
jle    8061efa <sidput@plt+0x1439a>
xor    %ebx,%ebx
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx,%ebx,4),%eax
test   %eax,%eax
je     8061ef2 <sidput@plt+0x14392>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x28(%esi),%edx
add    $0x1,%ebx
cmp    0x2c(%esi),%ebx
jl     8061ee0 <sidput@plt+0x14380>
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    (%eax),%eax
test   %eax,%eax
jne    8061f34 <sidput@plt+0x143d4>
jmp    8061f48 <sidput@plt+0x143e8>
xchg   %ax,%ax
mov    (%ebx),%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    (%ebx),%eax
test   %eax,%eax
je     8061f48 <sidput@plt+0x143e8>
mov    0x8(%eax),%edx
subl   $0x1,(%edx)
jne    8061f20 <sidput@plt+0x143c0>
mov    %edx,%eax
call   8061e80 <sidput@plt+0x14320>
jmp    8061f20 <sidput@plt+0x143c0>
lea    0x0(%esi),%esi
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ebx
test   %ebx,%ebx
je     8061f70 <sidput@plt+0x14410>
mov    %ebx,%eax
call   8061f10 <sidput@plt+0x143b0>
mov    %ebx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    807ebb0 <dbus_free>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x10,%esp
mov    0x8(%edx),%ebx
mov    %ebx,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8059430 <sidput@plt+0xb8d0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
subl   $0x1,(%ebx)
je     8061fb8 <sidput@plt+0x14458>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
jmp    8061e80 <sidput@plt+0x14320>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%edi
jne    8062006 <sidput@plt+0x144a6>
jmp    8062090 <sidput@plt+0x14530>
test   $0x10,%al
je     8061ffc <sidput@plt+0x1449c>
mov    0x1c(%esi),%eax
cmpb   $0x3a,(%eax)
je     806202e <sidput@plt+0x144ce>
test   %ebx,%ebx
je     8062090 <sidput@plt+0x14530>
mov    %ebx,%edi
mov    0x14(%esp),%eax
mov    0x4(%edi),%ebx
mov    0x8(%edi),%esi
cmp    (%eax),%ebx
mov    $0x0,%eax
cmove  %eax,%ebx
cmp    %ebp,0x4(%esi)
je     806207b <sidput@plt+0x1451b>
mov    0x8(%esi),%eax
test   $0x8,%al
je     8061ff0 <sidput@plt+0x14490>
mov    0x18(%esi),%edx
cmpb   $0x3a,(%edx)
jne    8061ff0 <sidput@plt+0x14490>
mov    %ebp,(%esp)
call   8059840 <sidput@plt+0xbce0>
mov    0x8(%esi),%edx
test   $0x8,%dl
mov    %eax,%ecx
je     8062063 <sidput@plt+0x14503>
mov    %eax,0x4(%esp)
mov    %eax,0x18(%esp)
mov    0x18(%esi),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%edx
test   %eax,%eax
je     806207b <sidput@plt+0x1451b>
and    $0x10,%edx
je     8061ffc <sidput@plt+0x1449c>
mov    %ecx,0x4(%esp)
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8061ffc <sidput@plt+0x1449c>
mov    0x14(%esp),%eax
mov    %edi,%edx
call   8061f80 <sidput@plt+0x14420>
test   %ebx,%ebx
jne    8062004 <sidput@plt+0x144a4>
xchg   %ax,%ax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
test   %eax,%eax
mov    %eax,0x1c(%esp)
mov    %edx,0x24(%esp)
mov    %ecx,0x28(%esp)
je     80622a8 <sidput@plt+0x14748>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,0xc(%esp)
jmp    8062187 <sidput@plt+0x14627>
test   $0x8,%bl
je     80620f1 <sidput@plt+0x14591>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
je     80622b8 <sidput@plt+0x14758>
mov    0x18(%ebp),%edx
mov    0x24(%esp),%eax
call   8061e20 <sidput@plt+0x142c0>
test   %eax,%eax
je     8062170 <sidput@plt+0x14610>
mov    %ebx,%eax
shr    $0x8,%eax
mov    %eax,%esi
and    $0x1,%esi
test   $0x10,%bl
je     80621d8 <sidput@plt+0x14678>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   80721c0 <dbus_message_get_destination>
test   %eax,%eax
je     8062170 <sidput@plt+0x14610>
mov    %esi,%eax
test   %al,%al
je     8062170 <sidput@plt+0x14610>
mov    0x28(%esp),%edx
test   %edx,%edx
je     8062510 <sidput@plt+0x149b0>
mov    0x1c(%ebp),%edx
mov    0x28(%esp),%eax
call   8061e20 <sidput@plt+0x142c0>
test   %eax,%eax
je     8062170 <sidput@plt+0x14610>
test   $0x20,%bl
jne    8062202 <sidput@plt+0x146a2>
test   $0x80,%bl
jne    8062240 <sidput@plt+0x146e0>
and    $0x40,%ebx
xchg   %ax,%ax
jne    8062300 <sidput@plt+0x147a0>
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8059030 <sidput@plt+0xb4d0>
test   %eax,%eax
jne    80622d8 <sidput@plt+0x14778>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    0x1c(%esp),%esi
mov    0x4(%eax),%eax
cmp    (%esi),%eax
mov    %eax,0xc(%esp)
je     80622a8 <sidput@plt+0x14748>
test   %eax,%eax
je     80622a8 <sidput@plt+0x14748>
mov    0xc(%esp),%eax
mov    0x8(%eax),%ebp
mov    0x8(%ebp),%eax
mov    %eax,%ebx
and    $0xfffffffc,%ebx
test   $0x4,%al
je     80620d0 <sidput@plt+0x14570>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   8071e00 <dbus_message_get_member>
test   %eax,%eax
je     8062170 <sidput@plt+0x14610>
mov    0x14(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     80620d0 <sidput@plt+0x14570>
jmp    8062170 <sidput@plt+0x14610>
lea    0x0(%esi),%esi
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   80721c0 <dbus_message_get_destination>
test   %eax,%eax
je     8062139 <sidput@plt+0x145d9>
mov    %esi,%eax
test   %al,%al
je     8062170 <sidput@plt+0x14610>
test   $0x20,%bl
je     8062142 <sidput@plt+0x145e2>
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   8071990 <dbus_message_get_path>
test   %eax,%eax
je     8062170 <sidput@plt+0x14610>
mov    0x20(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8062170 <sidput@plt+0x14610>
test   $0x80,%bl
je     806214b <sidput@plt+0x145eb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   8071990 <dbus_message_get_path>
test   %eax,%eax
mov    %eax,%esi
je     8062170 <sidput@plt+0x14610>
mov    0x20(%ebp),%edi
mov    %edi,(%esp)
call   804d600 <strlen@plt>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x10(%esp)
call   804da00 <strncmp@plt>
mov    0x10(%esp),%edx
test   %eax,%eax
jne    8062170 <sidput@plt+0x14610>
cmp    $0x1,%edx
jle    806214b <sidput@plt+0x145eb>
movzbl (%esi,%edx,1),%eax
test   %al,%al
je     806214b <sidput@plt+0x145eb>
cmp    $0x2f,%al
jne    8062170 <sidput@plt+0x14610>
jmp    806214b <sidput@plt+0x145eb>
xchg   %ax,%ax
mov    $0x1,%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x18(%ebp),%esi
mov    $0x8096b7c,%edi
mov    $0x15,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     80620f1 <sidput@plt+0x14591>
jmp    8062170 <sidput@plt+0x14610>
lea    0x0(%esi),%esi
mov    0x4(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x94(%esp),%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    8062170 <sidput@plt+0x14610>
xor    %eax,%eax
jmp    80622ad <sidput@plt+0x1474d>
lea    0x0(%esi),%esi
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   806f850 <dbus_message_iter_init>
mov    0x2c(%ebp),%eax
test   %eax,%eax
jle    8062156 <sidput@plt+0x145f6>
xor    %edi,%edi
jmp    8062334 <sidput@plt+0x147d4>
xchg   %ax,%ax
add    $0x1,%edi
cmp    0x2c(%ebp),%edi
jge    8062156 <sidput@plt+0x145f6>
mov    0x28(%ebp),%eax
mov    (%eax,%edi,4),%esi
mov    0x24(%ebp),%eax
mov    (%eax,%edi,4),%eax
mov    %eax,%ecx
and    $0xf3ffffff,%ecx
mov    %eax,0x18(%esp)
shr    $0x1b,%eax
mov    %ecx,0x10(%esp)
lea    0x38(%esp),%ecx
and    $0x1,%eax
mov    %ecx,(%esp)
mov    %al,0x14(%esp)
call   806fae0 <dbus_message_iter_get_arg_type>
test   %esi,%esi
mov    %eax,%ebx
je     80623f1 <sidput@plt+0x14891>
cmp    $0x73,%eax
je     8062428 <sidput@plt+0x148c8>
cmpb   $0x0,0x14(%esp)
je     8062170 <sidput@plt+0x14610>
cmp    $0x6f,%eax
jne    8062170 <sidput@plt+0x14610>
lea    0x34(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x34(%esp)
call   80703e0 <dbus_message_iter_get_basic>
mov    0x34(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x14(%esp)
call   804d600 <strlen@plt>
mov    0x14(%esp),%edx
mov    %eax,%ecx
cmp    %ecx,0x10(%esp)
jle    8062410 <sidput@plt+0x148b0>
cmpb   $0x2f,-0x1(%edx,%eax,1)
jne    8062170 <sidput@plt+0x14610>
mov    0x10(%esp),%eax
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
cmp    %eax,%ecx
cmovg  %eax,%ecx
mov    %ecx,0x8(%esp)
call   804d1f0 <memcmp@plt>
test   %eax,%eax
jne    8062170 <sidput@plt+0x14610>
test   %ebx,%ebx
je     8062328 <sidput@plt+0x147c8>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   806fa30 <dbus_message_iter_next>
jmp    8062328 <sidput@plt+0x147c8>
lea    0x0(%esi),%esi
jge    80623d0 <sidput@plt+0x14870>
mov    0x10(%esp),%eax
cmpb   $0x2f,-0x1(%esi,%eax,1)
je     80623d0 <sidput@plt+0x14870>
jmp    8062170 <sidput@plt+0x14610>
lea    0x0(%esi),%esi
lea    0x34(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x34(%esp)
call   80703e0 <dbus_message_iter_get_basic>
mov    0x34(%esp),%edx
mov    %edx,(%esp)
mov    %edx,0x2c(%esp)
call   804d600 <strlen@plt>
mov    0x2c(%esp),%edx
cmpb   $0x0,0x14(%esp)
mov    %eax,%ecx
mov    %eax,0x20(%esp)
jne    80623bf <sidput@plt+0x1485f>
testl  $0x4000000,0x18(%esp)
je     80624d0 <sidput@plt+0x14970>
mov    0x20(%esp),%eax
mov    0x10(%esp),%ebx
cmp    %eax,%ebx
jg     8062170 <sidput@plt+0x14610>
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x14(%esp)
call   804d1f0 <memcmp@plt>
test   %eax,%eax
jne    8062170 <sidput@plt+0x14610>
mov    0x20(%esp),%eax
mov    0x14(%esp),%edx
cmp    %eax,%ebx
jge    80623f9 <sidput@plt+0x14899>
mov    0x10(%esp),%eax
cmpb   $0x2e,(%edx,%eax,1)
jne    8062170 <sidput@plt+0x14610>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   806fa30 <dbus_message_iter_next>
jmp    8062328 <sidput@plt+0x147c8>
xchg   %ax,%ax
mov    0x20(%esp),%ecx
mov    0x10(%esp),%eax
cmp    %ecx,%eax
jne    8062170 <sidput@plt+0x14610>
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   804d1f0 <memcmp@plt>
test   %eax,%eax
jne    8062170 <sidput@plt+0x14610>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   806fa30 <dbus_message_iter_next>
jmp    8062328 <sidput@plt+0x147c8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%ebp),%esi
mov    $0x8096b7c,%edi
mov    $0x15,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
je     8062139 <sidput@plt+0x145d9>
jmp    8062170 <sidput@plt+0x14610>
lea    0x0(%esi),%esi
sub    $0x1c,%esp
movl   $0x30,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     8062550 <sidput@plt+0x149f0>
mov    0x20(%esp),%edx
movl   $0x1,(%eax)
mov    %edx,0x4(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
je     8062588 <sidput@plt+0x14a28>
repz ret
lea    0x0(%esi,%eiz,1),%esi
jmp    8061e80 <sidput@plt+0x14320>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
orl    $0x1,0x8(%eax)
mov    %edx,0xc(%eax)
mov    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     80625e4 <sidput@plt+0x14a84>
mov    0x10(%ebx),%eax
orl    $0x2,0x8(%ebx)
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%eax
mov    %esi,0x10(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     8062624 <sidput@plt+0x14ac4>
mov    0x14(%ebx),%eax
orl    $0x4,0x8(%ebx)
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%eax
mov    %esi,0x14(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     8062664 <sidput@plt+0x14b04>
mov    0x18(%ebx),%eax
orl    $0x8,0x8(%ebx)
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%eax
mov    %esi,0x18(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     80626a4 <sidput@plt+0x14b44>
mov    0x1c(%ebx),%eax
orl    $0x10,0x8(%ebx)
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%eax
mov    %esi,0x1c(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
test   %edx,%edx
jne    80626c8 <sidput@plt+0x14b68>
andl   $0xfffffeff,0x8(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
orl    $0x100,0x8(%eax)
ret
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
shr    $0x8,%eax
and    $0x1,%eax
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%ebx
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%esi
je     8062738 <sidput@plt+0x14bd8>
mov    0x8(%ebx),%edx
mov    0x28(%esp),%eax
and    $0x5f,%dl
test   %eax,%eax
mov    %edx,0x8(%ebx)
jne    8062730 <sidput@plt+0x14bd0>
or     $0x20,%edx
mov    %edx,0x8(%ebx)
mov    0x20(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%eax
mov    %esi,0x20(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
or     $0x80,%dl
mov    %edx,0x8(%ebx)
jmp    8062712 <sidput@plt+0x14bb2>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
mov    0x44(%esp),%esi
cmp    %esi,0x2c(%ebp)
jg     80627cc <sidput@plt+0x14c6c>
lea    0x2(%esi),%ebx
lea    0x0(,%ebx,4),%ecx
mov    %ecx,0x4(%esp)
mov    0x28(%ebp),%eax
lea    0x1(%esi),%edi
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
mov    0xc(%esp),%ecx
test   %eax,%eax
je     80627eb <sidput@plt+0x14c8b>
mov    0x2c(%ebp),%edx
cmp    %edx,%edi
jl     8062796 <sidput@plt+0x14c36>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%eax,%edx,4)
add    $0x1,%edx
cmp    %edx,%ebx
jne    8062788 <sidput@plt+0x14c28>
mov    %eax,0x28(%ebp)
mov    %ecx,0x4(%esp)
mov    0x24(%ebp),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     80627eb <sidput@plt+0x14c8b>
mov    0x2c(%ebp),%edx
cmp    %edx,%edi
jl     80627c6 <sidput@plt+0x14c66>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%eax,%edx,4)
add    $0x1,%edx
cmp    %edx,%ebx
jne    80627b8 <sidput@plt+0x14c58>
mov    %eax,0x24(%ebp)
mov    %edi,0x2c(%ebp)
mov    0x48(%esp),%eax
mov    0x4(%eax),%ebx
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
jne    80627f8 <sidput@plt+0x14c98>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x28(%ebp),%eax
lea    0x0(,%esi,4),%edi
orl    $0x40,0x8(%ebp)
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x24(%ebp),%eax
mov    0x4c(%esp),%ecx
mov    %ebx,(%eax,%esi,4)
mov    0x28(%ebp),%eax
mov    0x1c(%esp),%edx
test   %ecx,%ecx
mov    %edx,(%eax,%esi,4)
jne    8062848 <sidput@plt+0x14ce8>
mov    0x50(%esp),%edx
mov    $0x1,%eax
test   %edx,%edx
je     80627ed <sidput@plt+0x14c8d>
add    0x24(%ebp),%edi
orl    $0x4000000,(%edi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x24(%ebp),%eax
add    %edi,%eax
orl    $0x8000000,(%eax)
jmp    8062829 <sidput@plt+0x14cc9>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xec,%esp
mov    0x104(%esp),%eax
mov    0x4(%eax),%eax
cmp    $0x400,%eax
jg     8063000 <sidput@plt+0x154a0>
xor    %eax,%eax
mov    $0x22,%ecx
lea    0x58(%esp),%edi
rep stos %eax,%es:(%edi)
movl   $0x30,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x24(%esp)
je     8062f65 <sidput@plt+0x15405>
movl   $0x1,(%eax)
mov    0x100(%esp),%eax
mov    %eax,0x4(%edi)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8062a71 <sidput@plt+0x14f11>
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8062a65 <sidput@plt+0x14f05>
lea    0x5c(%esp),%eax
xor    %esi,%esi
mov    %eax,0x2c(%esp)
mov    %eax,%ebp
lea    0x0(%esi),%esi
mov    0x104(%esp),%eax
cmp    %esi,0x4(%eax)
jle    8062956 <sidput@plt+0x14df6>
mov    0x104(%esp),%eax
mov    (%eax),%eax
lea    (%eax,%esi,1),%edx
mov    %eax,0x28(%esp)
movzbl (%edx),%eax
test   %al,%al
je     8062936 <sidput@plt+0x14dd6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%al
je     806292c <sidput@plt+0x14dcc>
lea    -0x9(%eax),%ecx
cmp    $0x1,%cl
jbe    806292c <sidput@plt+0x14dcc>
cmp    $0xd,%al
jne    8062ce8 <sidput@plt+0x15188>
add    $0x1,%edx
movzbl (%edx),%eax
test   %al,%al
jne    8062918 <sidput@plt+0x14db8>
sub    0x28(%esp),%edx
mov    %edx,%esi
mov    0x3c(%esp),%eax
test   %eax,%eax
jne    8062b75 <sidput@plt+0x15015>
add    $0x8,%ebp
lea    0xdc(%esp),%eax
cmp    %eax,%ebp
jne    80628f0 <sidput@plt+0x14d90>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x58(%esp),%ebx
test   %ebx,%ebx
je     8062abb <sidput@plt+0x14f5b>
mov    0x2c(%esp),%ebp
jmp    80629bb <sidput@plt+0x14e5b>
mov    0x24(%esp),%eax
testb  $0x1,0x8(%eax)
jne    8062fd8 <sidput@plt+0x15478>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8073730 <dbus_message_type_from_string>
test   %eax,%eax
je     8063038 <sidput@plt+0x154d8>
mov    0x24(%esp),%edi
orl    $0x1,0x8(%edi)
mov    %eax,0xc(%edi)
add    $0x8,%ebp
mov    -0x4(%ebp),%ebx
test   %ebx,%ebx
je     8062b6c <sidput@plt+0x1500c>
mov    0x0(%ebp),%eax
mov    %ebx,%esi
mov    $0x809c204,%edi
mov    %eax,0x28(%esp)
mov    %eax,0x4(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    $0x5,%ecx
mov    0x3c(%esp),%eax
repz cmpsb %es:(%edi),%ds:(%esi)
je     8062980 <sidput@plt+0x14e20>
mov    $0x809c063,%edi
mov    $0x7,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8062b00 <sidput@plt+0x14fa0>
mov    0x24(%esp),%edi
testb  $0x8,0x8(%edi)
jne    8062fd8 <sidput@plt+0x15478>
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806e190 <dbus_set_error+0x3090>
test   %eax,%eax
mov    0x28(%esp),%eax
je     80630de <sidput@plt+0x1557e>
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8062630 <sidput@plt+0x14ad0>
test   %eax,%eax
jne    80629ad <sidput@plt+0x14e4d>
mov    0x108(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8062a98 <sidput@plt+0x14f38>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x108(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
lea    0x5c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    0x24(%esp),%edi
mov    (%edi),%eax
mov    %eax,0x28(%esp)
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,(%edi)
je     8062f53 <sidput@plt+0x153f3>
mov    0x58(%esp),%ebx
movl   $0x0,0x24(%esp)
mov    0x2c(%esp),%esi
jmp    8062ae1 <sidput@plt+0x14f81>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
add    $0x8,%esi
call   807ebb0 <dbus_free>
mov    -0x8(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    -0x4(%esi),%ebx
test   %ebx,%ebx
jne    8062ac8 <sidput@plt+0x14f68>
mov    (%esi),%edx
test   %edx,%edx
jne    8062ac8 <sidput@plt+0x14f68>
mov    0x24(%esp),%eax
add    $0xec,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x809c03b,%edi
mov    $0xa,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8062dd8 <sidput@plt+0x15278>
mov    0x24(%esp),%edi
testb  $0x2,0x8(%edi)
jne    8062fd8 <sidput@plt+0x15478>
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806e010 <dbus_set_error+0x2f10>
test   %eax,%eax
mov    0x28(%esp),%eax
je     8063220 <sidput@plt+0x156c0>
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   80625b0 <sidput@plt+0x14a50>
test   %eax,%eax
je     8062a44 <sidput@plt+0x14ee4>
add    $0x8,%ebp
mov    -0x4(%ebp),%ebx
test   %ebx,%ebx
jne    80629bb <sidput@plt+0x14e5b>
mov    0x58(%esp),%ebx
jmp    8062abb <sidput@plt+0x14f5b>
lea    -0x4(%ebp),%eax
mov    %eax,0x4(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     8062c18 <sidput@plt+0x150b8>
mov    0x104(%esp),%eax
mov    0x4c(%esp),%edi
mov    (%eax),%ebx
add    %ebx,%esi
movzbl (%esi),%eax
test   %al,%al
je     8062bfe <sidput@plt+0x1509e>
xor    %edx,%edx
test   %dl,%dl
jne    8062c90 <sidput@plt+0x15130>
cmp    $0x2c,%al
je     8062e68 <sidput@plt+0x15308>
cmp    $0x5c,%al
je     8062e7a <sidput@plt+0x1531a>
cmp    $0x27,%al
je     8062e70 <sidput@plt+0x15310>
mov    %eax,0x4(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8062cc2 <sidput@plt+0x15162>
xor    %edx,%edx
add    $0x1,%esi
movzbl (%esi),%eax
test   %al,%al
jne    8062ba8 <sidput@plt+0x15048>
cmp    $0x5c,%dl
je     8062f95 <sidput@plt+0x15435>
cmp    $0x27,%dl
je     8062f1f <sidput@plt+0x153bf>
lea    0x48(%esp),%eax
sub    %ebx,%esi
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
jne    8062948 <sidput@plt+0x14de8>
mov    0x108(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
nop
lea    0x58(%esp),%ebx
jmp    8062c64 <sidput@plt+0x15104>
xchg   %ax,%ax
mov    %eax,(%esp)
add    $0x8,%ebx
call   807ebb0 <dbus_free>
mov    -0x4(%ebx),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,-0x8(%ebx)
movl   $0x0,-0x4(%ebx)
mov    (%ebx),%eax
test   %eax,%eax
jne    8062c40 <sidput@plt+0x150e0>
mov    0x4(%ebx),%edi
test   %edi,%edi
jne    8062c40 <sidput@plt+0x150e0>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8062a98 <sidput@plt+0x14f38>
xchg   %ax,%ax
cmp    $0x5c,%dl
je     8062e40 <sidput@plt+0x152e0>
cmp    $0x27,%al
mov    %edx,0x28(%esp)
nop
je     8062be0 <sidput@plt+0x15080>
mov    %eax,0x4(%esp)
lea    0x48(%esp),%eax
mov    %eax,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
mov    0x28(%esp),%edx
test   %eax,%eax
jne    8062be2 <sidput@plt+0x15082>
mov    0x108(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8062f3e <sidput@plt+0x153de>
xchg   %ax,%ax
movzbl (%edx),%eax
mov    %edx,%edi
test   $0xdf,%al
jne    8062d16 <sidput@plt+0x151b6>
jmp    8063378 <sidput@plt+0x15818>
xchg   %ax,%ax
cmp    $0xa,%al
je     8062db8 <sidput@plt+0x15258>
cmp    $0xd,%al
je     8062dc8 <sidput@plt+0x15268>
add    $0x1,%edi
movzbl (%edi),%eax
test   $0xdf,%al
je     8063378 <sidput@plt+0x15818>
cmp    $0x3d,%al
je     8063378 <sidput@plt+0x15818>
cmp    $0x9,%al
jne    8062cf8 <sidput@plt+0x15198>
mov    $0x9,%eax
mov    %edi,%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%al
je     8062d40 <sidput@plt+0x151e0>
lea    -0x9(%eax),%ebx
cmp    $0x1,%bl
jbe    8062d40 <sidput@plt+0x151e0>
cmp    $0xd,%al
jne    8062d58 <sidput@plt+0x151f8>
add    $0x1,%ecx
movzbl (%ecx),%eax
test   %al,%al
jne    8062d30 <sidput@plt+0x151d0>
cmp    %edi,%edx
jne    8062d62 <sidput@plt+0x15202>
mov    %ecx,%edx
jmp    8062936 <sidput@plt+0x14dd6>
lea    0x0(%esi),%esi
cmp    %edx,%edi
je     8062d4e <sidput@plt+0x151ee>
cmp    $0x3d,%al
xchg   %ax,%ax
je     8062d88 <sidput@plt+0x15228>
mov    0x108(%esp),%eax
movl   $0x809964c,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062c38 <sidput@plt+0x150d8>
xchg   %ax,%ax
sub    %edx,%edi
lea    0x38(%esp),%eax
mov    %edi,0x8(%esp)
lea    0x1(%ecx),%esi
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807fa10 <dbus_shutdown+0xd30>
test   %eax,%eax
je     8062c18 <sidput@plt+0x150b8>
sub    0x28(%esp),%esi
jmp    806293c <sidput@plt+0x14ddc>
lea    0x0(%esi),%esi
mov    $0xa,%eax
jmp    8062d27 <sidput@plt+0x151c7>
lea    0x0(%esi),%esi
mov    $0xd,%eax
jmp    8062d27 <sidput@plt+0x151c7>
lea    0x0(%esi),%esi
mov    $0x809c049,%edi
mov    $0x7,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8062e84 <sidput@plt+0x15324>
mov    0x24(%esp),%edi
testb  $0x4,0x8(%edi)
jne    8062fd8 <sidput@plt+0x15478>
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806e0d0 <dbus_set_error+0x2fd0>
test   %eax,%eax
mov    0x28(%esp),%eax
je     8063296 <sidput@plt+0x15736>
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   80625f0 <sidput@plt+0x14a90>
test   %eax,%eax
jne    80629ad <sidput@plt+0x14e4d>
jmp    8062a44 <sidput@plt+0x14ee4>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x27,%al
je     8062e60 <sidput@plt+0x15300>
lea    0x48(%esp),%eax
movl   $0x5c,0x4(%esp)
mov    %eax,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8062cc2 <sidput@plt+0x15162>
movzbl (%esi),%eax
jmp    8062bc8 <sidput@plt+0x15068>
add    $0x1,%esi
jmp    8062bfe <sidput@plt+0x1509e>
mov    $0x27,%edx
jmp    8062be2 <sidput@plt+0x15082>
mov    $0x5c,%edx
jmp    8062be2 <sidput@plt+0x15082>
mov    $0x809c0f6,%edi
mov    $0x5,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    $0x80995e7,%edi
mov    %ebx,%esi
seta   %cl
setb   %dl
cmp    %dl,%cl
mov    $0xf,%ecx
je     8062f10 <sidput@plt+0x153b0>
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8062fb6 <sidput@plt+0x15456>
xor    %edx,%edx
mov    0x24(%esp),%edi
xor    %ebx,%ebx
test   %edx,%edx
sete   %bl
testb  $0xa0,0x8(%edi)
jne    80632ea <sidput@plt+0x1578a>
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806d610 <dbus_set_error+0x2510>
test   %eax,%eax
je     80632be <sidput@plt+0x1575e>
mov    0x28(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   80626e0 <sidput@plt+0x14b80>
test   %eax,%eax
jne    80629ad <sidput@plt+0x14e4d>
jmp    8062a44 <sidput@plt+0x14ee4>
lea    0x0(%esi,%eiz,1),%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
sub    %ecx,%edx
movsbl %dl,%edx
jmp    8062eb2 <sidput@plt+0x15352>
mov    0x108(%esp),%eax
movl   $0x80996b0,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
lea    0x48(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
jmp    8062c38 <sidput@plt+0x150d8>
mov    0x24(%esp),%eax
call   8061e80 <sidput@plt+0x14320>
lea    0x0(%esi,%eiz,1),%esi
jmp    8062aaf <sidput@plt+0x14f4f>
mov    0x108(%esp),%eax
movl   $0x8099a80,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
lea    0x5c(%esp),%eax
mov    0x58(%esp),%ebx
mov    %eax,0x2c(%esp)
jmp    8062abb <sidput@plt+0x14f5b>
lea    0x48(%esp),%eax
movl   $0x5c,0x4(%esp)
mov    %eax,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
jne    8062bfe <sidput@plt+0x1509e>
jmp    8062cc2 <sidput@plt+0x15162>
mov    $0x809c02b,%edi
mov    $0xc,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80630a8 <sidput@plt+0x15548>
mov    0x24(%esp),%edi
testb  $0x10,0x8(%edi)
je     8063064 <sidput@plt+0x15504>
mov    0x108(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x80996dc,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
movl   $0x400,0x10(%esp)
movl   $0x8099620,0x8(%esp)
movl   $0x8096864,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0xec,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x28(%esp),%eax
movl   $0x8099704,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   806e190 <dbus_set_error+0x3090>
test   %eax,%eax
mov    0x28(%esp),%eax
je     8063387 <sidput@plt+0x15827>
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8062670 <sidput@plt+0x14b10>
test   %eax,%eax
jne    80629ad <sidput@plt+0x14e4d>
jmp    8062a44 <sidput@plt+0x14ee4>
lea    0x0(%esi),%esi
mov    $0x8096ca6,%edi
mov    $0xa,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8063106 <sidput@plt+0x155a6>
mov    0x28(%esp),%esi
mov    $0x8097c57,%edi
mov    $0x5,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8063248 <sidput@plt+0x156e8>
mov    0x24(%esp),%eax
orl    $0x100,0x8(%eax)
jmp    80629ad <sidput@plt+0x14e4d>
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
movl   $0x80995ad,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    $0x809960c,%edi
mov    $0x3,%ecx
mov    %ebx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80633af <sidput@plt+0x1584f>
lea    0x48(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x4c(%esp),%esi
cmp    $0x3,%esi
jle    806326e <sidput@plt+0x1570e>
lea    0x34(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x30(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
call   8087a40 <dbus_shutdown+0x8d60>
test   %eax,%eax
je     8063349 <sidput@plt+0x157e9>
mov    0x34(%esp),%eax
cmp    %eax,%esi
je     8063340 <sidput@plt+0x157e0>
add    $0x4,%eax
cmp    %esi,%eax
je     8063497 <sidput@plt+0x15937>
lea    0x48(%esp),%eax
movl   $0x8099610,0x4(%esp)
mov    %eax,(%esp)
call   8080450 <dbus_shutdown+0x1770>
test   %eax,%eax
je     8063463 <sidput@plt+0x15903>
mov    0x3c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   806e1d0 <dbus_set_error+0x30d0>
test   %eax,%eax
je     8063437 <sidput@plt+0x158d7>
mov    $0x1,%ecx
xor    %edx,%edx
mov    0x30(%esp),%eax
cmp    $0x3f,%eax
ja     8063403 <sidput@plt+0x158a3>
mov    0x24(%esp),%edi
testb  $0x40,0x8(%edi)
je     806330e <sidput@plt+0x157ae>
cmp    %eax,0x2c(%edi)
jle    806330e <sidput@plt+0x157ae>
mov    0x28(%edi),%esi
mov    (%esi,%eax,4),%esi
test   %esi,%esi
je     806330e <sidput@plt+0x157ae>
mov    0x108(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x80999c4,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
movl   $0x8099730,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    0x28(%esp),%esi
mov    $0x8097c5c,%edi
mov    $0x6,%ecx
repz cmpsb %es:(%edi),%ds:(%esi)
jne    80633d7 <sidput@plt+0x15877>
mov    0x24(%esp),%eax
andl   $0xfffffeff,0x8(%eax)
jmp    80629ad <sidput@plt+0x14e4d>
mov    0x108(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x80997e8,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
movl   $0x80995ca,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    0x28(%esp),%eax
movl   $0x80995f6,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    0x108(%esp),%eax
movl   $0x8099750,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
lea    0x38(%esp),%edi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8062740 <sidput@plt+0x14be0>
test   %eax,%eax
jne    80629ad <sidput@plt+0x14e4d>
jmp    8062a44 <sidput@plt+0x14ee4>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %ecx,%ecx
xor    %edx,%edx
jmp    80631c1 <sidput@plt+0x15661>
mov    0x108(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8099854,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
lea    0x0(%esi,%eiz,1),%esi
test   %al,%al
jne    8062d27 <sidput@plt+0x151c7>
mov    %edi,%ecx
jmp    8062d4a <sidput@plt+0x151ea>
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
movl   $0x8099788,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    0x108(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x80999f8,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    0x28(%esp),%eax
movl   $0x80997ac,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    %eax,0x10(%esp)
mov    0x108(%esp),%eax
movl   $0x3f,0x14(%esp)
mov    %ebx,0xc(%esp)
movl   $0x8099980,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    0x38(%esp),%eax
movl   $0x80998c8,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
mov    0x30(%esp),%eax
mov    %ebx,0xc(%esp)
movl   $0x8099900,0x8(%esp)
movl   $0x8099684,0x4(%esp)
mov    %eax,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x108(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8062a98 <sidput@plt+0x14f38>
lea    0x48(%esp),%eax
movl   $0x809c0f6,0x4(%esp)
mov    %eax,(%esp)
call   808c390 <dbus_shutdown+0xd6b0>
test   %eax,%eax
je     806317a <sidput@plt+0x1561a>
xor    %ecx,%ecx
mov    $0x1,%edx
jmp    80631c1 <sidput@plt+0x15661>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
movl   $0x2c,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8063543 <sidput@plt+0x159e3>
movl   $0x1,(%eax)
mov    %eax,%ebx
lea    0x28(%eax),%edi
movl   $0x8061f50,0x8(%esp)
movl   $0x807ebb0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x4(%ebx)
je     8063518 <sidput@plt+0x159b8>
add    $0x8,%ebx
cmp    %edi,%ebx
jne    80634e3 <sidput@plt+0x15983>
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xor    %ebx,%ebx
mov    0x4(%esi,%ebx,8),%eax
test   %eax,%eax
je     8063532 <sidput@plt+0x159d2>
mov    %eax,(%esp)
add    $0x1,%ebx
call   807c1b0 <dbus_watch_handle+0x5f0>
cmp    $0x5,%ebx
jne    806351a <sidput@plt+0x159ba>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %eax,%eax
jmp    806350f <sidput@plt+0x159af>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
subl   $0x1,(%edi)
jne    80635a0 <sidput@plt+0x15a40>
lea    0x8(%edi),%ebx
xor    %esi,%esi
mov    -0x4(%ebx),%eax
add    $0x1,%esi
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %ebx,%eax
add    $0x8,%ebx
call   8061f10 <sidput@plt+0x143b0>
cmp    $0x5,%esi
jne    8063574 <sidput@plt+0x15a14>
mov    %edi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
movl   $0x1,(%esp)
call   8061d80 <sidput@plt+0x14220>
test   %eax,%eax
mov    %eax,%esi
je     80635e5 <sidput@plt+0x15a85>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    80635f0 <sidput@plt+0x15a90>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %ebx,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8059400 <sidput@plt+0xb8a0>
test   %eax,%eax
je     8063618 <sidput@plt+0x15ab8>
addl   $0x1,(%ebx)
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   807d960 <dbus_watch_handle+0x1da0>
mov    0x10(%ebx),%eax
mov    0xc(%ebx),%edx
test   %eax,%eax
je     80635e5 <sidput@plt+0x15a85>
mov    (%esi),%ecx
test   %ecx,%ecx
jne    80635e5 <sidput@plt+0x15a85>
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x4(%eax,%edx,8),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
jmp    80635e5 <sidput@plt+0x15a85>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%edi
mov    %ebx,0x4(%esp)
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   8059430 <sidput@plt+0xb8d0>
mov    0xc(%ebx),%edx
mov    %edi,%eax
mov    0x10(%ebx),%ecx
movl   $0x0,(%esp)
call   8061d80 <sidput@plt+0x14220>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%esi
call   807d870 <dbus_watch_handle+0x1cb0>
mov    0x10(%ebx),%eax
mov    0xc(%ebx),%edx
test   %eax,%eax
je     806369f <sidput@plt+0x15b3f>
mov    (%esi),%ecx
test   %ecx,%ecx
je     80636c0 <sidput@plt+0x15b60>
subl   $0x1,(%ebx)
je     80636b0 <sidput@plt+0x15b50>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
jmp    8061e80 <sidput@plt+0x14320>
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    0x4(%edi,%edx,8),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
jmp    806369f <sidput@plt+0x15b3f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%ebp
mov    0x70(%esp),%eax
mov    0x10(%ebp),%ecx
mov    0xc(%ebp),%edx
movl   $0x0,(%esp)
call   8061d80 <sidput@plt+0x14220>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x10(%esp)
je     8063978 <sidput@plt+0x15e18>
mov    %eax,(%esp)
call   807d910 <dbus_watch_handle+0x1d50>
test   %eax,%eax
mov    %eax,%ecx
je     8063978 <sidput@plt+0x15e18>
mov    0x8(%ebp),%edx
mov    %ecx,%ebx
mov    (%edi),%edi
mov    %edx,%eax
and    $0x1,%eax
mov    %edi,%ecx
mov    %eax,0x14(%esp)
mov    %edx,%eax
mov    %edx,%edi
and    $0x4,%eax
mov    %eax,0x18(%esp)
mov    %edx,%eax
and    $0x20,%eax
mov    %eax,0x1c(%esp)
mov    %edx,%eax
and    $0x2,%eax
mov    %eax,0x20(%esp)
mov    %edx,%eax
mov    %ebp,%edx
and    $0x8,%eax
mov    %eax,0x24(%esp)
jmp    806376a <sidput@plt+0x15c0a>
lea    0x0(%esi),%esi
test   %esi,%esi
je     8063978 <sidput@plt+0x15e18>
mov    %esi,%ebx
cmp    %ecx,%ebx
mov    0x8(%ebx),%ebp
je     8063970 <sidput@plt+0x15e10>
mov    (%ebx),%esi
cmp    0x8(%ebp),%edi
jne    8063760 <sidput@plt+0x15c00>
mov    0x4(%edx),%eax
cmp    %eax,0x4(%ebp)
jne    8063760 <sidput@plt+0x15c00>
mov    0x14(%esp),%eax
test   %eax,%eax
jne    80639a0 <sidput@plt+0x15e40>
mov    0x18(%esp),%eax
test   %eax,%eax
je     80637be <sidput@plt+0x15c5e>
mov    0x14(%edx),%eax
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%ebp),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    8063760 <sidput@plt+0x15c00>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     80637f0 <sidput@plt+0x15c90>
mov    0x20(%edx),%eax
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%ebp),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    8063760 <sidput@plt+0x15c00>
mov    0x20(%esp),%eax
test   %eax,%eax
je     8063822 <sidput@plt+0x15cc2>
mov    0x10(%edx),%eax
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    8063760 <sidput@plt+0x15c00>
mov    0x24(%esp),%eax
test   %eax,%eax
jne    80639b8 <sidput@plt+0x15e58>
test   $0x10,%edi
je     8063860 <sidput@plt+0x15d00>
mov    0x1c(%edx),%eax
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%ebp),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
jne    8063760 <sidput@plt+0x15c00>
test   $0x40,%edi
je     80639e7 <sidput@plt+0x15e87>
mov    0x2c(%ebp),%eax
cmp    0x2c(%edx),%eax
mov    %eax,0x2c(%esp)
jne    8063760 <sidput@plt+0x15c00>
test   %eax,%eax
jle    80639e7 <sidput@plt+0x15e87>
mov    0x28(%ebp),%eax
mov    %eax,0x34(%esp)
mov    (%eax),%eax
mov    %eax,0x3c(%esp)
mov    0x28(%edx),%eax
mov    %eax,0x38(%esp)
mov    (%eax),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
mov    0x3c(%esp),%eax
setne  0x30(%esp)
test   %eax,%eax
setne  %al
cmp    %al,0x30(%esp)
jne    8063760 <sidput@plt+0x15c00>
mov    0x24(%ebp),%ebp
mov    %edi,0x44(%esp)
mov    %edx,0x74(%esp)
movl   $0x0,0x40(%esp)
mov    %ebp,%eax
mov    0x24(%edx),%ebp
xor    %edx,%edx
mov    %eax,%edi
mov    0x3c(%esp),%eax
mov    %esi,0x48(%esp)
mov    %ebx,0x4c(%esp)
mov    %ebp,0x30(%esp)
xor    %ebp,%ebp
mov    %ecx,0x3c(%esp)
jmp    806394a <sidput@plt+0x15dea>
lea    0x0(%esi,%eiz,1),%esi
and    $0xf3ffffff,%esi
test   %eax,%eax
je     8063912 <sidput@plt+0x15db2>
mov    0x28(%esp),%edx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d1f0 <memcmp@plt>
test   %eax,%eax
jne    8063956 <sidput@plt+0x15df6>
add    $0x1,%ebp
cmp    0x2c(%esp),%ebp
je     8063a28 <sidput@plt+0x15ec8>
mov    0x38(%esp),%ecx
lea    0x0(,%ebp,4),%edx
mov    0x34(%esp),%eax
mov    (%ecx,%ebp,4),%ecx
mov    (%eax,%ebp,4),%eax
test   %ecx,%ecx
setne  %bl
test   %eax,%eax
mov    %ebx,%esi
setne  %bl
mov    %ecx,0x28(%esp)
mov    %esi,%ecx
cmp    %bl,%cl
jne    8063956 <sidput@plt+0x15df6>
mov    0x30(%esp),%ecx
mov    (%edi,%edx,1),%esi
cmp    (%ecx,%edx,1),%esi
je     80638f0 <sidput@plt+0x15d90>
mov    0x44(%esp),%edi
mov    0x48(%esp),%esi
mov    0x3c(%esp),%ecx
mov    0x74(%esp),%edx
jmp    8063760 <sidput@plt+0x15c00>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    8063777 <sidput@plt+0x15c17>
nop
mov    0x78(%esp),%eax
xor    %ebx,%ebx
movl   $0x8099a18,0x8(%esp)
movl   $0x8099a50,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x5c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%edx),%eax
cmp    %eax,0xc(%ebp)
jne    8063760 <sidput@plt+0x15c00>
jmp    8063790 <sidput@plt+0x15c30>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%edx),%eax
mov    %ecx,0x2c(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%ebp),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
mov    0x28(%esp),%edx
mov    0x2c(%esp),%ecx
test   %eax,%eax
je     806382e <sidput@plt+0x15cce>
jmp    8063760 <sidput@plt+0x15c00>
mov    %ebx,%ecx
mov    %edx,%ebp
mov    0x10(%esp),%eax
mov    %ecx,%edx
call   8061f80 <sidput@plt+0x14420>
mov    0x10(%ebp),%eax
mov    0xc(%ebp),%edx
test   %eax,%eax
je     8063a32 <sidput@plt+0x15ed2>
mov    0x10(%esp),%edi
mov    $0x1,%ebx
mov    (%edi),%ecx
test   %ecx,%ecx
jne    8063996 <sidput@plt+0x15e36>
mov    %eax,0x4(%esp)
mov    0x70(%esp),%eax
mov    0x4(%eax,%edx,8),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
jmp    8063996 <sidput@plt+0x15e36>
mov    0x4c(%esp),%ecx
mov    0x74(%esp),%ebp
jmp    80639eb <sidput@plt+0x15e8b>
mov    $0x1,%ebx
jmp    8063996 <sidput@plt+0x15e36>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
lea    0x18(%esp),%ebx
mov    0x54(%esp),%esi
movl   $0x5,0xc(%esp)
lea    0x8(%eax),%edi
mov    %edi,%eax
mov    %esi,%edx
call   8061fd0 <sidput@plt+0x14470>
mov    %ebx,0x4(%esp)
mov    -0x4(%edi),%eax
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
jmp    8063a90 <sidput@plt+0x15f30>
mov    %ebx,(%esp)
call   807c380 <dbus_watch_handle+0x7c0>
mov    %esi,%edx
mov    %eax,%ebp
call   8061fd0 <sidput@plt+0x14470>
mov    0x0(%ebp),%eax
test   %eax,%eax
je     8063ab0 <sidput@plt+0x15f50>
mov    %ebx,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    8063a78 <sidput@plt+0x15f18>
add    $0x8,%edi
subl   $0x1,0xc(%esp)
jne    8063a5e <sidput@plt+0x15efe>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebx,(%esp)
call   807c300 <dbus_watch_handle+0x740>
jmp    8063a90 <sidput@plt+0x15f30>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x50(%esp),%ebx
mov    %eax,(%esp)
call   8059020 <sidput@plt+0xb4c0>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     8063aeb <sidput@plt+0x15f8b>
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
call   8059030 <sidput@plt+0xb4d0>
mov    %ebx,(%esp)
xor    %ebp,%ebp
call   806f7e0 <dbus_message_get_type>
mov    %ebx,(%esp)
mov    %eax,%edi
call   8071c30 <dbus_message_get_interface>
mov    %eax,%esi
mov    0x40(%esp),%eax
add    $0x8,%eax
test   %esi,%esi
mov    %eax,0x14(%esp)
je     8063b26 <sidput@plt+0x15fc6>
mov    0x40(%esp),%eax
mov    %esi,%ecx
xor    %edx,%edx
movl   $0x0,(%esp)
call   8061d80 <sidput@plt+0x14220>
mov    %eax,%ebp
lea    -0x1(%edi),%eax
cmp    $0x3,%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
jbe    8063b98 <sidput@plt+0x16038>
mov    0x54(%esp),%eax
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
call   80620a0 <sidput@plt+0x14540>
test   %eax,%eax
je     8063b7c <sidput@plt+0x1601c>
mov    0x54(%esp),%eax
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,%eax
call   80620a0 <sidput@plt+0x14540>
test   %eax,%eax
jne    8063bc8 <sidput@plt+0x16068>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x40(%esp),%eax
test   %esi,%esi
lea    0x8(%eax,%edi,8),%eax
mov    %eax,0x18(%esp)
je     8063b3e <sidput@plt+0x15fde>
mov    0x40(%esp),%eax
mov    %esi,%ecx
mov    %edi,%edx
movl   $0x0,(%esp)
call   8061d80 <sidput@plt+0x14220>
mov    %eax,0x1c(%esp)
jmp    8063b3e <sidput@plt+0x15fde>
lea    0x0(%esi),%esi
mov    0x54(%esp),%eax
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
call   80620a0 <sidput@plt+0x14540>
test   %eax,%eax
je     8063b7c <sidput@plt+0x1601c>
mov    0x54(%esp),%eax
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
call   80620a0 <sidput@plt+0x14540>
test   %eax,%eax
je     8063b7c <sidput@plt+0x1601c>
mov    $0x1,%eax
jmp    8063b8a <sidput@plt+0x1602a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
jmp    8063c35 <sidput@plt+0x160d5>
lea    0x0(%esi),%esi
call   8088380 <dbus_shutdown+0x96a0>
mov    %ebx,(%esp)
call   8068550 <dbus_connection_dispatch>
cmp    $0x2,%eax
je     8063c30 <sidput@plt+0x160d0>
test   %eax,%eax
sete   %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8063c20 <sidput@plt+0x160c0>
test   %eax,%eax
jne    8063c58 <sidput@plt+0x160f8>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x1c(%ebx),%eax
test   %eax,%eax
je     8063c88 <sidput@plt+0x16128>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x8(%ebx),%eax
mov    %eax,(%esp)
call   807fa10 <dbus_shutdown+0xd30>
test   %eax,%eax
jne    8063c7f <sidput@plt+0x1611f>
movl   $0x0,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x1,0x1c(%ebx)
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
lea    0x8(%eax),%esi
mov    0x18(%eax),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8057620 <sidput@plt+0x9ac0>
test   %eax,%eax
jne    8063d00 <sidput@plt+0x161a0>
movl   $0x1,0x1c(%ebx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    0x1c(%ebx),%edx
test   %edx,%edx
jne    8063d65 <sidput@plt+0x16205>
mov    0xc(%ebx),%eax
test   %eax,%eax
jle    8063d41 <sidput@plt+0x161e1>
mov    %ebx,%eax
call   8063cd0 <sidput@plt+0x16170>
test   %eax,%eax
je     8063d65 <sidput@plt+0x16205>
mov    0x18(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8057200 <sidput@plt+0x96a0>
test   %eax,%eax
jne    8063d65 <sidput@plt+0x16205>
movl   $0x1,0x1c(%ebx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x44(%esp),%edi
mov    0x48(%esp),%ebx
mov    %eax,0x18(%esp)
mov    %edi,0x1c(%esp)
mov    0x1c(%eax),%edi
test   %edi,%edi
jne    8063e83 <sidput@plt+0x16323>
mov    0xc(%eax),%esi
test   %esi,%esi
jle    8063dae <sidput@plt+0x1624e>
mov    0x18(%esp),%eax
call   8063cd0 <sidput@plt+0x16170>
test   %eax,%eax
je     8063e83 <sidput@plt+0x16323>
mov    (%ebx),%ecx
xor    %eax,%eax
mov    $0x4,%esi
test   %ecx,%ecx
je     8063dd3 <sidput@plt+0x16273>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
jne    8063dc0 <sidput@plt+0x16260>
sar    %eax
lea    0x4(,%eax,4),%esi
mov    %esi,(%esp)
call   807eb80 <dbus_malloc0>
mov    %esi,(%esp)
mov    %eax,%ebp
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
je     8063e90 <sidput@plt+0x16330>
test   %ebp,%ebp
je     8063e90 <sidput@plt+0x16330>
mov    (%ebx),%ecx
xor    %eax,%eax
xor    %edx,%edx
test   %ecx,%ecx
je     8063e23 <sidput@plt+0x162c3>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%esi
add    $0x2,%edx
sar    %esi
mov    %ecx,0x0(%ebp,%esi,4)
mov    0x4(%ebx,%eax,4),%eax
mov    %eax,(%edi,%esi,4)
mov    (%ebx,%edx,4),%ecx
mov    %edx,%eax
test   %ecx,%ecx
jne    8063e08 <sidput@plt+0x162a8>
mov    0x18(%esp),%ecx
mov    0x18(%ecx),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   80564b0 <sidput@plt+0x8950>
test   %eax,%eax
je     8063e68 <sidput@plt+0x16308>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    807ebb0 <dbus_free>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esp),%eax
movl   $0x1,0x1c(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%ebx
movl   $0x0,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x1,0x1c(%ebx)
jmp    8063e4c <sidput@plt+0x162ec>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x9c(%esp),%eax
lea    0x58(%esp),%edi
movl   $0x0,0x6c(%esp)
mov    %eax,0x68(%esp)
mov    0x90(%esp),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8064198 <sidput@plt+0x16638>
lea    0x30(%esp),%ebx
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80641c8 <sidput@plt+0x16668>
movl   $0x0,0x8(%esp)
movl   $0x80b87f8,0x4(%esp)
movl   $0x80983f1,(%esp)
movl   $0x807eb50,0x80b87f8
08
movl   $0x807ebe0,0x80b87fc
08
movl   $0x807ebb0,0x80b8800
08
call   804d5a0 <XML_ParserCreate_MM@plt>
test   %eax,%eax
mov    %eax,%esi
je     8064158 <sidput@plt+0x165f8>
mov    0x90(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   808a2f0 <dbus_shutdown+0xb610>
test   %eax,%eax
jne    8063fb0 <sidput@plt+0x16450>
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   804d370 <XML_ParserFree@plt>
xor    %eax,%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x98(%esp),%eax
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
call   8056290 <sidput@plt+0x8730>
test   %eax,%eax
mov    %eax,%ebp
je     8063f6a <sidput@plt+0x1640a>
mov    %eax,0x50(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804d3e0 <XML_SetUserData@plt>
movl   $0x8063d20,0x8(%esp)
movl   $0x8063d70,0x4(%esp)
mov    %esi,(%esp)
call   804d8f0 <XML_SetElementHandler@plt>
movl   $0x8063c70,0x4(%esp)
mov    %esi,(%esp)
call   804d340 <XML_SetCharacterDataHandler@plt>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8064108 <sidput@plt+0x165a8>
mov    0x9c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   8080bd0 <dbus_shutdown+0x1ef0>
test   %eax,%eax
je     80640f8 <sidput@plt+0x16598>
mov    0x44(%esp),%eax
movl   $0x1,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   804d480 <XML_Parse@plt>
test   %eax,%eax
jne    80641f8 <sidput@plt+0x16698>
mov    0x68(%esp),%eax
test   %eax,%eax
je     80640f8 <sidput@plt+0x16598>
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    80640f8 <sidput@plt+0x16598>
mov    %esi,(%esp)
call   804d0c0 <XML_GetErrorCode@plt>
cmp    $0x1,%eax
je     806424a <sidput@plt+0x166ea>
mov    %eax,(%esp)
call   804d810 <XML_ErrorString@plt>
mov    %esi,(%esp)
mov    %eax,0x2c(%esp)
call   804d330 <XML_GetCurrentColumnNumber@plt>
mov    %esi,(%esp)
mov    %eax,0x28(%esp)
call   804d180 <XML_GetCurrentLineNumber@plt>
mov    0x2c(%esp),%edx
mov    0x28(%esp),%ecx
movl   $0x8099aac,0x8(%esp)
movl   $0x8096744,0x4(%esp)
mov    %edx,0x18(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xchg   %ax,%ax
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8064127 <sidput@plt+0x165c7>
xchg   %ax,%ax
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   804d370 <XML_ParserFree@plt>
mov    %ebp,(%esp)
call   8056440 <sidput@plt+0x88e0>
add    $0x7c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x7c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x7c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
jmp    8063fa3 <sidput@plt+0x16443>
xchg   %ax,%ax
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x6c(%esp),%eax
test   %eax,%eax
jne    8064127 <sidput@plt+0x165c7>
mov    0x9c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8057e20 <sidput@plt+0xa2c0>
test   %eax,%eax
je     8064127 <sidput@plt+0x165c7>
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   804d370 <XML_ParserFree@plt>
mov    %ebp,%eax
jmp    8063fa3 <sidput@plt+0x16443>
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x8096360,0x4(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    80640f8 <sidput@plt+0x16598>
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x80b83a0,%eax
movl   $0xda,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x8099ad8,(%esp)
mov    %eax,0xc(%esp)
call   804d3c0 <fwrite@plt>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
lea    0x20(%esp),%ebx
jmp    80642c5 <sidput@plt+0x16765>
nop
lea    0x0(%esi,%eiz,1),%esi
call   8088380 <dbus_shutdown+0x96a0>
mov    %ebx,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80642c0 <sidput@plt+0x16760>
mov    0x80b8804,%eax
test   %eax,%eax
jle    80642f7 <sidput@plt+0x16797>
movl   $0x1,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8081990 <dbus_shutdown+0x2cb0>
cmp    $0x1,%eax
jne    8064380 <sidput@plt+0x16820>
mov    0x20(%esp),%eax
test   %eax,%eax
je     8064410 <sidput@plt+0x168b0>
movzbl (%eax),%esi
mov    %ebx,(%esp)
lea    0x10(%esp),%ebx
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebx,(%esp)
call   806ad70 <dbus_error_init>
mov    %esi,%eax
cmp    $0x71,%al
je     8064358 <sidput@plt+0x167f8>
cmp    $0x72,%al
jne    8064371 <sidput@plt+0x16811>
mov    0x80b880c,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8053c40 <sidput@plt+0x60e0>
test   %eax,%eax
jne    8064371 <sidput@plt+0x16811>
mov    0x14(%esp),%eax
movl   $0x8099bd8,(%esp)
mov    %eax,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %ebx,(%esp)
call   806ade0 <dbus_error_free>
jmp    8064371 <sidput@plt+0x16811>
nop
mov    0x80b880c,%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
test   %eax,%eax
je     8064371 <sidput@plt+0x16811>
mov    %eax,(%esp)
call   8088360 <dbus_shutdown+0x9680>
add    $0x34,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x8099bb4,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x80b880c,%eax
mov    %eax,(%esp)
call   8052e70 <sidput@plt+0x5310>
mov    0x40(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8088100 <dbus_shutdown+0x9420>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    0x80b8804,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
mov    0x80b8808,%eax
movl   $0x0,0x4(%esp)
movl   $0xffffffff,0x80b8804
ff
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
mov    $0x1,%eax
movl   $0xffffffff,0x80b8808
ff
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x10(%esp),%eax
mov    %eax,(%esp)
call   806ad70 <dbus_error_init>
add    $0x34,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
cmp    $0x1,%eax
je     8064498 <sidput@plt+0x16938>
cmp    $0xf,%eax
jne    806448d <sidput@plt+0x1692d>
lea    0x1e(%esp),%eax
lea    0x20(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
movb   $0x71,0x1e(%esp)
movb   $0x0,0x1f(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x80b8808,%eax
test   %eax,%eax
js     80644fd <sidput@plt+0x1699d>
movl   $0x1,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8081570 <dbus_shutdown+0x2890>
test   %eax,%eax
je     80644fd <sidput@plt+0x1699d>
add    $0x38,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x1e(%esp),%eax
lea    0x20(%esp),%ebx
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
movb   $0x72,0x1e(%esp)
movb   $0x0,0x1f(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x80b8808,%eax
test   %eax,%eax
jle    806448d <sidput@plt+0x1692d>
movl   $0x1,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8081570 <dbus_shutdown+0x2890>
test   %eax,%eax
jne    806448d <sidput@plt+0x1692d>
movl   $0x2e,0x8(%esp)
movl   $0x809a060,0x4(%esp)
movl   $0x2,(%esp)
call   804d650 <write@plt>
jmp    806448d <sidput@plt+0x1692d>
movl   $0x4d,0x8(%esp)
movl   $0x809a000,0x4(%esp)
movl   $0x2,(%esp)
call   804d650 <write@plt>
movl   $0x1,(%esp)
call   804d110 <_exit@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x53ac2,%ebx
mov    0x20(%esp),%esi
mov    0x30(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806eff0 <dbus_message_set_serial+0x170>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x53a87,%ebx
sub    $0x14,%esp
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   80785c0 <dbus_timeout_get_enabled+0x260>
mov    0xc(%esi),%eax
movl   $0x0,0x80(%esi)
00
mov    %eax,(%esp)
call   8078870 <dbus_timeout_get_enabled+0x510>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078640 <dbus_timeout_get_enabled+0x2e0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x53a36,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x53a06,%ebx
sub    $0x10,%esp
movl   $0xc,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%esi
je     8064650 <sidput@plt+0x16af0>
movl   $0x0,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     8064663 <sidput@plt+0x16b03>
mov    0x30(%edi),%eax
mov    %eax,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     8064658 <sidput@plt+0x16af8>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8075670 <dbus_pending_call_get_data+0x120>
mov    %esi,%eax
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %eax,%eax
jmp    8064649 <sidput@plt+0x16ae9>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8064649 <sidput@plt+0x16ae9>
nop
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x53986,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
cmp    $0x1,%eax
je     8064698 <sidput@plt+0x16b38>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0xc(%esi),%eax
test   %eax,%eax
je     80646a7 <sidput@plt+0x16b47>
mov    0x8(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    %eax,%ecx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x53935,%ebx
cmp    $0xffffffff,%eax
je     80646e2 <sidput@plt+0x16b82>
cmp    $0x63,%eax
jle    80646ee <sidput@plt+0x16b8e>
cmp    $0x3e8,%eax
jle    80646f8 <sidput@plt+0x16b98>
movl   $0x3e8,(%esp)
call   8081df0 <dbus_shutdown+0x3110>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x55555556,%edx
imul   %edx
sar    $0x1f,%ecx
sub    %ecx,%edx
mov    %edx,(%esp)
call   8081df0 <dbus_shutdown+0x3110>
add    $0x18,%esp
pop    %ebx
ret
jmp    8064720 <sidput@plt+0x16bc0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
mov    0x2c(%eax),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x538d0,%ebx
test   %edx,%edx
jle    8064760 <sidput@plt+0x16c00>
lea    0x1c(%eax),%eax
mov    %eax,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
subl   $0x1,0x2c(%esi)
mov    0x8(%eax),%edx
mov    %eax,%edi
mov    0x58(%esi),%eax
test   %eax,%eax
je     8064768 <sidput@plt+0x16c08>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xor    %edi,%edi
jmp    8064755 <sidput@plt+0x16bf5>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1f8e6(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1f8d9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8072920 <dbus_message_is_signal>
test   %eax,%eax
je     8064755 <sidput@plt+0x16bf5>
orb    $0x8,0x88(%esi)
jmp    8064755 <sidput@plt+0x16bf5>
jmp    80647a0 <sidput@plt+0x16c40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x53852,%ebx
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%eax
lea    0x1c(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x5381d,%ebx
mov    0x20(%eax),%edx
andb   $0xdf,0x88(%eax)
movl   $0x0,0x20(%eax)
mov    0x4(%eax),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    8064823 <sidput@plt+0x16cc3>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
mov    %esi,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    %edi,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
test   %eax,%eax
mov    %eax,%esi
jne    8064810 <sidput@plt+0x16cb0>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x537b0,%ebx
mov    0x50(%esp),%esi
mov    %esi,(%esp)
call   804d600 <strlen@plt>
lea    0x2c(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80749a0 <dbus_message_demarshal_bytes_needed+0xe80>
test   %eax,%eax
jne    8064890 <sidput@plt+0x16d30>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x5c(%esp),%eax
orb    $0x20,0x88(%edi)
mov    %ebp,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x78(%edi),%eax
mov    %eax,(%esp)
call   8074190 <dbus_message_demarshal_bytes_needed+0x670>
mov    %edi,(%esp)
mov    %eax,%esi
call   80647d0 <sidput@plt+0x16c70>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8064900 <sidput@plt+0x16da0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x536ee,%ebx
mov    %eax,0x4(%esp)
lea    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    0x5c(%esi),%eax
addl   $0x1,0x2c(%esi)
test   %eax,%eax
je     806493a <sidput@plt+0x16dda>
mov    0x60(%esi),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    0x4(%esp),%eax
mov    0x18(%eax),%eax
test   %eax,%eax
setne  %al
movzbl %al,%eax
ret
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x536a1,%ebx
test   %esi,%esi
je     8064998 <dbus_connection_has_messages_to_send+0x48>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
mov    %esi,(%esp)
call   8064940 <sidput@plt+0x16de0>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cbe0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x257,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x53613,%ebx
add    $0x18,%eax
mov    %eax,(%esp)
call   807d9b0 <dbus_watch_handle+0x1df0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x535e0,%ebx
lea    0x18(%esi),%edi
mov    %edi,(%esp)
call   807d910 <dbus_watch_handle+0x1d50>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,%ebp
call   807d7e0 <dbus_watch_handle+0x1c20>
lea    0x20(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
mov    0x30(%esi),%eax
subl   $0x1,0x28(%esi)
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806eff0 <dbus_message_set_serial+0x170>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x53583,%ebx
mov    0x38(%eax),%eax
test   %eax,%eax
je     8064aa0 <dbus_connection_has_messages_to_send+0x150>
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807ba70 <dbus_watch_set_data+0xf0>
add    $0x18,%esp
pop    %ebx
ret
nop
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x53543,%ebx
mov    0x38(%eax),%eax
test   %eax,%eax
je     8064ada <dbus_connection_has_messages_to_send+0x18a>
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807bb00 <dbus_watch_set_data+0x180>
add    $0x18,%esp
pop    %ebx
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x53513,%ebx
mov    0x38(%eax),%eax
test   %eax,%eax
je     8064b12 <dbus_connection_has_messages_to_send+0x1c2>
mov    0x28(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    0x24(%esp),%edx
mov    %edx,0x4(%esp)
call   807b6b0 <dbus_threads_init_default+0x2ac0>
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x534d3,%ebx
mov    0x3c(%eax),%eax
test   %eax,%eax
je     8064b50 <dbus_connection_has_messages_to_send+0x200>
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8078260 <dbus_timeout_set_data+0x90>
add    $0x18,%esp
pop    %ebx
ret
nop
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x53493,%ebx
mov    0x3c(%eax),%eax
test   %eax,%eax
je     8064b8a <dbus_connection_has_messages_to_send+0x23a>
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80782f0 <dbus_timeout_set_data+0x120>
add    $0x18,%esp
pop    %ebx
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x53465,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
lea    0x1c(%esi),%eax
mov    %eax,(%esp)
mov    %edi,0x4(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   806f1f0 <dbus_message_get_reply_serial>
test   %eax,%eax
jne    8064be8 <dbus_connection_has_messages_to_send+0x298>
mov    0x5c(%esi),%eax
addl   $0x1,0x2c(%esi)
test   %eax,%eax
je     8064bda <dbus_connection_has_messages_to_send+0x28a>
mov    0x60(%esi),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807c4b0 <dbus_watch_handle+0x8f0>
test   %eax,%eax
mov    %eax,%edi
je     8064bc7 <dbus_connection_has_messages_to_send+0x277>
mov    %eax,(%esp)
call   8074ba0 <dbus_message_demarshal_bytes_needed+0x1080>
test   %eax,%eax
jne    8064c20 <dbus_connection_has_messages_to_send+0x2d0>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8074bb0 <dbus_message_demarshal_bytes_needed+0x1090>
jmp    8064bc7 <dbus_connection_has_messages_to_send+0x277>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8074bd0 <dbus_message_demarshal_bytes_needed+0x10b0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8064b60 <dbus_connection_has_messages_to_send+0x210>
jmp    8064c09 <dbus_connection_has_messages_to_send+0x2b9>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x533b4,%ebx
sub    $0x10,%esp
mov    %edx,(%esp)
call   8074cc0 <dbus_message_demarshal_bytes_needed+0x11a0>
mov    %esi,(%esp)
call   8074be0 <dbus_message_demarshal_bytes_needed+0x10c0>
mov    %eax,0x4(%esp)
mov    0x50(%edi),%eax
mov    %eax,(%esp)
call   807c580 <dbus_watch_handle+0x9c0>
mov    %esi,(%esp)
call   8074ba0 <dbus_message_demarshal_bytes_needed+0x1080>
test   %eax,%eax
je     8064c94 <dbus_connection_has_messages_to_send+0x344>
mov    %esi,(%esp)
call   8074bd0 <dbus_message_demarshal_bytes_needed+0x10b0>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8064b60 <dbus_connection_has_messages_to_send+0x210>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   8074bb0 <dbus_message_demarshal_bytes_needed+0x1090>
mov    %esi,(%esp)
call   80753b0 <dbus_pending_call_free_data_slot+0x210>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x53331,%ebx
mov    0x20(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   8074b10 <dbus_message_demarshal_bytes_needed+0xff0>
mov    %esi,(%esp)
call   8074cc0 <dbus_message_demarshal_bytes_needed+0x11a0>
mov    %esi,%edx
mov    %edi,%eax
call   8064c40 <dbus_connection_has_messages_to_send+0x2f0>
mov    %esi,(%esp)
call   80755f0 <dbus_pending_call_get_data+0xa0>
mov    %esi,(%esp)
call   8075400 <dbus_pending_call_unref>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x3c,%esp
mov    0x2c(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x532df,%ebx
test   %eax,%eax
jle    8064d38 <dbus_connection_has_messages_to_send+0x3e8>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   80799b0 <dbus_threads_init_default+0xdc0>
mov    %eax,%edx
mov    $0x2,%eax
test   %edx,%edx
je     8064d2d <dbus_connection_has_messages_to_send+0x3dd>
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079770 <dbus_threads_init_default+0xb80>
mov    %eax,%ebp
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
test   %eax,%eax
je     8064d9c <dbus_connection_has_messages_to_send+0x44c>
cmp    $0x1,%ebp
jne    8064d98 <dbus_connection_has_messages_to_send+0x448>
mov    0x2c(%esi),%edx
xor    %eax,%eax
test   %edx,%edx
setle  %al
jmp    8064d2d <dbus_connection_has_messages_to_send+0x3dd>
mov    0x58(%esi),%eax
xor    %ebp,%ebp
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8064900 <sidput@plt+0x16da0>
movl   $0x0,0x58(%esi)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
jmp    8064d2d <dbus_connection_has_messages_to_send+0x3dd>
mov    %esi,(%esp)
lea    0x18(%esi),%edi
call   808faf0 <dbus_address_unescape_value+0x2af0>
mov    0x28(%esi),%eax
test   %eax,%eax
jg     8064dbf <dbus_connection_has_messages_to_send+0x46f>
jmp    8064dcb <dbus_connection_has_messages_to_send+0x47b>
mov    0x8(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8064a10 <dbus_connection_has_messages_to_send+0xc0>
mov    %edi,(%esp)
call   807d910 <dbus_watch_handle+0x1d50>
test   %eax,%eax
jne    8064db0 <dbus_connection_has_messages_to_send+0x460>
cmp    $0x1,%ebp
jne    8064d98 <dbus_connection_has_messages_to_send+0x448>
mov    0x58(%esi),%ecx
lea    0x18(%esp),%ebp
test   %ecx,%ecx
jne    8064e12 <dbus_connection_has_messages_to_send+0x4c2>
jmp    8064d6f <dbus_connection_has_messages_to_send+0x41f>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8074bb0 <dbus_message_demarshal_bytes_needed+0x1090>
mov    %ebp,(%esp)
call   807c300 <dbus_watch_handle+0x740>
mov    %edi,(%esp)
call   80753b0 <dbus_pending_call_free_data_slot+0x210>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807cbf0 <dbus_watch_handle+0x1030>
test   %eax,%eax
jle    8064d7b <dbus_connection_has_messages_to_send+0x42b>
mov    0x50(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
mov    %ebp,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
mov    %ebp,(%esp)
call   807c380 <dbus_watch_handle+0x7c0>
mov    %eax,%edi
mov    %eax,(%esp)
call   8074cc0 <dbus_message_demarshal_bytes_needed+0x11a0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8074b60 <dbus_message_demarshal_bytes_needed+0x1040>
mov    %edi,(%esp)
call   8074ba0 <dbus_message_demarshal_bytes_needed+0x1080>
test   %eax,%eax
je     8064de0 <dbus_connection_has_messages_to_send+0x490>
mov    %edi,(%esp)
call   8074bd0 <dbus_message_demarshal_bytes_needed+0x10b0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8064b60 <dbus_connection_has_messages_to_send+0x210>
jmp    8064de0 <dbus_connection_has_messages_to_send+0x490>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x53163,%ebx
mov    0x3c(%eax),%eax
test   %eax,%eax
je     8064ec2 <dbus_connection_has_messages_to_send+0x572>
mov    0x28(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    0x24(%esp),%edx
mov    %edx,0x4(%esp)
call   8078160 <dbus_type_is_fixed+0x300>
add    $0x18,%esp
pop    %ebx
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x53121,%ebx
mov    0x24(%esp),%edi
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %edi,%edx
mov    %esi,%eax
orb    $0x20,0x88(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8064c40 <dbus_connection_has_messages_to_send+0x2f0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x530e7,%ebx
sub    $0x4c,%esp
call   807b4e0 <dbus_threads_init_default+0x28f0>
test   %eax,%eax
mov    %eax,%esi
je     80651b8 <dbus_connection_has_messages_to_send+0x868>
call   8077f90 <dbus_type_is_fixed+0x130>
test   %eax,%eax
mov    %eax,%edi
je     80651b8 <dbus_connection_has_messages_to_send+0x868>
lea    -0x518f0(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     80651c2 <dbus_connection_has_messages_to_send+0x872>
movl   $0x90,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebp
je     80651c2 <dbus_connection_has_messages_to_send+0x872>
lea    0x4(%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   8078400 <dbus_timeout_get_enabled+0xa0>
mov    0x4(%ebp),%eax
test   %eax,%eax
je     8065230 <dbus_connection_has_messages_to_send+0x8e0>
lea    0x10(%ebp),%eax
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   8078460 <dbus_timeout_get_enabled+0x100>
mov    0x10(%ebp),%eax
test   %eax,%eax
je     8065230 <dbus_connection_has_messages_to_send+0x8e0>
lea    0x8(%ebp),%eax
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   8078460 <dbus_timeout_get_enabled+0x100>
mov    0x8(%ebp),%eax
test   %eax,%eax
je     8065230 <dbus_connection_has_messages_to_send+0x8e0>
lea    0xc(%ebp),%eax
mov    %eax,(%esp)
mov    %eax,0x2c(%esp)
call   80786c0 <dbus_timeout_get_enabled+0x360>
mov    0xc(%ebp),%eax
test   %eax,%eax
je     8065230 <dbus_connection_has_messages_to_send+0x8e0>
lea    0x14(%ebp),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x14(%esp)
call   80786c0 <dbus_timeout_get_enabled+0x360>
mov    0x14(%ebp),%ecx
test   %ecx,%ecx
je     8065230 <dbus_connection_has_messages_to_send+0x8e0>
lea    0x44(%ebp),%eax
mov    %eax,(%esp)
mov    %eax,0x30(%esp)
call   8078400 <dbus_timeout_get_enabled+0xa0>
mov    0x44(%ebp),%edx
test   %edx,%edx
je     8065230 <dbus_connection_has_messages_to_send+0x8e0>
lea    -0x1f8e6(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1f8d9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1df41(%ebx),%eax
mov    %eax,(%esp)
call   8071540 <dbus_message_new_signal>
test   %eax,%eax
mov    %eax,0x34(%esp)
je     8065230 <dbus_connection_has_messages_to_send+0x8e0>
mov    %eax,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
mov    0x14(%esp),%ecx
test   %eax,%eax
mov    %eax,0x38(%esp)
je     8065268 <dbus_connection_has_messages_to_send+0x918>
mov    %ecx,0x18(%esp)
call   8075640 <dbus_pending_call_get_data+0xf0>
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,0x14(%esp)
je     8065291 <dbus_connection_has_messages_to_send+0x941>
mov    %ebp,(%esp)
mov    %ecx,0x3c(%esp)
call   8074110 <dbus_message_demarshal_bytes_needed+0x5f0>
mov    0x3c(%esp),%ecx
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8065145 <dbus_connection_has_messages_to_send+0x7f5>
mov    0x830(%ebx),%eax
test   %eax,%eax
jne    80652b9 <dbus_connection_has_messages_to_send+0x969>
mov    %ebp,(%esp)
mov    %ecx,0x3c(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
mov    0x60(%esp),%eax
andb   $0xe0,0x88(%ebp)
mov    %esi,0x38(%ebp)
mov    %eax,0x34(%ebp)
mov    0x1c(%esp),%eax
mov    %edi,0x3c(%ebp)
movl   $0x0,0x40(%ebp)
movl   $0x1,0x74(%ebp)
mov    %eax,0x50(%ebp)
mov    0x14(%esp),%eax
mov    %eax,0x30(%ebp)
mov    0x18(%esp),%eax
mov    %eax,0x78(%ebp)
lea    0x350(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8c(%ebp)
lea    0x48(%ebp),%eax
mov    %eax,(%esp)
call   807beb0 <dbus_watch_handle+0x2f0>
mov    0x38(%esp),%eax
movl   $0x1,0x54(%ebp)
mov    %eax,0x58(%ebp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x60(%esp),%eax
orb    $0x20,0x88(%ebp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8079660 <dbus_threads_init_default+0xa70>
test   %eax,%eax
jne    806529e <dbus_connection_has_messages_to_send+0x94e>
mov    %ebp,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x3c(%esp),%ecx
mov    0x34(%esp),%eax
mov    %ecx,0x3c(%esp)
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    0x3c(%esp),%ecx
mov    %ecx,(%esp)
call   8078760 <dbus_timeout_get_enabled+0x400>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8078760 <dbus_timeout_get_enabled+0x400>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80784c0 <dbus_timeout_get_enabled+0x160>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8078520 <dbus_timeout_get_enabled+0x1c0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8078520 <dbus_timeout_get_enabled+0x1c0>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80784c0 <dbus_timeout_get_enabled+0x160>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
jmp    80651d2 <dbus_connection_has_messages_to_send+0x882>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x1c(%esp)
xor    %edi,%edi
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
mov    0x1c(%esp),%eax
test   %eax,%eax
je     80651e2 <dbus_connection_has_messages_to_send+0x892>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
test   %esi,%esi
je     80651ee <dbus_connection_has_messages_to_send+0x89e>
mov    %esi,(%esp)
call   807b630 <dbus_threads_init_default+0x2a40>
test   %edi,%edi
je     80651fa <dbus_connection_has_messages_to_send+0x8aa>
mov    %edi,(%esp)
call   80780e0 <dbus_type_is_fixed+0x280>
mov    0x14(%esp),%eax
test   %eax,%eax
je     806520a <dbus_connection_has_messages_to_send+0x8ba>
mov    %eax,(%esp)
call   8075680 <dbus_pending_call_get_data+0x130>
mov    0x18(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
je     8065224 <dbus_connection_has_messages_to_send+0x8d4>
mov    %edx,(%esp)
mov    %eax,0x14(%esp)
call   80744c0 <dbus_message_demarshal_bytes_needed+0x9a0>
mov    0x14(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     80651c2 <dbus_connection_has_messages_to_send+0x872>
lea    0x10(%ebp),%eax
mov    %eax,0x24(%esp)
lea    0x8(%ebp),%eax
mov    %eax,0x28(%esp)
lea    0xc(%ebp),%eax
mov    %eax,0x2c(%esp)
lea    0x44(%ebp),%eax
movl   $0x0,0x18(%esp)
lea    0x14(%ebp),%ecx
movl   $0x0,0x14(%esp)
mov    %eax,0x30(%esp)
jmp    8065165 <dbus_connection_has_messages_to_send+0x815>
mov    0x34(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
mov    0x38(%esp),%ecx
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
jmp    8065165 <dbus_connection_has_messages_to_send+0x815>
movl   $0x0,0x18(%esp)
jmp    8065145 <dbus_connection_has_messages_to_send+0x7f5>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    %ebp,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    %ebp,%eax
jmp    8065224 <dbus_connection_has_messages_to_send+0x8d4>
call   80826e0 <dbus_shutdown+0x3a00>
mov    0x3c(%esp),%ecx
jmp    80650a5 <dbus_connection_has_messages_to_send+0x755>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x52d26,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x52cf3,%ebx
mov    0x34(%eax),%eax
mov    %eax,(%esp)
call   8079e70 <dbus_threads_init_default+0x1280>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x52cc3,%ebx
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x34(%eax),%eax
mov    %eax,(%esp)
call   8079ea0 <dbus_threads_init_default+0x12b0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52c82,%ebx
test   %esi,%esi
je     80653e6 <dbus_connection_ref+0x76>
lea    0x350(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x8c(%esi)
jne    80653a8 <dbus_connection_ref+0x38>
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dda8(%ebx),%eax
movl   $0xa6d,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cc33(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xa6c,0x10(%esp)
jmp    80653c0 <dbus_connection_ref+0x50>
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52bf1,%ebx
test   %esi,%esi
je     8065450 <dbus_connection_get_is_connected+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
xor    %edi,%edi
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cc80(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xb8f,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    80654a0 <dbus_connection_get_is_authenticated>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52b51,%ebx
test   %esi,%esi
je     80654f0 <dbus_connection_get_is_authenticated+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1ccc0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xba5,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52ac1,%ebx
test   %esi,%esi
je     8065580 <dbus_connection_get_is_anonymous+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079500 <dbus_threads_init_default+0x910>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cd00(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xbc7,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52a31,%ebx
test   %esi,%esi
je     8065618 <dbus_connection_get_server_id+0x58>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079580 <dbus_threads_init_default+0x990>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cd3b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xbf4,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    806560a <dbus_connection_get_server_id+0x4a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52991,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     80656d8 <dbus_connection_can_send_type+0x78>
mov    %edi,(%esp)
call   8077c50 <dbus_type_is_valid>
xor    %edx,%edx
test   %eax,%eax
je     8065692 <dbus_connection_can_send_type+0x32>
cmp    $0x68,%edi
mov    $0x1,%dl
je     80656a0 <dbus_connection_can_send_type+0x40>
add    $0x20,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079540 <dbus_threads_init_default+0x950>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cd59(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xc12,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x528d2,%ebx
test   %esi,%esi
je     8065778 <dbus_connection_set_exit_on_disconnect+0x58>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movzbl 0x88(%esi),%eax
mov    0x34(%esp),%edx
or     $0x20,%eax
test   %edx,%edx
setne  %dl
and    $0xfffffffd,%eax
add    %edx,%edx
or     %edx,%eax
mov    %al,0x88(%esi)
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cd80(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xc3a,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52831,%ebx
test   %esi,%esi
je     8065808 <dbus_connection_preallocate_send+0x48>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
call   80645f0 <sidput@plt+0x16a90>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cdc0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xc4f,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    80657fe <dbus_connection_preallocate_send+0x3e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x527a2,%ebx
mov    0x34(%esp),%esi
test   %eax,%eax
je     80658f0 <dbus_connection_free_preallocated_send+0xa0>
test   %esi,%esi
je     8065910 <dbus_connection_free_preallocated_send+0xc0>
cmp    %eax,(%esi)
je     80658b8 <dbus_connection_free_preallocated_send+0x68>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dd74(%ebx),%eax
movl   $0xc6a,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ce00(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    0x8(%esi),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8075680 <dbus_pending_call_get_data+0x130>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xc68,0x10(%esp)
jmp    8065894 <dbus_connection_free_preallocated_send+0x44>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df25(%ebx),%eax
movl   $0xc69,0x10(%esp)
jmp    8065894 <dbus_connection_free_preallocated_send+0x44>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x526c1,%ebx
test   %esi,%esi
je     8065978 <dbus_connection_get_dispatch_status+0x48>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cfe0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x110b,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52631,%ebx
test   %esi,%esi
je     8065a38 <dbus_connection_set_watch_functions+0x78>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x44(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esi),%eax
mov    %eax,(%esp)
call   807b500 <dbus_threads_init_default+0x2910>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d020(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1334,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52571,%ebx
test   %esi,%esi
je     8065af8 <dbus_connection_set_timeout_functions+0x78>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x44(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esi),%eax
mov    %eax,(%esp)
call   8077fb0 <dbus_type_is_fixed+0x150>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d060(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1373,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x524b0,%ebx
test   %esi,%esi
je     8065ba0 <dbus_connection_set_wakeup_main_function+0x60>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x44(%esp),%eax
mov    0x60(%esi),%ebp
mov    0x64(%esi),%edi
orb    $0x20,0x88(%esi)
mov    %eax,0x5c(%esi)
mov    0x48(%esp),%eax
mov    %eax,0x60(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x64(%esi)
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
test   %edi,%edi
je     8065b98 <dbus_connection_set_wakeup_main_function+0x58>
mov    %ebp,(%esp)
call   *%edi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d0a0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1398,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52410,%ebx
test   %esi,%esi
je     8065c40 <dbus_connection_set_dispatch_status_function+0x60>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x44(%esp),%eax
mov    0x6c(%esi),%ebp
mov    0x70(%esi),%edi
orb    $0x20,0x88(%esi)
mov    %eax,0x68(%esi)
mov    0x48(%esp),%eax
mov    %eax,0x6c(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x70(%esi)
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
test   %edi,%edi
je     8065c38 <dbus_connection_set_dispatch_status_function+0x58>
mov    %ebp,(%esp)
call   *%edi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d0e0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x13c6,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52371,%ebx
test   %esi,%esi
je     8065d18 <dbus_connection_get_socket+0x98>
mov    0x34(%esi),%eax
test   %eax,%eax
je     8065cd8 <dbus_connection_get_socket+0x58>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   80796b0 <dbus_threads_init_default+0xac0>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df10(%ebx),%eax
movl   $0x140f,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d11e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x140e,0x10(%esp)
jmp    8065cf0 <dbus_connection_get_socket+0x70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x522b3,%ebx
test   %eax,%eax
je     8065db8 <dbus_connection_get_unix_fd+0x78>
mov    0x34(%eax),%edx
test   %edx,%edx
je     8065d78 <dbus_connection_get_unix_fd+0x38>
mov    0x34(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8065c80 <dbus_connection_get_socket>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df10(%ebx),%eax
movl   $0x13ef,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d103(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x13ee,0x10(%esp)
jmp    8065d90 <dbus_connection_get_unix_fd+0x50>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52210,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     8065e98 <dbus_connection_get_unix_user+0xb8>
test   %edi,%edi
je     8065e58 <dbus_connection_get_unix_user+0x78>
mov    0x4(%esi),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
jne    8065e40 <dbus_connection_get_unix_user+0x60>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079be0 <dbus_threads_init_default+0xff0>
mov    %eax,%ebp
jmp    8065e29 <dbus_connection_get_unix_user+0x49>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1def2(%ebx),%eax
movl   $0x1439,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d13c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x1438,0x10(%esp)
jmp    8065e70 <dbus_connection_get_unix_user+0x90>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52130,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     8065f78 <dbus_connection_get_unix_process_id+0xb8>
test   %edi,%edi
je     8065f38 <dbus_connection_get_unix_process_id+0x78>
mov    0x4(%esi),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
jne    8065f20 <dbus_connection_get_unix_process_id+0x60>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079c50 <dbus_threads_init_default+0x1060>
mov    %eax,%ebp
jmp    8065f09 <dbus_connection_get_unix_process_id+0x49>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dee6(%ebx),%eax
movl   $0x145d,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d160(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x145c,0x10(%esp)
jmp    8065f50 <dbus_connection_get_unix_process_id+0x90>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x52050,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     8066068 <dbus_connection_get_adt_audit_session_data+0xc8>
test   %edi,%edi
je     8066088 <dbus_connection_get_adt_audit_session_data+0xe8>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8066028 <dbus_connection_get_adt_audit_session_data+0x88>
mov    0x4(%esi),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
jne    8066008 <dbus_connection_get_adt_audit_session_data+0x68>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x48(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079cc0 <dbus_threads_init_default+0x10d0>
mov    %eax,%ebp
jmp    8065ff5 <dbus_connection_get_adt_audit_session_data+0x55>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1decd(%ebx),%eax
movl   $0x147f,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d1a0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x147d,0x10(%esp)
jmp    8066040 <dbus_connection_get_adt_audit_session_data+0xa0>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1deda(%ebx),%eax
movl   $0x147e,0x10(%esp)
jmp    8066040 <dbus_connection_get_adt_audit_session_data+0xa0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x51f42,%ebx
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
test   %esi,%esi
je     8066140 <dbus_connection_set_unix_user_function+0x90>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x2c(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x14(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079d50 <dbus_threads_init_default+0x1160>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8066136 <dbus_connection_set_unix_user_function+0x86>
mov    0x28(%esp),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d1e0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x14ad,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x51e75,%ebx
sub    $0x2c,%esp
mov    0x78(%eax),%eax
mov    %eax,(%esp)
call   8074490 <dbus_message_demarshal_bytes_needed+0x970>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8065be0 <dbus_connection_set_dispatch_status_function>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8065b40 <dbus_connection_set_wakeup_main_function>
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   80660b0 <dbus_connection_set_unix_user_function>
mov    0x38(%edi),%eax
mov    %eax,(%esp)
call   807b630 <dbus_threads_init_default+0x2a40>
mov    0x3c(%edi),%eax
movl   $0x0,0x38(%edi)
mov    %eax,(%esp)
call   80780e0 <dbus_type_is_fixed+0x280>
lea    0x48(%edi),%eax
mov    %eax,(%esp)
movl   $0x0,0x3c(%edi)
call   807c010 <dbus_watch_handle+0x450>
lea    0x40(%edi),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%esi
jne    806625a <dbus_connection_set_unix_user_function+0x1aa>
jmp    806627b <dbus_connection_set_unix_user_function+0x1cb>
lea    0x0(%esi),%esi
call   8064670 <sidput@plt+0x16b10>
test   %ebp,%ebp
movl   $0x0,0x8(%esi)
je     806627b <dbus_connection_set_unix_user_function+0x1cb>
mov    %ebp,%esi
mov    0x4(%esi),%ebp
mov    0x8(%esi),%edx
cmp    0x40(%edi),%ebp
movl   $0x0,0x4(%edx)
mov    %edx,(%esp)
jne    8066248 <dbus_connection_set_unix_user_function+0x198>
call   8064670 <sidput@plt+0x16b10>
movl   $0x0,0x8(%esi)
mov    0x1c(%esp),%esi
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x78(%edi),%eax
mov    %eax,(%esp)
call   80744c0 <dbus_message_demarshal_bytes_needed+0x9a0>
mov    0x50(%edi),%eax
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %esi,(%esp)
lea    0x18(%edi),%esi
movl   $0x0,0x50(%edi)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    -0x53ad0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %edi,0x8(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
lea    0x1c(%edi),%esi
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    -0x49690(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x30(%edi),%eax
mov    %eax,(%esp)
call   8075680 <dbus_pending_call_get_data+0x130>
mov    0x34(%edi),%eax
mov    %eax,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
mov    0x58(%edi),%eax
test   %eax,%eax
je     8066325 <dbus_connection_set_unix_user_function+0x275>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
mov    0x58(%edi),%eax
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
lea    0xc(%edi),%eax
mov    %eax,(%esp)
call   8078760 <dbus_timeout_get_enabled+0x400>
lea    0x14(%edi),%eax
mov    %eax,(%esp)
call   8078760 <dbus_timeout_get_enabled+0x400>
lea    0x10(%edi),%eax
mov    %eax,(%esp)
call   8078520 <dbus_timeout_get_enabled+0x1c0>
lea    0x8(%edi),%eax
mov    %eax,(%esp)
call   8078520 <dbus_timeout_get_enabled+0x1c0>
lea    0x44(%edi),%eax
mov    %eax,(%esp)
call   80784c0 <dbus_timeout_get_enabled+0x160>
lea    0x4(%edi),%eax
mov    %eax,(%esp)
call   80784c0 <dbus_timeout_get_enabled+0x160>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x51c76,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
cmp    $0x1,%eax
je     80663a8 <dbus_connection_set_unix_user_function+0x2f8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    8066180 <dbus_connection_set_unix_user_function+0xd0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x51c34,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80785c0 <dbus_timeout_get_enabled+0x260>
mov    0x84(%esi),%ecx
test   %ecx,%ecx
je     8066444 <dbus_connection_set_unix_user_function+0x394>
cmp    $0xffffffff,%edi
je     8066428 <dbus_connection_set_unix_user_function+0x378>
mov    0x10(%esi),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8078810 <dbus_timeout_get_enabled+0x4b0>
mov    0x84(%esi),%edx
test   %edx,%edx
je     8066444 <dbus_connection_set_unix_user_function+0x394>
xor    %edi,%edi
jmp    8066453 <dbus_connection_set_unix_user_function+0x3a3>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   80787c0 <dbus_timeout_get_enabled+0x460>
mov    0x84(%esi),%eax
test   %eax,%eax
jne    8066428 <dbus_connection_set_unix_user_function+0x378>
movl   $0x1,0x84(%esi)
00
mov    $0x1,%edi
mov    0x10(%esi),%edx
mov    %edx,(%esp)
call   8078640 <dbus_timeout_get_enabled+0x2e0>
mov    0x4(%esi),%edx
mov    %edx,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
mov    %esi,(%esp)
call   8066380 <dbus_connection_set_unix_user_function+0x2d0>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    8066490 <dbus_connection_set_unix_user_function+0x3e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x38(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x51b5c,%ebx
mov    0x34(%esp),%ebp
mov    0x28(%esi),%edx
mov    %edi,%eax
and    $0xfffffffe,%eax
test   %edx,%edx
cmove  %eax,%edi
xor    %edx,%edx
test   $0x4,%edi
mov    %esi,%eax
cmovne 0x3c(%esp),%edx
call   80663c0 <dbus_connection_set_unix_user_function+0x310>
test   %eax,%eax
je     806655f <dbus_connection_set_unix_user_function+0x4af>
test   %ebp,%ebp
je     806651d <dbus_connection_set_unix_user_function+0x46d>
mov    %ebp,(%esp)
call   8074cf0 <dbus_message_demarshal_bytes_needed+0x11d0>
test   %eax,%eax
jne    8066534 <dbus_connection_set_unix_user_function+0x484>
mov    %ebp,(%esp)
call   8074be0 <dbus_message_demarshal_bytes_needed+0x10c0>
mov    %eax,0xc(%esp)
lea    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebp
test   %ebp,%ebp
je     806651d <dbus_connection_set_unix_user_function+0x46d>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   806f1f0 <dbus_message_get_reply_serial>
cmp    %eax,0xc(%esp)
je     8066534 <dbus_connection_set_unix_user_function+0x484>
mov    0x4(%ebp),%ebp
cmp    0x1c(%esi),%ebp
jne    8066500 <dbus_connection_set_unix_user_function+0x450>
mov    0x3c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079710 <dbus_threads_init_default+0xb20>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80785c0 <dbus_timeout_get_enabled+0x260>
mov    0x14(%esi),%eax
movl   $0x0,0x84(%esi)
00
mov    %eax,(%esp)
call   8078870 <dbus_timeout_get_enabled+0x510>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   8078640 <dbus_timeout_get_enabled+0x2e0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    0x4(%edx),%eax
mov    0x30(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x51a79,%ebx
mov    %edi,0x8(%eax)
mov    0x4(%edx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
mov    0x8(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806ef20 <dbus_message_set_serial+0xa0>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,(%esp)
call   806f720 <dbus_message_ref>
addl   $0x1,0x28(%esi)
mov    %edi,(%esp)
call   806f0a0 <dbus_message_get_serial>
test   %eax,%eax
jne    8066648 <dbus_connection_set_unix_user_function+0x598>
mov    0x54(%esi),%ebp
mov    $0x1,%edx
mov    %edi,(%esp)
mov    %ebp,%ecx
add    $0x1,%ecx
cmovne %ecx,%edx
mov    %edx,0x54(%esi)
mov    %ebp,0x4(%esp)
call   806ee80 <dbus_message_set_serial>
mov    0x34(%esp),%ecx
test   %ecx,%ecx
je     80665fe <dbus_connection_set_unix_user_function+0x54e>
mov    0x34(%esp),%eax
mov    %ebp,(%eax)
mov    %edi,(%esp)
call   806f060 <dbus_message_lock>
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8066490 <dbus_connection_set_unix_user_function+0x3e0>
mov    0x28(%esi),%eax
test   %eax,%eax
jle    806663c <dbus_connection_set_unix_user_function+0x58c>
mov    0x5c(%esi),%eax
test   %eax,%eax
je     806663c <dbus_connection_set_unix_user_function+0x58c>
mov    0x60(%esi),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
test   %edx,%edx
je     80665fe <dbus_connection_set_unix_user_function+0x54e>
mov    %edi,(%esp)
call   806f0a0 <dbus_message_get_serial>
mov    0x34(%esp),%ecx
mov    %eax,(%ecx)
jmp    80665fe <dbus_connection_set_unix_user_function+0x54e>
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
sub    $0x14,%esp
call   80645f0 <sidput@plt+0x16a90>
test   %eax,%eax
je     8066698 <dbus_connection_set_unix_user_function+0x5e8>
mov    %edi,(%esp)
mov    %eax,%edx
mov    %esi,%eax
movl   $0x0,0x4(%esp)
call   8066570 <dbus_connection_set_unix_user_function+0x4c0>
add    $0x14,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
ret
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x28(%eax),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x51951,%ebx
test   %edx,%edx
jg     80666e7 <dbus_connection_set_unix_user_function+0x637>
jmp    80666f6 <dbus_connection_set_unix_user_function+0x646>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0xc(%esp)
movl   $0x7,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8066490 <dbus_connection_set_unix_user_function+0x3e0>
mov    0x28(%esi),%eax
test   %eax,%eax
jle    80666f6 <dbus_connection_set_unix_user_function+0x646>
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
test   %eax,%eax
jne    80666c0 <dbus_connection_set_unix_user_function+0x610>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    8064d10 <dbus_connection_has_messages_to_send+0x3c0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x518e1,%ebx
test   %edi,%edi
je     8066769 <dbus_connection_set_unix_user_function+0x6b9>
mov    %edi,(%esp)
call   8074c30 <dbus_message_demarshal_bytes_needed+0x1110>
mov    %edi,(%esp)
mov    %eax,%esi
call   8074ba0 <dbus_message_demarshal_bytes_needed+0x1080>
test   %eax,%eax
jne    8066770 <dbus_connection_set_unix_user_function+0x6c0>
mov    %esi,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    %edi,(%esp)
call   80753b0 <dbus_pending_call_free_data_slot+0x210>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
mov    %esi,(%esp)
call   8066380 <dbus_connection_set_unix_user_function+0x2d0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %edi,(%esp)
call   8074bd0 <dbus_message_demarshal_bytes_needed+0x10b0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8064b60 <dbus_connection_has_messages_to_send+0x210>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8074bb0 <dbus_message_demarshal_bytes_needed+0x1090>
jmp    806673f <dbus_connection_set_unix_user_function+0x68f>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x51857,%ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80785c0 <dbus_timeout_get_enabled+0x260>
mov    0x80(%esi),%edx
test   %edx,%edx
je     80667f4 <dbus_connection_set_unix_user_function+0x744>
nop
mov    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   80787c0 <dbus_timeout_get_enabled+0x460>
mov    0x80(%esi),%eax
test   %eax,%eax
jne    80667d8 <dbus_connection_set_unix_user_function+0x728>
mov    0x8(%esi),%eax
movl   $0x1,0x80(%esi)
00
mov    %eax,(%esp)
call   8078640 <dbus_timeout_get_enabled+0x2e0>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
mov    %esi,(%esp)
call   8066380 <dbus_connection_set_unix_user_function+0x2d0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x517c1,%ebx
test   %esi,%esi
je     80668e0 <dbus_connection_borrow_message+0xb0>
mov    %esi,(%esp)
xor    %edi,%edi
call   8065930 <dbus_connection_get_dispatch_status>
test   %eax,%eax
jne    8066897 <dbus_connection_borrow_message+0x67>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
call   80667a0 <dbus_connection_set_unix_user_function+0x6f0>
lea    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807d9d0 <dbus_watch_handle+0x1e10>
mov    %eax,%edi
mov    %eax,0x24(%esi)
mov    0x58(%esi),%eax
test   %eax,%eax
je     80668a0 <dbus_connection_borrow_message+0x70>
test   %edi,%edi
je     80668d0 <dbus_connection_borrow_message+0xa0>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1f8e6(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1f8d9(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8072920 <dbus_message_is_signal>
test   %eax,%eax
je     806688b <dbus_connection_borrow_message+0x5b>
orb    $0x8,0x88(%esi)
jmp    806688b <dbus_connection_borrow_message+0x5b>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
call   8064570 <sidput@plt+0x16a10>
jmp    806688f <dbus_connection_borrow_message+0x5f>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
xor    %edi,%edi
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cf58(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xefd,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    8066897 <dbus_connection_borrow_message+0x67>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x516d2,%ebx
test   %esi,%esi
je     80669d0 <dbus_connection_unref+0xb0>
lea    0x350(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x8c(%esi)
je     8066988 <dbus_connection_unref+0x68>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dda8(%ebx),%eax
movl   $0xaf4,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cc49(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
cmp    $0x1,%eax
jne    8066982 <dbus_connection_unref+0x62>
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
test   %eax,%eax
je     80669f0 <dbus_connection_unref+0xd0>
testb  $0x1,0x88(%esi)
lea    -0x1dd4c(%ebx),%eax
lea    -0x1dcbc(%ebx),%edx
cmove  %edx,%eax
mov    %eax,0x4(%esp)
lea    -0x1dc4c(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    8066982 <dbus_connection_unref+0x62>
xchg   %ax,%ax
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xaf3,0x10(%esp)
jmp    8066964 <dbus_connection_unref+0x44>
lea    0x0(%esi),%esi
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    8066180 <dbus_connection_set_unix_user_function+0xd0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x515f3,%ebx
sub    $0x2c,%esp
mov    %eax,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    0x6c(%ebp),%eax
cmp    %esi,0x74(%ebp)
mov    0x68(%ebp),%edi
mov    %esi,0x74(%ebp)
mov    %eax,0x1c(%esp)
movzbl 0x88(%ebp),%eax
setne  0x1b(%esp)
mov    %eax,%edx
and    $0x18,%edx
cmp    $0x8,%dl
je     8066a90 <dbus_connection_unref+0x170>
mov    %ebp,(%esp)
call   80647d0 <sidput@plt+0x16c70>
cmpb   $0x0,0x1b(%esp)
jne    8066a68 <dbus_connection_unref+0x148>
mov    %ebp,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     8066a53 <dbus_connection_unref+0x133>
mov    0x1c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   *%edi
mov    %ebp,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
or     $0x10,%eax
test   $0x1,%al
mov    %al,0x88(%ebp)
jne    8066ab8 <dbus_connection_unref+0x198>
test   $0x2,%al
je     8066a44 <dbus_connection_unref+0x124>
mov    %ebp,(%esp)
call   80647d0 <sidput@plt+0x16c70>
movl   $0x1,(%esp)
call   8081e80 <dbus_shutdown+0x31a0>
lea    0x0(%esi),%esi
lea    0x814(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x7c(%ebp),%eax
test   %eax,%eax
je     8066b20 <dbus_connection_unref+0x200>
mov    %eax,0x4(%esp)
mov    0x82c(%ebx),%eax
mov    %eax,(%esp)
call   807c530 <dbus_watch_handle+0x970>
mov    0x7c(%ebp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,0x7c(%ebp)
lea    0x814(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %ebp,(%esp)
call   8066380 <dbus_connection_set_unix_user_function+0x2d0>
movzbl 0x88(%ebp),%eax
test   $0x2,%al
je     8066a44 <dbus_connection_unref+0x124>
jmp    8066aa1 <dbus_connection_unref+0x181>
lea    0x0(%esi,%eiz,1),%esi
lea    0x828(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
jmp    8066af3 <dbus_connection_unref+0x1d3>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x514b1,%ebx
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    $0x1,%edx
mov    %esi,%eax
orb    $0x20,0x88(%esi)
call   80663c0 <dbus_connection_set_unix_user_function+0x310>
test   %eax,%eax
je     8066bd8 <dbus_connection_unref+0x2b8>
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   80795c0 <dbus_threads_init_default+0x9d0>
mov    %eax,%edi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80785c0 <dbus_timeout_get_enabled+0x260>
mov    0x14(%esi),%eax
movl   $0x0,0x84(%esi)
00
mov    %eax,(%esp)
call   8078870 <dbus_timeout_get_enabled+0x510>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   8078640 <dbus_timeout_get_enabled+0x2e0>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
mov    0x4c(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x513fc,%ebx
mov    0x44(%esp),%esi
mov    0x48(%esp),%ebp
test   %eax,%eax
mov    %ecx,0x1c(%esp)
je     8066d60 <dbus_connection_send_preallocated+0x170>
test   %esi,%esi
je     8066d80 <dbus_connection_send_preallocated+0x190>
test   %ebp,%ebp
je     8066da0 <dbus_connection_send_preallocated+0x1b0>
mov    (%esi),%edi
cmp    %eax,%edi
je     8066c78 <dbus_connection_send_preallocated+0x88>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dba0(%ebx),%eax
movl   $0xc87,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ce40(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   806f7e0 <dbus_message_get_type>
cmp    $0x1,%eax
je     8066cf0 <dbus_connection_send_preallocated+0x100>
mov    %ebp,(%esp)
call   806f7e0 <dbus_message_get_type>
cmp    $0x4,%eax
je     8066d20 <dbus_connection_send_preallocated+0x130>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%edi),%eax
orb    $0x20,0x88(%edi)
mov    %eax,(%esp)
call   8079540 <dbus_threads_init_default+0x950>
test   %eax,%eax
jne    8066cc2 <dbus_connection_send_preallocated+0xd2>
mov    0x70(%ebp),%eax
test   %eax,%eax
jne    8066dc0 <dbus_connection_send_preallocated+0x1d0>
mov    0x1c(%esp),%eax
mov    %esi,%edx
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edi,%eax
call   8066570 <dbus_connection_set_unix_user_function+0x4c0>
mov    %edi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
mov    %eax,%edx
mov    %edi,%eax
pop    %edi
pop    %ebp
jmp    8066a00 <dbus_connection_unref+0xe0>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   8071e00 <dbus_message_get_member>
test   %eax,%eax
jne    8066c85 <dbus_connection_send_preallocated+0x95>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1db78(%ebx),%eax
movl   $0xc89,0x10(%esp)
jmp    8066c4c <dbus_connection_send_preallocated+0x5c>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   8071c30 <dbus_message_get_interface>
test   %eax,%eax
je     8066d3c <dbus_connection_send_preallocated+0x14c>
mov    %ebp,(%esp)
call   8071e00 <dbus_message_get_member>
test   %eax,%eax
jne    8066c96 <dbus_connection_send_preallocated+0xa6>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1db08(%ebx),%eax
movl   $0xc8c,0x10(%esp)
jmp    8066c4c <dbus_connection_send_preallocated+0x5c>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xc84,0x10(%esp)
jmp    8066c4c <dbus_connection_send_preallocated+0x5c>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df25(%ebx),%eax
movl   $0xc85,0x10(%esp)
jmp    8066c4c <dbus_connection_send_preallocated+0x5c>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xc86,0x10(%esp)
jmp    8066c4c <dbus_connection_send_preallocated+0x5c>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
jmp    8066c6a <dbus_connection_send_preallocated+0x7a>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x51225,%ebx
sub    $0x2c,%esp
mov    %edx,(%esp)
mov    %edx,0x18(%esp)
call   8074be0 <dbus_message_demarshal_bytes_needed+0x10c0>
mov    %eax,0x14(%esp)
lea    0x1c(%edi),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebp
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     8066e25 <dbus_connection_send_preallocated+0x235>
mov    0x8(%ebp),%esi
mov    %esi,(%esp)
call   806f1f0 <dbus_message_get_reply_serial>
cmp    %eax,0x14(%esp)
je     8066e30 <dbus_connection_send_preallocated+0x240>
mov    0x4(%ebp),%ebp
cmp    0x1c(%edi),%ebp
jne    8066e08 <dbus_connection_send_preallocated+0x218>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
subl   $0x1,0x2c(%edi)
test   %esi,%esi
je     8066e25 <dbus_connection_send_preallocated+0x235>
mov    0x18(%esp),%ebp
mov    %edi,%eax
mov    %esi,(%esp)
mov    %ebp,%edx
call   8064cc0 <dbus_connection_has_messages_to_send+0x370>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %edi,%eax
orb    $0x20,0x88(%edi)
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %edi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
mov    %ebp,(%esp)
call   8075400 <dbus_pending_call_unref>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x51154,%ebx
mov    0x90(%esp),%edi
mov    %edi,(%esp)
call   8074f20 <dbus_pending_call_get_completed>
test   %eax,%eax
je     8066ed0 <dbus_connection_send_preallocated+0x2e0>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   8074d90 <dbus_pending_call_ref>
mov    %edi,(%esp)
call   8074c00 <dbus_message_demarshal_bytes_needed+0x10e0>
mov    %eax,%esi
call   80666a0 <dbus_connection_set_unix_user_function+0x5f0>
mov    %edi,(%esp)
call   8074be0 <dbus_message_demarshal_bytes_needed+0x10c0>
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   8074bd0 <dbus_message_demarshal_bytes_needed+0x10b0>
mov    %eax,%ebp
mov    %eax,0x14(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
test   %ebp,%ebp
movl   $0xffffffff,0x10(%esp)
je     8066f2d <dbus_connection_send_preallocated+0x33d>
mov    %ebp,(%esp)
call   80781b0 <dbus_timeout_get_interval>
mov    %eax,0x10(%esp)
mov    %edi,%edx
mov    %esi,%eax
call   8066dd0 <dbus_connection_send_preallocated+0x1e0>
test   %eax,%eax
jne    8066ec5 <dbus_connection_send_preallocated+0x2d5>
mov    0x10(%esp),%eax
movl   $0x6,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8066490 <dbus_connection_set_unix_user_function+0x3e0>
lea    0x30(%esp),%eax
mov    %eax,0x18(%esp)
mov    %edi,0x90(%esp)
lea    0x0(%esi),%esi
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edi
mov    0x90(%esp),%eax
mov    %eax,(%esp)
call   8074cf0 <dbus_message_demarshal_bytes_needed+0x11d0>
test   %eax,%eax
jne    80670d0 <dbus_connection_send_preallocated+0x4e0>
test   %edi,%edi
jne    8066fa2 <dbus_connection_send_preallocated+0x3b2>
mov    0x90(%esp),%edx
mov    %esi,%eax
call   8066dd0 <dbus_connection_send_preallocated+0x1e0>
test   %eax,%eax
jne    8066ec5 <dbus_connection_send_preallocated+0x2d5>
mov    0x18(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
mov    0x30(%esp),%ecx
mov    $0x10624dd3,%edx
sub    0x28(%esp),%ecx
mov    0x2c(%esp),%ebp
sub    0x24(%esp),%ebp
mov    %ecx,%eax
imul   %edx
mov    0x34(%esi),%eax
imul   $0x3e8,%ebp,%ebp
sar    $0x1f,%ecx
sar    $0x6,%edx
sub    %ecx,%edx
mov    %eax,(%esp)
add    %edx,%ebp
call   8079230 <dbus_threads_init_default+0x640>
test   %eax,%eax
je     80670f0 <dbus_connection_send_preallocated+0x500>
mov    0x58(%esi),%edx
test   %edx,%edx
je     8067088 <dbus_connection_send_preallocated+0x498>
mov    0x14(%esp),%eax
test   %eax,%eax
je     8067058 <dbus_connection_send_preallocated+0x468>
mov    0x24(%esp),%eax
cmp    %eax,0x2c(%esp)
jl     8067088 <dbus_connection_send_preallocated+0x498>
cmp    %ebp,0x10(%esp)
jle    8067088 <dbus_connection_send_preallocated+0x498>
cmp    $0x2,%edi
je     8067048 <dbus_connection_send_preallocated+0x458>
mov    0x10(%esp),%eax
movl   $0x6,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
sub    %ebp,%eax
mov    %eax,0xc(%esp)
call   8066490 <dbus_connection_set_unix_user_function+0x3e0>
jmp    8066f68 <dbus_connection_send_preallocated+0x378>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esp),%eax
sub    %ebp,%eax
call   80646c0 <sidput@plt+0x16b60>
jmp    8066f68 <dbus_connection_send_preallocated+0x378>
cmp    $0x2,%edi
je     8067048 <dbus_connection_send_preallocated+0x458>
mov    0x10(%esp),%eax
movl   $0x6,0x8(%esp)
mov    %esi,(%esp)
sub    %ebp,%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %eax,0x4(%esp)
call   8066490 <dbus_connection_set_unix_user_function+0x3e0>
jmp    8066f68 <dbus_connection_send_preallocated+0x378>
nop
mov    0x90(%esp),%edi
mov    %esi,%eax
movl   $0x0,(%esp)
mov    %edi,%edx
call   8064cc0 <dbus_connection_has_messages_to_send+0x370>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
mov    %edi,(%esp)
call   8075400 <dbus_pending_call_unref>
jmp    8066ec5 <dbus_connection_send_preallocated+0x2d5>
xchg   %ax,%ax
mov    %edi,%edx
mov    0x90(%esp),%edi
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
mov    %edi,(%esp)
call   8075400 <dbus_pending_call_unref>
jmp    8066ec5 <dbus_connection_send_preallocated+0x2d5>
lea    0x0(%esi),%esi
lea    -0x1da6c(%ebx),%eax
mov    0x90(%esp),%edi
movl   $0x3,(%esp)
mov    %eax,0x34(%esp)
call   806f280 <dbus_message_new>
test   %eax,%eax
mov    %eax,%ebp
je     8067189 <dbus_connection_send_preallocated+0x599>
lea    -0x1da34(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8071f70 <dbus_message_set_error_name>
test   %eax,%eax
je     80671a2 <dbus_connection_send_preallocated+0x5b2>
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   80714a0 <dbus_message_set_no_reply>
mov    0x1c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   806f110 <dbus_message_set_reply_serial>
test   %eax,%eax
je     80671a2 <dbus_connection_send_preallocated+0x5b2>
mov    0x34(%esp),%ecx
test   %ecx,%ecx
je     8067189 <dbus_connection_send_preallocated+0x599>
lea    0x38(%esp),%edx
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x10(%esp)
call   8070660 <dbus_message_iter_init_append>
mov    0x10(%esp),%edx
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %edx,(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
je     80671a2 <dbus_connection_send_preallocated+0x5b2>
mov    %ebp,(%esp)
mov    %edi,%edx
mov    %esi,%eax
call   8064cc0 <dbus_connection_has_messages_to_send+0x370>
mov    %edi,(%esp)
call   8075400 <dbus_pending_call_unref>
jmp    8066ec5 <dbus_connection_send_preallocated+0x2d5>
mov    %ebp,(%esp)
xor    %ebp,%ebp
call   806e970 <dbus_message_unref>
jmp    8067189 <dbus_connection_send_preallocated+0x599>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x50e40,%ebx
mov    0x44(%esp),%edi
mov    0x4c(%esp),%ebp
test   %esi,%esi
je     80673e0 <dbus_connection_send_with_reply+0x230>
test   %edi,%edi
je     8067410 <dbus_connection_send_with_reply+0x260>
cmp    $0xffffffff,%ebp
jl     80673a0 <dbus_connection_send_with_reply+0x1f0>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
je     80671f9 <dbus_connection_send_with_reply+0x49>
mov    0x48(%esp),%eax
movl   $0x0,(%eax)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079540 <dbus_threads_init_default+0x950>
test   %eax,%eax
jne    8067225 <dbus_connection_send_with_reply+0x75>
mov    0x70(%edi),%edx
test   %edx,%edx
jne    8067348 <dbus_connection_send_with_reply+0x198>
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
test   %eax,%eax
je     8067348 <dbus_connection_send_with_reply+0x198>
lea    -0x4fb30(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8075240 <dbus_pending_call_free_data_slot+0xa0>
test   %eax,%eax
mov    %eax,%ebp
je     8067400 <dbus_connection_send_with_reply+0x250>
mov    %edi,(%esp)
call   806f0a0 <dbus_message_get_serial>
test   %eax,%eax
jne    806728b <dbus_connection_send_with_reply+0xdb>
mov    0x54(%esi),%eax
mov    $0x1,%edx
mov    %eax,%ecx
add    $0x1,%ecx
cmovne %ecx,%edx
mov    %edx,0x54(%esi)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x18(%esp)
call   806ee80 <dbus_message_set_serial>
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   8074c40 <dbus_message_demarshal_bytes_needed+0x1120>
test   %eax,%eax
je     8067380 <dbus_connection_send_with_reply+0x1d0>
mov    %ebp,(%esp)
call   8074be0 <dbus_message_demarshal_bytes_needed+0x10c0>
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   8074bd0 <dbus_message_demarshal_bytes_needed+0x10b0>
test   %eax,%eax
je     8067430 <dbus_connection_send_with_reply+0x280>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   8064b20 <dbus_connection_has_messages_to_send+0x1d0>
test   %eax,%eax
je     8067380 <dbus_connection_send_with_reply+0x1d0>
mov    0x1c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807c620 <dbus_watch_handle+0xa60>
mov    0x18(%esp),%edx
test   %eax,%eax
je     8067360 <dbus_connection_send_with_reply+0x1b0>
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   8074bb0 <dbus_message_demarshal_bytes_needed+0x1090>
mov    %ebp,(%esp)
call   8074cc0 <dbus_message_demarshal_bytes_needed+0x11a0>
mov    %edi,%edx
mov    %esi,%eax
call   8066660 <dbus_connection_set_unix_user_function+0x5b0>
test   %eax,%eax
je     8067458 <dbus_connection_send_with_reply+0x2a8>
mov    0x48(%esp),%eax
test   %eax,%eax
je     806746a <dbus_connection_send_with_reply+0x2ba>
mov    0x48(%esp),%eax
mov    %ebp,(%eax)
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
mov    $0x1,%eax
jmp    8067355 <dbus_connection_send_with_reply+0x1a5>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   8064b60 <dbus_connection_has_messages_to_send+0x210>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8074bb0 <dbus_message_demarshal_bytes_needed+0x1090>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    %ebp,(%esp)
call   8075400 <dbus_pending_call_unref>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1da0c(%ebx),%eax
movl   $0xd40,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ce80(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xd3e,0x10(%esp)
jmp    80673b8 <dbus_connection_send_with_reply+0x208>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
xor    %eax,%eax
jmp    8067355 <dbus_connection_send_with_reply+0x1a5>
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xd3f,0x10(%esp)
jmp    80673b8 <dbus_connection_send_with_reply+0x208>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807c620 <dbus_watch_handle+0xa60>
test   %eax,%eax
jne    8067306 <dbus_connection_send_with_reply+0x156>
jmp    8067380 <dbus_connection_send_with_reply+0x1d0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%edx
mov    %esi,%eax
lea    0x0(%esi,%eiz,1),%esi
call   8064c40 <dbus_connection_has_messages_to_send+0x2f0>
jmp    8067388 <dbus_connection_send_with_reply+0x1d8>
mov    %ebp,(%esp)
call   8074be0 <dbus_message_demarshal_bytes_needed+0x10c0>
mov    %eax,0x4(%esp)
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807c580 <dbus_watch_handle+0x9c0>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
mov    %ebp,(%esp)
call   8075400 <dbus_pending_call_unref>
mov    $0x1,%eax
jmp    8067355 <dbus_connection_send_with_reply+0x1a5>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x50b40,%ebx
mov    0x54(%esp),%edi
mov    0x5c(%esp),%esi
test   %ebp,%ebp
je     806768d <dbus_connection_send_with_reply_and_block+0x1dd>
test   %edi,%edi
je     80676aa <dbus_connection_send_with_reply_and_block+0x1fa>
cmpl   $0xffffffff,0x58(%esp)
jl     8067670 <dbus_connection_send_with_reply_and_block+0x1c0>
test   %esi,%esi
je     80674fd <dbus_connection_send_with_reply_and_block+0x4d>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    80675d8 <dbus_connection_send_with_reply_and_block+0x128>
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%ebp),%eax
orb    $0x20,0x88(%ebp)
mov    %eax,(%esp)
call   8079540 <dbus_threads_init_default+0x950>
test   %eax,%eax
jne    8067529 <dbus_connection_send_with_reply_and_block+0x79>
mov    0x70(%edi),%eax
test   %eax,%eax
jne    8067618 <dbus_connection_send_with_reply_and_block+0x168>
mov    %ebp,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x58(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
call   80671b0 <dbus_connection_send_with_reply>
test   %eax,%eax
je     80675a0 <dbus_connection_send_with_reply_and_block+0xf0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8067648 <dbus_connection_send_with_reply_and_block+0x198>
mov    %eax,(%esp)
call   80750b0 <dbus_pending_call_block>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8074fb0 <dbus_pending_call_steal_reply>
mov    %eax,%edi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8075400 <dbus_pending_call_unref>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8072cd0 <dbus_set_error_from_message>
test   %eax,%eax
jne    80675c8 <dbus_connection_send_with_reply_and_block+0x118>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x34c(%ebx),%eax
xor    %edi,%edi
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
jmp    806758f <dbus_connection_send_with_reply_and_block+0xdf>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
xor    %edi,%edi
call   806e970 <dbus_message_unref>
jmp    806758f <dbus_connection_send_with_reply_and_block+0xdf>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0xdc8,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cec0(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    806758f <dbus_connection_send_with_reply_and_block+0xdf>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
xor    %edi,%edi
call   80647d0 <sidput@plt+0x16c70>
lea    -0x1d9a4(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
jmp    806758f <dbus_connection_send_with_reply_and_block+0xdf>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1deab(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x8(%esp)
lea    -0x1da34(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806b100 <dbus_set_error>
jmp    806758f <dbus_connection_send_with_reply_and_block+0xdf>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1da0c(%ebx),%eax
movl   $0xdc7,0x10(%esp)
jmp    80675f0 <dbus_connection_send_with_reply_and_block+0x140>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xdc5,0x10(%esp)
jmp    80675f0 <dbus_connection_send_with_reply_and_block+0x140>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cec0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xdc6,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    806758f <dbus_connection_send_with_reply_and_block+0xdf>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x50902,%ebx
test   %esi,%esi
je     8067730 <dbus_connection_flush+0x40>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
call   80666a0 <dbus_connection_set_unix_user_function+0x5f0>
add    $0x24,%esp
pop    %ebx
mov    %eax,%edx
mov    %esi,%eax
pop    %esi
jmp    8066a00 <dbus_connection_unref+0xe0>
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cedc(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xe30,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x50882,%ebx
mov    0x34(%esp),%eax
test   %esi,%esi
je     8067840 <dbus_connection_return_message+0xd0>
test   %eax,%eax
je     8067860 <dbus_connection_return_message+0xf0>
cmp    %eax,0x24(%esi)
je     80677e0 <dbus_connection_return_message+0x70>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d970(%ebx),%eax
movl   $0xf32,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cf78(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x80(%esi),%eax
test   %eax,%eax
je     8067820 <dbus_connection_return_message+0xb0>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
movl   $0x0,0x24(%esi)
call   8064570 <sidput@plt+0x16a10>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
add    $0x24,%esp
pop    %ebx
mov    %eax,%edx
mov    %esi,%eax
pop    %esi
jmp    8066a00 <dbus_connection_unref+0xe0>
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de96(%ebx),%eax
movl   $0xf33,0x10(%esp)
jmp    80677b5 <dbus_connection_return_message+0x45>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xf30,0x10(%esp)
jmp    80677b5 <dbus_connection_return_message+0x45>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xf31,0x10(%esp)
jmp    80677b5 <dbus_connection_return_message+0x45>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x50772,%ebx
mov    0x34(%esp),%eax
test   %esi,%esi
je     8067960 <dbus_connection_steal_borrowed_message+0xe0>
test   %eax,%eax
je     8067980 <dbus_connection_steal_borrowed_message+0x100>
cmp    %eax,0x24(%esi)
je     80678f0 <dbus_connection_steal_borrowed_message+0x70>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d970(%ebx),%eax
movl   $0xf55,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cfa0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x80(%esi),%eax
test   %eax,%eax
je     8067940 <dbus_connection_steal_borrowed_message+0xc0>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x1c(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
mov    %esi,%eax
subl   $0x1,0x2c(%esi)
movl   $0x0,0x24(%esi)
call   8064570 <sidput@plt+0x16a10>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
add    $0x24,%esp
pop    %ebx
mov    %eax,%edx
mov    %esi,%eax
pop    %esi
jmp    8066a00 <dbus_connection_unref+0xe0>
xchg   %ax,%ax
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de96(%ebx),%eax
movl   $0xf56,0x10(%esp)
jmp    80678c5 <dbus_connection_steal_borrowed_message+0x45>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xf53,0x10(%esp)
jmp    80678c5 <dbus_connection_steal_borrowed_message+0x45>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xf54,0x10(%esp)
jmp    80678c5 <dbus_connection_steal_borrowed_message+0x45>
lea    0x0(%esi),%esi
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x50653,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8065930 <dbus_connection_get_dispatch_status>
test   %eax,%eax
jne    8067a09 <dbus_connection_pop_message+0x69>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
call   80667a0 <dbus_connection_set_unix_user_function+0x6f0>
mov    %esi,%eax
call   8064720 <sidput@plt+0x16bc0>
test   %eax,%eax
je     80679f2 <dbus_connection_pop_message+0x52>
mov    0x8(%eax),%edi
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    %esi,%eax
call   8064570 <sidput@plt+0x16a10>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x505d6,%ebx
mov    0x20(%esp),%esi
mov    %esi,%eax
call   80645f0 <sidput@plt+0x16a90>
test   %eax,%eax
je     8067a78 <dbus_connection_pop_message+0xd8>
mov    0x28(%esp),%edx
mov    %edx,0x4(%esp)
mov    0x24(%esp),%edx
mov    %edx,(%esp)
mov    %eax,%edx
mov    %esi,%eax
call   8066570 <dbus_connection_set_unix_user_function+0x4c0>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x50561,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8067b50 <dbus_connection_send+0xc0>
test   %edi,%edi
je     8067b10 <dbus_connection_send+0x80>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079540 <dbus_threads_init_default+0x950>
test   %eax,%eax
jne    8067add <dbus_connection_send+0x4d>
mov    0x70(%edi),%eax
test   %eax,%eax
jne    8067af8 <dbus_connection_send+0x68>
mov    0x38(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8067a20 <dbus_connection_pop_message+0x80>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xcd9,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ce60(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xcd8,0x10(%esp)
jmp    8067b28 <dbus_connection_send+0x98>
lea    0x0(%esi),%esi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x50487,%ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079140 <dbus_threads_init_default+0x550>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x50432,%ebx
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    8067b70 <dbus_connection_send+0xe0>
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x50402,%ebx
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
mov    %esi,(%esp)
call   8081c50 <dbus_shutdown+0x2f70>
cmp    $0x1,%eax
je     8067c38 <dbus_connection_send+0x1a8>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    8067b70 <dbus_connection_send+0xe0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x503a2,%ebx
test   %esi,%esi
je     8067d08 <dbus_connection_close+0xb8>
lea    0x350(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x8c(%esi)
je     8067cb8 <dbus_connection_close+0x68>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dda8(%ebx),%eax
movl   $0xb65,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cc5f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movzbl 0x88(%esi),%eax
or     $0x20,%eax
test   $0x1,%al
mov    %al,0x88(%esi)
jne    8067ce8 <dbus_connection_close+0x98>
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    8067b70 <dbus_connection_send+0xe0>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
lea    -0x1d948(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xb64,0x10(%esp)
jmp    8067c94 <dbus_connection_close+0x44>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x6c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x502c2,%ebx
mov    0x80(%esp),%ecx
lea    0x3c(%esp),%edx
mov    %edx,0x8(%esp)
lea    0x38(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x58(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x4c(%esp)
movb   $0x1,0x48(%esp)
movl   $0x0,0x50(%esp)
movl   $0x0,0x54(%esp)
movl   $0x0,0x5c(%esp)
movb   $0x1,0x58(%esp)
call   808c9d0 <dbus_parse_address>
test   %eax,%eax
je     8068168 <dbus_connection_close+0x518>
mov    0x3c(%esp),%eax
lea    0x50(%esp),%ebp
test   %eax,%eax
jle    8067f71 <dbus_connection_close+0x321>
lea    0x50(%esp),%ebp
xor    %esi,%esi
mov    %ebp,0x1c(%esp)
mov    %edi,%ebp
lea    0x0(%esi),%esi
test   %ebp,%ebp
jne    8067e68 <dbus_connection_close+0x218>
lea    0x0(,%esi,4),%eax
mov    %eax,0x24(%esp)
lea    0x40(%esp),%edi
mov    0x38(%esp),%eax
mov    0x24(%esp),%ecx
mov    %edi,0x4(%esp)
mov    (%eax,%ecx,1),%eax
mov    %eax,(%esp)
call   8078df0 <dbus_threads_init_default+0x200>
test   %eax,%eax
je     8067f48 <dbus_connection_close+0x2f8>
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   8064f10 <dbus_connection_has_messages_to_send+0x5c0>
mov    0x28(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0x20(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
mov    0x20(%esp),%edx
test   %edx,%edx
je     8067f2a <dbus_connection_close+0x2da>
test   %ebp,%ebp
jne    8068060 <dbus_connection_close+0x410>
xchg   %ax,%ax
mov    0x1c(%esp),%ebp
mov    %ebp,(%esp)
call   806ade0 <dbus_error_free>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   808c8f0 <dbus_address_entries_free>
mov    0x20(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(,%esi,4),%eax
mov    %eax,0x24(%esp)
mov    0x38(%esp),%eax
mov    (%eax,%esi,4),%edi
lea    0x814(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x82c(%ebx),%eax
test   %eax,%eax
je     8067f98 <dbus_connection_close+0x348>
lea    -0x1de78(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   808c940 <dbus_address_entry_get_value>
test   %eax,%eax
je     8067f20 <dbus_connection_close+0x2d0>
mov    %eax,0x4(%esp)
mov    0x82c(%ebx),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,%edi
je     8067f20 <dbus_connection_close+0x2d0>
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%edi),%eax
orb    $0x20,0x88(%edi)
mov    %eax,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
movl   $0x0,0x20(%esp)
test   %eax,%eax
jne    8068030 <dbus_connection_close+0x3e0>
mov    %edi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
lea    0x814(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x20(%esp),%ecx
test   %ecx,%ecx
jne    8067e40 <dbus_connection_close+0x1f0>
jmp    8067de0 <dbus_connection_close+0x190>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x20(%esp)
jmp    8067efb <dbus_connection_close+0x2ab>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
test   %esi,%esi
jne    8068158 <dbus_connection_close+0x508>
mov    0x1c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
add    $0x1,%esi
cmp    %esi,0x3c(%esp)
jg     8067dd8 <dbus_connection_close+0x188>
mov    0x1c(%esp),%ebp
mov    0x80(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
movl   $0x0,0x20(%esp)
jmp    8067e4c <dbus_connection_close+0x1fc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x39450(%ebx),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x82c(%ebx)
je     8067ff2 <dbus_connection_close+0x3a2>
lea    -0x4fc20(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807ec70 <dbus_free_string_array+0x50>
test   %eax,%eax
jne    8068048 <dbus_connection_close+0x3f8>
mov    0x82c(%ebx),%eax
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
movl   $0x0,0x82c(%ebx)
00
lea    0x814(%ebx),%eax
lea    0x40(%esp),%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
jmp    8067def <dbus_connection_close+0x19f>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    %edi,0x20(%esp)
jmp    8067ef3 <dbus_connection_close+0x2a3>
lea    0x0(%esi,%eiz,1),%esi
lea    0x814(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    8067de0 <dbus_connection_close+0x190>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    0x24(%esp),%edx
orb    $0x1,0x88(%eax)
lea    -0x1de78(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    (%eax,%edx,1),%eax
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    0x20(%esp),%ecx
mov    %eax,0x24(%esp)
mov    0x4(%ecx),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x20(%esp),%ecx
orb    $0x20,0x88(%ecx)
mov    %ecx,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    0x24(%esp),%eax
test   %eax,%eax
je     8068172 <dbus_connection_close+0x522>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     80681ae <dbus_connection_close+0x55e>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
je     8068221 <dbus_connection_close+0x5d1>
lea    0x814(%ebx),%ecx
mov    %eax,0x2c(%esp)
mov    (%ecx),%eax
mov    %ecx,0x24(%esp)
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x82c(%ebx),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%edx
test   %eax,%eax
je     80681e6 <dbus_connection_close+0x596>
mov    0x20(%esp),%eax
mov    0x1c(%esp),%ebp
mov    %edx,0x7c(%eax)
mov    (%ecx),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
jmp    8067e44 <dbus_connection_close+0x1f4>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
jmp    8067f60 <dbus_connection_close+0x310>
lea    0x0(%esi),%esi
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x814(%ebx),%edx
mov    (%edx),%eax
mov    %edx,0x24(%esp)
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x828(%ebx),%eax
mov    %eax,(%esp)
call   807d570 <dbus_watch_handle+0x19b0>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    806820e <dbus_connection_close+0x5be>
mov    (%edx),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    0x20(%esp),%eax
call   8067b70 <dbus_connection_send+0xe0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8066920 <dbus_connection_unref>
jmp    8067f48 <dbus_connection_close+0x2f8>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    0x24(%esp),%ecx
mov    (%ecx),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    80681ae <dbus_connection_close+0x55e>
mov    (%edx),%eax
mov    0x1c(%esp),%ebp
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    8068141 <dbus_connection_close+0x4f1>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    80681ae <dbus_connection_close+0x55e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x4fdb1,%ebx
mov    0x34(%esp),%esi
test   %edi,%edi
je     80682c7 <dbus_connection_open+0x87>
test   %esi,%esi
je     806826d <dbus_connection_open+0x2d>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8068288 <dbus_connection_open+0x48>
mov    %esi,0x30(%esp)
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
mov    $0x1,%edx
pop    %esi
pop    %edi
jmp    8067d30 <dbus_connection_close+0xe0>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0xa2d,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cc02(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de73(%ebx),%eax
movl   $0xa2c,0x10(%esp)
jmp    80682a0 <dbus_connection_open+0x60>
jmp    80682f0 <dbus_connection_open_private>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x4fd01,%ebx
mov    0x34(%esp),%esi
test   %edi,%edi
je     806836f <dbus_connection_open_private+0x7f>
test   %esi,%esi
je     806831d <dbus_connection_open_private+0x2d>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8068330 <dbus_connection_open_private+0x40>
mov    %esi,0x30(%esp)
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
xor    %edx,%edx
pop    %esi
pop    %edi
jmp    8067d30 <dbus_connection_close+0xe0>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0xa58,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cc1f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de73(%ebx),%eax
movl   $0xa57,0x10(%esp)
jmp    8068348 <dbus_connection_open_private+0x58>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4fc67,%ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   8065370 <dbus_connection_ref>
mov    %esi,(%esp)
call   8067bc0 <dbus_connection_send+0x130>
jmp    80683c0 <dbus_connection_open_private+0xd0>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
mov    %esi,(%esp)
call   80679a0 <dbus_connection_pop_message>
test   %eax,%eax
jne    80683b8 <dbus_connection_open_private+0xc8>
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4fc17,%ebx
sub    $0x3c,%esp
lea    0x18(%esp),%edi
lea    0x814(%ebx),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
jmp    8068447 <dbus_connection_open_private+0x157>
mov    0x82c(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
mov    %edi,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
mov    %edi,(%esp)
call   807c380 <dbus_watch_handle+0x7c0>
mov    %eax,%ebp
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %ebp,%eax
call   8068390 <dbus_connection_open_private+0xa0>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x82c(%ebx),%eax
mov    %eax,(%esp)
call   807cbf0 <dbus_watch_handle+0x1030>
test   %eax,%eax
jg     8068408 <dbus_connection_open_private+0x118>
mov    0x82c(%ebx),%eax
lea    0x828(%ebx),%ebp
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x828(%ebx),%eax
movl   $0x0,0x82c(%ebx)
00
test   %eax,%eax
jne    80684a3 <dbus_connection_open_private+0x1b3>
jmp    80684b1 <dbus_connection_open_private+0x1c1>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %edi,%eax
call   8068390 <dbus_connection_open_private+0xa0>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %ebp,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
test   %eax,%eax
mov    %eax,%edi
jne    8068488 <dbus_connection_open_private+0x198>
mov    (%esi),%eax
movl   $0x0,0x828(%ebx)
00
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4fb25,%ebx
mov    0x20(%esp),%edi
mov    %edi,(%esp)
call   8074c00 <dbus_message_demarshal_bytes_needed+0x10e0>
mov    %eax,%esi
mov    %eax,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8074b60 <dbus_message_demarshal_bytes_needed+0x1040>
mov    %edi,(%esp)
call   8074bd0 <dbus_message_demarshal_bytes_needed+0x10b0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8064b60 <dbus_connection_has_messages_to_send+0x210>
mov    %edi,(%esp)
movl   $0x0,0x4(%esp)
call   8074bb0 <dbus_message_demarshal_bytes_needed+0x1090>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4faa0,%ebx
test   %esi,%esi
je     8068708 <dbus_connection_dispatch+0x1b8>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
orb    $0x20,0x88(%esi)
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
test   %eax,%eax
mov    %eax,%edi
jne    8068650 <dbus_connection_dispatch+0x100>
mov    %esi,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    %esi,%eax
call   80667a0 <dbus_connection_set_unix_user_function+0x6f0>
mov    %esi,%eax
call   8064720 <sidput@plt+0x16bc0>
test   %eax,%eax
mov    %eax,%ebp
je     80686fb <dbus_connection_dispatch+0x1ab>
mov    0x8(%eax),%edi
mov    %edi,(%esp)
call   806f1f0 <dbus_message_get_reply_serial>
mov    %eax,0x4(%esp)
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807c4b0 <dbus_watch_handle+0x8f0>
test   %eax,%eax
je     8068750 <dbus_connection_dispatch+0x200>
mov    %eax,%edx
mov    %esi,%eax
mov    %edi,(%esp)
call   8064cc0 <dbus_connection_has_messages_to_send+0x370>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
mov    %esi,%eax
call   8064570 <sidput@plt+0x16a10>
test   %edi,%edi
je     806861e <dbus_connection_dispatch+0xce>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
mov    %ebp,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    %esi,%eax
call   8064d10 <dbus_connection_has_messages_to_send+0x3c0>
mov    %eax,%edx
mov    %eax,%edi
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
mov    %edi,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,%edx
mov    %esi,%eax
call   8066a00 <dbus_connection_unref+0xe0>
add    $0x5c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     80686e8 <dbus_connection_dispatch+0x198>
lea    -0x1de49(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8072860 <dbus_message_is_method_call>
test   %eax,%eax
je     80687e1 <dbus_connection_dispatch+0x291>
mov    %edi,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,%ecx
je     8068986 <dbus_connection_dispatch+0x436>
mov    %ecx,%edx
mov    %esi,%eax
mov    %ecx,0x28(%esp)
call   8066660 <dbus_connection_set_unix_user_function+0x5b0>
mov    0x28(%esp),%ecx
mov    %eax,0x20(%esp)
mov    0x24(%esp),%eax
mov    %ecx,0x8(%eax)
mov    %eax,0x4(%esp)
lea    0x20(%esi),%eax
mov    %eax,(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
mov    0x20(%esp),%eax
test   %eax,%eax
jne    80685f1 <dbus_connection_dispatch+0xa1>
nop
lea    0x1c(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
addl   $0x1,0x2c(%esi)
mov    %esi,%eax
call   8064570 <sidput@plt+0x16a10>
jmp    8068626 <dbus_connection_dispatch+0xd6>
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1cffc(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x11bc,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x5c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
testb  $0x4,0x88(%esi)
jne    80687d0 <dbus_connection_dispatch+0x280>
lea    -0x1de63(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x20(%esp)
call   8071cc0 <dbus_message_has_interface>
test   %eax,%eax
jne    8068668 <dbus_connection_dispatch+0x118>
lea    0x38(%esp),%eax
mov    %eax,0x20(%esp)
mov    %eax,0x4(%esp)
lea    0x40(%esi),%eax
mov    %eax,(%esp)
call   807dad0 <dbus_watch_handle+0x1f10>
test   %eax,%eax
jne    8068860 <dbus_connection_dispatch+0x310>
mov    %esi,%eax
call   8064570 <sidput@plt+0x16a10>
lea    0x1c(%esi),%eax
mov    %eax,(%esp)
mov    %ebp,0x4(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
mov    %esi,%eax
mov    $0x2,%edx
addl   $0x1,0x2c(%esi)
call   8066a00 <dbus_connection_unref+0xe0>
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
mov    $0x2,%eax
jmp    8068642 <dbus_connection_dispatch+0xf2>
xchg   %ax,%ax
mov    %edi,(%esp)
call   80721c0 <dbus_message_get_destination>
test   %eax,%eax
jne    8068777 <dbus_connection_dispatch+0x227>
jmp    8068759 <dbus_connection_dispatch+0x209>
lea    -0x1de44(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8072860 <dbus_message_is_method_call>
test   %eax,%eax
je     8068960 <dbus_connection_dispatch+0x410>
mov    %edi,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     8068986 <dbus_connection_dispatch+0x436>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   807f330 <dbus_shutdown+0x650>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807d360 <dbus_watch_handle+0x17a0>
mov    0x2c(%esp),%ecx
movl   $0x0,0x20(%esp)
test   %eax,%eax
jne    80689f5 <dbus_connection_dispatch+0x4a5>
mov    0x28(%esp),%eax
mov    %ecx,0x2c(%esp)
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x2c(%esp),%ecx
jmp    80686c5 <dbus_connection_dispatch+0x175>
lea    -0x53a40(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     80688da <dbus_connection_dispatch+0x38a>
mov    %ebp,0x24(%esp)
mov    %eax,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebp),%ecx
mov    $0x0,%eax
mov    0x4(%ebp),%ebp
cmp    0x38(%esp),%ebp
cmove  %eax,%ebp
mov    0x4(%ecx),%eax
test   %eax,%eax
je     80688d2 <dbus_connection_dispatch+0x382>
mov    0x8(%ecx),%ecx
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
call   *%eax
cmp    $0x1,%eax
jne    8068997 <dbus_connection_dispatch+0x447>
test   %ebp,%ebp
jne    80688a0 <dbus_connection_dispatch+0x350>
mov    0x24(%esp),%ebp
lea    -0x53990(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x20,0x88(%esi)
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x78(%esi),%eax
mov    %eax,(%esp)
call   80744f0 <dbus_message_demarshal_bytes_needed+0x9d0>
mov    0x4(%esi),%edx
mov    %edx,(%esp)
mov    %eax,0x20(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x20(%esp),%eax
orb    $0x20,0x88(%esi)
cmp    $0x1,%eax
je     8068a3f <dbus_connection_dispatch+0x4ef>
cmp    $0x2,%eax
je     80686e8 <dbus_connection_dispatch+0x198>
jmp    80685f1 <dbus_connection_dispatch+0xa1>
xchg   %ax,%ax
lea    -0x1d8a4(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1f434(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80724d0 <dbus_message_new_error>
test   %eax,%eax
mov    %eax,%ecx
jne    80686b0 <dbus_connection_dispatch+0x160>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
jmp    80686e8 <dbus_connection_dispatch+0x198>
mov    0x24(%esp),%ebp
lea    -0x53990(%ebx),%edx
mov    %eax,0x24(%esp)
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x4(%esi),%edx
mov    %edx,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x24(%esp),%eax
orb    $0x20,0x88(%esi)
cmp    $0x2,%eax
je     80686e8 <dbus_connection_dispatch+0x198>
test   %eax,%eax
je     80685f1 <dbus_connection_dispatch+0xa1>
jmp    8068916 <dbus_connection_dispatch+0x3c6>
mov    0x40(%esp),%eax
mov    %ecx,(%esp)
movl   $0x0,0xc(%esp)
movl   $0x73,0x4(%esp)
mov    %eax,0x3c(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
call   8071420 <dbus_message_append_args>
mov    0x2c(%esp),%ecx
test   %eax,%eax
je     8068847 <dbus_connection_dispatch+0x2f7>
mov    %ecx,%edx
mov    %esi,%eax
call   8066660 <dbus_connection_set_unix_user_function+0x5b0>
mov    0x2c(%esp),%ecx
mov    %eax,0x20(%esp)
jmp    8068847 <dbus_connection_dispatch+0x2f7>
mov    %edi,(%esp)
call   806f7e0 <dbus_message_get_type>
sub    $0x1,%eax
jne    80685f1 <dbus_connection_dispatch+0xa1>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80686e8 <dbus_connection_dispatch+0x198>
mov    %edi,(%esp)
call   8071c30 <dbus_message_get_interface>
mov    %edi,(%esp)
mov    %eax,0x24(%esp)
call   80727e0 <dbus_message_get_signature>
mov    %edi,(%esp)
mov    %eax,0x20(%esp)
call   8071e00 <dbus_message_get_member>
mov    0x24(%esp),%edx
mov    0x20(%esp),%ecx
mov    %edx,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d864(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     8068b4e <dbus_connection_dispatch+0x5fe>
cmpl   $0x0,0x3c(%esp)
mov    0x40(%esp),%edx
je     8068b78 <dbus_connection_dispatch+0x628>
lea    -0x1f434(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   80724d0 <dbus_message_new_error>
mov    0x28(%esp),%ecx
mov    %ecx,(%esp)
mov    %eax,0x20(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x20(%esp),%eax
test   %eax,%eax
je     80686e8 <dbus_connection_dispatch+0x198>
mov    %eax,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
test   %eax,%eax
je     8068b67 <dbus_connection_dispatch+0x617>
mov    %eax,0x24(%esp)
mov    %esi,%eax
call   80645f0 <sidput@plt+0x16a90>
mov    0x24(%esp),%ecx
test   %eax,%eax
je     8068b5f <dbus_connection_dispatch+0x60f>
mov    %ecx,0x24(%esp)
mov    0x20(%esp),%ecx
mov    %eax,%edx
movl   $0x0,0x4(%esp)
mov    %esi,%eax
mov    %ecx,(%esp)
call   8066570 <dbus_connection_set_unix_user_function+0x4c0>
mov    0x24(%esp),%ecx
lea    0x20(%esi),%eax
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
jmp    80685f1 <dbus_connection_dispatch+0xa1>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    80686e8 <dbus_connection_dispatch+0x198>
mov    %ecx,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
jmp    80686e8 <dbus_connection_dispatch+0x198>
lea    -0x1d8d0(%ebx),%eax
jmp    8068acf <dbus_connection_dispatch+0x57f>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4f463,%ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   8065370 <dbus_connection_ref>
mov    %esi,(%esp)
call   8065930 <dbus_connection_get_dispatch_status>
mov    0x30(%esp),%ebp
test   %ebp,%ebp
setne  %cl
test   %eax,%eax
mov    %ecx,%ebp
je     8068c38 <dbus_connection_dispatch+0x6e8>
cmp    $0x2,%eax
je     8068c90 <dbus_connection_dispatch+0x740>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
test   %eax,%eax
jne    8068c68 <dbus_connection_dispatch+0x718>
mov    %ebp,%eax
test   %al,%al
je     8068c28 <dbus_connection_dispatch+0x6d8>
mov    0x2c(%esi),%ecx
mov    $0x1,%edi
test   %ecx,%ecx
jne    8068c0d <dbus_connection_dispatch+0x6bd>
mov    0x58(%esi),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
mov    %eax,%edi
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
mov    %eax,%edi
jmp    8068c0d <dbus_connection_dispatch+0x6bd>
nop
test   %cl,%cl
je     8068bc5 <dbus_connection_dispatch+0x675>
mov    %esi,(%esp)
mov    $0x1,%edi
call   8068550 <dbus_connection_dispatch>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x2c(%esi),%ecx
orb    $0x20,0x88(%esi)
test   %ecx,%ecx
je     8068c01 <dbus_connection_dispatch+0x6b1>
jmp    8068c0d <dbus_connection_dispatch+0x6bd>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0xc(%esp)
movl   $0x7,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8066490 <dbus_connection_set_unix_user_function+0x3e0>
mov    %ebp,%eax
test   %al,%al
jne    8068bf5 <dbus_connection_dispatch+0x6a5>
jmp    8068c28 <dbus_connection_dispatch+0x6d8>
mov    %edi,%eax
call   80646c0 <sidput@plt+0x16b60>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %ebp,%eax
orb    $0x20,0x88(%esi)
test   %al,%al
jne    8068bf5 <dbus_connection_dispatch+0x6a5>
jmp    8068c28 <dbus_connection_dispatch+0x6d8>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4f333,%ebx
mov    0x34(%esp),%edx
test   %eax,%eax
je     8068d38 <dbus_connection_read_write_dispatch+0x78>
cmp    $0xffffffff,%edx
jl     8068cf8 <dbus_connection_read_write_dispatch+0x38>
movl   $0x1,0x30(%esp)
add    $0x28,%esp
pop    %ebx
jmp    8068b90 <dbus_connection_dispatch+0x640>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1da0c(%ebx),%eax
movl   $0xeab,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cf00(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xeaa,0x10(%esp)
jmp    8068d10 <dbus_connection_read_write_dispatch+0x50>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4f293,%ebx
mov    0x34(%esp),%edx
test   %eax,%eax
je     8068dd8 <dbus_connection_read_write+0x78>
cmp    $0xffffffff,%edx
jl     8068d98 <dbus_connection_read_write+0x38>
movl   $0x0,0x30(%esp)
add    $0x28,%esp
pop    %ebx
jmp    8068b90 <dbus_connection_dispatch+0x640>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1da0c(%ebx),%eax
movl   $0xecb,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1cf39(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0xeca,0x10(%esp)
jmp    8068db0 <dbus_connection_read_write+0x50>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4f1f0,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     8068eb8 <dbus_connection_get_windows_user+0xb8>
test   %edi,%edi
je     8068e78 <dbus_connection_get_windows_user+0x78>
mov    0x4(%esi),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
jne    8068e60 <dbus_connection_get_windows_user+0x60>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079d80 <dbus_threads_init_default+0x1190>
mov    %eax,%ebp
jmp    8068e49 <dbus_connection_get_windows_user+0x49>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de37(%ebx),%eax
movl   $0x14df,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d220(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x14de,0x10(%esp)
jmp    8068e90 <dbus_connection_get_windows_user+0x90>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4f112,%ebx
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
test   %esi,%esi
je     8068f70 <dbus_connection_set_windows_user_function+0x90>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x2c(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x14(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079df0 <dbus_threads_init_default+0x1200>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8068f66 <dbus_connection_set_windows_user_function+0x86>
mov    0x28(%esp),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d260(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1510,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4f042,%ebx
test   %esi,%esi
je     8069000 <dbus_connection_set_allow_anonymous+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079e50 <dbus_threads_init_default+0x1260>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d2a0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x153a,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4efb2,%ebx
test   %esi,%esi
je     8069098 <dbus_connection_set_route_peer_messages+0x58>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movzbl 0x88(%esi),%eax
movzbl 0x34(%esp),%edx
or     $0x20,%eax
and    $0x1,%edx
and    $0xfffffffb,%eax
shl    $0x2,%edx
or     %edx,%eax
mov    %al,0x88(%esi)
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d2e0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1556,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4ef10,%ebx
test   %esi,%esi
je     80691e0 <dbus_connection_add_filter+0x100>
mov    0x44(%esp),%eax
test   %eax,%eax
je     8069198 <dbus_connection_add_filter+0xb8>
movl   $0x10,(%esp)
xor    %ebp,%ebp
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
je     806916d <dbus_connection_add_filter+0x8d>
mov    %eax,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x40(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8069178 <dbus_connection_add_filter+0x98>
mov    0x44(%esp),%eax
mov    $0x1,%ebp
mov    %esi,(%esp)
mov    %eax,0x4(%edi)
mov    0x48(%esp),%eax
mov    %eax,0x8(%edi)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%edi)
call   80647d0 <sidput@plt+0x16c70>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,(%esp)
call   8064670 <sidput@plt+0x16b10>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de21(%ebx),%eax
movl   $0x157b,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d319(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x157a,0x10(%esp)
jmp    80691b0 <dbus_connection_add_filter+0xd0>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4edf0,%ebx
mov    0x44(%esp),%edi
mov    0x48(%esp),%ebp
test   %esi,%esi
je     8069334 <dbus_connection_remove_filter+0x134>
test   %edi,%edi
je     80692f6 <dbus_connection_remove_filter+0xf6>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x40(%esi),%edx
orb    $0x20,0x88(%esi)
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   807d910 <dbus_watch_handle+0x1d50>
mov    0x1c(%esp),%edx
jmp    806925f <dbus_connection_remove_filter+0x5f>
lea    0x0(%esi),%esi
cmp    0x40(%esi),%eax
je     80692d0 <dbus_connection_remove_filter+0xd0>
mov    (%eax),%eax
test   %eax,%eax
je     80692d0 <dbus_connection_remove_filter+0xd0>
mov    0x8(%eax),%ecx
cmp    %edi,0x4(%ecx)
jne    8069258 <dbus_connection_remove_filter+0x58>
cmp    %ebp,0x8(%ecx)
jne    8069258 <dbus_connection_remove_filter+0x58>
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    0x1c(%esp),%ecx
movl   $0x0,0x4(%ecx)
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x1c(%esp),%ecx
mov    0xc(%ecx),%edx
test   %edx,%edx
je     80692ae <dbus_connection_remove_filter+0xae>
mov    0x8(%ecx),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,(%esp)
call   *%edx
mov    0x1c(%esp),%ecx
movl   $0x0,0xc(%ecx)
movl   $0x0,0x8(%ecx)
mov    %ecx,0x40(%esp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8064670 <sidput@plt+0x16b10>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
lea    -0x1d820(%ebx),%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de21(%ebx),%eax
movl   $0x15af,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d337(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x15ae,0x10(%esp)
jmp    806930e <dbus_connection_remove_filter+0x10e>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4eca1,%ebx
mov    0x34(%esp),%edx
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%esi
test   %eax,%eax
mov    0x40(%esp),%edi
je     8069410 <dbus_connection_try_register_object_path+0xc0>
test   %edx,%edx
je     8069430 <dbus_connection_try_register_object_path+0xe0>
cmpb   $0x2f,(%edx)
jne    80693b0 <dbus_connection_try_register_object_path+0x60>
test   %ecx,%ecx
lea    0x0(%esi,%eiz,1),%esi
je     80693f0 <dbus_connection_try_register_object_path+0xa0>
mov    %edi,0x3c(%esp)
mov    %esi,0x38(%esp)
mov    %edx,0x30(%esp)
xor    %edx,%edx
mov    %ecx,0x34(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8064840 <sidput@plt+0x16ce0>
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dde6(%ebx),%eax
movl   $0x161c,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d360(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de10(%ebx),%eax
movl   $0x161d,0x10(%esp)
jmp    80693c8 <dbus_connection_try_register_object_path+0x78>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x161a,0x10(%esp)
jmp    80693c8 <dbus_connection_try_register_object_path+0x78>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0x161b,0x10(%esp)
jmp    80693c8 <dbus_connection_try_register_object_path+0x78>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4eba1,%ebx
mov    0x44(%esp),%edx
movl   $0x0,0x28(%esp)
mov    0x48(%esp),%ecx
movl   $0x0,0x20(%esp)
test   %eax,%eax
movl   $0x0,0x24(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x1,0x28(%esp)
je     8069570 <dbus_connection_register_object_path+0x120>
test   %edx,%edx
je     8069590 <dbus_connection_register_object_path+0x140>
cmpb   $0x2f,(%edx)
jne    8069510 <dbus_connection_register_object_path+0xc0>
test   %ecx,%ecx
je     8069550 <dbus_connection_register_object_path+0x100>
mov    0x4c(%esp),%edi
lea    0x20(%esp),%esi
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
xor    %edx,%edx
mov    %esi,0xc(%esp)
mov    %edi,0x8(%esp)
call   8064840 <sidput@plt+0x16ce0>
mov    %esi,(%esp)
mov    %eax,%edi
lea    -0x1d7c8(%ebx),%eax
mov    %eax,0x4(%esp)
call   806ae60 <dbus_error_has_name>
mov    %eax,%edx
mov    %edi,%eax
test   %edx,%edx
je     8069509 <dbus_connection_register_object_path+0xb9>
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1fc1b(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dde6(%ebx),%eax
movl   $0x163c,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d3a0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de10(%ebx),%eax
movl   $0x163d,0x10(%esp)
jmp    8069528 <dbus_connection_register_object_path+0xd8>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x163a,0x10(%esp)
jmp    8069528 <dbus_connection_register_object_path+0xd8>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0x163b,0x10(%esp)
jmp    8069528 <dbus_connection_register_object_path+0xd8>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4ea41,%ebx
mov    0x34(%esp),%edx
mov    0x38(%esp),%ecx
mov    0x3c(%esp),%esi
test   %eax,%eax
mov    0x40(%esp),%edi
je     8069678 <dbus_connection_try_register_fallback+0xc8>
test   %edx,%edx
je     8069698 <dbus_connection_try_register_fallback+0xe8>
cmpb   $0x2f,(%edx)
jne    8069618 <dbus_connection_try_register_fallback+0x68>
test   %ecx,%ecx
lea    0x0(%esi,%eiz,1),%esi
je     8069658 <dbus_connection_try_register_fallback+0xa8>
mov    %edi,0x3c(%esp)
mov    %esi,0x38(%esp)
mov    %edx,0x30(%esp)
mov    $0x1,%edx
mov    %ecx,0x34(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8064840 <sidput@plt+0x16ce0>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dde6(%ebx),%eax
movl   $0x1662,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d3e0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de10(%ebx),%eax
movl   $0x1663,0x10(%esp)
jmp    8069630 <dbus_connection_try_register_fallback+0x80>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x1660,0x10(%esp)
jmp    8069630 <dbus_connection_try_register_fallback+0x80>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0x1661,0x10(%esp)
jmp    8069630 <dbus_connection_try_register_fallback+0x80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4e931,%ebx
mov    0x44(%esp),%edx
movl   $0x0,0x28(%esp)
mov    0x48(%esp),%ecx
movl   $0x0,0x20(%esp)
test   %eax,%eax
movl   $0x0,0x24(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x1,0x28(%esp)
je     80697e8 <dbus_connection_register_fallback+0x128>
test   %edx,%edx
je     8069808 <dbus_connection_register_fallback+0x148>
cmpb   $0x2f,(%edx)
jne    8069788 <dbus_connection_register_fallback+0xc8>
test   %ecx,%ecx
je     80697c8 <dbus_connection_register_fallback+0x108>
mov    0x4c(%esp),%edi
lea    0x20(%esp),%esi
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
mov    $0x1,%edx
mov    %esi,0xc(%esp)
mov    %edi,0x8(%esp)
call   8064840 <sidput@plt+0x16ce0>
mov    %esi,(%esp)
mov    %eax,%edi
lea    -0x1d7c8(%ebx),%eax
mov    %eax,0x4(%esp)
call   806ae60 <dbus_error_has_name>
mov    %eax,%edx
mov    %edi,%eax
test   %edx,%edx
je     806977c <dbus_connection_register_fallback+0xbc>
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1fc1b(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dde6(%ebx),%eax
movl   $0x1684,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d420(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de10(%ebx),%eax
movl   $0x1685,0x10(%esp)
jmp    80697a0 <dbus_connection_register_fallback+0xe0>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x1682,0x10(%esp)
jmp    80697a0 <dbus_connection_register_fallback+0xe0>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0x1683,0x10(%esp)
jmp    80697a0 <dbus_connection_register_fallback+0xe0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x4e7c1,%ebx
mov    0x44(%esp),%esi
test   %edi,%edi
je     8069910 <dbus_connection_unregister_object_path+0xe0>
test   %esi,%esi
je     8069930 <dbus_connection_unregister_object_path+0x100>
cmpb   $0x2f,(%esi)
je     80698a0 <dbus_connection_unregister_object_path+0x70>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dde6(%ebx),%eax
movl   $0x16a4,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d460(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804d600 <strlen@plt>
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80749a0 <dbus_message_demarshal_bytes_needed+0xe80>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     8069896 <dbus_connection_unregister_object_path+0x66>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x2c(%esp),%eax
orb    $0x20,0x88(%edi)
mov    %eax,0x4(%esp)
mov    0x78(%edi),%eax
mov    %eax,(%esp)
call   8074330 <dbus_message_demarshal_bytes_needed+0x810>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
add    $0x30,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x16a2,0x10(%esp)
jmp    8069876 <dbus_connection_unregister_object_path+0x46>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0x16a3,0x10(%esp)
jmp    8069876 <dbus_connection_unregister_object_path+0x46>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4e6a0,%ebx
mov    0x54(%esp),%edi
mov    0x58(%esp),%ebp
test   %esi,%esi
je     8069a48 <dbus_connection_get_object_path_data+0xf8>
test   %edi,%edi
je     8069a68 <dbus_connection_get_object_path_data+0x118>
test   %ebp,%ebp
je     8069a00 <dbus_connection_get_object_path_data+0xb0>
movl   $0x0,0x0(%ebp)
mov    %edi,(%esp)
call   804d600 <strlen@plt>
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80749a0 <dbus_message_demarshal_bytes_needed+0xe80>
xor    %edx,%edx
test   %eax,%eax
je     80699f4 <dbus_connection_get_object_path_data+0xa4>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x2c(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x4(%esp)
mov    0x78(%esi),%eax
mov    %eax,(%esp)
call   8074910 <dbus_message_demarshal_bytes_needed+0xdf0>
mov    %eax,0x0(%ebp)
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    $0x1,%edx
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1af52(%ebx),%eax
movl   $0x16c5,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d4a0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x16c3,0x10(%esp)
jmp    8069a18 <dbus_connection_get_object_path_data+0xc8>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0x16c4,0x10(%esp)
jmp    8069a18 <dbus_connection_get_object_path_data+0xc8>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x4e561,%ebx
mov    0x44(%esp),%esi
test   %edi,%edi
je     8069ba0 <dbus_connection_list_registered+0x110>
test   %esi,%esi
je     8069bc0 <dbus_connection_list_registered+0x130>
cmpb   $0x2f,(%esi)
jne    8069b40 <dbus_connection_list_registered+0xb0>
mov    0x48(%esp),%eax
test   %eax,%eax
je     8069b80 <dbus_connection_list_registered+0xf0>
mov    %esi,(%esp)
call   804d600 <strlen@plt>
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80749a0 <dbus_message_demarshal_bytes_needed+0xe80>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     8069b37 <dbus_connection_list_registered+0xa7>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x48(%esp),%eax
orb    $0x20,0x88(%edi)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x78(%edi),%eax
mov    %eax,(%esp)
call   8074960 <dbus_message_demarshal_bytes_needed+0xe40>
mov    %eax,%esi
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    %esi,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1dded(%ebx),%eax
movl   $0x16ea,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d4c0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddd7(%ebx),%eax
movl   $0x16eb,0x10(%esp)
jmp    8069b58 <dbus_connection_list_registered+0xc8>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x16e8,0x10(%esp)
jmp    8069b58 <dbus_connection_list_registered+0xc8>
lea    0x0(%esi),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de01(%ebx),%eax
movl   $0x16e9,0x10(%esp)
jmp    8069b58 <dbus_connection_list_registered+0xc8>
lea    0x0(%esi),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4e41a,%ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x810(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x818(%ebx),%eax
mov    %eax,(%esp)
call   807bcc0 <dbus_watch_handle+0x100>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4e3d3,%ebx
mov    (%eax),%edx
test   %edx,%edx
js     8069c50 <dbus_connection_free_data_slot+0x30>
mov    %eax,0x4(%esp)
lea    0x818(%ebx),%eax
mov    %eax,(%esp)
call   807be10 <dbus_watch_handle+0x250>
add    $0x28,%esp
pop    %ebx
ret
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddc1(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d4e8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1721,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4e361,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     8069d70 <dbus_connection_set_data+0xe0>
test   %edi,%edi
js     8069d28 <dbus_connection_set_data+0x98>
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x2c(%esp),%eax
mov    %eax,0x18(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x48(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x48(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x818(%ebx),%eax
mov    %eax,(%esp)
call   807bed0 <dbus_watch_handle+0x310>
mov    %eax,%edi
mov    0x44(%esi),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
test   %edi,%edi
je     8069d1f <dbus_connection_set_data+0x8f>
mov    0x28(%esp),%eax
mov    %edi,%esi
test   %eax,%eax
je     8069d1f <dbus_connection_set_data+0x8f>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x30,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1df71(%ebx),%eax
xor    %esi,%esi
mov    %eax,0xc(%esp)
lea    -0x1ddb4(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d502(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1747,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x30,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d502(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1746,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    8069d1f <dbus_connection_set_data+0x8f>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4e241,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8069e4a <dbus_connection_get_data+0x9a>
test   %edi,%edi
js     8069e10 <dbus_connection_get_data+0x60>
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x48(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x818(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   807bf90 <dbus_watch_handle+0x3d0>
mov    %eax,%edi
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddb4(%ebx),%eax
movl   $0x1774,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1d51b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8069e04 <dbus_connection_get_data+0x54>
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x1773,0x10(%esp)
jmp    8069e28 <dbus_connection_get_data+0x78>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x4e18b,%ecx
mov    0x4(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
mov    %eax,0x830(%ecx)
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4e162,%ebx
test   %esi,%esi
je     8069ee0 <dbus_connection_set_max_message_size+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079a60 <dbus_threads_init_default+0xe70>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d540(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1799,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4e0d1,%ebx
test   %esi,%esi
je     8069f70 <dbus_connection_get_max_message_size+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079ac0 <dbus_threads_init_default+0xed0>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d580(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x17ac,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4e042,%ebx
test   %esi,%esi
je     806a000 <dbus_connection_set_max_message_unix_fds+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079a90 <dbus_threads_init_default+0xea0>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d5c0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x17c0,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4dfb1,%ebx
test   %esi,%esi
je     806a090 <dbus_connection_get_max_message_unix_fds+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079af0 <dbus_threads_init_default+0xf00>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d600(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x17d3,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4df22,%ebx
test   %esi,%esi
je     806a120 <dbus_connection_set_max_received_size+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079b20 <dbus_threads_init_default+0xf30>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d640(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x17f8,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4de91,%ebx
test   %esi,%esi
je     806a1b0 <dbus_connection_get_max_received_size+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079bc0 <dbus_threads_init_default+0xfd0>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d680(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x180b,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4de02,%ebx
test   %esi,%esi
je     806a240 <dbus_connection_set_max_received_unix_fds+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esp),%eax
orb    $0x20,0x88(%esi)
mov    %eax,0x4(%esp)
mov    0x34(%esi),%eax
mov    %eax,(%esp)
call   8079b70 <dbus_threads_init_default+0xf80>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d6c0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1822,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4dd71,%ebx
test   %esi,%esi
je     806a2d0 <dbus_connection_get_max_received_unix_fds+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8079bd0 <dbus_threads_init_default+0xfe0>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d700(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1835,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4dce1,%ebx
test   %esi,%esi
je     806a360 <dbus_connection_get_outgoing_size+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x30(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8075760 <dbus_pending_call_get_data+0x210>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d740(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x184c,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4dc51,%ebx
test   %esi,%esi
je     806a3f0 <dbus_connection_get_outgoing_unix_fds+0x50>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x30(%esi),%eax
orb    $0x20,0x88(%esi)
mov    %eax,(%esp)
call   8075770 <dbus_pending_call_get_data+0x220>
mov    %esi,(%esp)
mov    %eax,%edi
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1df71(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d780(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x1889,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%esp),%ecx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4dbba,%ebx
sub    $0x18,%esp
movl   $0x18,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
je     806a488 <dbus_connection_get_outgoing_unix_fds+0xe8>
movl   $0x1,(%eax)
movl   $0xffffffff,0x4(%eax)
movl   $0xffffffff,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
movl   $0x0,0x14(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4db52,%ebx
subl   $0x1,(%esi)
jne    806a4d7 <dbus_connection_get_outgoing_unix_fds+0x137>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4db19,%ebx
sub    $0x14,%esp
call   806a440 <dbus_connection_get_outgoing_unix_fds+0xa0>
test   %eax,%eax
mov    %eax,%esi
je     806a510 <dbus_connection_get_outgoing_unix_fds+0x170>
mov    %eax,(%esp)
call   8081b10 <dbus_shutdown+0x2e30>
test   %eax,%eax
je     806a518 <dbus_connection_get_outgoing_unix_fds+0x178>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
xor    %esi,%esi
jmp    806a507 <dbus_connection_get_outgoing_unix_fds+0x167>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
xor    %esi,%esi
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
jmp    806a507 <dbus_connection_get_outgoing_unix_fds+0x167>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %edx,0x8(%eax)
mov    $0x1,%eax
ret
jmp    806a550 <dbus_connection_get_outgoing_unix_fds+0x1b0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %edx,0x4(%eax)
mov    $0x1,%eax
ret
jmp    806a570 <dbus_connection_get_outgoing_unix_fds+0x1d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4da85,%ebx
mov    0x24(%esp),%eax
mov    0x20(%esp),%edi
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     806a5ac <dbus_connection_get_outgoing_unix_fds+0x20c>
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%eax
mov    %esi,0xc(%edi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4da34,%ebx
mov    0x38(%esp),%edi
mov    0x34(%esp),%eax
mov    0x30(%esp),%esi
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807ce20 <dbus_watch_handle+0x1260>
mov    %eax,%ebp
xor    %eax,%eax
test   %ebp,%ebp
je     806a608 <dbus_connection_get_outgoing_unix_fds+0x268>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%eax
mov    %ebp,0x10(%esi)
mov    %edi,0x14(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8(%esp),%eax
cmp    $0x1,%eax
je     806a660 <dbus_connection_get_outgoing_unix_fds+0x2c0>
jb     806a650 <dbus_connection_get_outgoing_unix_fds+0x2b0>
cmp    $0x2,%eax
je     806a638 <dbus_connection_get_outgoing_unix_fds+0x298>
cmp    $0x3,%eax
jne    806a648 <dbus_connection_get_outgoing_unix_fds+0x2a8>
mov    0x4(%esp),%eax
mov    0xc(%eax),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
setne  %al
movzbl %al,%eax
ret
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
cmpl   $0xffffffff,0x8(%eax)
setne  %al
movzbl %al,%eax
ret
nop
mov    0x4(%esp),%eax
cmpl   $0xffffffff,0x4(%eax)
setne  %al
movzbl %al,%eax
ret
nop
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x14(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4d931,%ebx
mov    0x20(%esp),%edi
mov    0x8(%esi),%edx
cmp    $0xffffffff,%edx
je     806a6f0 <dbus_connection_get_outgoing_unix_fds+0x350>
xor    %eax,%eax
cmp    0x8(%edi),%edx
je     806a6f0 <dbus_connection_get_outgoing_unix_fds+0x350>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%esi),%edx
cmp    $0xffffffff,%edx
je     806a6ff <dbus_connection_get_outgoing_unix_fds+0x35f>
xor    %eax,%eax
cmp    0x4(%edi),%edx
jne    806a6e8 <dbus_connection_get_outgoing_unix_fds+0x348>
mov    0xc(%esi),%eax
test   %eax,%eax
je     806a721 <dbus_connection_get_outgoing_unix_fds+0x381>
mov    0xc(%edi),%edx
test   %edx,%edx
je     806a750 <dbus_connection_get_outgoing_unix_fds+0x3b0>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    806a6e8 <dbus_connection_get_outgoing_unix_fds+0x348>
mov    0x10(%esi),%eax
test   %eax,%eax
je     806a758 <dbus_connection_get_outgoing_unix_fds+0x3b8>
mov    0x10(%edi),%edx
test   %edx,%edx
je     806a750 <dbus_connection_get_outgoing_unix_fds+0x3b0>
mov    0x14(%edi),%ecx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   804d1f0 <memcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
jmp    806a6e8 <dbus_connection_get_outgoing_unix_fds+0x348>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    806a6e8 <dbus_connection_get_outgoing_unix_fds+0x348>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    806a6e8 <dbus_connection_get_outgoing_unix_fds+0x348>
nop
mov    0x4(%esp),%edx
xor    %eax,%eax
cmpl   $0xffffffff,0x8(%edx)
je     806a770 <dbus_connection_get_outgoing_unix_fds+0x3d0>
repz ret
xchg   %ax,%ax
cmpl   $0xffffffff,0x4(%edx)
jne    806a76c <dbus_connection_get_outgoing_unix_fds+0x3cc>
mov    0xc(%edx),%ecx
test   %ecx,%ecx
jne    806a76c <dbus_connection_get_outgoing_unix_fds+0x3cc>
mov    0x10(%edx),%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
cmpl   $0xffffffff,0x4(%edx)
je     806a7a0 <dbus_connection_get_outgoing_unix_fds+0x400>
repz ret
xchg   %ax,%ax
mov    0xc(%edx),%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4d843,%ebx
mov    0x28(%esp),%edx
test   %eax,%eax
jne    806a7f8 <dbus_connection_get_outgoing_unix_fds+0x458>
mov    0x8(%edx),%edx
mov    $0x1,%al
cmp    $0xffffffff,%edx
je     806a7ed <dbus_connection_get_outgoing_unix_fds+0x44d>
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806a530 <dbus_connection_get_outgoing_unix_fds+0x190>
test   %eax,%eax
setne  %al
movzbl %al,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
cmp    $0x1,%eax
je     806a828 <dbus_connection_get_outgoing_unix_fds+0x488>
cmp    $0x3,%eax
jne    806a850 <dbus_connection_get_outgoing_unix_fds+0x4b0>
mov    0xc(%edx),%edx
mov    $0x1,%al
test   %edx,%edx
je     806a7ed <dbus_connection_get_outgoing_unix_fds+0x44d>
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806a570 <dbus_connection_get_outgoing_unix_fds+0x1d0>
test   %eax,%eax
setne  %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
mov    0x4(%edx),%edx
cmp    $0xffffffff,%edx
je     806a7ed <dbus_connection_get_outgoing_unix_fds+0x44d>
mov    0x20(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806a550 <dbus_connection_get_outgoing_unix_fds+0x1b0>
test   %eax,%eax
setne  %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
cmp    $0x2,%eax
jne    806a882 <dbus_connection_get_outgoing_unix_fds+0x4e2>
mov    0x10(%edx),%ecx
mov    $0x1,%al
test   %ecx,%ecx
je     806a7ed <dbus_connection_get_outgoing_unix_fds+0x44d>
mov    0x14(%edx),%eax
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806a5c0 <dbus_connection_get_outgoing_unix_fds+0x220>
test   %eax,%eax
setne  %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
mov    $0x1,%eax
jmp    806a7ed <dbus_connection_get_outgoing_unix_fds+0x44d>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4d765,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %edi,0x8(%esp)
call   806a7b0 <dbus_connection_get_outgoing_unix_fds+0x410>
test   %eax,%eax
jne    806a8d0 <dbus_connection_get_outgoing_unix_fds+0x530>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %edi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   806a7b0 <dbus_connection_get_outgoing_unix_fds+0x410>
test   %eax,%eax
je     806a8c1 <dbus_connection_get_outgoing_unix_fds+0x521>
mov    %edi,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %esi,(%esp)
call   806a7b0 <dbus_connection_get_outgoing_unix_fds+0x410>
test   %eax,%eax
je     806a8c1 <dbus_connection_get_outgoing_unix_fds+0x521>
mov    %edi,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
call   806a7b0 <dbus_connection_get_outgoing_unix_fds+0x410>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    806a8c3 <dbus_connection_get_outgoing_unix_fds+0x523>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4d6d2,%ebx
mov    0xc(%esi),%eax
movl   $0xffffffff,0x8(%esi)
movl   $0xffffffff,0x4(%esi)
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x10(%esi),%eax
movl   $0x0,0xc(%esi)
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,0x10(%esi)
movl   $0x0,0x14(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4d679,%ebx
sub    $0x14,%esp
call   806a440 <dbus_connection_get_outgoing_unix_fds+0xa0>
test   %eax,%eax
mov    %eax,%esi
je     806a9b8 <dbus_connection_get_outgoing_unix_fds+0x618>
mov    0x20(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806a890 <dbus_connection_get_outgoing_unix_fds+0x4f0>
test   %eax,%eax
je     806a9c0 <dbus_connection_get_outgoing_unix_fds+0x620>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
xor    %esi,%esi
jmp    806a9af <dbus_connection_get_outgoing_unix_fds+0x60f>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
xor    %esi,%esi
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
jmp    806a9af <dbus_connection_get_outgoing_unix_fds+0x60f>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%ecx
mov    0x20(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x4d61c,%ebx
mov    0x4(%ecx),%esi
cmp    %esi,0x4(%edx)
je     806a9f8 <dbus_connection_get_outgoing_unix_fds+0x658>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    0xc(%edx),%edx
test   %edx,%edx
je     806aa20 <dbus_connection_get_outgoing_unix_fds+0x680>
mov    0xc(%ecx),%ecx
test   %ecx,%ecx
je     806a9f2 <dbus_connection_get_outgoing_unix_fds+0x652>
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x14,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
mov    0xc(%ecx),%edx
xor    %eax,%eax
test   %edx,%edx
sete   %al
jmp    806a9f2 <dbus_connection_get_outgoing_unix_fds+0x652>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x4d5c1,%ebx
mov    0x24(%esp),%esi
mov    0x4(%edi),%eax
cmp    $0xffffffff,%eax
je     806aae1 <dbus_connection_get_outgoing_unix_fds+0x741>
mov    %eax,0x8(%esp)
lea    -0x1cbbb(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     806aad8 <dbus_connection_get_outgoing_unix_fds+0x738>
mov    0x8(%edi),%eax
lea    -0x1fe1e(%ebx),%edx
cmp    $0xffffffff,%eax
je     806aaef <dbus_connection_get_outgoing_unix_fds+0x74f>
mov    %eax,0xc(%esp)
lea    -0x1cbb3(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     806aad8 <dbus_connection_get_outgoing_unix_fds+0x738>
mov    0xc(%edi),%eax
lea    -0x1fe1e(%ebx),%edx
test   %eax,%eax
je     806aafc <dbus_connection_get_outgoing_unix_fds+0x75c>
mov    %eax,0xc(%esp)
lea    -0x1cba9(%ebx),%eax
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
setne  %al
add    $0x10,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x8(%edi),%eax
lea    -0x17a4d(%ebx),%edx
cmp    $0xffffffff,%eax
jne    806aa7d <dbus_connection_get_outgoing_unix_fds+0x6dd>
mov    0xc(%edi),%eax
lea    -0x17a4d(%ebx),%edx
test   %eax,%eax
jne    806aaa8 <dbus_connection_get_outgoing_unix_fds+0x708>
mov    $0x1,%eax
jmp    806aada <dbus_connection_get_outgoing_unix_fds+0x73a>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    $0x22,%ecx
push   %edi
mov    %eax,%ebp
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4d4de,%ebx
sub    $0x1c,%esp
lea    -0x218bc(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     806ad58 <dbus_connection_get_outgoing_unix_fds+0x9b8>
mov    $0x24,%ecx
mov    %eax,%esi
lea    -0x21ca0(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1caba(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x23,%ecx
mov    %ebp,%esi
lea    -0x1c9e4(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1ca9e(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x26,%ecx
mov    %ebp,%esi
lea    -0x1c9c0(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1ca80(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x28,%ecx
mov    %ebp,%esi
lea    -0x1f938(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1ca68(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x2a,%ecx
mov    %ebp,%esi
lea    -0x2179c(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1cba0(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x28,%ecx
mov    %ebp,%esi
lea    -0x20f84(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1cb87(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x26,%ecx
mov    %ebp,%esi
lea    -0x1c998(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1ca28(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x24,%ecx
mov    %ebp,%esi
lea    -0x1c970(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1ca04(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x23,%ecx
mov    %ebp,%esi
lea    -0x1c94c(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1cb75(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x25,%ecx
mov    %ebp,%esi
lea    -0x1c928(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1cb60(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x28,%ecx
mov    %ebp,%esi
lea    -0x1c900(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1cb4c(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x28,%ecx
mov    %ebp,%esi
lea    -0x1da34(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1cb35(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x27,%ecx
mov    %ebp,%esi
lea    -0x21a2c(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1cb27(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
mov    $0x23,%ecx
mov    %ebp,%esi
lea    -0x1ff40(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
lea    -0x1cb14(%ebx),%eax
seta   %cl
setb   %dl
cmp    %dl,%cl
je     806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
lea    -0x20b44(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     806ad66 <dbus_connection_get_outgoing_unix_fds+0x9c6>
lea    -0x1d7c8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804d090 <strcmp@plt>
mov    %eax,%edx
test   %edx,%edx
lea    -0x1cae3(%ebx),%eax
cmovne %ebp,%eax
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
lea    -0x1cac8(%ebx),%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1caf7(%ebx),%eax
jmp    806ad50 <dbus_connection_get_outgoing_unix_fds+0x9b0>
xchg   %ax,%ax
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4d283,%ebx
test   %eax,%eax
je     806ada0 <dbus_error_init+0x30>
orb    $0x1,0x8(%eax)
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ca39(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c840(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xc0,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    806ad98 <dbus_error_init+0x28>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4d212,%ebx
test   %esi,%esi
je     806ae28 <dbus_error_free+0x48>
testb  $0x1,0x8(%esi)
je     806ae10 <dbus_error_free+0x30>
mov    %esi,(%esp)
call   806ad70 <dbus_error_init>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    806adfe <dbus_error_free+0x1e>
nop
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ca39(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c850(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xd7,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    806ae06 <dbus_error_free+0x26>
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
mov    0x50(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4d191,%ebx
mov    0x54(%esp),%esi
test   %eax,%eax
je     806aec0 <dbus_error_has_name+0x60>
test   %esi,%esi
je     806af00 <dbus_error_has_name+0xa0>
mov    (%eax),%edx
xor    %eax,%eax
test   %edx,%edx
je     806aeb5 <dbus_error_has_name+0x55>
lea    0x20(%esp),%edi
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %esi,0x4(%esp)
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8080330 <dbus_shutdown+0x1650>
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ca39(%ebx),%eax
movl   $0x131,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1c889(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    806aeb5 <dbus_error_has_name+0x55>
lea    0x0(%esi),%esi
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0x132,0x10(%esp)
jmp    806aed8 <dbus_error_has_name+0x78>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4d0d3,%ebx
test   %eax,%eax
je     806af48 <dbus_error_is_set+0x28>
mov    (%eax),%eax
test   %eax,%eax
setne  %al
movzbl %al,%eax
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ca39(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c89b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x14b,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    806af41 <dbus_error_is_set+0x21>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4d061,%ebx
mov    0x38(%esp),%edi
test   %esi,%esi
je     806b025 <dbus_set_error_const+0x95>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    806afd8 <dbus_set_error_const+0x48>
cmpl   $0x0,0x34(%esp)
je     806b02c <dbus_set_error_const+0x9c>
test   %edi,%edi
je     806b018 <dbus_set_error_const+0x88>
mov    0x34(%esp),%eax
orb    $0x1,0x8(%esi)
mov    %edi,0x4(%esi)
mov    %eax,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0xf9,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1c865(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
call   806ab10 <dbus_connection_get_outgoing_unix_fds+0x770>
mov    %eax,%edi
jmp    806afc4 <dbus_set_error_const+0x34>
cmpl   $0x0,0x34(%esp)
jne    806afd1 <dbus_set_error_const+0x41>
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0xfa,0x10(%esp)
jmp    806aff0 <dbus_set_error_const+0x60>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4cfa1,%ebx
mov    0x30(%esp),%edi
test   %esi,%esi
je     806b0a8 <dbus_move_error+0x58>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    806b0b8 <dbus_move_error+0x68>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
mov    (%edi),%eax
mov    %eax,(%esi)
mov    0x4(%edi),%eax
mov    %eax,0x4(%esi)
mov    0x8(%edi),%eax
mov    %eax,0x8(%esi)
mov    0xc(%edi),%eax
mov    %eax,0xc(%esi)
mov    %edi,(%esp)
call   806ad70 <dbus_error_init>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1c8d8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c875(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x11a,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4cef1,%ebx
test   %esi,%esi
je     806b18f <dbus_set_error+0x8f>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    806b1f0 <dbus_set_error+0xf0>
mov    0x44(%esp),%edx
test   %edx,%edx
je     806b230 <dbus_set_error+0x130>
lea    0x20(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     806b171 <dbus_set_error+0x71>
mov    0x48(%esp),%eax
test   %eax,%eax
je     806b198 <dbus_set_error+0x98>
lea    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f960 <dbus_shutdown+0xc80>
test   %eax,%eax
jne    806b1b1 <dbus_set_error+0xb1>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x44(%esp),%eax
call   806ab10 <dbus_connection_get_outgoing_unix_fds+0x770>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     806b169 <dbus_set_error+0x69>
lea    0x4(%esi),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     806b169 <dbus_set_error+0x69>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,(%esi)
je     806b24a <dbus_set_error+0x14a>
andb   $0xfe,0x8(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x16f,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1c8aa(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1ca52(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0x170,0x10(%esp)
jmp    806b208 <dbus_set_error+0x108>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,0x4(%esi)
jmp    806b171 <dbus_set_error+0x71>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
mov    0x8(%edx),%ecx
mov    0x10(%edx),%esi
mov    0xc(%edx),%edi
mov    0x4(%edx),%ebp
movzbl (%edx),%edx
add    $0x1,%ecx
andb   $0xfe,0x1(%eax)
mov    %ebp,0x4(%eax)
mov    %dl,(%eax)
mov    %edi,0xc(%eax)
mov    %esi,0x10(%eax)
mov    %ecx,0x8(%eax)
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
mov    0x10(%edx),%ecx
mov    0x8(%edx),%esi
mov    0xc(%edx),%edi
mov    0x4(%edx),%ebp
movzbl (%edx),%edx
add    $0x7,%ecx
andb   $0xfe,0x1(%eax)
add    $0x1,%esi
and    $0xfffffff8,%ecx
mov    %ebp,0x4(%eax)
mov    %dl,(%eax)
mov    %edi,0xc(%eax)
mov    %esi,0x8(%eax)
mov    %ecx,0x10(%eax)
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    0x14(%esp),%edx
mov    0x10(%esp),%eax
mov    0x10(%edx),%esi
mov    0xc(%edx),%edi
mov    0x8(%edx),%ecx
mov    0x4(%edx),%ebp
movzbl (%edx),%edx
mov    %edi,0xc(%eax)
add    $0x1,%ecx
mov    %ebp,0x4(%eax)
mov    %dl,(%eax)
movzbl 0x1(%eax),%edx
mov    %esi,0x10(%eax)
mov    %ecx,0x8(%eax)
movl   $0x7fffffff,0x18(%eax)
and    $0xfffffffe,%edx
or     $0xe,%edx
mov    %dl,0x1(%eax)
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
orb    $0x1,0x1(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    0x8(%esp),%eax
movzbl 0x1(%eax),%edx
mov    0x18(%eax),%ecx
shr    %dl
and    $0x7,%edx
mov    %ecx,%esi
sub    %edx,%esi
mov    %esi,%edx
mov    0xc(%eax),%esi
cmpb   $0x6c,(%eax)
mov    (%esi),%esi
mov    -0x4(%esi,%edx,1),%edx
je     806b377 <dbus_set_error+0x277>
bswap  %edx
add    %ecx,%edx
cmp    %edx,0x10(%eax)
pop    %esi
sete   %al
movzbl %al,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edx
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4cc5c,%ebx
mov    0x10(%edx),%ecx
mov    0xc(%edx),%eax
mov    0x8(%edx),%edi
mov    0x4(%edx),%ebp
movzbl (%edx),%edx
andb   $0xfe,0x1(%esi)
mov    %ebp,0x4(%esi)
mov    %edi,0x8(%esi)
mov    %ecx,0x10(%esi)
mov    %dl,(%esi)
mov    %eax,0xc(%esi)
mov    (%eax),%edx
movzbl (%edx,%ecx,1),%edx
add    $0x1,%ecx
mov    %ecx,0x8(%esi)
mov    %eax,0x4(%esi)
lea    0x1(%edx,%ecx,1),%edx
mov    %edx,0x10(%esi)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x10(%esi),%ecx
mov    %eax,%edx
neg    %edx
lea    -0x1(%eax,%ecx,1),%eax
and    %eax,%edx
mov    %edx,0x10(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edx
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4cbdc,%ebx
mov    0x10(%edx),%ecx
mov    0xc(%edx),%ebp
mov    0x8(%edx),%edi
mov    0x4(%edx),%eax
movzbl (%edx),%edx
mov    %ebp,0xc(%esi)
lea    0x3(%ecx),%ebp
and    $0xfffffffc,%ebp
add    $0x1,%edi
mov    %edi,0x8(%esi)
mov    %dl,(%esi)
movzbl 0x1(%esi),%edx
mov    %eax,0x4(%esi)
movl   $0x7fffffff,0x18(%esi)
and    $0xfffffffe,%edx
or     $0xe,%edx
mov    %dl,0x1(%esi)
lea    0x4(%ebp),%edx
mov    %edx,0x10(%esi)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x10(%esi),%ecx
mov    %eax,%edx
neg    %edx
lea    -0x1(%eax,%ecx,1),%eax
and    %eax,%edx
mov    %ebp,%eax
mov    %edx,0x10(%esi)
mov    %edx,0x18(%esi)
sub    %eax,%edx
movzbl 0x1(%esi),%eax
lea    0x8(%edx,%edx,1),%edx
and    $0xe,%edx
and    $0xfffffff1,%eax
or     %edx,%eax
mov    %al,0x1(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x4(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4cb3f,%ebx
test   %eax,%eax
je     806b52f <dbus_set_error+0x42f>
testb  $0x1,0x2(%esi)
je     806b540 <dbus_set_error+0x440>
mov    (%eax),%ebp
mov    0x8(%esi),%ecx
movzbl 0x0(%ebp,%ecx,1),%edi
cmp    %edx,%edi
je     806b525 <dbus_set_error+0x425>
test   %edi,%edi
je     806b570 <dbus_set_error+0x470>
mov    %edx,(%esp)
mov    %ecx,0x1c(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    %edi,(%esp)
mov    %eax,0x18(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %ecx,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x1c830(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
cmpb   $0x61,0x1(%esi)
je     806b52f <dbus_set_error+0x42f>
addl   $0x1,0x8(%esi)
mov    $0x1,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl %dl,%edx
mov    %edx,0x8(%esp)
mov    0x8(%esi),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807f530 <dbus_shutdown+0x850>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     806b534 <dbus_set_error+0x434>
addl   $0x1,0x8(%esi)
add    $0x2c,%esp
pop    %ebx
mov    $0x1,%al
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
mov    %ecx,0x18(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    0x18(%esp),%ecx
mov    %ebp,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
lea    -0x1c78c(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
cmpb   $0x61,0x1(%esi)
jne    806b52b <dbus_set_error+0x42b>
jmp    806b52f <dbus_set_error+0x42f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4ca45,%ebx
sub    $0x2c,%esp
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%ebp
jne    806b5da <dbus_set_error+0x4da>
jmp    806b628 <dbus_set_error+0x528>
mov    %esi,%ebp
mov    0x1c(%esp),%eax
mov    0x4(%ebp),%esi
cmp    (%eax),%esi
mov    $0x0,%eax
cmove  %eax,%esi
test   %edi,%edi
je     806b611 <dbus_set_error+0x511>
mov    0x8(%ebp),%edx
movzbl (%edi),%ecx
mov    %ecx,0xc(%esp)
mov    0x4(%edx),%ecx
mov    %ecx,0x8(%esp)
mov    (%edx),%edx
mov    %edx,0x4(%esp)
mov    0xc(%edi),%edx
mov    %edx,(%esp)
call   807ddb0 <dbus_watch_handle+0x21f0>
mov    0x8(%ebp),%edx
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    %ebp,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
test   %esi,%esi
jne    806b5d8 <dbus_set_error+0x4d8>
mov    0x1c(%esp),%eax
movl   $0x0,(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4c9b4,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    806b670 <dbus_set_error+0x570>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%edi),%eax
mov    %esi,(%esp)
cltd
shr    $0x1d,%edx
add    %edx,%eax
and    $0x7,%eax
sub    %edx,%eax
mov    %eax,0x10(%esi)
mov    %eax,0x4(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
mov    %eax,%edx
mov    $0x1,%eax
test   %edx,%edx
jne    806b663 <dbus_set_error+0x563>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4c943,%ebx
mov    0x30(%esp),%esi
testb  $0x2,0x2(%eax)
je     806b6f0 <dbus_set_error+0x5f0>
movl   $0x8,0x4(%esp)
mov    0xc(%esi),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   807f770 <dbus_shutdown+0xa90>
mov    0x1c(%esp),%edx
mov    %eax,%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     806b702 <dbus_set_error+0x602>
mov    %esi,%eax
call   806b4b0 <dbus_set_error+0x3b0>
testb  $0x2,0x2(%edi)
jne    806b710 <dbus_set_error+0x610>
mov    $0x1,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%edx
movl   $0x0,0xc(%esp)
lea    0x7(%edx),%eax
and    $0xfffffff8,%eax
sub    %edx,%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807f4b0 <dbus_shutdown+0x7d0>
mov    0x10(%esi),%eax
add    $0x7,%eax
and    $0xfffffff8,%eax
mov    %eax,0x10(%esi)
jmp    806b6fd <dbus_set_error+0x5fd>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
mov    0x14(%esp),%esi
mov    0x10(%esp),%edi
mov    (%esi),%eax
add    %edi,%eax
movzbl (%eax),%edx
cmp    $0x61,%dl
jne    806b773 <dbus_set_error+0x673>
nop
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x61,%dl
je     806b768 <dbus_set_error+0x668>
cmp    $0x28,%dl
mov    $0x1,%ebp
je     806b79d <dbus_set_error+0x69d>
cmp    $0x7b,%dl
mov    $0x1,%ebp
lea    0x1(%eax),%ecx
je     806b7c5 <dbus_set_error+0x6c5>
sub    %edi,%ecx
mov    %ecx,(%esi)
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1,%ebp
mov    %ecx,%eax
movzbl 0x1(%eax),%edx
lea    0x1(%eax),%ecx
cmp    $0x28,%dl
je     806b798 <dbus_set_error+0x698>
cmp    $0x29,%dl
jne    806b79b <dbus_set_error+0x69b>
sub    $0x1,%ebp
jne    806b79b <dbus_set_error+0x69b>
lea    0x2(%eax),%ecx
sub    %edi,%ecx
mov    %ecx,(%esi)
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x1,%ebp
mov    %ecx,%eax
movzbl 0x1(%eax),%edx
lea    0x1(%eax),%ecx
cmp    $0x7b,%dl
je     806b7c0 <dbus_set_error+0x6c0>
cmp    $0x7d,%dl
jne    806b7c3 <dbus_set_error+0x6c3>
sub    $0x1,%ebp
je     806b7b3 <dbus_set_error+0x6b3>
mov    %ecx,%eax
lea    0x0(%esi),%esi
jmp    806b7c5 <dbus_set_error+0x6c5>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x4c80b,%ecx
mov    0x4(%esp),%eax
andb   $0xfe,0x1(%eax)
lea    -0x320(%ecx),%edx
mov    %edx,0x14(%eax)
mov    0x8(%esp),%edx
mov    %dl,(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x4(%eax)
mov    0x10(%esp),%edx
mov    %edx,0x8(%eax)
mov    0x14(%esp),%edx
mov    %edx,0xc(%eax)
mov    0x18(%esp),%edx
mov    %edx,0x10(%eax)
ret
nop
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x4c7cb,%ecx
mov    0x4(%esp),%eax
movb   $0x6c,(%eax)
andb   $0xfe,0x1(%eax)
lea    -0x338(%ecx),%edx
mov    %edx,0x14(%eax)
mov    0x8(%esp),%edx
movl   $0x0,0xc(%eax)
movl   $0x7fffffff,0x10(%eax)
mov    %edx,0x4(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x8(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4c782,%ebx
testb  $0x1,0x1(%esi)
jne    806b8b8 <dbus_set_error+0x7b8>
mov    0x14(%esi),%eax
mov    0x10(%eax),%eax
test   %eax,%eax
je     806b89d <dbus_set_error+0x79d>
mov    %esi,(%esp)
call   *%eax
test   %eax,%eax
jne    806b8b8 <dbus_set_error+0x7b8>
mov    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4c733,%ebx
mov    0x8(%eax),%ecx
lea    0x1(%ecx),%edx
mov    %edx,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    0xc(%edx),%eax
mov    (%eax),%eax
add    0x10(%edx),%eax
mov    0x8(%esp),%edx
mov    %eax,(%edx)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4c6d6,%ebx
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
movl   $0x0,0x14(%esp)
movzbl (%esi),%edx
mov    %edx,0x10(%esp)
mov    0x34(%esp),%edx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    0x10(%esi),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807e7e0 <dbus_watch_handle+0x2c20>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%eax
movzbl 0x1(%eax),%edx
mov    0x18(%eax),%ecx
shr    %dl
and    $0x7,%edx
sub    %edx,%ecx
cmpb   $0x6c,(%eax)
mov    0xc(%eax),%eax
mov    (%eax),%eax
mov    -0x4(%eax,%ecx,1),%eax
je     806b998 <dbus_set_error+0x898>
bswap  %eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
repz ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4c650,%ebx
mov    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
movzbl 0x1(%esi),%edx
shr    %dl
and    $0x7,%edx
mov    %eax,%ecx
mov    0x18(%esi),%eax
mov    %eax,%edi
sub    %edx,%edi
mov    %edi,%edx
mov    0xc(%esi),%edi
cmpb   $0x6c,(%esi)
mov    (%edi),%ebp
mov    -0x4(%ebp,%edx,1),%edx
je     806b9f4 <dbus_set_error+0x8f4>
bswap  %edx
mov    0x10(%esi),%esi
add    %edx,%eax
sub    %esi,%eax
je     806ba18 <dbus_set_error+0x918>
add    (%edi),%esi
mov    0x34(%esp),%edi
mov    %esi,(%edi)
cltd
idiv   %ecx
mov    0x38(%esp),%edx
mov    %eax,(%edx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x34(%esp),%edi
movl   $0x0,(%edi)
jmp    806ba05 <dbus_set_error+0x905>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4c5c1,%ebx
mov    0x24(%esp),%edi
mov    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
cmp    $0x65,%eax
je     806bae8 <dbus_set_error+0x9e8>
jle    806bab0 <dbus_set_error+0x9b0>
cmp    $0x72,%eax
je     806ba98 <dbus_set_error+0x998>
cmp    $0x76,%eax
xchg   %ax,%ax
jne    806bad0 <dbus_set_error+0x9d0>
mov    0x14(%esi),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     806bb30 <dbus_set_error+0xa30>
mov    0x14(%edi),%eax
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   *0xc(%eax)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esi),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     806bb20 <dbus_set_error+0xa20>
lea    -0x368(%ebx),%eax
mov    %eax,0x14(%edi)
jmp    806ba83 <dbus_set_error+0x983>
lea    0x0(%esi),%esi
cmp    $0x61,%eax
jne    806bad0 <dbus_set_error+0x9d0>
mov    0x14(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
je     806bb10 <dbus_set_error+0xa10>
lea    -0x3c8(%ebx),%eax
mov    %eax,0x14(%edi)
jmp    806ba83 <dbus_set_error+0x983>
lea    0x0(%esi),%esi
test   %eax,%eax
jne    806ba80 <dbus_set_error+0x980>
lea    -0x1c6c8(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    806ba80 <dbus_set_error+0x980>
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esi),%eax
mov    0x8(%eax),%ecx
test   %ecx,%ecx
je     806bb00 <dbus_set_error+0xa00>
lea    -0x398(%ebx),%eax
mov    %eax,0x14(%edi)
jmp    806ba83 <dbus_set_error+0x983>
lea    0x0(%esi),%esi
lea    -0x380(%ebx),%eax
mov    %eax,0x14(%edi)
jmp    806ba83 <dbus_set_error+0x983>
xchg   %ax,%ax
lea    -0x3b0(%ebx),%eax
mov    %eax,0x14(%edi)
jmp    806ba83 <dbus_set_error+0x983>
xchg   %ax,%ax
lea    -0x350(%ebx),%eax
mov    %eax,0x14(%edi)
jmp    806ba83 <dbus_set_error+0x983>
xchg   %ax,%ax
lea    -0x3e0(%ebx),%eax
mov    %eax,0x14(%edi)
jmp    806ba83 <dbus_set_error+0x983>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4c4b6,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
xor    %edx,%edx
test   %eax,%eax
je     806bb7e <dbus_set_error+0xa7e>
mov    0x14(%esi),%edx
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   *0x14(%edx)
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x4c460,%ebx
mov    0x50(%esp),%esi
cmp    $0x65,%edi
je     806bc38 <dbus_set_error+0xb38>
jg     806bc18 <dbus_set_error+0xb18>
cmp    $0x61,%edi
jne    806bc22 <dbus_set_error+0xb22>
mov    0x14(%esi),%eax
mov    0x8(%eax),%edx
test   %edx,%edx
jne    806bbf6 <dbus_set_error+0xaf6>
mov    0x8(%esi),%eax
movzbl (%esi),%edi
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
lea    0x10(%esi),%edx
mov    %edx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807e690 <dbus_watch_handle+0x2ad0>
lea    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806b750 <dbus_set_error+0x650>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x72,%edi
je     806bc38 <dbus_set_error+0xb38>
cmp    $0x76,%edi
je     806bc38 <dbus_set_error+0xb38>
mov    0x14(%esi),%eax
mov    0x8(%eax),%eax
test   %eax,%eax
je     806bc90 <dbus_set_error+0xb90>
addl   $0x1,0x8(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x14(%esi),%eax
mov    0x8(%eax),%ebp
test   %ebp,%ebp
je     806bc47 <dbus_set_error+0xb47>
cmp    $0x76,%edi
je     806bc2c <dbus_set_error+0xb2c>
lea    0x14(%esp),%ebp
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   806ba30 <dbus_set_error+0x930>
nop
mov    %ebp,(%esp)
call   806bb40 <dbus_set_error+0xa40>
test   %eax,%eax
jne    806bc58 <dbus_set_error+0xb58>
mov    0x14(%esi),%eax
mov    0x8(%eax),%ecx
test   %ecx,%ecx
jne    806bc75 <dbus_set_error+0xb75>
mov    0x24(%esp),%eax
mov    %eax,0x10(%esi)
cmp    $0x76,%edi
je     806bc2c <dbus_set_error+0xb2c>
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esi)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x10(%esi),%eax
mov    %eax,0xc(%esp)
movzbl (%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807e9a0 <dbus_watch_handle+0x2de0>
jmp    806bc2c <dbus_set_error+0xb2c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806bb90 <dbus_set_error+0xa90>
mov    0x4(%esi),%edx
mov    0x8(%esi),%eax
mov    (%edx),%edx
cmpb   $0x7d,(%edx,%eax,1)
jne    806bcf0 <dbus_set_error+0xbf0>
orb    $0x1,0x1(%esi)
add    $0x1,%eax
mov    %eax,0x8(%esi)
add    $0x18,%esp
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806bb90 <dbus_set_error+0xa90>
mov    0x4(%esi),%edx
mov    0x8(%esi),%eax
mov    (%edx),%edx
cmpb   $0x29,(%edx,%eax,1)
jne    806bd30 <dbus_set_error+0xc30>
orb    $0x1,0x1(%esi)
add    $0x1,%eax
mov    %eax,0x8(%esi)
add    $0x18,%esp
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4c2b0,%ebx
movzbl 0x1(%esi),%eax
mov    0x18(%esi),%ebp
mov    0xc(%esi),%edx
shr    %al
and    $0x7,%eax
mov    %ebp,%ecx
mov    (%edx),%edx
sub    %eax,%ecx
cmpb   $0x6c,(%esi)
mov    -0x4(%edx,%ecx,1),%eax
je     806bd76 <dbus_set_error+0xc76>
bswap  %eax
add    %eax,%ebp
mov    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
cmp    $0x65,%eax
je     806be30 <dbus_set_error+0xd30>
jg     806bde0 <dbus_set_error+0xce0>
cmp    $0x61,%eax
jne    806bdea <dbus_set_error+0xcea>
mov    0x8(%esi),%eax
movzbl (%esi),%edi
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
lea    0x10(%esi),%edx
mov    %edx,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807e690 <dbus_watch_handle+0x2ad0>
mov    0x10(%esi),%eax
cmp    %eax,%ebp
je     806be12 <dbus_set_error+0xd12>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x72,%eax
je     806be30 <dbus_set_error+0xd30>
cmp    $0x76,%eax
je     806be30 <dbus_set_error+0xd30>
lea    0x10(%esi),%eax
mov    %eax,0xc(%esp)
movzbl (%esi),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807e9a0 <dbus_watch_handle+0x2de0>
mov    0x10(%esi),%eax
cmp    %eax,%ebp
jne    806bdd3 <dbus_set_error+0xcd3>
lea    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806b750 <dbus_set_error+0x650>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x14(%esp),%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806ba30 <dbus_set_error+0x930>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
test   %eax,%eax
jne    806be40 <dbus_set_error+0xd40>
mov    0x24(%esp),%eax
mov    %eax,0x10(%esi)
jmp    806bdcf <dbus_set_error+0xccf>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4c193,%ebx
mov    (%eax),%edx
mov    %edx,0x14(%esp)
mov    0x4(%eax),%edx
mov    %edx,0x18(%esp)
mov    0x8(%eax),%edx
mov    %edx,0x1c(%esp)
mov    0xc(%eax),%edx
mov    %edx,0x20(%esp)
mov    0x10(%eax),%edx
mov    %edx,0x24(%esp)
mov    0x14(%eax),%edx
mov    0x18(%eax),%eax
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
lea    0x14(%esp),%eax
mov    %eax,(%esp)
call   806bb40 <dbus_set_error+0xa40>
add    $0x38,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x4c12e,%ebx
mov    0x4(%eax),%ecx
mov    %ecx,(%edx)
mov    0x38(%esp),%edx
mov    0x8(%eax),%ecx
mov    %ecx,(%edx)
mov    0x8(%eax),%esi
lea    0x1c(%esp),%edx
mov    0x4(%eax),%eax
mov    %edx,0x4(%esp)
mov    %esi,0x1c(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   806b750 <dbus_set_error+0x650>
mov    0x1c(%esp),%eax
mov    0x3c(%esp),%edx
sub    %esi,%eax
mov    %eax,(%edx)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
movb   $0x0,0x1(%eax)
mov    %dl,(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x4(%eax)
mov    0x10(%esp),%edx
mov    %edx,0x8(%eax)
mov    0x14(%esp),%edx
mov    %edx,0xc(%eax)
mov    0x18(%esp),%edx
mov    %edx,0x10(%eax)
movzbl 0x2(%eax),%edx
and    $0xfffffffe,%edx
or     $0x2,%edx
mov    %dl,0x2(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4c,%esp
mov    0x10(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4c08d,%ebx
mov    0x6c(%esp),%edi
mov    %eax,0x14(%esp)
mov    0xc(%esi),%eax
mov    %eax,0x10(%esp)
mov    0x8(%esi),%eax
mov    %eax,0xc(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x8(%esp)
movzbl (%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806bf20 <dbus_set_error+0xe20>
mov    %ebp,%eax
mov    %al,0x1(%edi)
testb  $0x1,0x2(%esi)
jne    806bfb8 <dbus_set_error+0xeb8>
cmp    $0x61,%al
jne    806c090 <dbus_set_error+0xf90>
orb    $0x1,0x2(%edi)
movzbl 0x2(%esi),%edx
movzbl 0x2(%edi),%eax
and    $0x2,%edx
and    $0xfffffffd,%eax
or     %edx,%eax
mov    %al,0x2(%edi)
testb  $0x1,0x2(%esi)
je     806c037 <dbus_set_error+0xf37>
mov    0x4(%esi),%eax
test   %eax,%eax
je     806c037 <dbus_set_error+0xf37>
mov    0x8(%esi),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
mov    %eax,%edx
movzbl 0x1(%edi),%eax
cmp    %eax,%edx
je     806c037 <dbus_set_error+0xf37>
test   %edx,%edx
mov    0x8(%esi),%ecx
jne    806c2d0 <dbus_set_error+0x11d0>
mov    0x4(%esi),%edx
mov    %ecx,0x28(%esp)
mov    (%edx),%edx
mov    %eax,(%esp)
mov    %edx,0x24(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    0x28(%esp),%ecx
mov    0x24(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x1c5e8(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
cmp    $0x65,%ebp
je     806c200 <dbus_set_error+0x1100>
jle    806c0f0 <dbus_set_error+0xff0>
cmp    $0x72,%ebp
je     806c0a8 <dbus_set_error+0xfa8>
cmp    $0x76,%ebp
xchg   %ax,%ax
jne    806c0e0 <dbus_set_error+0xfe0>
testb  $0x2,0x2(%esi)
jne    806c248 <dbus_set_error+0x1148>
mov    $0x76,%edx
mov    %esi,%eax
call   806b4b0 <dbus_set_error+0x3b0>
test   %eax,%eax
je     806c0e0 <dbus_set_error+0xfe0>
testb  $0x2,0x2(%esi)
jne    806c3d0 <dbus_set_error+0x12d0>
movl   $0x0,0x4(%edi)
mov    $0x1,%eax
movl   $0xffffffff,0x8(%edi)
jmp    806c0b7 <dbus_set_error+0xfb7>
nop
cmp    $0x76,%al
je     806bfb8 <dbus_set_error+0xeb8>
andb   $0xfe,0x2(%edi)
jmp    806bfbc <dbus_set_error+0xebc>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    $0x28,%edx
mov    %esi,%eax
call   806b6b0 <dbus_set_error+0x5b0>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x68(%esp),%ecx
mov    %eax,(%esp)
lea    0x1(%ecx),%edx
mov    %edx,0x4(%esp)
call   807f770 <dbus_shutdown+0xa90>
test   %eax,%eax
jne    806c380 <dbus_set_error+0x1280>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x61,%ebp
jne    806c0e0 <dbus_set_error+0xfe0>
cmpb   $0x61,0x1(%esi)
movl   $0x0,0x3c(%esp)
je     806c270 <dbus_set_error+0x1170>
testb  $0x2,0x2(%esi)
jne    806c218 <dbus_set_error+0x1118>
mov    0x4(%esi),%eax
test   %eax,%eax
je     806c127 <dbus_set_error+0x1027>
mov    0x8(%edi),%eax
add    $0x1,%eax
mov    %eax,0x8(%edi)
mov    %eax,0x1c(%edi)
mov    0x4(%esi),%eax
movzbl 0x2(%esi),%edx
test   $0x1,%dl
je     806c0c0 <dbus_set_error+0xfc0>
test   %eax,%eax
je     806c144 <dbus_set_error+0x1044>
cmpb   $0x61,0x1(%esi)
je     806c144 <dbus_set_error+0x1044>
mov    0x68(%esp),%eax
add    $0x1,%eax
add    %eax,0x8(%esi)
and    $0x2,%edx
je     806c328 <dbus_set_error+0x1228>
mov    0x10(%edi),%edx
mov    0x70(%esp),%ecx
lea    0x3(%edx),%eax
and    $0xfffffffc,%eax
test   %ecx,%ecx
mov    %eax,0x18(%edi)
jne    806c340 <dbus_set_error+0x1240>
testb  $0x2,0x2(%edi)
jne    806c4a4 <dbus_set_error+0x13a4>
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x10(%edi),%edx
mov    %eax,%esi
neg    %esi
lea    -0x1(%edx,%eax,1),%eax
and    %eax,%esi
cmp    %esi,%edx
je     806c4d6 <dbus_set_error+0x13d6>
mov    %esi,%eax
sub    %edx,%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   807f4b0 <dbus_shutdown+0x7d0>
mov    0x70(%esp),%edx
mov    $0x1,%eax
mov    %esi,0x10(%edi)
mov    %esi,0x14(%edi)
test   %edx,%edx
je     806c0b7 <dbus_set_error+0xfb7>
mov    %esi,%edx
mov    0xc(%edi),%eax
cmpb   $0x6c,(%edi)
mov    (%eax),%ecx
mov    0x18(%edi),%eax
mov    (%ecx,%eax,1),%eax
je     806c1ea <dbus_set_error+0x10ea>
bswap  %eax
add    %edx,%eax
mov    %eax,0x10(%edi)
mov    $0x1,%eax
jmp    806c0b7 <dbus_set_error+0xfb7>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
mov    %esi,%eax
mov    $0x7b,%edx
call   806b6b0 <dbus_set_error+0x5b0>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x70(%esp),%ebp
test   %ebp,%ebp
jne    806c111 <dbus_set_error+0x1011>
movl   $0xb,0x4(%esp)
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   807f770 <dbus_shutdown+0xa90>
test   %eax,%eax
jne    806c111 <dbus_set_error+0x1011>
xor    %eax,%eax
jmp    806c0e2 <dbus_set_error+0xfe2>
xchg   %ax,%ax
mov    0x68(%esp),%eax
add    $0x9,%eax
mov    %eax,0x4(%esp)
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   807f770 <dbus_shutdown+0xa90>
test   %eax,%eax
jne    806c060 <dbus_set_error+0xf60>
xor    %eax,%eax
jmp    806c0e2 <dbus_set_error+0xfe2>
lea    0x0(%esi),%esi
mov    0x4(%esi),%eax
test   %eax,%eax
je     806c107 <dbus_set_error+0x1007>
mov    0x1c(%esi),%ecx
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
lea    0x1(%ecx),%edx
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   80803f0 <dbus_shutdown+0x1710>
test   %eax,%eax
jne    806c107 <dbus_set_error+0x1007>
mov    0x60(%esp),%eax
mov    (%eax),%eax
add    0x64(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1c554(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    806c107 <dbus_set_error+0x1007>
xchg   %ax,%ax
mov    0x4(%esi),%eax
mov    %ecx,0x2c(%esp)
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x24(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    %eax,0x28(%esp)
movzbl 0x1(%edi),%eax
mov    %eax,(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    0x2c(%esp),%ecx
mov    0x28(%esp),%edx
mov    %ecx,0x10(%esp)
mov    0x24(%esp),%ecx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x1c680(%ebx),%eax
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    806c037 <dbus_set_error+0xf37>
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%edi),%eax
movl   $0xffffffff,0x18(%edi)
mov    %eax,0x14(%edi)
mov    $0x1,%eax
jmp    806c0b7 <dbus_set_error+0xfb7>
nop
mov    0x64(%esp),%eax
add    $0x4,%edx
mov    %edx,0x10(%edi)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x10(%edi),%edx
mov    %eax,%esi
neg    %esi
lea    -0x1(%edx,%eax,1),%eax
and    %eax,%esi
cmp    %esi,%edx
jne    806c1bf <dbus_set_error+0x10bf>
mov    %edx,0x14(%edi)
jmp    806c1d8 <dbus_set_error+0x10d8>
nop
movl   $0x61,0x8(%esp)
mov    0x8(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807f530 <dbus_shutdown+0x850>
mov    0x1c(%edi),%eax
mov    %eax,0x10(%esp)
mov    0x4(%edi),%eax
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
movzbl 0x2(%esi),%edx
mov    0x4(%esi),%eax
jmp    806c130 <dbus_set_error+0x1030>
movzbl 0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%edi),%eax
mov    %eax,0x4(%esp)
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   807f530 <dbus_shutdown+0x850>
mov    0x10(%edi),%eax
mov    0xc(%edi),%edx
add    $0x1,%eax
mov    %edx,0x4(%edi)
mov    %eax,0x10(%edi)
mov    %eax,0x8(%edi)
mov    %eax,0x10(%esp)
mov    0x68(%esp),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
mov    0x68(%esp),%eax
add    0x10(%edi),%eax
mov    %eax,0x10(%edi)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   807f530 <dbus_shutdown+0x850>
mov    0x64(%esp),%eax
addl   $0x1,0x10(%edi)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    %eax,%esi
mov    0x10(%edi),%eax
mov    %esi,%ebp
neg    %ebp
movl   $0x0,0xc(%esp)
lea    -0x1(%esi,%eax,1),%edx
and    %ebp,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   807f4b0 <dbus_shutdown+0x7d0>
mov    0x10(%edi),%eax
lea    -0x1(%esi,%eax,1),%eax
and    %ebp,%eax
mov    %eax,0x10(%edi)
mov    $0x1,%eax
jmp    806c0b7 <dbus_set_error+0xfb7>
lea    0x10(%edi),%eax
mov    %eax,0x14(%esp)
movzbl (%edi),%eax
movl   $0x75,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x10(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xc(%edi),%eax
mov    %eax,(%esp)
call   807e180 <dbus_watch_handle+0x25c0>
jmp    806c16f <dbus_set_error+0x106f>
mov    %edx,0x14(%edi)
mov    $0x1,%eax
jmp    806c0b7 <dbus_set_error+0xfb7>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x3c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4bb03,%ebx
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806bf20 <dbus_set_error+0xe20>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
je     806c550 <dbus_set_error+0x1450>
repz ret
lea    0x0(%esi),%esi
mov    0x8(%esp),%edx
mov    %edx,0x4(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x8(%eax)
ret
nop
mov    0x4(%esp),%eax
movl   $0x0,0x4(%eax)
movl   $0xffffffff,0x8(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x44(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4ba72,%ebx
mov    0x30(%esp),%esi
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   806bf20 <dbus_set_error+0xe20>
orb    $0x1,0x2(%esi)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %edi
xor    %eax,%eax
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x48(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4ba1f,%ebx
mov    0x4c(%esp),%edi
test   %esi,%esi
je     806c60b <dbus_set_error+0x150b>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %edi,0x2c(%esp)
mov    %eax,(%esp)
call   806b750 <dbus_set_error+0x650>
mov    0x2c(%esp),%eax
sub    %edi,%eax
mov    0x50(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0xc(%esp)
mov    0x44(%esp),%edx
movl   $0x0,0x10(%esp)
call   806bf60 <dbus_set_error+0xe60>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %edi
xor    %eax,%eax
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4b9af,%ebx
mov    0x48(%esp),%edi
test   %esi,%esi
je     806c67b <dbus_set_error+0x157b>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %edi,0x2c(%esp)
mov    %eax,(%esp)
call   806b750 <dbus_set_error+0x650>
mov    0x2c(%esp),%eax
sub    %edi,%eax
mov    0x4c(%esp),%edx
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0xc(%esp)
mov    $0x61,%edx
movl   $0x1,0x10(%esp)
call   806bf60 <dbus_set_error+0xe60>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4b941,%ebx
mov    0x20(%esp),%edi
movzbl 0x1(%esi),%eax
cmp    $0x72,%al
je     806c760 <dbus_set_error+0x1660>
cmp    $0x65,%al
je     806c778 <dbus_set_error+0x1678>
cmp    $0x61,%al
je     806c730 <dbus_set_error+0x1630>
mov    0x4(%edi),%eax
test   %eax,%eax
je     806c700 <dbus_set_error+0x1600>
movzbl 0x1(%esi),%eax
cmp    $0x65,%al
jne    806c718 <dbus_set_error+0x1618>
movzbl 0x1(%edi),%eax
cmp    $0x72,%al
je     806c724 <dbus_set_error+0x1624>
cmp    $0x65,%al
je     806c724 <dbus_set_error+0x1624>
test   %al,%al
je     806c724 <dbus_set_error+0x1624>
mov    0x10(%esi),%eax
mov    %eax,0x10(%edi)
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
cmp    $0x72,%al
jne    806c700 <dbus_set_error+0x1600>
movzbl 0x1(%edi),%eax
cmp    $0x72,%al
jne    806c6f8 <dbus_set_error+0x15f8>
mov    0x8(%esi),%eax
mov    %eax,0x8(%edi)
jmp    806c700 <dbus_set_error+0x1600>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esi),%eax
test   %eax,%eax
js     806c6e1 <dbus_set_error+0x15e1>
movzbl (%esi),%edx
mov    %edx,0xc(%esp)
mov    0x10(%esi),%edx
sub    0x14(%esi),%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807ddb0 <dbus_watch_handle+0x21f0>
jmp    806c6e1 <dbus_set_error+0x15e1>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x29,%edx
mov    %esi,%eax
call   806b4b0 <dbus_set_error+0x3b0>
test   %eax,%eax
jne    806c6e1 <dbus_set_error+0x15e1>
xor    %eax,%eax
jmp    806c70b <dbus_set_error+0x160b>
mov    $0x7d,%edx
mov    %esi,%eax
call   806b4b0 <dbus_set_error+0x3b0>
test   %eax,%eax
jne    806c6e1 <dbus_set_error+0x15e1>
xor    %eax,%eax
jmp    806c70b <dbus_set_error+0x160b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4b852,%ebx
movzbl 0x2(%esi),%eax
test   $0x1,%al
jne    806c7db <dbus_set_error+0x16db>
mov    0x4(%esi),%edx
test   %edx,%edx
je     806c7db <dbus_set_error+0x16db>
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   807f770 <dbus_shutdown+0xa90>
test   %eax,%eax
je     806c82c <dbus_set_error+0x172c>
movzbl 0x2(%esi),%eax
test   $0x2,%al
jne    806c7f8 <dbus_set_error+0x16f8>
mov    0x34(%esp),%edx
mov    %esi,%eax
call   806b4b0 <dbus_set_error+0x3b0>
add    $0x24,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x10(%esi),%eax
mov    %eax,0x14(%esp)
movzbl (%esi),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%esi),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807e180 <dbus_watch_handle+0x25c0>
test   %eax,%eax
jne    806c7df <dbus_set_error+0x16df>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    %eax,0x1c(%esp)
mov    0xc0(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4b7a4,%ebx
mov    %eax,0x24(%esp)
mov    0xcc(%esp),%eax
mov    %eax,0x38(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
lea    0x94(%esp),%eax
mov    %eax,0x3c(%esp)
jmp    806cae8 <dbus_set_error+0x19e8>
cmpb   $0x0,0x2e(%esp)
je     806cb20 <dbus_set_error+0x1a20>
mov    0x24(%esp),%eax
movl   $0x0,0x20(%esp)
mov    0x10(%eax),%eax
cmp    %eax,0x10(%edi)
je     806cc28 <dbus_set_error+0x1b28>
lea    0x58(%esp),%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   806ba30 <dbus_set_error+0x930>
cmp    $0x61,%ebp
movl   $0xffffffff,0x34(%esp)
movl   $0xffffffff,0x30(%esp)
je     806cc00 <dbus_set_error+0x1b00>
lea    0x54(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x50(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806bec0 <dbus_set_error+0xdc0>
mov    0x20(%esp),%eax
or     0xd0(%esp),%eax
mov    %eax,0x28(%esp)
jne    806cb30 <dbus_set_error+0x1a30>
cmpb   $0x0,0x2e(%esp)
je     806cb30 <dbus_set_error+0x1a30>
mov    0x1c(%esp),%eax
movzbl 0x2(%eax),%eax
test   $0x2,%al
jne    806cb38 <dbus_set_error+0x1a38>
mov    0x24(%esp),%edx
mov    0x10(%edx),%ecx
cmp    %ecx,0x68(%esp)
jle    806cb38 <dbus_set_error+0x1a38>
mov    0x1c(%esp),%ecx
or     $0x2,%eax
movb   $0x1,0x2f(%esp)
mov    %al,0x2(%ecx)
lea    0x0(%esi,%eiz,1),%esi
lea    0x74(%esp),%eax
mov    %ebp,%edx
mov    %eax,0x20(%esp)
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
mov    %eax,(%esp)
mov    0x1c(%esp),%eax
call   806bf60 <dbus_set_error+0xe60>
test   %eax,%eax
je     806cbc8 <dbus_set_error+0x1ac8>
mov    0x38(%esp),%ecx
xor    %eax,%eax
mov    0x28(%esp),%edx
mov    %ecx,0xc(%esp)
mov    0xc8(%esp),%ecx
test   %edx,%edx
mov    0xc4(%esp),%edx
setne  %al
mov    %eax,0x10(%esp)
mov    0x20(%esp),%eax
mov    %ecx,0x8(%esp)
mov    0x24(%esp),%ecx
mov    %edx,0x4(%esp)
mov    %esi,%edx
mov    %ecx,(%esp)
call   806c840 <dbus_set_error+0x1740>
test   %eax,%eax
je     806cbc8 <dbus_set_error+0x1ac8>
mov    0x28(%esp),%esi
test   %esi,%esi
jne    806cb48 <dbus_set_error+0x1a48>
cmpb   $0x0,0x2e(%esp)
je     806cb48 <dbus_set_error+0x1a48>
mov    0x1c(%esp),%eax
movzbl 0x2(%eax),%eax
test   $0x2,%al
jne    806cb50 <dbus_set_error+0x1a50>
mov    0x24(%esp),%edx
mov    0x10(%edx),%ecx
cmp    %ecx,0x68(%esp)
jle    806cb50 <dbus_set_error+0x1a50>
mov    0x1c(%esp),%edx
or     $0x2,%eax
mov    $0x1,%esi
mov    %al,0x2(%edx)
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806c6b0 <dbus_set_error+0x15b0>
test   %eax,%eax
je     806cbc8 <dbus_set_error+0x1ac8>
cmpb   $0x0,0x2e(%esp)
je     806cae0 <dbus_set_error+0x19e0>
cmpb   $0x1,0x2f(%esp)
je     806cae0 <dbus_set_error+0x19e0>
cmp    $0x61,%ebp
jne    806cae0 <dbus_set_error+0x19e0>
mov    %esi,%eax
test   %al,%al
je     806cae0 <dbus_set_error+0x19e0>
mov    0x38(%esp),%ecx
test   %ecx,%ecx
je     806cae0 <dbus_set_error+0x19e0>
mov    0x24(%esp),%eax
mov    0xc8(%esp),%esi
sub    0x34(%esp),%esi
add    0x10(%eax),%esi
mov    0xc(%edi),%eax
add    0x84(%esp),%esi
sub    0x88(%esp),%esi
cmpb   $0x6c,(%edi)
mov    (%eax),%eax
je     806cc58 <dbus_set_error+0x1b58>
mov    0x30(%esp),%edx
mov    (%eax,%edx,1),%eax
bswap  %eax
cmp    %esi,%eax
je     806cae0 <dbus_set_error+0x19e0>
movl   $0x8,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%ebp
je     806cbc8 <dbus_set_error+0x1ac8>
mov    0x30(%esp),%eax
mov    %esi,0x4(%ebp)
mov    %eax,0x0(%ebp)
mov    0x38(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     806cc68 <dbus_set_error+0x1b68>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
mov    %edi,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
mov    %eax,%ebp
je     806cc78 <dbus_set_error+0x1b78>
mov    %ebp,(%esp)
call   8077c70 <dbus_type_is_container>
test   %eax,%eax
je     806cb60 <dbus_set_error+0x1a60>
mov    0x24(%esp),%ecx
mov    0xd0(%esp),%esi
test   %ecx,%ecx
setne  0x2e(%esp)
test   %esi,%esi
je     806c890 <dbus_set_error+0x1790>
movl   $0x0,0x20(%esp)
jmp    806c8b3 <dbus_set_error+0x17b3>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
movzbl 0x2(%eax),%eax
shr    %al
mov    %al,0x2f(%esp)
andb   $0x1,0x2f(%esp)
jmp    806c950 <dbus_set_error+0x1850>
mov    0x1c(%esp),%eax
movzbl 0x2(%eax),%eax
shr    %al
mov    %eax,%esi
and    $0x1,%esi
jmp    806ca20 <dbus_set_error+0x1920>
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806b920 <dbus_set_error+0x820>
mov    0xd0(%esp),%edx
test   %edx,%edx
jne    806cba8 <dbus_set_error+0x1aa8>
mov    0x24(%esp),%eax
test   %eax,%eax
je     806cba8 <dbus_set_error+0x1aa8>
mov    0x1c(%esp),%eax
movzbl 0x2(%eax),%eax
test   $0x2,%al
jne    806cba8 <dbus_set_error+0x1aa8>
mov    0x24(%esp),%ecx
mov    0x10(%ecx),%edx
cmp    %edx,0x10(%edi)
jle    806cba8 <dbus_set_error+0x1aa8>
mov    0x1c(%esp),%ecx
or     $0x2,%eax
mov    %al,0x2(%ecx)
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
jne    806cae0 <dbus_set_error+0x19e0>
mov    0x38(%esp),%eax
xor    %esi,%esi
test   %eax,%eax
je     806cbd9 <dbus_set_error+0x1ad9>
xor    %edx,%edx
call   806b5b0 <dbus_set_error+0x4b0>
mov    0x9c(%esp),%edi
xor    %gs:0x14,%edi
mov    %esi,%eax
jne    806cc82 <dbus_set_error+0x1b82>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x70(%esp),%eax
mov    %eax,%edx
mov    %eax,0x34(%esp)
movzbl 0x59(%esp),%eax
shr    %al
and    $0x7,%eax
sub    %eax,%edx
mov    %edx,%eax
sub    $0x4,%eax
mov    %eax,0x30(%esp)
jmp    806c8dc <dbus_set_error+0x17dc>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    0x4(%eax),%eax
cmp    %eax,0x4(%edi)
jne    806c8b3 <dbus_set_error+0x17b3>
mov    0x24(%esp),%eax
mov    0x8(%eax),%eax
cmp    %eax,0x8(%edi)
sete   %al
movzbl %al,%eax
mov    %eax,0x20(%esp)
jmp    806c8b3 <dbus_set_error+0x17b3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%ecx
mov    (%eax,%ecx,1),%eax
jmp    806caa0 <dbus_set_error+0x19a0>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
jmp    806cbc8 <dbus_set_error+0x1ac8>
lea    0x0(%esi),%esi
mov    $0x1,%esi
jmp    806cbd9 <dbus_set_error+0x1ad9>
call   80962d0 <dbus_bus_remove_match+0x50a0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4c,%esp
mov    (%eax),%eax
mov    0x4(%esi),%ecx
mov    0x8(%esi),%ebp
mov    0x10(%esi),%edi
mov    %eax,0x20(%esp)
mov    0xc(%esi),%eax
mov    %ecx,0x24(%esp)
call   804e750 <sidput@plt+0xbf0>
add    $0x4b34c,%ebx
mov    %ebp,0x28(%esp)
mov    %eax,0x14(%esp)
mov    %eax,0x2c(%esp)
mov    0x14(%esi),%eax
mov    %edi,0x30(%esp)
mov    %eax,0x34(%esp)
mov    0x18(%esi),%eax
mov    %eax,0x38(%esp)
mov    0x1c(%esi),%eax
mov    %eax,0x3c(%esp)
mov    0x4(%ecx),%eax
mov    %eax,0x1c(%esp)
mov    0x14(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,0x18(%esp)
movzbl 0x2(%esi),%eax
mov    %eax,%ecx
shr    %cl
and    $0x1,%ecx
cmpl   $0x0,0x60(%esp)
je     806cd09 <dbus_set_error+0x1c09>
and    $0xfffffffd,%eax
mov    %al,0x2(%esi)
mov    0x6c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   806c840 <dbus_set_error+0x1740>
mov    0x14(%esp),%ecx
test   %eax,%eax
jne    806cda0 <dbus_set_error+0x1ca0>
testb  $0x1,0x2(%esi)
je     806cdc0 <dbus_set_error+0x1cc0>
mov    0xc(%esi),%edx
mov    0x4(%edx),%eax
sub    0x18(%esp),%eax
mov    %edi,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   807fac0 <dbus_shutdown+0xde0>
mov    0x20(%esp),%eax
mov    %ebp,0x8(%esi)
mov    %edi,0x10(%esi)
mov    %eax,(%esi)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x34(%esp),%eax
mov    %eax,0x14(%esi)
mov    0x38(%esp),%eax
mov    %eax,0x18(%esi)
mov    0x3c(%esp),%eax
mov    %eax,0x1c(%esi)
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2(%esi),%eax
and    $0x1,%ecx
add    %ecx,%ecx
and    $0xfffffffd,%eax
or     %ecx,%eax
mov    %al,0x2(%esi)
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x4(%esi),%edx
mov    0x4(%edx),%eax
sub    0x1c(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
call   807fac0 <dbus_shutdown+0xde0>
jmp    806cd49 <dbus_set_error+0x1c49>
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x6c,%esp
mov    0x4(%esi),%ecx
mov    0x80(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4b206,%ebx
mov    %ecx,0x18(%esp)
mov    0xc(%eax),%ebp
mov    0x4(%eax),%ecx
mov    (%eax),%edx
mov    %ebp,0x30(%esp)
mov    0x10(%eax),%ebp
mov    %ecx,0x1c(%esp)
mov    %ecx,0x28(%esp)
mov    0x8(%eax),%ecx
mov    %edx,0x24(%esp)
movzbl %dl,%edx
mov    %ebp,0x34(%esp)
mov    0x14(%eax),%ebp
mov    0x18(%eax),%eax
mov    %ecx,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %ebp,0x38(%esp)
lea    0x20(%esp),%ebp
mov    %eax,0x3c(%esp)
mov    0x18(%esp),%eax
mov    %esi,0x10(%esp)
mov    %ecx,0x2c(%esp)
mov    %eax,0x14(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   806c580 <dbus_set_error+0x1480>
lea    0x24(%esp),%edx
mov    %ebp,0xc(%esp)
mov    0x4(%esi),%ecx
sub    0x10(%esi),%ecx
movl   $0x0,0x20(%esp)
mov    %ecx,0x8(%esp)
mov    0x10(%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
call   806cc90 <dbus_set_error+0x1b90>
test   %eax,%eax
je     806ced0 <dbus_set_error+0x1dd0>
mov    0x10(%edi),%edx
mov    0x34(%esp),%eax
mov    0x10(%esi),%ecx
mov    %edx,0x10(%esp)
sub    %edx,%eax
mov    %eax,0x14(%esp)
mov    0xc(%edi),%eax
mov    %eax,0xc(%esp)
mov    0x4(%esi),%eax
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
sub    %ecx,%eax
mov    %eax,0x8(%esp)
call   807fc80 <dbus_shutdown+0xfa0>
test   %eax,%eax
jne    806cf30 <dbus_set_error+0x1e30>
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    %ebp,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%esi
jne    806cf03 <dbus_set_error+0x1e03>
jmp    806cf1f <dbus_set_error+0x1e1f>
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
test   %edi,%edi
je     806cf1f <dbus_set_error+0x1e1f>
mov    %edi,%esi
mov    0x4(%esi),%edi
mov    0x8(%esi),%eax
cmp    0x20(%esp),%edi
mov    %eax,(%esp)
jne    806cef0 <dbus_set_error+0x1df0>
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
mov    %edi,%edx
call   806b5b0 <dbus_set_error+0x4b0>
add    $0x6c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4b0a2,%ebx
mov    0x50(%esp),%edi
lea    0x1c(%esp),%esi
mov    %esi,%eax
lea    0x10(%edi),%edx
call   806b640 <dbus_set_error+0x540>
test   %eax,%eax
je     806cf9c <dbus_set_error+0x1e9c>
mov    0x54(%esp),%eax
mov    %edi,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   806cde0 <dbus_set_error+0x1ce0>
mov    %esi,(%esp)
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%ebp
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4b044,%ebx
mov    0x80(%esp),%esi
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
mov    %eax,(%esp)
mov    %eax,%edi
call   8077e60 <dbus_type_is_fixed>
test   %eax,%eax
jne    806d070 <dbus_set_error+0x1f70>
lea    0x2c(%esp),%ebp
lea    0x10(%esi),%edx
mov    %ebp,%eax
call   806b640 <dbus_set_error+0x540>
xor    %edx,%edx
test   %eax,%eax
jne    806d008 <dbus_set_error+0x1f08>
add    $0x6c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    %ebp,0x10(%esp)
mov    %eax,0x14(%esp)
mov    0x8(%esi),%eax
mov    %eax,0xc(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x8(%esp)
movzbl (%esi),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   806c580 <dbus_set_error+0x1480>
mov    0x84(%esp),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
jne    806d0b8 <dbus_set_error+0x1fb8>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x6c,%esp
mov    %edi,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movzbl (%esi),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x10(%esp)
mov    0x84(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x10(%esi),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807de00 <dbus_watch_handle+0x2240>
add    $0x6c,%esp
mov    $0x1,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x88(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   806cde0 <dbus_set_error+0x1ce0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%edi
jmp    806d05a <dbus_set_error+0x1f5a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4af15,%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    %esi,%eax
mov    %edi,%edx
call   806b4b0 <dbus_set_error+0x3b0>
mov    $0x1,%eax
testb  $0x2,0x2(%esi)
je     806d149 <dbus_set_error+0x2049>
lea    0x10(%esi),%eax
mov    %eax,0x18(%esp)
movzbl (%esi),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x10(%esi),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807e540 <dbus_watch_handle+0x2980>
test   %eax,%eax
setne  %al
movzbl %al,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
sub    $0x1c,%esp
mov    0x24(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   806cc90 <dbus_set_error+0x1b90>
add    $0x1c,%esp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
add    %eax,%edx
push   %edi
push   %esi
movzbl (%edx),%esi
mov    0x10(%esp),%ecx
mov    %esi,%eax
add    %edx,%ecx
cmp    $0x3a,%al
mov    %ecx,%ebp
je     806d26b <dbus_set_error+0x216b>
mov    %esi,%ecx
xor    %eax,%eax
cmp    $0x2e,%cl
je     806d1fd <dbus_set_error+0x20fd>
mov    %esi,%edi
and    $0xffffffdf,%edi
sub    $0x41,%edi
mov    %edi,%ecx
cmp    $0x19,%cl
ja     806d253 <dbus_set_error+0x2153>
lea    0x1(%edx),%eax
xor    %edi,%edi
cmp    %eax,%ebp
je     806d23b <dbus_set_error+0x213b>
nop
movzbl (%eax),%edx
cmp    $0x2e,%dl
je     806d208 <dbus_set_error+0x2108>
lea    -0x30(%edx),%esi
mov    %esi,%ecx
cmp    $0x9,%cl
jbe    806d234 <dbus_set_error+0x2134>
mov    %edx,%esi
and    $0xffffffdf,%esi
sub    $0x41,%esi
mov    %esi,%ecx
cmp    $0x19,%cl
jbe    806d234 <dbus_set_error+0x2134>
cmp    $0x5f,%dl
je     806d234 <dbus_set_error+0x2134>
cmp    $0x2d,%dl
je     806d234 <dbus_set_error+0x2134>
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%eax),%edx
cmp    %edx,%ebp
je     806d1fb <dbus_set_error+0x20fb>
movzbl 0x1(%eax),%esi
mov    %esi,%edi
and    $0xffffffdf,%edi
sub    $0x41,%edi
mov    %edi,%ecx
cmp    $0x19,%cl
jbe    806d230 <dbus_set_error+0x2130>
mov    %esi,%ecx
cmp    $0x5f,%cl
je     806d230 <dbus_set_error+0x2130>
cmp    $0x2d,%cl
jne    806d1fb <dbus_set_error+0x20fb>
xchg   %ax,%ax
mov    %eax,%edi
mov    %edx,%eax
add    $0x1,%eax
cmp    %eax,%ebp
jne    806d1d0 <dbus_set_error+0x20d0>
mov    0x14(%esp),%edx
mov    $0x1,%eax
test   %edx,%edx
jne    806d1fd <dbus_set_error+0x20fd>
xor    %eax,%eax
test   %edi,%edi
pop    %esi
setne  %al
pop    %edi
pop    %ebp
ret
mov    %esi,%ecx
cmp    $0x5f,%cl
je     806d1c6 <dbus_set_error+0x20c6>
cmp    $0x2d,%cl
je     806d1c6 <dbus_set_error+0x20c6>
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x1(%edx),%eax
cmp    %eax,%ecx
jne    806d2a7 <dbus_set_error+0x21a7>
jmp    806d2f1 <dbus_set_error+0x21f1>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x30(%edx),%esi
mov    %esi,%ecx
cmp    $0x9,%cl
jbe    806d2a0 <dbus_set_error+0x21a0>
mov    %edx,%esi
and    $0xffffffdf,%esi
sub    $0x41,%esi
mov    %esi,%ecx
cmp    $0x19,%cl
jbe    806d2a0 <dbus_set_error+0x21a0>
cmp    $0x5f,%dl
je     806d2a0 <dbus_set_error+0x21a0>
cmp    $0x2d,%dl
jne    806d1fb <dbus_set_error+0x20fb>
nop
add    $0x1,%eax
cmp    %eax,%ebp
je     806d2f1 <dbus_set_error+0x21f1>
movzbl (%eax),%edx
cmp    $0x2e,%dl
jne    806d278 <dbus_set_error+0x2178>
lea    0x1(%eax),%edx
cmp    %edx,%ebp
je     806d1fb <dbus_set_error+0x20fb>
movzbl 0x1(%eax),%eax
lea    -0x30(%eax),%esi
mov    %esi,%ecx
cmp    $0x9,%cl
jbe    806d2e8 <dbus_set_error+0x21e8>
mov    %eax,%esi
and    $0xffffffdf,%esi
sub    $0x41,%esi
mov    %esi,%ecx
cmp    $0x19,%cl
jbe    806d2e8 <dbus_set_error+0x21e8>
cmp    $0x5f,%al
je     806d2e8 <dbus_set_error+0x21e8>
cmp    $0x2d,%al
jne    806d1fb <dbus_set_error+0x20fb>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%eax
add    $0x1,%eax
cmp    %eax,%ebp
jne    806d2a7 <dbus_set_error+0x21a7>
pop    %esi
mov    $0x1,%eax
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4acf7,%ebx
sub    $0x3c,%esp
lea    0x2c(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x2c(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    806d350 <dbus_set_error+0x2250>
mov    $0xfffffffc,%edi
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0xff,0x58(%esp)
mov    $0x3,%edi
jg     806d337 <dbus_set_error+0x2237>
mov    0x50(%esp),%eax
mov    0x54(%esp),%edi
mov    0x54(%esp),%edx
add    0x58(%esp),%edx
mov    (%eax),%eax
add    %eax,%edi
add    %edx,%eax
cmp    %eax,%edi
mov    %eax,0x14(%esp)
je     806d555 <dbus_set_error+0x2455>
xor    %edx,%edx
xor    %ebp,%ebp
mov    %esi,0x10(%esp)
mov    %edx,%esi
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi),%ecx
lea    -0x28(%ecx),%eax
cmp    $0x55,%al
ja     806d518 <dbus_set_error+0x2418>
movzbl %al,%eax
mov    -0x1c4a8(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
test   %eax,%eax
je     806d5f4 <dbus_set_error+0x24f4>
mov    0x10(%esp),%eax
subl   $0x1,0x1c(%esp)
mov    %eax,(%esp)
call   807da80 <dbus_watch_handle+0x1ec0>
cmp    $0x2,%eax
jne    806d5d0 <dbus_set_error+0x24d0>
movzbl (%edi),%ecx
cmp    $0x61,%cl
je     806d41e <dbus_set_error+0x231e>
cmp    $0x7b,%cl
je     806d41e <dbus_set_error+0x231e>
cmp    $0x28,%cl
je     806d41e <dbus_set_error+0x231e>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   807da80 <dbus_watch_handle+0x1ec0>
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     806d495 <dbus_set_error+0x2395>
movzbl (%edi),%ecx
test   %ebp,%ebp
je     806d42d <dbus_set_error+0x232d>
cmp    $0x61,%cl
je     806d4dc <dbus_set_error+0x23dc>
xor    %ebp,%ebp
cmp    $0x7b,%esi
je     806d528 <dbus_set_error+0x2428>
add    $0x1,%edi
movzbl %cl,%esi
cmp    %edi,0x14(%esp)
jne    806d3a0 <dbus_set_error+0x22a0>
test   %ebp,%ebp
mov    0x10(%esp),%esi
je     806d56a <dbus_set_error+0x246a>
mov    $0x2,%edi
jmp    806d337 <dbus_set_error+0x2237>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x61,%esi
jne    806d5c2 <dbus_set_error+0x24c2>
addl   $0x1,0x1c(%esp)
cmpl   $0x20,0x1c(%esp)
jg     806d58a <dbus_set_error+0x248a>
mov    0x10(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    806d3e6 <dbus_set_error+0x22e6>
mov    0x10(%esp),%esi
jmp    806d332 <dbus_set_error+0x2232>
xchg   %ax,%ax
mov    0x18(%esp),%edx
test   %edx,%edx
je     806d5a6 <dbus_set_error+0x24a6>
cmp    $0x28,%esi
je     806d598 <dbus_set_error+0x2498>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   807da80 <dbus_watch_handle+0x1ec0>
movzbl (%edi),%ecx
subl   $0x1,0x18(%esp)
jmp    806d3e9 <dbus_set_error+0x22e9>
xchg   %ax,%ax
add    $0x1,%ebp
cmp    $0x20,%ebp
jg     806d5b4 <dbus_set_error+0x24b4>
movzbl 0x1(%edi),%eax
cmp    $0x7d,%al
je     806d54b <dbus_set_error+0x244b>
cmp    $0x29,%al
je     806d54b <dbus_set_error+0x244b>
mov    $0x61,%ecx
jmp    806d42d <dbus_set_error+0x232d>
lea    0x0(%esi),%esi
addl   $0x1,0x18(%esp)
cmpl   $0x20,0x18(%esp)
jle    806d479 <dbus_set_error+0x2379>
mov    0x10(%esp),%esi
mov    $0x5,%edi
jmp    806d337 <dbus_set_error+0x2237>
xchg   %ax,%ax
mov    0x10(%esp),%esi
mov    $0x1,%edi
jmp    806d337 <dbus_set_error+0x2237>
xchg   %ax,%ax
mov    %ecx,(%esp)
call   8077c50 <dbus_type_is_valid>
test   %eax,%eax
je     806d55c <dbus_set_error+0x245c>
movzbl (%edi),%eax
mov    %eax,(%esp)
call   8077dc0 <dbus_type_is_basic>
test   %eax,%eax
je     806d55c <dbus_set_error+0x245c>
movzbl (%edi),%ecx
jmp    806d436 <dbus_set_error+0x2336>
mov    0x10(%esp),%esi
nop
jmp    806d452 <dbus_set_error+0x2352>
xor    %edi,%edi
jmp    806d337 <dbus_set_error+0x2237>
mov    0x10(%esp),%esi
mov    $0x37,%edi
jmp    806d337 <dbus_set_error+0x2237>
cmpl   $0x0,0x18(%esp)
mov    $0x7,%edi
jne    806d337 <dbus_set_error+0x2237>
cmpl   $0x0,0x1c(%esp)
je     806d555 <dbus_set_error+0x2455>
mov    $0x32,%di
jmp    806d337 <dbus_set_error+0x2237>
mov    0x10(%esp),%esi
mov    $0x30,%edi
jmp    806d337 <dbus_set_error+0x2237>
mov    0x10(%esp),%esi
mov    $0x8,%edi
jmp    806d337 <dbus_set_error+0x2237>
mov    0x10(%esp),%esi
mov    $0x6,%edi
jmp    806d337 <dbus_set_error+0x2237>
mov    0x10(%esp),%esi
mov    $0x4,%edi
jmp    806d337 <dbus_set_error+0x2237>
mov    0x10(%esp),%esi
mov    $0x36,%edi
jmp    806d337 <dbus_set_error+0x2237>
test   %eax,%eax
mov    0x10(%esp),%esi
mov    $0x33,%edi
je     806d337 <dbus_set_error+0x2237>
sub    $0x1,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%edi
add    $0x34,%edi
jmp    806d337 <dbus_set_error+0x2237>
mov    0x10(%esp),%esi
mov    $0x31,%edi
jmp    806d337 <dbus_set_error+0x2237>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebp
mov    0x18(%esp),%edi
mov    0x4(%ecx),%edx
sub    %ebp,%edx
cmp    %edi,%edx
jl     806d636 <dbus_set_error+0x2536>
test   %edi,%edi
je     806d636 <dbus_set_error+0x2536>
add    (%ecx),%ebp
cmpb   $0x2f,0x0(%ebp)
je     806d640 <dbus_set_error+0x2540>
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%ebp,%edi,1),%esi
lea    0x1(%ebp),%eax
cmp    %eax,%esi
je     806d68a <dbus_set_error+0x258a>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     806d678 <dbus_set_error+0x2578>
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    806d683 <dbus_set_error+0x2583>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
jbe    806d683 <dbus_set_error+0x2583>
cmp    $0x5f,%dl
je     806d683 <dbus_set_error+0x2583>
pop    %esi
xor    %eax,%eax
pop    %edi
pop    %ebp
ret
mov    %eax,%edx
sub    %ebp,%edx
cmp    $0x1,%edx
jle    806d672 <dbus_set_error+0x2572>
mov    %eax,%ebp
add    $0x1,%eax
cmp    %eax,%esi
jne    806d650 <dbus_set_error+0x2550>
sub    %ebp,%esi
mov    $0x1,%eax
cmp    $0x1,%esi
jg     806d636 <dbus_set_error+0x2536>
xor    %eax,%eax
cmp    $0x1,%edi
setle  %al
jmp    806d636 <dbus_set_error+0x2536>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x4a954,%ebx
cmpl   $0x40,0x74(%esp)
mov    %edx,0x14(%esp)
jle    806d6d0 <dbus_set_error+0x25d0>
mov    $0x39,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,%edi
lea    0x34(%esp),%eax
mov    %eax,0x18(%esp)
mov    %edi,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
mov    %eax,%esi
je     806db10 <dbus_set_error+0x2a10>
mov    0x78(%esp),%eax
cmp    0x7c(%esp),%eax
je     806db00 <dbus_set_error+0x2a00>
lea    -0x61(%esi),%edx
cmp    $0x18,%edx
ja     806d778 <dbus_set_error+0x2678>
mov    -0x1c350(%ebx,%edx,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
xchg   %ax,%ax
movzbl (%eax),%esi
add    $0x1,%eax
mov    0x7c(%esp),%edx
mov    %eax,0x78(%esp)
lea    0x1(%esi),%ecx
sub    %eax,%edx
cmp    %edx,%ecx
ja     806dc98 <dbus_set_error+0x2b98>
mov    0x18(%esp),%ebp
mov    %eax,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %ebp,(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   806d300 <dbus_set_error+0x2200>
test   %eax,%eax
jne    806d6c2 <dbus_set_error+0x25c2>
add    0x78(%esp),%esi
mov    %esi,0x78(%esp)
cmpb   $0x0,(%esi)
jne    806dcc3 <dbus_set_error+0x2bc3>
lea    0x1(%esi),%eax
mov    %eax,0x78(%esp)
nop
cmp    %eax,0x7c(%esp)
jb     806db00 <dbus_set_error+0x2a00>
mov    0x70(%esp),%edx
test   %edx,%edx
je     806db10 <dbus_set_error+0x2a10>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
jmp    806d6da <dbus_set_error+0x25da>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
mov    %eax,0x78(%esp)
jmp    806d778 <dbus_set_error+0x2678>
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%ebp
add    $0x1,%eax
mov    0x7c(%esp),%edx
mov    %eax,0x78(%esp)
lea    0x1(%ebp),%ecx
sub    %eax,%edx
cmp    %edx,%ecx
ja     806dcb9 <dbus_set_error+0x2bb9>
lea    0x24(%esp),%esi
mov    %eax,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x28(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806d300 <dbus_set_error+0x2200>
test   %eax,%eax
jne    806dca2 <dbus_set_error+0x2ba2>
add    0x78(%esp),%ebp
mov    %ebp,0x78(%esp)
cmpb   $0x0,0x0(%ebp)
jne    806dcd7 <dbus_set_error+0x2bd7>
add    $0x1,%ebp
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %ebp,0x78(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
test   %eax,%eax
je     806dccd <dbus_set_error+0x2bcd>
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x78(%esp),%ecx
mov    %eax,%edx
neg    %edx
lea    -0x1(%ecx,%eax,1),%eax
and    %eax,%edx
cmp    %edx,0x7c(%esp)
jb     806db00 <dbus_set_error+0x2a00>
cmp    %edx,%ecx
je     806d87d <dbus_set_error+0x277d>
cmpb   $0x0,(%ecx)
jne    806da90 <dbus_set_error+0x2990>
lea    0x1(%ecx),%eax
jmp    806d875 <dbus_set_error+0x2775>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmpb   $0x0,-0x1(%eax)
jne    806da90 <dbus_set_error+0x2990>
cmp    %edx,%eax
mov    %eax,0x78(%esp)
jne    806d868 <dbus_set_error+0x2768>
mov    %esi,0x4(%esp)
mov    0x18(%esp),%esi
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
call   806b830 <dbus_set_error+0x730>
lea    0x78(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,0x10(%esp)
mov    0x7c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   806d6a0 <dbus_set_error+0x25a0>
test   %eax,%eax
jne    806d6c2 <dbus_set_error+0x25c2>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   806bb40 <dbus_set_error+0xa40>
test   %eax,%eax
je     806d97a <dbus_set_error+0x287a>
mov    $0x2c,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
lea    0x7(%eax),%edx
and    $0xfffffff8,%edx
cmp    %edx,0x7c(%esp)
jb     806db00 <dbus_set_error+0x2a00>
cmp    %edx,%eax
je     806d92d <dbus_set_error+0x282d>
cmpb   $0x0,(%eax)
jne    806da90 <dbus_set_error+0x2990>
add    $0x1,%eax
jmp    806d925 <dbus_set_error+0x2825>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmpb   $0x0,-0x1(%eax)
jne    806da90 <dbus_set_error+0x2990>
cmp    %edx,%eax
mov    %eax,0x78(%esp)
jne    806d918 <dbus_set_error+0x2818>
mov    0x18(%esp),%esi
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   806ba30 <dbus_set_error+0x930>
lea    0x78(%esp),%eax
mov    0x14(%esp),%edx
mov    %eax,0x10(%esp)
mov    0x7c(%esp),%eax
movl   $0x1,(%esp)
mov    %eax,0xc(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   806d6a0 <dbus_set_error+0x25a0>
test   %eax,%eax
jne    806d6c2 <dbus_set_error+0x25c2>
mov    0x78(%esp),%eax
jmp    806d778 <dbus_set_error+0x2678>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x78(%esp),%ecx
mov    %eax,%edx
neg    %edx
lea    -0x1(%ecx,%eax,1),%ebp
and    %ebp,%edx
cmp    %edx,0x7c(%esp)
jbe    806db00 <dbus_set_error+0x2a00>
cmp    %edx,%ecx
je     806d9d5 <dbus_set_error+0x28d5>
cmpb   $0x0,(%ecx)
jne    806da90 <dbus_set_error+0x2990>
add    $0x1,%ecx
jmp    806d9cd <dbus_set_error+0x28cd>
lea    0x0(%esi),%esi
add    $0x1,%ecx
cmpb   $0x0,-0x1(%ecx)
jne    806da90 <dbus_set_error+0x2990>
cmp    %edx,%ecx
mov    %ecx,0x78(%esp)
jne    806d9c0 <dbus_set_error+0x28c0>
cmp    $0x62,%esi
je     806da9d <dbus_set_error+0x299d>
add    %ecx,%eax
mov    %eax,0x78(%esp)
jmp    806d778 <dbus_set_error+0x2678>
lea    0x0(%esi,%eiz,1),%esi
lea    0x3(%eax),%edx
and    $0xfffffffc,%edx
lea    0x4(%edx),%ecx
cmp    %ecx,0x7c(%esp)
jb     806db00 <dbus_set_error+0x2a00>
cmp    %edx,%eax
je     806da29 <dbus_set_error+0x2929>
cmpb   $0x0,(%eax)
jne    806da90 <dbus_set_error+0x2990>
add    $0x1,%eax
jmp    806da21 <dbus_set_error+0x2921>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmpb   $0x0,-0x1(%eax)
jne    806da90 <dbus_set_error+0x2990>
cmp    %edx,%eax
mov    %eax,0x78(%esp)
jne    806da18 <dbus_set_error+0x2918>
cmpl   $0x6c,0x14(%esp)
mov    (%eax),%ebp
je     806da34 <dbus_set_error+0x2934>
bswap  %ebp
add    $0x4,%eax
cmp    $0x61,%esi
mov    %eax,0x78(%esp)
je     806db2f <dbus_set_error+0x2a2f>
mov    0x7c(%esp),%edx
sub    %eax,%edx
cmp    %edx,%ebp
ja     806dd29 <dbus_set_error+0x2c29>
cmp    $0x6f,%esi
je     806dabb <dbus_set_error+0x29bb>
cmp    $0x73,%esi
je     806dc5c <dbus_set_error+0x2b5c>
cmp    $0x61,%esi
mov    0x78(%esp),%eax
je     806d778 <dbus_set_error+0x2678>
cmp    %eax,0x7c(%esp)
je     806db00 <dbus_set_error+0x2a00>
cmpb   $0x0,(%eax)
je     806d7a0 <dbus_set_error+0x26a0>
mov    $0x2e,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
lea    0x0(%esi),%esi
add    $0x5c,%esp
mov    $0x9,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpl   $0x6c,0x14(%esp)
mov    (%ecx),%edx
je     806daa8 <dbus_set_error+0x29a8>
bswap  %edx
cmp    $0x1,%edx
jbe    806d9de <dbus_set_error+0x28de>
mov    $0xa,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    0x18(%esp),%esi
mov    %eax,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806d610 <dbus_set_error+0x2510>
test   %eax,%eax
je     806dd47 <dbus_set_error+0x2c47>
mov    0x78(%esp),%eax
add    %ebp,%eax
mov    %eax,0x78(%esp)
jmp    806da6d <dbus_set_error+0x296d>
xchg   %ax,%ax
mov    $0xb,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
lea    0x0(%esi),%esi
mov    0x80(%esp),%eax
test   %eax,%eax
je     806db28 <dbus_set_error+0x2a28>
mov    0x78(%esp),%eax
mov    0x80(%esp),%edi
mov    %eax,(%edi)
xor    %eax,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    %edi,(%esp)
call   806b8c0 <dbus_set_error+0x7c0>
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8077c50 <dbus_type_is_valid>
test   %eax,%eax
je     806dd3d <dbus_set_error+0x2c3d>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x78(%esp),%ecx
mov    %eax,%edx
neg    %edx
lea    -0x1(%ecx,%eax,1),%eax
and    %eax,%edx
cmp    %edx,0x7c(%esp)
jb     806db00 <dbus_set_error+0x2a00>
cmp    %edx,%ecx
je     806db95 <dbus_set_error+0x2a95>
cmpb   $0x0,(%ecx)
jne    806da90 <dbus_set_error+0x2990>
add    $0x1,%ecx
jmp    806db8d <dbus_set_error+0x2a8d>
lea    0x0(%esi),%esi
add    $0x1,%ecx
cmpb   $0x0,-0x1(%ecx)
jne    806da90 <dbus_set_error+0x2990>
cmp    %edx,%ecx
mov    %ecx,0x78(%esp)
jne    806db80 <dbus_set_error+0x2a80>
mov    0x7c(%esp),%eax
sub    %ecx,%eax
cmp    %eax,%ebp
ja     806dd29 <dbus_set_error+0x2c29>
test   %ebp,%ebp
je     806da60 <dbus_set_error+0x2960>
cmp    $0x4000000,%ebp
ja     806dd33 <dbus_set_error+0x2c33>
mov    0x18(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806ba30 <dbus_set_error+0x930>
mov    %edi,(%esp)
add    0x78(%esp),%ebp
call   806b8c0 <dbus_set_error+0x7c0>
mov    %eax,(%esp)
mov    %eax,%esi
call   8077e60 <dbus_type_is_fixed>
test   %eax,%eax
jne    806dc48 <dbus_set_error+0x2b48>
mov    %edi,0x1c(%esp)
lea    0x78(%esp),%esi
mov    0x7c(%esp),%edi
jmp    806dc23 <dbus_set_error+0x2b23>
nop
mov    %eax,0x8(%esp)
mov    0x74(%esp),%eax
mov    0x14(%esp),%edx
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
movl   $0x0,(%esp)
call   806d6a0 <dbus_set_error+0x25a0>
test   %eax,%eax
jne    806d6c2 <dbus_set_error+0x25c2>
mov    0x78(%esp),%eax
cmp    %eax,%ebp
ja     806dbf0 <dbus_set_error+0x2af0>
mov    0x1c(%esp),%edi
cmp    %ebp,%eax
je     806d778 <dbus_set_error+0x2678>
mov    $0x28,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x62,%esi
je     806dce1 <dbus_set_error+0x2be1>
mov    %ebp,0x78(%esp)
mov    %ebp,%eax
jmp    806d778 <dbus_set_error+0x2678>
mov    0x18(%esp),%esi
mov    %eax,0x4(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x38(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8080990 <dbus_shutdown+0x1cb0>
test   %eax,%eax
jne    806daef <dbus_set_error+0x29ef>
mov    $0x27,%al
jmp    806d6c2 <dbus_set_error+0x25c2>
nop
mov    $0x26,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    %eax,%edx
mov    $0xfffffffc,%eax
cmp    $0xfffffffc,%edx
mov    $0x2a,%edx
cmovne %edx,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    $0x29,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    $0x2f,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    $0x2b,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    $0x2d,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
movl   $0x62,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    %eax,%ecx
mov    0x78(%esp),%eax
cmp    %eax,%ebp
jbe    806dc2f <dbus_set_error+0x2b2f>
mov    0x14(%esp),%esi
jmp    806dd16 <dbus_set_error+0x2c16>
lea    0x0(%esi,%eiz,1),%esi
add    %ecx,%eax
cmp    %eax,%ebp
mov    %eax,0x78(%esp)
jbe    806dc2f <dbus_set_error+0x2b2f>
cmp    $0x6c,%esi
mov    (%eax),%edx
je     806dd1f <dbus_set_error+0x2c1f>
bswap  %edx
cmp    $0x1,%edx
jbe    806dd08 <dbus_set_error+0x2c08>
jmp    806dab1 <dbus_set_error+0x29b1>
mov    $0x23,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    $0x24,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    $0x1,%eax
jmp    806d6c2 <dbus_set_error+0x25c2>
mov    $0x25,%al
jmp    806d6c2 <dbus_set_error+0x25c2>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
lea    0x24(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x4a29c,%ebx
mov    0x6c(%esp),%esi
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x4(%esp)
call   806b830 <dbus_set_error+0x730>
mov    0x70(%esp),%eax
mov    0x74(%esp),%edx
mov    0x78(%esp),%edi
add    (%eax),%edx
lea    0x20(%esp),%eax
mov    %eax,0x10(%esp)
mov    %ebp,%eax
add    %edx,%edi
mov    %edx,0x20(%esp)
mov    %edx,0x8(%esp)
mov    0x68(%esp),%edx
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   806d6a0 <dbus_set_error+0x25a0>
test   %eax,%eax
jne    806ddce <dbus_set_error+0x2cce>
test   %esi,%esi
je     806ddd8 <dbus_set_error+0x2cd8>
sub    0x20(%esp),%edi
mov    %edi,(%esi)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,0x20(%esp)
sbb    %eax,%eax
add    $0x4c,%esp
pop    %ebx
and    $0xc,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x4a207,%ecx
add    $0x4,%eax
cmp    $0x3d,%eax
ja     806e000 <dbus_set_error+0x2f00>
mov    -0x1c2ec(%ecx,%eax,4),%eax
add    %ecx,%eax
jmp    *%eax
xchg   %ax,%ax
lea    -0x1c1e6(%ecx),%eax
ret
nop
lea    -0x1c1f4(%ecx),%eax
ret
nop
lea    -0x1bca0(%ecx),%eax
ret
nop
lea    -0x1be13(%ecx),%eax
ret
nop
lea    -0x1be2f(%ecx),%eax
ret
nop
lea    -0x1bcc0(%ecx),%eax
ret
nop
lea    -0x1be4d(%ecx),%eax
ret
nop
lea    -0x1be66(%ecx),%eax
ret
nop
lea    -0x1bce4(%ecx),%eax
ret
nop
lea    -0x1bd08(%ecx),%eax
ret
nop
lea    -0x1bd30(%ecx),%eax
ret
nop
lea    -0x1be7c(%ecx),%eax
ret
nop
lea    -0x1be8f(%ecx),%eax
ret
nop
lea    -0x1bead(%ecx),%eax
ret
nop
lea    -0x1bd5c(%ecx),%eax
ret
nop
lea    -0x1bec5(%ecx),%eax
ret
nop
lea    -0x1bedb(%ecx),%eax
ret
nop
lea    -0x1bd84(%ecx),%eax
ret
nop
lea    -0x1bef2(%ecx),%eax
ret
nop
lea    -0x1bf05(%ecx),%eax
ret
nop
lea    -0x1bda4(%ecx),%eax
ret
nop
lea    -0x1bf0e(%ecx),%eax
ret
nop
lea    -0x1bf2b(%ecx),%eax
ret
nop
lea    -0x1bf40(%ecx),%eax
ret
nop
lea    -0x1bf55(%ecx),%eax
ret
nop
lea    -0x1bf68(%ecx),%eax
ret
nop
lea    -0x1bf77(%ecx),%eax
ret
nop
lea    -0x1bf89(%ecx),%eax
ret
nop
lea    -0x1bf96(%ecx),%eax
ret
nop
lea    -0x1bfa1(%ecx),%eax
ret
nop
lea    -0x1bfb0(%ecx),%eax
ret
nop
lea    -0x1bfbb(%ecx),%eax
ret
nop
lea    -0x1bfc9(%ecx),%eax
ret
nop
lea    -0x1bfd9(%ecx),%eax
ret
nop
lea    -0x1bff4(%ecx),%eax
ret
nop
lea    -0x1c004(%ecx),%eax
ret
nop
lea    -0x1c019(%ecx),%eax
ret
nop
lea    -0x1c035(%ecx),%eax
ret
nop
lea    -0x1c047(%ecx),%eax
ret
nop
lea    -0x1c058(%ecx),%eax
ret
nop
lea    -0x1c06b(%ecx),%eax
ret
nop
lea    -0x1c086(%ecx),%eax
ret
nop
lea    -0x1c091(%ecx),%eax
ret
nop
lea    -0x1c0a2(%ecx),%eax
ret
nop
lea    -0x1c0b7(%ecx),%eax
ret
nop
lea    -0x1c0c6(%ecx),%eax
ret
nop
lea    -0x1c0d4(%ecx),%eax
ret
nop
lea    -0x1c0e4(%ecx),%eax
ret
nop
lea    -0x1c0ff(%ecx),%eax
ret
nop
lea    -0x1c11a(%ecx),%eax
ret
nop
lea    -0x1c12f(%ecx),%eax
ret
nop
lea    -0x1c14c(%ecx),%eax
ret
nop
lea    -0x1c169(%ecx),%eax
ret
nop
lea    -0x1bdc8(%ecx),%eax
ret
nop
lea    -0x1bdec(%ecx),%eax
ret
nop
lea    -0x1c17f(%ecx),%eax
ret
nop
lea    -0x1c19a(%ecx),%eax
ret
nop
lea    -0x1c1ab(%ecx),%eax
ret
nop
lea    -0x1c1b1(%ecx),%eax
ret
nop
lea    -0x1c1c2(%ecx),%eax
ret
nop
lea    -0x1c1d7(%ecx),%eax
ret
nop
lea    -0x1bdf7(%ecx),%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
mov    0x10(%esp),%ecx
mov    0x18(%esp),%esi
mov    0x4(%ecx),%edx
sub    0x14(%esp),%edx
cmp    %esi,%edx
jl     806e05a <dbus_set_error+0x2f5a>
cmp    $0xff,%esi
jg     806e05a <dbus_set_error+0x2f5a>
test   %esi,%esi
je     806e05a <dbus_set_error+0x2f5a>
mov    (%ecx),%edx
add    0x14(%esp),%edx
movzbl (%edx),%ebp
mov    %ebp,%ecx
cmp    $0x2e,%cl
je     806e05a <dbus_set_error+0x2f5a>
mov    %ebp,%edi
and    $0xffffffdf,%edi
sub    $0x41,%edi
mov    %edi,%ecx
cmp    $0x19,%cl
jbe    806e060 <dbus_set_error+0x2f60>
mov    %ebp,%ecx
cmp    $0x5f,%cl
je     806e060 <dbus_set_error+0x2f60>
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    %edx,%esi
lea    0x1(%edx),%eax
cmp    %eax,%esi
je     806e092 <dbus_set_error+0x2f92>
xor    %edi,%edi
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%eax),%edx
cmp    $0x2e,%dl
je     806e098 <dbus_set_error+0x2f98>
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    806e0bd <dbus_set_error+0x2fbd>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
jbe    806e0bd <dbus_set_error+0x2fbd>
cmp    $0x5f,%dl
je     806e0bd <dbus_set_error+0x2fbd>
pop    %esi
xor    %eax,%eax
pop    %edi
pop    %ebp
ret
lea    0x1(%eax),%edx
cmp    %edx,%esi
je     806e092 <dbus_set_error+0x2f92>
movzbl 0x1(%eax),%ebp
mov    %ebp,%edi
and    $0xffffffdf,%edi
sub    $0x41,%edi
mov    %edi,%ecx
cmp    $0x19,%cl
jbe    806e0b9 <dbus_set_error+0x2fb9>
mov    %ebp,%ecx
cmp    $0x5f,%cl
jne    806e092 <dbus_set_error+0x2f92>
mov    %eax,%edi
mov    %edx,%eax
add    $0x1,%eax
cmp    %eax,%esi
jne    806e070 <dbus_set_error+0x2f70>
xor    %eax,%eax
test   %edi,%edi
setne  %al
jmp    806e05a <dbus_set_error+0x2f5a>
lea    0x0(%esi),%esi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
mov    0x10(%esp),%ecx
mov    0x18(%esp),%esi
mov    0x4(%ecx),%edx
sub    0x14(%esp),%edx
cmp    %esi,%edx
jl     806e137 <dbus_set_error+0x3037>
cmp    $0xff,%esi
jg     806e137 <dbus_set_error+0x3037>
test   %esi,%esi
je     806e137 <dbus_set_error+0x3037>
mov    (%ecx),%edx
add    0x14(%esp),%edx
movzbl (%edx),%ebp
mov    %ebp,%edi
and    $0xffffffdf,%edi
sub    $0x41,%edi
mov    %edi,%ecx
cmp    $0x19,%cl
ja     806e140 <dbus_set_error+0x3040>
add    %edx,%esi
lea    0x1(%edx),%eax
cmp    %eax,%esi
je     806e157 <dbus_set_error+0x3057>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
lea    -0x30(%edx),%ecx
cmp    $0x9,%cl
jbe    806e150 <dbus_set_error+0x3050>
mov    %edx,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
jbe    806e150 <dbus_set_error+0x3050>
cmp    $0x5f,%dl
je     806e150 <dbus_set_error+0x3050>
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%ecx
cmp    $0x5f,%cl
jne    806e137 <dbus_set_error+0x3037>
jmp    806e10c <dbus_set_error+0x300c>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    %eax,%esi
jne    806e118 <dbus_set_error+0x3018>
pop    %esi
mov    $0x1,%eax
pop    %edi
pop    %ebp
ret
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x49e93,%ebx
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806e010 <dbus_set_error+0x2f10>
add    $0x18,%esp
pop    %ebx
ret
push   %esi
mov    0x8(%esp),%ecx
mov    0xc(%esp),%edx
mov    0x10(%esp),%esi
mov    (%ecx),%eax
mov    0x4(%ecx),%ecx
sub    %edx,%ecx
cmp    %ecx,%esi
jg     806e1c8 <dbus_set_error+0x30c8>
cmp    $0xff,%esi
jg     806e1c8 <dbus_set_error+0x30c8>
test   %esi,%esi
je     806e1c8 <dbus_set_error+0x30c8>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
pop    %esi
jmp    806d190 <dbus_set_error+0x2090>
xchg   %ax,%ax
xor    %eax,%eax
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    0x8(%esp),%ecx
mov    0xc(%esp),%edx
mov    0x10(%esp),%esi
mov    (%ecx),%eax
mov    0x4(%ecx),%ecx
sub    %edx,%ecx
cmp    %ecx,%esi
jg     806e208 <dbus_set_error+0x3108>
cmp    $0xff,%esi
jg     806e208 <dbus_set_error+0x3108>
test   %esi,%esi
je     806e208 <dbus_set_error+0x3108>
movl   $0x1,0xc(%esp)
mov    %esi,0x8(%esp)
pop    %esi
jmp    806d190 <dbus_set_error+0x2090>
xchg   %ax,%ax
xor    %eax,%eax
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %eax,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ecx
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x49dd7,%ebx
mov    0x4(%ecx),%edx
sub    %esi,%edx
cmp    %edi,%edx
jl     806e250 <dbus_set_error+0x3150>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
call   806d300 <dbus_set_error+0x2200>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x49d90,%ebx
test   %edx,%edx
je     806e2a2 <dbus_set_error+0x31a2>
lea    0x10(%esp),%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806d610 <dbus_set_error+0x2510>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x49d40,%ebx
test   %edx,%edx
je     806e2f2 <dbus_set_error+0x31f2>
lea    0x10(%esp),%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806e010 <dbus_set_error+0x2f10>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x49cf0,%ebx
test   %edx,%edx
je     806e342 <dbus_set_error+0x3242>
lea    0x10(%esp),%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806e0d0 <dbus_set_error+0x2fd0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x49ca0,%ebx
test   %edx,%edx
je     806e392 <dbus_set_error+0x3292>
lea    0x10(%esp),%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806e160 <dbus_set_error+0x3060>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x49c50,%ebx
test   %edx,%edx
je     806e3e2 <dbus_set_error+0x32e2>
lea    0x10(%esp),%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806e190 <dbus_set_error+0x3090>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x49c00,%ebx
test   %edx,%edx
je     806e432 <dbus_set_error+0x3332>
lea    0x10(%esp),%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806e210 <dbus_set_error+0x3110>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x49bb0,%ebx
test   %edx,%edx
je     806e482 <dbus_set_error+0x3382>
lea    0x10(%esp),%esi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8080990 <dbus_shutdown+0x1cb0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x49b61,%ebx
mov    0x20(%esp),%esi
mov    0x58(%edi),%eax
mov    %esi,(%esp)
neg    %eax
mov    %eax,0x4(%esp)
call   80756b0 <dbus_pending_call_get_data+0x160>
mov    0x78(%edi),%eax
mov    %esi,(%esp)
neg    %eax
mov    %eax,0x4(%esp)
call   8075720 <dbus_pending_call_get_data+0x1d0>
mov    %esi,(%esp)
call   80756f0 <dbus_pending_call_get_data+0x1a0>
mov    %esi,(%esp)
call   8075680 <dbus_pending_call_get_data+0x130>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x49b08,%ebx
sub    $0x10,%esp
lea    0x838(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x850(%ebx),%eax
xor    %edx,%edx
test   %eax,%eax
je     806e534 <dbus_set_error+0x3434>
mov    0x854(%ebx,%edx,4),%esi
test   %esi,%esi
jne    806e5f8 <dbus_set_error+0x34f8>
add    $0x1,%edx
cmp    $0x5,%edx
jne    806e51d <dbus_set_error+0x341d>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
movl   $0x7c,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     806e673 <dbus_set_error+0x3573>
lea    0x350(%ebx),%eax
lea    0x4(%esi),%edi
movl   $0x0,0x6c(%esi)
movl   $0x0,0x74(%esi)
mov    (%eax),%eax
mov    %eax,0x68(%esi)
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
lea    0x60(%esi),%eax
andb   $0xfc,0x50(%esi)
andl   $0xffe00000,0x5c(%esi)
movl   $0x0,0x54(%esi)
movl   $0x0,0x58(%esi)
movl   $0x0,0x70(%esi)
movl   $0x0,0x74(%esi)
movl   $0x0,0x78(%esi)
mov    %eax,(%esp)
call   807beb0 <dbus_watch_handle+0x2f0>
mov    %edi,(%esp)
call   80929e0 <dbus_bus_remove_match+0x17b0>
test   %eax,%eax
je     806e5e5 <dbus_set_error+0x34e5>
lea    0x40(%esi),%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   807f2d0 <dbus_shutdown+0x5f0>
test   %eax,%eax
je     806e5dd <dbus_set_error+0x34dd>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %edi,(%esp)
call   8092a20 <dbus_bus_remove_match+0x17f0>
mov    %esi,(%esp)
xor    %esi,%esi
call   807ebb0 <dbus_free>
jmp    806e5d4 <dbus_set_error+0x34d4>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%eax
mov    %eax,0x850(%ebx)
mov    (%edi),%eax
movl   $0x0,0x854(%ebx,%edx,4)
00
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
lea    0x4(%esi),%eax
andb   $0xfc,0x50(%esi)
andl   $0xffe00000,0x5c(%esi)
movl   $0x0,0x54(%esi)
movl   $0x0,0x58(%esi)
movl   $0x0,0x70(%esi)
movl   $0x0,0x74(%esi)
movl   $0x0,0x78(%esi)
mov    %eax,(%esp)
call   8092990 <dbus_bus_remove_match+0x1760>
lea    0x40(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xor    %esi,%esi
jmp    806e5d4 <dbus_set_error+0x34d4>
lea    0x0(%esi),%esi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x49973,%ebx
mov    0x20(%esp),%esi
mov    %edx,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
mov    %esi,0xc(%esp)
call   80931b0 <dbus_bus_remove_match+0x1f80>
test   %eax,%eax
jne    806e6c8 <dbus_set_error+0x35c8>
lea    -0x308(%ebx),%eax
mov    %eax,(%edi)
movl   $0x0,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
addl   $0x1,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x49915,%ebx
sub    $0x3c,%esp
lea    0x4(%eax),%esi
mov    %esi,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
cmp    $0x6c,%al
mov    %eax,%ebp
je     806e75b <dbus_set_error+0x365b>
lea    0x2c(%esp),%eax
add    $0x40,%edi
lea    0x28(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   806e680 <dbus_set_error+0x3580>
mov    %ebp,%eax
movsbl %al,%ebp
mov    0x2c(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x6c,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   8093d40 <dbus_bus_remove_match+0x2b10>
movl   $0x6c,0x4(%esp)
mov    %esi,(%esp)
call   80939b0 <dbus_bus_remove_match+0x2780>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x49883,%ebx
test   %ecx,%ecx
je     806e7b0 <dbus_set_error+0x36b0>
lea    0x24(%esp),%ecx
add    $0x4,%eax
mov    %ecx,0xc(%esp)
mov    0x20(%esp),%ecx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   8092f70 <dbus_bus_remove_match+0x1d40>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8093880 <dbus_bus_remove_match+0x2650>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x49823,%ebx
sub    $0x2c,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
call   806ad70 <dbus_error_init>
mov    0x8(%esp),%edx
xor    %eax,%eax
lea    -0x1bc5c(%ebx),%ecx
mov    %ecx,0xc(%esp)
mov    (%edx),%edx
test   %edx,%edx
jne    806e81d <dbus_set_error+0x371d>
jmp    806e85a <dbus_set_error+0x375a>
xchg   %ax,%ax
mov    0x8(%esp),%ecx
add    $0x1,%edi
mov    %edi,%eax
cmp    (%ecx),%edi
jae    806e85a <dbus_set_error+0x375a>
mov    %esi,0x4(%esp)
mov    0x0(%ebp,%eax,4),%eax
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
test   %eax,%eax
jne    806e810 <dbus_set_error+0x3710>
mov    0x14(%esp),%eax
add    $0x1,%edi
mov    %eax,0x4(%esp)
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
mov    0x8(%esp),%ecx
mov    %edi,%eax
cmp    (%ecx),%edi
jb     806e81d <dbus_set_error+0x371d>
mov    0x8(%esp),%eax
movl   $0x0,(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x49786,%ebx
sub    $0x10,%esp
lea    0x60(%eax),%eax
mov    %eax,(%esp)
lea    0x54(%esi),%edi
call   807c010 <dbus_watch_handle+0x450>
lea    -0x49b70(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %edi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x4(%esi),%eax
mov    %eax,(%esp)
call   8092a20 <dbus_bus_remove_match+0x17f0>
lea    0x40(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x70(%esi),%edx
mov    0x6c(%esi),%eax
test   %edx,%edx
je     806e8da <dbus_set_error+0x37da>
lea    0x70(%esi),%edx
call   806e7d0 <dbus_set_error+0x36d0>
mov    0x6c(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
jmp    806e900 <dbus_set_error+0x3800>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x496f7,%ebx
sub    $0x1c,%esp
lea    0x838(%ebx),%ebp
lea    0x854(%ebx),%esi
lea    0x14(%esi),%edi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    (%esi),%eax
test   %eax,%eax
je     806e937 <dbus_set_error+0x3837>
call   806e870 <dbus_set_error+0x3770>
add    $0x4,%esi
cmp    %edi,%esi
jne    806e92c <dbus_set_error+0x382c>
mov    0x0(%ebp),%eax
movl   $0x0,0x850(%ebx)
00
movl   $0x0,0x84c(%ebx)
00
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x49681,%ebx
test   %esi,%esi
je     806eb50 <dbus_message_unref+0x1e0>
lea    0x350(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x68(%esi)
jne    806e9f8 <dbus_message_unref+0x88>
testb  $0x2,0x50(%esi)
jne    806e9b8 <dbus_message_unref+0x48>
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
cmp    $0x1,%eax
je     806ea18 <dbus_message_unref+0xa8>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0c1(%ebx),%eax
movl   $0x653,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a8d1(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1bc34(%ebx),%eax
movl   $0x652,0x10(%esp)
jmp    806e9d0 <dbus_message_unref+0x60>
lea    0x0(%esi),%esi
lea    0x60(%esi),%eax
mov    %eax,(%esp)
lea    0x54(%esi),%edi
call   807bfb0 <dbus_watch_handle+0x3f0>
lea    -0x49b70(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %edi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x70(%esi),%edx
mov    0x6c(%esi),%eax
test   %edx,%edx
jne    806eb40 <dbus_message_unref+0x1d0>
lea    0x838(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x84c(%ebx),%eax
test   %eax,%eax
je     806eae0 <dbus_message_unref+0x170>
mov    0x8(%esi),%eax
add    0x44(%esi),%eax
cmp    $0x2800,%eax
jg     806eac8 <dbus_message_unref+0x158>
mov    0x850(%ebx),%edx
cmp    $0x4,%edx
jg     806eac8 <dbus_message_unref+0x158>
mov    0x854(%ebx),%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     806ea9e <dbus_message_unref+0x12e>
add    $0x1,%eax
mov    0x854(%ebx,%eax,4),%ecx
test   %ecx,%ecx
jne    806ea90 <dbus_message_unref+0x120>
mov    %esi,0x854(%ebx,%eax,4)
mov    (%edi),%eax
add    $0x1,%edx
orb    $0x2,0x50(%esi)
mov    %edx,0x850(%ebx)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    806e9ad <dbus_message_unref+0x3d>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x20,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
jmp    806e870 <dbus_set_error+0x3770>
nop
lea    -0x49700(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807ec70 <dbus_free_string_array+0x50>
test   %eax,%eax
je     806eac8 <dbus_message_unref+0x158>
movl   $0x0,0x854(%ebx)
00
movl   $0x0,0x858(%ebx)
00
movl   $0x0,0x85c(%ebx)
00
movl   $0x0,0x860(%ebx)
00
movl   $0x0,0x864(%ebx)
00
movl   $0x1,0x84c(%ebx)
00
jmp    806ea6c <dbus_message_unref+0xfc>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x70(%esi),%edx
call   806e7d0 <dbus_set_error+0x36d0>
jmp    806ea52 <dbus_message_unref+0xe2>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x651,0x10(%esp)
jmp    806e9d0 <dbus_message_unref+0x60>
lea    0x0(%esi),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x49484,%ebx
test   %eax,%eax
je     806ec40 <dbus_message_unref+0x2d0>
mov    (%eax),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
movzbl 0x6(%esi),%edx
and    $0xffffffe0,%edx
cmp    $0x60,%dl
je     806ec00 <dbus_message_unref+0x290>
cmp    $0xe0,%dl
jne    806ebe8 <dbus_message_unref+0x278>
movzbl 0x8(%esi),%edx
movsbl %al,%eax
cmp    %eax,%edx
jne    806ec28 <dbus_message_unref+0x2b8>
mov    (%esi),%eax
mov    0x4(%esi),%ecx
mov    0x5c(%eax),%edx
mov    $0x1,%eax
and    $0x1fffff,%ecx
and    $0x1fffff,%edx
cmp    %edx,%ecx
je     806ebe0 <dbus_message_unref+0x270>
lea    -0x1bb2c(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1bb64(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
movzbl 0x8(%esi),%edx
movsbl %al,%eax
cmp    %eax,%edx
je     806ebb3 <dbus_message_unref+0x243>
lea    -0x1bbe4(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1bba8(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1bc04(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x49397,%ebx
sub    $0x14,%esp
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     806eca8 <dbus_message_unref+0x338>
mov    (%esi),%edx
mov    $0x1,%eax
testb  $0x1,0x50(%edx)
jne    806ec90 <dbus_message_unref+0x320>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1bab4(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x49345,%ebx
sub    $0x3c,%esp
movl   $0x10,(%esp)
call   807eb50 <dbus_malloc>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     806ed78 <dbus_message_unref+0x408>
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    (%edi),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   80931b0 <dbus_bus_remove_match+0x1f80>
test   %eax,%eax
je     806ed80 <dbus_message_unref+0x410>
mov    0x28(%esp),%edx
test   %edx,%edx
je     806ed88 <dbus_message_unref+0x418>
mov    (%edx),%edx
mov    0x2c(%esp),%eax
movzbl (%edx,%eax,1),%ebp
add    $0x1,%eax
mov    %eax,0x2c(%esp)
mov    %esi,(%esp)
lea    0x4(%ebp),%eax
mov    %eax,0x4(%esp)
call   807f2d0 <dbus_shutdown+0x5f0>
test   %eax,%eax
je     806eda0 <dbus_message_unref+0x430>
mov    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     806edb8 <dbus_message_unref+0x448>
movb   $0x1,0x7(%edi)
mov    0x4(%esi),%eax
add    $0x8,%edi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   806c540 <dbus_set_error+0x1440>
mov    $0x1,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x28(%esp)
movl   $0x4,0x4(%esp)
mov    %esi,(%esp)
call   807f2d0 <dbus_shutdown+0x5f0>
test   %eax,%eax
jne    806ed59 <dbus_message_unref+0x3e9>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    806ed78 <dbus_message_unref+0x408>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
add    $0x8,%edi
push   %ebx
sub    $0x2c,%esp
mov    0xc(%eax),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4921c,%ebx
mov    (%esi),%eax
movl   $0x67,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,0x1c(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0xc(%esp)
mov    -0x8(%edi),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   8092f70 <dbus_bus_remove_match+0x1d40>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806c560 <dbus_set_error+0x1460>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
test   %ebp,%ebp
setne  %al
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
lea    0x4(%eax),%ecx
add    $0x40,%eax
mov    %ecx,(%edx)
mov    0xc(%esp),%edx
mov    %eax,(%edx)
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0x6c(%eax),%ecx
mov    %ecx,(%edx)
mov    0x70(%eax),%edx
mov    0xc(%esp),%eax
mov    %edx,(%eax)
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x49173,%ebx
test   %eax,%eax
je     806eef8 <dbus_message_set_serial+0x78>
testb  $0x1,0x50(%eax)
jne    806eeb8 <dbus_message_set_serial+0x38>
mov    0x34(%esp),%edx
add    $0x4,%eax
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80928f0 <dbus_bus_remove_match+0x16c0>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0x102,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a77d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x101,0x10(%esp)
jmp    806eed0 <dbus_message_set_serial+0x50>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x490d1,%ebx
mov    0x24(%esp),%edi
mov    0x54(%esi),%eax
test   %eax,%eax
je     806ef80 <dbus_message_set_serial+0x100>
lea    0x54(%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
mov    0x58(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   80756b0 <dbus_pending_call_get_data+0x160>
mov    0x78(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   8075720 <dbus_pending_call_get_data+0x1d0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x8(%esi),%eax
add    0x44(%esi),%eax
mov    %eax,0x58(%esi)
mov    0x70(%esi),%eax
mov    %eax,0x78(%esi)
jmp    806ef40 <dbus_message_set_serial+0xc0>
jmp    806efa0 <dbus_message_set_serial+0x120>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x49055,%ebx
mov    0x24(%esp),%esi
mov    %esi,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
mov    %eax,%edi
xor    %eax,%eax
test   %edi,%edi
je     806efe2 <dbus_message_set_serial+0x162>
mov    %esi,(%esp)
call   8075670 <dbus_pending_call_get_data+0x120>
mov    0x20(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   806ef20 <dbus_message_set_serial+0xa0>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x49004,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
lea    0x54(%edi),%ebp
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   807d920 <dbus_watch_handle+0x1d60>
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    0x58(%edi),%eax
mov    %esi,(%esp)
neg    %eax
mov    %eax,0x4(%esp)
call   80756b0 <dbus_pending_call_get_data+0x160>
mov    0x78(%edi),%eax
mov    %esi,(%esp)
neg    %eax
mov    %eax,0x4(%esp)
call   8075720 <dbus_pending_call_get_data+0x1d0>
mov    %esi,(%esp)
call   80756f0 <dbus_pending_call_get_data+0x1a0>
mov    %esi,(%esp)
call   8075680 <dbus_pending_call_get_data+0x130>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x48f92,%ebx
testb  $0x1,0x50(%esi)
jne    806f090 <dbus_message_lock+0x30>
mov    0x44(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x4(%esi),%eax
mov    %eax,(%esp)
call   8092f20 <dbus_bus_remove_match+0x1cf0>
orb    $0x1,0x50(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x48f53,%ebx
test   %eax,%eax
je     806f0c8 <dbus_message_get_serial+0x28>
add    $0x4,%eax
mov    %eax,(%esp)
call   8092940 <dbus_bus_remove_match+0x1710>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a7c3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x41c,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x48ee3,%ebx
test   %eax,%eax
je     806f1c8 <dbus_message_set_reply_serial+0xb8>
testb  $0x1,0x50(%eax)
jne    806f1a8 <dbus_message_set_reply_serial+0x98>
mov    0x34(%esp),%edx
test   %edx,%edx
je     806f168 <dbus_message_set_reply_serial+0x58>
lea    0x34(%esp),%edx
add    $0x4,%eax
mov    %edx,0xc(%esp)
movl   $0x75,0x8(%esp)
movl   $0x5,0x4(%esp)
mov    %eax,(%esp)
call   8092f70 <dbus_bus_remove_match+0x1d40>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b09d(%ebx),%eax
movl   $0x42f,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a7e1(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0x42e,0x10(%esp)
jmp    806f180 <dbus_message_set_reply_serial+0x70>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x42d,0x10(%esp)
jmp    806f180 <dbus_message_set_reply_serial+0x70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x48e03,%ebx
test   %eax,%eax
je     806f240 <dbus_message_get_reply_serial+0x50>
lea    0x2c(%esp),%edx
add    $0x4,%eax
mov    %edx,0xc(%esp)
movl   $0x75,0x8(%esp)
movl   $0x5,0x4(%esp)
mov    %eax,(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
xor    %edx,%edx
test   %eax,%eax
cmovne 0x2c(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a7ff(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x442,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %edx,%edx
add    $0x38,%esp
mov    %edx,%eax
pop    %ebx
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x48d71,%ebx
test   %edi,%edi
je     806f2f8 <dbus_message_new+0x78>
call   806e4f0 <dbus_set_error+0x33f0>
test   %eax,%eax
mov    %eax,%esi
je     806f340 <dbus_message_new+0xc0>
lea    0x4(%eax),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x6c,0x4(%esp)
mov    %eax,(%esp)
call   8092b30 <dbus_bus_remove_match+0x1900>
test   %eax,%eax
je     806f348 <dbus_message_new+0xc8>
add    $0x20,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
xor    %esi,%esi
mov    %eax,0xc(%esp)
lea    -0x1ba64(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a810(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x4c0,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    806f2eb <dbus_message_new+0x6b>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
xor    %esi,%esi
call   806e970 <dbus_message_unref>
jmp    806f2eb <dbus_message_new+0x6b>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x48c90,%ebx
mov    0x50(%esp),%ebp
mov    0x5c(%esp),%edi
test   %esi,%esi
je     806f4ff <dbus_message_new_method_call+0x19f>
test   %edi,%edi
je     806f51c <dbus_message_new_method_call+0x1bc>
test   %ebp,%ebp
je     806f3a2 <dbus_message_new_method_call+0x42>
mov    %ebp,(%esp)
call   806e3a0 <dbus_set_error+0x32a0>
test   %eax,%eax
je     806f4a8 <dbus_message_new_method_call+0x148>
mov    %esi,(%esp)
call   806e260 <dbus_set_error+0x3160>
test   %eax,%eax
je     806f488 <dbus_message_new_method_call+0x128>
mov    0x58(%esp),%eax
test   %eax,%eax
je     806f3ce <dbus_message_new_method_call+0x6e>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806e2b0 <dbus_set_error+0x31b0>
test   %eax,%eax
je     806f4d0 <dbus_message_new_method_call+0x170>
mov    %edi,(%esp)
call   806e300 <dbus_set_error+0x3200>
test   %eax,%eax
je     806f440 <dbus_message_new_method_call+0xe0>
call   806e4f0 <dbus_set_error+0x33f0>
test   %eax,%eax
mov    %eax,%edx
je     806f4c8 <dbus_message_new_method_call+0x168>
mov    0x58(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0x14(%esp)
lea    0x4(%edx),%eax
mov    %ebp,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x6c,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x2c(%esp)
call   8092b30 <dbus_bus_remove_match+0x1900>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     806f4f0 <dbus_message_new_method_call+0x190>
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b998(%ebx),%eax
movl   $0x4f6,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a82d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b9f4(%ebx),%eax
movl   $0x4f3,0x10(%esp)
jmp    806f458 <dbus_message_new_method_call+0xf8>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ba38(%ebx),%eax
movl   $0x4f2,0x10(%esp)
jmp    806f458 <dbus_message_new_method_call+0xf8>
lea    0x0(%esi),%esi
xor    %edx,%edx
jmp    806f430 <dbus_message_new_method_call+0xd0>
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b9d0(%ebx),%eax
movl   $0x4f5,0x10(%esp)
jmp    806f458 <dbus_message_new_method_call+0xf8>
lea    0x0(%esi),%esi
mov    %edx,(%esp)
call   806e970 <dbus_message_unref>
xor    %edx,%edx
jmp    806f430 <dbus_message_new_method_call+0xd0>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0x4ef,0x10(%esp)
jmp    806f458 <dbus_message_new_method_call+0xf8>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b08b(%ebx),%eax
movl   $0x4f0,0x10(%esp)
jmp    806f458 <dbus_message_new_method_call+0xf8>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x48ab0,%ebx
test   %ebp,%ebp
je     806f6e2 <dbus_message_copy+0x1a2>
movl   $0x7c,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     806f6b4 <dbus_message_copy+0x174>
mov    %eax,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
andb   $0xfe,0x50(%esi)
mov    0x68(%ebp),%eax
mov    %eax,0x68(%esi)
lea    0x4(%esi),%eax
mov    %eax,0x1c(%esp)
mov    %eax,0x4(%esp)
lea    0x4(%ebp),%eax
mov    %eax,(%esp)
call   8092a40 <dbus_bus_remove_match+0x1810>
test   %eax,%eax
je     806f6ac <dbus_message_copy+0x16c>
lea    0x40(%esi),%eax
mov    %eax,%ecx
mov    %eax,0x18(%esp)
mov    0x44(%ebp),%eax
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   807f2d0 <dbus_shutdown+0x5f0>
test   %eax,%eax
je     806f6a0 <dbus_message_copy+0x160>
mov    0x18(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
lea    0x40(%ebp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     806f653 <dbus_message_copy+0x113>
mov    0x70(%ebp),%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,0x6c(%esi)
je     806f6d0 <dbus_message_copy+0x190>
mov    0x70(%ebp),%edx
mov    %edx,0x74(%esi)
movl   $0x0,0x70(%esi)
mov    0x70(%ebp),%edi
test   %edi,%edi
je     806f690 <dbus_message_copy+0x150>
xor    %edx,%edx
jmp    806f62b <dbus_message_copy+0xeb>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
mov    %edx,0x70(%esi)
cmp    %edx,0x70(%ebp)
jbe    806f690 <dbus_message_copy+0x150>
lea    (%eax,%edx,4),%edi
movl   $0x0,0x4(%esp)
mov    0x6c(%ebp),%eax
mov    (%eax,%edx,4),%eax
mov    %eax,(%esp)
call   8082cd0 <dbus_shutdown+0x3ff0>
mov    %eax,(%edi)
mov    0x6c(%esi),%eax
mov    0x70(%esi),%edx
mov    (%eax,%edx,4),%ecx
test   %ecx,%ecx
jns    806f620 <dbus_message_copy+0xe0>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8092a20 <dbus_bus_remove_match+0x17f0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x70(%esi),%edx
mov    0x6c(%esi),%eax
test   %edx,%edx
jne    806f6c0 <dbus_message_copy+0x180>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8092a20 <dbus_bus_remove_match+0x17f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x70(%esi),%edx
call   806e7d0 <dbus_set_error+0x36d0>
mov    0x6c(%esi),%eax
jmp    806f675 <dbus_message_copy+0x135>
lea    0x0(%esi),%esi
mov    0x70(%ebp),%edx
test   %edx,%edx
jne    806f653 <dbus_message_copy+0x113>
xor    %edx,%edx
jmp    806f607 <dbus_message_copy+0xc7>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a8ad(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x5ea,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    806f687 <dbus_message_copy+0x147>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x488d2,%ebx
test   %esi,%esi
je     806f7ba <dbus_message_ref+0x9a>
lea    0x350(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x68(%esi)
jne    806f760 <dbus_message_ref+0x40>
testb  $0x2,0x50(%esi)
jne    806f7a0 <dbus_message_ref+0x80>
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1bc34(%ebx),%eax
movl   $0x63b,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a8be(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0c1(%ebx),%eax
movl   $0x63c,0x10(%esp)
jmp    806f778 <dbus_message_ref+0x58>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x63a,0x10(%esp)
jmp    806f778 <dbus_message_ref+0x58>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x48813,%ebx
test   %eax,%eax
je     806f808 <dbus_message_get_type+0x28>
add    $0x4,%eax
mov    %eax,(%esp)
call   80928e0 <dbus_bus_remove_match+0x16b0>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a8e7(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x66f,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x487a0,%ebx
mov    0x54(%esp),%esi
test   %edi,%edi
je     806f960 <dbus_message_iter_init+0x110>
test   %esi,%esi
je     806f920 <dbus_message_iter_init+0xd0>
lea    0x4(%edi),%ebp
add    $0x8,%esi
lea    0x2c(%esp),%eax
lea    0x28(%esp),%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   806e680 <dbus_set_error+0x3580>
mov    %edi,%eax
call   806e6e0 <dbus_set_error+0x35e0>
mov    -0x4(%esi),%edx
mov    %edi,-0x8(%esi)
mov    0x5c(%edi),%eax
add    $0x40,%edi
and    $0xffe00000,%edx
and    $0x1fffff,%eax
or     %eax,%edx
mov    %edx,-0x4(%esi)
shr    $0x10,%edx
and    $0x1f,%edx
or     $0x60,%edx
mov    %dl,-0x2(%esi)
mov    0x2c(%esp),%ecx
mov    0x28(%esp),%edx
movb   $0x0,-0x1(%esi)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
mov    0x1c(%esp),%ecx
mov    0x18(%esp),%edx
mov    %edi,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
movsbl %al,%eax
mov    %eax,0x4(%esp)
movl   $0x0,0x14(%esp)
call   806b7f0 <dbus_set_error+0x6f0>
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
setne  %al
add    $0x3c,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b07c(%ebx),%eax
movl   $0x7cb,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a96b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x7ca,0x10(%esp)
jmp    806f938 <dbus_message_iter_init+0xe8>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x48676,%ebx
mov    0x30(%esp),%esi
mov    %esi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     806fa08 <dbus_message_iter_has_next+0x88>
movzbl 0x6(%esi),%edx
and    $0xffffffe0,%edx
cmp    $0x60,%dl
je     806f9f0 <dbus_message_iter_has_next+0x70>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b950(%ebx),%eax
movl   $0x7e7,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a986(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%esi
mov    %esi,(%esp)
call   806be60 <dbus_set_error+0xd60>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
movl   $0x7e6,0x10(%esp)
jmp    806f9c3 <dbus_message_iter_has_next+0x43>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x485c6,%ebx
mov    0x30(%esp),%esi
mov    %esi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     806fab8 <dbus_message_iter_next+0x88>
movzbl 0x6(%esi),%edx
and    $0xffffffe0,%edx
cmp    $0x60,%dl
je     806faa0 <dbus_message_iter_next+0x70>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b950(%ebx),%eax
movl   $0x7fa,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a99d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%esi
mov    %esi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
movl   $0x7f9,0x10(%esp)
jmp    806fa73 <dbus_message_iter_next+0x43>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x48516,%ebx
mov    0x30(%esp),%esi
mov    %esi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     806fb68 <dbus_message_iter_get_arg_type+0x88>
movzbl 0x6(%esi),%edx
and    $0xffffffe0,%edx
cmp    $0x60,%dl
je     806fb50 <dbus_message_iter_get_arg_type+0x70>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b950(%ebx),%eax
movl   $0x813,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a9bc(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%esi
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
movl   $0x812,0x10(%esp)
jmp    806fb23 <dbus_message_iter_get_arg_type+0x43>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x90(%esp),%eax
mov    0x98(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x48456,%ebx
mov    %eax,0x30(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x34(%esp)
mov    0x9c(%esp),%eax
mov    %eax,0x2c(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
test   %esi,%esi
je     806fd0b <dbus_message_iter_get_arg_type+0x22b>
mov    0x30(%esp),%eax
xor    %ebp,%ebp
add    $0x8,%eax
mov    %eax,0x28(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806fae0 <dbus_message_iter_get_arg_type>
cmp    %esi,%eax
jne    806fea8 <dbus_message_iter_get_arg_type+0x3c8>
cmp    $0x68,%esi
je     806fc98 <dbus_message_iter_get_arg_type+0x1b8>
mov    %esi,(%esp)
call   8077dc0 <dbus_type_is_basic>
test   %eax,%eax
jne    806fe68 <dbus_message_iter_get_arg_type+0x388>
cmp    $0x61,%esi
jne    806ff18 <dbus_message_iter_get_arg_type+0x438>
mov    0x2c(%esp),%eax
mov    (%eax),%esi
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806b8c0 <dbus_set_error+0x7c0>
cmp    %eax,%esi
jne    806ff37 <dbus_message_iter_get_arg_type+0x457>
mov    %esi,(%esp)
call   8077e60 <dbus_type_is_fixed>
test   %eax,%eax
je     806fd30 <dbus_message_iter_get_arg_type+0x250>
cmp    $0x68,%esi
je     806fd3f <dbus_message_iter_get_arg_type+0x25f>
mov    0x2c(%esp),%edx
lea    0x48(%esp),%edi
mov    0x4(%edx),%eax
lea    0xc(%edx),%esi
mov    0x8(%edx),%edx
mov    %edi,0x4(%esp)
mov    %eax,0x24(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,(%esp)
call   806ba30 <dbus_set_error+0x930>
mov    0x20(%esp),%edx
mov    0x24(%esp),%eax
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   806b9a0 <dbus_set_error+0x8a0>
jmp    806fce6 <dbus_message_iter_get_arg_type+0x206>
nop
mov    0x2c(%esp),%eax
mov    (%eax),%edi
lea    0x4(%eax),%esi
lea    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    0x30(%esp),%edx
mov    0x64(%esp),%eax
mov    (%edx),%edx
mov    0x70(%edx),%ecx
cmp    %ecx,%eax
jae    806ff7c <dbus_message_iter_get_arg_type+0x49c>
mov    0x34(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    0x6c(%edx),%edx
mov    (%edx,%eax,4),%eax
mov    %eax,(%esp)
call   8082cd0 <dbus_shutdown+0x3ff0>
test   %eax,%eax
js     806fd57 <dbus_message_iter_get_arg_type+0x277>
mov    %eax,(%edi)
lea    0x4(%esi),%eax
mov    (%esi),%esi
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806bb40 <dbus_set_error+0xa40>
test   %eax,%eax
jne    806fe58 <dbus_message_iter_get_arg_type+0x378>
test   %esi,%esi
jne    806feed <dbus_message_iter_get_arg_type+0x40d>
mov    $0x1,%eax
mov    0x6c(%esp),%edx
xor    %gs:0x14,%edx
jne    806ffab <dbus_message_iter_get_arg_type+0x4cb>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
and    $0xfffffff7,%eax
cmp    $0x67,%eax
je     806fd60 <dbus_message_iter_get_arg_type+0x280>
cmp    $0x73,%esi
je     806fd60 <dbus_message_iter_get_arg_type+0x280>
lea    -0x1a7a0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1b7f4(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
xor    %eax,%eax
jmp    806fd10 <dbus_message_iter_get_arg_type+0x230>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
lea    0x48(%esp),%esi
xor    %edi,%edi
mov    0x4(%eax),%edx
mov    0x8(%eax),%eax
mov    %esi,0x4(%esp)
mov    %edx,0x38(%esp)
mov    %eax,0x3c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806ba30 <dbus_set_error+0x930>
jmp    806fd9b <dbus_message_iter_get_arg_type+0x2bb>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
add    $0x1,%edi
call   806bb40 <dbus_set_error+0xa40>
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
jne    806fd90 <dbus_message_iter_get_arg_type+0x2b0>
lea    0x4(,%edi,4),%eax
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     806fe28 <dbus_message_iter_get_arg_type+0x348>
mov    0x28(%esp),%eax
xor    %ebp,%ebp
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806ba30 <dbus_set_error+0x930>
test   %edi,%edi
je     806fe8c <dbus_message_iter_get_arg_type+0x3ac>
lea    0x44(%esp),%eax
mov    %edi,0x24(%esp)
mov    %eax,%edi
jmp    806fdfd <dbus_message_iter_get_arg_type+0x31d>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
add    $0x1,%ebp
call   806bb40 <dbus_set_error+0xa40>
cmp    0x24(%esp),%ebp
je     806fe88 <dbus_message_iter_get_arg_type+0x3a8>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    0x20(%esp),%ecx
test   %eax,%eax
mov    %eax,(%ecx,%ebp,4)
jne    806fde8 <dbus_message_iter_get_arg_type+0x308>
mov    %ecx,(%esp)
call   807ec20 <dbus_free_string_array>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    806fd10 <dbus_message_iter_get_arg_type+0x230>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
test   %esi,%esi
jne    806fbeb <dbus_message_iter_get_arg_type+0x10b>
jmp    806fd0b <dbus_message_iter_get_arg_type+0x22b>
mov    0x2c(%esp),%eax
lea    0x4(%eax),%esi
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806b920 <dbus_set_error+0x820>
jmp    806fce6 <dbus_message_iter_get_arg_type+0x206>
xchg   %ax,%ax
mov    0x24(%esp),%edi
mov    0x38(%esp),%eax
mov    0x20(%esp),%edx
mov    0x2c(%esp),%esi
mov    %edx,(%eax)
mov    0x3c(%esp),%eax
add    $0xc,%esi
mov    %edi,(%eax)
jmp    806fce6 <dbus_message_iter_get_arg_type+0x206>
mov    %eax,(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    %esi,(%esp)
mov    %eax,%edi
call   807e700 <dbus_watch_handle+0x2b40>
mov    %edi,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x1b91c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21a2c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    806fd10 <dbus_message_iter_get_arg_type+0x230>
lea    -0x1b764(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21a2c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    806fd10 <dbus_message_iter_get_arg_type+0x230>
lea    -0x1a7a0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    -0x1b7a0(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
xor    %eax,%eax
jmp    806fd10 <dbus_message_iter_get_arg_type+0x230>
mov    %eax,(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    %esi,(%esp)
mov    %eax,%edi
call   807e700 <dbus_watch_handle+0x2b40>
mov    %edi,0x14(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x1b848(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21a2c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    806fd10 <dbus_message_iter_get_arg_type+0x230>
mov    %eax,0xc(%esp)
lea    -0x1b8d0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1b878(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    806fd10 <dbus_message_iter_get_arg_type+0x230>
call   80962d0 <dbus_bus_remove_match+0x50a0>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x4803d,%ebx
mov    0x84(%esp),%esi
test   %edi,%edi
je     8070068 <dbus_message_get_args_valist+0xb8>
test   %esi,%esi
je     806ffe8 <dbus_message_get_args_valist+0x38>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8070028 <dbus_message_get_args_valist+0x78>
lea    0x28(%esp),%ebp
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   806f850 <dbus_message_iter_init>
mov    0x8c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x8(%esp)
call   806fb90 <dbus_message_iter_get_arg_type+0xb0>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x794,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a954(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x793,0x10(%esp)
jmp    8070040 <dbus_message_get_args_valist+0x90>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x47f61,%ebx
mov    0x34(%esp),%esi
test   %edi,%edi
je     8070120 <dbus_message_get_args+0x90>
test   %esi,%esi
je     80700bd <dbus_message_get_args+0x2d>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    80700e0 <dbus_message_get_args+0x50>
lea    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   806ffb0 <dbus_message_get_args_valist>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x778,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a937(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x777,0x10(%esp)
jmp    80700f8 <dbus_message_get_args+0x68>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47eb6,%ebx
mov    0x30(%esp),%esi
mov    %esi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     80701d0 <dbus_message_iter_get_element_type+0x90>
movzbl 0x6(%esi),%eax
and    $0xffffffe0,%eax
cmp    $0x60,%al
je     80701a8 <dbus_message_iter_get_element_type+0x68>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b950(%ebx),%eax
movl   $0x826,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a9e0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,(%esp)
call   806fae0 <dbus_message_iter_get_arg_type>
cmp    $0x61,%eax
je     80701f0 <dbus_message_iter_get_element_type+0xb0>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b72c(%ebx),%eax
movl   $0x827,0x10(%esp)
jmp    8070182 <dbus_message_iter_get_element_type+0x42>
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
movl   $0x825,0x10(%esp)
jmp    8070182 <dbus_message_iter_get_element_type+0x42>
lea    0x0(%esi),%esi
add    $0x8,%esi
mov    %esi,(%esp)
call   806b8c0 <dbus_set_error+0x7c0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
jmp    8070210 <dbus_message_iter_recurse>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47de5,%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
mov    %esi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     8070290 <dbus_message_iter_recurse+0x80>
test   %edi,%edi
je     80702d0 <dbus_message_iter_recurse+0xc0>
mov    (%esi),%eax
add    $0x8,%edi
add    $0x8,%esi
mov    %eax,-0x8(%edi)
mov    -0x4(%esi),%eax
mov    %eax,-0x4(%edi)
mov    (%esi),%eax
mov    %eax,(%edi)
mov    0x4(%esi),%eax
mov    %eax,0x4(%edi)
mov    0x8(%esi),%eax
mov    %eax,0x8(%edi)
mov    0xc(%esi),%eax
mov    %eax,0xc(%edi)
mov    0x10(%esi),%eax
mov    %eax,0x10(%edi)
mov    0x14(%esi),%eax
mov    %eax,0x14(%edi)
mov    0x18(%esi),%eax
mov    %eax,0x18(%edi)
mov    0x1c(%esi),%eax
mov    %eax,0x1c(%edi)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806ba30 <dbus_set_error+0x930>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
movl   $0x84c,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aa00(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b06f(%ebx),%eax
movl   $0x84d,0x10(%esp)
jmp    80702a8 <dbus_message_iter_recurse+0x98>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47d05,%ebx
mov    0x50(%esp),%edi
mov    %edi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     80703a0 <dbus_message_iter_get_signature+0xb0>
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8070390 <dbus_message_iter_get_signature+0xa0>
lea    0x2c(%esp),%eax
add    $0x8,%edi
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806bec0 <dbus_set_error+0xdc0>
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    (%eax),%eax
add    0x28(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807fa10 <dbus_shutdown+0xd30>
test   %eax,%eax
je     8070390 <dbus_message_iter_get_signature+0xa0>
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     8070390 <dbus_message_iter_get_signature+0xa0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x24(%esp),%eax
add    $0x40,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1aa20(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x867,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x40,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47c15,%ebx
mov    0x40(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x44(%esp),%edi
mov    %esi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     8070450 <dbus_message_iter_get_basic+0x70>
test   %edi,%edi
je     80704b0 <dbus_message_iter_get_basic+0xd0>
mov    %esi,(%esp)
call   806fae0 <dbus_message_iter_get_arg_type>
cmp    $0x68,%eax
je     8070488 <dbus_message_iter_get_basic+0xa8>
add    $0x8,%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    0x2c(%esp),%eax
xor    %gs:0x14,%eax
jne    80704ed <dbus_message_iter_get_basic+0x10d>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
movl   $0x8ad,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aa40(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    8070434 <dbus_message_iter_get_basic+0x54>
lea    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x8(%esi),%eax
mov    %eax,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    (%esi),%edx
mov    0x24(%esp),%eax
cmp    0x70(%edx),%eax
jb     80704d0 <dbus_message_iter_get_basic+0xf0>
movl   $0xffffffff,(%edi)
jmp    8070434 <dbus_message_iter_get_basic+0x54>
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b063(%ebx),%eax
movl   $0x8ae,0x10(%esp)
jmp    8070468 <dbus_message_iter_get_basic+0x88>
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    0x6c(%edx),%edx
mov    (%edx,%eax,4),%eax
mov    %eax,(%esp)
call   8082cd0 <dbus_shutdown+0x3ff0>
mov    %eax,(%edi)
jmp    8070434 <dbus_message_iter_get_basic+0x54>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47af6,%ebx
mov    0x30(%esp),%esi
mov    %esi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     8070530 <dbus_message_iter_get_array_len+0x30>
add    $0x8,%esi
mov    %esi,(%esp)
call   806b970 <dbus_set_error+0x870>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1aa60(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x8e1,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47a84,%ebx
mov    0x40(%esp),%esi
lea    0x8(%esi),%edi
mov    %edi,(%esp)
call   806b870 <dbus_set_error+0x770>
mov    %eax,%ebp
mov    %esi,%eax
call   806eb70 <dbus_message_unref+0x200>
test   %eax,%eax
je     80705e0 <dbus_message_iter_get_fixed_array+0x70>
mov    0x44(%esp),%eax
test   %eax,%eax
je     8070640 <dbus_message_iter_get_fixed_array+0xd0>
test   %ebp,%ebp
je     80705bf <dbus_message_iter_get_fixed_array+0x4f>
mov    %ebp,(%esp)
call   8077e60 <dbus_type_is_fixed>
test   %eax,%eax
je     8070620 <dbus_message_iter_get_fixed_array+0xb0>
cmp    $0x68,%ebp
je     8070620 <dbus_message_iter_get_fixed_array+0xb0>
mov    0x48(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
call   806b9a0 <dbus_set_error+0x8a0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b970(%ebx),%eax
movl   $0x912,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aaa0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b6f0(%ebx),%eax
movl   $0x915,0x10(%esp)
jmp    80705f8 <dbus_message_iter_get_fixed_array+0x88>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b063(%ebx),%eax
movl   $0x913,0x10(%esp)
jmp    80705f8 <dbus_message_iter_get_fixed_array+0x88>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x47990,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     8070728 <dbus_message_iter_init_append+0xc8>
test   %edi,%edi
je     80706e8 <dbus_message_iter_init_append+0x88>
mov    %esi,%eax
add    $0x8,%edi
call   806e6e0 <dbus_set_error+0x35e0>
mov    -0x4(%edi),%eax
mov    %esi,-0x8(%edi)
mov    0x5c(%esi),%edx
and    $0xffe00000,%eax
and    $0x1fffff,%edx
or     %edx,%eax
mov    %eax,-0x4(%edi)
shr    $0x10,%eax
or     $0xffffffe0,%eax
mov    %al,-0x2(%edi)
lea    0x4(%esi),%eax
add    $0x40,%esi
movb   $0x0,-0x1(%edi)
mov    0x4(%esi),%ebp
mov    %eax,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %edi,(%esp)
movsbl %al,%eax
mov    %eax,0x4(%esp)
call   806c4f0 <dbus_set_error+0x13f0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b07c(%ebx),%eax
movl   $0x92e,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aad9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x92d,0x10(%esp)
jmp    8070700 <dbus_message_iter_init_append+0xa0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x478a4,%ebx
mov    0x50(%esp),%esi
mov    %esi,%eax
call   806ec60 <dbus_message_unref+0x2f0>
test   %eax,%eax
je     8070830 <dbus_message_iter_append_basic+0xe0>
movzbl 0x6(%esi),%eax
and    $0xffffffe0,%eax
cmp    $0xe0,%al
je     80707c0 <dbus_message_iter_append_basic+0x70>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b664(%ebx),%eax
movl   $0xa1b,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aaf8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8077dc0 <dbus_type_is_basic>
test   %eax,%eax
je     80708c0 <dbus_message_iter_append_basic+0x170>
mov    0x58(%esp),%edx
test   %edx,%edx
je     8070a58 <dbus_message_iter_append_basic+0x308>
cmpl   $0x67,0x54(%esp)
je     8070910 <dbus_message_iter_append_basic+0x1c0>
jle    8070850 <dbus_message_iter_append_basic+0x100>
cmpl   $0x6f,0x54(%esp)
je     8070948 <dbus_message_iter_append_basic+0x1f8>
cmpl   $0x73,0x54(%esp)
jne    8070860 <dbus_message_iter_append_basic+0x110>
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806e440 <dbus_set_error+0x3340>
test   %eax,%eax
jne    8070860 <dbus_message_iter_append_basic+0x110>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b630(%ebx),%eax
movl   $0xa27,0x10(%esp)
jmp    8070798 <dbus_message_iter_append_basic+0x48>
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b68c(%ebx),%eax
movl   $0xa1a,0x10(%esp)
jmp    8070798 <dbus_message_iter_append_basic+0x48>
lea    0x0(%esi),%esi
cmpl   $0x62,0x54(%esp)
je     80708e0 <dbus_message_iter_append_basic+0x190>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esi),%eax
test   %eax,%eax
je     8070a40 <dbus_message_iter_append_basic+0x2f0>
addb   $0x1,0x7(%esi)
cmpl   $0x68,0x54(%esp)
je     8070980 <dbus_message_iter_append_basic+0x230>
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x8(%esi),%eax
mov    %eax,(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
mov    %eax,%edi
movzbl 0x7(%esi),%eax
lea    -0x1(%eax),%edx
mov    %edi,%eax
test   %dl,%dl
mov    %dl,0x7(%esi)
jne    80707b8 <dbus_message_iter_append_basic+0x68>
mov    %esi,%eax
call   806edd0 <dbus_message_unref+0x460>
test   %eax,%eax
cmovne %edi,%eax
jmp    80707b8 <dbus_message_iter_append_basic+0x68>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b055(%ebx),%eax
movl   $0xa1c,0x10(%esp)
jmp    8070798 <dbus_message_iter_append_basic+0x48>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
cmpl   $0x1,(%eax)
jbe    8070860 <dbus_message_iter_append_basic+0x110>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b03b(%ebx),%eax
movl   $0xa36,0x10(%esp)
jmp    8070798 <dbus_message_iter_append_basic+0x48>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806e3f0 <dbus_set_error+0x32f0>
test   %eax,%eax
jne    8070860 <dbus_message_iter_append_basic+0x110>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b5e0(%ebx),%eax
movl   $0xa31,0x10(%esp)
jmp    8070798 <dbus_message_iter_append_basic+0x48>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   806e260 <dbus_set_error+0x3160>
test   %eax,%eax
jne    8070860 <dbus_message_iter_append_basic+0x110>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b608(%ebx),%eax
movl   $0xa2c,0x10(%esp)
jmp    8070798 <dbus_message_iter_append_basic+0x48>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%edi
mov    0x70(%edi),%edx
lea    0x1(%edx),%eax
cmp    0x74(%edi),%eax
ja     8070a00 <dbus_message_iter_append_basic+0x2b0>
mov    0x6c(%edi),%eax
lea    (%eax,%edx,4),%edi
test   %edi,%edi
je     80707b6 <dbus_message_iter_append_basic+0x66>
mov    0x58(%esp),%eax
movl   $0x0,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   8082cd0 <dbus_shutdown+0x3ff0>
test   %eax,%eax
mov    %eax,(%edi)
js     80707b6 <dbus_message_iter_append_basic+0x66>
mov    (%esi),%eax
lea    0x2c(%esp),%ebp
mov    0x70(%eax),%eax
mov    %ebp,0x8(%esp)
movl   $0x68,0x4(%esp)
mov    %eax,0x2c(%esp)
lea    0x8(%esi),%eax
mov    %eax,(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
jne    8070a75 <dbus_message_iter_append_basic+0x325>
movl   $0x0,0x4(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
jmp    80707b6 <dbus_message_iter_append_basic+0x66>
xchg   %ax,%ax
lea    (%eax,%eax,1),%ebp
shl    $0x3,%eax
cmp    $0x3,%ebp
ja     8070a15 <dbus_message_iter_append_basic+0x2c5>
mov    $0x10,%eax
mov    $0x4,%ebp
mov    %eax,0x4(%esp)
mov    0x6c(%edi),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     80707b6 <dbus_message_iter_append_basic+0x66>
mov    %eax,0x6c(%edi)
mov    0x70(%edi),%edx
mov    %ebp,0x74(%edi)
jmp    8070990 <dbus_message_iter_append_basic+0x240>
lea    0x0(%esi),%esi
mov    %esi,%eax
call   806ecb0 <dbus_message_unref+0x340>
test   %eax,%eax
je     80707b8 <dbus_message_iter_append_basic+0x68>
nop
jmp    807086f <dbus_message_iter_append_basic+0x11f>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b063(%ebx),%eax
movl   $0xa1d,0x10(%esp)
jmp    8070798 <dbus_message_iter_append_basic+0x48>
mov    (%esi),%eax
addl   $0x1,0x2c(%esp)
addl   $0x1,0x70(%eax)
mov    %ebp,0xc(%esp)
movl   $0x75,0x8(%esp)
movl   $0x9,0x4(%esp)
mov    (%esi),%eax
add    $0x4,%eax
mov    %eax,(%esp)
call   8092f70 <dbus_bus_remove_match+0x1d40>
mov    %eax,%edi
jmp    8070897 <dbus_message_iter_append_basic+0x147>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47546,%ebx
mov    0x30(%esp),%esi
mov    %esi,%eax
call   806ec60 <dbus_message_unref+0x2f0>
test   %eax,%eax
je     8070bb8 <dbus_message_iter_append_fixed_array+0x108>
movzbl 0x6(%esi),%edx
and    $0xffffffe0,%edx
cmp    $0xe0,%dl
je     8070b20 <dbus_message_iter_append_fixed_array+0x70>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b664(%ebx),%eax
movl   $0xaa3,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ab20(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8077e60 <dbus_type_is_fixed>
test   %eax,%eax
je     8070bd8 <dbus_message_iter_append_fixed_array+0x128>
cmpl   $0x68,0x34(%esp)
je     8070bd8 <dbus_message_iter_append_fixed_array+0x128>
cmpb   $0x61,0x9(%esi)
jne    8070bf8 <dbus_message_iter_append_fixed_array+0x148>
mov    0x38(%esp),%ecx
test   %ecx,%ecx
je     8070cad <dbus_message_iter_append_fixed_array+0x1fd>
mov    0x3c(%esp),%edx
test   %edx,%edx
js     8070c50 <dbus_message_iter_append_fixed_array+0x1a0>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    %eax,%ecx
mov    $0x4000000,%eax
cltd
idiv   %ecx
cmp    %eax,0x3c(%esp)
jg     8070c70 <dbus_message_iter_append_fixed_array+0x1c0>
cmpl   $0x62,0x34(%esp)
je     8070c18 <dbus_message_iter_append_fixed_array+0x168>
mov    0x3c(%esp),%eax
add    $0x8,%esi
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   806d0e0 <dbus_set_error+0x1fe0>
jmp    8070b17 <dbus_message_iter_append_fixed_array+0x67>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b68c(%ebx),%eax
movl   $0xaa2,0x10(%esp)
jmp    8070af7 <dbus_message_iter_append_fixed_array+0x47>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b5b4(%ebx),%eax
movl   $0xaa4,0x10(%esp)
jmp    8070af7 <dbus_message_iter_append_fixed_array+0x47>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b56c(%ebx),%eax
movl   $0xaa5,0x10(%esp)
jmp    8070af7 <dbus_message_iter_append_fixed_array+0x47>
lea    0x0(%esi),%esi
mov    0x3c(%esp),%eax
test   %eax,%eax
je     8070b8c <dbus_message_iter_append_fixed_array+0xdc>
mov    0x38(%esp),%eax
mov    (%eax),%edx
xor    %eax,%eax
cmpl   $0x1,(%edx)
jbe    8070c3e <dbus_message_iter_append_fixed_array+0x18e>
jmp    8070c90 <dbus_message_iter_append_fixed_array+0x1e0>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,(%edx,%eax,4)
ja     8070c90 <dbus_message_iter_append_fixed_array+0x1e0>
add    $0x1,%eax
cmp    0x3c(%esp),%eax
jne    8070c38 <dbus_message_iter_append_fixed_array+0x188>
jmp    8070b8c <dbus_message_iter_append_fixed_array+0xdc>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b01e(%ebx),%eax
movl   $0xaa7,0x10(%esp)
jmp    8070af7 <dbus_message_iter_append_fixed_array+0x47>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b538(%ebx),%eax
movl   $0xaaa,0x10(%esp)
jmp    8070af7 <dbus_message_iter_append_fixed_array+0x47>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b4e4(%ebx),%eax
movl   $0xab4,0x10(%esp)
jmp    8070af7 <dbus_message_iter_append_fixed_array+0x47>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b063(%ebx),%eax
movl   $0xaa6,0x10(%esp)
jmp    8070af7 <dbus_message_iter_append_fixed_array+0x47>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47324,%ebx
mov    0x50(%esp),%esi
mov    0x5c(%esp),%edi
mov    %esi,%eax
call   806ec60 <dbus_message_unref+0x2f0>
test   %eax,%eax
je     8070e60 <dbus_message_iter_open_container+0x190>
movzbl 0x6(%esi),%eax
and    $0xffffffe0,%eax
cmp    $0xe0,%al
je     8070d48 <dbus_message_iter_open_container+0x78>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b664(%ebx),%eax
movl   $0xade,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ab60(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   8077c70 <dbus_type_is_container>
test   %eax,%eax
je     8070ec8 <dbus_message_iter_open_container+0x1f8>
test   %edi,%edi
je     8070f40 <dbus_message_iter_open_container+0x270>
mov    0x58(%esp),%ebp
test   %ebp,%ebp
setne  %al
cmpl   $0x65,0x54(%esp)
mov    %eax,%ebp
setne  %cl
cmpl   $0x72,0x54(%esp)
setne  %al
test   %al,%cl
jne    8070d89 <dbus_message_iter_open_container+0xb9>
mov    %ebp,%eax
test   %al,%al
je     8070da5 <dbus_message_iter_open_container+0xd5>
mov    0x58(%esp),%ecx
test   %ecx,%ecx
sete   %al
cmpl   $0x76,0x54(%esp)
jne    8070e80 <dbus_message_iter_open_container+0x1b0>
test   %al,%al
jne    8070e80 <dbus_message_iter_open_container+0x1b0>
cmpl   $0x61,0x54(%esp)
je     8070ea8 <dbus_message_iter_open_container+0x1d8>
mov    %ebp,%eax
test   %al,%al
je     8070dca <dbus_message_iter_open_container+0xfa>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806e3f0 <dbus_set_error+0x32f0>
test   %eax,%eax
je     8070ee8 <dbus_message_iter_open_container+0x218>
mov    0xc(%esi),%eax
test   %eax,%eax
je     8070f28 <dbus_message_iter_open_container+0x258>
addb   $0x1,0x7(%esi)
mov    (%esi),%eax
mov    %eax,(%edi)
mov    0x4(%esi),%eax
mov    %eax,0x4(%edi)
mov    0x8(%esi),%eax
mov    %eax,0x8(%edi)
mov    0xc(%esi),%eax
mov    %eax,0xc(%edi)
mov    0x10(%esi),%eax
mov    %eax,0x10(%edi)
mov    0x14(%esi),%eax
mov    %eax,0x14(%edi)
mov    0x18(%esi),%eax
mov    %eax,0x18(%edi)
mov    0x1c(%esi),%eax
mov    %eax,0x1c(%edi)
mov    0x20(%esi),%eax
mov    %eax,0x20(%edi)
mov    0x24(%esi),%eax
mov    %eax,0x24(%edi)
mov    %ebp,%eax
test   %al,%al
je     8070f08 <dbus_message_iter_open_container+0x238>
mov    0x58(%esp),%eax
lea    0x20(%esp),%ebp
add    $0x8,%edi
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    0x54(%esp),%eax
add    $0x8,%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806c5d0 <dbus_set_error+0x14d0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b68c(%ebx),%eax
movl   $0xadd,0x10(%esp)
jmp    8070d1c <dbus_message_iter_open_container+0x4c>
lea    0x0(%esi),%esi
cmpl   $0x61,0x54(%esp)
jne    8070e8b <dbus_message_iter_open_container+0x1bb>
test   %al,%al
je     8070eb4 <dbus_message_iter_open_container+0x1e4>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b4bc(%ebx),%eax
movl   $0xae8,0x10(%esp)
jmp    8070d1c <dbus_message_iter_open_container+0x4c>
mov    0x58(%esp),%edx
test   %edx,%edx
je     8070db0 <dbus_message_iter_open_container+0xe0>
mov    0x58(%esp),%eax
cmpb   $0x7b,(%eax)
jne    8070db6 <dbus_message_iter_open_container+0xe6>
jmp    8070dca <dbus_message_iter_open_container+0xfa>
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b00e(%ebx),%eax
movl   $0xadf,0x10(%esp)
jmp    8070d1c <dbus_message_iter_open_container+0x4c>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b3c4(%ebx),%eax
movl   $0xaf1,0x10(%esp)
jmp    8070d1c <dbus_message_iter_open_container+0x4c>
lea    0x0(%esi),%esi
add    $0x8,%edi
mov    %edi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
jmp    8070e44 <dbus_message_iter_open_container+0x174>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
call   806ecb0 <dbus_message_unref+0x340>
test   %eax,%eax
je     8070d3c <dbus_message_iter_open_container+0x6c>
jmp    8070dd9 <dbus_message_iter_open_container+0x109>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b06f(%ebx),%eax
movl   $0xae0,0x10(%esp)
jmp    8070d1c <dbus_message_iter_open_container+0x4c>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x47095,%ebx
mov    0x30(%esp),%esi
mov    %esi,%eax
call   806ec60 <dbus_message_unref+0x2f0>
test   %eax,%eax
je     8071010 <dbus_message_iter_close_container+0xb0>
movzbl 0x6(%esi),%edx
and    $0xffffffe0,%edx
cmp    $0xe0,%dl
je     8070fd0 <dbus_message_iter_close_container+0x70>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b664(%ebx),%eax
movl   $0xb21,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aba0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x34(%esp),%eax
call   806ec60 <dbus_message_unref+0x2f0>
test   %eax,%eax
je     8071070 <dbus_message_iter_close_container+0x110>
mov    0x34(%esp),%eax
movzbl 0x6(%eax),%eax
and    $0xffffffe0,%eax
cmp    $0xe0,%al
je     8071030 <dbus_message_iter_close_container+0xd0>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b2d8(%ebx),%eax
movl   $0xb23,0x10(%esp)
jmp    8070fa8 <dbus_message_iter_close_container+0x48>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b68c(%ebx),%eax
movl   $0xb20,0x10(%esp)
jmp    8070fa8 <dbus_message_iter_close_container+0x48>
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
add    $0x8,%eax
mov    %eax,0x4(%esp)
lea    0x8(%esi),%eax
mov    %eax,(%esp)
call   806c6b0 <dbus_set_error+0x15b0>
mov    %eax,%edi
movzbl 0x7(%esi),%eax
lea    -0x1(%eax),%edx
mov    %edi,%eax
test   %dl,%dl
mov    %dl,0x7(%esi)
jne    8070fc8 <dbus_message_iter_close_container+0x68>
mov    %esi,%eax
call   806edd0 <dbus_message_unref+0x460>
test   %eax,%eax
cmovne %edi,%eax
jmp    8070fc8 <dbus_message_iter_close_container+0x68>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b304(%ebx),%eax
movl   $0xb22,0x10(%esp)
jmp    8070fa8 <dbus_message_iter_close_container+0x48>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x46f65,%ebx
mov    0x30(%esp),%esi
mov    %esi,%eax
call   806ec60 <dbus_message_unref+0x2f0>
test   %eax,%eax
je     8071138 <dbus_message_iter_abandon_container+0xa8>
movzbl 0x6(%esi),%edx
and    $0xffffffe0,%edx
cmp    $0xe0,%dl
je     8071100 <dbus_message_iter_abandon_container+0x70>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b664(%ebx),%eax
movl   $0xb42,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1abe0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
call   806ec60 <dbus_message_unref+0x2f0>
test   %eax,%eax
je     8071188 <dbus_message_iter_abandon_container+0xf8>
mov    0x34(%esp),%eax
movzbl 0x6(%eax),%eax
and    $0xffffffe0,%eax
cmp    $0xe0,%al
je     8071158 <dbus_message_iter_abandon_container+0xc8>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b2d8(%ebx),%eax
movl   $0xb44,0x10(%esp)
jmp    80710d8 <dbus_message_iter_abandon_container+0x48>
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b68c(%ebx),%eax
movl   $0xb41,0x10(%esp)
jmp    80710d8 <dbus_message_iter_abandon_container+0x48>
lea    0x0(%esi),%esi
subb   $0x1,0x7(%esi)
jne    80710f6 <dbus_message_iter_abandon_container+0x66>
mov    0xc(%esi),%edi
add    $0x8,%esi
mov    %esi,(%esp)
call   806c560 <dbus_set_error+0x1460>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
jmp    80710f6 <dbus_message_iter_abandon_container+0x66>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b304(%ebx),%eax
movl   $0xb43,0x10(%esp)
jmp    80710d8 <dbus_message_iter_abandon_container+0x48>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xbc,%esp
mov    0xd0(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x46e3a,%ebx
mov    0xd4(%esp),%esi
mov    0xd8(%esp),%edi
test   %eax,%eax
je     80713aa <dbus_message_append_args_valist+0x1fa>
lea    0x40(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x28(%esp)
call   8070660 <dbus_message_iter_init_append>
test   %esi,%esi
je     80712d1 <dbus_message_append_args_valist+0x121>
lea    0x78(%esp),%eax
mov    %edi,%edx
mov    %eax,0x20(%esp)
mov    %esi,(%esp)
mov    %edx,0x24(%esp)
call   8077dc0 <dbus_type_is_basic>
mov    0x24(%esp),%edx
test   %eax,%eax
jne    8071380 <dbus_message_append_args_valist+0x1d0>
cmp    $0x61,%esi
jne    80713ed <dbus_message_append_args_valist+0x23d>
mov    (%edx),%ebp
movl   $0x61,0x4(%esp)
mov    %edx,0x24(%esp)
movb   $0x0,0x3f(%esp)
mov    %ebp,%eax
mov    %al,0x3e(%esp)
mov    0x20(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x3e(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8070cd0 <dbus_message_iter_open_container>
test   %eax,%eax
je     807130b <dbus_message_append_args_valist+0x15b>
mov    %ebp,(%esp)
call   8077e60 <dbus_type_is_fixed>
mov    0x24(%esp),%edx
test   %eax,%eax
je     80712d8 <dbus_message_append_args_valist+0x128>
cmp    $0x68,%ebp
je     80712e7 <dbus_message_append_args_valist+0x137>
lea    0xc(%edx),%eax
mov    %eax,0x2c(%esp)
mov    0x8(%edx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%edx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8070ab0 <dbus_message_iter_append_fixed_array>
test   %eax,%eax
je     8071368 <dbus_message_append_args_valist+0x1b8>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8070f60 <dbus_message_iter_close_container>
test   %eax,%eax
je     807130b <dbus_message_append_args_valist+0x15b>
mov    0x2c(%esp),%eax
mov    (%eax),%esi
lea    0x4(%eax),%edx
test   %esi,%esi
jne    8071208 <dbus_message_append_args_valist+0x58>
mov    $0x1,%eax
jmp    807130d <dbus_message_append_args_valist+0x15d>
mov    %ebp,%eax
and    $0xfffffff7,%eax
cmp    $0x67,%eax
je     8071318 <dbus_message_append_args_valist+0x168>
cmp    $0x73,%ebp
je     8071318 <dbus_message_append_args_valist+0x168>
mov    %ebp,(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
lea    -0x1a920(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x1b2a0(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
xor    %eax,%eax
add    $0xbc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0xc(%edx),%eax
mov    %eax,0x2c(%esp)
mov    0x8(%edx),%eax
mov    %eax,%ecx
mov    %eax,0x24(%esp)
mov    0x4(%edx),%eax
test   %ecx,%ecx
mov    (%eax),%edx
jle    80712a8 <dbus_message_append_args_valist+0xf8>
xor    %esi,%esi
mov    %esi,%edi
mov    %edx,%esi
jmp    8071350 <dbus_message_append_args_valist+0x1a0>
lea    0x0(%esi),%esi
add    $0x1,%edi
add    $0x4,%esi
cmp    0x24(%esp),%edi
je     80712a8 <dbus_message_append_args_valist+0xf8>
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
jne    8071340 <dbus_message_append_args_valist+0x190>
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8071090 <dbus_message_iter_abandon_container>
jmp    807130b <dbus_message_append_args_valist+0x15b>
xchg   %ax,%ax
lea    0x4(%edx),%eax
mov    %eax,0x2c(%esp)
mov    (%edx),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
jne    80712c0 <dbus_message_append_args_valist+0x110>
jmp    807130b <dbus_message_append_args_valist+0x15b>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a920(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x6da,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0xbc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
lea    -0x1a920(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x1b270(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
xor    %eax,%eax
jmp    807130d <dbus_message_append_args_valist+0x15d>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x46bd3,%ebx
test   %eax,%eax
je     8071458 <dbus_message_append_args+0x38>
lea    0x38(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x34(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80711b0 <dbus_message_append_args_valist>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a900(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x6ba,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x46b53,%ebx
test   %eax,%eax
je     8071520 <dbus_message_set_no_reply+0x80>
testb  $0x1,0x50(%eax)
jne    80714e0 <dbus_message_set_no_reply+0x40>
mov    0x34(%esp),%edx
add    $0x4,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   8093930 <dbus_bus_remove_match+0x2700>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0xb5f,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ac01(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xb5e,0x10(%esp)
jmp    80714f8 <dbus_message_set_no_reply+0x58>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x46ab0,%ebx
mov    0x44(%esp),%edi
test   %esi,%esi
je     80716cd <dbus_message_new_signal+0x18d>
test   %edi,%edi
je     80716ea <dbus_message_new_signal+0x1aa>
mov    0x48(%esp),%eax
test   %eax,%eax
je     80716b0 <dbus_message_new_signal+0x170>
mov    %esi,(%esp)
call   806e260 <dbus_set_error+0x3160>
test   %eax,%eax
je     8071618 <dbus_message_new_signal+0xd8>
mov    %edi,(%esp)
call   806e2b0 <dbus_set_error+0x31b0>
test   %eax,%eax
je     8071658 <dbus_message_new_signal+0x118>
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   806e300 <dbus_set_error+0x3200>
test   %eax,%eax
je     8071678 <dbus_message_new_signal+0x138>
call   806e4f0 <dbus_set_error+0x33f0>
test   %eax,%eax
mov    %eax,%ebp
je     80716a8 <dbus_message_new_signal+0x168>
mov    0x48(%esp),%eax
movl   $0x0,0x1c(%esp)
mov    %edi,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %eax,0x18(%esp)
lea    0x4(%ebp),%eax
movl   $0x0,0xc(%esp)
movl   $0x4,0x8(%esp)
movl   $0x6c,0x4(%esp)
mov    %eax,(%esp)
call   8092b30 <dbus_bus_remove_match+0x1900>
test   %eax,%eax
je     8071698 <dbus_message_new_signal+0x158>
movl   $0x1,0x4(%esp)
mov    %ebp,(%esp)
call   80714a0 <dbus_message_set_no_reply>
mov    %ebp,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b9f4(%ebx),%eax
movl   $0x54c,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a866(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b24c(%ebx),%eax
movl   $0x54d,0x10(%esp)
jmp    8071630 <dbus_message_new_signal+0xf0>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b224(%ebx),%eax
movl   $0x54e,0x10(%esp)
jmp    8071630 <dbus_message_new_signal+0xf0>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
xor    %eax,%eax
jmp    807160e <dbus_message_new_signal+0xce>
nop
xor    %eax,%eax
jmp    807160e <dbus_message_new_signal+0xce>
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0x54b,0x10(%esp)
jmp    8071630 <dbus_message_new_signal+0xf0>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0x549,0x10(%esp)
jmp    8071630 <dbus_message_new_signal+0xf0>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1aff0(%ebx),%eax
movl   $0x54a,0x10(%esp)
jmp    8071630 <dbus_message_new_signal+0xf0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x468e3,%ebx
test   %eax,%eax
je     8071740 <dbus_message_get_no_reply+0x30>
add    $0x4,%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8093990 <dbus_bus_remove_match+0x2760>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1ac1b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xb70,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x46873,%ebx
test   %eax,%eax
je     8071808 <dbus_message_set_auto_start+0x88>
testb  $0x1,0x50(%eax)
jne    80717c8 <dbus_message_set_auto_start+0x48>
mov    0x34(%esp),%ecx
xor    %edx,%edx
movl   $0x2,0x4(%esp)
test   %ecx,%ecx
sete   %dl
add    $0x4,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8093930 <dbus_bus_remove_match+0x2700>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0xb89,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ac37(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xb88,0x10(%esp)
jmp    80717e0 <dbus_message_set_auto_start+0x60>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x467c3,%ebx
test   %eax,%eax
je     8071868 <dbus_message_get_auto_start+0x38>
add    $0x4,%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8093990 <dbus_bus_remove_match+0x2760>
test   %eax,%eax
sete   %al
add    $0x28,%esp
movzbl %al,%eax
pop    %ebx
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1ac53(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xb9a,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x46741,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8071968 <dbus_message_set_path+0xb8>
testb  $0x1,0x50(%esi)
jne    8071908 <dbus_message_set_path+0x58>
test   %edi,%edi
je     80718e7 <dbus_message_set_path+0x37>
mov    %edi,(%esp)
call   806e260 <dbus_set_error+0x3160>
test   %eax,%eax
je     8071948 <dbus_message_set_path+0x98>
mov    %edi,0x34(%esp)
mov    %esi,%eax
mov    $0x1,%edx
movl   $0x6f,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    806e770 <dbus_set_error+0x3670>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0xbb2,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ac69(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b200(%ebx),%eax
movl   $0xbb5,0x10(%esp)
jmp    8071920 <dbus_message_set_path+0x70>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xbb1,0x10(%esp)
jmp    8071920 <dbus_message_set_path+0x70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x46663,%ebx
test   %eax,%eax
je     80719e0 <dbus_message_get_path+0x50>
lea    0x2c(%esp),%edx
add    $0x4,%eax
mov    %edx,0xc(%esp)
movl   $0x6f,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
mov    0x2c(%esp),%eax
add    $0x38,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1ac7f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xbcf,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    80719d6 <dbus_message_get_path+0x46>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x465d6,%ebx
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
mov    %eax,(%esp)
call   8071990 <dbus_message_get_path>
test   %eax,%eax
je     8071a68 <dbus_message_has_path+0x48>
test   %esi,%esi
je     8071a78 <dbus_message_has_path+0x58>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
test   %esi,%esi
sete   %al
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8071a5c <dbus_message_has_path+0x3c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x46571,%ebx
mov    0x34(%esp),%esi
test   %eax,%eax
je     8071b30 <dbus_message_get_path_decomposed+0xb0>
test   %esi,%esi
je     8071af0 <dbus_message_get_path_decomposed+0x70>
movl   $0x0,(%esi)
mov    %eax,(%esp)
call   8071990 <dbus_message_get_path>
mov    %eax,%edi
mov    $0x1,%eax
test   %edi,%edi
je     8071ae6 <dbus_message_get_path_decomposed+0x66>
mov    %edi,(%esp)
call   804d600 <strlen@plt>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80749a0 <dbus_message_demarshal_bytes_needed+0xe80>
test   %eax,%eax
setne  %al
movzbl %al,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddfa(%ebx),%eax
movl   $0xc15,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aca0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xc14,0x10(%esp)
jmp    8071b08 <dbus_message_get_path_decomposed+0x88>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x464a1,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8071c08 <dbus_message_set_interface+0xb8>
testb  $0x1,0x50(%esi)
jne    8071ba8 <dbus_message_set_interface+0x58>
test   %edi,%edi
je     8071b87 <dbus_message_set_interface+0x37>
mov    %edi,(%esp)
call   806e2b0 <dbus_set_error+0x31b0>
test   %eax,%eax
je     8071be8 <dbus_message_set_interface+0x98>
mov    %edi,0x34(%esp)
mov    %esi,%eax
mov    $0x2,%edx
movl   $0x73,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    806e770 <dbus_set_error+0x3670>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0xc35,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1accf(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b9d0(%ebx),%eax
movl   $0xc38,0x10(%esp)
jmp    8071bc0 <dbus_message_set_interface+0x70>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xc34,0x10(%esp)
jmp    8071bc0 <dbus_message_set_interface+0x70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x463c3,%ebx
test   %eax,%eax
je     8071c80 <dbus_message_get_interface+0x50>
lea    0x2c(%esp),%edx
add    $0x4,%eax
mov    %edx,0xc(%esp)
movl   $0x73,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
mov    0x2c(%esp),%eax
add    $0x38,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1acea(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xc52,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8071c76 <dbus_message_get_interface+0x46>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x46336,%ebx
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
mov    %eax,(%esp)
call   8071c30 <dbus_message_get_interface>
test   %eax,%eax
je     8071d08 <dbus_message_has_interface+0x48>
test   %esi,%esi
je     8071d18 <dbus_message_has_interface+0x58>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
test   %esi,%esi
sete   %al
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8071cfc <dbus_message_has_interface+0x3c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x462d1,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8071dd8 <dbus_message_set_member+0xb8>
testb  $0x1,0x50(%esi)
jne    8071d78 <dbus_message_set_member+0x58>
test   %edi,%edi
je     8071d57 <dbus_message_set_member+0x37>
mov    %edi,(%esp)
call   806e300 <dbus_set_error+0x3200>
test   %eax,%eax
je     8071db8 <dbus_message_set_member+0x98>
mov    %edi,0x34(%esp)
mov    %esi,%eax
mov    $0x3,%edx
movl   $0x73,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    806e770 <dbus_set_error+0x3670>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0xc8d,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ad02(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b1c0(%ebx),%eax
movl   $0xc90,0x10(%esp)
jmp    8071d90 <dbus_message_set_member+0x70>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xc8c,0x10(%esp)
jmp    8071d90 <dbus_message_set_member+0x70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x461f3,%ebx
test   %eax,%eax
je     8071e50 <dbus_message_get_member+0x50>
lea    0x2c(%esp),%edx
add    $0x4,%eax
mov    %edx,0xc(%esp)
movl   $0x73,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
mov    0x2c(%esp),%eax
add    $0x38,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1ad1a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xca8,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8071e46 <dbus_message_get_member+0x46>
lea    0x0(%esi),%esi
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x46164,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   806f7e0 <dbus_message_get_type>
cmp    %edi,%eax
je     8071ec0 <dbus_message_get_member+0xc0>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8071e00 <dbus_message_get_member>
test   %eax,%eax
je     8071eb1 <dbus_message_get_member+0xb1>
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    8071eb1 <dbus_message_get_member+0xb1>
mov    %esi,(%esp)
call   8071c30 <dbus_message_get_interface>
test   %eax,%eax
je     8071f06 <dbus_message_get_member+0x106>
mov    0x20(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
jmp    8071eb3 <dbus_message_get_member+0xb3>
mov    $0x1,%eax
jmp    8071eb3 <dbus_message_get_member+0xb3>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x460e6,%ebx
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
mov    %eax,(%esp)
call   8071e00 <dbus_message_get_member>
test   %eax,%eax
je     8071f58 <dbus_message_has_member+0x48>
test   %esi,%esi
je     8071f68 <dbus_message_has_member+0x58>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
test   %esi,%esi
sete   %al
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8071f4c <dbus_message_has_member+0x3c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x46081,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8072028 <dbus_message_set_error_name+0xb8>
testb  $0x1,0x50(%esi)
jne    8071fc8 <dbus_message_set_error_name+0x58>
test   %edi,%edi
je     8071fa7 <dbus_message_set_error_name+0x37>
mov    %edi,(%esp)
call   806e350 <dbus_set_error+0x3250>
test   %eax,%eax
je     8072008 <dbus_message_set_error_name+0x98>
mov    %edi,0x34(%esp)
mov    %esi,%eax
mov    $0x4,%edx
movl   $0x73,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    806e770 <dbus_set_error+0x3670>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0xce2,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ad36(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b188(%ebx),%eax
movl   $0xce5,0x10(%esp)
jmp    8071fe0 <dbus_message_set_error_name+0x70>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xce1,0x10(%esp)
jmp    8071fe0 <dbus_message_set_error_name+0x70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x45fa3,%ebx
test   %eax,%eax
je     80720a0 <dbus_message_get_error_name+0x50>
lea    0x2c(%esp),%edx
add    $0x4,%eax
mov    %edx,0xc(%esp)
movl   $0x73,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
mov    0x2c(%esp),%eax
add    $0x38,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1ad52(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xcfc,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8072096 <dbus_message_get_error_name+0x46>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x45f11,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8072198 <dbus_message_set_destination+0xb8>
testb  $0x1,0x50(%esi)
jne    8072138 <dbus_message_set_destination+0x58>
test   %edi,%edi
je     8072117 <dbus_message_set_destination+0x37>
mov    %edi,(%esp)
call   806e3a0 <dbus_set_error+0x32a0>
test   %eax,%eax
je     8072178 <dbus_message_set_destination+0x98>
mov    %edi,0x34(%esp)
mov    %esi,%eax
mov    $0x6,%edx
movl   $0x73,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    806e770 <dbus_set_error+0x3670>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0xd18,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ad6f(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ba38(%ebx),%eax
movl   $0xd1b,0x10(%esp)
jmp    8072150 <dbus_message_set_destination+0x70>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xd17,0x10(%esp)
jmp    8072150 <dbus_message_set_destination+0x70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x45e33,%ebx
test   %eax,%eax
je     8072210 <dbus_message_get_destination+0x50>
lea    0x2c(%esp),%edx
add    $0x4,%eax
mov    %edx,0xc(%esp)
movl   $0x73,0x8(%esp)
movl   $0x6,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
mov    0x2c(%esp),%eax
add    $0x38,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1ad8c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xd31,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8072206 <dbus_message_get_destination+0x46>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x45da1,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8072308 <dbus_message_set_sender+0xb8>
testb  $0x1,0x50(%esi)
jne    80722a8 <dbus_message_set_sender+0x58>
test   %edi,%edi
je     8072287 <dbus_message_set_sender+0x37>
mov    %edi,(%esp)
call   806e3a0 <dbus_set_error+0x32a0>
test   %eax,%eax
je     80722e8 <dbus_message_set_sender+0x98>
mov    %edi,0x34(%esp)
mov    %esi,%eax
mov    $0x7,%edx
movl   $0x73,0x30(%esp)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    806e770 <dbus_set_error+0x3670>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b0ae(%ebx),%eax
movl   $0xd4e,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ada4(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b144(%ebx),%eax
movl   $0xd51,0x10(%esp)
jmp    80722c0 <dbus_message_set_sender+0x70>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xd4d,0x10(%esp)
jmp    80722c0 <dbus_message_set_sender+0x70>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x45cc3,%ebx
test   %eax,%eax
je     8072380 <dbus_message_get_sender+0x50>
lea    0x2c(%esp),%edx
add    $0x4,%eax
mov    %edx,0xc(%esp)
movl   $0x73,0x8(%esp)
movl   $0x7,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
mov    0x2c(%esp),%eax
add    $0x38,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1adbc(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xd6d,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8072376 <dbus_message_get_sender+0x46>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x45c30,%ebx
test   %edi,%edi
je     8072490 <dbus_message_new_method_return+0xd0>
mov    %edi,(%esp)
call   8072330 <dbus_message_get_sender>
mov    %eax,%ebp
call   806e4f0 <dbus_set_error+0x33f0>
test   %eax,%eax
mov    %eax,%esi
je     8072488 <dbus_message_new_method_return+0xc8>
lea    0x4(%eax),%eax
movl   $0x0,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x2,0x8(%esp)
movl   $0x6c,0x4(%esp)
mov    %eax,(%esp)
call   8092b30 <dbus_bus_remove_match+0x1900>
test   %eax,%eax
je     8072470 <dbus_message_new_method_return+0xb0>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   80714a0 <dbus_message_set_no_reply>
mov    %edi,(%esp)
call   806f0a0 <dbus_message_get_serial>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806f110 <dbus_message_set_reply_serial>
test   %eax,%eax
je     8072470 <dbus_message_new_method_return+0xb0>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
xor    %esi,%esi
call   806e970 <dbus_message_unref>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    8072462 <dbus_message_new_method_return+0xa2>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
xor    %esi,%esi
mov    %eax,0xc(%esp)
lea    -0x1afe2(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a84c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x515,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    8072462 <dbus_message_new_method_return+0xa2>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x45b1d,%ebx
mov    0x84(%esp),%esi
test   %edx,%edx
je     807269b <dbus_message_new_error+0x1cb>
test   %esi,%esi
je     8072660 <dbus_message_new_error+0x190>
mov    %esi,(%esp)
call   806e350 <dbus_set_error+0x3250>
test   %eax,%eax
je     8072600 <dbus_message_new_error+0x130>
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   8072330 <dbus_message_get_sender>
mov    %eax,%ebp
call   806e4f0 <dbus_set_error+0x33f0>
test   %eax,%eax
mov    %eax,%edi
je     8072658 <dbus_message_new_error+0x188>
lea    0x4(%eax),%eax
mov    %esi,0x1c(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x3,0x8(%esp)
movl   $0x6c,0x4(%esp)
mov    %eax,(%esp)
call   8092b30 <dbus_bus_remove_match+0x1900>
test   %eax,%eax
je     80725e8 <dbus_message_new_error+0x118>
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   80714a0 <dbus_message_set_no_reply>
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   806f0a0 <dbus_message_get_serial>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806f110 <dbus_message_set_reply_serial>
test   %eax,%eax
je     80725e8 <dbus_message_new_error+0x118>
mov    0x88(%esp),%eax
mov    %edi,%esi
test   %eax,%eax
je     80725da <dbus_message_new_error+0x10a>
lea    0x28(%esp),%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8070660 <dbus_message_iter_init_append>
lea    0x88(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %edi,(%esp)
call   8070750 <dbus_message_iter_append_basic>
test   %eax,%eax
je     8072648 <dbus_message_new_error+0x178>
add    $0x6c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
xor    %esi,%esi
call   806e970 <dbus_message_unref>
add    $0x6c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b108(%ebx),%eax
movl   $0x57b,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a87d(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x6c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
xor    %esi,%esi
call   806e970 <dbus_message_unref>
jmp    80725da <dbus_message_new_error+0x10a>
lea    0x0(%esi,%eiz,1),%esi
xor    %esi,%esi
jmp    80725da <dbus_message_new_error+0x10a>
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1afbd(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a87d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x57a,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    80725da <dbus_message_new_error+0x10a>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1afce(%ebx),%eax
movl   $0x579,0x10(%esp)
jmp    8072618 <dbus_message_new_error+0x148>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x45930,%ebx
mov    0x54(%esp),%esi
test   %eax,%eax
je     80727c2 <dbus_message_new_error_printf+0x102>
test   %esi,%esi
je     80727a8 <dbus_message_new_error_printf+0xe8>
mov    %esi,(%esp)
call   806e350 <dbus_set_error+0x3250>
test   %eax,%eax
je     8072760 <dbus_message_new_error_printf+0xa0>
lea    0x20(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
je     8072730 <dbus_message_new_error_printf+0x70>
lea    0x5c(%esp),%eax
xor    %ebp,%ebp
mov    %eax,0x8(%esp)
mov    0x58(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f960 <dbus_shutdown+0xc80>
test   %eax,%eax
jne    8072740 <dbus_message_new_error_printf+0x80>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,%edx
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   80724d0 <dbus_message_new_error>
mov    %eax,%ebp
jmp    8072726 <dbus_message_new_error_printf+0x66>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b108(%ebx),%eax
movl   $0x5c4,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a89b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1afbd(%ebx),%eax
movl   $0x5c3,0x10(%esp)
jmp    8072778 <dbus_message_new_error_printf+0xb8>
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1afce(%ebx),%eax
movl   $0x5c2,0x10(%esp)
jmp    8072778 <dbus_message_new_error_printf+0xb8>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x38,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x45813,%ebx
test   %eax,%eax
je     8072820 <dbus_message_get_signature+0x40>
lea    0x2c(%esp),%ecx
add    $0x4,%eax
lea    0x28(%esp),%edx
mov    %ecx,(%esp)
call   806e680 <dbus_set_error+0x3580>
mov    0x28(%esp),%eax
mov    (%eax),%eax
add    0x2c(%esp),%eax
add    $0x38,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1add7(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xd8f,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8072814 <dbus_message_get_signature+0x34>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x45793,%ebx
mov    0x34(%esp),%edx
mov    0x38(%esp),%ecx
test   %eax,%eax
je     80728e0 <dbus_message_is_method_call+0x80>
test   %edx,%edx
je     8072900 <dbus_message_is_method_call+0xa0>
test   %ecx,%ecx
je     80728a0 <dbus_message_is_method_call+0x40>
mov    %edx,0x30(%esp)
mov    $0x1,%edx
mov    %ecx,0x34(%esp)
add    $0x28,%esp
pop    %ebx
jmp    8071e90 <dbus_message_get_member+0x90>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1b08b(%ebx),%eax
movl   $0xdcb,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1adf3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xdc9,0x10(%esp)
jmp    80728b8 <dbus_message_is_method_call+0x58>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1aff0(%ebx),%eax
movl   $0xdca,0x10(%esp)
jmp    80728b8 <dbus_message_is_method_call+0x58>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x456d3,%ebx
mov    0x34(%esp),%edx
mov    0x38(%esp),%ecx
test   %eax,%eax
je     80729a0 <dbus_message_is_signal+0x80>
test   %edx,%edx
je     80729c0 <dbus_message_is_signal+0xa0>
test   %ecx,%ecx
je     8072960 <dbus_message_is_signal+0x40>
mov    %edx,0x30(%esp)
mov    $0x4,%edx
mov    %ecx,0x34(%esp)
add    $0x28,%esp
pop    %ebx
jmp    8071e90 <dbus_message_get_member+0x90>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1afaa(%ebx),%eax
movl   $0xde7,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ae0a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xde5,0x10(%esp)
jmp    8072978 <dbus_message_is_signal+0x58>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1aff0(%ebx),%eax
movl   $0xde6,0x10(%esp)
jmp    8072978 <dbus_message_is_signal+0x58>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x45610,%ebx
mov    0x44(%esp),%ebp
test   %esi,%esi
je     8072a98 <dbus_message_is_error+0xb8>
test   %ebp,%ebp
je     8072a50 <dbus_message_is_error+0x70>
mov    %esi,(%esp)
xor    %edi,%edi
call   806f7e0 <dbus_message_get_type>
cmp    $0x3,%eax
je     8072a20 <dbus_message_is_error+0x40>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
call   8072050 <dbus_message_get_error_name>
test   %eax,%eax
je     8072a15 <dbus_message_is_error+0x35>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x2c,%esp
movzbl %al,%eax
mov    %eax,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1afbd(%ebx),%eax
movl   $0xe02,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ae20(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xe01,0x10(%esp)
jmp    8072a68 <dbus_message_is_error+0x88>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x45532,%ebx
mov    0x34(%esp),%esi
test   %eax,%eax
je     8072b50 <dbus_message_has_destination+0x90>
test   %esi,%esi
je     8072b10 <dbus_message_has_destination+0x50>
mov    %eax,(%esp)
call   80721c0 <dbus_message_get_destination>
test   %eax,%eax
je     8072b08 <dbus_message_has_destination+0x48>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x24,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0xe23,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ae3d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xe22,0x10(%esp)
jmp    8072b28 <dbus_message_has_destination+0x68>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x45482,%ebx
mov    0x34(%esp),%esi
test   %eax,%eax
je     8072c00 <dbus_message_has_sender+0x90>
test   %esi,%esi
je     8072bc0 <dbus_message_has_sender+0x50>
mov    %eax,(%esp)
call   8072330 <dbus_message_get_sender>
test   %eax,%eax
je     8072bb8 <dbus_message_has_sender+0x48>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x24,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0xe46,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ae55(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xe45,0x10(%esp)
jmp    8072bd8 <dbus_message_has_sender+0x68>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x453d2,%ebx
mov    0x34(%esp),%esi
test   %eax,%eax
je     8072cb0 <dbus_message_has_signature+0x90>
test   %esi,%esi
je     8072c70 <dbus_message_has_signature+0x50>
mov    %eax,(%esp)
call   80727e0 <dbus_message_get_signature>
test   %eax,%eax
je     8072c68 <dbus_message_has_signature+0x48>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
sete   %al
add    $0x24,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1af96(%ebx),%eax
movl   $0xe63,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ae70(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xe62,0x10(%esp)
jmp    8072c88 <dbus_message_has_signature+0x68>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x45320,%ebx
mov    0x50(%esp),%edi
test   %esi,%esi
je     8072de0 <dbus_set_error_from_message+0x110>
test   %edi,%edi
je     8072d02 <dbus_set_error_from_message+0x32>
mov    %edi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8072d20 <dbus_set_error_from_message+0x50>
mov    %esi,(%esp)
xor    %ebp,%ebp
call   806f7e0 <dbus_message_get_type>
cmp    $0x3,%eax
je     8072d68 <dbus_set_error_from_message+0x98>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0xe8d,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1ae8c(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x2c(%esp),%eax
mov    %esi,(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x73,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x2c(%esp)
call   8070090 <dbus_message_get_args>
mov    0x2c(%esp),%edx
lea    -0x1828e(%ebx),%eax
mov    %esi,(%esp)
test   %edx,%edx
cmovne %eax,%ebp
mov    %edx,0x1c(%esp)
call   8072050 <dbus_message_get_error_name>
mov    0x1c(%esp),%edx
mov    %ebp,0x8(%esp)
mov    $0x1,%ebp
mov    %edi,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   806b100 <dbus_set_error>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0xe8c,0x10(%esp)
jmp    8072d38 <dbus_set_error_from_message+0x68>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x70(%eax),%eax
test   %eax,%eax
setne  %al
movzbl %al,%eax
ret
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x451e8,%ebx
sub    $0x10,%esp
movl   $0x3c,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8072eb8 <dbus_message_contains_unix_fds+0xb8>
andb   $0xfe,0x24(%eax)
lea    0x4(%eax),%edi
movl   $0x1,(%eax)
movl   $0x0,0x20(%eax)
movl   $0x8000000,0x18(%eax)
movl   $0x10,0x1c(%eax)
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8072ea8 <dbus_message_contains_unix_fds+0xa8>
movl   $0x20,0x4(%esp)
mov    %edi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    %esi,%eax
andb   $0xfb,0x24(%esi)
movl   $0x0,0x28(%esi)
movl   $0x0,0x2c(%esi)
movl   $0x0,0x30(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8072ea0 <dbus_message_contains_unix_fds+0xa0>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8072ea0 <dbus_message_contains_unix_fds+0xa0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x45121,%ebx
subl   $0x1,(%esi)
jne    8072f34 <dbus_message_contains_unix_fds+0x134>
mov    0x30(%esi),%edx
mov    0x28(%esi),%eax
test   %edx,%edx
jne    8072f40 <dbus_message_contains_unix_fds+0x140>
mov    %eax,(%esp)
lea    0x14(%esi),%edi
call   807ebb0 <dbus_free>
lea    -0x49690(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %edi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x4(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esi),%edx
call   806e7d0 <dbus_set_error+0x36d0>
mov    0x28(%esi),%eax
jmp    8072ef4 <dbus_message_contains_unix_fds+0xf4>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
lea    0x4(%eax),%ecx
mov    %ecx,(%edx)
orb    $0x2,0x24(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
andb   $0xfd,0x24(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x45072,%ebx
mov    0x1c(%esi),%eax
cmp    %eax,0x2c(%esi)
jb     8072fc8 <dbus_message_contains_unix_fds+0x1c8>
mov    0x28(%esi),%eax
mov    0x30(%esi),%edx
lea    (%eax,%edx,4),%edx
mov    0x24(%esp),%eax
mov    %edx,(%eax)
mov    0x28(%esp),%edx
mov    0x2c(%esi),%eax
sub    0x30(%esi),%eax
mov    %eax,(%edx)
mov    $0x1,%eax
orb    $0x4,0x24(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x28(%esi),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     8072ff0 <dbus_message_contains_unix_fds+0x1f0>
mov    0x1c(%esi),%edx
mov    %eax,0x28(%esi)
mov    %edx,0x2c(%esi)
jmp    8072f9f <dbus_message_contains_unix_fds+0x19f>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8072fc0 <dbus_message_contains_unix_fds+0x1c0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x28(%esp),%edx
add    %edx,0x30(%eax)
andb   $0xfb,0x24(%eax)
test   %edx,%edx
je     8073025 <dbus_message_contains_unix_fds+0x225>
mov    0x34(%eax),%edx
test   %edx,%edx
je     8073025 <dbus_message_contains_unix_fds+0x225>
mov    0x38(%eax),%eax
mov    %eax,(%esp)
call   *%edx
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa0(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x44fba,%ebx
testb  $0x1,0x24(%ebp)
jne    807332b <dbus_message_contains_unix_fds+0x52b>
mov    0x8(%ebp),%eax
cmp    $0xf,%eax
jle    807332b <dbus_message_contains_unix_fds+0x52b>
lea    0x4(%ebp),%ecx
lea    0x6c(%esp),%edi
mov    %ecx,0x28(%esp)
lea    0x68(%esp),%ecx
mov    %edi,0x48(%esp)
lea    0x64(%esp),%edi
mov    %ecx,0x44(%esp)
lea    0x60(%esp),%ecx
mov    %edi,0x40(%esp)
lea    0x5c(%esp),%edi
mov    %ecx,0x3c(%esp)
lea    0x70(%esp),%ecx
mov    %edi,0x38(%esp)
mov    %ecx,0x4c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x48(%esp),%esi
mov    %eax,0x20(%esp)
mov    0x44(%esp),%ecx
mov    0x28(%esp),%eax
mov    0x40(%esp),%edi
mov    %esi,0x14(%esp)
mov    0x3c(%esp),%edx
mov    0x38(%esp),%esi
movl   $0x0,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    %ecx,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    0x18(%ebp),%eax
mov    %eax,(%esp)
call   8092e00 <dbus_bus_remove_match+0x1bd0>
test   %eax,%eax
je     8073340 <dbus_message_contains_unix_fds+0x540>
call   806e4f0 <dbus_set_error+0x33f0>
test   %eax,%eax
mov    %eax,%edi
je     8073368 <dbus_message_contains_unix_fds+0x568>
mov    0x60(%esp),%esi
mov    0x6c(%esp),%ecx
mov    0x68(%esp),%edx
movl   $0x0,0x7c(%esp)
mov    %esi,0x2c(%esp)
lea    0x4(%eax),%esi
mov    0x8(%ebp),%eax
movl   $0x0,0x20(%esp)
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x24(%esp)
mov    0x28(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x30(%esp)
mov    %eax,0x1c(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x34(%esp)
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
call   8093210 <dbus_bus_remove_match+0x1fe0>
test   %eax,%eax
jne    80731c8 <dbus_message_contains_unix_fds+0x3c8>
mov    0x70(%esp),%eax
cmp    $0xfffffffc,%eax
je     8073290 <dbus_message_contains_unix_fds+0x490>
orb    $0x1,0x24(%ebp)
lea    0x14(%ebp),%esi
mov    %eax,0x20(%ebp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807d960 <dbus_watch_handle+0x1da0>
mov    0x8(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807eaa0 <dbus_watch_handle+0x2ee0>
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
movzbl 0x24(%ebp),%eax
and    $0x1,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x78(%esp),%eax
lea    0x74(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   806e680 <dbus_set_error+0x3580>
mov    0x30(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x18(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x78(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   806dd50 <dbus_set_error+0x2c50>
test   %eax,%eax
mov    %eax,0x70(%esp)
jne    8073179 <dbus_message_contains_unix_fds+0x379>
lea    0x7c(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x75,0x8(%esp)
movl   $0x9,0x4(%esp)
mov    %esi,(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
mov    0x7c(%esp),%eax
cmp    %eax,0x30(%ebp)
jae    8073260 <dbus_message_contains_unix_fds+0x460>
orb    $0x1,0x24(%ebp)
lea    0x14(%ebp),%esi
movl   $0x38,0x20(%ebp)
jmp    8073183 <dbus_message_contains_unix_fds+0x383>
xchg   %ax,%ax
mov    0x6c(%edi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x7c(%esp),%eax
test   %eax,%eax
je     8073298 <dbus_message_contains_unix_fds+0x498>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x28(%ebp),%eax
mov    %eax,(%esp)
call   807ce20 <dbus_watch_handle+0x1260>
test   %eax,%eax
mov    %eax,0x6c(%edi)
jne    8073375 <dbus_message_contains_unix_fds+0x575>
lea    0x14(%ebp),%esi
jmp    8073183 <dbus_message_contains_unix_fds+0x383>
movl   $0x0,0x6c(%edi)
lea    0x14(%ebp),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8073183 <dbus_message_contains_unix_fds+0x383>
lea    0x40(%edi),%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     8073183 <dbus_message_contains_unix_fds+0x383>
mov    0x28(%esp),%edi
mov    0x30(%esp),%eax
add    0x34(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   807fac0 <dbus_shutdown+0xde0>
movl   $0x800,0x4(%esp)
mov    %edi,(%esp)
call   807f410 <dbus_shutdown+0x730>
testb  $0x1,0x24(%ebp)
jne    807332b <dbus_message_contains_unix_fds+0x52b>
mov    0x8(%ebp),%eax
cmp    $0xf,%eax
jg     80730a0 <dbus_message_contains_unix_fds+0x2a0>
add    $0x8c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x5c(%esp),%edx
mov    $0x1,%eax
test   %edx,%edx
je     80731b9 <dbus_message_contains_unix_fds+0x3b9>
orb    $0x1,0x24(%ebp)
mov    %edx,0x20(%ebp)
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x8c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x7c(%esp),%eax
mov    %eax,0x70(%edi)
mov    %eax,0x74(%edi)
mov    0x30(%ebp),%edx
mov    0x28(%ebp),%esi
sub    %eax,%edx
mov    %edx,0x30(%ebp)
lea    (%esi,%eax,4),%eax
shl    $0x2,%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804d140 <memmove@plt>
mov    0x34(%ebp),%eax
test   %eax,%eax
je     807329f <dbus_message_contains_unix_fds+0x49f>
mov    0x38(%ebp),%edx
mov    %edx,(%esp)
call   *%eax
jmp    807329f <dbus_message_contains_unix_fds+0x49f>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x14(%eax),%eax
test   %eax,%eax
je     80733d0 <dbus_message_contains_unix_fds+0x5d0>
mov    0x8(%eax),%eax
ret
nop
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x44c13,%ebx
add    $0x14,%eax
mov    %eax,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x44be3,%ebx
add    $0x14,%eax
mov    %eax,(%esp)
call   807d9f0 <dbus_watch_handle+0x1e30>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x44bb3,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
add    $0x14,%eax
mov    %eax,(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x24(%eax),%eax
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x20(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    $0x8000000,%eax
cmp    $0x8000000,%edx
cmovle %edx,%eax
mov    0x4(%esp),%edx
mov    %eax,0x18(%edx)
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x18(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    $0x2000000,%eax
cmp    $0x2000000,%edx
cmovle %edx,%eax
mov    0x4(%esp),%edx
mov    %eax,0x1c(%edx)
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0x1c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x30(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %edx,0x34(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x38(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x44ada,%ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x834(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x83c(%ebx),%eax
mov    %eax,(%esp)
call   807bcc0 <dbus_watch_handle+0x100>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x44a93,%ebx
mov    (%eax),%edx
test   %edx,%edx
js     8073590 <dbus_message_free_data_slot+0x30>
mov    %eax,0x4(%esp)
lea    0x83c(%ebx),%eax
mov    %eax,(%esp)
call   807be10 <dbus_watch_handle+0x250>
add    $0x28,%esp
pop    %ebx
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddc1(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1aea8(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x119a,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x44a22,%ebx
mov    0x44(%esp),%edx
test   %eax,%eax
je     8073690 <dbus_message_set_data+0xc0>
test   %edx,%edx
js     8073650 <dbus_message_set_data+0x80>
lea    0x2c(%esp),%ecx
add    $0x60,%eax
mov    %ecx,0x18(%esp)
lea    0x28(%esp),%ecx
xor    %esi,%esi
mov    %ecx,0x14(%esp)
mov    0x4c(%esp),%ecx
mov    %eax,0x4(%esp)
lea    0x83c(%ebx),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
mov    0x48(%esp),%ecx
mov    %ecx,0xc(%esp)
call   807bed0 <dbus_watch_handle+0x310>
test   %eax,%eax
je     8073646 <dbus_message_set_data+0x76>
mov    0x28(%esp),%edx
mov    %eax,%esi
test   %edx,%edx
je     8073646 <dbus_message_set_data+0x76>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   *%edx
add    $0x34,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddb4(%ebx),%eax
movl   $0x11b7,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aebe(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x34,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
movl   $0x11b6,0x10(%esp)
jmp    8073668 <dbus_message_set_data+0x98>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x44943,%ebx
test   %eax,%eax
je     80736f0 <dbus_message_get_data+0x40>
mov    0x34(%esp),%edx
add    $0x60,%eax
mov    %eax,0x4(%esp)
lea    0x83c(%ebx),%eax
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
call   807bf90 <dbus_watch_handle+0x3d0>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1debb(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1aed4(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x11d6,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    80736e4 <dbus_message_get_data+0x34>
lea    0x0(%esi),%esi
push   %edi
mov    $0xc,%ecx
push   %esi
mov    $0x1,%eax
push   %ebx
mov    0x10(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x448ba,%ebx
lea    -0x1af84(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     807377b <dbus_message_type_from_string+0x4b>
mov    0x10(%esp),%esi
mov    $0xe,%ecx
mov    $0x2,%al
lea    -0x21393(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
jne    8073780 <dbus_message_type_from_string+0x50>
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x10(%esp),%esi
mov    $0x7,%ecx
mov    $0x4,%al
lea    -0x1af78(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
cmp    %dl,%cl
je     807377b <dbus_message_type_from_string+0x4b>
mov    0x10(%esp),%esi
mov    $0x6,%ecx
lea    -0x1cac0(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %al
setb   %dl
sub    %edx,%eax
movsbl %al,%eax
cmp    $0x1,%eax
sbb    %eax,%eax
and    $0x3,%eax
jmp    807377b <dbus_message_type_from_string+0x4b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x44827,%ecx
cmp    $0x2,%edx
je     8073818 <dbus_message_type_to_string+0x48>
jle    8073800 <dbus_message_type_to_string+0x30>
cmp    $0x3,%edx
lea    -0x1cac0(%ecx),%eax
je     80737fc <dbus_message_type_to_string+0x2c>
cmp    $0x4,%edx
lea    -0x1af78(%ecx),%eax
jne    807380b <dbus_message_type_to_string+0x3b>
repz ret
xchg   %ax,%ax
cmp    $0x1,%edx
lea    -0x1af84(%ecx),%eax
je     80737fc <dbus_message_type_to_string+0x2c>
lea    -0x1af71(%ecx),%eax
ret
lea    0x0(%esi),%esi
lea    -0x21393(%ecx),%eax
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x447d0,%ebx
test   %esi,%esi
je     8073968 <dbus_message_marshal+0x148>
mov    0x54(%esp),%edx
test   %edx,%edx
je     8073988 <dbus_message_marshal+0x168>
mov    0x58(%esp),%eax
test   %eax,%eax
je     8073928 <dbus_message_marshal+0x108>
lea    0x20(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80738a8 <dbus_message_marshal+0x88>
movzbl 0x50(%esi),%eax
mov    %eax,%ebp
and    $0x1,%ebp
je     8073918 <dbus_message_marshal+0xf8>
lea    0x4(%esi),%eax
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
jne    80738b8 <dbus_message_marshal+0x98>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
test   %ebp,%ebp
jne    80738a8 <dbus_message_marshal+0x88>
andb   $0xfe,0x50(%esi)
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
mov    0x58(%esp),%edx
mov    %eax,(%edx)
mov    %eax,0xc(%esp)
lea    0x40(%esi),%eax
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     8073898 <dbus_message_marshal+0x78>
mov    0x24(%esp),%eax
mov    0x58(%esp),%ecx
mov    %eax,(%ecx)
mov    0x54(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     8073898 <dbus_message_marshal+0x78>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
test   %ebp,%ebp
mov    $0x1,%eax
jne    80738aa <dbus_message_marshal+0x8a>
andb   $0xfe,0x50(%esi)
jmp    80738aa <dbus_message_marshal+0x8a>
xchg   %ax,%ax
mov    %esi,(%esp)
call   806f060 <dbus_message_lock>
jmp    8073875 <dbus_message_marshal+0x55>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1af43(%ebx),%eax
movl   $0x1230,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1aee9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1af69(%ebx),%eax
movl   $0x122e,0x10(%esp)
jmp    8073940 <dbus_message_marshal+0x120>
lea    0x0(%esi),%esi
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1af5d(%ebx),%eax
movl   $0x122f,0x10(%esp)
jmp    8073940 <dbus_message_marshal+0x120>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x44640,%ebx
mov    0x54(%esp),%ebp
test   %edi,%edi
je     8073ad8 <dbus_message_demarshal+0x128>
call   8072e10 <dbus_message_contains_unix_fds+0x10>
test   %eax,%eax
mov    %eax,%esi
je     8073ad0 <dbus_message_demarshal+0x120>
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   8072f50 <dbus_message_contains_unix_fds+0x150>
mov    0x2c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807fa10 <dbus_shutdown+0xd30>
mov    0x2c(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8072f70 <dbus_message_contains_unix_fds+0x170>
mov    %esi,(%esp)
call   8073030 <dbus_message_contains_unix_fds+0x230>
test   %eax,%eax
je     8073a58 <dbus_message_demarshal+0xa8>
mov    %esi,(%esp)
call   8073470 <dbus_message_contains_unix_fds+0x670>
test   %eax,%eax
jne    8073a90 <dbus_message_demarshal+0xe0>
mov    %esi,(%esp)
call   80733e0 <dbus_message_contains_unix_fds+0x5e0>
test   %eax,%eax
mov    %eax,%edi
je     8073a58 <dbus_message_demarshal+0xa8>
mov    %esi,(%esp)
call   8072ed0 <dbus_message_contains_unix_fds+0xd0>
mov    %edi,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   8072ed0 <dbus_message_contains_unix_fds+0xd0>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   806ddf0 <dbus_set_error+0x2cf0>
mov    %eax,0xc(%esp)
lea    -0x1af29(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21a2c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   8072ed0 <dbus_message_contains_unix_fds+0xd0>
xor    %eax,%eax
jmp    8073a49 <dbus_message_demarshal+0x99>
xchg   %ax,%ax
xor    %eax,%eax
jmp    8073a49 <dbus_message_demarshal+0x99>
nop
lea    -0x1b0db(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1af35(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1af00(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x126d,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8073a49 <dbus_message_demarshal+0x99>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x60,%esp
mov    0x70(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x444d1,%ebx
mov    0x74(%esp),%eax
movl   $0x0,0x4c(%esp)
test   %edx,%edx
je     8073be0 <dbus_message_demarshal_bytes_needed+0xc0>
cmp    $0xf,%eax
jle    8073be0 <dbus_message_demarshal_bytes_needed+0xc0>
cmp    $0x8000000,%eax
mov    $0x8000000,%esi
cmovle %eax,%esi
lea    0x50(%esp),%edi
mov    %edx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
call   807f360 <dbus_shutdown+0x680>
lea    0x48(%esp),%eax
mov    %eax,0x14(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x40(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x4c(%esp),%eax
mov    %esi,0x20(%esp)
movl   $0x0,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %eax,0x4(%esp)
movl   $0x8000000,(%esp)
movl   $0x0,0x4c(%esp)
call   8092e00 <dbus_bus_remove_match+0x1bd0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x4c(%esp),%eax
test   %eax,%eax
jne    8073bf0 <dbus_message_demarshal_bytes_needed+0xd0>
mov    0x44(%esp),%eax
add    0x48(%esp),%eax
add    $0x60,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
add    $0x60,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    8073bd7 <dbus_message_demarshal_bytes_needed+0xb7>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x443f7,%ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
cmp    $0x1,%eax
je     8073c28 <dbus_message_demarshal_bytes_needed+0x108>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
jmp    8073c50 <dbus_message_demarshal_bytes_needed+0x130>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
sub    $0x14,%esp
mov    0x18(%edx),%edx
test   %edx,%edx
jle    8073c88 <dbus_message_demarshal_bytes_needed+0x168>
mov    0x14(%esi),%eax
lea    -0x4(%eax,%edx,4),%eax
mov    (%eax),%edx
movl   $0x0,(%eax)
mov    %edi,%eax
subl   $0x1,0x18(%esi)
movl   $0x0,0x4(%edx)
call   8073c50 <dbus_message_demarshal_bytes_needed+0x130>
mov    0x18(%esi),%edx
test   %edx,%edx
jg     8073c60 <dbus_message_demarshal_bytes_needed+0x140>
mov    0x8(%esi),%eax
test   %eax,%eax
je     8073c9b <dbus_message_demarshal_bytes_needed+0x17b>
mov    0x10(%esi),%edx
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
call   *%eax
movl   $0x0,0xc(%esi)
mov    %esi,%eax
movl   $0x0,0x8(%esi)
movl   $0x0,0x10(%esi)
add    $0x14,%esp
pop    %esi
pop    %edi
jmp    8073c00 <dbus_message_demarshal_bytes_needed+0xe0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x44335,%ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
call   804d600 <strlen@plt>
lea    0x22(%eax),%edx
mov    %eax,%ebp
cmp    $0x24,%edx
mov    $0x24,%eax
cmovb  %eax,%edx
mov    %edx,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8073d4d <dbus_message_demarshal_bytes_needed+0x22d>
lea    0x21(%eax),%eax
add    $0x1,%ebp
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d170 <memcpy@plt>
mov    %esi,(%esp)
movl   $0x0,0x4(%esi)
movl   $0x0,0xc(%esi)
movl   $0x0,0x8(%esi)
movl   $0x0,0x10(%esi)
call   8081c30 <dbus_shutdown+0x2f50>
andb   $0xfe,0x20(%esi)
movl   $0x0,0x14(%esi)
movl   $0x0,0x18(%esi)
movl   $0x0,0x1c(%esi)
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %eax,0x14(%esp)
mov    0x58(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x4428c,%ebx
test   %eax,%eax
setne  %al
mov    %al,0x2f(%esp)
movzbl %al,%eax
mov    %eax,0x28(%esp)
lea    0x4(%edx),%eax
mov    %eax,0x20(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
lea    -0x4(%eax),%ecx
mov    -0x4(%eax),%eax
mov    %ecx,0x24(%esp)
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8073fd0 <dbus_message_demarshal_bytes_needed+0x4b0>
mov    0x14(%esp),%eax
xor    %ebp,%ebp
mov    0x18(%eax),%eax
mov    %eax,0xc(%esp)
jmp    8073dcb <dbus_message_demarshal_bytes_needed+0x2ab>
lea    0x0(%esi,%eiz,1),%esi
lea    0x1(%edi),%ebp
cmp    0xc(%esp),%ebp
jge    8073e28 <dbus_message_demarshal_bytes_needed+0x308>
mov    0x14(%esp),%eax
mov    0x14(%eax),%eax
mov    %eax,0x10(%esp)
mov    0xc(%esp),%eax
add    %ebp,%eax
mov    %eax,%edx
shr    $0x1f,%edx
lea    (%edx,%eax,1),%edi
sar    %edi
lea    0x0(,%edi,4),%eax
mov    %eax,0x1c(%esp)
mov    0x10(%esp),%eax
mov    (%eax,%edi,4),%esi
lea    0x21(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
je     8073ea0 <dbus_message_demarshal_bytes_needed+0x380>
jns    8073dc8 <dbus_message_demarshal_bytes_needed+0x2a8>
cmp    %edi,%ebp
lea    0x0(%esi),%esi
jge    8073e28 <dbus_message_demarshal_bytes_needed+0x308>
mov    %edi,0xc(%esp)
jmp    8073ddc <dbus_message_demarshal_bytes_needed+0x2bc>
mov    0x50(%esp),%ecx
test   %ecx,%ecx
je     8073fed <dbus_message_demarshal_bytes_needed+0x4cd>
mov    0x18(%esp),%eax
call   8073cc0 <dbus_message_demarshal_bytes_needed+0x1a0>
test   %eax,%eax
mov    %eax,%esi
je     8073fc6 <dbus_message_demarshal_bytes_needed+0x4a6>
mov    0x14(%esp),%eax
mov    0x18(%eax),%ecx
mov    0x1c(%eax),%eax
mov    %ecx,0xc(%esp)
add    $0x1,%ecx
cmp    %eax,%ecx
jg     8073ed8 <dbus_message_demarshal_bytes_needed+0x3b8>
mov    0x14(%esp),%eax
lea    0x1(%ebp),%edx
cmp    %edx,%ecx
lea    0x0(,%ebp,4),%edi
mov    0x14(%eax),%eax
jg     8073f21 <dbus_message_demarshal_bytes_needed+0x401>
mov    0x54(%esp),%edx
mov    %esi,(%eax,%edi,1)
test   %edx,%edx
je     8073e86 <dbus_message_demarshal_bytes_needed+0x366>
mov    0x54(%esp),%eax
mov    %ebp,(%eax)
mov    0x14(%esp),%eax
mov    %esi,0x14(%esp)
mov    %ecx,0x18(%eax)
mov    %eax,0x4(%esi)
addl   $0x4,0x20(%esp)
jmp    8073d98 <dbus_message_demarshal_bytes_needed+0x278>
xchg   %ax,%ax
mov    0x54(%esp),%ebp
mov    %edi,%eax
mov    %esi,%edi
mov    %eax,%esi
test   %ebp,%ebp
je     8073f67 <dbus_message_demarshal_bytes_needed+0x447>
mov    0x54(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %esi,(%eax)
mov    0x14(%esp),%eax
mov    0x28(%esp),%esi
mov    0x14(%eax),%eax
test   %esi,%esi
mov    (%eax,%ecx,1),%ecx
jne    8073f75 <dbus_message_demarshal_bytes_needed+0x455>
mov    %ecx,0x14(%esp)
jmp    8073e94 <dbus_message_demarshal_bytes_needed+0x374>
test   %eax,%eax
je     8073f58 <dbus_message_demarshal_bytes_needed+0x438>
lea    (%eax,%eax,1),%edi
shl    $0x3,%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %ecx,0xc(%esp)
mov    0x14(%eax),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
mov    0xc(%esp),%ecx
test   %eax,%eax
je     8073fbf <dbus_message_demarshal_bytes_needed+0x49f>
mov    0x14(%esp),%edx
mov    %edi,0x1c(%edx)
lea    0x0(,%ebp,4),%edi
mov    %eax,0x14(%edx)
lea    0x1(%ebp),%edx
cmp    %edx,%ecx
jle    8073e75 <dbus_message_demarshal_bytes_needed+0x355>
mov    %ecx,%edx
sub    %ebp,%edx
lea    -0x4(,%edx,4),%edx
mov    %edx,0x8(%esp)
lea    (%eax,%edi,1),%edx
lea    0x4(%eax,%edi,1),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   804d140 <memmove@plt>
mov    0x14(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x14(%eax),%eax
jmp    8073e75 <dbus_message_demarshal_bytes_needed+0x355>
nop
mov    $0x4,%eax
mov    $0x1,%edi
jmp    8073ee2 <dbus_message_demarshal_bytes_needed+0x3c2>
mov    0x28(%esp),%esi
mov    %edi,%ecx
test   %esi,%esi
je     8073ed2 <dbus_message_demarshal_bytes_needed+0x3b2>
mov    %ecx,%eax
mov    0x58(%esp),%ecx
mov    0x24(%esp),%edx
mov    %ecx,0x8(%esp)
mov    0x54(%esp),%ecx
add    $0x4,%edx
mov    %ecx,0x4(%esp)
mov    0x50(%esp),%ecx
mov    %ecx,(%esp)
call   8073d60 <dbus_message_demarshal_bytes_needed+0x240>
test   %eax,%eax
jne    8073fc8 <dbus_message_demarshal_bytes_needed+0x4a8>
mov    0x14(%esp),%eax
testb  $0x1,0x20(%eax)
je     8073fc6 <dbus_message_demarshal_bytes_needed+0x4a6>
cmpb   $0x0,0x2f(%esp)
je     8074012 <dbus_message_demarshal_bytes_needed+0x4f2>
mov    0x58(%esp),%eax
movl   $0x0,(%eax)
mov    0x14(%esp),%eax
jmp    8073fc8 <dbus_message_demarshal_bytes_needed+0x4a8>
mov    %esi,%eax
call   8073c00 <dbus_message_demarshal_bytes_needed+0xe0>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x2f(%esp)
je     8074012 <dbus_message_demarshal_bytes_needed+0x4f2>
mov    0x58(%esp),%eax
movl   $0x1,(%eax)
mov    0x14(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x2f(%esp)
je     8073ffe <dbus_message_demarshal_bytes_needed+0x4de>
mov    0x58(%esp),%eax
movl   $0x0,(%eax)
mov    0x28(%esp),%eax
test   %eax,%eax
je     8073fc6 <dbus_message_demarshal_bytes_needed+0x4a6>
mov    0x14(%esp),%eax
testb  $0x1,0x20(%eax)
je     8073fc6 <dbus_message_demarshal_bytes_needed+0x4a6>
jmp    8073fc8 <dbus_message_demarshal_bytes_needed+0x4a8>
mov    0x14(%esp),%eax
jmp    8073fc8 <dbus_message_demarshal_bytes_needed+0x4a8>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x43fd0,%ebx
movl   $0x0,(%ecx)
mov    0x8(%eax),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8073d60 <dbus_message_demarshal_bytes_needed+0x240>
test   %eax,%eax
mov    %eax,%ebp
je     80740e0 <dbus_message_demarshal_bytes_needed+0x5c0>
mov    0x18(%eax),%eax
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
je     8074108 <dbus_message_demarshal_bytes_needed+0x5e8>
mov    0x18(%ebp),%eax
test   %eax,%eax
jle    80740c8 <dbus_message_demarshal_bytes_needed+0x5a8>
xor    %esi,%esi
jmp    8074090 <dbus_message_demarshal_bytes_needed+0x570>
add    $0x1,%esi
cmp    %esi,0x18(%ebp)
jle    80740c8 <dbus_message_demarshal_bytes_needed+0x5a8>
mov    0x14(%ebp),%eax
mov    (%eax,%esi,4),%eax
add    $0x21,%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,(%edi,%esi,4)
jne    8074088 <dbus_message_demarshal_bytes_needed+0x568>
mov    %edi,(%esp)
xor    %edi,%edi
call   807ec20 <dbus_free_string_array>
xor    %eax,%eax
mov    0x30(%esp),%ecx
mov    %edi,(%ecx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x30(%esp),%ecx
mov    $0x1,%eax
mov    %edi,(%ecx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,(%esp)
call   807eb80 <dbus_malloc0>
mov    0x30(%esp),%ecx
mov    %eax,%edi
xor    %eax,%eax
test   %edi,%edi
mov    %edi,(%ecx)
setne  %al
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    80740b4 <dbus_message_demarshal_bytes_needed+0x594>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x43ee6,%ebx
sub    $0x10,%esp
movl   $0xc,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     807415a <dbus_message_demarshal_bytes_needed+0x63a>
movl   $0x1,(%eax)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esi)
lea    -0x181f5(%ebx),%eax
call   8073cc0 <dbus_message_demarshal_bytes_needed+0x1a0>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     8074168 <dbus_message_demarshal_bytes_needed+0x648>
orb    $0x1,0x20(%eax)
mov    %esi,%edi
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x43e60,%ebx
mov    0x58(%esp),%ebp
mov    0x8(%eax),%eax
mov    %ebp,%edx
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   8073d60 <dbus_message_demarshal_bytes_needed+0x240>
test   %eax,%eax
je     80742f8 <dbus_message_demarshal_bytes_needed+0x7d8>
mov    0xc(%eax),%edx
test   %edx,%edx
je     80742c0 <dbus_message_demarshal_bytes_needed+0x7a0>
mov    0x64(%esp),%edi
xor    %eax,%eax
test   %edi,%edi
je     8074279 <dbus_message_demarshal_bytes_needed+0x759>
lea    0x20(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8074243 <dbus_message_demarshal_bytes_needed+0x723>
mov    0x0(%ebp),%esi
test   %esi,%esi
je     8074281 <dbus_message_demarshal_bytes_needed+0x761>
lea    0x4(%ebp),%esi
jmp    8074227 <dbus_message_demarshal_bytes_needed+0x707>
mov    0x0(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807423b <dbus_message_demarshal_bytes_needed+0x71b>
mov    %esi,%ebp
add    $0x4,%esi
mov    -0x4(%esi),%ecx
test   %ecx,%ecx
je     8074298 <dbus_message_demarshal_bytes_needed+0x778>
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
jne    8074208 <dbus_message_demarshal_bytes_needed+0x6e8>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %esi,%esi
lea    -0x1a74c(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a724(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1d7c8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x2f,0x4(%esp)
mov    %edi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     807423b <dbus_message_demarshal_bytes_needed+0x71b>
lea    0x0(%esi),%esi
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     807423b <dbus_message_demarshal_bytes_needed+0x71b>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%esi
test   %esi,%esi
je     8074243 <dbus_message_demarshal_bytes_needed+0x723>
mov    %esi,%eax
jmp    807424b <dbus_message_demarshal_bytes_needed+0x72b>
mov    0x5c(%esp),%ecx
mov    0x4(%ecx),%edx
mov    %edx,0xc(%eax)
mov    (%ecx),%edx
mov    %edx,0x8(%eax)
mov    0x60(%esp),%edx
mov    %edx,0x10(%eax)
mov    0x54(%esp),%edx
test   %edx,%edx
movzbl 0x20(%eax),%edx
setne  %cl
and    $0xfffffffe,%edx
or     %ecx,%edx
mov    %dl,0x20(%eax)
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    8074279 <dbus_message_demarshal_bytes_needed+0x759>
jmp    8074330 <dbus_message_demarshal_bytes_needed+0x810>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
lea    0x2c(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x43cbc,%ebx
mov    0x54(%esp),%ebp
mov    0x8(%edi),%eax
mov    %edx,0x4(%esp)
mov    %ebp,%edx
movl   $0x0,0x8(%esp)
movl   $0x0,(%esp)
call   8073d60 <dbus_message_demarshal_bytes_needed+0x240>
test   %eax,%eax
mov    %eax,%esi
je     8074438 <dbus_message_demarshal_bytes_needed+0x918>
mov    0xc(%eax),%ecx
test   %ecx,%ecx
je     8074438 <dbus_message_demarshal_bytes_needed+0x918>
movl   $0x0,0xc(%eax)
mov    0x8(%eax),%ebp
mov    0x10(%eax),%eax
movl   $0x0,0x8(%esi)
movl   $0x0,0x10(%esi)
mov    %eax,0x18(%esp)
mov    0x4(%esi),%eax
test   %eax,%eax
je     80743ad <dbus_message_demarshal_bytes_needed+0x88d>
mov    0x18(%esi),%edx
test   %edx,%edx
je     80743e8 <dbus_message_demarshal_bytes_needed+0x8c8>
mov    0x4(%edi),%esi
mov    %esi,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
test   %ebp,%ebp
je     80743d1 <dbus_message_demarshal_bytes_needed+0x8b1>
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *%ebp
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%eax),%edx
mov    0x2c(%esp),%ecx
mov    %edx,0x1c(%esp)
lea    0x4(,%ecx,4),%edx
not    %ecx
add    0x18(%eax),%ecx
shl    $0x2,%ecx
mov    %ecx,0x8(%esp)
mov    0x1c(%esp),%ecx
mov    %ecx,%eax
add    %edx,%eax
mov    %eax,0x4(%esp)
lea    -0x4(%ecx,%edx,1),%eax
mov    %eax,(%esp)
call   804d140 <memmove@plt>
mov    0x4(%esi),%eax
subl   $0x1,0x18(%eax)
mov    %esi,%eax
movl   $0x0,0x4(%esi)
call   8073c00 <dbus_message_demarshal_bytes_needed+0xe0>
jmp    80743ad <dbus_message_demarshal_bytes_needed+0x88d>
mov    0x4(%ebp),%edx
lea    -0x1c104(%ebx),%eax
test   %edx,%edx
mov    %edx,%ecx
mov    0x0(%ebp),%edx
cmove  %eax,%ecx
mov    %ecx,0x8(%esp)
test   %edx,%edx
cmovne %edx,%eax
mov    %eax,0x4(%esp)
lea    -0x1a6fc(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x4(%edi),%esi
mov    %esi,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
sub    $0x8,%esp
mov    0x10(%esp),%esi
mov    0x8(%esi),%edx
test   %edx,%edx
je     80744a7 <dbus_message_demarshal_bytes_needed+0x987>
mov    0x4(%esi),%eax
call   8073c50 <dbus_message_demarshal_bytes_needed+0x130>
movl   $0x0,0x8(%esi)
add    $0x8,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x43b32,%ebx
subl   $0x1,(%esi)
jne    80744e9 <dbus_message_demarshal_bytes_needed+0x9c9>
mov    %esi,(%esp)
call   8074490 <dbus_message_demarshal_bytes_needed+0x970>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x43b01,%ebx
lea    0x24(%esp),%eax
mov    0xa0(%esp),%edi
mov    %eax,0x4(%esp)
mov    0xa4(%esp),%eax
movl   $0x0,0x24(%esp)
mov    %eax,(%esp)
call   8071a80 <dbus_message_get_path_decomposed>
test   %eax,%eax
je     80746f0 <dbus_message_demarshal_bytes_needed+0xbd0>
mov    0x24(%esp),%edx
test   %edx,%edx
je     807470b <dbus_message_demarshal_bytes_needed+0xbeb>
mov    0x8(%edi),%eax
lea    0x28(%esp),%ecx
mov    %ecx,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
movl   $0x0,0x28(%esp)
call   8073d60 <dbus_message_demarshal_bytes_needed+0x240>
mov    0xa8(%esp),%esi
test   %esi,%esi
mov    %eax,%ebp
je     8074583 <dbus_message_demarshal_bytes_needed+0xa63>
mov    0xa8(%esp),%edx
xor    %eax,%eax
test   %ebp,%ebp
setne  %al
mov    %eax,(%edx)
test   %ebp,%ebp
movl   $0x0,0x2c(%esp)
lea    0x2c(%esp),%esi
je     80745d8 <dbus_message_demarshal_bytes_needed+0xab8>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%ebp),%ecx
test   %ecx,%ecx
je     80745c9 <dbus_message_demarshal_bytes_needed+0xaa9>
mov    0x28(%esp),%edx
test   %edx,%edx
jne    80745ad <dbus_message_demarshal_bytes_needed+0xa8d>
testb  $0x1,0x20(%ebp)
je     80745c9 <dbus_message_demarshal_bytes_needed+0xaa9>
mov    %ebp,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8074720 <dbus_message_demarshal_bytes_needed+0xc00>
mov    0x4(%ebp),%ebp
movl   $0x0,0x28(%esp)
test   %ebp,%ebp
jne    8074598 <dbus_message_demarshal_bytes_needed+0xa78>
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     8074656 <dbus_message_demarshal_bytes_needed+0xb36>
mov    %esi,0x1c(%esp)
jmp    80745f2 <dbus_message_demarshal_bytes_needed+0xad2>
lea    0x0(%esi),%esi
mov    %ebp,%eax
mov    0x8(%eax),%ecx
mov    $0x0,%edx
mov    0x4(%eax),%ebp
cmp    0x2c(%esp),%ebp
mov    0xc(%ecx),%esi
cmove  %edx,%ebp
test   %esi,%esi
je     807464e <dbus_message_demarshal_bytes_needed+0xb2e>
mov    0x4(%edi),%eax
mov    0x10(%ecx),%ecx
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x18(%esp),%ecx
mov    0xa4(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x4(%edi),%ecx
mov    %ecx,(%esp)
call   *%esi
mov    0x4(%edi),%ecx
mov    %ecx,(%esp)
mov    %eax,%esi
call   80647a0 <sidput@plt+0x16c40>
cmp    $0x1,%esi
jne    8074740 <dbus_message_demarshal_bytes_needed+0xc20>
test   %ebp,%ebp
jne    80745f0 <dbus_message_demarshal_bytes_needed+0xad0>
mov    0x1c(%esp),%esi
lea    -0x1f17a(%ebx),%eax
mov    0x24(%esp),%ebp
mov    %eax,0x8(%esp)
lea    -0x1f28c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xa4(%esp),%eax
mov    %eax,(%esp)
call   8072860 <dbus_message_is_method_call>
test   %eax,%eax
je     8074748 <dbus_message_demarshal_bytes_needed+0xc28>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    807475d <dbus_message_demarshal_bytes_needed+0xc3d>
mov    0x4(%edi),%eax
mov    $0x2,%ebp
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
jmp    80746ce <dbus_message_demarshal_bytes_needed+0xbae>
nop
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%edi
mov    0x8(%eax),%eax
call   8073c00 <dbus_message_demarshal_bytes_needed+0xe0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    80746b0 <dbus_message_demarshal_bytes_needed+0xb90>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
add    $0x8c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    $0x2,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    $0x1,%eax
jmp    8074700 <dbus_message_demarshal_bytes_needed+0xbe0>
lea    0x0(%esi),%esi
mov    %ebp,%eax
mov    $0x2,%ebp
call   8073c00 <dbus_message_demarshal_bytes_needed+0xe0>
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
jmp    80746ce <dbus_message_demarshal_bytes_needed+0xbae>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ebp
mov    0x1c(%esp),%esi
jmp    807472c <dbus_message_demarshal_bytes_needed+0xc0c>
mov    0x4(%edi),%eax
mov    $0x1,%ebp
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
jmp    80746ce <dbus_message_demarshal_bytes_needed+0xbae>
lea    0x30(%esp),%eax
mov    %ebp,%edx
mov    %eax,(%esp)
mov    %edi,%eax
movl   $0x0,0x30(%esp)
call   8074020 <dbus_message_demarshal_bytes_needed+0x500>
test   %eax,%eax
jne    80747a6 <dbus_message_demarshal_bytes_needed+0xc86>
mov    0x4(%edi),%eax
mov    $0x2,%ebp
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
jmp    80746ce <dbus_message_demarshal_bytes_needed+0xbae>
lea    -0x1f4c4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8074779 <dbus_message_demarshal_bytes_needed+0xc59>
lea    -0x1f1ed(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8074779 <dbus_message_demarshal_bytes_needed+0xc59>
mov    0x30(%esp),%eax
mov    $0x4,%ebp
lea    -0x1a764(%ebx),%edx
mov    (%eax),%eax
test   %eax,%eax
je     8074821 <dbus_message_demarshal_bytes_needed+0xd01>
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %edx,0x4(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     8074779 <dbus_message_demarshal_bytes_needed+0xc59>
mov    0x30(%esp),%eax
mov    0x1c(%esp),%edx
mov    (%eax,%ebp,1),%eax
add    $0x4,%ebp
test   %eax,%eax
jne    80747ef <dbus_message_demarshal_bytes_needed+0xccf>
lea    -0x1f1e5(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8074779 <dbus_message_demarshal_bytes_needed+0xc59>
mov    0xa4(%esp),%eax
mov    %eax,(%esp)
call   80723c0 <dbus_message_new_method_return>
test   %eax,%eax
je     8074779 <dbus_message_demarshal_bytes_needed+0xc59>
lea    0x48(%esp),%ebp
mov    %eax,(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0x1c(%esp)
call   8070660 <dbus_message_iter_init_append>
mov    0x38(%esp),%eax
movl   $0x73,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x34(%esp)
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   8070750 <dbus_message_iter_append_basic>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    80748cf <dbus_message_demarshal_bytes_needed+0xdaf>
mov    0x4(%edi),%eax
mov    $0x2,%ebp
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0x1c(%esp),%edx
mov    %edx,(%esp)
call   806e970 <dbus_message_unref>
jmp    80746ce <dbus_message_demarshal_bytes_needed+0xbae>
mov    %edx,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    0x4(%edi),%eax
mov    %eax,(%esp)
call   8067a20 <dbus_connection_pop_message+0x80>
cmp    $0x1,%eax
mov    0x18(%esp),%eax
sbb    %ebp,%ebp
and    $0x2,%ebp
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0x1c(%esp),%edx
jmp    80748c2 <dbus_message_demarshal_bytes_needed+0xda2>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
lea    0x1c(%esp),%edx
movl   $0x0,0x1c(%esp)
mov    0x8(%eax),%eax
mov    %edx,0x8(%esp)
mov    0x34(%esp),%edx
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8073d60 <dbus_message_demarshal_bytes_needed+0x240>
test   %eax,%eax
je     8074958 <dbus_message_demarshal_bytes_needed+0xe38>
mov    0x1c(%esp),%edx
test   %edx,%edx
je     8074958 <dbus_message_demarshal_bytes_needed+0xe38>
mov    0x10(%eax),%eax
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x2c,%esp
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x43695,%ebx
mov    0x20(%esp),%esi
mov    0x28(%esp),%eax
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   8074020 <dbus_message_demarshal_bytes_needed+0x500>
mov    %eax,%edi
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x43650,%ebx
mov    0x40(%esp),%ebp
cmp    $0x1,%edi
jle    8074ae4 <dbus_message_demarshal_bytes_needed+0xfc4>
lea    0x0(%ebp,%edi,1),%ecx
mov    %ebp,%eax
xor    %edx,%edx
mov    %ecx,%esi
lea    0x0(%esi),%esi
xor    %ecx,%ecx
cmpb   $0x2f,(%eax)
sete   %cl
add    $0x1,%eax
add    %ecx,%edx
cmp    %esi,%eax
jne    80749d0 <dbus_message_demarshal_bytes_needed+0xeb0>
lea    0x4(,%edx,4),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8074b05 <dbus_message_demarshal_bytes_needed+0xfe5>
mov    0x1c(%esp),%eax
xor    %edx,%edx
movl   $0x0,0x10(%esp)
test   %eax,%eax
sete   %dl
je     8074aa9 <dbus_message_demarshal_bytes_needed+0xf89>
lea    0x0(%ebp,%edx,1),%eax
cmpb   $0x2f,(%eax)
je     8074a93 <dbus_message_demarshal_bytes_needed+0xf73>
lea    0x0(%esi),%esi
cmp    %edi,%edx
mov    %edx,%esi
jge    8074aa0 <dbus_message_demarshal_bytes_needed+0xf80>
cmpb   $0x2f,(%eax)
jne    8074a42 <dbus_message_demarshal_bytes_needed+0xf22>
jmp    8074aa0 <dbus_message_demarshal_bytes_needed+0xf80>
lea    0x0(%esi),%esi
cmpb   $0x2f,0x0(%ebp,%esi,1)
lea    0x0(%esi),%esi
je     8074a49 <dbus_message_demarshal_bytes_needed+0xf29>
add    $0x1,%esi
cmp    %edi,%esi
jne    8074a38 <dbus_message_demarshal_bytes_needed+0xf18>
mov    %esi,%ecx
sub    %edx,%ecx
mov    %ecx,%edx
lea    0x1(%ecx),%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x14(%esp)
call   807ce20 <dbus_watch_handle+0x1260>
mov    0x10(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
mov    %eax,(%ecx,%edx,4)
mov    0x14(%esp),%edx
je     8074ad2 <dbus_message_demarshal_bytes_needed+0xfb2>
movb   $0x0,(%eax,%edx,1)
mov    0x1c(%esp),%eax
addl   $0x1,0x10(%esp)
cmp    %eax,0x10(%esp)
je     8074aa9 <dbus_message_demarshal_bytes_needed+0xf89>
mov    %esi,%edx
lea    0x0(%ebp,%edx,1),%eax
cmpb   $0x2f,(%eax)
jne    8074a28 <dbus_message_demarshal_bytes_needed+0xf08>
add    $0x1,%edx
cmp    %edi,%edx
mov    %edx,%esi
lea    0x0(%ebp,%edx,1),%eax
jl     8074a2e <dbus_message_demarshal_bytes_needed+0xf0e>
mov    $0x1,%ecx
xor    %edx,%edx
jmp    8074a52 <dbus_message_demarshal_bytes_needed+0xf32>
mov    0x48(%esp),%eax
mov    0x18(%esp),%ecx
mov    %ecx,(%eax)
mov    0x4c(%esp),%eax
test   %eax,%eax
je     8074ac5 <dbus_message_demarshal_bytes_needed+0xfa5>
mov    0x4c(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ecx,(%esp)
call   807ec20 <dbus_free_string_array>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x4,%eax
mov    %eax,(%esp)
movl   $0x0,0x1c(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x18(%esp)
jne    8074a00 <dbus_message_demarshal_bytes_needed+0xee0>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x434e1,%ebx
mov    0x20(%esp),%edi
test   %esi,%esi
je     8074b40 <dbus_message_demarshal_bytes_needed+0x1020>
mov    %esi,(%esp)
call   806f720 <dbus_message_ref>
mov    %esi,0x14(%edi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x1c(%edi),%eax
mov    0x8(%eax),%esi
lea    0x1c(%edi),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %esi,0x14(%edi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x43492,%ebx
mov    0x1c(%esi),%eax
test   %eax,%eax
je     8074b92 <dbus_message_demarshal_bytes_needed+0x1072>
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8064900 <sidput@plt+0x16da0>
movl   $0x0,0x1c(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x24(%eax),%eax
shr    %al
and    $0x1,%eax
ret
xchg   %ax,%ax
mov    0x4(%esp),%edx
movzbl 0x8(%esp),%ecx
movzbl 0x24(%edx),%eax
and    $0x1,%ecx
add    %ecx,%ecx
and    $0xfffffffd,%eax
or     %ecx,%eax
mov    %al,0x24(%edx)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x18(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x20(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0x20(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x433f2,%ebx
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
mov    0x10(%esi),%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x433b5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x1a6a8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1ff40(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   80724d0 <dbus_message_new_error>
test   %eax,%eax
mov    %eax,%esi
je     8074ca2 <dbus_message_demarshal_bytes_needed+0x1182>
mov    %eax,(%esp)
call   807d550 <dbus_watch_handle+0x1990>
test   %eax,%eax
je     8074cb0 <dbus_message_demarshal_bytes_needed+0x1190>
mov    %eax,0x1c(%ebp)
mov    0x38(%esp),%eax
mov    $0x1,%edi
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8074bf0 <dbus_message_demarshal_bytes_needed+0x10d0>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
jmp    8074ca2 <dbus_message_demarshal_bytes_needed+0x1182>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x43336,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
movzbl 0x24(%eax),%eax
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
lea    0x2c(%esp),%eax
mov    0x40(%esp),%esi
mov    %eax,0x18(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x432dd,%ebx
mov    %eax,0x10(%esp)
mov    0x48(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x4(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x86c(%ebx),%eax
mov    %eax,(%esp)
call   807bed0 <dbus_watch_handle+0x310>
mov    %eax,%edi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
test   %edi,%edi
je     8074d74 <dbus_message_demarshal_bytes_needed+0x1254>
mov    0x28(%esp),%eax
test   %eax,%eax
je     8074d74 <dbus_message_demarshal_bytes_needed+0x1254>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
add    $0x30,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x43262,%ebx
test   %esi,%esi
je     8074db8 <dbus_pending_call_ref+0x28>
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
mov    %esi,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a412(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x24c,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8074db2 <dbus_pending_call_ref+0x22>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x431f1,%ebx
test   %esi,%esi
je     8074e70 <dbus_pending_call_set_notify+0x70>
mov    0x10(%esi),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
mov    0x3c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x344(%ebx),%eax
mov    %eax,0x4(%esp)
call   8074d00 <dbus_message_demarshal_bytes_needed+0x11e0>
test   %eax,%eax
jne    8074e60 <dbus_pending_call_set_notify+0x60>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x34(%esp),%eax
mov    $0x1,%di
mov    %eax,0xc(%esi)
jmp    8074e4c <dbus_pending_call_set_notify+0x4c>
lea    0x0(%esi),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a447(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x27c,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x43143,%ebx
test   %eax,%eax
je     8074ee0 <dbus_pending_call_cancel+0x30>
mov    %eax,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8064ed0 <dbus_connection_has_messages_to_send+0x580>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a460(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x2a0,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x430d1,%ebx
test   %esi,%esi
je     8074f68 <dbus_pending_call_get_completed+0x48>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
movzbl 0x24(%esi),%eax
mov    %eax,%edi
mov    0x10(%esi),%eax
and    $0x1,%edi
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a480(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x2b2,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x43041,%ebx
test   %esi,%esi
je     807508b <dbus_pending_call_steal_reply+0xdb>
testb  $0x1,0x24(%esi)
je     8075008 <dbus_pending_call_steal_reply+0x58>
mov    0x14(%esi),%eax
test   %eax,%eax
je     8075048 <dbus_pending_call_steal_reply+0x98>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
mov    0x10(%esi),%eax
mov    0x14(%esi),%edi
movl   $0x0,0x14(%esi)
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5a5(%ebx),%eax
movl   $0x2ca,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a4a3(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8074ffc <dbus_pending_call_steal_reply+0x4c>
lea    0x0(%esi),%esi
lea    -0x1a5d4(%ebx),%edx
mov    %edx,0xc(%esp)
lea    -0x1a592(%ebx),%edx
mov    %edx,0x8(%esp)
lea    -0x1a4a3(%ebx),%edx
mov    %edx,0x4(%esp)
lea    0x348(%ebx),%edx
movl   $0x2cb,0x10(%esp)
mov    %eax,0x1c(%esp)
mov    (%edx),%edx
mov    %edx,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    0x1c(%esp),%eax
jmp    8074ffc <dbus_pending_call_steal_reply+0x4c>
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
movl   $0x2c9,0x10(%esp)
jmp    8075020 <dbus_pending_call_steal_reply+0x70>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x42f43,%ebx
test   %eax,%eax
je     80750d8 <dbus_pending_call_block+0x28>
mov    %eax,(%esp)
call   8066ea0 <dbus_connection_send_preallocated+0x2b0>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a4bb(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x2ea,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x42ed3,%ebx
test   %eax,%eax
je     8075158 <dbus_pending_call_allocate_data_slot+0x38>
mov    %eax,0x8(%esp)
lea    0x868(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x86c(%ebx),%eax
mov    %eax,(%esp)
call   807bcc0 <dbus_watch_handle+0x100>
add    $0x28,%esp
pop    %ebx
ret
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a57b(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a4e0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x300,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x42e53,%ebx
test   %eax,%eax
je     8075218 <dbus_pending_call_free_data_slot+0x78>
mov    (%eax),%edx
test   %edx,%edx
js     80751d8 <dbus_pending_call_free_data_slot+0x38>
mov    %eax,0x4(%esp)
lea    0x86c(%ebx),%eax
mov    %eax,(%esp)
call   807be10 <dbus_watch_handle+0x250>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddc1(%ebx),%eax
movl   $0x316,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a520(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a57b(%ebx),%eax
movl   $0x315,0x10(%esp)
jmp    80751f0 <dbus_pending_call_free_data_slot+0x50>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x61a8,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x42daf,%ebx
mov    0x44(%esp),%esi
cmp    $0xffffffff,%esi
cmove  %eax,%esi
xor    %edi,%edi
lea    0x344(%ebx),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   8075120 <dbus_pending_call_allocate_data_slot>
test   %eax,%eax
je     80752da <dbus_pending_call_free_data_slot+0x13a>
movl   $0x28,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebp
je     80752f1 <dbus_pending_call_free_data_slot+0x151>
cmp    $0x7fffffff,%esi
je     80752e8 <dbus_pending_call_free_data_slot+0x148>
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8077f00 <dbus_type_is_fixed+0xa0>
test   %eax,%eax
je     80752ff <dbus_pending_call_free_data_slot+0x15f>
mov    %eax,0x18(%ebp)
mov    %ebp,(%esp)
mov    %ebp,%edi
call   8081c30 <dbus_shutdown+0x2f50>
mov    0x40(%esp),%eax
mov    %eax,0x10(%ebp)
mov    %eax,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
lea    0x4(%ebp),%eax
mov    %eax,(%esp)
call   807beb0 <dbus_watch_handle+0x2f0>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x18(%eax)
jmp    80752b6 <dbus_pending_call_free_data_slot+0x116>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80751a0 <dbus_pending_call_free_data_slot>
jmp    80752da <dbus_pending_call_free_data_slot+0x13a>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   80751a0 <dbus_pending_call_free_data_slot>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
jmp    80752da <dbus_pending_call_free_data_slot+0x13a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x42cd6,%ebx
sub    $0x10,%esp
mov    0x10(%eax),%edi
lea    0x4(%eax),%eax
mov    %eax,(%esp)
call   807c010 <dbus_watch_handle+0x450>
mov    0x18(%esi),%eax
test   %eax,%eax
je     8075350 <dbus_pending_call_free_data_slot+0x1b0>
mov    %eax,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
mov    0x1c(%esi),%eax
test   %eax,%eax
je     8075374 <dbus_pending_call_free_data_slot+0x1d4>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807d560 <dbus_watch_handle+0x19a0>
movl   $0x0,0x1c(%esi)
mov    0x14(%esi),%eax
test   %eax,%eax
je     807538a <dbus_pending_call_free_data_slot+0x1ea>
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
movl   $0x0,0x14(%esi)
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
lea    0x344(%ebx),%eax
mov    %eax,(%esp)
call   80751a0 <dbus_pending_call_free_data_slot>
mov    %edi,(%esp)
call   8066920 <dbus_connection_unref>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x42c45,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
mov    %eax,%edi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
cmp    $0x1,%edi
je     80753e8 <dbus_pending_call_free_data_slot+0x248>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
jmp    8075320 <dbus_pending_call_free_data_slot+0x180>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x42bf2,%ebx
test   %esi,%esi
je     8075440 <dbus_pending_call_unref+0x40>
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
cmp    $0x1,%eax
je     8075430 <dbus_pending_call_unref+0x30>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    8075320 <dbus_pending_call_free_data_slot+0x180>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a42a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x260,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x42b71,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8075528 <dbus_pending_call_set_data+0xa8>
test   %edi,%edi
js     80754e8 <dbus_pending_call_set_data+0x68>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
mov    0x3c(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
call   8074d00 <dbus_message_demarshal_bytes_needed+0x11e0>
mov    %eax,%edi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddb4(%ebx),%eax
movl   $0x331,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a545(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
movl   $0x330,0x10(%esp)
jmp    8075500 <dbus_pending_call_set_data+0x80>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x42aa1,%ebx
test   %esi,%esi
je     80755a8 <dbus_pending_call_get_data+0x58>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x4(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x86c(%ebx),%eax
mov    %eax,(%esp)
call   807bf90 <dbus_watch_handle+0x3d0>
mov    %eax,%edi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1a5d4(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a5b5(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a560(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x348,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    80755a0 <dbus_pending_call_get_data+0x50>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x42a02,%ebx
mov    0xc(%esi),%eax
orb    $0x1,0x24(%esi)
test   %eax,%eax
je     807562b <dbus_pending_call_get_data+0xdb>
mov    0x344(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8075550 <dbus_pending_call_get_data>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0xc(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x429ba,%ebx
sub    $0x18,%esp
movl   $0x20,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     8075665 <dbus_pending_call_get_data+0x115>
movl   $0x1,(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x42973,%ebx
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
jne    80756a6 <dbus_pending_call_get_data+0x156>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    0x8(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x4(%eax),%edx
mov    0x14(%eax),%esi
add    %edx,%ecx
test   %esi,%esi
mov    %ecx,0x4(%eax)
je     80756d7 <dbus_pending_call_get_data+0x187>
mov    0xc(%eax),%esi
cmp    %esi,%edx
jge    80756e0 <dbus_pending_call_get_data+0x190>
cmp    %esi,%ecx
jl     80756d7 <dbus_pending_call_get_data+0x187>
orb    $0x1,0x1c(%eax)
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ecx
jl     80756d3 <dbus_pending_call_get_data+0x183>
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movzbl 0x1c(%eax),%edx
test   $0x1,%dl
je     8075713 <dbus_pending_call_get_data+0x1c3>
and    $0xfffffffe,%edx
mov    %dl,0x1c(%eax)
mov    0x18(%eax),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   *0x14(%eax)
add    $0x1c,%esp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    0x8(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%eax),%edx
mov    0x14(%eax),%esi
add    %edx,%ecx
test   %esi,%esi
mov    %ecx,0x8(%eax)
je     8075747 <dbus_pending_call_get_data+0x1f7>
mov    0x10(%eax),%esi
cmp    %esi,%edx
jge    8075750 <dbus_pending_call_get_data+0x200>
cmp    %esi,%ecx
jl     8075747 <dbus_pending_call_get_data+0x1f7>
orb    $0x1,0x1c(%eax)
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %esi,%ecx
jl     8075743 <dbus_pending_call_get_data+0x1f3>
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
andb   $0xfe,0x1c(%eax)
mov    %edx,0xc(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x10(%eax)
mov    0x10(%esp),%edx
mov    %edx,0x14(%eax)
mov    0x14(%esp),%edx
mov    %edx,0x18(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x42844,%ebx
mov    0x50(%esp),%esi
mov    0x54(%esp),%eax
lea    0x1c(%esi),%edi
mov    %eax,0x4(%esi)
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
movl   $0x0,0x34(%esi)
movl   $0x0,0x2c(%esi)
movl   $0x0,0x30(%esi)
movl   $0x0,0x38(%esi)
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    8075810 <dbus_pending_call_get_data+0x2c0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0xc(%esi),%ebp
mov    %ebp,(%esp)
call   807cf70 <dbus_watch_handle+0x13b0>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   807cfc0 <dbus_watch_handle+0x1400>
test   %eax,%eax
jne    8075898 <dbus_pending_call_get_data+0x348>
lea    0x8(%esi),%ebp
mov    %ebp,(%esp)
call   80784c0 <dbus_timeout_get_enabled+0x160>
mov    0x2c(%esi),%eax
movl   $0x0,0x8(%esi)
test   %eax,%eax
je     8075853 <dbus_pending_call_get_data+0x303>
mov    %eax,(%esp)
call   807b630 <dbus_threads_init_default+0x2a40>
movl   $0x0,0x2c(%esi)
mov    0x30(%esi),%eax
test   %eax,%eax
je     8075869 <dbus_pending_call_get_data+0x319>
mov    %eax,(%esp)
call   80780e0 <dbus_type_is_fixed+0x280>
movl   $0x0,0x30(%esi)
mov    0x34(%esi),%eax
test   %eax,%eax
je     807587f <dbus_pending_call_get_data+0x32f>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,0x34(%esi)
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8075990 <dbus_pending_call_get_data+0x440>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     8075988 <dbus_pending_call_get_data+0x438>
lea    -0x1a3fc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8075988 <dbus_pending_call_get_data+0x438>
mov    0x24(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     8075988 <dbus_pending_call_get_data+0x438>
lea    0x1c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,0x1c(%esp)
call   807f570 <dbus_shutdown+0x890>
mov    %ebp,(%esp)
lea    0x8(%esi),%ebp
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
test   %eax,%eax
mov    %eax,0x34(%esi)
je     807582e <dbus_pending_call_get_data+0x2de>
mov    %ebp,(%esp)
call   8078400 <dbus_timeout_get_enabled+0xa0>
mov    0x8(%esi),%eax
test   %eax,%eax
je     807582e <dbus_pending_call_get_data+0x2de>
call   807b4e0 <dbus_threads_init_default+0x28f0>
test   %eax,%eax
mov    %eax,0x2c(%esi)
je     807582e <dbus_pending_call_get_data+0x2de>
call   8077f90 <dbus_type_is_fixed+0x130>
test   %eax,%eax
mov    %eax,0x30(%esi)
je     807582e <dbus_pending_call_get_data+0x2de>
add    $0x40,%esi
mov    %esi,(%esp)
call   807beb0 <dbus_watch_handle+0x2f0>
mov    $0x1,%eax
jmp    8075804 <dbus_pending_call_get_data+0x2b4>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
movl   $0x0,0x34(%esi)
jmp    807582b <dbus_pending_call_get_data+0x2db>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x42653,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x2c(%eax),%eax
mov    %eax,(%esp)
call   807b700 <dbus_threads_init_default+0x2b10>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x42627,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
add    $0x18,%esp
pop    %ebx
ret
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x42606,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
cmp    $0x1,%eax
je     8075a18 <dbus_pending_call_get_data+0x4c8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x4(%esi),%eax
mov    %esi,(%esp)
call   *(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x425ae,%ebx
mov    0x30(%esi),%edi
test   %edi,%edi
je     8075aab <dbus_pending_call_get_data+0x55b>
movl   $0x0,0x30(%esi)
mov    %esi,(%esp)
call   80759d0 <dbus_pending_call_get_data+0x480>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x34(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8078260 <dbus_timeout_set_data+0x90>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x2,0x58(%esi)
mov    %edi,0x30(%esi)
mov    %esi,(%esp)
call   80759f0 <dbus_pending_call_get_data+0x4a0>
mov    %ebp,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x4252e,%ebx
mov    0x2c(%esi),%edi
test   %edi,%edi
je     8075b2b <dbus_pending_call_get_data+0x5db>
movl   $0x0,0x2c(%esi)
mov    %esi,(%esp)
call   80759d0 <dbus_pending_call_get_data+0x480>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x34(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807ba70 <dbus_watch_set_data+0xf0>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x2,0x58(%esi)
mov    %edi,0x2c(%esi)
mov    %esi,(%esp)
call   80759f0 <dbus_pending_call_get_data+0x4a0>
mov    %ebp,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x424b1,%ebx
mov    0x2c(%esi),%edi
test   %edi,%edi
je     8075ba4 <dbus_pending_call_get_data+0x654>
movl   $0x0,0x2c(%esi)
mov    %esi,(%esp)
call   80759d0 <dbus_pending_call_get_data+0x480>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x24(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807bb00 <dbus_watch_set_data+0x180>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x2,0x58(%esi)
mov    %edi,0x2c(%esi)
mov    %esi,(%esp)
call   80759f0 <dbus_pending_call_get_data+0x4a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x42441,%ebx
mov    0x30(%esi),%edi
test   %edi,%edi
je     8075c14 <dbus_pending_call_get_data+0x6c4>
movl   $0x0,0x30(%esi)
mov    %esi,(%esp)
call   80759d0 <dbus_pending_call_get_data+0x480>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x24(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80782f0 <dbus_timeout_set_data+0x120>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x2,0x58(%esi)
mov    %edi,0x30(%esi)
mov    %esi,(%esp)
call   80759f0 <dbus_pending_call_get_data+0x4a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x423d1,%ebx
mov    0x30(%esi),%edi
test   %edi,%edi
je     8075c8c <dbus_pending_call_get_data+0x73c>
movl   $0x0,0x30(%esi)
mov    %esi,(%esp)
call   80759d0 <dbus_pending_call_get_data+0x480>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x28(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   8078160 <dbus_type_is_fixed+0x300>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x2,0x58(%esi)
mov    %edi,0x30(%esi)
mov    %esi,(%esp)
call   80759f0 <dbus_pending_call_get_data+0x4a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x4234d,%ebx
movl   $0x0,0x48(%esp)
movl   $0x0,0x40(%esp)
test   %edi,%edi
movl   $0x0,0x44(%esp)
movl   $0x0,0x4c(%esp)
movb   $0x1,0x48(%esp)
je     8075fb3 <dbus_server_listen+0x313>
mov    0x84(%esp),%esi
test   %esi,%esi
je     8075d08 <dbus_server_listen+0x68>
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8075f76 <dbus_server_listen+0x2d6>
mov    0x84(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   808c9d0 <dbus_parse_address>
test   %eax,%eax
je     8075ef5 <dbus_server_listen+0x255>
mov    0x3c(%esp),%ecx
movl   $0x0,0x34(%esp)
test   %ecx,%ecx
jle    8075f60 <dbus_server_listen+0x2c0>
lea    0x50(%esp),%eax
xor    %esi,%esi
mov    %eax,0x20(%esp)
lea    0x34(%esp),%eax
mov    %eax,0x24(%esp)
lea    0x40(%esp),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,0x28(%esp)
jmp    8075d8f <dbus_server_listen+0xef>
lea    0x0(%esi),%esi
add    $0x4,%ebp
cmp    $0x8,%ebp
jne    8075d98 <dbus_server_listen+0xf8>
mov    0x3c(%esp),%eax
add    $0x1,%esi
cmp    %esi,%eax
jle    8075e38 <dbus_server_listen+0x198>
lea    0x0(,%esi,4),%edi
xor    %ebp,%ebp
mov    0x20(%esp),%eax
movl   $0x0,0x58(%esp)
movl   $0x0,0x50(%esp)
movl   $0x0,0x54(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
movl   $0x0,0x5c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    (%eax,%edi,1),%eax
mov    %eax,(%esp)
call   *-0x148(%ebx,%ebp,1)
cmp    $0x1,%eax
je     8075e7d <dbus_server_listen+0x1dd>
cmp    $0x4,%eax
je     8075f00 <dbus_server_listen+0x260>
cmp    $0x2,%eax
je     8075f40 <dbus_server_listen+0x2a0>
cmp    $0x3,%eax
jne    8075d78 <dbus_server_listen+0xd8>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8075ea0 <dbus_server_listen+0x200>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806b050 <dbus_move_error>
movl   $0x1,0x2c(%esp)
jmp    8075d78 <dbus_server_listen+0xd8>
nop
mov    0x2c(%esp),%edx
test   %edx,%edx
jne    8075e7d <dbus_server_listen+0x1dd>
test   %eax,%eax
jle    8075f60 <dbus_server_listen+0x2c0>
mov    0x38(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   808c930 <dbus_address_entry_get_method>
mov    %eax,0xc(%esp)
lea    -0x1a3c2(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   808c8f0 <dbus_address_entries_free>
mov    0x34(%esp),%eax
test   %eax,%eax
je     8075ec0 <dbus_server_listen+0x220>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
movl   $0x1,0x2c(%esp)
jmp    8075d78 <dbus_server_listen+0xd8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x84(%esp),%eax
test   %eax,%eax
je     8075ede <dbus_server_listen+0x23e>
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8075ef5 <dbus_server_listen+0x255>
mov    0x84(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   806b050 <dbus_move_error>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x38(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   808c930 <dbus_address_entry_get_method>
mov    %eax,0xc(%esp)
lea    -0x1a3dc(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c900(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8075e7d <dbus_server_listen+0x1dd>
lea    0x0(%esi),%esi
mov    0x84(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806b050 <dbus_move_error>
jmp    8075e7d <dbus_server_listen+0x1dd>
lea    0x0(%esi,%eiz,1),%esi
mov    0x80(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x1a3a8(%ebx),%eax
jmp    8075e60 <dbus_server_listen+0x1c0>
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x22f,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a1b7(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8075e91 <dbus_server_listen+0x1f1>
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1de73(%ebx),%eax
movl   $0x22e,0x10(%esp)
jmp    8075f8e <dbus_server_listen+0x2ee>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x42022,%ebx
test   %esi,%esi
je     8076048 <dbus_server_ref+0x78>
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
test   %eax,%eax
jle    8076000 <dbus_server_ref+0x30>
add    $0x24,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a386(%ebx),%eax
movl   $0x2bf,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a1c7(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
movl   $0x2b3,0x10(%esp)
jmp    8076020 <dbus_server_ref+0x50>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41f82,%ebx
test   %esi,%esi
je     80760f8 <dbus_server_unref+0x88>
mov    %esi,(%esp)
call   8081c40 <dbus_shutdown+0x2f60>
test   %eax,%eax
jle    80760a0 <dbus_server_unref+0x30>
cmp    $0x1,%eax
je     80760e8 <dbus_server_unref+0x78>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a386(%ebx),%eax
movl   $0x2e4,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a1d9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    %esi,(%esp)
call   *(%eax)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
movl   $0x2d8,0x10(%esp)
jmp    80760c0 <dbus_server_unref+0x50>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41ed2,%ebx
test   %esi,%esi
je     80761e0 <dbus_server_disconnect+0xc0>
mov    %esi,(%esp)
call   8081c30 <dbus_shutdown+0x2f50>
test   %eax,%eax
jle    80761a0 <dbus_server_disconnect+0x80>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movzbl 0x58(%esi),%eax
mov    %eax,%edx
or     $0x2,%eax
test   $0x1,%al
mov    %al,0x58(%esi)
je     8076188 <dbus_server_disconnect+0x68>
and    $0xfffffffd,%eax
mov    %al,0x58(%esi)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %esi,(%esp)
call   8076070 <dbus_server_unref>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x4(%esi),%eax
or     $0x3,%edx
mov    %dl,0x58(%esi)
mov    %esi,(%esp)
call   *0x4(%eax)
movzbl 0x58(%esi),%eax
jmp    8076163 <dbus_server_disconnect+0x43>
lea    0x0(%esi),%esi
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a386(%ebx),%eax
movl   $0x309,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1a1f0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
movl   $0x301,0x10(%esp)
jmp    80761b8 <dbus_server_disconnect+0x98>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41df1,%ebx
test   %esi,%esi
je     8076250 <dbus_server_get_is_connected+0x50>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movzbl 0x58(%esi),%edx
mov    0x8(%esi),%eax
or     $0x2,%edx
mov    %edx,%edi
and    $0xfffffffd,%edx
mov    %dl,0x58(%esi)
not    %edi
mov    %eax,(%esp)
and    $0x1,%edi
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a20d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x327,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41d61,%ebx
test   %esi,%esi
je     80762e0 <dbus_server_get_address+0x50>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esi),%eax
orb    $0x2,0x58(%esi)
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
andb   $0xfd,0x58(%esi)
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a225(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x33c,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    80762d6 <dbus_server_get_address+0x46>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x34,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41cd2,%ebx
test   %esi,%esi
je     8076380 <dbus_server_get_id+0x60>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x2c(%esp),%eax
orb    $0x2,0x58(%esi)
mov    %eax,0x4(%esp)
lea    0x1c(%esi),%eax
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   807f610 <dbus_shutdown+0x930>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x2c(%esp),%eax
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a238(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x360,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8076375 <dbus_server_get_id+0x55>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41c30,%ebx
test   %esi,%esi
je     8076420 <dbus_server_set_new_connection_function+0x60>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x44(%esp),%eax
mov    0x4c(%esi),%ebp
mov    0x50(%esi),%edi
andb   $0xfd,0x58(%esi)
mov    %eax,0x48(%esi)
mov    0x48(%esp),%eax
mov    %eax,0x4c(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x50(%esi)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
test   %edi,%edi
je     8076418 <dbus_server_set_new_connection_function+0x58>
mov    %ebp,(%esp)
call   *%edi
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a260(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x387,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41b92,%ebx
lea    0x40(%esi),%eax
mov    %eax,(%esp)
call   807c010 <dbus_watch_handle+0x450>
mov    %esi,(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   80763c0 <dbus_server_set_new_connection_function>
mov    0x2c(%esi),%eax
mov    %eax,(%esp)
call   807b630 <dbus_threads_init_default+0x2a40>
mov    0x30(%esi),%eax
mov    %eax,(%esp)
call   80780e0 <dbus_type_is_fixed+0x280>
lea    0x8(%esi),%eax
add    $0x1c,%esi
mov    %eax,(%esp)
call   80784c0 <dbus_timeout_get_enabled+0x160>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x38(%esi),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41b00,%ebx
test   %esi,%esi
je     80765c0 <dbus_server_set_watch_functions+0xd0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movzbl 0x58(%esi),%eax
mov    0x2c(%esi),%edi
movl   $0x0,0x2c(%esi)
or     $0x2,%eax
test   %edi,%edi
mov    %al,0x58(%esi)
je     80765a0 <dbus_server_set_watch_functions+0xb0>
and    $0xfffffffd,%eax
mov    %al,0x58(%esi)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x54(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
call   807b500 <dbus_threads_init_default+0x2910>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %edi,0x2c(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a280(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,0x4(%esp)
lea    -0x1a375(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    807657f <dbus_server_set_watch_functions+0x8f>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a280(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x3b1,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x419f0,%ebx
test   %esi,%esi
je     80766d0 <dbus_server_set_timeout_functions+0xd0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movzbl 0x58(%esi),%eax
mov    0x30(%esi),%edi
movl   $0x0,0x30(%esi)
or     $0x2,%eax
test   %edi,%edi
mov    %al,0x58(%esi)
je     80766b0 <dbus_server_set_timeout_functions+0xb0>
and    $0xfffffffd,%eax
mov    %al,0x58(%esi)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    0x54(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
call   8077fb0 <dbus_type_is_fixed+0x150>
mov    %eax,%ebp
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %edi,0x30(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a2c0(%ebx),%eax
xor    %ebp,%ebp
mov    %eax,0x4(%esp)
lea    -0x1a375(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    807668f <dbus_server_set_timeout_functions+0x8f>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a2c0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x3e6,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x418e1,%ebx
mov    0x34(%esp),%edi
test   %esi,%esi
je     8076780 <dbus_server_set_auth_mechanisms+0x70>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x2,0x58(%esi)
test   %edi,%edi
je     8076778 <dbus_server_set_auth_mechanisms+0x68>
mov    %edi,(%esp)
call   807ce60 <dbus_watch_handle+0x12a0>
test   %eax,%eax
mov    %eax,%edi
je     80767c0 <dbus_server_set_auth_mechanisms+0xb0>
mov    0x54(%esi),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %edi,0x54(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    $0x1,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
xor    %edi,%edi
jmp    807674e <dbus_server_set_auth_mechanisms+0x3e>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a2e0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x414,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
xor    %eax,%eax
jmp    8076770 <dbus_server_set_auth_mechanisms+0x60>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4182a,%ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x87c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x880(%ebx),%eax
mov    %eax,(%esp)
call   807bcc0 <dbus_watch_handle+0x100>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x417e3,%ebx
mov    (%eax),%edx
test   %edx,%edx
js     8076840 <dbus_server_free_data_slot+0x30>
mov    %eax,0x4(%esp)
lea    0x880(%ebx),%eax
mov    %eax,(%esp)
call   807be10 <dbus_watch_handle+0x250>
add    $0x28,%esp
pop    %ebx
ret
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1ddc1(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a316(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x451,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41771,%ebx
test   %esi,%esi
je     8076918 <dbus_server_set_data+0x98>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x2c(%esp),%eax
orb    $0x2,0x58(%esi)
mov    %eax,0x18(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x14(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x48(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x40(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x880(%ebx),%eax
mov    %eax,(%esp)
call   807bed0 <dbus_watch_handle+0x310>
andb   $0xfd,0x58(%esi)
mov    %eax,%edi
mov    0x8(%esi),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
test   %edi,%edi
je     807690f <dbus_server_set_data+0x8f>
mov    0x28(%esp),%eax
mov    %edi,%esi
test   %eax,%eax
je     807690f <dbus_server_set_data+0x8f>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   *%eax
add    $0x30,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a32b(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x46d,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x30,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41691,%ebx
test   %esi,%esi
je     80769c0 <dbus_server_get_data+0x60>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x34(%esp),%eax
orb    $0x2,0x58(%esi)
mov    %eax,0x8(%esp)
lea    0x40(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x880(%ebx),%eax
mov    %eax,(%esp)
call   807bf90 <dbus_watch_handle+0x3d0>
andb   $0xfd,0x58(%esi)
mov    %eax,%edi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %edi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    -0x1a3f5(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a395(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a340(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x491,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    80769b8 <dbus_server_get_data+0x58>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x415ee,%ebx
mov    0x5c(%edi),%edx
test   %edx,%edx
jle    8076a8b <dbus_server_get_data+0x12b>
nop
mov    0x64(%edi),%eax
lea    0x0(,%esi,4),%ebp
mov    (%eax,%esi,4),%eax
test   %eax,%eax
je     8076a63 <dbus_server_get_data+0x103>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   8075b40 <dbus_pending_call_get_data+0x5f0>
mov    0x64(%edi),%eax
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x64(%edi),%eax
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    0x64(%edi),%eax
movl   $0x0,(%eax,%esi,4)
movl   $0x0,0x4(%esp)
mov    0x60(%edi),%eax
add    $0x1,%esi
mov    (%eax,%ebp,1),%eax
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
mov    0x60(%edi),%eax
movl   $0xffffffff,(%eax,%ebp,1)
cmp    %esi,0x5c(%edi)
jg     8076a20 <dbus_server_get_data+0xc0>
mov    0x68(%edi),%eax
test   %eax,%eax
je     8076ab2 <dbus_server_get_data+0x152>
lea    0x10(%esp),%esi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80813a0 <dbus_shutdown+0x26c0>
mov    0x38(%edi),%eax
test   %eax,%eax
je     8076abe <dbus_server_get_data+0x15e>
call   80847b0 <dbus_shutdown+0x5ad0>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x41523,%ebx
mov    0x20(%esp),%edi
mov    %edi,(%esp)
call   8076460 <dbus_server_set_new_connection_function+0xa0>
mov    0x5c(%edi),%eax
test   %eax,%eax
jle    8076b1c <dbus_server_get_data+0x1bc>
xchg   %ax,%ax
mov    0x64(%edi),%eax
mov    (%eax,%esi,4),%eax
test   %eax,%eax
je     8076b14 <dbus_server_get_data+0x1b4>
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    0x64(%edi),%eax
movl   $0x0,(%eax,%esi,4)
add    $0x1,%esi
cmp    %esi,0x5c(%edi)
jg     8076af8 <dbus_server_get_data+0x198>
mov    0x60(%edi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x64(%edi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x68(%edi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x6c(%edi),%eax
test   %eax,%eax
je     8076b57 <dbus_server_get_data+0x1f7>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8094410 <dbus_bus_remove_match+0x31e0>
mov    0x6c(%edi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x41480,%ebx
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
orb    $0x2,0x58(%esi)
testb  $0x1,0x34(%esp)
jne    8076bb0 <dbus_server_get_data+0x250>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807b860 <dbus_watch_get_socket>
mov    0x6c(%esi),%edx
test   %edx,%edx
je     8076d08 <dbus_server_get_data+0x3a8>
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8094470 <dbus_bus_remove_match+0x3240>
mov    %eax,%edi
test   %edi,%edi
js     8076cc8 <dbus_server_get_data+0x368>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
je     8076ca8 <dbus_server_get_data+0x348>
lea    0x1c(%esi),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807aef0 <dbus_threads_init_default+0x2300>
test   %eax,%eax
mov    %eax,%ebp
je     8076c98 <dbus_server_get_data+0x338>
mov    0x54(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8079e20 <dbus_threads_init_default+0x1230>
mov    %ebp,(%esp)
test   %eax,%eax
je     8076ce8 <dbus_server_get_data+0x388>
call   8064f10 <dbus_connection_has_messages_to_send+0x5c0>
mov    %ebp,(%esp)
mov    %eax,%edi
call   80790c0 <dbus_threads_init_default+0x4d0>
test   %edi,%edi
je     8076ca8 <dbus_server_get_data+0x348>
mov    0x4c(%esi),%eax
mov    0x48(%esi),%ebp
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   80759d0 <dbus_pending_call_get_data+0x480>
mov    0x8(%esi),%edx
andb   $0xfd,0x58(%esi)
mov    %edx,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
test   %ebp,%ebp
je     8076c79 <dbus_server_get_data+0x319>
mov    0xc(%esp),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   *%ebp
mov    %esi,(%esp)
call   8076070 <dbus_server_unref>
mov    %edi,(%esp)
call   8067bf0 <dbus_connection_send+0x160>
mov    %edi,(%esp)
call   8066920 <dbus_connection_unref>
jmp    8076b9c <dbus_server_get_data+0x23c>
xchg   %ax,%ax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   80847c0 <dbus_shutdown+0x5ae0>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    8076b9c <dbus_server_get_data+0x23c>
lea    0x0(%esi,%eiz,1),%esi
call   80790c0 <dbus_threads_init_default+0x4d0>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    8076b9c <dbus_server_get_data+0x23c>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   80829f0 <dbus_shutdown+0x3d10>
mov    %eax,%edi
jmp    8076bd5 <dbus_server_get_data+0x275>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x412d7,%ebx
sub    $0x2c,%esp
movl   $0x70,(%esp)
mov    0x40(%esp),%ebp
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8076f0f <dbus_server_get_data+0x5af>
mov    0x4c(%esp),%eax
mov    %eax,0x6c(%esi)
mov    0x44(%esp),%eax
lea    0x0(,%eax,4),%edi
mov    %edi,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,0x60(%esi)
je     8076e36 <dbus_server_get_data+0x4d6>
mov    %edi,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x64(%esi)
je     8076e2b <dbus_server_get_data+0x4cb>
mov    0x44(%esp),%ecx
test   %ecx,%ecx
jle    8076f16 <dbus_server_get_data+0x5b6>
lea    -0x41490(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x1c(%esp)
jmp    8076dc1 <dbus_server_get_data+0x461>
xchg   %ax,%ax
addl   $0x1,0x5c(%esi)
mov    0x60(%esi),%ecx
mov    0x0(%ebp,%edi,4),%edx
mov    %edx,(%ecx,%edi,4)
mov    0x64(%esi),%ecx
mov    %eax,(%ecx,%edi,4)
add    $0x1,%edi
cmp    0x44(%esp),%edi
je     8076e48 <dbus_server_get_data+0x4e8>
mov    0x1c(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    0x0(%ebp,%edi,4),%eax
mov    %eax,(%esp)
call   807b420 <dbus_threads_init_default+0x2830>
test   %eax,%eax
jne    8076da0 <dbus_server_get_data+0x440>
mov    0x64(%esi),%edx
xor    %edi,%edi
mov    0x44(%esp),%ebp
xchg   %ax,%ax
mov    (%edx,%edi,4),%eax
test   %eax,%eax
je     8076e1c <dbus_server_get_data+0x4bc>
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    0x64(%esi),%eax
movl   $0x0,(%eax,%edi,4)
mov    0x64(%esi),%edx
add    $0x1,%edi
cmp    %edi,%ebp
jg     8076e00 <dbus_server_get_data+0x4a0>
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    0x60(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x48(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x2f8(%ebx),%eax
mov    %eax,0x4(%esp)
call   80757b0 <dbus_pending_call_get_data+0x260>
test   %eax,%eax
je     8076df5 <dbus_server_get_data+0x495>
mov    0x8(%esi),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movzbl 0x58(%esi),%eax
mov    0x44(%esp),%edx
mov    0x44(%esp),%ebp
or     $0x2,%eax
test   %edx,%edx
mov    %al,0x58(%esi)
jg     8076e97 <dbus_server_get_data+0x537>
jmp    8076ef4 <dbus_server_get_data+0x594>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
cmp    %ebp,%edi
je     8076ef0 <dbus_server_get_data+0x590>
mov    0x64(%esi),%eax
mov    (%eax,%edi,4),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8075ac0 <dbus_pending_call_get_data+0x570>
test   %eax,%eax
jne    8076e90 <dbus_server_get_data+0x530>
test   %edi,%edi
mov    %eax,%ebp
je     8076ed1 <dbus_server_get_data+0x571>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x64(%esi),%eax
mov    (%eax,%ebp,4),%eax
add    $0x1,%ebp
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8075b40 <dbus_pending_call_get_data+0x5f0>
cmp    %edi,%ebp
jne    8076eb8 <dbus_server_get_data+0x558>
mov    0x8(%esi),%eax
andb   $0xfd,0x58(%esi)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %esi,(%esp)
call   8076460 <dbus_server_set_new_connection_function+0xa0>
jmp    8076df5 <dbus_server_get_data+0x495>
lea    0x0(%esi),%esi
movzbl 0x58(%esi),%eax
and    $0xfffffffd,%eax
mov    %al,0x58(%esi)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    8076e40 <dbus_server_get_data+0x4e0>
mov    0x48(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x2f8(%ebx),%eax
mov    %eax,0x4(%esp)
call   80757b0 <dbus_pending_call_get_data+0x260>
test   %eax,%eax
jne    8076e66 <dbus_server_get_data+0x506>
mov    0x64(%esi),%edx
jmp    8076e23 <dbus_server_get_data+0x4c3>
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x410b7,%ebx
sub    $0x6c,%esp
lea    0x30(%esp),%edi
mov    0x80(%esp),%ebp
mov    %edi,(%esp)
mov    0x84(%esp),%esi
movl   $0x0,0x2c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8077270 <dbus_server_get_data+0x910>
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     807729b <dbus_server_get_data+0x93b>
test   %ebp,%ebp
lea    -0x1a1a4(%ebx),%eax
cmove  %eax,%ebp
mov    0x88(%esp),%eax
test   %eax,%eax
lea    -0x1b08d(%ebx),%eax
cmovne 0x88(%esp),%eax
test   %esi,%esi
mov    %eax,0x88(%esp)
je     8077268 <dbus_server_get_data+0x908>
cmpb   $0x2a,(%esi)
je     80771d0 <dbus_server_get_data+0x870>
mov    0x90(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x8c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x88(%esp),%eax
mov    %eax,0x4(%esp)
call   8083910 <dbus_shutdown+0x4c30>
test   %eax,%eax
mov    %eax,%esi
jle    80771b2 <dbus_server_get_data+0x852>
mov    %ebp,0x4(%esp)
lea    0x40(%esp),%ebp
mov    %ebp,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x94(%esp),%ecx
lea    -0x1a194(%ebx),%edx
lea    -0x1a19a(%ebx),%eax
mov    %edi,(%esp)
test   %ecx,%ecx
cmove  %edx,%eax
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80771e8 <dbus_server_get_data+0x888>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   808c820 <dbus_shutdown+0xdb40>
test   %eax,%eax
je     80771e8 <dbus_server_get_data+0x888>
lea    -0x1a18a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80771e8 <dbus_server_get_data+0x888>
mov    0x50(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80771e8 <dbus_server_get_data+0x888>
mov    0x8c(%esp),%edx
test   %edx,%edx
je     80770d3 <dbus_server_get_data+0x773>
lea    -0x1a183(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80771e8 <dbus_server_get_data+0x888>
mov    0x8c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80771e8 <dbus_server_get_data+0x888>
mov    0x94(%esp),%eax
test   %eax,%eax
je     8077210 <dbus_server_get_data+0x8b0>
movl   $0x20,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebp
je     80771e8 <dbus_server_get_data+0x888>
mov    0x90(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80941e0 <dbus_bus_remove_match+0x2fb0>
test   %eax,%eax
je     8077172 <dbus_server_get_data+0x812>
lea    -0x1a17a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8077141 <dbus_server_get_data+0x7e1>
mov    %ebp,(%esp)
call   8094460 <dbus_bus_remove_match+0x3230>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   808c820 <dbus_shutdown+0xdb40>
test   %eax,%eax
jne    8077212 <dbus_server_get_data+0x8b2>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8094410 <dbus_bus_remove_match+0x31e0>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
lea    0x0(%esi),%esi
xor    %ebp,%ebp
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    (%eax,%ebp,4),%eax
add    $0x1,%ebp
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
cmp    %esi,%ebp
jne    8077188 <dbus_server_get_data+0x828>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
cmpb   $0x0,0x1(%esi)
mov    $0x0,%eax
cmove  %eax,%esi
jmp    8076fce <dbus_server_get_data+0x66e>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8077180 <dbus_server_get_data+0x820>
xchg   %ax,%ax
xor    %ebp,%ebp
mov    0x2c(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8076d20 <dbus_server_get_data+0x3c0>
test   %eax,%eax
je     80772c1 <dbus_server_get_data+0x961>
mov    %eax,0x1c(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x2c(%esp),%edx
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
mov    0x1c(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ebp,%esi
jmp    8076fce <dbus_server_get_data+0x66e>
nop
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    80771be <dbus_server_get_data+0x85e>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
test   %ebp,%ebp
jne    8077162 <dbus_server_get_data+0x802>
jmp    8077180 <dbus_server_get_data+0x820>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x40d04,%ebx
mov    0x50(%esp),%ebp
mov    0x54(%esp),%eax
movl   $0x0,(%eax)
mov    %ebp,(%esp)
call   808c930 <dbus_address_entry_get_method>
cmpb   $0x74,(%eax)
mov    %eax,%edx
jne    8077408 <dbus_server_get_data+0xaa8>
cmpb   $0x63,0x1(%eax)
jne    8077408 <dbus_server_get_data+0xaa8>
cmpb   $0x70,0x2(%eax)
jne    8077408 <dbus_server_get_data+0xaa8>
cmpb   $0x0,0x3(%eax)
jne    8077408 <dbus_server_get_data+0xaa8>
lea    -0x1a16e(%ebx),%eax
mov    %eax,0x1c(%esp)
lea    -0x1a19f(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0x2c(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
lea    -0x213c2(%ebx),%eax
mov    %eax,0x4(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %ebp,(%esp)
mov    %eax,0x24(%esp)
lea    -0x1a164(%ebx),%eax
mov    %eax,0x4(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
lea    -0x1a15f(%ebx),%eax
mov    %eax,0x4(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    0x2c(%esp),%edx
mov    $0xa,%ecx
mov    0x1c(%esp),%edi
mov    %edx,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
mov    0x28(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x24(%esp),%ecx
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ecx,0x4(%esp)
sete   %dl
movzbl %dl,%edx
mov    %edx,0x14(%esp)
mov    0x58(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x10(%esp)
call   8076f40 <dbus_server_get_data+0x5e0>
mov    0x54(%esp),%esi
cmp    $0x1,%eax
sbb    %edi,%edi
and    $0x2,%edi
mov    %eax,(%esi)
add    $0x1,%edi
add    $0x3c,%esp
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a16e(%ebx),%edi
mov    $0xa,%ecx
mov    %edx,%esi
mov    %edi,0x1c(%esp)
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %al
setb   %cl
xor    %edi,%edi
cmp    %cl,%al
je     807734b <dbus_server_get_data+0x9eb>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0x68(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x40ba7,%ebx
sub    $0x4c,%esp
lea    0x20(%esp),%esi
mov    0x60(%esp),%edi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80775a8 <dbus_server_get_data+0xc48>
lea    0x30(%esp),%ebp
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x64(%esp),%eax
test   %eax,%eax
jne    8077548 <dbus_server_get_data+0xbe8>
lea    -0x1a0ff(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8077578 <dbus_server_get_data+0xc18>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   808c820 <dbus_shutdown+0xdb40>
test   %eax,%eax
je     8077578 <dbus_server_get_data+0xc18>
mov    %edi,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%ebp
je     8077578 <dbus_server_get_data+0xc18>
mov    0x68(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
call   8083070 <dbus_shutdown+0x4390>
test   %eax,%eax
mov    %eax,0x1c(%esp)
js     8077608 <dbus_server_get_data+0xca8>
lea    0x1c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8076d20 <dbus_server_get_data+0x3c0>
test   %eax,%eax
mov    %eax,%edi
je     80775d0 <dbus_server_get_data+0xc70>
test   %ebp,%ebp
je     8077534 <dbus_server_get_data+0xbd4>
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8077440 <dbus_server_get_data+0xae0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x1a10e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8077578 <dbus_server_get_data+0xc18>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   808c820 <dbus_shutdown+0xdb40>
test   %eax,%eax
je     8077578 <dbus_server_get_data+0xc18>
xor    %ebp,%ebp
jmp    80774d6 <dbus_server_get_data+0xb76>
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x1c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
jmp    8077596 <dbus_server_get_data+0xc36>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x409d0,%ebx
movl   $0x0,(%eax)
mov    0x60(%esp),%eax
lea    -0x1a0f4(%ebx),%ebp
mov    %eax,(%esp)
mov    %ebp,%edi
call   808c930 <dbus_address_entry_get_method>
mov    $0x5,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8077708 <dbus_server_get_data+0xda8>
mov    $0x8,%ecx
mov    %eax,%esi
lea    -0x1a0c7(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %al
xor    %edx,%edx
cmp    %al,%cl
je     8077688 <dbus_server_get_data+0xd28>
add    $0x4c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x20(%esp),%eax
mov    %eax,(%esp)
call   80833e0 <dbus_shutdown+0x4700>
mov    $0x3,%edx
test   %eax,%eax
mov    %eax,%esi
js     807767a <dbus_server_get_data+0xd1a>
lea    -0x1a0bf(%ebx),%eax
lea    0x30(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x20(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8076d20 <dbus_server_get_data+0x3c0>
mov    0x64(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
je     80777f8 <dbus_server_get_data+0xe98>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
add    $0x4c,%esp
mov    $0x1,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x1bf0a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %eax,%esi
lea    -0x1a0ef(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %eax,%edi
lea    -0x186ed(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
test   %esi,%esi
mov    %eax,0x1c(%esp)
jne    807775e <dbus_server_get_data+0xdfe>
test   %edi,%edi
jne    807775e <dbus_server_get_data+0xdfe>
test   %eax,%eax
je     80777c8 <dbus_server_get_data+0xe68>
test   %esi,%esi
setne  %al
test   %edi,%edi
mov    %eax,%ebp
mov    0x1c(%esp),%eax
setne  %cl
test   %eax,%eax
setne  %al
mov    %eax,%edx
or     %cl,%dl
jne    80777c0 <dbus_server_get_data+0xe60>
test   %al,%al
je     8077858 <dbus_server_get_data+0xef8>
test   %cl,%cl
je     8077888 <dbus_server_get_data+0xf28>
lea    -0x1a158(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   808c7a0 <dbus_shutdown+0xdac0>
add    $0x4c,%esp
mov    $0x2,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %ebp,%edx
test   %dl,%dl
je     8077779 <dbus_server_get_data+0xe19>
jmp    8077789 <dbus_server_get_data+0xe29>
lea    -0x1a0e8(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   808c7a0 <dbus_shutdown+0xdac0>
mov    $0x2,%edx
jmp    807767a <dbus_server_get_data+0xd1a>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
test   %esi,%esi
je     807781e <dbus_server_get_data+0xebe>
xchg   %ax,%ax
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    (%eax,%edi,4),%eax
add    $0x1,%edi
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
cmp    %esi,%edi
jne    8077800 <dbus_server_get_data+0xea0>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    $0x3,%edx
jmp    807767a <dbus_server_get_data+0xd1a>
lea    0x0(%esi),%esi
test   %cl,%cl
je     8077888 <dbus_server_get_data+0xf28>
lea    0x20(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     807782a <dbus_server_get_data+0xeca>
lea    0x30(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    80778bc <dbus_server_get_data+0xf5c>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    807782a <dbus_server_get_data+0xeca>
xchg   %ax,%ax
mov    %ebp,%eax
test   %al,%al
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
je     80778df <dbus_server_get_data+0xf7f>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8077450 <dbus_server_get_data+0xaf0>
mov    0x64(%esp),%edx
mov    %eax,(%edx)
cmp    $0x1,%eax
sbb    %edx,%edx
and    $0x2,%edx
add    $0x1,%edx
jmp    807767a <dbus_server_get_data+0xd1a>
lea    -0x1a0cd(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    80778fb <dbus_server_get_data+0xf9b>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
jmp    807787f <dbus_server_get_data+0xf1f>
mov    0x1c(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   8077450 <dbus_server_get_data+0xaf0>
mov    0x64(%esp),%edx
mov    %eax,(%edx)
jmp    80778ac <dbus_server_get_data+0xf4c>
movl   $0xa,0x4(%esp)
mov    %ebp,(%esp)
call   8087830 <dbus_shutdown+0x8b50>
test   %eax,%eax
je     80778d2 <dbus_server_get_data+0xf72>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80778d2 <dbus_server_get_data+0xf72>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     80778d2 <dbus_server_get_data+0xf72>
mov    0x68(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8077450 <dbus_server_get_data+0xaf0>
mov    0x64(%esp),%edx
mov    %eax,(%edx)
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x64(%esp),%eax
mov    (%eax),%eax
jmp    80778ac <dbus_server_get_data+0xf4c>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
andb   $0xfc,0x4(%eax)
mov    %edx,(%eax)
ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x40673,%ebx
movl   $0x0,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807eb20 <dbus_watch_handle+0x2f60>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x40648,%ebx
sub    $0x30,%esp
lea    0x20(%esp),%esi
mov    0x40(%esp),%edi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8077a40 <dbus_signature_iter_get_signature+0x90>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   806b750 <dbus_set_error+0x650>
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807fa10 <dbus_shutdown+0xd30>
test   %eax,%eax
je     8077a40 <dbus_signature_iter_get_signature+0x90>
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f570 <dbus_shutdown+0x890>
test   %eax,%eax
je     8077a30 <dbus_signature_iter_get_signature+0x80>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x18(%esp),%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x0,0x18(%esp)
jmp    8077a1d <dbus_signature_iter_get_signature+0x6d>
lea    0x0(%esi),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x405a6,%ebx
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   8077980 <dbus_signature_iter_get_current_type>
cmp    $0x61,%eax
je     8077ab0 <dbus_signature_iter_get_element_type+0x60>
lea    -0x1a0b6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1a098(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19f00(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x96,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
movl   $0x1,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   807eb20 <dbus_watch_handle+0x2f60>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x40520,%ebx
movzbl 0x4(%esi),%edx
test   $0x1,%dl
jne    8077afa <dbus_signature_iter_next+0x2a>
test   $0x2,%dl
je     8077b00 <dbus_signature_iter_next+0x30>
or     $0x1,%edx
mov    %dl,0x4(%esi)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   806b750 <dbus_set_error+0x650>
mov    (%esi),%eax
add    0x1c(%esp),%eax
mov    %eax,(%esi)
movzbl (%eax),%eax
cmp    $0x7d,%al
je     8077b38 <dbus_signature_iter_next+0x68>
cmp    $0x29,%al
je     8077b38 <dbus_signature_iter_next+0x68>
test   %al,%al
setne  %al
movzbl %al,%eax
jmp    8077afa <dbus_signature_iter_next+0x2a>
nop
orb    $0x1,0x4(%esi)
xor    %eax,%eax
jmp    8077afa <dbus_signature_iter_next+0x2a>
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x404b6,%ebx
mov    0x30(%esp),%eax
lea    0x10(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x14(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   806d300 <dbus_set_error+0x2200>
mov    $0x1,%edx
test   %eax,%eax
je     8077ba9 <dbus_signature_validate+0x69>
mov    %eax,(%esp)
call   806ddf0 <dbus_set_error+0x2cf0>
mov    %eax,0x8(%esp)
lea    -0x1a058(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %edx,%edx
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
jmp    8077bc0 <dbus_signature_validate_single>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x40435,%ebx
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   8077b40 <dbus_signature_validate>
xor    %edx,%edx
test   %eax,%eax
jne    8077bf8 <dbus_signature_validate_single+0x38>
add    $0x30,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0x4(%esp)
lea    0x1c(%esp),%esi
mov    %esi,(%esp)
call   8077970 <dbus_signature_iter_init>
mov    %esi,(%esp)
call   8077980 <dbus_signature_iter_get_current_type>
test   %eax,%eax
je     8077c28 <dbus_signature_validate_single+0x68>
mov    %esi,(%esp)
call   8077ad0 <dbus_signature_iter_next>
test   %eax,%eax
jne    8077c28 <dbus_signature_validate_single+0x68>
mov    $0x1,%edx
jmp    8077beb <dbus_signature_validate_single+0x2b>
nop
lea    -0x1a02c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1a058(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806b100 <dbus_set_error>
add    $0x30,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
nop
mov    0x4(%esp),%eax
lea    -0x61(%eax),%ecx
xor    %eax,%eax
cmp    $0x18,%ecx
ja     8077c6d <dbus_type_is_valid+0x1d>
mov    $0x1,%al
shl    %cl,%eax
test   $0x1bf61db,%eax
setne  %al
movzbl %al,%eax
repz ret
nop
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x40386,%ebx
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   8077c50 <dbus_type_is_valid>
test   %eax,%eax
jne    8077cb0 <dbus_type_is_container+0x40>
test   %esi,%esi
jne    8077cc0 <dbus_type_is_container+0x50>
cmp    $0x61,%esi
sete   %al
cmp    $0x76,%esi
sete   %dl
add    $0x24,%esp
or     %edx,%eax
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x65,%esi
jne    8077d00 <dbus_type_is_container+0x90>
add    $0x24,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    -0x1a0b6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19ffc(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19f3a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x12a,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
cmp    $0x72,%esi
je     8077cb5 <dbus_type_is_container+0x45>
jmp    8077c94 <dbus_type_is_container+0x24>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x402e5,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    %edi,(%esp)
call   8077980 <dbus_signature_iter_get_current_type>
mov    %eax,(%esp)
call   8077c70 <dbus_type_is_container>
test   %eax,%eax
je     8077d78 <dbus_signature_iter_recurse+0x68>
mov    (%edi),%eax
mov    0x4(%edi),%edx
mov    %eax,(%esi)
mov    %edx,0x4(%esi)
addl   $0x1,(%esi)
andb   $0xfd,0x4(%esi)
mov    %edi,(%esp)
call   8077980 <dbus_signature_iter_get_current_type>
cmp    $0x61,%eax
je     8077d68 <dbus_signature_iter_recurse+0x58>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
orb    $0x2,0x4(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a0b6(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19fbc(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19f23(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0xd5,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x40236,%ebx
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   8077c50 <dbus_type_is_valid>
test   %eax,%eax
jne    8077df0 <dbus_type_is_basic+0x30>
test   %esi,%esi
jne    8077e10 <dbus_type_is_basic+0x50>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
test   %esi,%esi
je     8077e58 <dbus_type_is_basic+0x98>
and    $0xfffffffb,%esi
xor    %eax,%eax
cmp    $0x72,%esi
je     8077de4 <dbus_type_is_basic+0x24>
xor    %eax,%eax
cmp    $0x61,%esi
setne  %al
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1a0b6(%ebx),%edx
mov    %edx,0xc(%esp)
lea    -0x19ffc(%ebx),%edx
mov    %edx,0x8(%esp)
lea    -0x19f4d(%ebx),%edx
mov    %edx,0x4(%esp)
lea    0x348(%ebx),%edx
movl   $0x142,0x10(%esp)
mov    %eax,0x1c(%esp)
mov    (%edx),%edx
mov    %edx,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    0x1c(%esp),%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8077de4 <dbus_type_is_basic+0x24>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x40196,%ebx
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   8077c50 <dbus_type_is_valid>
test   %eax,%eax
jne    8077e90 <dbus_type_is_fixed+0x30>
test   %esi,%esi
jne    8077eb0 <dbus_type_is_fixed+0x50>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    -0x62(%esi),%ecx
cmp    $0x17,%ecx
ja     8077ef8 <dbus_type_is_fixed+0x98>
mov    $0x1,%eax
shl    %cl,%eax
test   $0xcc90c5,%eax
setne  %al
add    $0x24,%esp
movzbl %al,%eax
pop    %ebx
pop    %esi
ret
lea    -0x1a0b6(%ebx),%edx
mov    %edx,0xc(%esp)
lea    -0x19ffc(%ebx),%edx
mov    %edx,0x8(%esp)
lea    -0x19f60(%ebx),%edx
mov    %edx,0x4(%esp)
lea    0x348(%ebx),%edx
movl   $0x161,0x10(%esp)
mov    %eax,0x1c(%esp)
mov    (%edx),%edx
mov    %edx,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    0x1c(%esp),%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8077e84 <dbus_type_is_fixed+0x24>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x400fa,%ebx
sub    $0x18,%esp
movl   $0x20,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     8077f45 <dbus_type_is_fixed+0xe5>
mov    0x20(%esp),%edx
orb    $0x1,0x1c(%eax)
movl   $0x1,(%eax)
mov    %edx,0x4(%eax)
mov    0x24(%esp),%edx
mov    %edx,0x8(%eax)
mov    0x28(%esp),%edx
mov    %edx,0xc(%eax)
mov    0x2c(%esp),%edx
mov    %edx,0x10(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0x4(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    0x8(%esp),%eax
test   %eax,%eax
movzbl 0x1c(%edx),%eax
setne  %cl
and    $0xfffffffe,%eax
or     %ecx,%eax
mov    %al,0x1c(%edx)
ret
lea    0x0(%esi),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x4006a,%ebx
sub    $0x18,%esp
movl   $0x18,(%esp)
call   807eb80 <dbus_malloc0>
add    $0x18,%esp
pop    %ebx
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x40040,%ebx
mov    0x30(%esp),%esi
test   %eax,%eax
je     8078018 <dbus_type_is_fixed+0x1b8>
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%edi
jne    8077ff4 <dbus_type_is_fixed+0x194>
jmp    8078018 <dbus_type_is_fixed+0x1b8>
xchg   %ax,%ax
call   *0x34(%esp)
test   %eax,%eax
je     8078078 <dbus_type_is_fixed+0x218>
test   %ebp,%ebp
xchg   %ax,%ax
je     8078018 <dbus_type_is_fixed+0x1b8>
mov    %ebp,%edi
mov    0x40(%esp),%eax
mov    0x4(%edi),%ebp
cmp    (%esi),%ebp
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
jne    8077fe0 <dbus_type_is_fixed+0x180>
call   *0x34(%esp)
test   %eax,%eax
je     8078078 <dbus_type_is_fixed+0x218>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
test   %eax,%eax
je     8078032 <dbus_type_is_fixed+0x1d2>
mov    0x10(%esi),%edx
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    0x14(%esi),%eax
test   %eax,%eax
je     8078041 <dbus_type_is_fixed+0x1e1>
mov    0x10(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x34(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esi)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esi)
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
cmp    %edi,%eax
je     80780b8 <dbus_type_is_fixed+0x258>
mov    0x40(%esp),%ebp
mov    %edi,0xc(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%edi
cmp    (%esi),%edi
mov    %ebp,0x4(%esp)
mov    0x8(%eax),%eax
mov    %eax,(%esp)
je     80780c8 <dbus_type_is_fixed+0x268>
call   *0x38(%esp)
cmp    %edi,0xc(%esp)
je     80780b8 <dbus_type_is_fixed+0x258>
mov    %edi,%eax
lea    0x0(%esi),%esi
jmp    8078090 <dbus_type_is_fixed+0x230>
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %edi,%edi
call   *0x38(%esp)
mov    %edi,%eax
jmp    8078090 <dbus_type_is_fixed+0x230>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3ff16,%ebx
mov    0x30(%esp),%esi
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   8077fb0 <dbus_type_is_fixed+0x150>
lea    -0x3fe00(%ebx),%eax
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%edx
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
test   %edx,%edx
movzbl 0x1c(%eax),%edx
setne  %cl
movzbl %cl,%edi
mov    %edx,%ebp
and    $0x1,%ebp
cmp    %edi,%ebp
je     80781a2 <dbus_type_is_fixed+0x342>
and    $0xfffffffe,%edx
or     %ecx,%edx
mov    %dl,0x1c(%eax)
mov    0xc(%esi),%edx
test   %edx,%edx
je     80781a2 <dbus_type_is_fixed+0x342>
mov    0x10(%esi),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   *%edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x14(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
mov    0x18(%esi),%eax
test   %eax,%eax
je     80781e7 <dbus_timeout_set_data+0x17>
mov    0x14(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x24(%esp),%eax
mov    %eax,0x14(%esi)
mov    0x28(%esp),%eax
mov    %eax,0x18(%esi)
add    $0x18,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3fdf2,%ebx
subl   $0x1,(%esi)
je     8078220 <dbus_timeout_set_data+0x50>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80781d0 <dbus_timeout_set_data>
mov    0x10(%esi),%eax
test   %eax,%eax
je     8078247 <dbus_timeout_set_data+0x77>
mov    0xc(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3fd92,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    8078298 <dbus_timeout_set_data+0xc8>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   8077f50 <dbus_type_is_fixed+0xf0>
mov    0x4(%edi),%eax
test   %eax,%eax
je     80782b7 <dbus_timeout_set_data+0xe7>
mov    0x10(%edi),%edx
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   *%eax
test   %eax,%eax
je     80782c8 <dbus_timeout_set_data+0xf8>
add    $0x1c,%esp
mov    $0x1,%ebp
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   807d960 <dbus_watch_handle+0x1da0>
mov    %esi,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3fd05,%ebx
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
mov    0x8(%edi),%eax
test   %eax,%eax
je     8078328 <dbus_timeout_set_data+0x158>
mov    0x10(%edi),%edx
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   *%eax
mov    %esi,(%esp)
call   8078200 <dbus_timeout_set_data+0x30>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0xc(%eax),%edx
mov    %edx,(%esp)
call   *0x8(%eax)
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
movzbl 0x1c(%eax),%eax
and    $0x1,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3fc86,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
nop
mov    (%edi,%esi,4),%eax
mov    (%eax),%edx
test   %edx,%edx
je     807839c <dbus_timeout_get_enabled+0x3c>
mov    %edx,(%esp)
call   8085400 <dbus_shutdown+0x6720>
mov    (%edi,%esi,4),%eax
add    $0x1,%esi
cmp    $0xe,%esi
movl   $0x0,(%eax)
jne    8078388 <dbus_timeout_get_enabled+0x28>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3fc3a,%ebx
sub    $0x18,%esp
lea    0x898(%ebx),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x894(%ebx),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x890(%ebx),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3fbf9,%ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
lea    0x350(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x89c(%ebx)
je     8078450 <dbus_timeout_get_enabled+0xf0>
lea    0x898(%ebx),%eax
movl   $0xabcdef,(%esi)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    8078446 <dbus_timeout_get_enabled+0xe6>
movl   $0x0,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8085330 <dbus_shutdown+0x6650>
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3fb99,%ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
lea    0x350(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x89c(%ebx)
je     80784b0 <dbus_timeout_get_enabled+0x150>
lea    0x894(%ebx),%eax
movl   $0xabcdef,(%esi)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    80784a6 <dbus_timeout_get_enabled+0x146>
movl   $0x0,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   80852d0 <dbus_shutdown+0x65f0>
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3fb33,%ebx
test   %eax,%eax
je     80784f9 <dbus_timeout_get_enabled+0x199>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     8078500 <dbus_timeout_get_enabled+0x1a0>
mov    %eax,0x4(%esp)
lea    0x898(%ebx),%eax
mov    %eax,(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    (%eax),%eax
test   %eax,%eax
je     80784f9 <dbus_timeout_get_enabled+0x199>
mov    %eax,(%esp)
call   8085400 <dbus_shutdown+0x6720>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3fad3,%ebx
test   %eax,%eax
je     8078559 <dbus_timeout_get_enabled+0x1f9>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     8078560 <dbus_timeout_get_enabled+0x200>
mov    %eax,0x4(%esp)
lea    0x894(%ebx),%eax
mov    %eax,(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    (%eax),%eax
test   %eax,%eax
je     8078559 <dbus_timeout_get_enabled+0x1f9>
mov    %eax,(%esp)
call   80853d0 <dbus_shutdown+0x66f0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3fa73,%ebx
test   %eax,%eax
je     80785a7 <dbus_timeout_get_enabled+0x247>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     80785b0 <dbus_timeout_get_enabled+0x250>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8085450 <dbus_shutdown+0x6770>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3fa33,%ebx
test   %eax,%eax
je     80785e7 <dbus_timeout_get_enabled+0x287>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     80785f0 <dbus_timeout_get_enabled+0x290>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8085430 <dbus_shutdown+0x6750>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3f9f3,%ebx
test   %eax,%eax
je     8078627 <dbus_timeout_get_enabled+0x2c7>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     8078630 <dbus_timeout_get_enabled+0x2d0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8085490 <dbus_shutdown+0x67b0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3f9b3,%ebx
test   %eax,%eax
je     8078667 <dbus_timeout_get_enabled+0x307>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     8078670 <dbus_timeout_get_enabled+0x310>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8085470 <dbus_shutdown+0x6790>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
mov    $0xabcdef2,%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3f975,%ebx
sub    $0x8,%esp
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     80786b0 <dbus_timeout_get_enabled+0x350>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
call   80854b0 <dbus_shutdown+0x67d0>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3f939,%ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
lea    0x350(%ebx),%eax
mov    (%eax),%eax
cmp    %eax,0x89c(%ebx)
je     8078710 <dbus_timeout_get_enabled+0x3b0>
lea    0x890(%ebx),%eax
movl   $0xabcdef2,(%esi)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    8078706 <dbus_timeout_get_enabled+0x3a6>
movl   $0x0,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   8078680 <dbus_timeout_get_enabled+0x320>
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3f8d3,%ebx
test   %eax,%eax
je     8078747 <dbus_timeout_get_enabled+0x3e7>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     8078750 <dbus_timeout_get_enabled+0x3f0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8085560 <dbus_shutdown+0x6880>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3f893,%ebx
test   %eax,%eax
je     8078799 <dbus_timeout_get_enabled+0x439>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     80787a0 <dbus_timeout_get_enabled+0x440>
mov    %eax,0x4(%esp)
lea    0x890(%ebx),%eax
mov    %eax,(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
mov    (%eax),%eax
test   %eax,%eax
je     8078799 <dbus_timeout_get_enabled+0x439>
mov    %eax,(%esp)
call   8085560 <dbus_shutdown+0x6880>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3f833,%ebx
test   %eax,%eax
je     80787ef <dbus_timeout_get_enabled+0x48f>
mov    0x24(%esp),%edx
test   %edx,%edx
je     80787ef <dbus_timeout_get_enabled+0x48f>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     80787f8 <dbus_timeout_get_enabled+0x498>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8085590 <dbus_shutdown+0x68b0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
mov    $0x1,%eax
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3f7de,%ebx
test   %edx,%edx
je     8078844 <dbus_timeout_get_enabled+0x4e4>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
je     8078844 <dbus_timeout_get_enabled+0x4e4>
lea    0x350(%ebx),%ecx
mov    (%ecx),%ecx
cmp    %ecx,0x89c(%ebx)
je     8078850 <dbus_timeout_get_enabled+0x4f0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
call   80855c0 <dbus_shutdown+0x68e0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3f783,%ebx
test   %eax,%eax
je     8078897 <dbus_timeout_get_enabled+0x537>
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     80788a0 <dbus_timeout_get_enabled+0x540>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   80856c0 <dbus_shutdown+0x69e0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebp
mov    $0x1,%eax
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3f742,%ebx
sub    $0x5c,%esp
lea    0x350(%ebx),%edx
mov    (%edx),%ecx
cmp    %ecx,0x89c(%ebx)
je     80789f0 <dbus_threads_init+0x140>
lea    0x924(%ebx),%eax
lea    0x928(%ebx),%edi
movl   $0x38,(%esp)
mov    %eax,0x1c(%esp)
lea    0x8c0(%ebx),%eax
mov    %edi,0x18(%esp)
mov    %eax,0x20(%esp)
lea    0x810(%ebx),%eax
mov    %eax,0x24(%esp)
lea    0x868(%ebx),%eax
mov    %eax,0x28(%esp)
lea    0x87c(%ebx),%eax
mov    %eax,0x2c(%esp)
lea    0x834(%ebx),%eax
mov    %eax,0x30(%esp)
lea    0x930(%ebx),%eax
mov    %eax,0x34(%esp)
lea    0x92c(%ebx),%eax
mov    %eax,0x38(%esp)
lea    0x8c8(%ebx),%eax
mov    %eax,0x3c(%esp)
lea    0x920(%ebx),%eax
mov    %eax,0x40(%esp)
lea    0x838(%ebx),%eax
mov    %eax,0x44(%esp)
lea    0x814(%ebx),%eax
mov    %eax,0x48(%esp)
lea    0x8a0(%ebx),%eax
mov    %eax,0x4c(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%esi
je     8078bc1 <dbus_threads_init+0x311>
mov    %edi,%ebp
xor    %edi,%edi
jmp    807898c <dbus_threads_init+0xdc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp,%edi,4),%ebp
call   8085330 <dbus_shutdown+0x6650>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     80789f8 <dbus_threads_init+0x148>
mov    %ebp,(%esi,%edi,4)
add    $0x1,%edi
cmp    $0xe,%edi
jne    8078988 <dbus_threads_init+0xd8>
lea    -0x3fc90(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807ec70 <dbus_free_string_array+0x50>
lea    0x8a0(%ebx),%ebp
test   %eax,%eax
jne    8078a10 <dbus_threads_init+0x160>
mov    %esi,(%esp)
mov    $0xd,%esi
call   807ebb0 <dbus_free>
jmp    80789d4 <dbus_threads_init+0x124>
xchg   %ax,%ax
mov    0x18(%esp,%esi,4),%ebp
mov    0x0(%ebp),%eax
sub    $0x1,%esi
mov    %eax,(%esp)
call   8085400 <dbus_shutdown+0x6720>
cmp    $0xffffffff,%esi
movl   $0x0,0x0(%ebp)
jne    80789d0 <dbus_threads_init+0x120>
xor    %eax,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
lea    -0x1(%edi),%esi
call   807ebb0 <dbus_free>
cmp    $0xffffffff,%esi
jne    80789d0 <dbus_threads_init+0x120>
xor    %eax,%eax
jmp    80789f0 <dbus_threads_init+0x140>
lea    0x0(%esi,%eiz,1),%esi
mov    0x898(%ebx),%edi
xchg   %ax,%ax
test   %edi,%edi
je     8078a3a <dbus_threads_init+0x18a>
mov    0x8(%edi),%ebp
call   8085330 <dbus_shutdown+0x6650>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     8078b28 <dbus_threads_init+0x278>
mov    0x4(%edi),%edi
cmp    0x898(%ebx),%edi
jne    8078a18 <dbus_threads_init+0x168>
mov    0x894(%ebx),%edi
test   %edi,%edi
jne    8078a4c <dbus_threads_init+0x19c>
jmp    8078a6b <dbus_threads_init+0x1bb>
xchg   %ax,%ax
test   %edi,%edi
je     8078a6b <dbus_threads_init+0x1bb>
mov    0x8(%edi),%ebp
nop
call   80852d0 <dbus_shutdown+0x65f0>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     8078b28 <dbus_threads_init+0x278>
mov    0x4(%edi),%edi
cmp    0x894(%ebx),%edi
jne    8078a48 <dbus_threads_init+0x198>
mov    0x890(%ebx),%edi
test   %edi,%edi
jne    8078a7c <dbus_threads_init+0x1cc>
jmp    8078a97 <dbus_threads_init+0x1e7>
nop
test   %edi,%edi
je     8078a97 <dbus_threads_init+0x1e7>
mov    0x8(%edi),%ebp
nop
call   80854b0 <dbus_shutdown+0x67d0>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     8078adf <dbus_threads_init+0x22f>
mov    0x4(%edi),%edi
cmp    0x890(%ebx),%edi
jne    8078a78 <dbus_threads_init+0x1c8>
lea    0x898(%ebx),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x894(%ebx),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    0x890(%ebx),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
lea    -0x3fc40(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807ec70 <dbus_free_string_array+0x50>
test   %eax,%eax
jne    8078bd4 <dbus_threads_init+0x324>
mov    0x890(%ebx),%edi
test   %edi,%edi
jne    8078b06 <dbus_threads_init+0x256>
jmp    8078b28 <dbus_threads_init+0x278>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xabcdef2,0x0(%ebp)
mov    0x4(%edi),%edi
cmp    0x890(%ebx),%edi
je     8078b28 <dbus_threads_init+0x278>
test   %edi,%edi
je     8078b28 <dbus_threads_init+0x278>
mov    0x8(%edi),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     8078af0 <dbus_threads_init+0x240>
cmp    $0xabcdef2,%eax
je     8078af0 <dbus_threads_init+0x240>
mov    %eax,(%esp)
call   8085560 <dbus_shutdown+0x6880>
jmp    8078af0 <dbus_threads_init+0x240>
lea    0x0(%esi,%eiz,1),%esi
mov    0x898(%ebx),%edi
test   %edi,%edi
jne    8078b4e <dbus_threads_init+0x29e>
jmp    8078b70 <dbus_threads_init+0x2c0>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xabcdef,0x0(%ebp)
mov    0x4(%edi),%edi
cmp    0x898(%ebx),%edi
je     8078b70 <dbus_threads_init+0x2c0>
test   %edi,%edi
je     8078b70 <dbus_threads_init+0x2c0>
mov    0x8(%edi),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     8078b38 <dbus_threads_init+0x288>
cmp    $0xabcdef,%eax
je     8078b38 <dbus_threads_init+0x288>
mov    %eax,(%esp)
call   8085400 <dbus_shutdown+0x6720>
jmp    8078b38 <dbus_threads_init+0x288>
lea    0x0(%esi,%eiz,1),%esi
mov    0x894(%ebx),%edi
test   %edi,%edi
jne    8078b96 <dbus_threads_init+0x2e6>
jmp    8078bb8 <dbus_threads_init+0x308>
lea    0x0(%esi,%eiz,1),%esi
movl   $0xabcdef,0x0(%ebp)
mov    0x4(%edi),%edi
cmp    0x894(%ebx),%edi
je     8078bb8 <dbus_threads_init+0x308>
test   %edi,%edi
je     8078bb8 <dbus_threads_init+0x308>
mov    0x8(%edi),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
je     8078b80 <dbus_threads_init+0x2d0>
cmp    $0xabcdef,%eax
je     8078b80 <dbus_threads_init+0x2d0>
mov    %eax,(%esp)
call   80853d0 <dbus_shutdown+0x66f0>
jmp    8078b80 <dbus_threads_init+0x2d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4c(%esp),%ebp
jmp    80789bf <dbus_threads_init+0x10f>
movl   $0x0,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    80789f0 <dbus_threads_init+0x140>
lea    0x350(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x89c(%ebx)
mov    $0x1,%eax
jmp    80789f0 <dbus_threads_init+0x140>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3f40a,%ebx
sub    $0x8,%esp
call   80856e0 <dbus_shutdown+0x6a00>
add    $0x8,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3f3e7,%ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebp
call   8072e10 <dbus_message_contains_unix_fds+0x10>
test   %eax,%eax
mov    %eax,%edi
je     8078de0 <dbus_threads_init_default+0x1f0>
mov    0x58(%esp),%eax
test   %eax,%eax
je     8078dd0 <dbus_threads_init_default+0x1e0>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   808eed0 <dbus_address_unescape_value+0x1ed0>
mov    %eax,%esi
test   %esi,%esi
je     8078db8 <dbus_threads_init_default+0x1c8>
call   8075640 <dbus_pending_call_get_data+0xf0>
test   %eax,%eax
xchg   %ax,%ax
je     8078db0 <dbus_threads_init_default+0x1c0>
mov    %eax,0x14(%esp)
call   806a440 <dbus_connection_get_outgoing_unix_fds+0xa0>
mov    0x14(%esp),%ecx
test   %eax,%eax
mov    %eax,0x18(%esp)
je     8078da8 <dbus_threads_init_default+0x1b8>
mov    0x58(%esp),%eax
test   %eax,%eax
je     8078d68 <dbus_threads_init_default+0x178>
movl   $0x0,0x2c(%esp)
movl   $0x0,0x14(%esp)
mov    0x54(%esp),%eax
mov    0x58(%esp),%edx
mov    %edi,0xc(%ebp)
mov    %esi,0x10(%ebp)
mov    %eax,0x4(%ebp)
movzbl 0x44(%ebp),%eax
test   %edx,%edx
setne  %dl
mov    %edx,%edi
mov    %edx,%esi
shl    $0x4,%edi
and    $0xffffffec,%eax
or     %edi,%eax
mov    %eax,%edx
and    $0xfffffff0,%eax
shr    $0x4,%dl
mov    %edx,%edi
xor    $0x1,%edi
and    $0x1,%edi
shl    $0x2,%edi
shl    $0x3,%esi
or     %edi,%eax
or     %esi,%eax
mov    %al,0x44(%ebp)
mov    0x14(%esp),%eax
movl   $0x1,0x0(%ebp)
mov    %ecx,0x20(%ebp)
movl   $0x0,0x2c(%ebp)
mov    %eax,0x24(%ebp)
mov    0x18(%esp),%eax
movl   $0x0,0x30(%ebp)
movl   $0x0,0x34(%ebp)
movl   $0x0,0x38(%ebp)
mov    %eax,0x14(%ebp)
lea    -0x3ef20(%ebx),%eax
movl   $0x0,0x3c(%ebp)
movl   $0x0,0x40(%ebp)
movl   $0x0,0x28(%ebp)
movl   $0x3f00000,0x18(%ebp)
movl   $0x1000,0x1c(%ebp)
mov    %ebp,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x1000,0x8(%esp)
movl   $0x3f00000,0x4(%esp)
mov    %ecx,(%esp)
call   8075780 <dbus_pending_call_get_data+0x230>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
mov    0x2c(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %edx,0x14(%esp)
test   %eax,%eax
jne    8078c9b <dbus_threads_init_default+0xab>
mov    0x18(%esp),%eax
mov    %ecx,0x14(%esp)
mov    %eax,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
mov    0x14(%esp),%ecx
mov    %ecx,(%esp)
call   8075680 <dbus_pending_call_get_data+0x130>
mov    %esi,(%esp)
call   808efa0 <dbus_address_unescape_value+0x1fa0>
mov    %edi,(%esp)
call   8072ed0 <dbus_message_contains_unix_fds+0xd0>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   808f090 <dbus_address_unescape_value+0x2090>
mov    %eax,%esi
jmp    8078c4f <dbus_threads_init_default+0x5f>
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3f207,%ebx
sub    $0x4c,%esp
movl   $0x0,0x38(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x3c(%esp)
movb   $0x1,0x38(%esp)
lea    -0x1de78(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
movl   $0x0,0x2c(%esp)
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %eax,(%esp)
mov    %eax,%edi
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%esi
je     8078f00 <dbus_threads_init_default+0x310>
lea    -0x140(%ebx),%ebp
lea    0xc(%ebp),%eax
mov    %eax,0x1c(%esp)
lea    0x2c(%esp),%eax
lea    0x30(%esp),%edi
mov    %eax,0x18(%esp)
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   *0x0(%ebp)
sub    $0x1,%eax
cmp    $0x2,%eax
jbe    8078e99 <dbus_threads_init_default+0x2a9>
add    $0x4,%ebp
cmp    0x1c(%esp),%ebp
jne    8078e72 <dbus_threads_init_default+0x282>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8078eb0 <dbus_threads_init_default+0x2c0>
test   %esi,%esi
je     8078ea8 <dbus_threads_init_default+0x2b8>
mov    %esi,0x28(%eax)
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     8078eda <dbus_threads_init_default+0x2ea>
mov    0x64(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%esp),%eax
jmp    8078ea8 <dbus_threads_init_default+0x2b8>
lea    -0x19ed4(%ebx),%eax
mov    %eax,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   808c7a0 <dbus_shutdown+0xdac0>
jmp    8078ebc <dbus_threads_init_default+0x2cc>
xchg   %ax,%ax
test   %edi,%edi
je     8078e59 <dbus_threads_init_default+0x269>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    8078ea8 <dbus_threads_init_default+0x2b8>
jmp    8078f40 <dbus_threads_init_default+0x350>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3f0b4,%ebx
mov    0x60(%esp),%eax
mov    0x68(%esp),%ebp
mov    %eax,(%esp)
call   808c930 <dbus_address_entry_get_method>
lea    -0x18f0b(%ebx),%edi
mov    $0xb,%ecx
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
xor    %eax,%eax
cmp    %dl,%cl
je     8078f88 <dbus_threads_init_default+0x398>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x19edb(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
lea    0x30(%esp),%edi
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %edi,(%esp)
mov    %eax,%esi
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8079078 <dbus_threads_init_default+0x488>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8085190 <dbus_shutdown+0x64b0>
test   %eax,%eax
jne    8078fe8 <dbus_threads_init_default+0x3f8>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x64(%esp),%eax
movl   $0x0,(%eax)
add    $0x4c,%esp
mov    $0x3,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,(%esp)
call   808c9d0 <dbus_parse_address>
test   %eax,%eax
je     8078fc8 <dbus_threads_init_default+0x3d8>
mov    0x2c(%esp),%eax
xor    %esi,%esi
test   %eax,%eax
jg     8079021 <dbus_threads_init_default+0x431>
jmp    8079070 <dbus_threads_init_default+0x480>
add    $0x1,%esi
cmp    0x2c(%esp),%esi
jge    8079070 <dbus_threads_init_default+0x480>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    (%eax,%esi,4),%eax
mov    %eax,(%esp)
call   8078df0 <dbus_threads_init_default+0x200>
test   %eax,%eax
je     8079018 <dbus_threads_init_default+0x428>
mov    0x28(%esp),%edx
mov    %eax,0x1c(%esp)
mov    %edx,(%esp)
call   808c8f0 <dbus_address_entries_free>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
mov    0x64(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
je     8078fda <dbus_threads_init_default+0x3ea>
mov    $0x1,%eax
jmp    8078f7d <dbus_threads_init_default+0x38d>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8079038 <dbus_threads_init_default+0x448>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
mov    0x64(%esp),%eax
movl   $0x0,(%eax)
mov    $0x3,%eax
jmp    8078f7d <dbus_threads_init_default+0x38d>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    (%eax),%ecx
lea    -0x1(%ecx),%edx
test   %edx,%edx
mov    %edx,(%eax)
jne    80790da <dbus_threads_init_default+0x4ea>
mov    0x4(%eax),%edx
mov    %eax,(%esp)
call   *(%edx)
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3ef16,%ebx
mov    0x24(%esp),%esi
mov    %esi,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    0x4(%esi),%eax
mov    0x14(%eax),%eax
test   %eax,%eax
je     8079125 <dbus_threads_init_default+0x535>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
mov    0x4(%esi),%eax
mov    %esi,(%esp)
call   *0x14(%eax)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    %esi,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
testb  $0x1,0x44(%esi)
jne    807915b <dbus_threads_init_default+0x56b>
mov    0x4(%esi),%eax
mov    %esi,(%esp)
call   *0x8(%eax)
orb    $0x1,0x44(%esi)
add    $0x18,%esp
pop    %esi
ret
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3ee92,%ebx
testb  $0x1,0x44(%esi)
je     8079218 <dbus_threads_init_default+0x628>
mov    0x34(%esi),%eax
test   %eax,%eax
je     807918d <dbus_threads_init_default+0x59d>
mov    0x30(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x40(%esi),%eax
test   %eax,%eax
je     807919c <dbus_threads_init_default+0x5ac>
mov    0x3c(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072ed0 <dbus_message_contains_unix_fds+0xd0>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808efa0 <dbus_address_unescape_value+0x1fa0>
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   8075780 <dbus_pending_call_get_data+0x230>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   8075680 <dbus_pending_call_get_data+0x130>
mov    0x24(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x28(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x14(%esi),%eax
test   %eax,%eax
je     807920d <dbus_threads_init_default+0x61d>
mov    %eax,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8079140 <dbus_threads_init_default+0x550>
jmp    807917e <dbus_threads_init_default+0x58e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movzbl 0x44(%eax),%eax
not    %eax
and    $0x1,%eax
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    $0x1,%esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x3edab,%ebx
movzbl 0x44(%ebp),%eax
test   $0x2,%al
jne    807926a <dbus_threads_init_default+0x67a>
xor    %si,%si
test   $0x1,%al
je     8079278 <dbus_threads_init_default+0x688>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   80652d0 <dbus_connection_has_messages_to_send+0x980>
testb  $0xc,0x44(%ebp)
je     80792b0 <dbus_threads_init_default+0x6c0>
xor    %edi,%edi
xor    %esi,%esi
movzbl 0x44(%ebp),%eax
add    %edi,%edi
and    $0xfffffffd,%eax
or     %edi,%eax
mov    %al,0x44(%ebp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8066380 <dbus_connection_set_unix_user_function+0x2d0>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   808f1a0 <dbus_address_unescape_value+0x21a0>
cmp    $0x4,%eax
jne    8079289 <dbus_threads_init_default+0x699>
testb  $0x10,0x44(%ebp)
je     807937e <dbus_threads_init_default+0x78e>
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
mov    0x2c(%ebp),%edx
test   %edx,%edx
mov    %eax,%esi
je     80792f6 <dbus_threads_init_default+0x706>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   806a610 <dbus_connection_get_outgoing_unix_fds+0x270>
test   %eax,%eax
jne    80793bd <dbus_threads_init_default+0x7cd>
mov    0x38(%ebp),%eax
test   %eax,%eax
je     8079315 <dbus_threads_init_default+0x725>
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
call   806a610 <dbus_connection_get_outgoing_unix_fds+0x270>
test   %eax,%eax
jne    8079425 <dbus_threads_init_default+0x835>
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
mov    %eax,%esi
call   806a4e0 <dbus_connection_get_outgoing_unix_fds+0x140>
test   %eax,%eax
mov    %eax,%edx
je     8079289 <dbus_threads_init_default+0x699>
testb  $0x40,0x44(%ebp)
jne    807934f <dbus_threads_init_default+0x75f>
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   806a680 <dbus_connection_get_outgoing_unix_fds+0x2e0>
mov    0x18(%esp),%edx
test   %eax,%eax
jne    80794c2 <dbus_threads_init_default+0x8d2>
mov    %edx,(%esp)
mov    $0x1,%edi
mov    $0x1,%esi
movl   $0x3,0x4(%esp)
mov    %edx,0x18(%esp)
call   806a610 <dbus_connection_get_outgoing_unix_fds+0x270>
mov    0x18(%esp),%edx
mov    %edx,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
jmp    807928d <dbus_threads_init_default+0x69d>
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   808f7c0 <dbus_address_unescape_value+0x27c0>
mov    0x28(%ebp),%ecx
test   %ecx,%ecx
je     80793a4 <dbus_threads_init_default+0x7b4>
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    80794aa <dbus_threads_init_default+0x8ba>
testb  $0x10,0x44(%ebp)
jne    80792ca <dbus_threads_init_default+0x6da>
mov    $0x1,%edi
mov    $0x1,%esi
jmp    807928d <dbus_threads_init_default+0x69d>
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
mov    0x30(%ebp),%edx
mov    0x8(%ebp),%esi
mov    0x2c(%ebp),%edi
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   806a680 <dbus_connection_get_outgoing_unix_fds+0x2e0>
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   *%edi
mov    %esi,(%esp)
mov    %eax,%edi
call   80647a0 <sidput@plt+0x16c40>
test   %edi,%edi
jne    8079414 <dbus_threads_init_default+0x824>
mov    %ebp,(%esp)
call   8079140 <dbus_threads_init_default+0x550>
test   %edi,%edi
setne  %al
mov    %eax,%edi
mov    %edi,%esi
and    $0x1,%esi
jmp    807928d <dbus_threads_init_default+0x69d>
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
mov    0x30(%ebp),%ecx
mov    0x8(%ebp),%esi
mov    0x38(%ebp),%edi
mov    %ecx,0x18(%esp)
mov    %eax,(%esp)
call   806a690 <dbus_connection_get_outgoing_unix_fds+0x2f0>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8079289 <dbus_threads_init_default+0x699>
mov    %esi,(%esp)
call   80647d0 <sidput@plt+0x16c70>
mov    0x18(%esp),%ecx
mov    0x1c(%esp),%eax
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
call   *%edi
mov    $0x1,%edi
mov    %esi,(%esp)
mov    $0x1,%esi
mov    %eax,0x18(%esp)
call   80647a0 <sidput@plt+0x16c40>
mov    0x18(%esp),%eax
test   %eax,%eax
jne    807928d <dbus_threads_init_default+0x69d>
mov    %ebp,(%esp)
xor    %edi,%edi
xor    %si,%si
call   8079140 <dbus_threads_init_default+0x550>
jmp    807928d <dbus_threads_init_default+0x69d>
mov    %ebp,(%esp)
call   8079140 <dbus_threads_init_default+0x550>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8066380 <dbus_connection_set_unix_user_function+0x2d0>
jmp    807926a <dbus_threads_init_default+0x67a>
mov    %edx,(%esp)
mov    %esi,0x4(%esp)
call   806a9d0 <dbus_connection_get_outgoing_unix_fds+0x630>
mov    0x18(%esp),%edx
test   %eax,%eax
jne    807934f <dbus_threads_init_default+0x75f>
mov    %edx,(%esp)
xor    %edi,%edi
xor    %esi,%esi
movl   $0x3,0x4(%esp)
call   806a610 <dbus_connection_get_outgoing_unix_fds+0x270>
mov    %ebp,(%esp)
call   8079140 <dbus_threads_init_default+0x550>
mov    0x18(%esp),%edx
jmp    8079371 <dbus_threads_init_default+0x781>
nop
push   %ebx
mov    $0x1,%eax
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3eaee,%ebx
testb  $0x2,0x44(%edx)
je     8079539 <dbus_threads_init_default+0x949>
mov    0x10(%edx),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
mov    %eax,(%esp)
call   806a790 <dbus_connection_get_outgoing_unix_fds+0x3f0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3eab3,%ebx
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   808f860 <dbus_address_unescape_value+0x2860>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x24(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3ea73,%ebx
movzbl 0x44(%edx),%eax
test   $0x10,%al
jne    80795b8 <dbus_threads_init_default+0x9c8>
test   $0x2,%al
jne    80795a8 <dbus_threads_init_default+0x9b8>
mov    0x28(%edx),%eax
add    $0x18,%esp
pop    %ebx
ret
nop
mov    0x10(%edx),%eax
mov    %eax,(%esp)
call   808f7c0 <dbus_address_unescape_value+0x27c0>
add    $0x18,%esp
pop    %ebx
ret
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %ebp
mov    $0x1,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3ea2b,%ebx
mov    0x34(%esp),%edi
testb  $0x1,0x44(%esi)
je     80795f0 <dbus_threads_init_default+0xa00>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,(%esp)
call   807b860 <dbus_watch_get_socket>
test   %eax,%eax
js     8079650 <dbus_threads_init_default+0xa60>
lea    0x38(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807b4c0 <dbus_threads_init_default+0x28d0>
mov    %esi,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    %edi,(%esp)
call   807b490 <dbus_threads_init_default+0x28a0>
mov    0x4(%esi),%eax
mov    0x38(%esp),%edx
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
call   *0x4(%eax)
mov    %edi,(%esp)
mov    %eax,%ebp
call   807ba00 <dbus_watch_set_data+0x80>
mov    %esi,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x19e88(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    80795e5 <dbus_threads_init_default+0x9f5>
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3e996,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %eax,0x8(%esi)
mov    %esi,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    0x4(%esi),%eax
mov    %esi,(%esp)
call   *0xc(%eax)
test   %eax,%eax
jne    8079697 <dbus_threads_init_default+0xaa7>
movl   $0x0,0x8(%esi)
mov    %esi,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
mov    0x8(%esi),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3e941,%ebx
mov    0x4(%esi),%eax
mov    0x18(%eax),%eax
test   %eax,%eax
mov    $0x0,%eax
je     80796ff <dbus_threads_init_default+0xb0f>
testb  $0x1,0x44(%esi)
jne    80796ff <dbus_threads_init_default+0xb0f>
mov    %esi,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    0x4(%esi),%eax
mov    0x24(%esp),%edx
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   *0x18(%eax)
mov    %esi,(%esp)
mov    %eax,%edi
call   80790c0 <dbus_threads_init_default+0x4d0>
mov    %edi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3e8e6,%ebx
mov    0x20(%esp),%esi
testb  $0x3,0x24(%esp)
je     8079731 <dbus_threads_init_default+0xb41>
testb  $0x1,0x44(%esi)
je     8079738 <dbus_threads_init_default+0xb48>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %esi,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    0x4(%esi),%eax
mov    0x28(%esp),%edx
mov    0x24(%esp),%ecx
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x4(%esp)
call   *0x10(%eax)
mov    %esi,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3e880,%ebx
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   8075760 <dbus_pending_call_get_data+0x210>
cmp    0x18(%esi),%eax
jl     80797a8 <dbus_threads_init_default+0xbb8>
mov    $0x1,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   8075770 <dbus_pending_call_get_data+0x220>
cmp    0x1c(%esi),%eax
jge    8079796 <dbus_threads_init_default+0xba6>
mov    %esi,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
je     8079938 <dbus_threads_init_default+0xd48>
testb  $0x20,0x44(%esi)
jne    8079898 <dbus_threads_init_default+0xca8>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f680 <dbus_address_unescape_value+0x2680>
test   %eax,%eax
je     80798c0 <dbus_threads_init_default+0xcd0>
lea    0x20(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80798af <dbus_threads_init_default+0xcbf>
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f530 <dbus_address_unescape_value+0x2530>
mov    0x18(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f6d0 <dbus_address_unescape_value+0x26d0>
test   %eax,%eax
je     807985d <dbus_threads_init_default+0xc6d>
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f50 <dbus_message_contains_unix_fds+0x150>
mov    0x1c(%esp),%eax
mov    0x4(%eax),%ebp
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %ebp,0xc(%esp)
call   807fc00 <dbus_shutdown+0xf20>
test   %eax,%eax
jne    8079867 <dbus_threads_init_default+0xc77>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    80798af <dbus_threads_init_default+0xcbf>
mov    0x1c(%esp),%edx
mov    0x4(%edx),%eax
mov    %edx,0x4(%esp)
sub    %ebp,%eax
mov    %eax,0x8(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f70 <dbus_message_contains_unix_fds+0x170>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f550 <dbus_address_unescape_value+0x2550>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xchg   %ax,%ax
mov    0xc(%esi),%eax
orb    $0x20,0x44(%esi)
mov    %eax,(%esp)
call   8073030 <dbus_message_contains_unix_fds+0x230>
test   %eax,%eax
jne    807998d <dbus_threads_init_default+0xd9d>
add    $0x3c,%esp
mov    $0x2,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f50 <dbus_message_contains_unix_fds+0x150>
mov    0x20(%esp),%eax
mov    0x4(%eax),%edi
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f530 <dbus_address_unescape_value+0x2530>
mov    0x20(%esp),%eax
mov    0x4(%eax),%edx
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
jne    8079961 <dbus_threads_init_default+0xd71>
mov    0x20(%esp),%edx
mov    0x4(%edx),%eax
mov    %edx,0x4(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f70 <dbus_message_contains_unix_fds+0x170>
jmp    80798af <dbus_threads_init_default+0xcbf>
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f1a0 <dbus_address_unescape_value+0x21a0>
cmp    $0x1,%eax
je     80798af <dbus_threads_init_default+0xcbf>
mov    %esi,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
jne    80797c8 <dbus_threads_init_default+0xbd8>
jmp    8079796 <dbus_threads_init_default+0xba6>
mov    0x20(%esp),%edx
mov    0x4(%edx),%eax
mov    %edx,0x4(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f70 <dbus_message_contains_unix_fds+0x170>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f550 <dbus_address_unescape_value+0x2550>
jmp    8079898 <dbus_threads_init_default+0xca8>
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   80733c0 <dbus_message_contains_unix_fds+0x5c0>
test   %eax,%eax
sete   %al
movzbl %al,%eax
jmp    807979b <dbus_threads_init_default+0xbab>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3e645,%ebx
mov    0x20(%esp),%esi
jmp    8079a09 <dbus_threads_init_default+0xe19>
nop
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8073410 <dbus_message_contains_unix_fds+0x610>
mov    %eax,%edi
mov    0x20(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   806efa0 <dbus_message_set_serial+0x120>
test   %eax,%eax
je     8079a40 <dbus_threads_init_default+0xe50>
mov    0x4(%esi),%eax
mov    0x14(%eax),%eax
test   %eax,%eax
je     80799fa <dbus_threads_init_default+0xe0a>
mov    %esi,(%esp)
call   *%eax
mov    %edi,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8064b90 <dbus_connection_has_messages_to_send+0x240>
mov    %esi,(%esp)
call   8079770 <dbus_threads_init_default+0xb80>
test   %eax,%eax
je     80799c8 <dbus_threads_init_default+0xdd8>
cmp    $0x2,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%edi
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8073470 <dbus_message_contains_unix_fds+0x670>
test   %eax,%eax
je     8079a37 <dbus_threads_init_default+0xe47>
mov    %esi,(%esp)
call   8079140 <dbus_threads_init_default+0x550>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %edi,0x4(%esp)
mov    0xc(%esi),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   8073440 <dbus_message_contains_unix_fds+0x640>
jmp    8079a20 <dbus_threads_init_default+0xe30>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3e593,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   8073490 <dbus_message_contains_unix_fds+0x690>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3e563,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   80734c0 <dbus_message_contains_unix_fds+0x6c0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3e533,%ebx
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   80734b0 <dbus_message_contains_unix_fds+0x6b0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3e503,%ebx
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   80734e0 <dbus_message_contains_unix_fds+0x6e0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3e4da,%ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
lea    -0x3ef20(%ebx),%ecx
mov    %edx,0x18(%eax)
mov    %eax,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    0x1c(%eax),%ecx
mov    %edx,0x4(%esp)
mov    %ecx,0x8(%esp)
mov    0x20(%eax),%eax
mov    %eax,(%esp)
call   8075780 <dbus_pending_call_get_data+0x230>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3e48a,%ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
lea    -0x3ef20(%ebx),%ecx
mov    %edx,0x1c(%eax)
mov    %eax,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    0x18(%eax),%edx
mov    %edx,0x4(%esp)
mov    0x20(%eax),%eax
mov    %eax,(%esp)
call   8075780 <dbus_pending_call_get_data+0x230>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x18(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x1c(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3e40d,%ebx
movl   $0x7fffffff,(%esi)
testb  $0x2,0x44(%eax)
jne    8079c10 <dbus_threads_init_default+0x1020>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   806a610 <dbus_connection_get_outgoing_unix_fds+0x270>
test   %eax,%eax
je     8079c05 <dbus_threads_init_default+0x1015>
mov    %edi,(%esp)
call   806a680 <dbus_connection_get_outgoing_unix_fds+0x2e0>
mov    %eax,(%esi)
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3e39d,%ebx
movl   $0xffffffff,(%esi)
testb  $0x2,0x44(%eax)
jne    8079c80 <dbus_threads_init_default+0x1090>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   806a610 <dbus_connection_get_outgoing_unix_fds+0x270>
test   %eax,%eax
je     8079c75 <dbus_threads_init_default+0x1085>
mov    %edi,(%esp)
call   806a670 <dbus_connection_get_outgoing_unix_fds+0x2d0>
mov    %eax,(%esi)
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edi
mov    0x38(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3e328,%ebx
movl   $0x0,(%edi)
movl   $0x0,(%esi)
testb  $0x2,0x44(%eax)
jne    8079d00 <dbus_threads_init_default+0x1110>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%ebp
call   806a610 <dbus_connection_get_outgoing_unix_fds+0x270>
test   %eax,%eax
je     8079cf0 <dbus_threads_init_default+0x1100>
mov    %ebp,(%esp)
call   806a6a0 <dbus_connection_get_outgoing_unix_fds+0x300>
mov    %eax,(%edi)
mov    %ebp,(%esp)
call   806a6b0 <dbus_connection_get_outgoing_unix_fds+0x310>
mov    %eax,(%esi)
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x14(%esp),%edx
mov    0x30(%eax),%ecx
mov    %ecx,(%edx)
mov    0x18(%esp),%edx
mov    0x34(%eax),%ecx
mov    %ecx,(%edx)
mov    0x8(%esp),%edx
mov    %edx,0x2c(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x30(%eax)
mov    0x10(%esp),%edx
mov    %edx,0x34(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3e26d,%ebx
movl   $0x0,(%esi)
testb  $0x2,0x44(%eax)
jne    8079db0 <dbus_threads_init_default+0x11c0>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   808f7b0 <dbus_address_unescape_value+0x27b0>
movl   $0x3,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,%edi
call   806a610 <dbus_connection_get_outgoing_unix_fds+0x270>
test   %eax,%eax
je     8079da5 <dbus_threads_init_default+0x11b5>
mov    %edi,(%esp)
call   806a690 <dbus_connection_get_outgoing_unix_fds+0x2f0>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,(%esi)
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%esp),%eax
mov    0x14(%esp),%edx
mov    0x3c(%eax),%ecx
mov    %ecx,(%edx)
mov    0x18(%esp),%edx
mov    0x40(%eax),%ecx
mov    %ecx,(%edx)
mov    0x8(%esp),%edx
mov    %edx,0x38(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x3c(%eax)
mov    0x10(%esp),%edx
mov    %edx,0x40(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3e1d3,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   808f140 <dbus_address_unescape_value+0x2140>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%ecx
mov    0x8(%esp),%eax
test   %eax,%eax
movzbl 0x44(%ecx),%eax
setne  %dl
shl    $0x6,%edx
and    $0xffffffbf,%eax
or     %edx,%eax
mov    %al,0x44(%ecx)
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3e183,%ebx
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   80734f0 <dbus_message_contains_unix_fds+0x6f0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3e153,%ebx
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0xc(%eax),%eax
mov    %eax,(%esp)
call   8073500 <dbus_message_contains_unix_fds+0x700>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    0x48(%eax),%edx
mov    0x8(%esp),%eax
mov    %edx,(%eax)
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3e0f7,%ebx
sub    $0x14,%esp
mov    %eax,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    %esi,(%esp)
call   8079140 <dbus_threads_init_default+0x550>
mov    %esi,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x4c(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3e0c1,%ebx
test   %eax,%eax
je     8079f79 <dbus_threads_init_default+0x1389>
mov    0x8(%esi),%edx
test   %edx,%edx
je     8079f5f <dbus_threads_init_default+0x136f>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8064ab0 <dbus_connection_has_messages_to_send+0x160>
mov    0x4c(%esi),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x4c(%esi),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
movl   $0x0,0x4c(%esi)
mov    0x50(%esi),%eax
test   %eax,%eax
je     8079fb0 <dbus_threads_init_default+0x13c0>
mov    0x8(%esi),%edx
test   %edx,%edx
je     8079f96 <dbus_threads_init_default+0x13a6>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8064ab0 <dbus_connection_has_messages_to_send+0x160>
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
movl   $0x0,0x50(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3e036,%ebx
mov    0x20(%esp),%esi
mov    %esi,%eax
call   8079f30 <dbus_threads_init_default+0x1340>
movl   $0x0,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x48(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3dff6,%ebx
mov    0x20(%esp),%esi
mov    %esi,%eax
call   8079f30 <dbus_threads_init_default+0x1340>
lea    0x60(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x70(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   8079160 <dbus_threads_init_default+0x570>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x8(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3dfa1,%ebx
test   %eax,%eax
je     807a06f <dbus_threads_init_default+0x147f>
testb  $0x1,0x44(%esi)
je     807a078 <dbus_threads_init_default+0x1488>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    %esi,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
jne    807a0e0 <dbus_threads_init_default+0x14f0>
testb  $0x8,0x44(%esi)
mov    $0x1,%edx
je     807a0c0 <dbus_threads_init_default+0x14d0>
mov    0x4c(%esi),%eax
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8064ae0 <dbus_connection_has_messages_to_send+0x190>
mov    %esi,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f1a0 <dbus_address_unescape_value+0x21a0>
cmp    $0x4,%eax
sete   %dl
cmp    $0x1,%eax
setbe  %al
or     %eax,%edx
movzbl %dl,%edx
jmp    807a097 <dbus_threads_init_default+0x14a7>
xchg   %ax,%ax
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   8075760 <dbus_pending_call_get_data+0x210>
xor    %edx,%edx
cmp    0x18(%esi),%eax
jge    807a097 <dbus_threads_init_default+0x14a7>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   8075770 <dbus_pending_call_get_data+0x220>
xor    %edx,%edx
cmp    0x1c(%esi),%eax
setl   %dl
jmp    807a097 <dbus_threads_init_default+0x14a7>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
jmp    807a050 <dbus_threads_init_default+0x1460>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x8(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3ded1,%ebx
test   %eax,%eax
je     807a13f <dbus_threads_init_default+0x154f>
testb  $0x1,0x44(%esi)
je     807a148 <dbus_threads_init_default+0x1558>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    %esi,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
jne    807a1b0 <dbus_threads_init_default+0x15c0>
testb  $0x4,0x44(%esi)
mov    $0x1,%eax
je     807a190 <dbus_threads_init_default+0x15a0>
mov    %eax,0x8(%esp)
mov    0x50(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8064ae0 <dbus_connection_has_messages_to_send+0x190>
mov    %esi,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f1a0 <dbus_address_unescape_value+0x21a0>
sub    $0x1,%eax
cmp    $0x1,%eax
setbe  %al
movzbl %al,%eax
jmp    807a167 <dbus_threads_init_default+0x1577>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8064940 <sidput@plt+0x16de0>
jmp    807a167 <dbus_threads_init_default+0x1577>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3de33,%ebx
sub    $0x3c,%esp
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
je     807a208 <dbus_threads_init_default+0x1618>
mov    0x54(%esp),%esi
test   %esi,%esi
je     807a460 <dbus_threads_init_default+0x1870>
mov    0x54(%esp),%eax
mov    $0x1,%edi
movl   $0x0,(%eax)
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
lea    0x20(%esp),%ebp
call   80790b0 <dbus_threads_init_default+0x4c0>
mov    %esi,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
jne    807a27a <dbus_threads_init_default+0x168a>
mov    %esi,(%esp)
call   8079230 <dbus_threads_init_default+0x640>
test   %eax,%eax
je     807a27a <dbus_threads_init_default+0x168a>
mov    0x50(%esp),%ecx
movl   $0x0,0x28(%esp)
movzbl 0x44(%esi),%eax
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
test   %ecx,%ecx
movl   $0x0,0x2c(%esp)
movb   $0x1,0x28(%esp)
je     807a265 <dbus_threads_init_default+0x1675>
test   $0x4,%al
jne    807a438 <dbus_threads_init_default+0x1848>
test   %edi,%edi
je     807a276 <dbus_threads_init_default+0x1686>
test   $0x8,%al
nop
lea    0x0(%esi,%eiz,1),%esi
jne    807a408 <dbus_threads_init_default+0x1818>
test   $0xc,%al
je     807a2c0 <dbus_threads_init_default+0x16d0>
mov    $0x1,%edi
mov    0x54(%esp),%eax
test   %eax,%eax
je     807a29d <dbus_threads_init_default+0x16ad>
mov    %esi,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
mov    0x54(%esp),%ecx
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,(%ecx)
mov    %esi,%eax
call   807a050 <dbus_threads_init_default+0x1460>
mov    %esi,%eax
call   807a120 <dbus_threads_init_default+0x1530>
mov    %esi,(%esp)
call   80790c0 <dbus_threads_init_default+0x4d0>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x14(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f770 <dbus_address_unescape_value+0x2770>
test   %eax,%eax
je     807a310 <dbus_threads_init_default+0x1720>
testb  $0xc,0x44(%esi)
jne    807a27a <dbus_threads_init_default+0x168a>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f1a0 <dbus_address_unescape_value+0x21a0>
cmp    $0x1,%eax
je     807a310 <dbus_threads_init_default+0x1720>
jb     807a388 <dbus_threads_init_default+0x1798>
cmp    $0x2,%eax
je     807a318 <dbus_threads_init_default+0x1728>
cmp    $0x3,%eax
jne    807a214 <dbus_threads_init_default+0x1624>
mov    %esi,%eax
call   8079f00 <dbus_threads_init_default+0x1310>
jmp    807a214 <dbus_threads_init_default+0x1624>
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
jmp    807a27f <dbus_threads_init_default+0x168f>
nop
mov    0x50(%esp),%edx
test   %edx,%edx
xchg   %ax,%ax
je     807a27a <dbus_threads_init_default+0x168a>
mov    %ebp,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f4a0 <dbus_address_unescape_value+0x24a0>
test   %eax,%eax
je     807a27a <dbus_threads_init_default+0x168a>
mov    0x20(%esp),%eax
mov    0x4(%eax),%edx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,0xc(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   8081570 <dbus_shutdown+0x2890>
cmp    $0x0,%eax
jg     807a470 <dbus_threads_init_default+0x1880>
je     807a27a <dbus_threads_init_default+0x168a>
xchg   %ax,%ax
call   80847c0 <dbus_shutdown+0x5ae0>
test   %eax,%eax
jne    807a27a <dbus_threads_init_default+0x168a>
lea    0x0(%esi),%esi
jmp    807a3f4 <dbus_threads_init_default+0x1804>
lea    0x0(%esi),%esi
test   %edi,%edi
lea    0x0(%esi),%esi
je     807a27a <dbus_threads_init_default+0x168a>
mov    %ebp,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f500 <dbus_address_unescape_value+0x2500>
mov    0x54(%esi),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   8081990 <dbus_shutdown+0x2cb0>
xor    %edx,%edx
test   %eax,%eax
cmovns %eax,%edx
mov    %edx,0x8(%esp)
mov    0x20(%esp),%edx
mov    %eax,0x1c(%esp)
mov    %edx,0x4(%esp)
mov    0x10(%esi),%edx
mov    %edx,(%esp)
call   808f520 <dbus_address_unescape_value+0x2520>
mov    0x1c(%esp),%eax
cmp    $0x0,%eax
jg     807a214 <dbus_threads_init_default+0x1624>
jne    807a4b8 <dbus_threads_init_default+0x18c8>
mov    %esi,%eax
call   8079f00 <dbus_threads_init_default+0x1310>
nop
lea    0x0(%esi,%eiz,1),%esi
jmp    807a27a <dbus_threads_init_default+0x168a>
lea    0x0(%esi),%esi
mov    %ebp,0x8(%esp)
mov    0x14(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   8081ed0 <dbus_shutdown+0x31f0>
test   %eax,%eax
je     807a4a0 <dbus_threads_init_default+0x18b0>
movzbl 0x44(%esi),%eax
and    $0xfffffff7,%eax
mov    %al,0x44(%esi)
jmp    807a276 <dbus_threads_init_default+0x1686>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   80820b0 <dbus_shutdown+0x33d0>
test   %eax,%eax
je     807a488 <dbus_threads_init_default+0x1898>
movzbl 0x44(%esi),%eax
and    $0xfffffffb,%eax
mov    %al,0x44(%esi)
jmp    807a265 <dbus_threads_init_default+0x1675>
lea    0x0(%esi),%esi
add    $0x3c,%esp
mov    $0x1,%edi
pop    %ebx
mov    %edi,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f4c0 <dbus_address_unescape_value+0x24c0>
jmp    807a214 <dbus_threads_init_default+0x1624>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   806ade0 <dbus_error_free>
mov    %esi,%eax
call   8079f00 <dbus_threads_init_default+0x1310>
movzbl 0x44(%esi),%eax
jmp    807a265 <dbus_threads_init_default+0x1675>
mov    %ebp,(%esp)
call   806ade0 <dbus_error_free>
mov    %esi,%eax
call   8079f00 <dbus_threads_init_default+0x1310>
movzbl 0x44(%esi),%eax
jmp    807a276 <dbus_threads_init_default+0x1686>
call   8087b20 <dbus_shutdown+0x8e40>
xor    %edi,%edi
test   %eax,%eax
jne    807a27f <dbus_threads_init_default+0x168f>
call   80847c0 <dbus_shutdown+0x5ae0>
mov    $0x1,%di
test   %eax,%eax
jne    807a27f <dbus_threads_init_default+0x168f>
jmp    807a3f4 <dbus_threads_init_default+0x1804>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3db15,%ebx
sub    $0x3c,%esp
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
je     807a6e0 <dbus_threads_init_default+0x1af0>
lea    0x24(%esp),%eax
xor    %edi,%edi
mov    %eax,0x14(%esp)
jmp    807a5bf <dbus_threads_init_default+0x19cf>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x74(%esi),%edx
lea    0x70(%esi),%ebp
test   %edx,%edx
jle    807a710 <dbus_threads_init_default+0x1b20>
mov    0x14(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f50 <dbus_message_contains_unix_fds+0x150>
mov    0x24(%esp),%eax
mov    0x4(%eax),%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %ecx,0x18(%esp)
mov    %eax,(%esp)
call   808f6d0 <dbus_address_unescape_value+0x26d0>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     807a785 <dbus_threads_init_default+0x1b95>
mov    0x24(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x4(%ecx),%eax
sub    0x18(%esp),%eax
mov    %ecx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f70 <dbus_message_contains_unix_fds+0x170>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   807f730 <dbus_shutdown+0xa50>
movl   $0x800,0x4(%esp)
mov    %ebp,(%esp)
call   807f410 <dbus_shutdown+0x730>
mov    0x1c(%esp),%edx
mov    %esi,(%esp)
add    %edx,%edi
call   80799b0 <dbus_threads_init_default+0xdc0>
test   %eax,%eax
je     807a758 <dbus_threads_init_default+0x1b68>
mov    %esi,%eax
call   807a050 <dbus_threads_init_default+0x1460>
cmp    %edi,0x54(%esi)
jl     807a6e0 <dbus_threads_init_default+0x1af0>
testb  $0x1,0x44(%esi)
jne    807a6e0 <dbus_threads_init_default+0x1af0>
mov    0x4c(%esi),%eax
mov    %eax,(%esp)
call   807bb50 <dbus_watch_get_enabled>
test   %eax,%eax
je     807a6e0 <dbus_threads_init_default+0x1af0>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f680 <dbus_address_unescape_value+0x2680>
test   %eax,%eax
mov    %eax,%ebp
jne    807a518 <dbus_threads_init_default+0x1928>
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f50 <dbus_message_contains_unix_fds+0x150>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f860 <dbus_address_unescape_value+0x2860>
test   %eax,%eax
je     807a6f0 <dbus_threads_init_default+0x1b00>
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
mov    %edx,0x18(%esp)
mov    %eax,(%esp)
call   8072f80 <dbus_message_contains_unix_fds+0x180>
mov    0x18(%esp),%edx
test   %eax,%eax
je     807a738 <dbus_threads_init_default+0x1b48>
mov    0x28(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x54(%esi),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   8082760 <dbus_shutdown+0x3a80>
test   %eax,%eax
mov    %eax,0x18(%esp)
mov    0x28(%esp),%eax
cmovns 0x2c(%esp),%ebp
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %ebp,0x8(%esp)
mov    %eax,(%esp)
call   8073000 <dbus_message_contains_unix_fds+0x200>
mov    0x18(%esp),%edx
xor    %eax,%eax
test   %edx,%edx
cmovns %edx,%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x18(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f70 <dbus_message_contains_unix_fds+0x170>
mov    0x18(%esp),%edx
test   %edx,%edx
js     807a768 <dbus_threads_init_default+0x1b78>
jne    807a5ad <dbus_threads_init_default+0x19bd>
mov    %esi,%eax
call   8079f00 <dbus_threads_init_default+0x1310>
lea    0x0(%esi,%eiz,1),%esi
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x54(%esi),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   8081990 <dbus_shutdown+0x2cb0>
mov    %eax,%edx
jmp    807a69e <dbus_threads_init_default+0x1aae>
xchg   %ax,%ax
mov    0x54(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   8081990 <dbus_shutdown+0x2cb0>
test   %eax,%eax
mov    %eax,%edx
jle    807a6c4 <dbus_threads_init_default+0x1ad4>
jmp    807a526 <dbus_threads_init_default+0x1936>
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f70 <dbus_message_contains_unix_fds+0x170>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8087b20 <dbus_shutdown+0x8e40>
test   %eax,%eax
jne    807a758 <dbus_threads_init_default+0x1b68>
call   80847c0 <dbus_shutdown+0x5ae0>
test   %eax,%eax
jne    807a6e0 <dbus_threads_init_default+0x1af0>
xchg   %ax,%ax
jmp    807a6d2 <dbus_threads_init_default+0x1ae2>
mov    0x24(%esp),%edx
mov    0x4(%edx),%eax
sub    0x18(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   8072f70 <dbus_message_contains_unix_fds+0x170>
xor    %eax,%eax
jmp    807a75a <dbus_threads_init_default+0x1b6a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3d845,%ebx
sub    $0x5c,%esp
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
mov    $0x1,%eax
je     807a9d8 <dbus_threads_init_default+0x1de8>
testb  $0x1,0x44(%esi)
jne    807a9d8 <dbus_threads_init_default+0x1de8>
lea    0x44(%esp),%eax
movl   $0x0,0x34(%esp)
mov    %eax,0x38(%esp)
jmp    807a891 <dbus_threads_init_default+0x1ca1>
mov    0x64(%esi),%eax
lea    0x60(%esi),%ebp
test   %eax,%eax
jne    807a9e0 <dbus_threads_init_default+0x1df0>
mov    0x40(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f5e0 <dbus_address_unescape_value+0x25e0>
test   %eax,%eax
je     807a9d4 <dbus_threads_init_default+0x1de4>
mov    0x44(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f5e0 <dbus_address_unescape_value+0x25e0>
test   %eax,%eax
je     807a9c4 <dbus_threads_init_default+0x1dd4>
mov    0x64(%esi),%eax
mov    %eax,0x30(%esp)
mov    0x5c(%esi),%eax
mov    0x30(%esp),%edx
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
sub    %eax,%edx
mov    0x48(%esi),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   8081570 <dbus_shutdown+0x2890>
test   %eax,%eax
js     807a95a <dbus_threads_init_default+0x1d6a>
add    %eax,0x34(%esp)
add    0x5c(%esi),%eax
cmp    0x30(%esp),%eax
mov    %eax,0x5c(%esi)
je     807a986 <dbus_threads_init_default+0x1d96>
testb  $0x1,0x44(%esi)
jne    807aa40 <dbus_threads_init_default+0x1e50>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8064940 <sidput@plt+0x16de0>
test   %eax,%eax
je     807aa40 <dbus_threads_init_default+0x1e50>
mov    0x34(%esp),%eax
cmp    %eax,0x58(%esi)
jl     807aa40 <dbus_threads_init_default+0x1e50>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   80649e0 <dbus_connection_has_messages_to_send+0x90>
mov    %eax,(%esp)
mov    %eax,%edi
call   806f060 <dbus_message_lock>
mov    0x38(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
call   806ee40 <dbus_message_unref+0x4d0>
mov    0x40(%esp),%eax
mov    0x4(%eax),%edx
mov    0x44(%esp),%eax
mov    %edx,0x30(%esp)
mov    0x4(%eax),%ebp
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f590 <dbus_address_unescape_value+0x2590>
mov    0x30(%esp),%edx
test   %eax,%eax
jne    807a7f8 <dbus_threads_init_default+0x1c08>
lea    (%edx,%ebp,1),%eax
mov    %eax,0x30(%esp)
mov    0x5c(%esi),%eax
test   %eax,%eax
jle    807aa18 <dbus_threads_init_default+0x1e28>
cmp    %eax,%edx
jle    807a9f0 <dbus_threads_init_default+0x1e00>
sub    %eax,%edx
mov    0x44(%esp),%ecx
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %ebp,0x18(%esp)
movl   $0x0,0x14(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %edx,0xc(%esp)
mov    %eax,(%esp)
call   80817b0 <dbus_shutdown+0x2ad0>
test   %eax,%eax
jns    807a873 <dbus_threads_init_default+0x1c83>
call   80847c0 <dbus_shutdown+0x5ae0>
test   %eax,%eax
jne    807aa40 <dbus_threads_init_default+0x1e50>
call   8087b80 <dbus_shutdown+0x8ea0>
test   %eax,%eax
xchg   %ax,%ax
jne    807aa40 <dbus_threads_init_default+0x1e50>
call   8087bb0 <dbus_shutdown+0x8ed0>
test   %eax,%eax
lea    0x0(%esi),%esi
je     807aa37 <dbus_threads_init_default+0x1e47>
lea    0x60(%esi),%ebp
movl   $0x0,0x5c(%esi)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   807f730 <dbus_shutdown+0xa50>
movl   $0x800,0x4(%esp)
mov    %ebp,(%esp)
call   807f410 <dbus_shutdown+0x730>
mov    0x8(%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8064a10 <dbus_connection_has_messages_to_send+0xc0>
jmp    807a887 <dbus_threads_init_default+0x1c97>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   807f730 <dbus_shutdown+0xa50>
xor    %eax,%eax
xchg   %ax,%ax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x30(%esp)
jmp    807a84b <dbus_threads_init_default+0x1c5b>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%ecx
sub    %eax,%ecx
sub    %edx,%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
add    %ecx,%ebp
mov    %ebp,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   8081570 <dbus_shutdown+0x2890>
jmp    807a86b <dbus_threads_init_default+0x1c7b>
mov    0x10(%esi),%eax
mov    %edx,0x3c(%esp)
mov    %eax,(%esp)
call   808f860 <dbus_address_unescape_value+0x2860>
mov    0x3c(%esp),%edx
test   %eax,%eax
jne    807aa50 <dbus_threads_init_default+0x1e60>
mov    0x5c(%esi),%eax
jmp    807a919 <dbus_threads_init_default+0x1d29>
mov    %esi,%eax
call   8079f00 <dbus_threads_init_default+0x1310>
xchg   %ax,%ax
add    $0x5c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x3c(%esp)
call   806ee60 <dbus_message_unref+0x4f0>
mov    0x5c(%esi),%eax
mov    0x4c(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x20(%esp)
mov    0x48(%esp),%ecx
sub    %eax,%edx
mov    0x40(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
call   80815d0 <dbus_shutdown+0x28f0>
jmp    807a86b <dbus_threads_init_default+0x1c7b>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3d52e,%ebx
mov    0x48(%esp),%esi
mov    %di,0x1c(%esp)
mov    0x48(%eax),%eax
mov    %eax,0x18(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   8079240 <dbus_threads_init_default+0x650>
test   %eax,%eax
je     807abe8 <dbus_threads_init_default+0x1ff8>
mov    0x44(%esp),%eax
and    $0x7,%eax
cmp    $0x1,%eax
je     807aca8 <dbus_threads_init_default+0x20b8>
testb  $0x2,0x44(%esp)
jne    807ab38 <dbus_threads_init_default+0x1f48>
testb  $0x1,0x44(%esp)
movzwl 0x1c(%esp),%edx
jne    807ab4c <dbus_threads_init_default+0x1f5c>
test   %dx,%dx
jne    807ab54 <dbus_threads_init_default+0x1f64>
mov    0x40(%esp),%eax
call   807a120 <dbus_threads_init_default+0x1530>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzwl 0x1c(%esp),%edx
or     $0x1,%edx
testb  $0x1,0x44(%esp)
mov    %dx,0x1c(%esp)
je     807ab1f <dbus_threads_init_default+0x1f2f>
or     $0x4,%edx
mov    %dx,0x1c(%esp)
mov    0x44(%esp),%eax
and    $0x4,%eax
mov    %eax,0xc(%esp)
jne    807abd0 <dbus_threads_init_default+0x1fe0>
xor    %esi,%esi
lea    0x18(%esp),%edi
jmp    807ab79 <dbus_threads_init_default+0x1f89>
lea    0x0(%esi,%eiz,1),%esi
call   8087b50 <dbus_shutdown+0x8e70>
test   %eax,%eax
je     807ab93 <dbus_threads_init_default+0x1fa3>
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   8081c60 <dbus_shutdown+0x2f80>
test   %eax,%eax
mov    %eax,%ebp
js     807ab70 <dbus_threads_init_default+0x1f80>
mov    0xc(%esp),%ecx
test   %ecx,%ecx
jne    807acf8 <dbus_threads_init_default+0x2108>
test   %ebp,%ebp
js     807ab24 <dbus_threads_init_default+0x1f34>
jne    807ac28 <dbus_threads_init_default+0x2038>
lea    0x14(%esp),%eax
xor    %edx,%edx
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %dx,0x1e(%esp)
xor    %edx,%edx
movl   $0x0,(%esp)
call   807a1c0 <dbus_threads_init_default+0x15d0>
jmp    807ab24 <dbus_threads_init_default+0x1f34>
nop
mov    0x40(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   80647d0 <sidput@plt+0x16c70>
jmp    807ab63 <dbus_threads_init_default+0x1f73>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   808f1a0 <dbus_address_unescape_value+0x21a0>
mov    0x40(%esp),%ecx
movzwl 0x1c(%esp),%edx
movzbl 0x44(%ecx),%ecx
test   $0x8,%cl
je     807ac40 <dbus_threads_init_default+0x2050>
or     $0x1,%edx
mov    %dx,0x1c(%esp)
and    $0x4,%ecx
jne    807ab4c <dbus_threads_init_default+0x1f5c>
cmp    $0x2,%eax
jne    807ab1f <dbus_threads_init_default+0x1f2f>
jmp    807ab4c <dbus_threads_init_default+0x1f5c>
movzwl 0x1e(%esp),%eax
test   $0x8,%al
je     807ac46 <dbus_threads_init_default+0x2056>
mov    0x40(%esp),%eax
call   8079f00 <dbus_threads_init_default+0x1310>
jmp    807ab24 <dbus_threads_init_default+0x1f34>
nop
test   %eax,%eax
je     807ac09 <dbus_threads_init_default+0x2019>
jmp    807ac11 <dbus_threads_init_default+0x2021>
mov    %eax,%esi
and    $0x1,%esi
test   $0x4,%al
setne  %al
mov    %esi,%edx
movzbl %al,%eax
mov    %eax,%edi
lea    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %edi,(%esp)
call   807a1c0 <dbus_threads_init_default+0x15d0>
mov    0x14(%esp),%eax
test   %eax,%eax
jne    807ab24 <dbus_threads_init_default+0x1f34>
test   %esi,%esi
je     807ac86 <dbus_threads_init_default+0x2096>
testb  $0x2,0x44(%esp)
jne    807ad0c <dbus_threads_init_default+0x211c>
test   %edi,%edi
je     807ab24 <dbus_threads_init_default+0x1f34>
testb  $0x1,0x44(%esp)
je     807ab24 <dbus_threads_init_default+0x1f34>
mov    0x40(%esp),%eax
call   807a7b0 <dbus_threads_init_default+0x1bc0>
jmp    807ab24 <dbus_threads_init_default+0x1f34>
nop
mov    0x40(%esp),%eax
testb  $0x1,0x44(%eax)
jne    807ab0c <dbus_threads_init_default+0x1f1c>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8064940 <sidput@plt+0x16de0>
test   %eax,%eax
je     807ab0c <dbus_threads_init_default+0x1f1c>
mov    0x40(%esp),%eax
call   807a7b0 <dbus_threads_init_default+0x1bc0>
mov    0x40(%esp),%eax
testb  $0x1,0x44(%eax)
jne    807ab24 <dbus_threads_init_default+0x1f34>
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   8064940 <sidput@plt+0x16de0>
test   %eax,%eax
jne    807ab0c <dbus_threads_init_default+0x1f1c>
jmp    807ab24 <dbus_threads_init_default+0x1f34>
mov    0x40(%esp),%eax
mov    0x8(%eax),%eax
mov    %eax,(%esp)
call   80647a0 <sidput@plt+0x16c40>
jmp    807ab9f <dbus_threads_init_default+0x1faf>
mov    0x40(%esp),%eax
call   807a4e0 <dbus_threads_init_default+0x18f0>
jmp    807ac86 <dbus_threads_init_default+0x2096>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3d2d0,%ebx
mov    0x40(%esp),%edi
test   $0x1,%esi
je     807ad68 <dbus_threads_init_default+0x2178>
mov    0x44(%esp),%eax
cmp    %eax,0x4c(%edi)
je     807addc <dbus_threads_init_default+0x21ec>
nop
mov    0x44(%esp),%eax
mov    $0x1,%ebp
cmp    %eax,0x50(%edi)
je     807ada0 <dbus_threads_init_default+0x21b0>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
test   $0xc,%esi
je     807ad50 <dbus_threads_init_default+0x2160>
mov    0x4c(%edi),%eax
cmp    %eax,0x44(%esp)
je     807ad85 <dbus_threads_init_default+0x2195>
mov    %eax,(%esp)
call   807b3e0 <dbus_threads_init_default+0x27f0>
test   %eax,%eax
jne    807ad50 <dbus_threads_init_default+0x2160>
mov    %edi,(%esp)
call   8079140 <dbus_threads_init_default+0x550>
add    $0x2c,%esp
mov    $0x1,%ebp
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
and    $0x2,%esi
je     807ad5e <dbus_threads_init_default+0x216e>
xor    %edx,%edx
mov    %edi,%eax
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   807a1c0 <dbus_threads_init_default+0x15d0>
test   %eax,%eax
jne    807adc8 <dbus_threads_init_default+0x21d8>
xor    %ebp,%ebp
jmp    807ad5e <dbus_threads_init_default+0x216e>
lea    0x0(%esi),%esi
mov    %edi,%eax
call   807a7b0 <dbus_threads_init_default+0x1bc0>
test   %eax,%eax
je     807adc1 <dbus_threads_init_default+0x21d1>
mov    %edi,%eax
call   807a120 <dbus_threads_init_default+0x1530>
jmp    807ad5e <dbus_threads_init_default+0x216e>
lea    0x1c(%esp),%eax
mov    $0x1,%edx
mov    %eax,0x4(%esp)
mov    %edi,%eax
movl   $0x0,(%esp)
call   807a1c0 <dbus_threads_init_default+0x15d0>
test   %eax,%eax
je     807adc1 <dbus_threads_init_default+0x21d1>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    807ad8d <dbus_threads_init_default+0x219d>
mov    %edi,%eax
call   807a4e0 <dbus_threads_init_default+0x18f0>
test   %eax,%eax
jne    807ad8d <dbus_threads_init_default+0x219d>
xor    %ebp,%ebp
jmp    807ad5e <dbus_threads_init_default+0x216e>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3d1d8,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
movl   $0x0,0xc(%esp)
mov    0x8(%esi),%eax
lea    -0x514c0(%ebx),%edi
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807b750 <dbus_threads_init_default+0x2b60>
movl   $0x0,0xc(%esp)
mov    0x8(%esi),%eax
mov    %edi,0x4(%esp)
xor    %edi,%edi
mov    %eax,0x8(%esp)
mov    0x4c(%esi),%eax
mov    %eax,(%esp)
call   807b750 <dbus_threads_init_default+0x2b60>
mov    0x50(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8064a70 <dbus_connection_has_messages_to_send+0x120>
test   %eax,%eax
jne    807ae98 <dbus_threads_init_default+0x22a8>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x4c(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8064a70 <dbus_connection_has_messages_to_send+0x120>
test   %eax,%eax
je     807aed0 <dbus_threads_init_default+0x22e0>
mov    %esi,%eax
mov    $0x1,%edi
call   807a050 <dbus_threads_init_default+0x1460>
mov    %esi,%eax
call   807a120 <dbus_threads_init_default+0x1530>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x50(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   8064ab0 <dbus_connection_has_messages_to_send+0x160>
add    $0x10,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3d107,%ebx
sub    $0x2c,%esp
movl   $0x80,(%esp)
mov    0x40(%esp),%edi
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     807b070 <dbus_threads_init_default+0x2480>
lea    0x60(%eax),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     807b058 <dbus_threads_init_default+0x2468>
lea    0x70(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     807b050 <dbus_threads_init_default+0x2460>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
call   807b420 <dbus_threads_init_default+0x2830>
test   %eax,%eax
mov    %eax,0x50(%esi)
je     807b044 <dbus_threads_init_default+0x2454>
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   807b420 <dbus_threads_init_default+0x2830>
test   %eax,%eax
mov    %eax,0x4c(%esi)
je     807b02e <dbus_threads_init_default+0x243e>
mov    0x48(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x2f0(%ebx),%eax
mov    %eax,0x4(%esp)
call   8078c10 <dbus_threads_init_default+0x20>
test   %eax,%eax
je     807b018 <dbus_threads_init_default+0x2428>
mov    %edi,(%esp)
call   8084860 <dbus_shutdown+0x5b80>
mov    %eax,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   808f840 <dbus_address_unescape_value+0x2840>
mov    %esi,%eax
mov    %edi,0x48(%esi)
movl   $0x0,0x5c(%esi)
movl   $0x800,0x54(%esi)
movl   $0x800,0x58(%esi)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x4c(%esi),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x4c(%esi),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x50(%esi),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    807b00f <dbus_threads_init_default+0x241f>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3cf77,%ebx
sub    $0x3c,%esp
lea    0x20(%esp),%esi
mov    0x50(%esp),%edi
mov    %esi,(%esp)
mov    0x5c(%esp),%ebp
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     807b238 <dbus_threads_init_default+0x2648>
test   %edi,%edi
lea    -0x1a1a4(%ebx),%eax
cmove  %eax,%edi
test   %ebp,%ebp
lea    -0x19e37(%ebx),%edx
lea    -0x19e3d(%ebx),%eax
cmove  %edx,%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
lea    -0x1a190(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
lea    -0x1a18a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
mov    0x54(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
mov    0x58(%esp),%eax
test   %eax,%eax
je     807b178 <dbus_threads_init_default+0x2588>
lea    -0x1a183(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
mov    0x58(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
test   %ebp,%ebp
je     807b1aa <dbus_threads_init_default+0x25ba>
lea    -0x1a17a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     807b230 <dbus_threads_init_default+0x2640>
mov    0x60(%esp),%eax
mov    %edi,(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   80835d0 <dbus_shutdown+0x48f0>
test   %eax,%eax
mov    %eax,%edi
js     807b262 <dbus_threads_init_default+0x2672>
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807aef0 <dbus_threads_init_default+0x2300>
mov    %esi,(%esp)
mov    %eax,%ebp
call   807f3d0 <dbus_shutdown+0x6f0>
test   %ebp,%ebp
mov    %ebp,%esi
jne    807b258 <dbus_threads_init_default+0x2668>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
jmp    807b258 <dbus_threads_init_default+0x2668>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    -0x21ca0(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
xor    %esi,%esi
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    807b258 <dbus_threads_init_default+0x2668>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3cd84,%ebx
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   808c930 <dbus_address_entry_get_method>
mov    $0x74,%edx
mov    %eax,%ebp
movzbl (%eax),%eax
sub    %eax,%edx
jne    807b2a9 <dbus_threads_init_default+0x26b9>
movzbl 0x1(%ebp),%eax
mov    $0x63,%edx
sub    %eax,%edx
je     807b2d0 <dbus_threads_init_default+0x26e0>
mov    $0xa,%ecx
mov    %ebp,%esi
lea    -0x1a16e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
sete   0x23(%esp)
je     807b2e8 <dbus_threads_init_default+0x26f8>
xor    %eax,%eax
test   %edx,%edx
je     807b2e8 <dbus_threads_init_default+0x26f8>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl 0x2(%ebp),%eax
mov    $0x70,%edx
sub    %eax,%edx
jne    807b2a9 <dbus_threads_init_default+0x26b9>
movzbl 0x3(%ebp),%edx
neg    %edx
jmp    807b2a9 <dbus_threads_init_default+0x26b9>
lea    0x0(%esi),%esi
lea    -0x1a19f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
lea    -0x1a164(%ebx),%edi
lea    -0x19e32(%ebx),%esi
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %edi,0x4(%esp)
mov    %eax,0x28(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %eax,0x24(%esp)
lea    -0x1a15f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %esi,0x4(%esp)
mov    %eax,0x2c(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   808c940 <dbus_address_entry_get_value>
test   %eax,%eax
setne  %cl
cmp    0x23(%esp),%cl
jne    807b3d0 <dbus_threads_init_default+0x27e0>
mov    0x24(%esp),%edx
test   %edx,%edx
je     807b3a0 <dbus_threads_init_default+0x27b0>
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    0x58(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %esi,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807b080 <dbus_threads_init_default+0x2490>
mov    0x54(%esp),%edx
cmp    $0x1,%eax
mov    %eax,(%edx)
sbb    %eax,%eax
add    $0x3c,%esp
and    $0x2,%eax
pop    %ebx
add    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
mov    0x58(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   808c7a0 <dbus_shutdown+0xdac0>
add    $0x3c,%esp
mov    $0x2,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
jmp    807b3ac <dbus_threads_init_default+0x27bc>
xchg   %ax,%ax
mov    0x4(%esp),%eax
movzbl 0x20(%eax),%eax
and    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x20(%eax),%eax
shr    %al
and    $0x1,%eax
ret
xchg   %ax,%ax
mov    0x4(%esp),%edx
movzbl 0x8(%esp),%ecx
movzbl 0x20(%edx),%eax
and    $0x1,%ecx
add    %ecx,%ecx
and    $0xfffffffd,%eax
or     %ecx,%eax
mov    %al,0x20(%edx)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3cbda,%ebx
sub    $0x18,%esp
movl   $0x24,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     807b47c <dbus_threads_init_default+0x288c>
mov    0x20(%esp),%edx
movzbl 0x28(%esp),%ecx
movl   $0x1,(%eax)
mov    %edx,0x4(%eax)
mov    0x24(%esp),%edx
and    $0x1,%ecx
mov    %edx,0x8(%eax)
movzbl 0x20(%eax),%edx
and    $0xfffffffe,%edx
or     %ecx,%edx
mov    %dl,0x20(%eax)
mov    0x2c(%esp),%edx
mov    %edx,0xc(%eax)
mov    0x30(%esp),%edx
mov    %edx,0x10(%eax)
mov    0x34(%esp),%edx
mov    %edx,0x14(%eax)
add    $0x18,%esp
pop    %ebx
ret
jmp    807b490 <dbus_threads_init_default+0x28a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movl   $0xffffffff,0x4(%eax)
movl   $0x0,0x8(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
mov    0x8(%esp),%edx
mov    0x8(%ecx),%eax
test   $0x1,%al
jne    807b4d5 <dbus_threads_init_default+0x28e5>
andl   $0xfffffffe,(%edx)
mov    0x8(%ecx),%eax
test   $0x2,%al
jne    807b4dc <dbus_threads_init_default+0x28ec>
andl   $0xfffffffd,(%edx)
repz ret
xchg   %ax,%ax
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3cb1a,%ebx
sub    $0x18,%esp
movl   $0x18,(%esp)
call   807eb80 <dbus_malloc0>
add    $0x18,%esp
pop    %ebx
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3caf0,%ebx
mov    0x30(%esp),%esi
test   %eax,%eax
je     807b568 <dbus_threads_init_default+0x2978>
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%edi
jne    807b544 <dbus_threads_init_default+0x2954>
jmp    807b568 <dbus_threads_init_default+0x2978>
xchg   %ax,%ax
call   *0x34(%esp)
test   %eax,%eax
je     807b5c8 <dbus_threads_init_default+0x29d8>
test   %ebp,%ebp
xchg   %ax,%ax
je     807b568 <dbus_threads_init_default+0x2978>
mov    %ebp,%edi
mov    0x40(%esp),%eax
mov    0x4(%edi),%ebp
cmp    (%esi),%ebp
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
jne    807b530 <dbus_threads_init_default+0x2940>
call   *0x34(%esp)
test   %eax,%eax
je     807b5c8 <dbus_threads_init_default+0x29d8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%eax
test   %eax,%eax
je     807b582 <dbus_threads_init_default+0x2992>
mov    0x10(%esi),%edx
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    0x14(%esi),%eax
test   %eax,%eax
je     807b591 <dbus_threads_init_default+0x29a1>
mov    0x10(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x34(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esi)
mov    0x44(%esp),%eax
mov    %eax,0x14(%esi)
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
cmp    %edi,%eax
je     807b608 <dbus_threads_init_default+0x2a18>
mov    0x40(%esp),%ebp
mov    %edi,0xc(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%edi
cmp    (%esi),%edi
mov    %ebp,0x4(%esp)
mov    0x8(%eax),%eax
mov    %eax,(%esp)
je     807b618 <dbus_threads_init_default+0x2a28>
call   *0x38(%esp)
cmp    %edi,0xc(%esp)
je     807b608 <dbus_threads_init_default+0x2a18>
mov    %edi,%eax
lea    0x0(%esi),%esi
jmp    807b5e0 <dbus_threads_init_default+0x29f0>
lea    0x0(%esi),%esi
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %edi,%edi
call   *0x38(%esp)
mov    %edi,%eax
jmp    807b5e0 <dbus_threads_init_default+0x29f0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3c9c6,%ebx
mov    0x30(%esp),%esi
movl   $0x0,0x14(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   807b500 <dbus_threads_init_default+0x2910>
lea    -0x3c600(%ebx),%eax
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x28(%esp),%edx
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
test   %edx,%edx
movzbl 0x20(%eax),%edx
setne  %cl
movzbl %cl,%edi
mov    %edx,%ebp
and    $0x1,%ebp
cmp    %edi,%ebp
je     807b6f2 <dbus_threads_init_default+0x2b02>
and    $0xfffffffe,%edx
or     %ecx,%edx
mov    %dl,0x20(%eax)
mov    0xc(%esi),%edx
test   %edx,%edx
je     807b6f2 <dbus_threads_init_default+0x2b02>
mov    0x10(%esi),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   *%edx
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3c8f4,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
mov    %edi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     807b746 <dbus_threads_init_default+0x2b56>
mov    %ebp,0x8(%esp)
mov    0x8(%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807b6b0 <dbus_threads_init_default+0x2ac0>
mov    0x4(%esi),%esi
cmp    (%edi),%esi
jne    807b728 <dbus_threads_init_default+0x2b38>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
mov    0x14(%esi),%eax
test   %eax,%eax
je     807b767 <dbus_threads_init_default+0x2b77>
mov    0x10(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x24(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x28(%esp),%eax
mov    %eax,0x10(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x14(%esi)
add    $0x18,%esp
pop    %esi
ret
jmp    807b790 <dbus_watch_get_unix_fd>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3c863,%ebx
test   %eax,%eax
je     807b7af <dbus_watch_get_unix_fd+0x1f>
mov    0x4(%eax),%eax
add    $0x28,%esp
pop    %ebx
ret
lea    -0x19e28(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19e10(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19d2d(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x22e,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    $0xffffffff,%eax
jmp    807b7aa <dbus_watch_get_unix_fd+0x1a>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3c803,%ebx
test   %eax,%eax
je     807b814 <dbus_watch_get_fd+0x24>
mov    %eax,(%esp)
call   807b790 <dbus_watch_get_unix_fd>
add    $0x28,%esp
pop    %ebx
ret
lea    -0x19e28(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19e10(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19d16(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x219,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    $0xffffffff,%eax
jmp    807b80f <dbus_watch_get_fd+0x1f>
jmp    807b860 <dbus_watch_get_socket>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3c793,%ebx
test   %eax,%eax
je     807b87f <dbus_watch_get_socket+0x1f>
mov    0x4(%eax),%eax
add    $0x28,%esp
pop    %ebx
ret
lea    -0x19e28(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19e10(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19d43(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x24b,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    $0xffffffff,%eax
jmp    807b87a <dbus_watch_get_socket+0x1a>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3c733,%ebx
test   %eax,%eax
je     807b8e0 <dbus_watch_get_flags+0x20>
mov    0x8(%eax),%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    -0x19e28(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19e10(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19d58(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x260,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    807b8da <dbus_watch_get_flags+0x1a>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3c6d3,%ebx
test   %eax,%eax
je     807b93f <dbus_watch_get_data+0x1f>
mov    0x18(%eax),%eax
add    $0x28,%esp
pop    %ebx
ret
lea    -0x19e28(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19e10(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19d6c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x270,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    807b93a <dbus_watch_get_data+0x1a>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3c672,%ebx
test   %esi,%esi
je     807b9c0 <dbus_watch_set_data+0x40>
mov    0x1c(%esi),%eax
test   %eax,%eax
je     807b9a7 <dbus_watch_set_data+0x27>
mov    0x18(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x34(%esp),%eax
mov    %eax,0x18(%esi)
mov    0x38(%esp),%eax
mov    %eax,0x1c(%esi)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x19e28(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19e10(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19d80(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x285,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    807b9b5 <dbus_watch_set_data+0x35>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3c5f2,%ebx
subl   $0x1,(%esi)
jne    807ba5c <dbus_watch_set_data+0xdc>
cmpl   $0xffffffff,0x4(%esi)
je     807ba2d <dbus_watch_set_data+0xad>
lea    -0x19e00(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807b980 <dbus_watch_set_data>
mov    0x14(%esi),%eax
test   %eax,%eax
je     807ba54 <dbus_watch_set_data+0xd4>
mov    0x10(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3c582,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    807baa8 <dbus_watch_set_data+0x128>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   807b490 <dbus_threads_init_default+0x28a0>
mov    0x4(%edi),%eax
test   %eax,%eax
je     807bac7 <dbus_watch_set_data+0x147>
mov    0x10(%edi),%edx
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   *%eax
test   %eax,%eax
je     807bad8 <dbus_watch_set_data+0x158>
add    $0x1c,%esp
mov    $0x1,%ebp
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   807d960 <dbus_watch_handle+0x1da0>
mov    %esi,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3c4f5,%ebx
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   807d870 <dbus_watch_handle+0x1cb0>
mov    0x8(%edi),%eax
test   %eax,%eax
je     807bb38 <dbus_watch_set_data+0x1b8>
mov    0x10(%edi),%edx
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   *%eax
mov    %esi,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3c4a3,%ebx
test   %eax,%eax
je     807bb78 <dbus_watch_get_enabled+0x28>
movzbl 0x20(%eax),%eax
and    $0x1,%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x19e28(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19e10(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19d97(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x29c,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    807bb6e <dbus_watch_get_enabled+0x1e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3c432,%ebx
test   %esi,%esi
je     807bc48 <dbus_watch_handle+0x88>
mov    0x4(%esi),%edx
test   %edx,%edx
js     807bc10 <dbus_watch_handle+0x50>
mov    0x8(%esi),%eax
test   %eax,%eax
je     807bc10 <dbus_watch_handle+0x50>
lea    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807b4c0 <dbus_threads_init_default+0x28d0>
mov    0x34(%esp),%edx
mov    $0x1,%eax
test   %edx,%edx
jne    807bc30 <dbus_watch_handle+0x70>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x19dd8(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%esi),%eax
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
call   *0xc(%esi)
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    -0x19e28(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x19e10(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19da9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x2bc,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    807bc03 <dbus_watch_handle+0x43>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
mov    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x3c330,%ebx
mov    0x30(%esp),%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x4(%esi),%edx
test   %edx,%edx
jne    807bd20 <dbus_watch_handle+0x160>
mov    %edi,0xc(%esi)
mov    0x38(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
js     807bd3d <dbus_watch_handle+0x17d>
mov    (%esi),%edx
mov    $0x1,%edi
addl   $0x1,0x4(%edx,%eax,8)
mov    0xc(%esi),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,0xc(%esi)
je     807bcee <dbus_watch_handle+0x12e>
lea    -0x19d04(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    0x38(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
jns    807bcf8 <dbus_watch_handle+0x138>
mov    0x4(%esi),%edi
cmp    %edi,0x8(%esi)
jge    807bdb0 <dbus_watch_handle+0x1f0>
test   %edi,%edi
jle    807bdec <dbus_watch_handle+0x22c>
mov    (%esi),%ecx
mov    (%ecx),%eax
test   %eax,%eax
js     807bdf5 <dbus_watch_handle+0x235>
lea    0x8(%ecx),%eax
xor    %edx,%edx
jmp    807bd72 <dbus_watch_handle+0x1b2>
mov    %eax,%ecx
lea    0x8(%eax),%eax
cmpl   $0x0,-0x8(%eax)
lea    0x0(,%edx,8),%ebp
js     807bd90 <dbus_watch_handle+0x1d0>
add    $0x1,%edx
cmp    %edi,%edx
jne    807bd60 <dbus_watch_handle+0x1a0>
mov    $0x1,%edi
mov    0x38(%esp),%eax
mov    %edx,(%eax)
jmp    807bd04 <dbus_watch_handle+0x144>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%edi
not    %edi
shr    $0x1f,%edi
mov    %edx,(%ecx)
mov    (%esi),%eax
movl   $0x1,0x4(%eax,%ebp,1)
addl   $0x1,0x8(%esi)
jmp    807bd7e <dbus_watch_handle+0x1be>
lea    0x0(%esi,%eiz,1),%esi
lea    0x8(,%edi,8),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     807be00 <dbus_watch_handle+0x240>
mov    0x4(%esi),%edx
mov    %eax,(%esi)
addl   $0x1,0x8(%esi)
mov    %edx,%edi
lea    0x1(%edx),%ecx
not    %edi
mov    %ecx,0x4(%esi)
shr    $0x1f,%edi
mov    %edx,(%eax,%edx,8)
movl   $0x1,0x4(%eax,%edx,8)
jmp    807bd7e <dbus_watch_handle+0x1be>
mov    $0x1,%edi
xor    %edx,%edx
jmp    807bd7e <dbus_watch_handle+0x1be>
mov    $0x1,%edi
xor    %ebp,%ebp
xor    %edx,%edx
jmp    807bd97 <dbus_watch_handle+0x1d7>
xor    %edi,%edi
jmp    807bd04 <dbus_watch_handle+0x144>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3c1e1,%ebx
mov    0x24(%esp),%edi
mov    0xc(%esi),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    (%edi),%edx
mov    (%esi),%eax
subl   $0x1,0x4(%eax,%edx,8)
mov    (%edi),%edx
mov    (%esi),%eax
lea    (%eax,%edx,8),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
jg     807be5f <dbus_watch_handle+0x29f>
movl   $0xffffffff,(%eax)
movl   $0xffffffff,(%edi)
subl   $0x1,0x8(%esi)
je     807be78 <dbus_watch_handle+0x2b8>
mov    0xc(%esi),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
mov    0xc(%esi),%edi
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,(%esi)
movl   $0x0,0x4(%esi)
movl   $0x0,0xc(%esi)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x0,0x4(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x3c11c,%ebx
cmp    %edi,0x4(%esi)
jle    807bf30 <dbus_watch_handle+0x370>
mov    (%esi),%eax
mov    (%eax,%edi,8),%ecx
lea    0x0(,%edi,8),%edx
mov    0x48(%esp),%eax
mov    %ecx,(%eax)
mov    (%esi),%eax
mov    0x4(%eax,%edx,1),%ecx
mov    0x44(%esp),%eax
mov    %ecx,(%eax)
mov    0x3c(%esp),%ecx
mov    (%esi),%eax
mov    %ecx,(%eax,%edi,8)
mov    0x40(%esp),%ecx
mov    (%esi),%eax
mov    %ecx,0x4(%eax,%edx,1)
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x1(%edi),%ebp
lea    0x0(,%ebp,8),%eax
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     807bf88 <dbus_watch_handle+0x3c8>
mov    0x4(%esi),%ecx
mov    %eax,(%esi)
mov    %ebp,0x4(%esi)
cmp    %ecx,%ebp
jle    807bef1 <dbus_watch_handle+0x331>
lea    0x0(,%ecx,8),%edx
nop
movl   $0x0,(%eax,%edx,1)
mov    (%esi),%eax
add    $0x1,%ecx
movl   $0x0,0x4(%eax,%edx,1)
add    $0x8,%edx
mov    (%esi),%eax
cmp    %ecx,0x4(%esi)
jg     807bf60 <dbus_watch_handle+0x3a0>
jmp    807bef1 <dbus_watch_handle+0x331>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    807bf25 <dbus_watch_handle+0x365>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0xc(%esp),%eax
cmp    %eax,0x4(%edx)
jle    807bfa8 <dbus_watch_handle+0x3e8>
mov    (%edx),%edx
mov    (%edx,%eax,8),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
xor    %esi,%esi
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x4(%edi),%eax
test   %eax,%eax
jle    807bffd <dbus_watch_handle+0x43d>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
lea    0x0(,%esi,8),%ebp
add    %ebp,%eax
mov    0x4(%eax),%edx
test   %edx,%edx
je     807bfe5 <dbus_watch_handle+0x425>
mov    (%eax),%eax
mov    %eax,(%esp)
call   *%edx
mov    (%edi),%eax
add    %ebp,%eax
movl   $0x0,(%eax)
mov    (%edi),%eax
add    $0x1,%esi
movl   $0x0,0x4(%eax,%ebp,1)
cmp    %esi,0x4(%edi)
jg     807bfc8 <dbus_watch_handle+0x408>
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3bfe6,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   807bfb0 <dbus_watch_handle+0x3f0>
mov    (%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,(%esi)
movl   $0x0,0x4(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    (%edx),%ecx
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3bf9d,%ebx
cmp    %esi,%ecx
jne    807c072 <dbus_watch_handle+0x4b2>
jmp    807c0b4 <dbus_watch_handle+0x4f4>
nop
mov    %edx,%ecx
mov    (%ecx),%edx
cmp    %esi,%edx
jne    807c070 <dbus_watch_handle+0x4b0>
mov    (%esi),%eax
mov    %eax,(%ecx)
mov    0x38(%edi),%eax
subl   $0x1,0x1c(%edi)
test   %eax,%eax
je     807c08f <dbus_watch_handle+0x4cf>
mov    0x4(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x3c(%edi),%eax
test   %eax,%eax
je     807c09e <dbus_watch_handle+0x4de>
mov    0x8(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x40(%edi),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807eed0 <dbus_shutdown+0x1f0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    (%esi),%eax
mov    %eax,(%edx)
jmp    807c07c <dbus_watch_handle+0x4bc>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3bf38,%ebx
sub    $0x10,%esp
movl   $0x44,(%esp)
mov    0x20(%esp),%edi
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     807c188 <dbus_watch_handle+0x5c8>
movl   $0x1,0x4(%esp)
movl   $0xc,(%esp)
call   807ed40 <dbus_shutdown+0x60>
test   %eax,%eax
je     807c18c <dbus_watch_handle+0x5cc>
mov    %eax,0x40(%esi)
test   %edi,%edi
lea    0x8(%esi),%eax
movl   $0x1,(%esi)
mov    %eax,0x4(%esi)
movl   $0x4,0x18(%esi)
movl   $0x0,0x1c(%esi)
movl   $0xc,0x20(%esi)
movl   $0x0,0x24(%esi)
movl   $0x1c,0x28(%esi)
movl   $0x3,0x2c(%esi)
mov    %edi,0x30(%esi)
je     807c178 <dbus_watch_handle+0x5b8>
cmp    $0x2,%edi
jbe    807c168 <dbus_watch_handle+0x5a8>
mov    0x24(%esp),%eax
mov    %eax,0x38(%esi)
mov    0x28(%esp),%eax
mov    %eax,0x3c(%esi)
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3b500(%ebx),%eax
mov    %eax,0x34(%esi)
jmp    807c14c <dbus_watch_handle+0x58c>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x3b5a0(%ebx),%eax
mov    %eax,0x34(%esi)
jmp    807c14c <dbus_watch_handle+0x58c>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    807c15c <dbus_watch_handle+0x59c>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    807c15c <dbus_watch_handle+0x59c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x3be40,%ebx
subl   $0x1,(%edi)
jne    807c239 <dbus_watch_handle+0x679>
mov    0x18(%edi),%eax
xor    %ebp,%ebp
test   %eax,%eax
jle    807c214 <dbus_watch_handle+0x654>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
mov    (%eax,%ebp,4),%esi
test   %esi,%esi
je     807c20c <dbus_watch_handle+0x64c>
lea    0x0(%esi),%esi
mov    0x38(%edi),%eax
test   %eax,%eax
je     807c1f7 <dbus_watch_handle+0x637>
mov    0x4(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    0x3c(%edi),%eax
test   %eax,%eax
je     807c206 <dbus_watch_handle+0x646>
mov    0x8(%esi),%edx
mov    %edx,(%esp)
call   *%eax
mov    (%esi),%esi
test   %esi,%esi
jne    807c1e8 <dbus_watch_handle+0x628>
add    $0x1,%ebp
cmp    %ebp,0x18(%edi)
jg     807c1d8 <dbus_watch_handle+0x618>
mov    0x40(%edi),%eax
mov    %eax,(%esp)
call   807edc0 <dbus_shutdown+0xe0>
mov    0x4(%edi),%eax
lea    0x8(%edi),%edx
cmp    %edx,%eax
je     807c231 <dbus_watch_handle+0x671>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    807c250 <dbus_watch_handle+0x690>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
movl   $0x0,0x4(%eax)
mov    %edx,(%eax)
movl   $0x0,0x8(%eax)
movl   $0x0,0xc(%eax)
movl   $0x0,0x10(%eax)
mov    0x1c(%edx),%edx
mov    %edx,0x14(%eax)
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    0x10(%esp),%edx
mov    0xc(%edx),%ecx
test   %ecx,%ecx
jne    807c2c9 <dbus_watch_handle+0x709>
mov    (%edx),%edi
mov    0x10(%edx),%ecx
cmp    0x18(%edi),%ecx
lea    0x1(%ecx),%eax
lea    0x0(,%ecx,4),%esi
jl     807c2b3 <dbus_watch_handle+0x6f3>
jmp    807c2e0 <dbus_watch_handle+0x720>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
add    $0x4,%esi
cmp    %ebp,0x18(%edi)
jle    807c2e0 <dbus_watch_handle+0x720>
mov    0x4(%edi),%ecx
mov    %eax,%ebp
add    %esi,%ecx
mov    %ecx,0x4(%edx)
mov    (%ecx),%ecx
mov    %eax,0x10(%edx)
test   %ecx,%ecx
mov    %ecx,0xc(%edx)
je     807c2a8 <dbus_watch_handle+0x6e8>
mov    %ecx,0x8(%edx)
mov    (%ecx),%eax
mov    %eax,0xc(%edx)
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0x0,0x8(%edx)
xor    %eax,%eax
movl   $0x0,(%edx)
movl   $0x0,0x4(%edx)
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
mov    0x8(%esi),%eax
mov    0x4(%esi),%edx
mov    %eax,(%esp)
mov    (%esi),%eax
call   807c050 <dbus_watch_handle+0x490>
movl   $0x0,0x8(%esi)
add    $0x18,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
sub    $0x34,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3bcc6,%ebx
mov    0x40(%esp),%eax
lea    0x18(%esp),%esi
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
jmp    807c360 <dbus_watch_handle+0x7a0>
xchg   %ax,%ax
mov    %esi,(%esp)
call   807c300 <dbus_watch_handle+0x740>
mov    %esi,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    807c358 <dbus_watch_handle+0x798>
add    $0x34,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    (%esi),%eax
mov    0x3c(%eax),%edx
mov    0x8(%esi),%eax
test   %edx,%edx
je     807c3b8 <dbus_watch_handle+0x7f8>
mov    0x8(%eax),%ecx
cmp    %edi,%ecx
je     807c3b8 <dbus_watch_handle+0x7f8>
mov    %ecx,(%esp)
call   *%edx
mov    0x8(%esi),%eax
mov    %edi,0x8(%eax)
add    $0x14,%esp
pop    %esi
pop    %edi
ret
jmp    807c3d0 <dbus_watch_handle+0x810>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
mov    0x4(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
sub    $0x34,%esp
lea    0x2c(%esp),%eax
mov    0x40(%esp),%edi
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    0x4c(%esp),%esi
movl   $0x0,0x10(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
call   *0x34(%edi)
test   %eax,%eax
je     807c468 <dbus_watch_handle+0x8a8>
mov    0x2c(%esp),%edx
mov    %edi,(%esi)
mov    %eax,0x8(%esi)
mov    %edx,0x4(%esi)
mov    (%eax),%eax
mov    %eax,0xc(%esi)
mov    %edx,%eax
sub    0x4(%edi),%eax
sar    $0x2,%eax
add    $0x1,%eax
mov    %eax,0x10(%esi)
mov    0x1c(%edi),%eax
mov    %eax,0x14(%esi)
add    $0x34,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
nop
add    $0x34,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
ret
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   *0x34(%eax)
test   %eax,%eax
je     807c4a8 <dbus_watch_handle+0x8e8>
mov    0x8(%eax),%eax
add    $0x2c,%esp
ret
xor    %eax,%eax
jmp    807c4a4 <dbus_watch_handle+0x8e4>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   *0x34(%eax)
test   %eax,%eax
je     807c4e8 <dbus_watch_handle+0x928>
mov    0x8(%eax),%eax
add    $0x2c,%esp
ret
xor    %eax,%eax
jmp    807c4e4 <dbus_watch_handle+0x924>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%edx
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   *0x34(%eax)
test   %eax,%eax
je     807c528 <dbus_watch_handle+0x968>
mov    0x8(%eax),%eax
add    $0x2c,%esp
ret
xor    %eax,%eax
jmp    807c524 <dbus_watch_handle+0x964>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
sub    $0x38,%esp
lea    0x2c(%esp),%eax
mov    0x40(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x34(%esi)
xor    %edx,%edx
test   %eax,%eax
je     807c577 <dbus_watch_handle+0x9b7>
mov    0x2c(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   807c050 <dbus_watch_handle+0x490>
mov    $0x1,%edx
add    $0x38,%esp
mov    %edx,%eax
pop    %esi
ret
xchg   %ax,%ax
push   %esi
sub    $0x38,%esp
lea    0x2c(%esp),%eax
mov    0x40(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x34(%esi)
xor    %edx,%edx
test   %eax,%eax
je     807c5c7 <dbus_watch_handle+0xa07>
mov    0x2c(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   807c050 <dbus_watch_handle+0x490>
mov    $0x1,%edx
add    $0x38,%esp
mov    %edx,%eax
pop    %esi
ret
xchg   %ax,%ax
push   %esi
sub    $0x38,%esp
lea    0x2c(%esp),%eax
mov    0x40(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x44(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   *0x34(%esi)
xor    %edx,%edx
test   %eax,%eax
je     807c617 <dbus_watch_handle+0xa57>
mov    0x2c(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   807c050 <dbus_watch_handle+0x490>
mov    $0x1,%edx
add    $0x38,%esp
mov    %edx,%eax
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x20,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   *0x34(%esi)
test   %eax,%eax
mov    %eax,%ebp
je     807c698 <dbus_watch_handle+0xad8>
mov    0x38(%esi),%edx
test   %edx,%edx
je     807c669 <dbus_watch_handle+0xaa9>
mov    0x4(%eax),%ecx
cmp    %ecx,%edi
je     807c669 <dbus_watch_handle+0xaa9>
mov    %ecx,(%esp)
call   *%edx
mov    0x3c(%esi),%edx
test   %edx,%edx
je     807c67e <dbus_watch_handle+0xabe>
mov    0x8(%ebp),%ecx
cmp    0x38(%esp),%ecx
je     807c67e <dbus_watch_handle+0xabe>
mov    %ecx,(%esp)
call   *%edx
mov    0x38(%esp),%eax
mov    %edi,0x4(%ebp)
mov    %eax,0x8(%ebp)
add    $0x20,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    807c6b0 <dbus_watch_handle+0xaf0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
sub    $0x20,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%edi
movl   $0x0,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   *0x34(%esi)
test   %eax,%eax
mov    %eax,%ebp
je     807c728 <dbus_watch_handle+0xb68>
mov    0x38(%esi),%edx
test   %edx,%edx
je     807c6f9 <dbus_watch_handle+0xb39>
mov    0x4(%eax),%ecx
cmp    %ecx,%edi
je     807c6f9 <dbus_watch_handle+0xb39>
mov    %ecx,(%esp)
call   *%edx
mov    0x3c(%esi),%edx
test   %edx,%edx
je     807c70e <dbus_watch_handle+0xb4e>
mov    0x8(%ebp),%ecx
cmp    0x38(%esp),%ecx
je     807c70e <dbus_watch_handle+0xb4e>
mov    %ecx,(%esp)
call   *%edx
mov    0x38(%esp),%eax
mov    %edi,0x4(%ebp)
mov    %eax,0x8(%ebp)
add    $0x20,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    807c740 <dbus_watch_handle+0xb80>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3b8b3,%ebx
mov    0x40(%eax),%eax
mov    %eax,(%esp)
call   807ee00 <dbus_shutdown+0x120>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3b883,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x40(%eax),%eax
mov    %eax,(%esp)
call   807eed0 <dbus_shutdown+0x1f0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
mov    %edx,0x14(%esp)
mov    0x4c(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3b84a,%ebx
mov    0x40(%esp),%eax
mov    0x44(%esp),%edi
test   %edx,%edx
je     807c7d2 <dbus_watch_handle+0xc12>
mov    0x4c(%esp),%ecx
movl   $0x0,(%ecx)
mov    0x4(%esi),%edx
lea    0x0(,%eax,4),%ecx
mov    %ecx,0x1c(%esp)
mov    (%edx,%eax,4),%ebp
test   %ebp,%ebp
je     807c817 <dbus_watch_handle+0xc57>
mov    %esi,0x18(%esp)
mov    %edi,%esi
mov    0x14(%esp),%edi
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     807c848 <dbus_watch_handle+0xc88>
mov    0x4(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   *%esi
test   %eax,%eax
je     807c850 <dbus_watch_handle+0xc90>
mov    0x0(%ebp),%ebp
test   %ebp,%ebp
jne    807c7f8 <dbus_watch_handle+0xc38>
mov    0x18(%esp),%esi
mov    0x48(%esp),%eax
xor    %ebp,%ebp
test   %eax,%eax
jne    807c86b <dbus_watch_handle+0xcab>
mov    0x50(%esp),%eax
test   %eax,%eax
je     807c839 <dbus_watch_handle+0xc79>
mov    0x50(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807c770 <dbus_watch_handle+0xbb0>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,0x4(%ebp)
jne    807c80c <dbus_watch_handle+0xc4c>
lea    0x0(%esi),%esi
mov    0x4c(%esp),%eax
mov    0x18(%esp),%esi
test   %eax,%eax
je     807c821 <dbus_watch_handle+0xc61>
mov    0x1c(%esp),%eax
mov    0x4c(%esp),%edi
add    0x4(%esi),%eax
mov    %eax,(%edi)
jmp    807c821 <dbus_watch_handle+0xc61>
mov    0x50(%esp),%eax
test   %eax,%eax
je     807ca22 <dbus_watch_handle+0xe62>
mov    0x50(%esp),%eax
mov    0x14(%esp),%edi
mov    %edi,0x4(%eax)
mov    0x1c(%esp),%eax
add    0x4(%esi),%eax
mov    0x50(%esp),%edi
mov    (%eax),%edx
mov    %edx,(%edi)
mov    %edi,(%eax)
mov    0x4c(%esp),%edi
test   %edi,%edi
je     807c8a1 <dbus_watch_handle+0xce1>
mov    0x4c(%esp),%edi
mov    %eax,(%edi)
mov    0x1c(%esi),%eax
add    $0x1,%eax
cmp    0x20(%esi),%eax
mov    %eax,0x1c(%esi)
jge    807c9f1 <dbus_watch_handle+0xe31>
cmp    0x24(%esi),%eax
jge    807c9c1 <dbus_watch_handle+0xe01>
mov    0x18(%esi),%eax
mov    0x4(%esi),%edi
test   %eax,%eax
mov    %edi,0x1c(%esp)
lea    0x3(%eax),%edi
cmovns %eax,%edi
xor    %ebp,%ebp
sar    $0x2,%edi
cmp    $0x3,%edi
mov    %eax,0x18(%esp)
jle    807c9c1 <dbus_watch_handle+0xe01>
lea    0x0(,%edi,4),%eax
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     807ca50 <dbus_watch_handle+0xe90>
test   %ebp,%ebp
mov    %edi,0x18(%esi)
jne    807c9cf <dbus_watch_handle+0xe0f>
mov    0x24(%esi),%eax
test   %eax,%eax
lea    0x3(%eax),%edx
mov    %eax,0x20(%esi)
cmovs  %edx,%eax
addl   $0x2,0x28(%esi)
sarl   $0x2,0x2c(%esi)
sar    $0x2,%eax
mov    %eax,0x24(%esi)
mov    0x18(%esp),%edx
mov    0x1c(%esp),%eax
test   %edx,%edx
mov    %eax,0x14(%esp)
jg     807c95a <dbus_watch_handle+0xd9a>
jmp    807c9ac <dbus_watch_handle+0xdec>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
cmp    $0x2,%eax
ja     807c951 <dbus_watch_handle+0xd91>
imul   $0x41c64e6d,0x4(%edi),%edx
mov    0x28(%esi),%ecx
sar    %cl,%edx
and    0x2c(%esi),%edx
shl    $0x2,%edx
add    0x4(%esi),%edx
mov    (%edx),%eax
mov    %eax,(%edi)
mov    %edi,(%edx)
mov    0x14(%esp),%eax
mov    (%eax),%edi
test   %edi,%edi
je     807c9a0 <dbus_watch_handle+0xde0>
mov    (%edi),%eax
mov    0x14(%esp),%ecx
mov    %eax,(%ecx)
mov    0x30(%esi),%eax
test   %eax,%eax
jne    807c938 <dbus_watch_handle+0xd78>
mov    0x4(%edi),%eax
movsbl (%eax),%edx
test   %edx,%edx
je     807c94b <dbus_watch_handle+0xd8b>
movsbl 0x1(%eax),%ecx
lea    0x1(%eax),%ebp
test   %cl,%cl
je     807c94b <dbus_watch_handle+0xd8b>
mov    %edx,%eax
add    $0x1,%ebp
shl    $0x5,%eax
sub    %edx,%eax
lea    (%eax,%ecx,1),%edx
movsbl 0x0(%ebp),%ecx
test   %cl,%cl
jne    807c988 <dbus_watch_handle+0xdc8>
jmp    807c94b <dbus_watch_handle+0xd8b>
nop
addl   $0x4,0x14(%esp)
subl   $0x1,0x18(%esp)
jne    807c95a <dbus_watch_handle+0xd9a>
add    $0x8,%esi
cmp    %esi,0x1c(%esp)
je     807c9c1 <dbus_watch_handle+0xe01>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x50(%esp),%ebp
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
mov    %ebp,%eax
pop    %ebp
ret
mov    0x20(%esi),%eax
subl   $0x2,0x28(%esi)
mov    %eax,0x24(%esi)
shl    $0x2,%eax
mov    %eax,0x20(%esi)
mov    0x2c(%esi),%eax
lea    0x3(,%eax,4),%eax
mov    %eax,0x2c(%esi)
jmp    807c921 <dbus_watch_handle+0xd61>
mov    0x18(%esi),%eax
mov    0x4(%esi),%edi
cmp    $0x1ffffffe,%eax
mov    %eax,0x18(%esp)
mov    %edi,0x1c(%esp)
jg     807c9c1 <dbus_watch_handle+0xe01>
mov    0x28(%esi),%ecx
test   %ecx,%ecx
js     807c9c1 <dbus_watch_handle+0xe01>
mov    0x18(%esp),%eax
mov    $0x1,%ebp
lea    0x0(,%eax,4),%edi
jmp    807c8e0 <dbus_watch_handle+0xd20>
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   807ee00 <dbus_shutdown+0x120>
test   %eax,%eax
mov    %eax,0x50(%esp)
jne    807c877 <dbus_watch_handle+0xcb7>
mov    0x4c(%esp),%ebp
test   %ebp,%ebp
je     807c9c1 <dbus_watch_handle+0xe01>
mov    0x4c(%esp),%eax
movl   $0x0,(%eax)
jmp    807c9c1 <dbus_watch_handle+0xe01>
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esi)
jmp    807c9c1 <dbus_watch_handle+0xe01>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x18,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3b58c,%ebx
mov    0x2c(%esp),%ebp
mov    %eax,(%esp)
mov    0x38(%esp),%eax
movsbl (%edx),%esi
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
test   %esi,%esi
mov    %eax,0x8(%esp)
je     807cabc <dbus_watch_handle+0xefc>
movsbl 0x1(%edx),%eax
lea    0x1(%edx),%edi
test   %al,%al
je     807cabc <dbus_watch_handle+0xefc>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%ecx
add    $0x1,%edi
shl    $0x5,%ecx
sub    %esi,%ecx
lea    (%ecx,%eax,1),%esi
movsbl (%edi),%eax
test   %al,%al
jne    807caa8 <dbus_watch_handle+0xee8>
mov    0x8(%esp),%eax
mov    %eax,0x3c(%esp)
mov    0x4(%esp),%eax
mov    %eax,0x38(%esp)
mov    (%esp),%eax
mov    %eax,0x34(%esp)
mov    -0x1c(%ebx),%eax
mov    %eax,0x30(%esp)
mov    %ebp,%eax
and    0x2c(%ebp),%esi
mov    %esi,0x2c(%esp)
add    $0x18,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    807c7a0 <dbus_watch_handle+0xbe0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
movl   $0x0,0xc(%esp)
mov    0x28(%eax),%ecx
imul   $0x41c64e6d,%edx,%esi
sar    %cl,%esi
and    0x2c(%eax),%esi
mov    %esi,0x8(%esp)
pop    %esi
jmp    807c7a0 <dbus_watch_handle+0xbe0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
sub    $0x20,%esp
mov    0x30(%esp),%esi
mov    0x38(%esp),%edi
mov    0x34(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    %esi,(%esp)
call   *0x34(%esi)
mov    0x38(%esi),%edx
test   %edx,%edx
mov    %eax,%ebp
je     807cb75 <dbus_watch_handle+0xfb5>
mov    0x4(%eax),%ecx
cmp    %edi,%ecx
je     807cb75 <dbus_watch_handle+0xfb5>
mov    %ecx,(%esp)
call   *%edx
mov    0x3c(%esi),%edx
test   %edx,%edx
je     807cb8a <dbus_watch_handle+0xfca>
mov    0x8(%ebp),%ecx
cmp    0x3c(%esp),%ecx
je     807cb8a <dbus_watch_handle+0xfca>
mov    %ecx,(%esp)
call   *%edx
mov    0x3c(%esp),%eax
mov    %edi,0x4(%ebp)
mov    %eax,0x8(%ebp)
add    $0x20,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3b456,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   807c740 <dbus_watch_handle+0xb80>
xor    %edx,%edx
test   %eax,%eax
je     807cbe3 <dbus_watch_handle+0x1023>
mov    0x28(%esp),%edx
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0xc(%esp)
mov    0x24(%esp),%edx
mov    %edx,0x8(%esp)
call   807cb30 <dbus_watch_handle+0xf70>
mov    $0x1,%edx
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x1c(%eax),%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3b3fa,%ebx
sub    $0x18,%esp
lea    -0x19b88(%ebx),%eax
mov    %eax,(%esp)
call   8087250 <dbus_shutdown+0x8570>
test   %eax,%eax
je     807cc58 <dbus_watch_handle+0x1098>
movzbl (%eax),%edx
test   %dl,%dl
je     807cc58 <dbus_watch_handle+0x1098>
cmp    $0x30,%dl
je     807cc90 <dbus_watch_handle+0x10d0>
cmp    $0x31,%dl
je     807cc68 <dbus_watch_handle+0x10a8>
mov    %eax,0xc(%esp)
lea    -0x19b54(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x18(%ebx),%eax
movl   $0x1,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
movl   $0x1,0x8bc(%ebx)
00
add    $0x18,%esp
pop    %ebx
ret
nop
movl   $0x1,0x8b8(%ebx)
00
movl   $0x1,0x8b4(%ebx)
00
movl   $0x1,0x8bc(%ebx)
00
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x8b8(%ebx)
00
movl   $0x0,0x8b4(%ebx)
00
movl   $0x1,0x8bc(%ebx)
00
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3b339,%ebx
sub    $0x14,%esp
mov    0x8bc(%ebx),%edx
test   %edx,%edx
jne    807ccdf <dbus_watch_handle+0x111f>
call   807cc00 <dbus_watch_handle+0x1040>
lea    0x24(%esp),%eax
mov    -0x18(%ebx),%esi
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804d0b0 <__vfprintf_chk@plt>
mov    0x8b8(%ebx),%eax
test   %eax,%eax
jne    807cd17 <dbus_watch_handle+0x1157>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    (%esi),%eax
mov    %eax,(%esp)
call   804d100 <fflush@plt>
call   8087280 <dbus_shutdown+0x85a0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3b2c9,%ebx
sub    $0x14,%esp
mov    0x8bc(%ebx),%edx
test   %edx,%edx
jne    807cd4f <dbus_watch_handle+0x118f>
call   807cc00 <dbus_watch_handle+0x1040>
call   8081b90 <dbus_shutdown+0x2eb0>
mov    -0x18(%ebx),%esi
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x19b74(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
lea    0x24(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   804d0b0 <__vfprintf_chk@plt>
mov    0x8b4(%ebx),%eax
test   %eax,%eax
jne    807cdac <dbus_watch_handle+0x11ec>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    (%esi),%eax
mov    %eax,(%esp)
call   804d100 <fflush@plt>
call   8087280 <dbus_shutdown+0x85a0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3b230,%ebx
test   %esi,%esi
je     807ce10 <dbus_watch_handle+0x1250>
mov    %esi,(%esp)
call   804d600 <strlen@plt>
lea    0x1(%eax),%ebp
mov    %ebp,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%edi
je     807ce10 <dbus_watch_handle+0x1250>
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d170 <memcpy@plt>
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    807ce05 <dbus_watch_handle+0x1245>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3b1d5,%ebx
mov    0x24(%esp),%edi
mov    %edi,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%esi
je     807ce57 <dbus_watch_handle+0x1297>
mov    0x20(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804d170 <memcpy@plt>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x3b190,%ebx
test   %ebp,%ebp
je     807cede <dbus_watch_handle+0x131e>
mov    0x0(%ebp),%edx
test   %edx,%edx
je     807cef4 <dbus_watch_handle+0x1334>
xor    %edi,%edi
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
mov    0x0(%ebp,%edi,4),%eax
test   %eax,%eax
jne    807ce88 <dbus_watch_handle+0x12c8>
lea    0x4(,%edi,4),%eax
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0xc(%esp)
je     807cede <dbus_watch_handle+0x131e>
test   %edi,%edi
je     807cee8 <dbus_watch_handle+0x1328>
xor    %esi,%esi
jmp    807cebf <dbus_watch_handle+0x12ff>
lea    0x0(%esi),%esi
add    $0x1,%esi
cmp    %esi,%edi
je     807cee8 <dbus_watch_handle+0x1328>
mov    0x0(%ebp,%esi,4),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    0xc(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx,%esi,4)
jne    807ceb8 <dbus_watch_handle+0x12f8>
mov    %edx,(%esp)
call   807ec20 <dbus_free_string_array>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x4,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
jne    807cee0 <dbus_watch_handle+0x1320>
jmp    807cede <dbus_watch_handle+0x131e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3b0e1,%ebx
mov    0x24(%esp),%edi
mov    (%esi),%eax
test   %eax,%eax
je     807cf60 <dbus_watch_handle+0x13a0>
add    $0x4,%esi
jmp    807cf42 <dbus_watch_handle+0x1382>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%esi
mov    -0x4(%esi),%eax
test   %eax,%eax
je     807cf60 <dbus_watch_handle+0x13a0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d090 <strcmp@plt>
test   %eax,%eax
jne    807cf38 <dbus_watch_handle+0x1378>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3b089,%ebx
sub    $0x24,%esp
lea    0x1c(%esp),%eax
mov    0x30(%esp),%esi
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   8081cf0 <dbus_shutdown+0x3010>
mov    0x1c(%esp),%eax
bswap  %eax
mov    %eax,0xc(%esi)
mov    %esi,(%esp)
movl   $0xc,0x4(%esp)
call   80877b0 <dbus_shutdown+0x8ad0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3b035,%ebx
mov    0x30(%esp),%eax
lea    0x10(%esp),%esi
mov    0x34(%esp),%edi
mov    %esi,(%esp)
movl   $0x10,0x8(%esp)
mov    %eax,0x4(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x4(%edi),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
call   8080600 <dbus_shutdown+0x1920>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3afd7,%ebx
sub    $0x6c,%esp
lea    0x40(%esp),%esi
mov    %esi,(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x3c(%esp)
movb   $0x1,0x38(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     807d128 <dbus_watch_handle+0x1568>
lea    0x50(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     807d120 <dbus_watch_handle+0x1560>
mov    0x80(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8080bd0 <dbus_shutdown+0x1ef0>
test   %eax,%eax
je     807d0e8 <dbus_watch_handle+0x1528>
mov    %esi,(%esp)
call   80802b0 <dbus_shutdown+0x15d0>
mov    0x44(%esp),%eax
cmp    $0x20,%eax
je     807d228 <dbus_watch_handle+0x1668>
mov    %eax,0x14(%esp)
mov    0x80(%esp),%eax
movl   $0x20,0x10(%esp)
mov    (%eax),%eax
mov    %eax,0xc(%esp)
lea    -0x19b14(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19ab8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x88(%esp),%eax
test   %eax,%eax
jne    807d155 <dbus_watch_handle+0x1595>
mov    0x8c(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   806b050 <dbus_move_error>
xor    %eax,%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x34c(%ebx),%eax
lea    0x30(%esp),%edi
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    0x88(%esp),%eax
test   %eax,%eax
je     807d103 <dbus_watch_handle+0x1543>
lea    -0x19ab8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
jne    807d103 <dbus_watch_handle+0x1543>
mov    %edi,(%esp)
lea    0x50(%esp),%ebp
call   806ade0 <dbus_error_free>
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     807d1f8 <dbus_watch_handle+0x1638>
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   807cf70 <dbus_watch_handle+0x13b0>
mov    0x84(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807cfc0 <dbus_watch_handle+0x1400>
test   %eax,%eax
je     807d1c1 <dbus_watch_handle+0x1601>
movl   $0xa,0x4(%esp)
mov    %ebp,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
jne    807d298 <dbus_watch_handle+0x16d8>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x8c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    807d118 <dbus_watch_handle+0x1558>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80806a0 <dbus_shutdown+0x19c0>
test   %eax,%eax
je     807d2d8 <dbus_watch_handle+0x1718>
mov    0x2c(%esp),%edx
test   %edx,%edx
je     807d2fb <dbus_watch_handle+0x173b>
mov    0x54(%esp),%eax
cmp    $0x10,%eax
je     807d329 <dbus_watch_handle+0x1769>
mov    %eax,0x10(%esp)
mov    0x80(%esp),%eax
movl   $0x10,0x14(%esp)
mov    (%eax),%eax
mov    %eax,0xc(%esp)
lea    -0x19a5c(%ebx),%eax
jmp    807d0d2 <dbus_watch_handle+0x1512>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8c(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x80(%esp),%eax
mov    %eax,0x4(%esp)
call   8080e60 <dbus_shutdown+0x2180>
test   %eax,%eax
je     807d1e6 <dbus_watch_handle+0x1626>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%eax
jmp    807d118 <dbus_watch_handle+0x1558>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
jmp    807d0e8 <dbus_watch_handle+0x1528>
mov    0x80(%esp),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
lea    -0x19a88(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x19ab8(%ebx),%eax
mov    %eax,0x4(%esp)
call   806b100 <dbus_set_error>
jmp    807d0e8 <dbus_watch_handle+0x1528>
mov    0x84(%esp),%eax
movl   $0x10,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   807f670 <dbus_shutdown+0x990>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%eax
jmp    807d118 <dbus_watch_handle+0x1558>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3ac97,%ebx
sub    $0x2c,%esp
lea    0x8a0(%ebx),%esi
lea    0x8a4(%ebx),%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x350(%ebx),%eax
mov    (%eax),%eax
test   %eax,%eax
je     807d3d5 <dbus_watch_handle+0x1815>
lea    0x10(%esp),%ebp
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x10(%esp)
movl   $0x0,0x14(%esp)
movl   $0x0,0x1c(%esp)
movb   $0x1,0x18(%esp)
call   8084390 <dbus_shutdown+0x56b0>
test   %eax,%eax
je     807d400 <dbus_watch_handle+0x1840>
mov    0x40(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807cfc0 <dbus_watch_handle+0x1400>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x19a18(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    %ebp,(%esp)
call   806ade0 <dbus_error_free>
mov    %edi,(%esp)
call   807cf70 <dbus_watch_handle+0x13b0>
jmp    807d3d5 <dbus_watch_handle+0x1815>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3abc6,%ebx
sub    $0x10,%esp
lea    0x8c0(%ebx),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x8c4(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807eed0 <dbus_shutdown+0x1f0>
test   %eax,%eax
je     807d481 <dbus_watch_handle+0x18c1>
mov    0x8c4(%ebx),%eax
mov    %eax,(%esp)
call   807edc0 <dbus_shutdown+0xe0>
movl   $0x0,0x8c4(%ebx)
00
mov    (%esi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3ab55,%ebx
sub    $0x1c,%esp
lea    0x8c0(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x8c4(%ebx),%eax
test   %eax,%eax
je     807d4f8 <dbus_watch_handle+0x1938>
mov    %eax,(%esp)
call   807ee00 <dbus_shutdown+0x120>
test   %eax,%eax
mov    %eax,%esi
je     807d4df <dbus_watch_handle+0x191f>
mov    %ebp,0x8(%esi)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %esi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
movl   $0xc,(%esp)
call   807ed40 <dbus_shutdown+0x60>
test   %eax,%eax
mov    %eax,0x8c4(%ebx)
je     807d53c <dbus_watch_handle+0x197c>
mov    %eax,(%esp)
call   807ee00 <dbus_shutdown+0x120>
test   %eax,%eax
mov    %eax,%esi
jne    807d4dc <dbus_watch_handle+0x191c>
mov    0x8c4(%ebx),%eax
mov    %eax,(%esp)
call   807edc0 <dbus_shutdown+0xe0>
movl   $0x0,0x8c4(%ebx)
00
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
xor    %eax,%eax
jmp    807d4eb <dbus_watch_handle+0x192b>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
jmp    807d4a0 <dbus_watch_handle+0x18e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
jmp    807d430 <dbus_watch_handle+0x1870>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
sub    $0x8,%esp
mov    0x14(%esp),%eax
mov    0x10(%esp),%esi
call   807d4a0 <dbus_watch_handle+0x18e0>
test   %eax,%eax
mov    %eax,%edx
je     807d5b8 <dbus_watch_handle+0x19f8>
mov    (%esi),%ecx
test   %ecx,%ecx
je     807d5c0 <dbus_watch_handle+0x1a00>
mov    %ecx,0x4(%eax)
mov    (%ecx),%eax
mov    %eax,(%edx)
mov    %edx,(%ecx)
mov    (%edx),%eax
mov    %edx,0x4(%eax)
mov    $0x1,%eax
cmp    (%esi),%ecx
je     807d5b0 <dbus_watch_handle+0x19f0>
add    $0x8,%esp
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esi)
add    $0x8,%esp
pop    %esi
ret
nop
add    $0x8,%esp
xor    %eax,%eax
pop    %esi
ret
nop
mov    %eax,(%edx)
mov    %eax,0x4(%edx)
mov    %eax,(%esi)
mov    $0x1,%eax
jmp    807d5a4 <dbus_watch_handle+0x19e4>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3aa26,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807d570 <dbus_watch_handle+0x19b0>
xor    %edx,%edx
test   %eax,%eax
je     807d603 <dbus_watch_handle+0x1a43>
mov    (%esi),%eax
mov    $0x1,%dl
mov    0x4(%eax),%eax
mov    %eax,(%esi)
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    0x8(%esp),%ecx
mov    0xc(%esp),%eax
mov    (%ecx),%edx
test   %edx,%edx
je     807d640 <dbus_watch_handle+0x1a80>
mov    %edx,0x4(%eax)
mov    (%edx),%esi
mov    %esi,(%eax)
mov    %eax,(%edx)
mov    (%eax),%esi
mov    %eax,0x4(%esi)
cmp    (%ecx),%edx
je     807d638 <dbus_watch_handle+0x1a78>
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%ecx)
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%eax)
mov    %eax,0x4(%eax)
mov    %eax,(%ecx)
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3a9a6,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
mov    (%esi),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
jmp    807d690 <dbus_watch_handle+0x1ad0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3a962,%ebx
mov    0x28(%esp),%eax
test   %esi,%esi
je     807d6e0 <dbus_watch_handle+0x1b20>
call   807d4a0 <dbus_watch_handle+0x18e0>
test   %eax,%eax
je     807d6f8 <dbus_watch_handle+0x1b38>
mov    0x20(%esp),%ecx
mov    (%ecx),%edx
test   %edx,%edx
je     807d700 <dbus_watch_handle+0x1b40>
mov    %esi,(%eax)
mov    0x4(%esi),%edx
mov    %edx,0x4(%eax)
mov    %eax,0x4(%esi)
mov    0x4(%eax),%edx
mov    %eax,(%edx)
mov    $0x1,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d570 <dbus_watch_handle+0x19b0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    807d6d4 <dbus_watch_handle+0x1b14>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%eax)
mov    %eax,0x4(%eax)
mov    %eax,(%ecx)
mov    $0x1,%eax
jmp    807d6d4 <dbus_watch_handle+0x1b14>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3a8e2,%ebx
mov    0x20(%esp),%ecx
mov    0x28(%esp),%eax
test   %edx,%edx
je     807d768 <dbus_watch_handle+0x1ba8>
mov    (%ecx),%esi
test   %esi,%esi
je     807d758 <dbus_watch_handle+0x1b98>
mov    %edx,0x4(%eax)
mov    (%edx),%esi
mov    %esi,(%eax)
mov    %eax,(%edx)
mov    (%eax),%esi
mov    %eax,0x4(%esi)
cmp    (%ecx),%edx
je     807d750 <dbus_watch_handle+0x1b90>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    %eax,(%ecx)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    %eax,(%eax)
mov    %eax,0x4(%eax)
mov    %eax,(%ecx)
jmp    807d748 <dbus_watch_handle+0x1b88>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   807d650 <dbus_watch_handle+0x1a90>
jmp    807d748 <dbus_watch_handle+0x1b88>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3a873,%ebx
mov    0x20(%esp),%ecx
mov    0x28(%esp),%eax
test   %edx,%edx
je     807d7d0 <dbus_watch_handle+0x1c10>
cmpl   $0x0,(%ecx)
je     807d7c0 <dbus_watch_handle+0x1c00>
mov    %edx,(%eax)
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%edx)
mov    0x4(%eax),%edx
mov    %eax,(%edx)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%eax)
mov    %eax,0x4(%eax)
mov    %eax,(%ecx)
jmp    807d7b4 <dbus_watch_handle+0x1bf4>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   807d610 <dbus_watch_handle+0x1a50>
jmp    807d7b4 <dbus_watch_handle+0x1bf4>
xchg   %ax,%ax
push   %esi
mov    0xc(%esp),%eax
mov    0x8(%esp),%ecx
mov    0x4(%eax),%edx
cmp    %eax,%edx
je     807d828 <dbus_watch_handle+0x1c68>
mov    (%eax),%esi
mov    %edx,0x4(%esi)
mov    0x4(%eax),%edx
mov    (%eax),%esi
mov    %esi,(%edx)
cmp    %eax,(%ecx)
je     807d810 <dbus_watch_handle+0x1c50>
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
pop    %esi
ret
nop
mov    0x4(%eax),%edx
mov    %edx,(%ecx)
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%ecx)
movl   $0x0,0x4(%eax)
movl   $0x0,(%eax)
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3a7b6,%ebx
mov    0x24(%esp),%esi
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807d7e0 <dbus_watch_handle+0x1c20>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    807d430 <dbus_watch_handle+0x1870>
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3a782,%ebx
mov    0x24(%esp),%ecx
mov    (%esi),%edx
mov    %edx,%eax
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
je     807d8a0 <dbus_watch_handle+0x1ce0>
cmp    %ecx,0x8(%eax)
je     807d8a8 <dbus_watch_handle+0x1ce8>
mov    0x4(%eax),%eax
cmp    %eax,%edx
jne    807d890 <dbus_watch_handle+0x1cd0>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
push   %edi
push   %esi
sub    $0x4,%esp
mov    0x10(%esp),%edi
mov    (%edi),%eax
test   %eax,%eax
mov    %eax,%edx
jne    807d8e6 <dbus_watch_handle+0x1d26>
jmp    807d8f2 <dbus_watch_handle+0x1d32>
nop
lea    0x0(%esi,%eiz,1),%esi
call   807d430 <dbus_watch_handle+0x1870>
test   %esi,%esi
nop
je     807d8f2 <dbus_watch_handle+0x1d32>
mov    (%edi),%edx
mov    %esi,%eax
mov    0x4(%eax),%esi
cmp    %esi,%edx
jne    807d8d8 <dbus_watch_handle+0x1d18>
call   807d430 <dbus_watch_handle+0x1870>
movl   $0x0,(%edi)
add    $0x4,%esp
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    (%eax),%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     807d91c <dbus_watch_handle+0x1d5c>
mov    (%eax),%eax
repz ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3a6d5,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    %esi,(%esp)
call   807d910 <dbus_watch_handle+0x1d50>
jmp    807d94a <dbus_watch_handle+0x1d8a>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%eax
test   %eax,%eax
je     807d957 <dbus_watch_handle+0x1d97>
cmp    %edi,0x8(%eax)
je     807d959 <dbus_watch_handle+0x1d99>
cmp    (%esi),%eax
jne    807d948 <dbus_watch_handle+0x1d88>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3a696,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807d920 <dbus_watch_handle+0x1d60>
xor    %edx,%edx
test   %eax,%eax
je     807d99b <dbus_watch_handle+0x1ddb>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    $0x1,%edx
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     807d9c0 <dbus_watch_handle+0x1e00>
mov    (%eax),%eax
mov    0x8(%eax),%eax
ret
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     807d9e0 <dbus_watch_handle+0x1e20>
mov    0x8(%eax),%eax
ret
xchg   %ax,%ax
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3a605,%ebx
mov    0x20(%esp),%edi
mov    %edi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%esi
je     807da1f <dbus_watch_handle+0x1e5f>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807d7e0 <dbus_watch_handle+0x1c20>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3a5c5,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     807da70 <dbus_watch_handle+0x1eb0>
mov    0x8(%eax),%edi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    %edi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    807da62 <dbus_watch_handle+0x1ea2>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3a575,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   807d910 <dbus_watch_handle+0x1d50>
test   %eax,%eax
je     807dac0 <dbus_watch_handle+0x1f00>
mov    0x8(%eax),%edi
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    %edi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    807dab2 <dbus_watch_handle+0x1ef2>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
mov    0x34(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x3a51c,%ebx
movl   $0x0,(%edi)
mov    0x0(%ebp),%esi
nop
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     807db17 <dbus_watch_handle+0x1f57>
mov    0x8(%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     807db28 <dbus_watch_handle+0x1f68>
mov    0x4(%esi),%esi
cmp    0x0(%ebp),%esi
jne    807daf8 <dbus_watch_handle+0x1f38>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    (%eax),%ecx
test   %ecx,%ecx
je     807db60 <dbus_watch_handle+0x1fa0>
mov    %ecx,%edx
xor    %eax,%eax
jmp    807db54 <dbus_watch_handle+0x1f94>
test   %edx,%edx
je     807db63 <dbus_watch_handle+0x1fa3>
mov    0x4(%edx),%edx
add    $0x1,%eax
cmp    %edx,%ecx
jne    807db50 <dbus_watch_handle+0x1f90>
repz ret
xor    %eax,%eax
ret
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
mov    0x28(%esp),%edi
mov    (%eax),%edx
test   %edx,%edx
mov    %edx,%ecx
jne    807dba4 <dbus_watch_handle+0x1fe4>
jmp    807dbb7 <dbus_watch_handle+0x1ff7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%edx),%edx
mov    %edx,(%esp)
call   *%esi
test   %ebp,%ebp
je     807dbb7 <dbus_watch_handle+0x1ff7>
mov    0x20(%esp),%eax
mov    %ebp,%edx
mov    (%eax),%ecx
mov    0x4(%edx),%ebp
mov    %edi,0x4(%esp)
cmp    %ebp,%ecx
jne    807db90 <dbus_watch_handle+0x1fd0>
mov    0x8(%edx),%eax
mov    %eax,(%esp)
call   *%esi
add    $0x10,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     807dbd8 <dbus_watch_handle+0x2018>
cmp    0x4(%eax),%eax
sete   %al
movzbl %al,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x4(%edx),%ecx
mov    0x60(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3a40b,%ebx
mov    0x68(%esp),%edi
cmp    %esi,%ecx
jl     807dd10 <dbus_watch_handle+0x2150>
cmp    $0x2,%eax
mov    %eax,0x18(%esp)
je     807dd3f <dbus_watch_handle+0x217f>
lea    0x1(%edi),%eax
mov    %eax,0x14(%esp)
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x18(%esp),%eax
cmp    $0x1,%eax
je     807dc90 <dbus_watch_handle+0x20d0>
cmpl   $0x6c,0x6c(%esp)
je     807dc49 <dbus_watch_handle+0x2089>
bswap  %edi
lea    0x2c(%esp),%eax
mov    %edi,0x2c(%esp)
mov    0x4(%ebp),%edi
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   807f890 <dbus_shutdown+0xbb0>
mov    %eax,%ecx
mov    0x4(%ebp),%eax
sub    %edi,%eax
test   %ecx,%ecx
lea    (%esi,%eax,1),%edi
jne    807dcb0 <dbus_watch_handle+0x20f0>
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   807fac0 <dbus_shutdown+0xde0>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
movzbl %al,%edi
mov    %edi,0x8(%esp)
lea    0x1(%esi),%edi
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   807f530 <dbus_shutdown+0x850>
test   %eax,%eax
je     807dd68 <dbus_watch_handle+0x21a8>
mov    0x14(%esp),%eax
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     807dd00 <dbus_watch_handle+0x2140>
mov    0x70(%esp),%eax
add    0x14(%esp),%edi
test   %eax,%eax
je     807dd70 <dbus_watch_handle+0x21b0>
mov    0x70(%esp),%eax
mov    %edi,(%eax)
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
sub    %esi,%eax
jmp    807dc72 <dbus_watch_handle+0x20b2>
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0x8(%esp)
lea    -0x198f4(%ebx),%ecx
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0x14(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x14(%esp),%eax
cmp    $0x2,%eax
mov    %eax,0x18(%esp)
jne    807dc14 <dbus_watch_handle+0x2054>
mov    0x64(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    %edi,0x14(%esp)
jmp    807dc40 <dbus_watch_handle+0x2080>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    807dc72 <dbus_watch_handle+0x20b2>
nop
mov    $0x1,%eax
jmp    807dc84 <dbus_watch_handle+0x20c4>
lea    0x0(%esi),%esi
cmpl   $0x6c,0x8(%esp)
je     807dd98 <dbus_watch_handle+0x21d8>
mov    0x4(%esp),%eax
mov    0xc(%esp),%edx
bswap  %eax
mov    %eax,(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
mov    0x4(%esp),%ecx
mov    %ecx,(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3a243,%ebx
movl   $0x4,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
cmpl   $0x6c,0x2c(%esp)
je     807ddf0 <dbus_watch_handle+0x2230>
mov    0x28(%esp),%edx
bswap  %edx
mov    %edx,(%eax)
add    $0x18,%esp
pop    %ebx
ret
nop
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x3a1f0,%ebx
mov    0x5c(%esp),%eax
lea    -0x62(%ecx),%edx
cmp    $0x17,%edx
ja     807e120 <dbus_watch_handle+0x2560>
mov    -0x198c0(%ebx,%edx,4),%edi
lea    (%edi,%ebx,1),%edx
jmp    *%edx
lea    0x0(%esi),%esi
movzbl (%eax),%edx
mov    0x50(%esp),%eax
mov    0x64(%esp),%ecx
mov    0x54(%esp),%esi
mov    (%eax),%eax
test   %ecx,%ecx
mov    %dl,(%eax,%esi,1)
je     807de5b <dbus_watch_handle+0x229b>
mov    0x64(%esp),%edi
mov    %esi,%eax
add    $0x1,%eax
mov    %eax,(%edi)
mov    0x68(%esp),%edx
test   %edx,%edx
je     807de70 <dbus_watch_handle+0x22b0>
mov    0x54(%esp),%eax
lea    0x1(%eax),%ebp
mov    0x68(%esp),%eax
mov    %ebp,(%eax)
mov    $0x1,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x54(%esp),%esi
lea    0x3(%esi),%ebp
mov    (%eax),%esi
mov    0x50(%esp),%eax
and    $0xfffffffc,%ebp
movl   $0x4,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
cmpl   $0x6c,0x60(%esp)
je     807dead <dbus_watch_handle+0x22ed>
bswap  %esi
mov    %esi,(%eax)
mov    0x64(%esp),%eax
test   %eax,%eax
je     807dec0 <dbus_watch_handle+0x2300>
mov    0x64(%esp),%ecx
lea    0x4(%ebp),%eax
mov    %eax,(%ecx)
mov    0x68(%esp),%eax
test   %eax,%eax
je     807de70 <dbus_watch_handle+0x22b0>
mov    0x68(%esp),%eax
add    $0x4,%ebp
mov    %ebp,(%eax)
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x54(%esp),%edi
mov    0x4(%eax),%esi
lea    0x7(%edi),%ebp
mov    (%eax),%edi
mov    0x50(%esp),%eax
and    $0xfffffff8,%ebp
movl   $0x8,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
cmpl   $0x6c,0x60(%esp)
je     807e128 <dbus_watch_handle+0x2568>
bswap  %edi
bswap  %esi
mov    %edi,0x4(%eax)
mov    %esi,(%eax)
mov    0x64(%esp),%eax
test   %eax,%eax
je     807df2c <dbus_watch_handle+0x236c>
mov    0x64(%esp),%edi
lea    0x8(%ebp),%eax
mov    %eax,(%edi)
mov    0x68(%esp),%eax
test   %eax,%eax
je     807de70 <dbus_watch_handle+0x22b0>
mov    0x68(%esp),%eax
add    $0x8,%ebp
mov    %ebp,(%eax)
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
lea    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x50(%esp),%eax
mov    0x24(%esp),%esi
mov    (%eax),%edx
mov    0x54(%esp),%eax
movzbl (%edx,%eax,1),%ebp
lea    0x1(%eax),%edi
mov    0x50(%esp),%eax
mov    %edi,0x10(%esp)
mov    %esi,0x8(%esp)
mov    %ebp,0x14(%esp)
mov    %eax,0xc(%esp)
mov    0x1c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807fc80 <dbus_shutdown+0xfa0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     807de75 <dbus_watch_handle+0x22b5>
mov    0x50(%esp),%eax
mov    %esi,%ecx
mov    0x54(%esp),%edx
mov    (%eax),%eax
mov    %cl,(%eax,%edx,1)
mov    0x64(%esp),%edx
test   %edx,%edx
je     807dfd0 <dbus_watch_handle+0x2410>
mov    0x64(%esp),%ecx
lea    0x1(%ebp,%edi,1),%eax
mov    %eax,(%ecx)
mov    0x68(%esp),%eax
test   %eax,%eax
je     807de70 <dbus_watch_handle+0x22b0>
mov    0x68(%esp),%ecx
lea    0x1(%esi,%edi,1),%eax
mov    %eax,(%ecx)
mov    $0x1,%eax
jmp    807de75 <dbus_watch_handle+0x22b5>
mov    0x54(%esp),%esi
lea    0x1(%esi),%ebp
movzwl (%eax),%esi
mov    0x50(%esp),%eax
and    $0xfffffffe,%ebp
movl   $0x2,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
cmpl   $0x6c,0x60(%esp)
je     807e020 <dbus_watch_handle+0x2460>
ror    $0x8,%si
mov    %si,(%eax)
mov    0x64(%esp),%eax
test   %eax,%eax
je     807e034 <dbus_watch_handle+0x2474>
mov    0x64(%esp),%esi
lea    0x2(%ebp),%eax
mov    %eax,(%esi)
mov    0x68(%esp),%eax
test   %eax,%eax
je     807de70 <dbus_watch_handle+0x22b0>
mov    0x68(%esp),%eax
add    $0x2,%ebp
mov    %ebp,(%eax)
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    (%eax),%eax
mov    0x54(%esp),%esi
mov    %eax,0x4(%esp)
lea    0x20(%esp),%eax
mov    %eax,(%esp)
lea    0x3(%esi),%ebp
mov    %eax,0x1c(%esp)
and    $0xfffffffc,%ebp
call   807f390 <dbus_shutdown+0x6b0>
mov    0x50(%esp),%esi
cmpl   $0x6c,0x60(%esp)
mov    0x1c(%esp),%eax
mov    (%esi),%edx
mov    (%edx,%ebp,1),%edi
je     807e08e <dbus_watch_handle+0x24ce>
bswap  %edi
lea    0x4(%ebp),%ecx
mov    0x24(%esp),%esi
mov    %ecx,0x1c(%esp)
mov    %ecx,0x10(%esp)
mov    0x50(%esp),%ecx
mov    %edi,0x14(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   807fc80 <dbus_shutdown+0xfa0>
mov    %eax,%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     807de75 <dbus_watch_handle+0x22b5>
mov    0x60(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   807ddb0 <dbus_watch_handle+0x21f0>
mov    0x64(%esp),%ebp
test   %ebp,%ebp
je     807e0fb <dbus_watch_handle+0x253b>
mov    0x1c(%esp),%eax
lea    0x1(%edi,%eax,1),%eax
mov    0x64(%esp),%edi
mov    %eax,(%edi)
mov    0x68(%esp),%ecx
test   %ecx,%ecx
je     807de70 <dbus_watch_handle+0x22b0>
mov    0x1c(%esp),%eax
mov    0x68(%esp),%edi
lea    0x1(%esi,%eax,1),%eax
mov    %eax,(%edi)
mov    $0x1,%eax
jmp    807de75 <dbus_watch_handle+0x22b5>
nop
xor    %eax,%eax
jmp    807de75 <dbus_watch_handle+0x22b5>
nop
mov    %edi,(%eax)
mov    %esi,0x4(%eax)
jmp    807df1b <dbus_watch_handle+0x235b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x10(%esp),%edx
add    $0x3,%eax
and    $0xfffffffc,%eax
test   %edx,%edx
je     807e157 <dbus_watch_handle+0x2597>
lea    0x4(%eax),%ecx
mov    %ecx,(%edx)
mov    0x4(%esp),%ecx
cmpl   $0x6c,0xc(%esp)
mov    (%ecx),%edx
mov    (%edx,%eax,1),%eax
je     807e170 <dbus_watch_handle+0x25b0>
bswap  %eax
ret
lea    0x0(%esi),%esi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
mov    0x68(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x39e64,%ebx
mov    0x60(%esp),%esi
mov    0x64(%esp),%edi
mov    0x6c(%esp),%ecx
sub    $0x62,%eax
mov    0x74(%esp),%ebp
cmp    $0x17,%eax
ja     807e3a0 <dbus_watch_handle+0x27e0>
mov    -0x19860(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   807f530 <dbus_shutdown+0x850>
mov    %eax,%ecx
xor    %eax,%eax
test   %ecx,%ecx
je     807e200 <dbus_watch_handle+0x2640>
test   %ebp,%ebp
je     807e3a7 <dbus_watch_handle+0x27e7>
add    $0x1,%edi
mov    $0x1,%al
mov    %edi,0x0(%ebp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x3c(%esp),%edx
xor    %gs:0x14,%edx
jne    807e3b5 <dbus_watch_handle+0x27f5>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%edx
xor    %eax,%eax
test   %edx,%edx
setne  %al
cmpl   $0x6c,0x70(%esp)
je     807e232 <dbus_watch_handle+0x2672>
bswap  %eax
mov    %eax,0x2c(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x1c(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f890 <dbus_shutdown+0xbb0>
test   %ebp,%ebp
je     807e200 <dbus_watch_handle+0x2640>
sub    0x1c(%esp),%edi
add    0x4(%esi),%edi
mov    %edi,0x0(%ebp)
jmp    807e200 <dbus_watch_handle+0x2640>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
mov    0x4(%ecx),%edx
cmpl   $0x6c,0x70(%esp)
mov    %eax,0x34(%esp)
mov    %edx,0x38(%esp)
je     807e290 <dbus_watch_handle+0x26d0>
mov    0x34(%esp),%eax
mov    0x38(%esp),%ecx
bswap  %eax
mov    %eax,0x38(%esp)
bswap  %ecx
mov    %ecx,0x34(%esp)
mov    0x4(%esi),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   807f8e0 <dbus_shutdown+0xc00>
test   %ebp,%ebp
je     807e200 <dbus_watch_handle+0x2640>
add    0x4(%esi),%edi
sub    0x1c(%esp),%edi
mov    %edi,0x0(%ebp)
jmp    807e200 <dbus_watch_handle+0x2640>
lea    0x0(%esi),%esi
mov    (%ecx),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   804d600 <strlen@plt>
mov    0x1c(%esp),%edx
mov    %ebp,0x10(%esp)
movl   $0x6c,0xc(%esp)
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
mov    %esi,%edx
mov    %eax,0x8(%esp)
mov    $0x1,%eax
call   807dbe0 <dbus_watch_handle+0x2020>
jmp    807e200 <dbus_watch_handle+0x2640>
lea    0x0(%esi),%esi
cmpl   $0x6c,0x70(%esp)
mov    (%ecx),%eax
je     807e313 <dbus_watch_handle+0x2753>
bswap  %eax
mov    %eax,0x30(%esp)
mov    0x4(%esi),%eax
mov    %eax,0x1c(%esp)
lea    0x30(%esp),%eax
jmp    807e241 <dbus_watch_handle+0x2681>
nop
cmpl   $0x6c,0x70(%esp)
movzwl (%ecx),%eax
je     807e336 <dbus_watch_handle+0x2776>
ror    $0x8,%ax
mov    %ax,0x2a(%esp)
mov    0x4(%esi),%eax
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
lea    0x2a(%esp),%eax
mov    %eax,0x8(%esp)
call   807f840 <dbus_shutdown+0xb60>
test   %ebp,%ebp
jne    807e255 <dbus_watch_handle+0x2695>
jmp    807e200 <dbus_watch_handle+0x2640>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%edx
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   804d600 <strlen@plt>
mov    0x1c(%esp),%edx
mov    0x70(%esp),%ecx
mov    %ebp,0x10(%esp)
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
mov    %esi,%edx
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
xor    %eax,%eax
call   807dbe0 <dbus_watch_handle+0x2020>
jmp    807e200 <dbus_watch_handle+0x2640>
nop
xor    %eax,%eax
jmp    807e200 <dbus_watch_handle+0x2640>
mov    $0x1,%eax
lea    0x0(%esi,%eiz,1),%esi
jmp    807e200 <dbus_watch_handle+0x2640>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi),%esi
push   %esi
mov    0x10(%esp),%edx
mov    0xc(%esp),%ecx
mov    0x8(%esp),%eax
imul   %edx,%ecx
add    %eax,%ecx
cmp    $0x8,%edx
je     807e3f8 <dbus_watch_handle+0x2838>
cmp    $0x4,%edx
je     807e418 <dbus_watch_handle+0x2858>
cmp    %ecx,%eax
je     807e3f2 <dbus_watch_handle+0x2832>
movzwl (%eax),%edx
add    $0x2,%eax
ror    $0x8,%dx
mov    %dx,-0x2(%eax)
cmp    %eax,%ecx
jne    807e3e0 <dbus_watch_handle+0x2820>
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    %ecx,%eax
je     807e3f2 <dbus_watch_handle+0x2832>
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
add    $0x8,%eax
mov    -0x4(%eax),%esi
bswap  %edx
mov    %edx,-0x4(%eax)
bswap  %esi
mov    %esi,-0x8(%eax)
cmp    %eax,%ecx
jne    807e400 <dbus_watch_handle+0x2840>
pop    %esi
ret
cmp    %ecx,%eax
je     807e3f2 <dbus_watch_handle+0x2832>
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
add    $0x4,%eax
bswap  %edx
mov    %edx,-0x4(%eax)
cmp    %eax,%ecx
je     807e3f2 <dbus_watch_handle+0x2832>
mov    (%eax),%edx
add    $0x4,%eax
bswap  %edx
mov    %edx,-0x4(%eax)
cmp    %eax,%ecx
jne    807e420 <dbus_watch_handle+0x2860>
jmp    807e3f2 <dbus_watch_handle+0x2832>
xchg   %ax,%ax
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4c,%esp
mov    0x4(%eax),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x39bad,%ebx
mov    0x6c(%esp),%eax
mov    %esi,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x8(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0x4(%esp)
call   807f930 <dbus_shutdown+0xc50>
test   %eax,%eax
je     807e4c6 <dbus_watch_handle+0x2906>
mov    0x64(%esp),%eax
imul   0x6c(%esp),%eax
mov    %eax,0x1c(%esp)
mov    %eax,0x8(%esp)
mov    0x60(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
jne    807e4e8 <dbus_watch_handle+0x2928>
mov    0x4(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   807fac0 <dbus_shutdown+0xde0>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmpl   $0x6c,0x68(%esp)
mov    0x2c(%esp),%eax
je     807e50d <dbus_watch_handle+0x294d>
mov    0x6c(%esp),%ecx
add    (%esi),%eax
mov    %ecx,0x8(%esp)
mov    0x64(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   807e3c0 <dbus_watch_handle+0x2800>
mov    0x70(%esp),%eax
test   %eax,%eax
je     807e530 <dbus_watch_handle+0x2970>
mov    0x70(%esp),%eax
mov    0x1c(%esp),%ebp
add    0x2c(%esp),%ebp
mov    %ebp,(%eax)
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x1,%eax
jmp    807e4dd <dbus_watch_handle+0x291d>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x4c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x39ab1,%ebx
mov    0x50(%esp),%esi
mov    (%eax),%edx
mov    0x48(%esp),%eax
sub    $0x62,%eax
cmp    $0x17,%eax
ja     807e648 <dbus_watch_handle+0x2a88>
mov    -0x19800(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
xchg   %ax,%ax
lea    0x20(%esp),%edi
mov    %edx,0x4(%esp)
mov    %esi,0x8(%esp)
mov    %edi,(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x44(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
mov    0x40(%esp),%eax
mov    %eax,0xc(%esp)
call   807fc50 <dbus_shutdown+0xf70>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     807e60c <dbus_watch_handle+0x2a4c>
mov    0x58(%esp),%eax
add    0x44(%esp),%esi
test   %eax,%eax
je     807e658 <dbus_watch_handle+0x2a98>
mov    0x58(%esp),%eax
mov    %esi,(%eax)
add    $0x30,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
movl   $0x2,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %edx,(%esp)
mov    0x44(%esp),%edx
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
call   807e440 <dbus_watch_handle+0x2880>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x58(%esp),%eax
movl   $0x4,0xc(%esp)
mov    %eax,0x10(%esp)
jmp    807e5f0 <dbus_watch_handle+0x2a30>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
movl   $0x8,0xc(%esp)
mov    %eax,0x10(%esp)
jmp    807e5f0 <dbus_watch_handle+0x2a30>
lea    0x0(%esi),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    807e60c <dbus_watch_handle+0x2a4c>
nop
mov    0x4(%esp),%eax
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x39997,%ecx
lea    -0x61(%eax),%edx
xor    %eax,%eax
cmp    $0x18,%edx
ja     807e680 <dbus_watch_handle+0x2ac0>
mov    -0x194e0(%ecx,%edx,4),%eax
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x3c(%esp),%esi
lea    0x1c(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3995d,%ebx
mov    (%esi),%eax
mov    %edx,0xc(%esp)
mov    0x38(%esp),%edx
add    $0x3,%eax
and    $0xfffffffc,%eax
mov    %eax,0x1c(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   807e140 <dbus_watch_handle+0x2580>
mov    %eax,%edi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x1c(%esp),%ecx
mov    %eax,%edx
neg    %edx
lea    -0x1(%eax,%ecx,1),%eax
and    %eax,%edx
add    %edi,%edx
mov    %edx,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x398f7,%ecx
cmp    $0x7d,%eax
ja     807e7d8 <dbus_watch_handle+0x2c18>
mov    -0x197a0(%ecx,%eax,4),%eax
add    %ecx,%eax
jmp    *%eax
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1947c(%ecx),%eax
ret
nop
lea    -0x1be19(%ecx),%eax
ret
nop
lea    -0x19430(%ecx),%eax
ret
nop
lea    -0x1943d(%ecx),%eax
ret
nop
lea    -0x1af71(%ecx),%eax
ret
nop
lea    -0x19414(%ecx),%eax
ret
nop
lea    -0x19425(%ecx),%eax
ret
nop
lea    -0x19474(%ecx),%eax
ret
nop
lea    -0x19460(%ecx),%eax
ret
nop
lea    -0x1c4ea(%ecx),%eax
ret
nop
lea    -0x19468(%ecx),%eax
ret
nop
lea    -0x19461(%ecx),%eax
ret
nop
lea    -0x179b0(%ecx),%eax
ret
nop
lea    -0x1942c(%ecx),%eax
ret
nop
lea    -0x1946f(%ecx),%eax
ret
nop
lea    -0x19453(%ecx),%eax
ret
nop
lea    -0x1946e(%ecx),%eax
ret
nop
lea    -0x19467(%ecx),%eax
ret
nop
lea    -0x19405(%ecx),%eax
ret
nop
lea    -0x19447(%ecx),%eax
ret
nop
lea    -0x19410(%ecx),%eax
ret
nop
lea    -0x1945a(%ecx),%eax
ret
nop
lea    -0x1c1b9(%ecx),%eax
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%edi
mov    0x30(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x3980c,%ebx
mov    0x44(%esp),%esi
lea    -0x62(%edi),%eax
cmp    $0x17,%eax
mov    (%ecx),%ebp
ja     807e958 <dbus_watch_handle+0x2d98>
mov    -0x195a8(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
nop
mov    0x34(%esp),%eax
mov    0x3c(%esp),%edi
movzbl 0x0(%ebp,%eax,1),%edx
add    $0x1,%eax
mov    %eax,0x34(%esp)
mov    %dl,(%edi)
xchg   %ax,%ax
test   %esi,%esi
je     807e83a <dbus_watch_handle+0x2c7a>
mov    0x34(%esp),%eax
mov    %eax,(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x34(%esp),%eax
mov    0x3c(%esp),%ecx
add    $0x3,%eax
and    $0xfffffffc,%eax
mov    %eax,0x34(%esp)
mov    0x0(%ebp,%eax,1),%edx
cmpl   $0x6c,0x40(%esp)
mov    %edx,(%ecx)
je     807e86d <dbus_watch_handle+0x2cad>
mov    (%ecx),%edx
bswap  %edx
mov    %edx,(%ecx)
add    $0x4,%eax
mov    %eax,0x34(%esp)
jmp    807e830 <dbus_watch_handle+0x2c70>
xchg   %ax,%ax
mov    0x34(%esp),%eax
lea    0x7(%eax),%ecx
and    $0xfffffff8,%ecx
cmpl   $0x6c,0x40(%esp)
mov    %ecx,0x34(%esp)
je     807e980 <dbus_watch_handle+0x2dc0>
mov    0x0(%ebp,%ecx,1),%edi
mov    0x4(%ebp,%ecx,1),%ebp
bswap  %edi
mov    %edi,%edx
mov    0x3c(%esp),%edi
bswap  %ebp
mov    %ebp,(%edi)
mov    %edx,0x4(%edi)
add    $0x8,%ecx
mov    %ecx,0x34(%esp)
jmp    807e830 <dbus_watch_handle+0x2c70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    0x3c(%esp),%ecx
movzbl 0x0(%ebp,%eax,1),%edx
add    $0x1,%eax
add    %eax,%ebp
mov    %ebp,(%ecx)
lea    0x1(%edx,%eax,1),%eax
mov    %eax,0x34(%esp)
jmp    807e830 <dbus_watch_handle+0x2c70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    0x3c(%esp),%edi
add    $0x1,%eax
and    $0xfffffffe,%eax
mov    %eax,0x34(%esp)
movzwl 0x0(%ebp,%eax,1),%edx
cmpl   $0x6c,0x40(%esp)
mov    %dx,(%edi)
je     807e90b <dbus_watch_handle+0x2d4b>
movzwl (%edi),%edx
ror    $0x8,%dx
mov    %dx,(%edi)
add    $0x2,%eax
mov    %eax,0x34(%esp)
jmp    807e830 <dbus_watch_handle+0x2c70>
nop
lea    0x34(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
mov    %ecx,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   807e140 <dbus_watch_handle+0x2580>
mov    0x34(%esp),%edx
mov    0x3c(%esp),%edi
add    %edx,%ebp
mov    %ebp,(%edi)
lea    0x1(%eax,%edx,1),%eax
mov    %eax,0x34(%esp)
jmp    807e830 <dbus_watch_handle+0x2c70>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
lea    -0x193fd(%ebx),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    807e830 <dbus_watch_handle+0x2c70>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp,%ecx,1),%eax
mov    0x4(%ebp,%ecx,1),%edx
mov    0x3c(%esp),%edi
mov    %eax,(%edi)
mov    %edx,0x4(%edi)
jmp    807e8a8 <dbus_watch_handle+0x2ce8>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x39652,%ebx
mov    0x2c(%esp),%esi
lea    -0x62(%edx),%eax
cmp    $0x17,%eax
ja     807ea70 <dbus_watch_handle+0x2eb0>
mov    -0x19548(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
nop
addl   $0x1,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
add    $0x3,%eax
and    $0xfffffffc,%eax
add    $0x4,%eax
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%eax
add    $0x7,%eax
and    $0xfffffff8,%eax
add    $0x8,%eax
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%ecx
mov    (%esi),%eax
mov    (%ecx),%edx
movzbl (%edx,%eax,1),%edx
lea    0x2(%eax,%edx,1),%eax
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
mov    (%esi),%eax
add    $0x1,%eax
and    $0xfffffffe,%eax
add    $0x2,%eax
mov    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807e140 <dbus_watch_handle+0x2580>
add    $0x1,%eax
add    %eax,(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   807e700 <dbus_watch_handle+0x2b40>
mov    %eax,0x4(%esp)
lea    -0x193e0(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3954c,%ebx
mov    0x38(%esp),%edx
mov    0x4(%esi),%ecx
cmp    %eax,%ecx
jl     807eae3 <dbus_watch_handle+0x2f23>
lea    (%eax,%edx,1),%ebp
mov    %ecx,%edi
sub    %eax,%edi
cmp    %ebp,%ecx
cmovl  %edi,%edx
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
add    (%esi),%eax
mov    %eax,(%esp)
call   807ea90 <dbus_watch_handle+0x2ed0>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    (%eax),%edx
mov    0x8(%esp),%eax
movzbl (%edx,%eax,1),%eax
cmp    $0x28,%eax
je     807eb10 <dbus_watch_handle+0x2f50>
cmp    $0x7b,%eax
mov    $0x65,%edx
cmove  %edx,%eax
ret
nop
mov    $0x72,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%eax
mov    0x4(%esp),%edx
movsbl (%edx,%eax,1),%eax
cmp    $0x28,%eax
je     807eb40 <dbus_watch_handle+0x2f80>
cmp    $0x7b,%eax
mov    $0x65,%edx
cmove  %edx,%eax
ret
lea    0x0(%esi),%esi
mov    $0x72,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
xor    %eax,%eax
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x394a1,%ebx
test   %edx,%edx
je     807eb71 <dbus_malloc+0x21>
mov    %edx,(%esp)
call   804d4e0 <malloc@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %eax,%eax
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x39471,%ebx
test   %edx,%edx
je     807eba9 <dbus_malloc0+0x29>
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   804db40 <calloc@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x39443,%ebx
test   %eax,%eax
je     807ebcf <dbus_free+0x1f>
mov    %eax,(%esp)
call   804d150 <free@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x39413,%ebx
mov    0x20(%esp),%edx
test   %eax,%eax
je     807ec10 <dbus_realloc+0x30>
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804d4d0 <realloc@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x393d1,%ebx
test   %edi,%edi
je     807ec62 <dbus_free_string_array+0x42>
mov    (%edi),%eax
lea    0x4(%edi),%esi
test   %eax,%eax
je     807ec5a <dbus_free_string_array+0x3a>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
add    $0x4,%esi
call   807ebb0 <dbus_free>
mov    -0x4(%esi),%eax
test   %eax,%eax
jne    807ec48 <dbus_free_string_array+0x28>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x39388,%ebx
sub    $0x10,%esp
movl   $0xc,(%esp)
call   807eb50 <dbus_malloc>
mov    %eax,%esi
xor    %eax,%eax
test   %esi,%esi
je     807ecd0 <dbus_free_string_array+0xb0>
mov    0x20(%esp),%eax
lea    0x8c8(%ebx),%edi
mov    %eax,0x4(%esi)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esi)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x8cc(%ebx),%eax
mov    %esi,0x8cc(%ebx)
mov    %eax,(%esi)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x39319,%ebx
sub    $0x14,%esp
mov    0x8cc(%ebx),%esi
test   %esi,%esi
je     807ed23 <dbus_shutdown+0x43>
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,0x8cc(%ebx)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   *0x4(%esi)
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
mov    0x8cc(%ebx),%esi
test   %esi,%esi
jne    807ed00 <dbus_shutdown+0x20>
lea    0x350(%ebx),%eax
addl   $0x1,(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x392b9,%ebx
sub    $0x14,%esp
movl   $0x18,(%esp)
mov    0x20(%esp),%esi
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     807edb0 <dbus_shutdown+0xd0>
cmp    $0x7,%esi
jle    807eda0 <dbus_shutdown+0xc0>
lea    0x3(%esi),%edx
and    $0xfffffffc,%edx
lea    0x0(,%edx,8),%ecx
mov    %edx,(%eax)
mov    0x24(%esp),%edx
movl   $0x0,0x14(%eax)
mov    %ecx,0x4(%eax)
test   %edx,%edx
setne  %dl
mov    %edx,%esi
movzbl 0x8(%eax),%edx
and    $0xfffffffe,%edx
or     %esi,%edx
mov    %dl,0x8(%eax)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    $0x40,%ecx
mov    $0x8,%edx
jmp    807ed76 <dbus_shutdown+0x96>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    807ed99 <dbus_shutdown+0xb9>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x39231,%ebx
mov    0x10(%edi),%eax
test   %eax,%eax
jne    807ede2 <dbus_shutdown+0x102>
jmp    807edf0 <dbus_shutdown+0x110>
xchg   %ax,%ax
mov    %esi,%eax
mov    (%eax),%esi
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
test   %esi,%esi
jne    807ede0 <dbus_shutdown+0x100>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x391f1,%ebx
mov    0xc(%esi),%edi
test   %edi,%edi
je     807ee50 <dbus_shutdown+0x170>
mov    (%edi),%eax
testb  $0x1,0x8(%esi)
mov    %eax,0xc(%esi)
je     807ee3d <dbus_shutdown+0x15d>
mov    (%esi),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   804d6f0 <memset@plt>
addl   $0x1,0x14(%esi)
mov    %edi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0x10(%esi),%eax
test   %eax,%eax
je     807ee78 <dbus_shutdown+0x198>
mov    0x4(%eax),%edx
mov    0x4(%esi),%ecx
cmp    %ecx,%edx
je     807ee7b <dbus_shutdown+0x19b>
mov    (%esi),%ecx
add    %edx,%ecx
mov    %ecx,0x4(%eax)
lea    0x8(%eax,%edx,1),%eax
addl   $0x1,0x14(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    0x4(%esi),%ecx
cmp    $0x1fffffff,%ecx
jg     807ee88 <dbus_shutdown+0x1a8>
add    %ecx,%ecx
mov    %ecx,0x4(%esi)
add    $0x8,%ecx
testb  $0x1,0x8(%esi)
mov    %ecx,(%esp)
jne    807eeb8 <dbus_shutdown+0x1d8>
call   807eb50 <dbus_malloc>
test   %eax,%eax
je     807eebf <dbus_shutdown+0x1df>
movl   $0x0,0x4(%eax)
mov    0x10(%esi),%edx
mov    %edx,(%eax)
mov    %eax,0x10(%esi)
mov    0x4(%eax),%edx
jmp    807ee61 <dbus_shutdown+0x181>
lea    0x0(%esi,%eiz,1),%esi
call   807eb80 <dbus_malloc0>
jmp    807ee99 <dbus_shutdown+0x1b9>
xor    %eax,%eax
jmp    807ee43 <dbus_shutdown+0x163>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0xc(%eax),%ecx
mov    %ecx,(%edx)
mov    0x14(%eax),%ecx
mov    %edx,0xc(%eax)
lea    -0x1(%ecx),%edx
mov    %edx,0x14(%eax)
xor    %eax,%eax
test   %edx,%edx
sete   %al
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x390e7,%ebx
mov    0x20(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   807ef00 <dbus_shutdown+0x220>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    (%eax),%eax
not    %eax
shr    $0x1f,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    (%eax),%eax
sub    $0x1,%eax
cmp    $0x1,%eax
setbe  %al
movzbl %al,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0xffffffff,(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
movzbl 0xc(%eax),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x39070,%ebx
shr    $0x3,%dl
mov    %edx,%edi
mov    (%eax),%edx
and    $0x7,%edi
sub    %edi,%edx
lea    0x7(%edx),%esi
mov    %esi,0xc(%esp)
movzbl 0xc(%eax),%esi
andl   $0xfffffff8,0xc(%esp)
mov    0xc(%esp),%ebp
and    $0xffffffc7,%esi
sub    %edx,%ebp
and    $0x7,%ebp
lea    0x0(,%ebp,8),%ecx
or     %ecx,%esi
mov    %esi,%ecx
mov    0xc(%esp),%esi
mov    %cl,0xc(%eax)
mov    %ebp,%ecx
movzbl %cl,%ebp
cmp    %edi,%ebp
mov    %esi,(%eax)
je     807eff5 <dbus_shutdown+0x315>
mov    0x4(%eax),%eax
add    %edx,%edi
add    %edx,%ebp
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
add    $0x1,%eax
mov    %eax,0x8(%esp)
call   804d140 <memmove@plt>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x38ff2,%ebx
cmp    $0x7ffffff7,%edx
jle    807f028 <dbus_shutdown+0x348>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,%esi
mov    0x8(%eax),%eax
lea    -0x7(%eax),%edx
cmp    %edx,%edi
jge    807f050 <dbus_shutdown+0x370>
mov    (%esi),%eax
mov    %edi,0x4(%esi)
movb   $0x0,(%eax,%edi,1)
mov    $0x1,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x3fffffff,%eax
jle    807f0b0 <dbus_shutdown+0x3d0>
mov    $0x7fffffff,%eax
mov    $0x7fffffff,%ebp
mov    %eax,0x4(%esp)
movzbl 0xc(%esi),%edx
shr    $0x3,%dl
mov    %edx,%eax
mov    (%esi),%edx
and    $0x7,%eax
sub    %eax,%edx
mov    %edx,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     807f01c <dbus_shutdown+0x33c>
movzbl 0xc(%esi),%edx
mov    %ebp,0x8(%esi)
shr    $0x3,%dl
and    $0x7,%edx
add    %edx,%eax
mov    %eax,(%esi)
mov    %esi,%eax
call   807ef80 <dbus_shutdown+0x2a0>
mov    (%esi),%eax
mov    %edi,0x4(%esi)
movb   $0x0,(%eax,%edi,1)
mov    $0x1,%eax
jmp    807f042 <dbus_shutdown+0x362>
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%eax
lea    0x8(%edi),%ebp
cmp    %eax,%ebp
cmovl  %eax,%ebp
mov    %ebp,%eax
jmp    807f061 <dbus_shutdown+0x381>
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edx
mov    0x34(%esp),%edi
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x38f26,%ebx
lea    (%edi,%eax,1),%ecx
sub    %ecx,%edx
mov    %edx,0x8(%esp)
add    0x0(%ebp),%ecx
mov    %ecx,0x4(%esp)
add    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804d140 <memmove@plt>
mov    (%esi),%eax
sub    %edi,%eax
mov    %eax,(%esi)
mov    0x0(%ebp),%edx
movb   $0x0,(%edx,%eax,1)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
mov    $0x1,%eax
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x38ede,%ebx
test   %esi,%esi
je     807f13e <dbus_shutdown+0x45e>
mov    %edx,%edi
mov    0x4(%edx),%edx
mov    $0x7ffffff7,%ecx
sub    %edx,%ecx
cmp    %ecx,%esi
jle    807f148 <dbus_shutdown+0x468>
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    %esi,%edx
mov    %edi,%eax
call   807f000 <dbus_shutdown+0x320>
test   %eax,%eax
je     807f13c <dbus_shutdown+0x45c>
mov    0x4(%edi),%eax
mov    (%edi),%edx
sub    %esi,%eax
sub    0x20(%esp),%eax
add    0x20(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
add    %edx,%eax
add    %esi,%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804d140 <memmove@plt>
mov    $0x1,%eax
jmp    807f13e <dbus_shutdown+0x45e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    (%edx),%edi
mov    0x40(%esp),%eax
mov    %edx,0x14(%esp)
mov    0x44(%esp),%ecx
mov    0x4(%ebp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x38e51,%ebx
lea    -0x1(%edi,%eax,1),%esi
neg    %eax
and    %eax,%esi
mov    %esi,%eax
add    %edx,%ecx
sub    %edi,%eax
add    %eax,%ecx
cmp    $0x7ffffff7,%ecx
mov    %eax,0x18(%esp)
ja     807f200 <dbus_shutdown+0x520>
sub    %edx,%ecx
mov    $0x1,%eax
jne    807f1e8 <dbus_shutdown+0x508>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,%eax
mov    %ebp,%edx
mov    %edi,(%esp)
mov    %ecx,0x1c(%esp)
call   807f110 <dbus_shutdown+0x430>
mov    0x1c(%esp),%ecx
test   %eax,%eax
jne    807f210 <dbus_shutdown+0x530>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    %ecx,0x44(%esp)
jge    807f231 <dbus_shutdown+0x551>
mov    0x18(%esp),%eax
add    0x0(%ebp),%edi
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   804d6f0 <memset@plt>
mov    0x14(%esp),%eax
mov    %esi,(%eax)
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x1,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x38d9b,%ebx
test   %esi,%esi
jne    807f280 <dbus_shutdown+0x5a0>
add    $0x1c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    0x38(%esp),%eax
mov    %edx,%edi
mov    0x34(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   807f110 <dbus_shutdown+0x430>
xor    %ecx,%ecx
test   %eax,%eax
je     807f26f <dbus_shutdown+0x58f>
mov    0x34(%esp),%eax
mov    %esi,0x8(%esp)
add    0x0(%ebp),%edi
mov    %edi,0x4(%esp)
mov    (%eax),%eax
add    0x38(%esp),%eax
mov    %eax,(%esp)
call   804d140 <memmove@plt>
add    $0x1c,%esp
mov    $0x1,%ecx
pop    %ebx
mov    %ecx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x38d25,%ebx
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
lea    0x8(%eax),%edi
mov    %edi,(%esp)
call   807eb50 <dbus_malloc>
mov    %eax,%edx
mov    %eax,(%esi)
xor    %eax,%eax
test   %edx,%edx
je     807f31b <dbus_shutdown+0x63b>
mov    %edi,0x8(%esi)
mov    %esi,%eax
movl   $0x0,0x4(%esi)
movb   $0x0,(%edx)
andb   $0xc0,0xc(%esi)
call   807ef80 <dbus_shutdown+0x2a0>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x38cc7,%ebx
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f2d0 <dbus_shutdown+0x5f0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%edx
mov    0x8(%esp),%ecx
mov    %edx,0x4(%eax)
add    $0x8,%edx
mov    %edx,0x8(%eax)
movzbl 0xc(%eax),%edx
mov    %ecx,(%eax)
or     $0x3,%edx
and    $0xffffffc3,%edx
mov    %dl,0xc(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x38c66,%ebx
mov    0x24(%esp),%esi
mov    %esi,(%esp)
call   804d600 <strlen@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f360 <dbus_shutdown+0x680>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x38c22,%ebx
movzbl 0xc(%esi),%eax
test   $0x1,%al
jne    807f406 <dbus_shutdown+0x726>
mov    (%esi),%edx
test   %edx,%edx
je     807f406 <dbus_shutdown+0x726>
shr    $0x3,%al
and    $0x7,%eax
sub    %eax,%edx
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
orb    $0x4,0xc(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0xfffffff8,%edx
push   %edi
mov    $0x1,%edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x38bd6,%ebx
mov    0x4(%esi),%eax
sub    %eax,%edx
add    0x8(%esi),%edx
cmp    %edx,0x34(%esp)
jl     807f448 <dbus_shutdown+0x768>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x8(%eax),%ebp
mov    %ebp,0x4(%esp)
movzbl 0xc(%esi),%edx
shr    $0x3,%dl
mov    %edx,%eax
mov    (%esi),%edx
and    $0x7,%eax
sub    %eax,%edx
mov    %edx,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     807f490 <dbus_shutdown+0x7b0>
movzbl 0xc(%esi),%edx
mov    %ebp,0x8(%esi)
shr    $0x3,%dl
and    $0x7,%edx
add    %edx,%eax
mov    %eax,(%esi)
mov    %esi,%eax
call   807ef80 <dbus_shutdown+0x2a0>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %di,%di
jmp    807f43e <dbus_shutdown+0x75e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
add    0x8(%esp),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x1,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x28(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x38b3c,%ebx
mov    0x2c(%esp),%edi
test   %esi,%esi
jne    807f4e0 <dbus_shutdown+0x800>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    0x20(%esp),%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   807f110 <dbus_shutdown+0x430>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     807f4d2 <dbus_shutdown+0x7f2>
mov    %edi,%eax
movzbl %al,%edi
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    (%eax),%eax
add    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d6f0 <memset@plt>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x1,%eax
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    0x28(%esp),%ebp
mov    %edi,%edx
mov    %esi,(%esp)
call   807f110 <dbus_shutdown+0x430>
xor    %edx,%edx
test   %eax,%eax
je     807f560 <dbus_shutdown+0x880>
mov    (%edi),%eax
mov    %ebp,%ecx
mov    $0x1,%dl
mov    %cl,(%eax,%esi,1)
add    $0x10,%esp
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x38a81,%ebx
mov    0x24(%esp),%edi
movzbl 0xc(%esi),%eax
test   $0x38,%al
jne    807f5c8 <dbus_shutdown+0x8e8>
mov    (%esi),%eax
mov    %eax,(%edi)
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
mov    $0x1,%edx
test   %eax,%eax
jne    807f5b9 <dbus_shutdown+0x8d9>
mov    (%edi),%eax
mov    %eax,(%esi)
mov    %esi,%eax
movl   $0x0,(%edi)
call   807ef80 <dbus_shutdown+0x2a0>
xor    %edx,%edx
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%esi),%edx
shr    $0x3,%al
mov    0x4(%esi),%ecx
and    $0x7,%eax
mov    %edx,0x4(%esp)
sub    %eax,%edx
add    $0x1,%ecx
mov    %ecx,0x8(%esp)
mov    %edx,(%esp)
call   804d140 <memmove@plt>
movzbl 0xc(%esi),%edx
mov    (%esi),%eax
mov    %edx,%ecx
and    $0xffffffc7,%edx
shr    $0x3,%cl
and    $0x7,%ecx
sub    %ecx,%eax
mov    %eax,(%esi)
mov    %dl,0xc(%esi)
jmp    807f593 <dbus_shutdown+0x8b3>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x389e2,%ebx
mov    0x4(%esi),%eax
add    $0x1,%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
mov    %eax,%edx
mov    0x24(%esp),%eax
mov    %edx,(%eax)
xor    %eax,%eax
test   %edx,%edx
je     807f65d <dbus_shutdown+0x97d>
mov    0x4(%esi),%eax
lea    0x1(%eax),%ecx
mov    (%esi),%eax
mov    %ecx,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   804d170 <memcpy@plt>
mov    $0x1,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x38983,%ebx
mov    (%eax),%edx
mov    0x4(%eax),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d170 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
jmp    807f6b0 <dbus_shutdown+0x9d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x38943,%ebx
mov    0x4(%eax),%ecx
mov    (%eax),%eax
lea    0x1(%ecx),%edx
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804d170 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
mov    0x8(%esp),%eax
mov    $0x7ffffff7,%ecx
mov    0xc(%esp),%edx
mov    0x4(%eax),%esi
sub    %esi,%ecx
cmp    %edx,%ecx
jl     807f710 <dbus_shutdown+0xa30>
add    %esi,%edx
pop    %esi
jmp    807f000 <dbus_shutdown+0x320>
nop
xor    %eax,%eax
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    0x4(%eax),%edx
sub    0x8(%esp),%edx
jmp    807f000 <dbus_shutdown+0x320>
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
jmp    807f000 <dbus_shutdown+0x320>
lea    0x0(%esi),%esi
sub    $0x2c,%esp
mov    0x30(%esp),%eax
mov    0x34(%esp),%ecx
mov    0x4(%eax),%edx
movl   $0x0,0x4(%esp)
mov    %ecx,(%esp)
mov    %edx,0x1c(%esp)
lea    0x1c(%esp),%edx
call   807f190 <dbus_shutdown+0x4b0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x38885,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%edi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
xor    %edx,%edx
test   %eax,%eax
je     807f7ac <dbus_shutdown+0xacc>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f720 <dbus_shutdown+0xa40>
mov    $0x1,%edx
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x38835,%ebx
mov    0x24(%esp),%edi
mov    %edi,(%esp)
call   804d600 <strlen@plt>
mov    %eax,%esi
xor    %eax,%eax
cmp    $0x7ffffff7,%esi
jbe    807f7f0 <dbus_shutdown+0xb10>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
test   %esi,%esi
mov    $0x1,%al
je     807f7e9 <dbus_shutdown+0xb09>
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     807f7e9 <dbus_shutdown+0xb09>
mov    0x20(%esp),%eax
mov    0x20(%esp),%ecx
mov    0x4(%eax),%eax
sub    %esi,%eax
add    (%ecx),%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d170 <memcpy@plt>
mov    $0x1,%eax
jmp    807f7e9 <dbus_shutdown+0xb09>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
lea    0x24(%esp),%edx
movl   $0x2,0x4(%esp)
movl   $0x2,(%esp)
mov    %esi,%eax
call   807f190 <dbus_shutdown+0x4b0>
xor    %edx,%edx
test   %eax,%eax
je     807f87e <dbus_shutdown+0xb9e>
mov    0x28(%esp),%eax
mov    (%esi),%edx
movzwl (%eax),%ecx
mov    0x24(%esp),%eax
mov    %cx,(%edx,%eax,1)
mov    $0x1,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
sub    $0x18,%esp
mov    0x20(%esp),%esi
lea    0x24(%esp),%edx
movl   $0x4,0x4(%esp)
movl   $0x4,(%esp)
mov    %esi,%eax
call   807f190 <dbus_shutdown+0x4b0>
xor    %edx,%edx
test   %eax,%eax
je     807f8cc <dbus_shutdown+0xbec>
mov    0x28(%esp),%eax
mov    (%esi),%edx
mov    (%eax),%ecx
mov    0x24(%esp),%eax
mov    %ecx,(%edx,%eax,1)
mov    $0x1,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
sub    $0x10,%esp
mov    0x20(%esp),%ebp
lea    0x24(%esp),%edx
movl   $0x8,0x4(%esp)
movl   $0x8,(%esp)
mov    %ebp,%eax
call   807f190 <dbus_shutdown+0x4b0>
xor    %edx,%edx
test   %eax,%eax
je     807f926 <dbus_shutdown+0xc46>
mov    0x28(%esp),%eax
mov    0x0(%ebp),%edx
mov    (%eax),%esi
mov    0x4(%eax),%edi
mov    0x24(%esp),%eax
mov    %esi,(%edx,%eax,1)
mov    %edi,0x4(%edx,%eax,1)
mov    $0x1,%edx
add    $0x10,%esp
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
sub    $0x1c,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%edx
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    0x20(%esp),%eax
call   807f190 <dbus_shutdown+0x4b0>
test   %eax,%eax
setne  %al
add    $0x1c,%esp
movzbl %al,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3868e,%ebx
mov    0x40(%esp),%esi
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   80841d0 <dbus_shutdown+0x54f0>
test   %eax,%eax
mov    %eax,%ebp
js     807f9d5 <dbus_shutdown+0xcf5>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
test   %eax,%eax
je     807f9d5 <dbus_shutdown+0xcf5>
mov    0x48(%esp),%eax
mov    $0x1,%di
movl   $0xffffffff,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x44(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x4(%esi),%eax
sub    %ebp,%eax
add    (%esi),%eax
mov    %eax,(%esp)
call   804db00 <__vsprintf_chk@plt>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %ebx
sub    $0x18,%esp
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3860b,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f960 <dbus_shutdown+0xc80>
add    $0x18,%esp
pop    %ebx
ret
push   %esi
mov    $0x1,%eax
push   %ebx
sub    $0x14,%esp
mov    0x28(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x385dd,%ebx
test   %esi,%esi
jne    807fa38 <dbus_shutdown+0xd58>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     807fa2d <dbus_shutdown+0xd4d>
mov    0x20(%esp),%eax
mov    0x20(%esp),%ecx
mov    0x24(%esp),%edx
mov    0x4(%eax),%eax
sub    %esi,%eax
add    (%ecx),%eax
mov    %esi,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d170 <memcpy@plt>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %edi
push   %esi
sub    $0x4,%esp
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x4(%esi),%eax
lea    0x1(%eax),%edx
mov    %esi,%eax
call   807f000 <dbus_shutdown+0x320>
xor    %edx,%edx
test   %eax,%eax
je     807fab0 <dbus_shutdown+0xdd0>
mov    (%esi),%edx
mov    %edi,%ecx
mov    0x4(%esi),%eax
mov    %cl,-0x1(%edx,%eax,1)
mov    $0x1,%edx
add    $0x4,%esp
mov    %edx,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    0x10(%esp),%ecx
mov    0x8(%esp),%eax
mov    0xc(%esp),%esi
test   %ecx,%ecx
jne    807fad8 <dbus_shutdown+0xdf8>
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ecx,0xc(%esp)
lea    0x4(%eax),%edx
mov    %esi,0x8(%esp)
pop    %esi
jmp    807f0c0 <dbus_shutdown+0x3e0>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    0x10(%esp),%ecx
mov    0x8(%esp),%eax
mov    0x14(%esp),%esi
mov    0xc(%esp),%edx
mov    %ecx,0xc(%esp)
mov    %esi,0x10(%esp)
mov    0x4(%eax),%ecx
sub    %edx,%ecx
mov    %ecx,0x8(%esp)
pop    %esi
jmp    807f250 <dbus_shutdown+0x570>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    $0x1,%eax
push   %edi
push   %esi
sub    $0x20,%esp
mov    0x38(%esp),%esi
mov    0x30(%esp),%edi
mov    0x34(%esp),%ebp
mov    0x3c(%esp),%edx
test   %esi,%esi
je     807fb80 <dbus_shutdown+0xea0>
test   %ebp,%ebp
jne    807fb4a <dbus_shutdown+0xe6a>
mov    0x4(%edi),%ecx
cmp    %esi,%ecx
je     807fb88 <dbus_shutdown+0xea8>
mov    0x40(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ebp,%edx
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,%eax
call   807f250 <dbus_shutdown+0x570>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     807fb80 <dbus_shutdown+0xea0>
mov    %edi,%eax
lea    0x4(%edi),%edx
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   807f0c0 <dbus_shutdown+0x3e0>
mov    $0x1,%eax
add    $0x20,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmpl   $0x0,0x4(%edx)
jne    807fb4a <dbus_shutdown+0xe6a>
mov    (%edi),%esi
mov    0x8(%edi),%ebp
mov    %eax,0x1c(%esp)
movzbl 0xc(%edi),%eax
mov    %esi,0x10(%esp)
mov    (%edx),%esi
mov    %ebp,0x14(%esp)
mov    %al,0x1b(%esp)
mov    %esi,(%edi)
mov    0x4(%edx),%esi
mov    %esi,0x4(%edi)
mov    0x8(%edx),%esi
mov    %esi,0x8(%edi)
movzbl 0xc(%edx),%ebp
mov    %eax,%esi
and    $0xffffffc7,%esi
and    $0x38,%ebp
or     %ebp,%esi
mov    0x14(%esp),%ebp
mov    %esi,%eax
movzbl 0x1b(%esp),%esi
mov    %al,0xc(%edi)
mov    0x10(%esp),%edi
mov    $0x1,%eax
mov    %ecx,0x4(%edx)
movzbl 0xc(%edx),%ecx
mov    %ebp,0x8(%edx)
and    $0x38,%esi
mov    %edi,(%edx)
and    $0xffffffc7,%ecx
or     %esi,%ecx
mov    %cl,0xc(%edx)
jmp    807fb80 <dbus_shutdown+0xea0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x3c(%esp),%eax
mov    0x30(%esp),%edx
mov    0x34(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x383eb,%ebx
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x4(%edx),%eax
mov    %ecx,0x4(%esp)
mov    %edx,(%esp)
sub    %ecx,%eax
mov    %eax,0x8(%esp)
call   807fb20 <dbus_shutdown+0xe40>
add    $0x28,%esp
pop    %ebx
ret
jmp    807fc50 <dbus_shutdown+0xf70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    0x18(%esp),%esi
mov    0x10(%esp),%ecx
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
mov    %esi,0x10(%esp)
mov    0x14(%esp),%esi
mov    %ecx,0x8(%esp)
mov    %esi,0xc(%esp)
pop    %esi
jmp    807f250 <dbus_shutdown+0x570>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x38(%esp),%ebp
mov    0x44(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3836c,%ebx
mov    0x3c(%esp),%edi
cmp    %esi,%ebp
je     807fd60 <dbus_shutdown+0x1080>
jl     807fce0 <dbus_shutdown+0x1000>
mov    0x40(%esp),%eax
mov    0x34(%esp),%edx
mov    %edi,0x4(%esp)
add    %esi,%eax
mov    %eax,0x8(%esp)
mov    %ebp,%eax
add    %esi,%edx
sub    %esi,%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   807f250 <dbus_shutdown+0x570>
xor    %ecx,%ecx
test   %eax,%eax
jne    807fd30 <dbus_shutdown+0x1050>
add    $0x1c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    %ebp,0x8(%esp)
mov    (%eax),%eax
add    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%eax
add    0x40(%esp),%eax
mov    %eax,(%esp)
call   804d140 <memmove@plt>
sub    %ebp,%esi
mov    $0x1,%ecx
je     807fcd2 <dbus_shutdown+0xff2>
add    0x40(%esp),%ebp
mov    %edi,%eax
mov    %esi,0x4(%esp)
lea    0x4(%edi),%edx
mov    %ecx,0xc(%esp)
mov    %ebp,(%esp)
call   807f0c0 <dbus_shutdown+0x3e0>
mov    0xc(%esp),%ecx
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
mov    %ecx,%eax
pop    %ebp
ret
mov    %esi,0x8(%esp)
mov    0x30(%esp),%eax
mov    (%eax),%eax
add    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    (%edi),%ebp
add    0x40(%esp),%ebp
mov    %ebp,(%esp)
call   804d140 <memmove@plt>
add    $0x1c,%esp
mov    $0x1,%ecx
pop    %ebx
mov    %ecx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %ebp,0x8(%esp)
jmp    807fd34 <dbus_shutdown+0x1054>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
mov    0x10(%esp),%edx
mov    0x14(%esp),%eax
mov    0x18(%esp),%ebp
mov    0x1c(%esp),%edi
mov    0x4(%edx),%ecx
cmp    %ecx,%eax
jge    807fdc8 <dbus_shutdown+0x10e8>
mov    (%edx),%esi
movzbl (%esi,%eax,1),%edx
cmp    $0xd,%dl
jne    807fda8 <dbus_shutdown+0x10c8>
jmp    807fde0 <dbus_shutdown+0x1100>
nop
add    $0x1,%eax
cmp    %ecx,%eax
je     807fdc8 <dbus_shutdown+0x10e8>
movzbl (%esi,%eax,1),%edx
cmp    $0xd,%dl
je     807fde0 <dbus_shutdown+0x1100>
cmp    $0xa,%dl
jne    807fd98 <dbus_shutdown+0x10b8>
test   %ebp,%ebp
je     807fdb4 <dbus_shutdown+0x10d4>
mov    %eax,0x0(%ebp)
test   %edi,%edi
je     807fdff <dbus_shutdown+0x111f>
movl   $0x1,(%edi)
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
test   %ebp,%ebp
je     807fdcf <dbus_shutdown+0x10ef>
mov    %ecx,0x0(%ebp)
test   %edi,%edi
je     807fe08 <dbus_shutdown+0x1128>
movl   $0x0,(%edi)
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x1(%eax),%edx
cmp    %ecx,%edx
jge    807fdad <dbus_shutdown+0x10cd>
cmpb   $0xa,0x1(%esi,%eax,1)
jne    807fdad <dbus_shutdown+0x10cd>
test   %ebp,%ebp
je     807fdf5 <dbus_shutdown+0x1115>
mov    %eax,0x0(%ebp)
test   %edi,%edi
je     807fdff <dbus_shutdown+0x111f>
movl   $0x2,(%edi)
pop    %esi
mov    $0x1,%eax
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    807fdc3 <dbus_shutdown+0x10e3>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x30(%esp),%esi
mov    0x28(%esp),%eax
mov    0x2c(%esp),%ebp
movzbl (%esi),%edx
test   %dl,%dl
je     807ff18 <dbus_shutdown+0x1238>
cmp    %ebp,%eax
jge    807ff00 <dbus_shutdown+0x1220>
mov    0x24(%esp),%ecx
lea    0x1(%eax),%edi
mov    (%ecx),%esi
movsbl %dl,%ecx
mov    %ecx,0x8(%esp)
mov    %esi,0x10(%esp)
add    %edi,%esi
mov    %esi,(%esp)
mov    0x30(%esp),%esi
sub    %eax,%esi
jmp    807fe6a <dbus_shutdown+0x118a>
xchg   %ax,%ax
add    $0x1,%edi
sub    $0x1,%esi
addl   $0x1,(%esp)
cmp    %edx,%ebp
jle    807ff00 <dbus_shutdown+0x1220>
lea    -0x1(%edi),%eax
mov    %edi,%edx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
movzbl -0x1(%eax),%eax
cmp    0x8(%esp),%eax
jne    807fe58 <dbus_shutdown+0x1178>
cmp    %edi,%ebp
jle    807ff77 <dbus_shutdown+0x1297>
mov    0x30(%esp),%eax
movsbl 0x1(%eax),%eax
test   %al,%al
je     807ff38 <dbus_shutdown+0x1258>
mov    (%esp),%ecx
movzbl (%ecx),%edx
cmp    %eax,%edx
jne    807ff5c <dbus_shutdown+0x127c>
mov    %edi,%eax
mov    %edi,0xc(%esp)
mov    0x10(%esp),%edi
jmp    807fecc <dbus_shutdown+0x11ec>
lea    0x0(%esi),%esi
movsbl (%esi,%eax,1),%edx
test   %dl,%dl
je     807ff38 <dbus_shutdown+0x1258>
movzbl (%edi,%eax,1),%ecx
cmp    %edx,%ecx
jne    807ff58 <dbus_shutdown+0x1278>
add    $0x1,%eax
cmp    %ebp,%eax
jne    807feb8 <dbus_shutdown+0x11d8>
mov    0xc(%esp),%edi
mov    0x30(%esp),%ecx
sub    0x4(%esp),%eax
cmpb   $0x0,(%ecx,%eax,1)
je     807ff38 <dbus_shutdown+0x1258>
mov    %edi,%edx
sub    $0x1,%esi
add    $0x1,%edi
addl   $0x1,(%esp)
cmp    %edx,%ebp
jg     807fe6a <dbus_shutdown+0x118a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
test   %eax,%eax
je     807ff7e <dbus_shutdown+0x129e>
mov    0x34(%esp),%eax
mov    %ebp,(%eax)
add    $0x14,%esp
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x34(%esp),%ecx
test   %ecx,%ecx
je     807ff6b <dbus_shutdown+0x128b>
mov    0x34(%esp),%esi
mov    %eax,(%esi)
mov    $0x1,%eax
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x34(%esp),%edx
test   %edx,%edx
je     807ff6b <dbus_shutdown+0x128b>
mov    0x34(%esp),%eax
mov    0x4(%esp),%esi
mov    %esi,(%eax)
mov    $0x1,%eax
jmp    807ff2b <dbus_shutdown+0x124b>
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%edi
add    $0x1,%edi
sub    $0x1,%esi
addl   $0x1,(%esp)
jmp    807fe6a <dbus_shutdown+0x118a>
add    $0x14,%esp
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%eax
jmp    807fed7 <dbus_shutdown+0x11f7>
xor    %eax,%eax
jmp    807ff2b <dbus_shutdown+0x124b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x3c(%esp),%edx
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3805f,%ebx
mov    %edx,0x10(%esp)
mov    0x38(%esp),%edx
mov    %edx,0xc(%esp)
mov    0x4(%eax),%edx
mov    %eax,(%esp)
mov    %edx,0x8(%esp)
mov    0x34(%esp),%edx
mov    %edx,0x4(%esp)
call   807fe10 <dbus_shutdown+0x1130>
add    $0x28,%esp
pop    %ebx
ret
nop
push   %edi
xor    %eax,%eax
push   %esi
push   %ebx
sub    $0x30,%esp
mov    %ax,0x2a(%esp)
mov    0x44(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3801a,%ebx
mov    0x40(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %al,0x2a(%esp)
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x2a(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
jne    8080028 <dbus_shutdown+0x1348>
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%edi
mov    0x48(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    %edi,%eax
not    %eax
add    0x4(%esi),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    0x1(%edi),%eax
mov    %eax,0x4(%esp)
call   807fb20 <dbus_shutdown+0xe40>
test   %eax,%eax
je     8080018 <dbus_shutdown+0x1338>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
test   %eax,%eax
setne  %al
add    $0x30,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    0x14(%esp),%edi
mov    0x4(%edx),%ecx
cmp    %ecx,%eax
jge    80800d0 <dbus_shutdown+0x13f0>
mov    (%edx),%esi
movzbl (%esi,%eax,1),%edx
cmp    $0x9,%dl
jne    80800b8 <dbus_shutdown+0x13d8>
jmp    80800bd <dbus_shutdown+0x13dd>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    %ecx,%eax
je     80800d0 <dbus_shutdown+0x13f0>
movzbl (%esi,%eax,1),%edx
cmp    $0x9,%dl
je     80800bd <dbus_shutdown+0x13dd>
cmp    $0x20,%dl
jne    80800a8 <dbus_shutdown+0x13c8>
test   %edi,%edi
je     80800df <dbus_shutdown+0x13ff>
mov    %eax,(%edi)
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
je     80800db <dbus_shutdown+0x13fb>
mov    %ecx,(%edi)
xor    %eax,%eax
pop    %esi
pop    %edi
ret
xor    %eax,%eax
jmp    80800c8 <dbus_shutdown+0x13e8>
mov    $0x1,%eax
jmp    80800c8 <dbus_shutdown+0x13e8>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
mov    0xc(%esp),%edx
mov    0x10(%esp),%eax
mov    0x14(%esp),%edi
mov    0x4(%edx),%ecx
cmp    %ecx,%eax
jge    8080128 <dbus_shutdown+0x1448>
mov    (%edx),%esi
movzbl (%esi,%eax,1),%edx
cmp    $0x9,%dl
je     8080121 <dbus_shutdown+0x1441>
jmp    8080138 <dbus_shutdown+0x1458>
lea    0x0(%esi),%esi
movzbl (%esi,%eax,1),%edx
cmp    $0x9,%dl
jne    8080138 <dbus_shutdown+0x1458>
add    $0x1,%eax
cmp    %ecx,%eax
jne    8080118 <dbus_shutdown+0x1438>
test   %edi,%edi
je     808012e <dbus_shutdown+0x144e>
mov    %eax,(%edi)
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x20,%dl
je     8080121 <dbus_shutdown+0x1441>
lea    0x0(%esi),%esi
jmp    8080128 <dbus_shutdown+0x1448>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
sub    $0x4,%esp
mov    0x14(%esp),%edx
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ebp
mov    0x4(%edx),%ecx
cmp    %ecx,%eax
mov    %ecx,(%esp)
jge    8080190 <dbus_shutdown+0x14b0>
mov    (%edx),%esi
xchg   %ax,%ax
movzbl (%esi,%eax,1),%edx
cmp    $0x20,%dl
je     8080188 <dbus_shutdown+0x14a8>
lea    -0x9(%edx),%edi
mov    %edi,%ecx
cmp    $0x1,%cl
jbe    8080188 <dbus_shutdown+0x14a8>
cmp    $0xd,%dl
jne    8080190 <dbus_shutdown+0x14b0>
add    $0x1,%eax
cmp    (%esp),%eax
jne    8080170 <dbus_shutdown+0x1490>
test   %ebp,%ebp
je     8080197 <dbus_shutdown+0x14b7>
mov    %eax,0x0(%ebp)
add    $0x4,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    0x14(%esp),%eax
mov    0x18(%esp),%edi
test   %eax,%eax
jle    80801d6 <dbus_shutdown+0x14f6>
mov    0x10(%esp),%edx
mov    (%edx),%ebp
lea    0x0(%esi),%esi
movzbl -0x1(%ebp,%eax,1),%edx
cmp    $0x20,%dl
je     80801d1 <dbus_shutdown+0x14f1>
lea    -0x9(%edx),%esi
mov    %esi,%ecx
cmp    $0x1,%cl
jbe    80801d1 <dbus_shutdown+0x14f1>
cmp    $0xd,%dl
jne    80801d6 <dbus_shutdown+0x14f6>
sub    $0x1,%eax
jne    80801b8 <dbus_shutdown+0x14d8>
test   %edi,%edi
je     80801dc <dbus_shutdown+0x14fc>
mov    %eax,(%edi)
pop    %esi
pop    %edi
pop    %ebp
nop
ret
jmp    80801f0 <dbus_shutdown+0x1510>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x37e05,%ebx
mov    0x44(%esp),%esi
mov    0x40(%esp),%edi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x2c(%esp)
call   807fd70 <dbus_shutdown+0x1090>
test   %eax,%eax
mov    0x28(%esp),%eax
jne    8080255 <dbus_shutdown+0x1575>
test   %eax,%eax
je     808027d <dbus_shutdown+0x159d>
add    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807fb20 <dbus_shutdown+0xe40>
test   %eax,%eax
jne    8080288 <dbus_shutdown+0x15a8>
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x28(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
test   %eax,%eax
setne  %al
add    $0x30,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x37d45,%ebx
mov    0x30(%esp),%esi
lea    0x1c(%esp),%edi
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8080150 <dbus_shutdown+0x1470>
mov    0x1c(%esp),%eax
test   %eax,%eax
jle    80802f9 <dbus_shutdown+0x1619>
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807fac0 <dbus_shutdown+0xde0>
mov    %edi,0x8(%esp)
mov    0x4(%esi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80801a0 <dbus_shutdown+0x14c0>
mov    0x1c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
xor    %edi,%edi
push   %esi
mov    0xc(%esp),%edx
mov    0x10(%esp),%ecx
mov    0x4(%edx),%esi
cmp    0x4(%ecx),%esi
je     8080350 <dbus_shutdown+0x1670>
mov    %edi,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%edx
mov    (%ecx),%ecx
add    %edx,%esi
cmp    %esi,%edx
je     8080379 <dbus_shutdown+0x1699>
movzbl (%ecx),%eax
cmp    %al,(%edx)
je     808036f <dbus_shutdown+0x168f>
jmp    8080344 <dbus_shutdown+0x1664>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%eax
cmp    %al,(%edx)
jne    8080388 <dbus_shutdown+0x16a8>
add    $0x1,%edx
add    $0x1,%ecx
cmp    %edx,%esi
jne    8080368 <dbus_shutdown+0x1688>
mov    $0x1,%edi
mov    %edi,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edi,%edi
mov    %edi,%eax
pop    %esi
pop    %edi
ret
nop
push   %ebp
push   %edi
push   %esi
mov    0x10(%esp),%edi
mov    0x14(%esp),%edx
mov    0x18(%esp),%esi
mov    0x4(%edi),%ecx
mov    0x4(%edx),%ebp
cmp    %ebp,%ecx
je     80803b3 <dbus_shutdown+0x16d3>
xor    %eax,%eax
cmp    %esi,%ecx
jl     80803db <dbus_shutdown+0x16fb>
cmp    %esi,%ebp
jl     80803db <dbus_shutdown+0x16fb>
mov    (%edi),%eax
cmp    %ecx,%esi
cmovle %esi,%ecx
mov    (%edx),%edx
lea    (%ecx,%eax,1),%edi
cmp    %edi,%eax
jne    80803d2 <dbus_shutdown+0x16f2>
jmp    80803e0 <dbus_shutdown+0x1700>
lea    0x0(%esi),%esi
add    $0x1,%eax
add    $0x1,%edx
cmp    %eax,%edi
je     80803e0 <dbus_shutdown+0x1700>
movzbl (%edx),%ecx
cmp    %cl,(%eax)
je     80803c8 <dbus_shutdown+0x16e8>
xor    %eax,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
pop    %esi
mov    $0x1,%eax
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
mov    0x1c(%esp),%edi
mov    0x20(%esp),%ecx
mov    0x18(%esp),%esi
mov    0x4(%edi),%edx
sub    %ecx,%edx
cmp    %esi,%edx
jl     808043e <dbus_shutdown+0x175e>
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
add    (%edi),%ecx
add    (%eax),%edx
add    %edx,%esi
cmp    %esi,%edx
je     8080439 <dbus_shutdown+0x1759>
movzbl (%ecx),%eax
cmp    %al,(%edx)
je     808042f <dbus_shutdown+0x174f>
jmp    808043e <dbus_shutdown+0x175e>
lea    0x0(%esi),%esi
movzbl (%ecx),%eax
cmp    %al,(%edx)
jne    8080448 <dbus_shutdown+0x1768>
add    $0x1,%edx
add    $0x1,%ecx
cmp    %edx,%esi
jne    8080428 <dbus_shutdown+0x1748>
mov    $0x1,%ebp
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %ebp,%ebp
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
push   %esi
mov    0x8(%esp),%ecx
mov    0xc(%esp),%edx
mov    (%ecx),%eax
mov    0x4(%ecx),%esi
add    %eax,%esi
cmp    %esi,%eax
jne    8080476 <dbus_shutdown+0x1796>
jmp    8080488 <dbus_shutdown+0x17a8>
xchg   %ax,%ax
cmp    (%eax),%cl
jne    808047d <dbus_shutdown+0x179d>
add    $0x1,%eax
add    $0x1,%edx
cmp    %eax,%esi
je     8080488 <dbus_shutdown+0x17a8>
movzbl (%edx),%ecx
test   %cl,%cl
jne    8080468 <dbus_shutdown+0x1788>
xor    %eax,%eax
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x0,(%edx)
pop    %esi
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    0x8(%esp),%ecx
mov    0xc(%esp),%edx
mov    (%ecx),%eax
mov    0x4(%ecx),%esi
add    %eax,%esi
cmp    %esi,%eax
je     80804fc <dbus_shutdown+0x181c>
movzbl (%edx),%ecx
test   %cl,%cl
je     80804f0 <dbus_shutdown+0x1810>
cmp    (%eax),%cl
je     80804d8 <dbus_shutdown+0x17f8>
nop
jmp    80804f8 <dbus_shutdown+0x1818>
lea    0x0(%esi),%esi
movzbl 0x1(%edx),%edx
test   %dl,%dl
xchg   %ax,%ax
je     80804f0 <dbus_shutdown+0x1810>
cmp    (%eax),%dl
jne    80804f8 <dbus_shutdown+0x1818>
mov    %ecx,%edx
add    $0x1,%eax
cmp    %eax,%esi
lea    0x1(%edx),%ecx
jne    80804c8 <dbus_shutdown+0x17e8>
movzbl 0x1(%edx),%eax
test   %al,%al
sete   %al
movzbl %al,%eax
pop    %esi
ret
xor    %eax,%eax
jmp    80804e6 <dbus_shutdown+0x1806>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
pop    %esi
ret
movzbl (%edx),%eax
nop
jmp    80804e6 <dbus_shutdown+0x1806>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x37ad1,%ebx
movb   $0x30,0x1c(%esp)
mov    %edi,%eax
shr    $0x4,%al
movzbl %al,%eax
movb   $0x31,0x1d(%esp)
movb   $0x32,0x1e(%esp)
movb   $0x33,0x1f(%esp)
movb   $0x34,0x20(%esp)
movb   $0x35,0x21(%esp)
movb   $0x36,0x22(%esp)
movb   $0x37,0x23(%esp)
movb   $0x38,0x24(%esp)
movb   $0x39,0x25(%esp)
movb   $0x61,0x26(%esp)
movb   $0x62,0x27(%esp)
movb   $0x63,0x28(%esp)
movb   $0x64,0x29(%esp)
movb   $0x65,0x2a(%esp)
movb   $0x66,0x2b(%esp)
movzbl 0x1c(%esp,%eax,1),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807fa80 <dbus_shutdown+0xda0>
xor    %edx,%edx
test   %eax,%eax
jne    80805c0 <dbus_shutdown+0x18e0>
mov    0x2c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edx,%eax
jne    80805f3 <dbus_shutdown+0x1913>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
and    $0xf,%edi
movzbl 0x1c(%esp,%edi,1),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807fa80 <dbus_shutdown+0xda0>
mov    $0x1,%edx
test   %eax,%eax
jne    80805a4 <dbus_shutdown+0x18c4>
mov    0x4(%esi),%eax
mov    %esi,(%esp)
sub    $0x1,%eax
mov    %eax,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
xor    %edx,%edx
jmp    80805a4 <dbus_shutdown+0x18c4>
call   80962d0 <dbus_bus_remove_match+0x50a0>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x379f7,%ebx
sub    $0x2c,%esp
lea    0x10(%esp),%edi
mov    0x40(%esp),%ebp
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
je     8080666 <dbus_shutdown+0x1986>
mov    0x0(%ebp),%esi
mov    0x4(%ebp),%eax
add    %esi,%eax
add    0x44(%esp),%esi
mov    %eax,%ebp
cmp    %esi,%eax
jne    8080647 <dbus_shutdown+0x1967>
jmp    8080670 <dbus_shutdown+0x1990>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
cmp    %esi,%ebp
je     8080670 <dbus_shutdown+0x1990>
movzbl (%esi),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8080510 <dbus_shutdown+0x1830>
test   %eax,%eax
jne    8080640 <dbus_shutdown+0x1960>
xor    %esi,%esi
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,%edx
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
call   807fc00 <dbus_shutdown+0xf20>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
jmp    808065c <dbus_shutdown+0x197c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x37957,%ebx
sub    $0x3c,%esp
lea    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
je     808075e <dbus_shutdown+0x1a7e>
mov    0x50(%esp),%eax
mov    (%eax),%esi
mov    0x4(%eax),%ebp
add    %esi,%ebp
add    0x54(%esp),%esi
cmp    %esi,%ebp
je     8080722 <dbus_shutdown+0x1a42>
mov    $0x1,%edi
lea    0x0(%esi,%eiz,1),%esi
movzbl (%esi),%eax
sub    $0x30,%eax
cmp    $0x36,%al
ja     8080722 <dbus_shutdown+0x1a42>
movzbl %al,%eax
mov    -0x193c4(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
mov    $0x1,%ecx
lea    0x0(%esi),%esi
test   %edi,%edi
jne    8080770 <dbus_shutdown+0x1a90>
mov    0x24(%esp),%eax
mov    0x20(%esp),%edx
or     %cl,-0x1(%edx,%eax,1)
add    $0x1,%esi
xor    $0x1,%edi
cmp    %esi,%ebp
jne    80806e8 <dbus_shutdown+0x1a08>
mov    0x60(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x5c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807fc00 <dbus_shutdown+0xf20>
test   %eax,%eax
jne    8080870 <dbus_shutdown+0x1b90>
xor    %esi,%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,%edx
add    $0x3c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %ecx,%ecx
test   %edi,%edi
je     808070c <dbus_shutdown+0x1a2c>
xchg   %ax,%ax
mov    0x1c(%esp),%eax
shl    $0x4,%ecx
movzbl %cl,%ecx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
jne    8080718 <dbus_shutdown+0x1a38>
jmp    808074e <dbus_shutdown+0x1a6e>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xf,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0xe,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0xd,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0xc,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0xb,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0xa,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0x9,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0x8,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0x7,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0x6,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0x5,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0x4,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0x3,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    $0x2,%ecx
jmp    8080708 <dbus_shutdown+0x1a28>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
test   %eax,%eax
je     808088e <dbus_shutdown+0x1bae>
mov    0x50(%esp),%eax
sub    (%eax),%esi
mov    0x58(%esp),%eax
mov    %esi,(%eax)
mov    $0x1,%esi
jmp    8080750 <dbus_shutdown+0x1a70>
mov    $0x1,%esi
jmp    8080750 <dbus_shutdown+0x1a70>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %eax,%eax
push   %esi
mov    0xc(%esp),%edi
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
mov    0x4(%edi),%esi
sub    %edx,%esi
cmp    %ecx,%esi
jl     80808cb <dbus_shutdown+0x1beb>
add    (%edi),%edx
lea    (%ecx,%edx,1),%edi
cmp    %edi,%edx
je     80808ff <dbus_shutdown+0x1c1f>
movzbl (%edx),%esi
mov    %esi,%ecx
test   %cl,%cl
jne    80808d0 <dbus_shutdown+0x1bf0>
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
and    $0x80,%esi
je     80808e4 <dbus_shutdown+0x1c04>
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   $0x80,%al
jne    80808f2 <dbus_shutdown+0x1c12>
add    $0x1,%edx
cmp    %edx,%edi
je     80808f8 <dbus_shutdown+0x1c18>
movzbl (%edx),%eax
test   %al,%al
jne    80808e0 <dbus_shutdown+0x1c00>
xor    %eax,%eax
pop    %esi
pop    %edi
ret
nop
mov    $0x1,%eax
jmp    80808cb <dbus_shutdown+0x1beb>
mov    $0x1,%al
jmp    80808cb <dbus_shutdown+0x1beb>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    0x8(%esp),%eax
mov    0x10(%esp),%esi
mov    (%eax),%eax
add    0xc(%esp),%eax
add    %eax,%esi
cmp    %esi,%eax
je     808093f <dbus_shutdown+0x1c5f>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
lea    -0x41(%edx),%ecx
cmp    $0x19,%cl
ja     8080938 <dbus_shutdown+0x1c58>
add    $0x20,%edx
mov    %dl,(%eax)
add    $0x1,%eax
cmp    %esi,%eax
jne    8080928 <dbus_shutdown+0x1c48>
pop    %esi
ret
jmp    8080950 <dbus_shutdown+0x1c70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    0x8(%esp),%eax
mov    0x10(%esp),%esi
mov    (%eax),%eax
add    0xc(%esp),%eax
add    %eax,%esi
cmp    %esi,%eax
je     808097f <dbus_shutdown+0x1c9f>
lea    0x0(%esi),%esi
movzbl (%eax),%edx
lea    -0x61(%edx),%ecx
cmp    $0x19,%cl
ja     8080978 <dbus_shutdown+0x1c98>
sub    $0x20,%edx
mov    %dl,(%eax)
add    $0x1,%eax
cmp    %esi,%eax
jne    8080968 <dbus_shutdown+0x1c88>
pop    %esi
ret
jmp    8080990 <dbus_shutdown+0x1cb0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
sub    $0xc,%esp
mov    0x1c(%esp),%edi
mov    0x20(%esp),%esi
mov    0x24(%esp),%ecx
mov    0x4(%edi),%edx
sub    %esi,%edx
cmp    %ecx,%edx
jl     80809c9 <dbus_shutdown+0x1ce9>
add    (%edi),%esi
lea    (%esi,%ecx,1),%eax
mov    %esi,%ebp
cmp    %eax,%esi
mov    %eax,0x4(%esp)
jb     80809d9 <dbus_shutdown+0x1cf9>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmp    0x4(%esp),%ebp
sete   %al
add    $0xc,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1,%ebp
cmp    0x4(%esp),%ebp
jae    80809c0 <dbus_shutdown+0x1ce0>
movzbl 0x0(%ebp),%eax
test   %al,%al
je     80809c0 <dbus_shutdown+0x1ce0>
test   %al,%al
jns    80809d0 <dbus_shutdown+0x1cf0>
mov    %eax,%edx
and    $0xffffffe0,%edx
cmp    $0xc0,%dl
je     8080a32 <dbus_shutdown+0x1d52>
mov    %eax,%edx
and    $0xfffffff0,%edx
cmp    $0xe0,%dl
je     8080b04 <dbus_shutdown+0x1e24>
mov    %eax,%edx
and    $0xfffffff8,%edx
cmp    $0xf0,%dl
je     8080b16 <dbus_shutdown+0x1e36>
mov    %eax,%edx
and    $0xfffffffc,%edx
cmp    $0xf8,%dl
je     8080b28 <dbus_shutdown+0x1e48>
mov    %eax,%edx
and    $0xfffffffe,%edx
cmp    $0xfc,%dl
jne    80809c0 <dbus_shutdown+0x1ce0>
movl   $0x6,0x8(%esp)
mov    $0x1,%ecx
jmp    8080a3f <dbus_shutdown+0x1d5f>
movl   $0x2,0x8(%esp)
mov    $0x1f,%ecx
mov    0x4(%esp),%edx
sub    %ebp,%edx
cmp    0x8(%esp),%edx
jl     80809c0 <dbus_shutdown+0x1ce0>
and    %ecx,%eax
movzbl 0x1(%ebp),%ecx
mov    %ecx,%edx
and    $0xffffffc0,%edx
cmp    $0x80,%dl
jne    80809c0 <dbus_shutdown+0x1ce0>
mov    0x8(%esp),%edi
lea    0x2(%ebp),%edx
mov    %edx,(%esp)
add    %ebp,%edi
nop
shl    $0x6,%eax
mov    %eax,%esi
mov    %ecx,%eax
and    $0x3f,%eax
or     %esi,%eax
cmp    %edi,(%esp)
je     8080aa0 <dbus_shutdown+0x1dc0>
mov    (%esp),%ecx
addl   $0x1,(%esp)
movzbl (%ecx),%ecx
mov    %ecx,%esi
and    $0xffffffc0,%esi
mov    %esi,%edx
cmp    $0x80,%dl
je     8080a70 <dbus_shutdown+0x1d90>
jmp    80809c0 <dbus_shutdown+0x1ce0>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x7f,%eax
jbe    80809c0 <dbus_shutdown+0x1ce0>
cmp    $0x7ff,%eax
mov    $0x2,%edx
jbe    8080ad8 <dbus_shutdown+0x1df8>
cmp    $0xffff,%eax
mov    $0x3,%dl
jbe    8080ad8 <dbus_shutdown+0x1df8>
cmp    $0x1fffff,%eax
mov    $0x4,%dl
jbe    8080ad8 <dbus_shutdown+0x1df8>
cmp    $0x4000000,%eax
sbb    %edx,%edx
add    $0x6,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    0x8(%esp),%edx
jne    80809c0 <dbus_shutdown+0x1ce0>
cmp    $0x10ffff,%eax
ja     80809c0 <dbus_shutdown+0x1ce0>
and    $0xfffff800,%eax
cmp    $0xd800,%eax
je     80809c0 <dbus_shutdown+0x1ce0>
add    %edx,%ebp
jmp    80809d3 <dbus_shutdown+0x1cf3>
movl   $0x3,0x8(%esp)
mov    $0xf,%ecx
jmp    8080a3f <dbus_shutdown+0x1d5f>
movl   $0x4,0x8(%esp)
mov    $0x7,%ecx
jmp    8080a3f <dbus_shutdown+0x1d5f>
movl   $0x5,0x8(%esp)
mov    $0x3,%ecx
jmp    8080a3f <dbus_shutdown+0x1d5f>
lea    0x0(%esi),%esi
push   %edi
xor    %eax,%eax
push   %esi
mov    0xc(%esp),%edi
mov    0x10(%esp),%edx
mov    0x14(%esp),%ecx
mov    0x4(%edi),%esi
sub    %edx,%esi
cmp    %ecx,%esi
jl     8080b76 <dbus_shutdown+0x1e96>
add    (%edi),%edx
add    %edx,%ecx
cmp    %ecx,%edx
je     8080b88 <dbus_shutdown+0x1ea8>
cmpb   $0x0,(%edx)
jne    8080b76 <dbus_shutdown+0x1e96>
xchg   %ax,%ax
add    $0x1,%edx
cmp    %edx,%ecx
je     8080b80 <dbus_shutdown+0x1ea0>
cmpb   $0x0,(%edx)
je     8080b68 <dbus_shutdown+0x1e88>
xor    %eax,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
pop    %esi
pop    %edi
ret
mov    $0x1,%al
jmp    8080b76 <dbus_shutdown+0x1e96>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x37463,%ebx
movzbl 0xc(%edx),%eax
shr    $0x3,%al
mov    %eax,%ecx
mov    (%edx),%eax
mov    0x8(%edx),%edx
and    $0x7,%ecx
movl   $0x0,0x4(%esp)
sub    %ecx,%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804d6f0 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x8c,%esp
mov    0xa4(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3741a,%ebx
mov    (%eax),%ebp
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   804d570 <open@plt>
test   %eax,%eax
mov    %eax,%esi
js     8080cd0 <dbus_shutdown+0x1ff0>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804d510 <__fxstat@plt>
test   %eax,%eax
js     8080e20 <dbus_shutdown+0x2140>
mov    0x54(%esp),%eax
cmp    $0x100000,%eax
jg     8080d20 <dbus_shutdown+0x2040>
mov    0xa0(%esp),%ecx
cmp    $0x0,%eax
mov    0x4(%ecx),%ecx
mov    %ecx,0x14(%esp)
jle    8080ca8 <dbus_shutdown+0x1fc8>
mov    0x38(%esp),%edx
and    $0xf000,%edx
cmp    $0x8000,%edx
je     8080d68 <dbus_shutdown+0x2088>
lea    -0x192a1(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
xor    %eax,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
jne    8080c60 <dbus_shutdown+0x1f80>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
add    $0x8c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x192e8(%ebx),%edx
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x8c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %eax,0xc(%esp)
lea    -0x191a8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %ebp,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
add    $0x8c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edi,%edi
jmp    8080d7e <dbus_shutdown+0x209e>
lea    0x0(%esi,%eiz,1),%esi
add    %eax,%edi
mov    0x54(%esp),%eax
cmp    %edi,%eax
jle    8080caa <dbus_shutdown+0x1fca>
sub    %edi,%eax
mov    %eax,0x8(%esp)
mov    0xa0(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80818b0 <dbus_shutdown+0x2bd0>
test   %eax,%eax
jg     8080d70 <dbus_shutdown+0x2090>
call   804d730 <__errno_location@plt>
mov    %eax,%edx
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    0x1c(%esp),%edx
mov    %eax,0x18(%esp)
mov    (%edx),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x18(%esp),%ecx
lea    -0x192b8(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0xa8(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0xa0(%esp),%eax
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
xor    %eax,%eax
jmp    8080c99 <dbus_shutdown+0x1fb9>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x14(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x14(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x10(%esp)
lea    -0x192d0(%ebx),%edx
mov    %edx,0x8(%esp)
jmp    8080d38 <dbus_shutdown+0x2058>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x37197,%ebx
sub    $0x4c,%esp
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8081040 <dbus_shutdown+0x2360>
mov    0x64(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     8081010 <dbus_shutdown+0x2330>
lea    -0x1cb29(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8081010 <dbus_shutdown+0x2330>
movl   $0x8,0x4(%esp)
mov    %esi,(%esp)
call   8087830 <dbus_shutdown+0x8b50>
test   %eax,%eax
je     8081010 <dbus_shutdown+0x2330>
mov    0x64(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x2c(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x24(%esp)
mov    0x68(%esp),%eax
test   %eax,%eax
je     80811e8 <dbus_shutdown+0x2508>
mov    0x24(%esp),%eax
movl   $0x1a4,0x8(%esp)
movl   $0xc1,0x4(%esp)
mov    %eax,(%esp)
call   804d570 <open@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
js     8081210 <dbus_shutdown+0x2530>
mov    0x20(%esp),%eax
movl   $0x1a4,0x4(%esp)
mov    %eax,(%esp)
call   804db50 <fchmod@plt>
test   %eax,%eax
js     808119e <dbus_shutdown+0x24be>
mov    0x60(%esp),%eax
xor    %ebp,%ebp
mov    0x4(%eax),%edi
test   %edi,%edi
jle    808106c <dbus_shutdown+0x238c>
mov    %esi,0x28(%esp)
mov    %ebp,%esi
mov    0x60(%esp),%ebp
jmp    8080f6a <dbus_shutdown+0x228a>
nop
add    %eax,%esi
cmp    %esi,%edi
jle    8081068 <dbus_shutdown+0x2388>
mov    %edi,%eax
sub    %esi,%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80819c0 <dbus_shutdown+0x2ce0>
test   %eax,%eax
jg     8080f60 <dbus_shutdown+0x2280>
call   804d730 <__errno_location@plt>
mov    0x28(%esp),%esi
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x28(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x28(%esp),%edx
mov    0x24(%esp),%ecx
mov    %edx,0x10(%esp)
lea    -0x19257(%ebx),%edx
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    $0x1,%edi
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%eax
xor    %ebp,%ebp
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
test   %edi,%edi
jne    8081130 <dbus_shutdown+0x2450>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x28(%esp),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d610 <fsync@plt>
test   %eax,%eax
je     8081148 <dbus_shutdown+0x2468>
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x28(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x28(%esp),%edx
mov    0x24(%esp),%ecx
mov    %edx,0x10(%esp)
lea    -0x19184(%ebx),%edx
mov    %ecx,0xc(%esp)
jmp    8080fc3 <dbus_shutdown+0x22e3>
lea    0x0(%esi),%esi
mov    0x2c(%esp),%eax
mov    $0x1,%ebp
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d5c0 <rename@plt>
test   %eax,%eax
jns    8080ffa <dbus_shutdown+0x231a>
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%ebp
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x2c(%esp),%ecx
lea    -0x19221(%ebx),%edx
mov    %ebp,0x14(%esp)
xor    %ebp,%ebp
mov    %edx,0x8(%esp)
mov    %ecx,0x10(%esp)
mov    0x24(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d2f0 <unlink@plt>
jmp    8080ffa <dbus_shutdown+0x231a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
test   %eax,%eax
jne    80810c0 <dbus_shutdown+0x23e0>
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x28(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x28(%esp),%edx
mov    0x24(%esp),%ecx
mov    %edx,0x10(%esp)
lea    -0x1923d(%ebx),%edx
mov    %ecx,0xc(%esp)
jmp    8080fc3 <dbus_shutdown+0x22e3>
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%ebp
mov    (%edi),%eax
xor    %edi,%edi
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x24(%esp),%ecx
lea    -0x1926e(%ebx),%edx
mov    %ebp,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8080fdc <dbus_shutdown+0x22fc>
mov    0x24(%esp),%eax
movl   $0x180,0x8(%esp)
movl   $0xc1,0x4(%esp)
mov    %eax,(%esp)
call   804d570 <open@plt>
test   %eax,%eax
mov    %eax,0x20(%esp)
jns    8080f42 <dbus_shutdown+0x2262>
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%ebp
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x24(%esp),%ecx
lea    -0x19286(%ebx),%edx
mov    %ebp,0x10(%esp)
xor    %ebp,%ebp
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8080ffa <dbus_shutdown+0x231a>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36d92,%ebx
mov    (%eax),%esi
movl   $0x1a4,0x4(%esp)
mov    %esi,(%esp)
call   804da20 <chmod@plt>
mov    $0x1,%edx
cmp    $0xffffffff,%eax
je     8081298 <dbus_shutdown+0x25b8>
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x19160(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36d12,%ebx
mov    (%eax),%esi
movl   $0x180,0x8(%esp)
movl   $0xc1,0x4(%esp)
mov    %esi,(%esp)
call   804d570 <open@plt>
test   %eax,%eax
js     8081380 <dbus_shutdown+0x26a0>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    $0x1,%edx
test   %eax,%eax
je     8081338 <dbus_shutdown+0x2658>
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x191e5(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x19203(%ebx),%eax
jmp    8081355 <dbus_shutdown+0x2675>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36c52,%ebx
mov    (%eax),%esi
mov    %esi,(%esp)
call   804d2f0 <unlink@plt>
mov    $0x1,%edx
test   %eax,%eax
js     80813d0 <dbus_shutdown+0x26f0>
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x191c8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x2c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36bd2,%ebx
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   80819c0 <dbus_shutdown+0x2ce0>
test   %eax,%eax
mov    %eax,%esi
js     8081468 <dbus_shutdown+0x2788>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0xc(%esp)
lea    -0x19133(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x36b3e,%ebx
mov    %eax,0x4(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
test   %eax,%eax
je     80814f0 <dbus_shutdown+0x2810>
mov    %esi,(%esp)
call   807ef70 <dbus_shutdown+0x290>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    80814e4 <dbus_shutdown+0x2804>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x36af3,%ebx
sub    $0x1c,%esp
mov    0x4(%eax),%ebp
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
test   %eax,%eax
jne    8081538 <dbus_shutdown+0x2858>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8087710 <dbus_shutdown+0x8a30>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8081570 <dbus_shutdown+0x2890>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36a80,%ebx
mov    0x30(%esp),%ebp
mov    (%eax),%esi
add    0x38(%esp),%esi
jmp    80815a2 <dbus_shutdown+0x28c2>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    80815c4 <dbus_shutdown+0x28e4>
mov    0x3c(%esp),%eax
movl   $0x4000,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   804db30 <send@plt>
test   %eax,%eax
mov    %eax,%edi
js     8081598 <dbus_shutdown+0x28b8>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0xc(%ebp),%esi
mov    0x10(%ebp),%eax
mov    0x18(%ebp),%edx
mov    0x24(%ebp),%ecx
add    (%esi),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36a14,%ebx
mov    %gs:0x14,%edi
mov    %edi,-0x1c(%ebp)
xor    %edi,%edi
test   %edx,%edx
mov    %eax,-0x48(%ebp)
mov    0x14(%ebp),%eax
mov    %ecx,-0x4c(%ebp)
mov    0x28(%ebp),%ecx
movl   $0x0,-0x40(%ebp)
movl   $0x0,-0x3c(%ebp)
mov    %eax,-0x44(%ebp)
je     8081718 <dbus_shutdown+0x2a38>
mov    0x1c(%ebp),%eax
lea    -0x38(%ebp),%esi
add    (%edx),%eax
mov    %eax,-0x40(%ebp)
mov    0x20(%ebp),%eax
mov    %eax,-0x3c(%ebp)
xor    %eax,%eax
movl   $0x0,(%esi,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     8081636 <dbus_shutdown+0x2956>
lea    -0x48(%ebp),%eax
mov    %eax,-0x30(%ebp)
mov    $0x2,%eax
test   %ecx,%ecx
mov    %esi,%edi
mov    %eax,-0x2c(%ebp)
jle    80816e2 <dbus_shutdown+0x2a02>
lea    0x4(,%ecx,4),%edi
lea    0x26(%edi),%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1b(%esp),%edx
lea    0x8(%edi),%ecx
and    $0xfffffff0,%edx
mov    %ecx,0x8(%esp)
mov    %edx,(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,-0x24(%ebp)
mov    %edx,-0x28(%ebp)
mov    %ecx,-0x54(%ebp)
mov    %edx,-0x50(%ebp)
call   804d6f0 <memset@plt>
mov    -0x54(%ebp),%ecx
xor    %eax,%eax
mov    -0x50(%ebp),%edx
cmp    $0xb,%ecx
cmova  %edx,%eax
lea    0x8(%edi),%edx
add    $0xc,%eax
mov    %edx,-0xc(%eax)
lea    -0x4(%edi),%edx
mov    %esi,%edi
movl   $0x1,-0x8(%eax)
movl   $0x1,-0x4(%eax)
mov    %edx,0x8(%esp)
mov    -0x4c(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d170 <memcpy@plt>
jmp    80816e2 <dbus_shutdown+0x2a02>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    80816ff <dbus_shutdown+0x2a1f>
mov    0x8(%ebp),%eax
movl   $0x4000,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d890 <sendmsg@plt>
test   %eax,%eax
mov    %eax,%esi
js     80816d8 <dbus_shutdown+0x29f8>
mov    -0x1c(%ebp),%edx
xor    %gs:0x14,%edx
mov    %esi,%eax
jne    808173c <dbus_shutdown+0x2a5c>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x38(%ebp),%esi
xor    %eax,%eax
movl   $0x0,(%esi,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     808171d <dbus_shutdown+0x2a3d>
lea    -0x48(%ebp),%eax
mov    %eax,-0x30(%ebp)
mov    $0x1,%eax
jmp    8081650 <dbus_shutdown+0x2970>
call   80962d0 <dbus_bus_remove_match+0x50a0>
jmp    8081750 <dbus_shutdown+0x2a70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebx
sub    $0x38,%esp
mov    0x54(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x368a3,%ebx
movl   $0x0,0x18(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x20(%esp)
mov    0x50(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0x1c(%esp)
mov    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   80815d0 <dbus_shutdown+0x28f0>
add    $0x38,%esp
pop    %ebx
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
mov    0x70(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x3683c,%ebx
mov    0x60(%esp),%ebp
mov    (%eax),%eax
add    0x68(%esp),%eax
test   %edx,%edx
je     8081858 <dbus_shutdown+0x2b78>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
lea    0x24(%esp),%edi
mov    0x74(%esp),%ecx
add    (%edx),%ecx
mov    %eax,0x18(%esp)
mov    0x78(%esp),%eax
mov    %ecx,%edx
mov    %ecx,0x1c(%esp)
mov    %eax,0x20(%esp)
xor    %eax,%eax
movl   $0x0,(%edi,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     8081802 <dbus_shutdown+0x2b22>
lea    0x14(%esp),%eax
test   %edx,%edx
mov    %eax,0x2c(%esp)
je     8081891 <dbus_shutdown+0x2bb1>
mov    $0x2,%eax
mov    %eax,0x30(%esp)
jmp    8081832 <dbus_shutdown+0x2b52>
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    808184c <dbus_shutdown+0x2b6c>
movl   $0x4000,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804d890 <sendmsg@plt>
test   %eax,%eax
mov    %eax,%esi
js     8081828 <dbus_shutdown+0x2b48>
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
lea    0x24(%esp),%edi
movl   $0x0,0x1c(%esp)
movl   $0x0,0x20(%esp)
mov    %eax,0x18(%esp)
xor    %eax,%eax
movl   $0x0,(%edi,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     808187a <dbus_shutdown+0x2b9a>
lea    0x14(%esp),%eax
mov    %eax,0x2c(%esp)
mov    $0x1,%eax
jmp    8081822 <dbus_shutdown+0x2b42>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
shr    $0x1f,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36740,%ebx
mov    0x38(%esp),%esi
mov    0x30(%esp),%edi
mov    0x4(%eax),%eax
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
test   %eax,%eax
je     8081979 <dbus_shutdown+0x2c99>
mov    0xc(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
mov    %eax,%ebp
jmp    808191a <dbus_shutdown+0x2c3a>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8081958 <dbus_shutdown+0x2c78>
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   804d0d0 <read@plt>
test   %eax,%eax
mov    %eax,%edx
js     8081910 <dbus_shutdown+0x2c30>
mov    0xc(%esp),%eax
mov    %edx,0xc(%esp)
add    %edx,%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0xc(%esp),%edx
mov    %edx,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xc(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x1c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804d730 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    8081950 <dbus_shutdown+0x2c70>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36663,%ebx
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80818b0 <dbus_shutdown+0x2bd0>
add    $0x18,%esp
pop    %ebx
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36630,%ebx
mov    0x30(%esp),%ebp
mov    (%eax),%esi
add    0x38(%esp),%esi
jmp    80819f2 <dbus_shutdown+0x2d12>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8081a0c <dbus_shutdown+0x2d2c>
mov    0x3c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   804d650 <write@plt>
test   %eax,%eax
mov    %eax,%edi
js     80819e8 <dbus_shutdown+0x2d08>
add    $0x1c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x50(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x365cc,%ebx
mov    (%eax),%eax
add    0x48(%esp),%eax
test   %edx,%edx
je     8081aa0 <dbus_shutdown+0x2dc0>
mov    0x54(%esp),%esi
add    (%edx),%esi
mov    0x58(%esp),%edx
mov    %eax,0x10(%esp)
mov    0x4c(%esp),%eax
lea    0x10(%esp),%edi
mov    %esi,0x18(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
jmp    8081a72 <dbus_shutdown+0x2d92>
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8081a94 <dbus_shutdown+0x2db4>
cmp    $0x1,%esi
sbb    %eax,%eax
add    $0x2,%eax
mov    %eax,0x8(%esp)
mov    0x40(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d710 <writev@plt>
test   %eax,%eax
mov    %eax,%ebp
js     8081a68 <dbus_shutdown+0x2d88>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %edx,%edx
xor    %esi,%esi
jmp    8081a4e <dbus_shutdown+0x2d6e>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3654a,%ebx
sub    $0x8,%esp
call   804d460 <getpid@plt>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3652a,%ebx
sub    $0x8,%esp
call   804d270 <getuid@plt>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3650a,%ebx
sub    $0x8,%esp
call   804d2d0 <geteuid@plt>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x364e9,%ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   8081ab0 <dbus_shutdown+0x2dd0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806a530 <dbus_connection_get_outgoing_unix_fds+0x190>
xor    %edx,%edx
test   %eax,%eax
je     8081b53 <dbus_shutdown+0x2e73>
call   8081af0 <dbus_shutdown+0x2e10>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806a550 <dbus_connection_get_outgoing_unix_fds+0x1b0>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3649a,%ebx
sub    $0x18,%esp
call   8081af0 <dbus_shutdown+0x2e10>
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8087650 <dbus_shutdown+0x8970>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3646a,%ebx
sub    $0x8,%esp
call   804d460 <getpid@plt>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x36442,%ebx
mov    0x4(%esi),%eax
test   %eax,%eax
jne    8081bd8 <dbus_shutdown+0x2ef8>
xor    %eax,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
movl   $0xffffffff,0x1c(%esp)
movl   $0x0,0x18(%esp)
call   8087990 <dbus_shutdown+0x8cb0>
test   %eax,%eax
je     8081bcb <dbus_shutdown+0x2eeb>
mov    0x18(%esp),%eax
cmp    %eax,0x4(%esi)
jne    8081bcb <dbus_shutdown+0x2eeb>
mov    0x34(%esp),%eax
mov    0x1c(%esp),%edx
mov    %edx,(%eax)
mov    $0x1,%eax
jmp    8081bcd <dbus_shutdown+0x2eed>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x1,%eax
lock xadd %eax,(%edx)
ret
xchg   %ax,%ax
mov    0x4(%esp),%edx
mov    $0xffffffff,%eax
lock xadd %eax,(%edx)
ret
xchg   %ax,%ax
lock orl $0x0,(%esp)
mov    0x4(%esp),%eax
mov    (%eax),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x36393,%ebx
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d3a0 <poll@plt>
add    $0x18,%esp
pop    %ebx
ret
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x36368,%ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%esi
movl   $0x1,(%esp)
call   804d9d0 <clock_gettime@plt>
test   %edi,%edi
je     8081cc7 <dbus_shutdown+0x2fe7>
mov    0x18(%esp),%eax
mov    %eax,(%edi)
test   %esi,%esi
je     8081ce2 <dbus_shutdown+0x3002>
mov    0x1c(%esp),%ecx
mov    $0x10624dd3,%edx
mov    %ecx,%eax
imul   %edx
sar    $0x1f,%ecx
sar    $0x6,%edx
sub    %ecx,%edx
mov    %edx,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x36308,%ebx
sub    $0x20,%esp
mov    0x30(%esp),%edi
lea    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    0x34(%esp),%esi
mov    %eax,(%esp)
call   804d200 <gettimeofday@plt>
test   %edi,%edi
je     8081d27 <dbus_shutdown+0x3047>
mov    0x18(%esp),%eax
mov    %eax,(%edi)
test   %esi,%esi
je     8081d31 <dbus_shutdown+0x3051>
mov    0x1c(%esp),%eax
mov    %eax,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x1,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x362ac,%ebx
mov    0x24(%esp),%edi
mov    0x4(%esi),%edx
test   %edx,%edx
je     8081da0 <dbus_shutdown+0x30c0>
mov    0x4(%edi),%ecx
test   %ecx,%ecx
je     8081da0 <dbus_shutdown+0x30c0>
mov    (%esi),%eax
mov    (%edi),%ecx
cmpb   $0x2f,-0x1(%eax,%edx,1)
sete   %al
cmpb   $0x2f,(%ecx)
sete   %cl
test   %al,%al
jne    8081dc8 <dbus_shutdown+0x30e8>
test   %cl,%cl
je     8081da8 <dbus_shutdown+0x30c8>
xchg   %ax,%ax
mov    %edx,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     8081da0 <dbus_shutdown+0x30c0>
mov    0x4(%esi),%edx
jmp    8081d88 <dbus_shutdown+0x30a8>
lea    0x0(%esi),%esi
test   %cl,%cl
je     8081d88 <dbus_shutdown+0x30a8>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   807f720 <dbus_shutdown+0xa40>
mov    0x4(%esi),%edx
jmp    8081d88 <dbus_shutdown+0x30a8>
jmp    8081df0 <dbus_shutdown+0x3110>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %edi
mov    $0x10624dd3,%edx
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ecx
lea    0x18(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x361f8,%ebx
lea    0x10(%esp),%esi
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %ecx,%eax
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
sar    $0x6,%edx
sub    %eax,%edx
mov    %edx,0x10(%esp)
imul   $0x3e8,%edx,%edx
sub    %edx,%ecx
imul   $0xf4240,%ecx,%ecx
mov    %ecx,0x14(%esp)
jmp    8081e62 <dbus_shutdown+0x3182>
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8081e72 <dbus_shutdown+0x3192>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804d970 <nanosleep@plt>
test   %eax,%eax
js     8081e48 <dbus_shutdown+0x3168>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x36177,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d110 <_exit@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x36157,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d520 <strerror@plt>
lea    -0x1c1b9(%ebx),%edx
test   %eax,%eax
cmove  %edx,%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x36124,%ebx
mov    0x84(%esp),%eax
lea    0x44(%esp),%esi
mov    0x80(%esp),%edi
mov    %eax,(%esp)
call   806a920 <dbus_connection_get_outgoing_unix_fds+0x580>
lea    0x2b(%esp),%eax
mov    %eax,0x30(%esp)
xor    %eax,%eax
movl   $0x1,0x34(%esp)
movl   $0x0,(%esi,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     8081f0e <dbus_shutdown+0x322e>
lea    0x30(%esp),%eax
mov    %eax,0x4c(%esp)
movl   $0x1,0x50(%esp)
jmp    8081f3e <dbus_shutdown+0x325e>
nop
call   804d730 <__errno_location@plt>
mov    %eax,%ebp
mov    (%eax),%eax
cmp    $0x4,%eax
jne    8081fb8 <dbus_shutdown+0x32d8>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804d920 <recvmsg@plt>
test   %eax,%eax
js     8081f30 <dbus_shutdown+0x3250>
je     8082025 <dbus_shutdown+0x3345>
cmpb   $0x0,0x2b(%esp)
jne    8081ff8 <dbus_shutdown+0x3318>
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x38(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x11,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
movl   $0xc,0x2c(%esp)
call   804d350 <getsockopt@plt>
test   %eax,%eax
jne    8081fa6 <dbus_shutdown+0x32c6>
cmpl   $0xc,0x2c(%esp)
je     808202d <dbus_shutdown+0x334d>
mov    $0x1,%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%esi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18ee0(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1911e(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x6c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x18ebc(%ebx),%eax
jmp    8081ffe <dbus_shutdown+0x331e>
mov    0x38(%esp),%eax
mov    0x3c(%esp),%esi
cmp    $0xffffffff,%eax
je     8082051 <dbus_shutdown+0x3371>
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   806a530 <dbus_connection_get_outgoing_unix_fds+0x190>
test   %eax,%eax
je     8082075 <dbus_shutdown+0x3395>
cmp    $0xffffffff,%esi
je     8081fa6 <dbus_shutdown+0x32c6>
mov    0x84(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806a550 <dbus_connection_get_outgoing_unix_fds+0x1b0>
test   %eax,%eax
jne    8081fa6 <dbus_shutdown+0x32c6>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    8081fab <dbus_shutdown+0x32cb>
jmp    80820b0 <dbus_shutdown+0x33d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x35f44,%ebx
mov    0x40(%esp),%edi
lea    0x1f(%esp),%esi
movb   $0x0,0x1f(%esp)
jmp    80820e6 <dbus_shutdown+0x3406>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%ebp
mov    (%eax),%eax
cmp    $0x4,%eax
jne    8082148 <dbus_shutdown+0x3468>
movl   $0x4000,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804db30 <send@plt>
test   %eax,%eax
js     80820d8 <dbus_shutdown+0x33f8>
je     8082118 <dbus_shutdown+0x3438>
add    $0x2c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x18e88(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9e4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%esi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18e5c(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    808213a <dbus_shutdown+0x345a>
nop
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
mov    0x80(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x35e6e,%ebx
mov    (%eax),%esi
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x3,(%esp)
mov    %esi,0x4(%esp)
call   804d390 <__xstat@plt>
test   %eax,%eax
js     8082200 <dbus_shutdown+0x3520>
testb  $0x36,0x28(%esp)
mov    $0x1,%eax
jne    80821d0 <dbus_shutdown+0x34f0>
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x18e34(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %esi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x70,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x1828e(%ebx),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
jmp    80821e4 <dbus_shutdown+0x3504>
lea    0x0(%esi),%esi
push   %ebp
mov    %eax,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %eax,0x2c(%esp)
mov    0x70(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x35dba,%ebx
mov    %edx,0x20(%esp)
movl   $0xffffffff,(%ecx)
test   %eax,%eax
movl   $0xffffffff,0x4(%ecx)
movl   $0x0,0x8(%ecx)
movl   $0x0,0xc(%ecx)
movl   $0x0,0x10(%ecx)
movl   $0x0,0x14(%ecx)
je     80823a8 <dbus_shutdown+0x36c8>
mov    (%eax),%eax
mov    %eax,0x28(%esp)
movl   $0x46,(%esp)
mov    $0x400,%esi
call   804d250 <sysconf@plt>
test   %eax,%eax
cmovg  %eax,%esi
lea    0x30(%esp),%eax
mov    %eax,0x24(%esp)
jmp    80822df <dbus_shutdown+0x35ff>
nop
mov    0x24(%esp),%ecx
lea    0x34(%esp),%edi
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
call   804d9a0 <getpwuid_r@plt>
cmp    $0x22,%eax
jne    8082330 <dbus_shutdown+0x3650>
cmp    $0x7ffff,%esi
ja     8082330 <dbus_shutdown+0x3650>
mov    %ebp,(%esp)
add    %esi,%esi
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%ebp
je     8082388 <dbus_shutdown+0x36a8>
mov    0x20(%esp),%eax
movl   $0x0,0x30(%esp)
cmp    $0xffffffff,%eax
jne    80822a8 <dbus_shutdown+0x35c8>
mov    0x24(%esp),%eax
lea    0x34(%esp),%edi
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804d160 <getpwnam_r@plt>
cmp    $0x22,%eax
je     80822cd <dbus_shutdown+0x35ed>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
jne    808233a <dbus_shutdown+0x365a>
cmp    %edi,0x30(%esp)
je     80823b5 <dbus_shutdown+0x36d5>
mov    0x28(%esp),%eax
lea    -0x19101(%ebx),%esi
test   %eax,%eax
cmovne %eax,%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18e0c(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808237e <dbus_shutdown+0x369e>
movl   $0x0,0x28(%esp)
jmp    8082287 <dbus_shutdown+0x35a7>
mov    0x2c(%esp),%esi
mov    0x3c(%esp),%eax
mov    %eax,(%esi)
mov    0x40(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %eax,0x10(%esi)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    0x10(%esi),%edx
test   %edx,%edx
mov    %eax,0x14(%esi)
je     80824b2 <dbus_shutdown+0x37d2>
test   %eax,%eax
je     80824b2 <dbus_shutdown+0x37d2>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
mov    0x2c(%esp),%eax
movl   $0x11,0x34(%esp)
mov    0x10(%eax),%esi
movl   $0x44,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,0x20(%esp)
je     8082388 <dbus_shutdown+0x36a8>
mov    0x20(%esp),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x2c(%esp),%eax
mov    0x4(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804d280 <getgrouplist@plt>
test   %eax,%eax
js     80824dd <dbus_shutdown+0x37fd>
mov    0x34(%esp),%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
mov    0x2c(%esp),%ecx
test   %eax,%eax
mov    %eax,0x8(%ecx)
je     808257a <dbus_shutdown+0x389a>
mov    0x34(%esp),%edx
mov    %eax,%ecx
xor    %eax,%eax
test   %edx,%edx
jle    8082495 <dbus_shutdown+0x37b5>
mov    0x20(%esp),%esi
mov    0x2c(%esp),%edi
jmp    8082484 <dbus_shutdown+0x37a4>
mov    0x8(%edi),%ecx
mov    (%esi,%eax,4),%edx
mov    %edx,(%ecx,%eax,4)
mov    0x34(%esp),%edx
add    $0x1,%eax
cmp    %eax,%edx
jg     8082481 <dbus_shutdown+0x37a1>
mov    0x2c(%esp),%eax
mov    %edx,0xc(%eax)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    $0x1,%eax
jmp    8082380 <dbus_shutdown+0x36a0>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
jmp    808237e <dbus_shutdown+0x369e>
mov    0x34(%esp),%eax
cmp    $0x11,%eax
je     8082568 <dbus_shutdown+0x3888>
shl    $0x2,%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     808257a <dbus_shutdown+0x389a>
call   804d730 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%ebp
mov    0x2c(%esp),%eax
mov    %edi,0xc(%esp)
mov    0x24(%esp),%edi
mov    %edi,0x8(%esp)
mov    0x4(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804d280 <getgrouplist@plt>
mov    %edi,0x20(%esp)
test   %eax,%eax
jns    808244d <dbus_shutdown+0x376d>
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    80825a9 <dbus_shutdown+0x38c9>
mov    0x34(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    %eax,0x8(%esp)
lea    -0x18dd0(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    808244d <dbus_shutdown+0x376d>
nop
movl   $0x110,0x34(%esp)
mov    $0x440,%eax
jmp    80824ed <dbus_shutdown+0x380d>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    808237e <dbus_shutdown+0x369e>
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x24(%esp)
mov    0x2c(%esp),%eax
mov    0x4(%eax),%edi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x24(%esp),%edx
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x14(%esp)
lea    -0x18d6c(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    808237e <dbus_shutdown+0x369e>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    %edx,0x4(%esp)
mov    $0xffffffff,%edx
mov    %ecx,0x8(%esp)
jmp    8082230 <dbus_shutdown+0x3550>
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
movl   $0x0,0x4(%esp)
mov    %ecx,0x8(%esp)
jmp    8082230 <dbus_shutdown+0x3550>
lea    0x0(%esi),%esi
push   %edi
mov    $0x1,%edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3599c,%ebx
mov    (%eax),%esi
movl   $0x1c0,0x4(%esp)
mov    %esi,(%esp)
call   804d700 <mkdir@plt>
test   %eax,%eax
js     8082690 <dbus_shutdown+0x39b0>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x11,%eax
je     8082680 <dbus_shutdown+0x39a0>
mov    %eax,(%esp)
xor    %di,%di
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x18d30(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3591a,%ebx
sub    $0x18,%esp
movl   $0x1,0x4(%esp)
movl   $0xd,(%esp)
call   804d1e0 <signal@plt>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x358e6,%ebx
mov    0x20(%esp),%esi
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804d680 <fcntl@plt>
test   %eax,%eax
js     8082757 <dbus_shutdown+0x3a77>
or     $0x1,%eax
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %esi,(%esp)
call   804d680 <fcntl@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x14(%ebp),%ecx
mov    0xc(%ebp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3588c,%ebx
mov    0x10(%ebp),%esi
mov    0x8(%ebp),%edi
mov    %ecx,-0x58(%ebp)
mov    0x18(%ebp),%ecx
mov    %eax,-0x50(%ebp)
mov    %ecx,-0x54(%ebp)
mov    %gs:0x14,%ecx
mov    %ecx,-0x1c(%ebp)
xor    %ecx,%ecx
mov    0x4(%eax),%ecx
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,-0x4c(%ebp)
call   807f6f0 <dbus_shutdown+0xa10>
test   %eax,%eax
je     808299c <dbus_shutdown+0x3cbc>
mov    -0x4c(%ebp),%eax
mov    %esi,0x8(%esp)
movl   $0x0,-0x40(%ebp)
movl   $0x0,-0x3c(%ebp)
mov    %eax,0x4(%esp)
mov    -0x50(%ebp),%eax
mov    %eax,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
mov    %esi,-0x3c(%ebp)
lea    -0x38(%ebp),%esi
mov    %eax,-0x40(%ebp)
xor    %eax,%eax
movl   $0x0,(%esi,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     80827e1 <dbus_shutdown+0x3b01>
lea    -0x40(%ebp),%eax
mov    %eax,-0x30(%ebp)
mov    -0x54(%ebp),%eax
movl   $0x1,-0x2c(%ebp)
mov    (%eax),%ecx
lea    0x0(,%ecx,4),%eax
lea    0xc(%eax),%edx
add    $0x2a,%eax
and    $0xfffffff0,%eax
sub    %eax,%esp
lea    0x1b(%esp),%eax
and    $0xfffffff0,%eax
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,-0x5c(%ebp)
mov    %eax,-0x28(%ebp)
call   804d6f0 <memset@plt>
mov    -0x54(%ebp),%eax
mov    (%eax),%eax
lea    0xc(,%eax,4),%eax
mov    %eax,-0x24(%ebp)
jmp    8082856 <dbus_shutdown+0x3b76>
xchg   %ax,%ax
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8082980 <dbus_shutdown+0x3ca0>
movl   $0x40000000,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804d920 <recvmsg@plt>
test   %eax,%eax
js     8082848 <dbus_shutdown+0x3b68>
mov    -0x20(%ebp),%edx
mov    %eax,%ecx
and    $0x8,%edx
jne    808296b <dbus_shutdown+0x3c8b>
mov    -0x24(%ebp),%esi
cmp    $0xc,%esi
cmovae -0x28(%ebp),%edx
add    -0x28(%ebp),%esi
test   %edx,%edx
je     808289a <dbus_shutdown+0x3bba>
cmpl   $0x1,0x4(%edx)
je     80828f8 <dbus_shutdown+0x3c18>
mov    (%edx),%eax
cmp    $0xb,%eax
ja     80828d8 <dbus_shutdown+0x3bf8>
mov    -0x54(%ebp),%eax
movl   $0x0,(%eax)
mov    -0x4c(%ebp),%eax
mov    %ecx,-0x4c(%ebp)
add    %ecx,%eax
mov    %eax,0x4(%esp)
mov    -0x50(%ebp),%eax
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    -0x4c(%ebp),%ecx
mov    %ecx,%eax
mov    -0x1c(%ebp),%edi
xor    %gs:0x14,%edi
jne    80829e0 <dbus_shutdown+0x3d00>
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x3,%eax
and    $0xfffffffc,%eax
add    %eax,%edx
lea    0xc(%edx),%eax
cmp    %eax,%esi
jb     808289a <dbus_shutdown+0x3bba>
mov    (%edx),%eax
add    $0x3,%eax
and    $0xfffffffc,%eax
add    %edx,%eax
cmp    %eax,%esi
jb     808289a <dbus_shutdown+0x3bba>
jmp    8082889 <dbus_shutdown+0x3ba9>
nop
cmpl   $0x1,0x8(%edx)
jne    8082893 <dbus_shutdown+0x3bb3>
mov    -0x54(%ebp),%eax
lea    0xc(%edx),%edi
mov    (%edx),%esi
mov    (%eax),%edx
sub    $0xc,%esi
shr    $0x2,%esi
cmp    %edx,%esi
ja     80829b1 <dbus_shutdown+0x3cd1>
lea    0x0(,%esi,4),%eax
mov    %eax,0x8(%esp)
mov    -0x58(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %ecx,-0x5c(%ebp)
mov    %eax,(%esp)
call   804d170 <memcpy@plt>
mov    -0x54(%ebp),%ecx
test   %esi,%esi
mov    %esi,(%ecx)
mov    -0x5c(%ebp),%ecx
je     80828a3 <dbus_shutdown+0x3bc3>
xor    %edi,%edi
mov    %esi,-0x54(%ebp)
mov    %edi,%esi
mov    -0x58(%ebp),%edi
lea    0x0(%esi),%esi
mov    (%edi,%esi,4),%edx
add    $0x1,%esi
mov    %edx,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
cmp    -0x54(%ebp),%esi
jne    8082950 <dbus_shutdown+0x3c70>
mov    -0x5c(%ebp),%ecx
jmp    80828a3 <dbus_shutdown+0x3bc3>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
movl   $0x1c,(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    -0x4c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    -0x50(%ebp),%eax
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    $0xffffffff,%eax
jmp    80828bf <dbus_shutdown+0x3bdf>
call   804d730 <__errno_location@plt>
movl   $0xc,(%eax)
mov    $0xffffffff,%eax
jmp    80828bf <dbus_shutdown+0x3bdf>
mov    %edx,-0x5c(%ebp)
mov    -0x5c(%ebp),%eax
mov    %edx,-0x64(%ebp)
mov    %ecx,-0x60(%ebp)
mov    (%edi,%eax,4),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    -0x60(%ebp),%ecx
addl   $0x1,-0x5c(%ebp)
cmp    -0x5c(%ebp),%esi
mov    -0x64(%ebp),%edx
ja     80829b4 <dbus_shutdown+0x3cd4>
mov    %edx,%esi
jmp    8082916 <dbus_shutdown+0x3c36>
xchg   %ax,%ax
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x35604,%ebx
mov    0x60(%esp),%ebp
lea    0x2c(%esp),%edi
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
lea    0x28(%esp),%esi
movl   $0x10,0x28(%esp)
lea    0x0(%esi),%esi
movl   $0x80000,0xc(%esp)
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804d290 <accept4@plt>
test   %eax,%eax
mov    %eax,%edx
js     8082a60 <dbus_shutdown+0x3d80>
mov    0x3c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %edx,%eax
jne    8082aba <dbus_shutdown+0x3dda>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x1c(%esp)
call   804d730 <__errno_location@plt>
mov    %eax,%ecx
mov    (%eax),%eax
cmp    $0x16,%eax
je     8082a98 <dbus_shutdown+0x3db8>
cmp    $0x26,%eax
mov    0x1c(%esp),%edx
je     8082a98 <dbus_shutdown+0x3db8>
cmp    $0x4,%eax
je     8082a28 <dbus_shutdown+0x3d48>
mov    %edx,(%esp)
mov    %edx,0x1c(%esp)
call   8082710 <dbus_shutdown+0x3a30>
mov    0x1c(%esp),%edx
jmp    8082a46 <dbus_shutdown+0x3d66>
lea    0x0(%esi),%esi
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x1c(%esp)
call   804d3b0 <accept@plt>
test   %eax,%eax
mov    %eax,%edx
jns    8082a80 <dbus_shutdown+0x3da0>
mov    0x1c(%esp),%ecx
mov    (%ecx),%eax
jmp    8082a7b <dbus_shutdown+0x3d9b>
call   80962d0 <dbus_bus_remove_match+0x50a0>
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x35533,%ebx
sub    $0x1c,%esp
movl   $0x0,0x8(%esp)
movl   $0x80001,0x4(%esp)
mov    %edx,(%esp)
call   804d980 <socket@plt>
test   %eax,%eax
mov    %eax,(%esi)
js     8082b08 <dbus_shutdown+0x3e28>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%edx
mov    %eax,%ebp
cmp    $0x5b,%edx
je     8082b58 <dbus_shutdown+0x3e78>
cmp    $0x16,%edx
je     8082b58 <dbus_shutdown+0x3e78>
mov    %edx,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%esi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x190fd(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
call   804d980 <socket@plt>
test   %eax,%eax
mov    %eax,(%esi)
js     8082b8b <dbus_shutdown+0x3eab>
mov    %eax,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x0(%ebp),%edx
jmp    8082b1b <dbus_shutdown+0x3e3b>
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x35466,%ebx
mov    0x20(%esp),%esi
jmp    8082bb4 <dbus_shutdown+0x3ed4>
xchg   %ax,%ax
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
jne    8082bd0 <dbus_shutdown+0x3ef0>
mov    %esi,(%esp)
call   804dae0 <close@plt>
test   %eax,%eax
js     8082ba8 <dbus_shutdown+0x3ec8>
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x190e3(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x353f3,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x353c0,%ebx
mov    0x34(%esp),%edi
mov    0x4(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x190cd(%ebx),%eax
mov    %eax,(%esp)
call   804d570 <open@plt>
test   %eax,%eax
mov    %eax,%ebp
js     8082ca1 <dbus_shutdown+0x3fc1>
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80818b0 <dbus_shutdown+0x2bd0>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
cmp    %edi,%eax
je     8082cb8 <dbus_shutdown+0x3fd8>
call   8082b90 <dbus_shutdown+0x3eb0>
mov    0xc(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x1c,%esp
mov    %edi,%edx
pop    %ebx
mov    %esi,%eax
pop    %esi
pop    %edi
pop    %ebp
jmp    8081500 <dbus_shutdown+0x2820>
lea    0x0(%esi,%eiz,1),%esi
call   8082b90 <dbus_shutdown+0x3eb0>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x35324,%ebx
mov    0x30(%esp),%esi
movl   $0x3,0x8(%esp)
movl   $0x406,0x4(%esp)
mov    %esi,(%esp)
call   804d680 <fcntl@plt>
test   %eax,%eax
js     8082d10 <dbus_shutdown+0x4030>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%edx
mov    %eax,%edi
cmp    $0x16,%edx
je     8082d50 <dbus_shutdown+0x4070>
mov    %edx,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x190c0(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    $0xffffffff,%eax
jmp    8082d02 <dbus_shutdown+0x4022>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x3,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804d680 <fcntl@plt>
test   %eax,%eax
mov    %eax,%ebp
js     8082d7a <dbus_shutdown+0x409a>
mov    %eax,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
mov    %ebp,%eax
jmp    8082d02 <dbus_shutdown+0x4022>
mov    (%edi),%edx
jmp    8082d1e <dbus_shutdown+0x403e>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x35274,%ebx
mov    0x40(%esp),%esi
movl   $0x0,0x8(%esp)
movl   $0x3,0x4(%esp)
mov    %esi,(%esp)
call   804d680 <fcntl@plt>
test   %eax,%eax
js     8082de0 <dbus_shutdown+0x4100>
or     $0x8,%ah
mov    %eax,0x8(%esp)
movl   $0x4,0x4(%esp)
mov    %esi,(%esp)
call   804d680 <fcntl@plt>
mov    $0x1,%edx
test   %eax,%eax
js     8082e30 <dbus_shutdown+0x4150>
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%ebp
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18d0c(%ebx),%edx
mov    %ebp,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x2c,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%ebp
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18cdc(%ebx),%edx
mov    %ebp,0x10(%esp)
mov    %esi,0xc(%esp)
jmp    8082e0b <dbus_shutdown+0x412b>
lea    0x0(%esi),%esi
push   %ebp
mov    $0x1,%edx
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x3518c,%ebx
mov    0xc0(%esp),%eax
mov    0xc8(%esp),%ebp
mov    %eax,0x1c(%esp)
mov    %ebp,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
lea    0x28(%esp),%eax
call   8082ac0 <dbus_shutdown+0x3de0>
test   %eax,%eax
je     8082fd0 <dbus_shutdown+0x42f0>
lea    0x2e(%esp),%esi
mov    $0x6e,%edx
test   $0x2,%esi
mov    %esi,%edi
jne    8082fd8 <dbus_shutdown+0x42f8>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
and    $0x2,%edx
rep stos %eax,%es:(%edi)
jne    8082fc0 <dbus_shutdown+0x42e0>
mov    $0x1,%eax
mov    %ax,0x2e(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804d600 <strlen@plt>
mov    0xc4(%esp),%edx
test   %edx,%edx
mov    %eax,%edi
jne    8082f88 <dbus_shutdown+0x42a8>
cmp    $0x63,%eax
ja     8083040 <dbus_shutdown+0x4360>
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
movl   $0x6c,0xc(%esp)
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   804d7b0 <__strncpy_chk@plt>
mov    0x28(%esp),%eax
add    $0x2,%edi
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804daa0 <connect@plt>
test   %eax,%eax
js     8082fe3 <dbus_shutdown+0x4303>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
je     8083022 <dbus_shutdown+0x4342>
mov    0x28(%esp),%eax
mov    0x9c(%esp),%esi
xor    %gs:0x14,%esi
jne    808305e <dbus_shutdown+0x437e>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1,%edi
cmp    $0x63,%edi
lea    -0x18ca0(%ebx),%eax
ja     8083046 <dbus_shutdown+0x4366>
mov    0x1c(%esp),%eax
movl   $0x6b,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
lea    0x31(%esp),%eax
mov    %eax,(%esp)
call   804d7b0 <__strncpy_chk@plt>
jmp    8082f28 <dbus_shutdown+0x4248>
nop
xor    %ecx,%ecx
mov    %cx,(%edi)
jmp    8082ed8 <dbus_shutdown+0x41f8>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    8082f63 <dbus_shutdown+0x4283>
nop
lea    0x30(%esp),%edi
mov    $0x6c,%dl
jmp    8082ec6 <dbus_shutdown+0x41e6>
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x1c(%esp),%edx
mov    %edi,0x10(%esp)
mov    %ebp,(%esp)
mov    %edx,0xc(%esp)
lea    -0x18c80(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
call   806b100 <dbus_set_error>
mov    0x28(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    $0xffffffff,%eax
jmp    8082f63 <dbus_shutdown+0x4283>
lea    -0x190a6(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   806b100 <dbus_set_error>
jmp    8083022 <dbus_shutdown+0x4342>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    $0x1,%edx
push   %edi
push   %esi
push   %ebx
sub    $0xfc,%esp
mov    0x118(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x34f75,%ebx
mov    0x110(%esp),%ebp
mov    %eax,%esi
mov    %eax,0x14(%esp)
mov    %esi,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0xec(%esp)
xor    %eax,%eax
lea    0x20(%esp),%eax
call   8082ac0 <dbus_shutdown+0x3de0>
test   %eax,%eax
je     8083308 <dbus_shutdown+0x4628>
lea    0x7e(%esp),%esi
mov    $0x6e,%edx
test   $0x2,%esi
mov    %esi,%edi
jne    8083318 <dbus_shutdown+0x4638>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
and    $0x2,%edx
rep stos %eax,%es:(%edi)
jne    8083200 <dbus_shutdown+0x4520>
mov    $0x1,%edx
mov    %ebp,(%esp)
mov    %dx,0x7e(%esp)
call   804d600 <strlen@plt>
mov    %eax,%edi
mov    0x114(%esp),%eax
test   %eax,%eax
je     8083210 <dbus_shutdown+0x4530>
add    $0x1,%edi
cmp    $0x63,%edi
ja     8083388 <dbus_shutdown+0x46a8>
lea    0x81(%esp),%eax
movl   $0x6b,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804d7b0 <__strncpy_chk@plt>
lea    0x24(%esp),%edx
mov    0x20(%esp),%eax
movl   $0x4,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
movl   $0x1,0x24(%esp)
call   804cff0 <setsockopt@plt>
cmp    $0xffffffff,%eax
je     80832d8 <dbus_shutdown+0x45f8>
mov    0x20(%esp),%eax
add    $0x2,%edi
mov    %edi,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d6b0 <bind@plt>
test   %eax,%eax
js     8083326 <dbus_shutdown+0x4646>
mov    0x20(%esp),%eax
movl   $0x1e,0x4(%esp)
mov    %eax,(%esp)
call   804d8b0 <listen@plt>
test   %eax,%eax
js     80833aa <dbus_shutdown+0x46ca>
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
je     8083365 <dbus_shutdown+0x4685>
mov    0x114(%esp),%eax
test   %eax,%eax
je     8083278 <dbus_shutdown+0x4598>
mov    0x20(%esp),%eax
mov    0xec(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80833da <dbus_shutdown+0x46fa>
add    $0xfc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %eax,%eax
mov    %ax,(%edi)
jmp    80830ea <dbus_shutdown+0x440a>
lea    0x0(%esi),%esi
lea    0x24(%esp),%edx
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
mov    %edx,0x18(%esp)
mov    %edi,0x1c(%esp)
call   804d390 <__xstat@plt>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     80832a8 <dbus_shutdown+0x45c8>
cmp    $0x63,%ecx
ja     8083388 <dbus_shutdown+0x46a8>
lea    0x80(%esp),%eax
movl   $0x6c,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   804d7b0 <__strncpy_chk@plt>
mov    0x18(%esp),%edx
jmp    808313c <dbus_shutdown+0x445c>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1ff,0x4(%esp)
mov    %ebp,(%esp)
call   804da20 <chmod@plt>
test   %eax,%eax
jns    80831db <dbus_shutdown+0x44fb>
lea    -0x18bf4(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80831db <dbus_shutdown+0x44fb>
nop
mov    0x34(%esp),%eax
and    $0xf000,%eax
cmp    $0xc000,%eax
jne    808323c <dbus_shutdown+0x455c>
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x18(%esp)
call   804d2f0 <unlink@plt>
mov    0x1c(%esp),%edx
mov    0x18(%esp),%ecx
jmp    808323c <dbus_shutdown+0x455c>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x18c5c(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    8083175 <dbus_shutdown+0x4495>
lea    0x0(%esi),%esi
mov    $0xffffffff,%eax
jmp    80831df <dbus_shutdown+0x44ff>
lea    0x0(%esi),%esi
lea    0x80(%esp),%edi
mov    $0x6c,%dl
jmp    80830d8 <dbus_shutdown+0x43f8>
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18c38(%ebx),%edx
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    $0xffffffff,%eax
jmp    80831df <dbus_shutdown+0x44ff>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x18ca0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8083365 <dbus_shutdown+0x4685>
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18c18(%ebx),%edx
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
jmp    8083351 <dbus_shutdown+0x4671>
call   80962d0 <dbus_bus_remove_match+0x50a0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x34c17,%ebx
sub    $0x2c,%esp
movl   $0x1,(%esp)
call   80868e0 <dbus_shutdown+0x7c00>
test   %eax,%eax
mov    %eax,0x1c(%esp)
js     80834d5 <dbus_shutdown+0x47f5>
je     80834cd <dbus_shutdown+0x47ed>
mov    0x1c(%esp),%eax
mov    $0x3,%ebp
lea    0x3(%eax),%esi
cmp    $0x3,%esi
ja     8083436 <dbus_shutdown+0x4756>
jmp    80834f7 <dbus_shutdown+0x4817>
xchg   %ax,%ax
je     80834a0 <dbus_shutdown+0x47c0>
add    $0x1,%ebp
cmp    %esi,%ebp
nop
je     8083560 <dbus_shutdown+0x4880>
movl   $0x1,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8086b90 <dbus_shutdown+0x7eb0>
test   %eax,%eax
jns    8083428 <dbus_shutdown+0x4748>
neg    %eax
mov    %eax,(%esp)
mov    %eax,%esi
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,(%esp)
mov    %eax,%ebp
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18ba4(%ebx),%edx
mov    %ebp,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1907c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x19090(%ebx),%eax
jmp    80834a6 <dbus_shutdown+0x47c6>
mov    %eax,%esi
neg    %esi
mov    %esi,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,(%esp)
mov    %eax,%ebp
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18bcc(%ebx),%edx
mov    %ebp,0xc(%esp)
jmp    808347a <dbus_shutdown+0x479a>
mov    0x1c(%esp),%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%ebp
je     8083522 <dbus_shutdown+0x4842>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%eax
mov    %ebp,(%eax)
mov    0x1c(%esp),%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x18b78(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
cmp    $0x3,%esi
ja     808359f <dbus_shutdown+0x48bf>
nop
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
add    $0x2c,%esp
mov    $0xffffffff,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
shl    $0x2,%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%ebp
je     8083522 <dbus_shutdown+0x4842>
mov    $0x3,%edi
jmp    808358b <dbus_shutdown+0x48ab>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,-0xc(%ebp,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
je     8083510 <dbus_shutdown+0x4830>
mov    0x44(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
jne    8083580 <dbus_shutdown+0x48a0>
mov    $0x3,%edi
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
add    $0x1,%edi
movl   $0x0,0x4(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
cmp    %esi,%edi
jb     80835a8 <dbus_shutdown+0x48c8>
jmp    8083548 <dbus_shutdown+0x4868>
jmp    80835d0 <dbus_shutdown+0x48f0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %edx,%edx
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x34a25,%ebx
sub    $0x6c,%esp
mov    0x90(%esp),%ebp
lea    0x40(%esp),%eax
movl   $0xffffffff,0x28(%esp)
movl   $0x0,(%eax,%edx,1)
add    $0x4,%edx
cmp    $0x20,%edx
jb     80835f7 <dbus_shutdown+0x4917>
mov    0x88(%esp),%ecx
test   %ecx,%ecx
je     8083633 <dbus_shutdown+0x4953>
mov    0x88(%esp),%esi
mov    $0x5,%ecx
lea    -0x1905e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8083750 <dbus_shutdown+0x4a70>
movl   $0x2,0x44(%esp)
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
lea    0x2c(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x6,0x4c(%esp)
movl   $0x1,0x48(%esp)
mov    %eax,0x4(%esp)
mov    0x80(%esp),%eax
movl   $0x20,0x40(%esp)
mov    %eax,(%esp)
call   804d990 <getaddrinfo@plt>
test   %eax,%eax
mov    %eax,%esi
jne    80837f8 <dbus_shutdown+0x4b18>
mov    0x2c(%esp),%edi
test   %edi,%edi
je     80837c8 <dbus_shutdown+0x4ae8>
movl   $0x0,0x1c(%esp)
lea    0x28(%esp),%esi
mov    0x4(%edi),%edx
mov    %esi,%eax
mov    %ebp,(%esp)
call   8082ac0 <dbus_shutdown+0x3de0>
test   %eax,%eax
je     80837b0 <dbus_shutdown+0x4ad0>
mov    0x14(%edi),%eax
mov    0x10(%edi),%edx
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804daa0 <connect@plt>
test   %eax,%eax
js     8083778 <dbus_shutdown+0x4a98>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d8a0 <freeaddrinfo@plt>
mov    0x28(%esp),%eax
cmp    $0xffffffff,%eax
je     8083880 <dbus_shutdown+0x4ba0>
mov    0x8c(%esp),%edx
test   %edx,%edx
je     808372f <dbus_shutdown+0x4a4f>
mov    0x8c(%esp),%eax
lea    0x30(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x28(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80940d0 <dbus_bus_remove_match+0x2ea0>
mov    %esi,(%esp)
mov    %eax,%edi
call   807f3d0 <dbus_shutdown+0x6f0>
test   %edi,%edi
je     80837d8 <dbus_shutdown+0x4af8>
mov    0x28(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
je     80837d8 <dbus_shutdown+0x4af8>
mov    0x28(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x88(%esp),%esi
mov    $0x5,%ecx
lea    -0x19059(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    808384f <dbus_shutdown+0x4b6f>
movl   $0xa,0x44(%esp)
jmp    8083633 <dbus_shutdown+0x4953>
nop
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    0x1c(%edi),%edi
movl   $0xffffffff,0x28(%esp)
test   %edi,%edi
jne    8083693 <dbus_shutdown+0x49b3>
jmp    80836ca <dbus_shutdown+0x49ea>
nop
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d8a0 <freeaddrinfo@plt>
mov    $0xffffffff,%eax
jmp    8083747 <dbus_shutdown+0x4a67>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
movl   $0x0,0x1c(%esp)
jmp    80836ce <dbus_shutdown+0x49ee>
nop
mov    0x28(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    $0xffffffff,%eax
jmp    8083747 <dbus_shutdown+0x4a67>
xchg   %ax,%ax
mov    %eax,(%esp)
call   804d780 <gai_strerror@plt>
mov    %eax,%edi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x84(%esp),%ecx
lea    -0x18b50(%ebx),%edx
mov    %esi,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x10(%esp)
mov    0x80(%esp),%ecx
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
call   806b100 <dbus_set_error>
mov    $0xffffffff,%eax
jmp    8083747 <dbus_shutdown+0x4a67>
mov    0x88(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    -0x19054(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806b100 <dbus_set_error>
mov    $0xffffffff,%eax
jmp    8083747 <dbus_shutdown+0x4a67>
mov    0x1c(%esp),%edi
mov    %edi,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %edi,(%esp)
mov    %eax,%esi
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x84(%esp),%ecx
lea    -0x18b20(%ebx),%edx
mov    %esi,0x14(%esp)
mov    %edx,0x8(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x10(%esp)
mov    0x80(%esp),%ecx
mov    %eax,0x4(%esp)
mov    %ecx,0xc(%esp)
call   806b100 <dbus_set_error>
mov    $0xffffffff,%eax
jmp    8083747 <dbus_shutdown+0x4a67>
push   %ebx
sub    $0x28,%esp
mov    0x3c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x34723,%ebx
movl   $0x0,0xc(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80835d0 <dbus_shutdown+0x48f0>
add    $0x28,%esp
pop    %ebx
ret
push   %ebp
xor    %edx,%edx
push   %edi
push   %esi
push   %ebx
sub    $0x14c,%esp
mov    0x160(%esp),%eax
mov    0x16c(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x346d1,%ebx
mov    0x170(%esp),%edi
mov    %eax,0x38(%esp)
mov    0x164(%esp),%eax
mov    %ecx,0x30(%esp)
mov    0x174(%esp),%ecx
mov    %edi,0x4c(%esp)
movl   $0x0,(%edi)
mov    %eax,0x24(%esp)
mov    0x168(%esp),%eax
mov    %ecx,0x2c(%esp)
mov    %gs:0x14,%ecx
mov    %ecx,0x13c(%esp)
xor    %ecx,%ecx
lea    0x68(%esp),%ecx
mov    %ecx,0x3c(%esp)
mov    0x3c(%esp),%edi
movl   $0x0,(%edi,%edx,1)
add    $0x4,%edx
cmp    $0x20,%edx
jb     8083983 <dbus_shutdown+0x4ca3>
test   %eax,%eax
je     80839b7 <dbus_shutdown+0x4cd7>
mov    $0x5,%ecx
mov    %eax,%esi
lea    -0x1905e(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8083cc8 <dbus_shutdown+0x4fe8>
movl   $0x2,0x6c(%esp)
lea    0x58(%esp),%eax
xor    %edi,%edi
mov    %eax,0x44(%esp)
lea    -0x1903a(%ebx),%eax
movl   $0x6,0x74(%esp)
movl   $0x1,0x70(%esp)
movl   $0x21,0x68(%esp)
movl   $0x0,0x20(%esp)
mov    %eax,0x40(%esp)
mov    0x44(%esp),%eax
movl   $0x0,0x58(%esp)
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804d990 <getaddrinfo@plt>
test   %eax,%eax
mov    %eax,0x48(%esp)
jne    8083eb2 <dbus_shutdown+0x51d2>
mov    0x58(%esp),%esi
test   %esi,%esi
je     8083eb2 <dbus_shutdown+0x51d2>
lea    0x60(%esp),%eax
mov    %eax,0x34(%esp)
jmp    8083aef <dbus_shutdown+0x4e0f>
lea    0x0(%esi,%eiz,1),%esi
mov    0x60(%esp),%eax
movl   $0x1e,0x4(%esp)
mov    %eax,(%esp)
call   804d8b0 <listen@plt>
test   %eax,%eax
js     8083cf0 <dbus_shutdown+0x5010>
mov    0x20(%esp),%eax
mov    %edi,(%esp)
lea    0x1(%eax),%ebp
lea    0x0(,%ebp,4),%ecx
mov    %ecx,0x4(%esp)
mov    %ecx,0x28(%esp)
call   807ebe0 <dbus_realloc>
mov    0x28(%esp),%ecx
test   %eax,%eax
mov    %eax,%edx
je     8083d68 <dbus_shutdown+0x5088>
mov    0x60(%esp),%eax
mov    0x30(%esp),%edi
mov    %eax,-0x4(%edx,%ecx,1)
mov    0x4(%edi),%edi
test   %edi,%edi
jne    8083ade <dbus_shutdown+0x4dfe>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
je     8083db8 <dbus_shutdown+0x50d8>
mov    0x24(%esp),%ecx
cmpb   $0x30,(%ecx)
jne    8083aba <dbus_shutdown+0x4dda>
cmpb   $0x0,0x1(%ecx)
je     8083db8 <dbus_shutdown+0x50d8>
mov    0x24(%esp),%eax
mov    %edx,0x20(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
mov    0x20(%esp),%edx
test   %eax,%eax
je     8083c37 <dbus_shutdown+0x4f57>
mov    0x1c(%esi),%esi
mov    %edx,%edi
mov    %ebp,0x20(%esp)
test   %esi,%esi
je     8083ba0 <dbus_shutdown+0x4ec0>
mov    0x2c(%esp),%eax
mov    0x4(%esi),%edx
movl   $0xffffffff,0x60(%esp)
mov    %eax,(%esp)
mov    0x34(%esp),%eax
call   8082ac0 <dbus_shutdown+0x3de0>
test   %eax,%eax
je     8083c60 <dbus_shutdown+0x4f80>
lea    0x5c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x60(%esp),%eax
movl   $0x4,0x10(%esp)
movl   $0x2,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
movl   $0x1,0x5c(%esp)
call   804cff0 <setsockopt@plt>
cmp    $0xffffffff,%eax
je     8083bf8 <dbus_shutdown+0x4f18>
mov    0x14(%esi),%eax
mov    0x10(%esi),%edx
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   804d6b0 <bind@plt>
test   %eax,%eax
jns    8083a40 <dbus_shutdown+0x4d60>
call   804d730 <__errno_location@plt>
mov    (%eax),%ebp
mov    0x60(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
cmp    $0x62,%ebp
jne    8083e70 <dbus_shutdown+0x5190>
mov    0x1c(%esi),%esi
test   %esi,%esi
jne    8083aef <dbus_shutdown+0x4e0f>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   804d8a0 <freeaddrinfo@plt>
mov    0x20(%esp),%edx
movl   $0x0,0x58(%esp)
test   %edx,%edx
je     8083fb2 <dbus_shutdown+0x52d2>
mov    0x2c(%esp),%ebp
xor    %esi,%esi
xchg   %ax,%ax
mov    %ebp,0x4(%esp)
mov    (%edi,%esi,4),%eax
mov    %eax,(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
je     8083c60 <dbus_shutdown+0x4f80>
add    $0x1,%esi
cmp    0x20(%esp),%esi
jl     8083bc8 <dbus_shutdown+0x4ee8>
mov    0x4c(%esp),%eax
mov    %edi,(%eax)
mov    0x20(%esp),%eax
jmp    8083ca7 <dbus_shutdown+0x4fc7>
nop
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    0x38(%esp),%ecx
mov    0x40(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%edx
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x18af8(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    8083b4f <dbus_shutdown+0x4e6f>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%edx
mov    %edx,%edi
mov    %ebp,0x20(%esp)
nop
mov    0x58(%esp),%eax
test   %eax,%eax
je     8083c70 <dbus_shutdown+0x4f90>
mov    %eax,(%esp)
call   804d8a0 <freeaddrinfo@plt>
mov    0x20(%esp),%eax
xor    %esi,%esi
mov    0x20(%esp),%ebp
test   %eax,%eax
je     8083c9a <dbus_shutdown+0x4fba>
xchg   %ax,%ax
movl   $0x0,0x4(%esp)
mov    (%edi,%esi,4),%eax
add    $0x1,%esi
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
cmp    %ebp,%esi
jne    8083c80 <dbus_shutdown+0x4fa0>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    $0xffffffff,%eax
mov    0x13c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8083ff5 <dbus_shutdown+0x5315>
add    $0x14c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    $0x5,%ecx
mov    %eax,%esi
lea    -0x19059(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    8083f84 <dbus_shutdown+0x52a4>
movl   $0xa,0x6c(%esp)
jmp    80839b7 <dbus_shutdown+0x4cd7>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%esi
mov    0x60(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    %esi,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
lea    -0x1903a(%ebx),%edx
mov    %esi,(%esp)
mov    %eax,%ebp
mov    0x38(%esp),%eax
test   %eax,%eax
cmovne %eax,%edx
mov    %edx,0x28(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x28(%esp),%edx
mov    0x24(%esp),%ecx
mov    %ebp,0x14(%esp)
mov    %edx,0xc(%esp)
lea    -0x18aac(%ebx),%edx
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8083c60 <dbus_shutdown+0x4f80>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%esi
mov    0x60(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    %esi,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,(%esp)
mov    %eax,%ebp
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18a84(%ebx),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8083c60 <dbus_shutdown+0x4f80>
lea    0x64(%esp),%ecx
lea    0xbc(%esp),%edi
mov    %ecx,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x20(%esp)
movl   $0x80,0x64(%esp)
call   804d930 <getsockname@plt>
cmp    $0xffffffff,%eax
je     8083f15 <dbus_shutdown+0x5235>
mov    0x64(%esp),%eax
lea    0x8a(%esp),%esi
movl   $0x1,0x18(%esp)
movl   $0x32,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   804d2a0 <getnameinfo@plt>
test   %eax,%eax
mov    %eax,0x48(%esp)
jne    8083f15 <dbus_shutdown+0x5235>
mov    0x30(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8083c37 <dbus_shutdown+0x4f57>
mov    0x30(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x24(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   804d8a0 <freeaddrinfo@plt>
mov    0x20(%esp),%edi
mov    %ebp,0x20(%esp)
jmp    80839eb <dbus_shutdown+0x4d0b>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
lea    -0x1903a(%ebx),%esi
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %ebp,(%esp)
mov    %eax,0x28(%esp)
mov    0x38(%esp),%eax
test   %eax,%eax
cmovne %eax,%esi
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x28(%esp),%edx
mov    %edx,0x14(%esp)
mov    0x24(%esp),%ecx
lea    -0x18ad0(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %ecx,0x10(%esp)
jmp    8083d4a <dbus_shutdown+0x506a>
mov    0x48(%esp),%eax
lea    -0x1903a(%ebx),%esi
mov    %eax,(%esp)
call   804d780 <gai_strerror@plt>
mov    0x38(%esp),%edx
test   %edx,%edx
cmovne %edx,%esi
mov    %eax,%ebp
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x48(%esp),%ecx
lea    -0x18b50(%ebx),%edx
mov    %ebp,0x14(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0x18(%esp)
mov    0x24(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8083c60 <dbus_shutdown+0x4f80>
mov    0x48(%esp),%eax
lea    -0x1903a(%ebx),%esi
mov    0x20(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x20(%esp)
call   804d780 <gai_strerror@plt>
mov    0x38(%esp),%edx
test   %edx,%edx
cmovne %edx,%esi
mov    %eax,%edi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x48(%esp),%ecx
mov    %edi,0x14(%esp)
mov    0x24(%esp),%edi
mov    %esi,0xc(%esp)
mov    %ecx,0x18(%esp)
lea    -0x18a58(%ebx),%ecx
mov    %edi,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %ecx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%edx
jmp    8083c59 <dbus_shutdown+0x4f79>
mov    %eax,0xc(%esp)
lea    -0x19054(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    $0xffffffff,%eax
jmp    8083ca7 <dbus_shutdown+0x4fc7>
call   804d730 <__errno_location@plt>
lea    -0x1903a(%ebx),%esi
movl   $0x62,(%eax)
movl   $0x62,(%esp)
mov    %eax,0x28(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    0x28(%esp),%edx
mov    %eax,%ebp
mov    0x38(%esp),%eax
test   %eax,%eax
cmovne %eax,%esi
mov    (%edx),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    %ebp,0x14(%esp)
jmp    8083e9b <dbus_shutdown+0x51bb>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33ffa,%ebx
sub    $0x18,%esp
mov    -0x18(%ebx),%eax
mov    (%eax),%eax
movl   $0x40,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x18a30(%ebx),%eax
mov    %eax,(%esp)
call   804d3c0 <fwrite@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33fb8,%ebx
sub    $0x20,%esp
lea    0x18(%esp),%esi
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80001,0x4(%esp)
movl   $0x1,(%esp)
call   804d2c0 <socketpair@plt>
test   %eax,%eax
js     80840a8 <dbus_shutdown+0x53c8>
mov    0x38(%esp),%eax
test   %eax,%eax
je     80840f0 <dbus_shutdown+0x5410>
mov    0x18(%esp),%edx
mov    0x30(%esp),%eax
mov    %edx,(%eax)
mov    0x34(%esp),%eax
mov    0x1c(%esp),%edx
mov    %edx,(%eax)
mov    $0x1,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%edx
mov    %eax,%edi
cmp    $0x5b,%edx
je     8084180 <dbus_shutdown+0x54a0>
cmp    $0x16,%edx
je     8084180 <dbus_shutdown+0x54a0>
mov    %edx,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x189ec(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    808409a <dbus_shutdown+0x53ba>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
je     8084124 <dbus_shutdown+0x5444>
mov    0x1c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
jne    8084081 <dbus_shutdown+0x53a1>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x189c8(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
mov    0x1c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   804d2c0 <socketpair@plt>
test   %eax,%eax
js     80841c1 <dbus_shutdown+0x54e1>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
jmp    8084079 <dbus_shutdown+0x5399>
mov    (%edi),%edx
jmp    80840c3 <dbus_shutdown+0x53e3>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x33e21,%ebx
mov    0x450(%esp),%eax
lea    0x2c(%esp),%edi
mov    0x454(%esp),%edx
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
mov    %eax,0x18(%esp)
mov    %edx,0x1c(%esp)
call   804d7a0 <__vsnprintf_chk@plt>
cmp    $0x400,%eax
mov    %eax,%esi
je     80842d0 <dbus_shutdown+0x55f0>
test   %eax,%eax
jns    8084309 <dbus_shutdown+0x5629>
mov    $0x400,%esi
lea    0x0(%esi,%eiz,1),%esi
add    %esi,%esi
mov    %esi,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%ebp
je     80842c8 <dbus_shutdown+0x55e8>
mov    0x1c(%esp),%eax
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x18(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x10(%esp)
call   804d7a0 <__vsnprintf_chk@plt>
mov    %ebp,(%esp)
mov    %eax,%edi
call   807ebb0 <dbus_free>
cmp    %edi,%esi
je     8084258 <dbus_shutdown+0x5578>
test   %edi,%edi
js     8084258 <dbus_shutdown+0x5578>
mov    %edi,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    808430d <dbus_shutdown+0x562d>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    80842a8 <dbus_shutdown+0x55c8>
nop
mov    0x1c(%esp),%eax
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x14(%esp)
mov    0x18(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   804d7a0 <__vsnprintf_chk@plt>
cmp    $0x1,%eax
je     808424c <dbus_shutdown+0x556c>
mov    %esi,%eax
jmp    80842a8 <dbus_shutdown+0x55c8>
lea    0x0(%esi),%esi
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33cda,%ebx
sub    $0x18,%esp
mov    0x8f0(%ebx),%eax
test   %eax,%eax
je     8084340 <dbus_shutdown+0x5660>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
lea    -0x19033(%ebx),%eax
mov    %eax,(%esp)
call   804d4b0 <getenv@plt>
test   %eax,%eax
mov    %eax,0x8f0(%ebx)
jne    8084339 <dbus_shutdown+0x5659>
lea    -0x1902c(%ebx),%eax
mov    %eax,(%esp)
call   804d4b0 <getenv@plt>
test   %eax,%eax
mov    %eax,0x8f0(%ebx)
jne    8084339 <dbus_shutdown+0x5659>
lea    -0x19028(%ebx),%eax
mov    %eax,(%esp)
call   804d4b0 <getenv@plt>
test   %eax,%eax
jne    8084388 <dbus_shutdown+0x56a8>
lea    -0x19038(%ebx),%eax
mov    %eax,0x8f0(%ebx)
jmp    8084339 <dbus_shutdown+0x5659>
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33c67,%ebx
sub    $0x2c,%esp
lea    0x10(%esp),%esi
mov    0x40(%esp),%ebp
mov    %esi,(%esp)
mov    0x48(%esp),%edi
lea    -0x19023(%ebx),%eax
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x44(%esp),%eax
mov    %edi,0xc(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   807d020 <dbus_watch_handle+0x1460>
mov    $0x1,%edx
test   %eax,%eax
jne    8084415 <dbus_shutdown+0x5735>
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
lea    -0x1900a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807d020 <dbus_watch_handle+0x1460>
mov    %eax,%edx
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33bda,%ebx
sub    $0x18,%esp
lea    -0x1899c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1f938(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
mov    $0x1,%eax
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33b87,%ebx
sub    $0x4c,%esp
lea    0x20(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
jne    80844a0 <dbus_shutdown+0x57c0>
add    $0x4c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x18ffa(%ebx),%eax
mov    %eax,(%esp)
call   8087250 <dbus_shutdown+0x8570>
mov    %eax,%edi
lea    -0x18fec(%ebx),%eax
mov    %eax,(%esp)
call   8087250 <dbus_shutdown+0x8570>
test   %edi,%edi
mov    %eax,%ebp
je     8084520 <dbus_shutdown+0x5840>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
lea    -0x1a0b8(%ebx),%edi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
test   %ebp,%ebp
je     80845d8 <dbus_shutdown+0x58f8>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    8084578 <dbus_shutdown+0x5898>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   8086540 <dbus_shutdown+0x7860>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
lea    -0x18fde(%ebx),%eax
lea    0x30(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
jmp    80844d4 <dbus_shutdown+0x57f4>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
lea    -0x18fd0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
mov    0x60(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x18fa8(%ebx),%eax
mov    %eax,0x4(%esp)
call   8087320 <dbus_shutdown+0x8640>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%edx
jmp    8084494 <dbus_shutdown+0x57b4>
xchg   %ax,%ax
lea    -0x18fc5(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8084508 <dbus_shutdown+0x5828>
jmp    8084588 <dbus_shutdown+0x58a8>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x339f9,%ebx
sub    $0x24,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
lea    -0x187c0(%ebx),%eax
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x30(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x18f97(%ebx),%eax
mov    %eax,0x4(%esp)
call   8087320 <dbus_shutdown+0x8640>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x339aa,%ebx
sub    $0x18,%esp
lea    -0x18f7f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3397a,%ebx
sub    $0x18,%esp
lea    -0x18f67(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3394a,%ebx
sub    $0x8,%esp
call   8086100 <dbus_shutdown+0x7420>
add    $0x8,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33928,%ebx
sub    $0x30,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
jne    8084700 <dbus_shutdown+0x5a20>
add    $0x30,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806a680 <dbus_connection_get_outgoing_unix_fds+0x2e0>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80865a0 <dbus_shutdown+0x78c0>
test   %eax,%eax
je     8084770 <dbus_shutdown+0x5a90>
lea    -0x18f4e(%ebx),%eax
lea    0x20(%esp),%edi
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     8084770 <dbus_shutdown+0x5a90>
mov    0x40(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x8(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
jne    8084788 <dbus_shutdown+0x5aa8>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x30,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%edx
jmp    80846f3 <dbus_shutdown+0x5a13>
lea    0x0(%esi),%esi
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3383a,%ebx
sub    $0x8,%esp
call   804d730 <__errno_location@plt>
cmpl   $0xb,(%eax)
sete   %al
add    $0x8,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x33802,%ebx
mov    (%eax),%esi
mov    %esi,(%esp)
call   804d1c0 <rmdir@plt>
mov    $0x1,%edx
test   %eax,%eax
je     8084850 <dbus_shutdown+0x5b70>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %esi,0xc(%esp)
mov    %eax,0x10(%esp)
lea    -0x18958(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %edx,%edx
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x20,%ecx
push   %ebx
sub    $0xa4,%esp
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
lea    0x1c(%esp),%edx
mov    %edx,%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x33779,%ebx
movl   $0x80,0x18(%esp)
rep stos %eax,%es:(%edi)
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xb0(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d930 <getsockname@plt>
test   %eax,%eax
js     80848e0 <dbus_shutdown+0x5c00>
xor    %eax,%eax
cmpw   $0x1,0x1c(%esp)
sete   %al
mov    0x9c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    80848e4 <dbus_shutdown+0x5c04>
add    $0xa4,%esp
pop    %ebx
pop    %edi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80848c1 <dbus_shutdown+0x5be1>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x336f7,%ebx
sub    $0x14c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x13c(%esp)
xor    %eax,%eax
lea    -0x18f3f(%ebx),%eax
mov    %eax,(%esp)
call   804db10 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     8084a23 <dbus_shutdown+0x5d43>
lea    0x2c(%esp),%eax
lea    0x28(%esp),%ebp
lea    0x30(%esp),%edi
mov    %eax,0x1c(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x2c(%esp)
call   804d830 <readdir_r@plt>
test   %eax,%eax
jne    8084a00 <dbus_shutdown+0x5d20>
mov    0x28(%esp),%edx
test   %edx,%edx
je     8084a00 <dbus_shutdown+0x5d20>
cmpb   $0x2e,0xb(%edx)
mov    %edx,0x14(%esp)
je     8084950 <dbus_shutdown+0x5c70>
call   804d730 <__errno_location@plt>
mov    0x14(%esp),%edx
add    $0xb,%edx
movl   $0x0,(%eax)
mov    %eax,0x18(%esp)
mov    0x1c(%esp),%eax
mov    %edx,(%esp)
movl   $0xa,0x8(%esp)
mov    %eax,0x4(%esp)
call   804da90 <strtol@plt>
mov    0x18(%esp),%ecx
mov    %eax,%edx
mov    (%ecx),%eax
test   %eax,%eax
jne    8084950 <dbus_shutdown+0x5c70>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8084950 <dbus_shutdown+0x5c70>
cmpb   $0x0,(%eax)
jne    8084950 <dbus_shutdown+0x5c70>
cmp    $0x2,%edx
jle    8084950 <dbus_shutdown+0x5c70>
mov    %esi,(%esp)
mov    %edx,0x14(%esp)
call   804d130 <dirfd@plt>
mov    0x14(%esp),%edx
cmp    %eax,%edx
je     8084950 <dbus_shutdown+0x5c70>
mov    %edx,(%esp)
call   804dae0 <close@plt>
jmp    8084950 <dbus_shutdown+0x5c70>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   804daf0 <closedir@plt>
mov    0x13c(%esp),%eax
xor    %gs:0x14,%eax
jne    8084a58 <dbus_shutdown+0x5d78>
add    $0x14c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x4,(%esp)
call   804d250 <sysconf@plt>
test   %eax,%eax
mov    %eax,%edi
js     8084a51 <dbus_shutdown+0x5d71>
cmp    $0x3,%eax
jle    8084a08 <dbus_shutdown+0x5d28>
mov    $0x3,%esi
nop
mov    %esi,(%esp)
add    $0x1,%esi
call   804dae0 <close@plt>
cmp    %esi,%edi
jg     8084a40 <dbus_shutdown+0x5d60>
jmp    8084a08 <dbus_shutdown+0x5d28>
mov    $0x400,%edi
jmp    8084a3a <dbus_shutdown+0x5d5a>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33598,%ebx
sub    $0x30,%esp
lea    0x28(%esp),%esi
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x80001,0x4(%esp)
movl   $0x1,(%esp)
call   804d2c0 <socketpair@plt>
test   %eax,%eax
js     8084ae0 <dbus_shutdown+0x5e00>
call   804d840 <fork@plt>
test   %eax,%eax
js     8084b87 <dbus_shutdown+0x5ea7>
je     8084bec <dbus_shutdown+0x5f0c>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8082d80 <dbus_shutdown+0x40a0>
test   %eax,%eax
mov    0x28(%esp),%eax
je     8084b75 <dbus_shutdown+0x5e95>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804d730 <__errno_location@plt>
mov    (%eax),%edx
mov    %eax,%edi
cmp    $0x5b,%edx
je     8084b30 <dbus_shutdown+0x5e50>
cmp    $0x16,%edx
je     8084b30 <dbus_shutdown+0x5e50>
mov    %edx,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18934(%ebx),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    $0xffffffff,%eax
jmp    8084ad8 <dbus_shutdown+0x5df8>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x1,(%esp)
call   804d2c0 <socketpair@plt>
test   %eax,%eax
js     8084c93 <dbus_shutdown+0x5fb3>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
jmp    8084a99 <dbus_shutdown+0x5db9>
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    $0xffffffff,%eax
jmp    8084ad8 <dbus_shutdown+0x5df8>
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x40(%esp),%ecx
lea    -0x18910(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    $0xffffffff,%eax
jmp    8084ad8 <dbus_shutdown+0x5df8>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    0x2c(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d040 <dup2@plt>
mov    0x2c(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804d040 <dup2@plt>
mov    0x2c(%esp),%eax
cmp    $0x1,%eax
jbe    8084c31 <dbus_shutdown+0x5f51>
mov    %eax,(%esp)
call   804dae0 <close@plt>
call   8084900 <dbus_shutdown+0x5c20>
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804d310 <execvp@plt>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x40(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x188f0(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x18(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   804d110 <_exit@plt>
mov    (%edi),%edx
jmp    8084af3 <dbus_shutdown+0x5e13>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x33355,%ebx
sub    $0x15c,%esp
lea    0x50(%esp),%edi
mov    %edi,(%esp)
lea    0xd0(%esp),%ebp
mov    %edx,0x14(%esp)
movl   $0xffffffff,0x30(%esp)
movl   $0xffffffff,0x34(%esp)
movl   $0xffffffff,0x38(%esp)
movl   $0xffffffff,0x3c(%esp)
call   804d850 <sigemptyset@plt>
movl   $0x11,0x4(%esp)
mov    %edi,(%esp)
call   804d690 <sigaddset@plt>
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
movl   $0x0,(%esp)
call   804d120 <sigprocmask@plt>
mov    0x4(%esi),%eax
mov    %eax,0x18(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   804d7c0 <pipe@plt>
test   %eax,%eax
js     8084e50 <dbus_shutdown+0x6170>
lea    0x38(%esp),%eax
mov    %eax,(%esp)
call   804d7c0 <pipe@plt>
test   %eax,%eax
js     8084e50 <dbus_shutdown+0x6170>
call   804d840 <fork@plt>
test   %eax,%eax
mov    %eax,%edi
js     8085020 <dbus_shutdown+0x6340>
jne    8084f00 <dbus_shutdown+0x6220>
lea    -0x18f1f(%ebx),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804d570 <open@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     8084e3e <dbus_shutdown+0x615e>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
movl   $0x0,(%esp)
call   804dae0 <close@plt>
movl   $0x1,(%esp)
call   804dae0 <close@plt>
movl   $0x2,(%esp)
call   804dae0 <close@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804d040 <dup2@plt>
cmp    $0xffffffff,%eax
je     8084e3e <dbus_shutdown+0x615e>
mov    0x34(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804d040 <dup2@plt>
cmp    $0xffffffff,%eax
je     8084e3e <dbus_shutdown+0x615e>
mov    0x3c(%esp),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804d040 <dup2@plt>
cmp    $0xffffffff,%eax
je     8084e3e <dbus_shutdown+0x615e>
call   8084900 <dbus_shutdown+0x5c20>
lea    0x8d8(%ebx),%edi
lea    -0x18f31(%ebx),%esi
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x2,(%esp)
call   804d120 <sigprocmask@plt>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804d670 <execv@plt>
lea    0x6(%esi),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d310 <execvp@plt>
movl   $0x1,(%esp)
call   804d110 <_exit@plt>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18f31(%ebx),%edx
mov    %edx,0xc(%esp)
lea    -0x188cc(%ebx),%edx
mov    %edi,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
xor    %edi,%edi
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x2,(%esp)
call   804d120 <sigprocmask@plt>
mov    0x30(%esp),%eax
cmp    $0xffffffff,%eax
je     8084ec0 <dbus_shutdown+0x61e0>
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    0x34(%esp),%eax
cmp    $0xffffffff,%eax
je     8084ed1 <dbus_shutdown+0x61f1>
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    0x38(%esp),%eax
cmp    $0xffffffff,%eax
je     8084ee2 <dbus_shutdown+0x6202>
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    0x3c(%esp),%eax
cmp    $0xffffffff,%eax
je     8084ef3 <dbus_shutdown+0x6213>
mov    %eax,(%esp)
call   804dae0 <close@plt>
add    $0x15c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <close@plt>
movl   $0xffffffff,0x34(%esp)
movl   $0xffffffff,0x3c(%esp)
mov    0x30(%esp),%eax
movl   $0x400,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80818b0 <dbus_shutdown+0x2bd0>
test   %eax,%eax
jg     8084f28 <dbus_shutdown+0x6248>
lea    0x2c(%esp),%eax
mov    %esi,0x1c(%esp)
mov    %eax,%esi
jmp    8084f5a <dbus_shutdown+0x627a>
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    8084f73 <dbus_shutdown+0x6293>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804d400 <waitpid@plt>
cmp    $0xffffffff,%eax
je     8084f50 <dbus_shutdown+0x6270>
mov    0x2c(%esp),%eax
mov    0x1c(%esp),%esi
test   $0x7f,%al
jne    8084f8f <dbus_shutdown+0x62af>
movzbl %ah,%eax
mov    $0x1,%edi
test   %eax,%eax
je     8084e97 <dbus_shutdown+0x61b7>
lea    0x40(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8085058 <dbus_shutdown+0x6378>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x38(%esp),%eax
movl   $0x400,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80818b0 <dbus_shutdown+0x2bd0>
test   %eax,%eax
jg     8084fa8 <dbus_shutdown+0x62c8>
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0x44(%esp),%eax
test   %eax,%eax
jle    8085088 <dbus_shutdown+0x63a8>
mov    0x40(%esp),%eax
xor    %edi,%edi
mov    %eax,0x10(%esp)
lea    -0x18f31(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x188a4(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21a7c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8084e97 <dbus_shutdown+0x61b7>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18f31(%ebx),%edx
mov    %edx,0xc(%esp)
lea    -0x18910(%ebx),%edx
mov    %edi,0x10(%esp)
jmp    8084e81 <dbus_shutdown+0x61a1>
xchg   %ax,%ax
lea    0x34c(%ebx),%eax
xor    %edi,%edi
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8084e97 <dbus_shutdown+0x61b7>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x18f31(%ebx),%eax
xor    %edi,%edi
mov    %eax,0xc(%esp)
lea    -0x1886c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21a7c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8084e97 <dbus_shutdown+0x61b7>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x32f3a,%ebx
sub    $0x38,%esp
mov    0x8d4(%ebx),%eax
test   %eax,%eax
jne    8085148 <dbus_shutdown+0x6468>
lea    0x20(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esp),%eax
mov    %eax,(%esp)
call   804d8d0 <getresuid@plt>
test   %eax,%eax
je     8085153 <dbus_shutdown+0x6473>
call   804d270 <getuid@plt>
mov    %eax,0x18(%esp)
mov    %eax,0x20(%esp)
call   804d6d0 <getgid@plt>
mov    %eax,0x24(%esp)
mov    %eax,0x2c(%esp)
call   804d2d0 <geteuid@plt>
mov    %eax,0x1c(%esp)
call   804d360 <getegid@plt>
mov    %eax,0x28(%esp)
mov    0x18(%esp),%edx
mov    $0x1,%eax
cmp    0x1c(%esp),%edx
movl   $0x1,0x8d4(%ebx)
00
je     8085175 <dbus_shutdown+0x6495>
mov    %eax,0x8d0(%ebx)
lea    0x0(%esi,%eiz,1),%esi
mov    0x8d0(%ebx),%eax
add    $0x38,%esp
pop    %ebx
ret
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x24(%esp),%eax
mov    %eax,(%esp)
call   804d190 <getresgid@plt>
test   %eax,%eax
je     8085125 <dbus_shutdown+0x6445>
jmp    80850f9 <dbus_shutdown+0x6419>
cmp    0x20(%esp),%edx
jne    808513e <dbus_shutdown+0x645e>
mov    0x24(%esp),%edx
cmp    0x28(%esp),%edx
jne    808513e <dbus_shutdown+0x645e>
xor    %eax,%eax
cmp    0x2c(%esp),%edx
setne  %al
jmp    808513e <dbus_shutdown+0x645e>
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x32e68,%ebx
sub    $0x20,%esp
call   80850c0 <dbus_shutdown+0x63e0>
test   %eax,%eax
jne    8085248 <dbus_shutdown+0x6568>
lea    -0x18f15(%ebx),%eax
mov    %eax,(%esp)
call   8087250 <dbus_shutdown+0x8570>
test   %eax,%eax
je     80851c5 <dbus_shutdown+0x64e5>
cmpb   $0x0,(%eax)
jne    80851f0 <dbus_shutdown+0x6510>
lea    -0x18814(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1f938(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8085258 <dbus_shutdown+0x6578>
mov    %esi,(%esp)
call   807d360 <dbus_watch_handle+0x17a0>
test   %eax,%eax
jne    8085270 <dbus_shutdown+0x6590>
lea    0x34c(%ebx),%eax
xor    %edi,%edi
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x18838(%ebx),%eax
jmp    80851cb <dbus_shutdown+0x64eb>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
jmp    80851d5 <dbus_shutdown+0x64f5>
nop
lea    -0x18f2b(%ebx),%eax
mov    0x38(%esp),%edx
mov    %eax,0x8d8(%ebx)
lea    -0x18f0d(%ebx),%eax
mov    %eax,0x8dc(%ebx)
mov    0x10(%esp),%eax
movl   $0x0,0x8ec(%ebx)
00
mov    %eax,0x8e0(%ebx)
lea    -0x18f00(%ebx),%eax
mov    %eax,0x8e4(%ebx)
lea    -0x18ef0(%ebx),%eax
mov    %eax,0x8e8(%ebx)
mov    0x34(%esp),%eax
call   8084ca0 <dbus_shutdown+0x5fc0>
mov    %eax,%edi
jmp    8085230 <dbus_shutdown+0x6550>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x32d29,%ebx
sub    $0x14,%esp
movl   $0x18,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%esi
je     8085318 <dbus_shutdown+0x6638>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d1a0 <pthread_mutex_init@plt>
sub    $0xb,%eax
cmp    $0x1,%eax
jbe    8085320 <dbus_shutdown+0x6640>
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    808530c <dbus_shutdown+0x662c>
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    808530c <dbus_shutdown+0x662c>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x32cc7,%ebx
sub    $0x2c,%esp
movl   $0x18,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x1c(%esp)
xor    %eax,%eax
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%edi
je     80853b8 <dbus_shutdown+0x66d8>
lea    0x18(%esp),%esi
mov    %esi,(%esp)
call   804d070 <pthread_mutexattr_init@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804db20 <pthread_mutexattr_settype@plt>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804d1a0 <pthread_mutex_init@plt>
mov    %esi,(%esp)
mov    %eax,%ebp
sub    $0xb,%ebp
call   804dad0 <pthread_mutexattr_destroy@plt>
cmp    $0x1,%ebp
jbe    80853bc <dbus_shutdown+0x66dc>
mov    %edi,%eax
mov    0x1c(%esp),%edx
xor    %gs:0x14,%edx
jne    80853c8 <dbus_shutdown+0x66e8>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    808539c <dbus_shutdown+0x66bc>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    808539c <dbus_shutdown+0x66bc>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x32c26,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   804d0e0 <pthread_mutex_destroy@plt>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x32bf6,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   804d0e0 <pthread_mutex_destroy@plt>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x32bc7,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d2e0 <pthread_mutex_lock@plt>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x32ba7,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d2e0 <pthread_mutex_lock@plt>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x32b87,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d010 <pthread_mutex_unlock@plt>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x32b67,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d010 <pthread_mutex_unlock@plt>
add    $0x18,%esp
pop    %ebx
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x32b47,%ebx
sub    $0x2c,%esp
movl   $0x30,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x1c(%esp)
xor    %eax,%eax
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%edi
je     8085548 <dbus_shutdown+0x6868>
lea    0x18(%esp),%esi
mov    %esi,(%esp)
call   804d260 <pthread_condattr_init@plt>
mov    0x8f4(%ebx),%eax
test   %eax,%eax
jne    8085530 <dbus_shutdown+0x6850>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   804d660 <pthread_cond_init@plt>
mov    %esi,(%esp)
mov    %eax,%ebp
sub    $0xb,%ebp
call   804d530 <pthread_condattr_destroy@plt>
cmp    $0x1,%ebp
jbe    808554c <dbus_shutdown+0x686c>
mov    %edi,%eax
mov    0x1c(%esp),%edx
xor    %gs:0x14,%edx
jne    8085559 <dbus_shutdown+0x6879>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804d790 <pthread_condattr_setclock@plt>
jmp    80854f6 <dbus_shutdown+0x6816>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    8085516 <dbus_shutdown+0x6836>
mov    %edi,(%esp)
nop
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8085516 <dbus_shutdown+0x6836>
call   80962d0 <dbus_bus_remove_match+0x50a0>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x32a96,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   804d8c0 <pthread_cond_destroy@plt>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x32a63,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d1d0 <pthread_cond_wait@plt>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x32a37,%ebx
sub    $0x2c,%esp
mov    0x48(%esp),%esi
mov    0x8f4(%ebx),%eax
test   %eax,%eax
je     8085698 <dbus_shutdown+0x69b8>
lea    0x18(%esp),%edi
mov    %edi,0x4(%esp)
movl   $0x1,(%esp)
call   804d9d0 <clock_gettime@plt>
mov    $0x10624dd3,%ecx
mov    0x18(%esp),%ebp
mov    %ecx,%eax
imull  0x1c(%esp)
mov    0x1c(%esp),%eax
mov    %ebp,0x10(%esp)
sar    $0x6,%edx
sar    $0x1f,%eax
sub    %eax,%edx
mov    %edx,0x14(%esp)
mov    %edx,%ecx
mov    %esi,%eax
mov    $0x10624dd3,%edx
imul   %edx
mov    %esi,%eax
sar    $0x1f,%eax
sar    $0x6,%edx
sub    %eax,%edx
add    %edx,%ebp
imul   $0x3e8,%edx,%edx
mov    %ebp,0x18(%esp)
sub    %edx,%esi
imul   $0x3e8,%esi,%esi
add    %esi,%ecx
imul   $0x3e8,%ecx,%ecx
cmp    $0x3b9aca00,%ecx
mov    %ecx,0x1c(%esp)
jle    8085669 <dbus_shutdown+0x6989>
add    $0x1,%ebp
sub    $0x3b9aca00,%ecx
mov    %ebp,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   804d880 <pthread_cond_timedwait@plt>
cmp    $0x6e,%eax
setne  %al
add    $0x2c,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x10(%esp),%eax
movl   $0x0,0x4(%esp)
lea    0x18(%esp),%edi
mov    %eax,(%esp)
call   804d200 <gettimeofday@plt>
mov    0x10(%esp),%ebp
mov    0x14(%esp),%ecx
jmp    808561d <dbus_shutdown+0x693d>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x32937,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d4a0 <pthread_cond_signal@plt>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3291a,%ebx
sub    $0x28,%esp
lea    0x18(%esp),%eax
mov    %eax,0x4(%esp)
movl   $0x1,(%esp)
call   804da80 <clock_getres@plt>
test   %eax,%eax
jne    8085711 <dbus_shutdown+0x6a31>
movl   $0x1,0x8f4(%ebx)
00
call   80850c0 <dbus_shutdown+0x63e0>
movl   $0x0,(%esp)
call   80788b0 <dbus_threads_init>
add    $0x28,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x328c7,%ebx
sub    $0x2c,%esp
lea    0x10(%esp),%esi
mov    0x40(%esp),%ebp
mov    %esi,(%esp)
mov    0x44(%esp),%edi
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8085818 <dbus_shutdown+0x6b38>
test   %edi,%edi
lea    -0x1a0ff(%ebx),%eax
jne    8085808 <dbus_shutdown+0x6b28>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80857d8 <dbus_shutdown+0x6af8>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80857d8 <dbus_shutdown+0x6af8>
mov    0x48(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   8082e60 <dbus_shutdown+0x4180>
test   %eax,%eax
mov    %eax,%edi
js     80857f6 <dbus_shutdown+0x6b16>
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807aef0 <dbus_threads_init_default+0x2300>
test   %eax,%eax
mov    %eax,%ebp
je     808583a <dbus_shutdown+0x6b5a>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1a10e(%ebx),%eax
jmp    808576c <dbus_shutdown+0x6a8c>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    80857ca <dbus_shutdown+0x6aea>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
jmp    80857f6 <dbus_shutdown+0x6b16>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x84(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x3277d,%ebx
mov    0x80(%esp),%ebp
mov    %eax,0x28(%esp)
mov    0x88(%esp),%eax
mov    %ebp,(%esp)
lea    -0x1a0f4(%ebx),%edi
mov    %eax,0x20(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x5c(%esp)
xor    %eax,%eax
call   808c930 <dbus_address_entry_get_method>
mov    $0x5,%ecx
mov    %edi,0x18(%esp)
mov    %eax,%esi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8085a00 <dbus_shutdown+0x6d20>
mov    $0x9,%ecx
mov    %eax,%esi
lea    -0x186e4(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
setb   %dl
xor    %eax,%eax
cmp    %dl,%cl
je     8085900 <dbus_shutdown+0x6c20>
mov    0x5c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8085d20 <dbus_shutdown+0x7040>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x1bf0a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   808c940 <dbus_address_entry_get_value>
test   %eax,%eax
mov    %eax,0x24(%esp)
je     8085c3f <dbus_shutdown+0x6f5f>
lea    -0x186c1(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x18(%esp)
lea    0x43(%esp),%edi
jmp    808593b <dbus_shutdown+0x6c5b>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
mov    0x18(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x19,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x19,0x4(%esp)
mov    %edi,(%esp)
call   804d050 <__snprintf_chk@plt>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   808c940 <dbus_address_entry_get_value>
test   %eax,%eax
jne    8085938 <dbus_shutdown+0x6c58>
lea    0x4(,%esi,4),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x1c(%esp)
jne    80859b2 <dbus_shutdown+0x6cd2>
jmp    8085a78 <dbus_shutdown+0x6d98>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx,%esi,4)
je     8085a70 <dbus_shutdown+0x6d90>
add    $0x1,%esi
mov    0x18(%esp),%eax
mov    %esi,0x14(%esp)
movl   $0x19,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x19,0x4(%esp)
mov    %edi,(%esp)
call   804d050 <__snprintf_chk@plt>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   808c940 <dbus_address_entry_get_value>
test   %eax,%eax
jne    8085998 <dbus_shutdown+0x6cb8>
test   %esi,%esi
jne    8085b20 <dbus_shutdown+0x6e40>
mov    0x24(%esp),%eax
jmp    8085998 <dbus_shutdown+0x6cb8>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1bf0a(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %ebp,(%esp)
mov    %eax,%esi
lea    -0x1a0ef(%ebx),%eax
mov    %eax,0x4(%esp)
call   808c940 <dbus_address_entry_get_value>
mov    %ebp,(%esp)
mov    %eax,%edi
lea    -0x186ed(%ebx),%eax
mov    %eax,0x4(%esp)
call   808c940 <dbus_address_entry_get_value>
test   %edi,%edi
je     8085aa0 <dbus_shutdown+0x6dc0>
lea    -0x18794(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   808c7a0 <dbus_shutdown+0xdac0>
mov    $0x2,%eax
jmp    80858e7 <dbus_shutdown+0x6c07>
xchg   %ax,%ax
mov    %edx,(%esp)
call   807ec20 <dbus_free_string_array>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    $0x3,%eax
jmp    80858e7 <dbus_shutdown+0x6c07>
test   %eax,%eax
je     8085ae5 <dbus_shutdown+0x6e05>
test   %esi,%esi
setne  %dl
test   %eax,%eax
jne    8085c72 <dbus_shutdown+0x6f92>
test   %dl,%dl
je     8085c76 <dbus_shutdown+0x6f96>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8085730 <dbus_shutdown+0x6a50>
mov    0x28(%esp),%ecx
mov    %eax,(%ecx)
test   %eax,%eax
je     8085a96 <dbus_shutdown+0x6db6>
mov    $0x1,%eax
jmp    80858e7 <dbus_shutdown+0x6c07>
test   %esi,%esi
jne    8085aa4 <dbus_shutdown+0x6dc4>
lea    -0x186f5(%ebx),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808c7a0 <dbus_shutdown+0xdac0>
mov    $0x2,%eax
jmp    80858e7 <dbus_shutdown+0x6c07>
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8085cfb <dbus_shutdown+0x701b>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   808cf80 <dbus_address_escape_value>
test   %eax,%eax
mov    %eax,%esi
je     8085bf2 <dbus_shutdown+0x6f12>
lea    -0x186ba(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8085c4a <dbus_shutdown+0x6f6a>
mov    0x18(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8085c4a <dbus_shutdown+0x6f6a>
mov    %esi,(%esp)
xor    %esi,%esi
call   807ebb0 <dbus_free>
mov    0x1c(%esp),%eax
lea    -0x186ab(%ebx),%ecx
mov    %ecx,0x2c(%esp)
mov    (%eax),%eax
test   %eax,%eax
jne    8085be4 <dbus_shutdown+0x6f04>
jmp    8085ca4 <dbus_shutdown+0x6fc4>
nop
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
mov    %ebp,(%esp)
mov    %eax,%edi
call   807ebb0 <dbus_free>
test   %edi,%edi
je     8085bf2 <dbus_shutdown+0x6f12>
mov    0x1c(%esp),%eax
add    $0x1,%esi
mov    (%eax,%esi,4),%eax
test   %eax,%eax
je     8085ca4 <dbus_shutdown+0x6fc4>
mov    %eax,(%esp)
call   808cf80 <dbus_address_escape_value>
test   %eax,%eax
mov    %eax,%ebp
jne    8085ba8 <dbus_shutdown+0x6ec8>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
mov    0x28(%esp),%esi
mov    %eax,(%esi)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    (%esi),%eax
test   %eax,%eax
jne    8085adb <dbus_shutdown+0x6dfb>
jmp    8085a96 <dbus_shutdown+0x6db6>
lea    -0x186db(%ebx),%eax
jmp    8085a44 <dbus_shutdown+0x6d64>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
jmp    8085c10 <dbus_shutdown+0x6f30>
test   %dl,%dl
jne    8085c99 <dbus_shutdown+0x6fb9>
mov    0x20(%esp),%ecx
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0x8(%esp)
call   8085730 <dbus_shutdown+0x6a50>
mov    0x28(%esp),%ecx
mov    %eax,(%ecx)
jmp    8085ad7 <dbus_shutdown+0x6df7>
lea    -0x18734(%ebx),%eax
jmp    8085a44 <dbus_shutdown+0x6d64>
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8084a60 <dbus_shutdown+0x5d80>
test   %eax,%eax
mov    %eax,%esi
js     8085c10 <dbus_shutdown+0x6f30>
mov    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   807aef0 <dbus_threads_init_default+0x2300>
test   %eax,%eax
mov    %eax,%ebp
je     8085d25 <dbus_shutdown+0x7045>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,%eax
jmp    8085c1e <dbus_shutdown+0x6f3e>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8085c1e <dbus_shutdown+0x6f3e>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
jmp    8085c10 <dbus_shutdown+0x6f30>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x32292,%ebx
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x32252,%ebx
test   %esi,%esi
je     8085dc8 <dbus_shutdown+0x70e8>
mov    %esi,(%esp)
call   8085d60 <dbus_shutdown+0x7080>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x32223,%ebx
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x321f2,%ebx
test   %esi,%esi
je     8085e28 <dbus_shutdown+0x7148>
mov    %esi,(%esp)
call   8085dd0 <dbus_shutdown+0x70f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x321c6,%ebx
lea    0x1c(%esp),%eax
mov    0x30(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8087a40 <dbus_shutdown+0x8d60>
xor    %edx,%edx
test   %eax,%eax
je     8085e76 <dbus_shutdown+0x7196>
mov    0x1c(%esp),%eax
xor    %edx,%edx
cmp    %eax,0x4(%esi)
sete   %dl
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x32170,%ebx
mov    0x40(%esp),%ebp
cmp    $0xffffffff,%edi
je     8085ec0 <dbus_shutdown+0x71e0>
mov    %edi,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   807c4f0 <dbus_watch_handle+0x930>
test   %eax,%eax
mov    %eax,%esi
je     8085f00 <dbus_shutdown+0x7220>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8085e30 <dbus_shutdown+0x7150>
test   %eax,%eax
je     8085ee5 <dbus_shutdown+0x7205>
mov    0x1c(%esp),%eax
cmp    $0xffffffff,%eax
jne    8086049 <dbus_shutdown+0x7369>
mov    0x48(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,%esi
jne    8085eb4 <dbus_shutdown+0x71d4>
movl   $0x18,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edx
je     8086026 <dbus_shutdown+0x7346>
mov    0x4c(%esp),%eax
cmp    $0xffffffff,%edi
mov    %eax,0x8(%esp)
je     8085fc8 <dbus_shutdown+0x72e8>
mov    %edx,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0xc(%esp)
call   8082630 <dbus_shutdown+0x3950>
mov    0xc(%esp),%edx
test   %eax,%eax
je     8085fe8 <dbus_shutdown+0x7308>
mov    %edx,0x8(%esp)
mov    (%edx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   807c6b0 <dbus_watch_handle+0xaf0>
mov    0xc(%esp),%edx
test   %eax,%eax
je     8085ff5 <dbus_shutdown+0x7315>
mov    %edx,0x8(%esp)
mov    0x10(%edx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0xc(%ebp),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
mov    0xc(%esp),%edx
mov    %edx,%esi
test   %eax,%eax
jne    8085eb4 <dbus_shutdown+0x71d4>
mov    (%edx),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
mov    0x4(%ebp),%eax
mov    %eax,(%esp)
call   807c5d0 <dbus_watch_handle+0xa10>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8085eb4 <dbus_shutdown+0x71d4>
xchg   %ax,%ax
mov    0x48(%esp),%eax
mov    %edx,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   8082610 <dbus_shutdown+0x3930>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    8085f43 <dbus_shutdown+0x7263>
mov    %edx,(%esp)
call   8085da0 <dbus_shutdown+0x70c0>
jmp    8085eb4 <dbus_shutdown+0x71d4>
lea    -0x21ca0(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0xc(%esp),%edx
mov    %edx,(%esp)
call   8085da0 <dbus_shutdown+0x70c0>
jmp    8085eb4 <dbus_shutdown+0x71d4>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8085eb4 <dbus_shutdown+0x71d4>
mov    %eax,%edi
jmp    8085e9f <dbus_shutdown+0x71bf>
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31faa,%ebx
sub    $0x18,%esp
lea    0x920(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
movl   $0x1,0x91c(%ebx)
00
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31f7a,%ebx
sub    $0x18,%esp
lea    0x920(%ebx),%eax
movl   $0x0,0x91c(%ebx)
00
mov    (%eax),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x31f42,%ebx
mov    0xc(%esi),%eax
mov    %eax,(%esp)
call   807c330 <dbus_watch_handle+0x770>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   807c330 <dbus_watch_handle+0x770>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807c330 <dbus_watch_handle+0x770>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807c330 <dbus_watch_handle+0x770>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31efa,%ebx
sub    $0x18,%esp
call   8086050 <dbus_shutdown+0x7370>
mov    0x918(%ebx),%eax
test   %eax,%eax
je     8086126 <dbus_shutdown+0x7446>
mov    %eax,(%esp)
call   80860b0 <dbus_shutdown+0x73d0>
call   8086080 <dbus_shutdown+0x73a0>
add    $0x18,%esp
pop    %ebx
ret
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x31ec2,%ebx
subl   $0x1,(%esi)
jne    808618d <dbus_shutdown+0x74ad>
mov    0x4(%esi),%eax
test   %eax,%eax
je     8086158 <dbus_shutdown+0x7478>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x8(%esi),%eax
test   %eax,%eax
je     8086167 <dbus_shutdown+0x7487>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0xc(%esi),%eax
test   %eax,%eax
je     8086176 <dbus_shutdown+0x7496>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x10(%esi),%eax
test   %eax,%eax
je     8086185 <dbus_shutdown+0x74a5>
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31e5a,%ebx
sub    $0x18,%esp
mov    0x918(%ebx),%eax
test   %eax,%eax
je     80861c1 <dbus_shutdown+0x74e1>
mov    %eax,(%esp)
call   8086130 <dbus_shutdown+0x7450>
lea    0x908(%ebx),%eax
mov    %eax,(%esp)
movl   $0x0,0x918(%ebx)
00
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x8f8(%ebx),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31e09,%ebx
sub    $0x14,%esp
movl   $0x14,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     80862c8 <dbus_shutdown+0x75e8>
movl   $0x1,(%eax)
lea    -0x32260(%ebx),%eax
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     80862b8 <dbus_shutdown+0x75d8>
lea    -0x32200(%ebx),%eax
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x8(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x8(%esi)
je     80862b8 <dbus_shutdown+0x75d8>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0xc(%esi)
je     80862b8 <dbus_shutdown+0x75d8>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
test   %eax,%eax
mov    %eax,0x10(%esi)
je     80862b8 <dbus_shutdown+0x75d8>
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   8086130 <dbus_shutdown+0x7450>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
xor    %eax,%eax
jmp    80862ae <dbus_shutdown+0x75ce>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x2c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x31d23,%ebx
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8085e80 <dbus_shutdown+0x71a0>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
setne  %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31cd8,%ebx
sub    $0x30,%esp
movl   $0x0,0x28(%esp)
movl   $0x0,0x20(%esp)
movl   $0x0,0x24(%esp)
movl   $0x0,0x2c(%esp)
movb   $0x1,0x28(%esp)
call   80861f0 <dbus_shutdown+0x7510>
test   %eax,%eax
mov    %eax,0x918(%ebx)
je     80863c8 <dbus_shutdown+0x76e8>
call   8081ad0 <dbus_shutdown+0x2df0>
lea    0x20(%esp),%esi
lea    0x1c(%esp),%edx
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x918(%ebx),%eax
mov    %eax,(%esp)
call   80862d0 <dbus_shutdown+0x75f0>
test   %eax,%eax
jne    80863d8 <dbus_shutdown+0x76f8>
mov    0x918(%ebx),%eax
mov    %eax,(%esp)
call   8086130 <dbus_shutdown+0x7450>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x918(%ebx)
00
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
je     8086420 <dbus_shutdown+0x7740>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
xchg   %ax,%ax
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x908(%ebx),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8086404 <dbus_shutdown+0x7724>
lea    0x8f8(%ebx),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    8086440 <dbus_shutdown+0x7760>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x918(%ebx),%eax
mov    %eax,(%esp)
call   8086130 <dbus_shutdown+0x7450>
movl   $0x0,0x918(%ebx)
00
jmp    80863c8 <dbus_shutdown+0x76e8>
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x186a0(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
jmp    80863c8 <dbus_shutdown+0x76e8>
mov    0x1c(%esp),%eax
mov    0x10(%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8086498 <dbus_shutdown+0x77b8>
mov    0x1c(%esp),%eax
mov    0x14(%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8086498 <dbus_shutdown+0x77b8>
lea    -0x31e60(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807ec70 <dbus_free_string_array+0x50>
test   %eax,%eax
je     8086498 <dbus_shutdown+0x77b8>
mov    $0x1,%eax
jmp    80863ca <dbus_shutdown+0x76ea>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
jmp    80863ff <dbus_shutdown+0x771f>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31b4a,%ebx
sub    $0x8,%esp
mov    0x918(%ebx),%eax
test   %eax,%eax
je     80864d0 <dbus_shutdown+0x77f0>
add    $0x8,%esp
pop    %ebx
ret
xchg   %ax,%ax
call   8086320 <dbus_shutdown+0x7640>
mov    0x918(%ebx),%eax
add    $0x8,%esp
pop    %ebx
ret
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31b1a,%ebx
sub    $0x18,%esp
call   8086050 <dbus_shutdown+0x7370>
mov    0x918(%ebx),%eax
test   %eax,%eax
je     8086520 <dbus_shutdown+0x7840>
mov    0x20(%esp),%eax
lea    0x908(%ebx),%edx
mov    %edx,(%eax)
call   8086080 <dbus_shutdown+0x73a0>
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
call   8086320 <dbus_shutdown+0x7640>
test   %eax,%eax
mov    %eax,0xc(%esp)
jne    80864fe <dbus_shutdown+0x781e>
call   8086080 <dbus_shutdown+0x73a0>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31aba,%ebx
sub    $0x18,%esp
call   8086050 <dbus_shutdown+0x7370>
mov    0x918(%ebx),%eax
test   %eax,%eax
je     8086580 <dbus_shutdown+0x78a0>
mov    0x20(%esp),%eax
lea    0x8f8(%ebx),%edx
mov    %edx,(%eax)
call   8086080 <dbus_shutdown+0x73a0>
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
call   8086320 <dbus_shutdown+0x7640>
test   %eax,%eax
mov    %eax,0xc(%esp)
jne    808655e <dbus_shutdown+0x787e>
call   8086080 <dbus_shutdown+0x73a0>
mov    0xc(%esp),%eax
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31a5a,%ebx
sub    $0x28,%esp
call   8086050 <dbus_shutdown+0x7370>
call   80864b0 <dbus_shutdown+0x77d0>
test   %eax,%eax
je     8086610 <dbus_shutdown+0x7930>
lea    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x30(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80862d0 <dbus_shutdown+0x75f0>
test   %eax,%eax
je     8086610 <dbus_shutdown+0x7930>
mov    0x1c(%esp),%eax
mov    0x14(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     8086610 <dbus_shutdown+0x7930>
call   8086080 <dbus_shutdown+0x73a0>
add    $0x28,%esp
mov    $0x1,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8086080 <dbus_shutdown+0x73a0>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x2c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x319d3,%ebx
movl   $0xffffffff,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8085e80 <dbus_shutdown+0x71a0>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
setne  %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3198a,%ebx
sub    $0x28,%esp
call   8086050 <dbus_shutdown+0x7370>
call   80864b0 <dbus_shutdown+0x77d0>
test   %eax,%eax
je     80866e0 <dbus_shutdown+0x7a00>
lea    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x30(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8086620 <dbus_shutdown+0x7940>
test   %eax,%eax
je     80866e0 <dbus_shutdown+0x7a00>
mov    0x1c(%esp),%eax
mov    0x14(%eax),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80866e0 <dbus_shutdown+0x7a00>
call   8086080 <dbus_shutdown+0x73a0>
add    $0x28,%esp
mov    $0x1,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8086080 <dbus_shutdown+0x73a0>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3190a,%ebx
sub    $0x28,%esp
call   8086050 <dbus_shutdown+0x7370>
call   80864b0 <dbus_shutdown+0x77d0>
test   %eax,%eax
je     8086760 <dbus_shutdown+0x7a80>
lea    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x34(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8086620 <dbus_shutdown+0x7940>
test   %eax,%eax
je     8086760 <dbus_shutdown+0x7a80>
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806a550 <dbus_connection_get_outgoing_unix_fds+0x1b0>
test   %eax,%eax
je     8086760 <dbus_shutdown+0x7a80>
call   8086080 <dbus_shutdown+0x73a0>
add    $0x28,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8086080 <dbus_shutdown+0x73a0>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
shr    $0x1f,%eax
add    $0xffffff80,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x31880,%ebx
test   %al,%al
jne    80868d0 <dbus_shutdown+0x7bf0>
mov    %edx,%eax
mov    %edx,%edi
shr    $0x1f,%eax
test   %al,%al
jne    80868d0 <dbus_shutdown+0x7bf0>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   804d510 <__fxstat@plt>
test   %eax,%eax
js     8086860 <dbus_shutdown+0x7b80>
mov    0x38(%esp),%ecx
xor    %eax,%eax
and    $0xf000,%ecx
cmp    $0xc000,%ecx
je     80867d8 <dbus_shutdown+0x7af8>
sub    $0xffffff80,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
test   %edi,%edi
jne    8086870 <dbus_shutdown+0x7b90>
mov    0x90(%esp),%edi
mov    $0x1,%eax
test   %edi,%edi
js     80867d1 <dbus_shutdown+0x7af1>
lea    0x24(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x20(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x1e,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x20(%esp)
movl   $0x4,0x24(%esp)
call   804d350 <getsockopt@plt>
test   %eax,%eax
js     8086860 <dbus_shutdown+0x7b80>
cmpl   $0x4,0x24(%esp)
mov    $0xffffffea,%eax
jne    80867d1 <dbus_shutdown+0x7af1>
mov    0x90(%esp),%eax
mov    0x20(%esp),%ecx
test   %eax,%eax
sete   %dl
test   %ecx,%ecx
sete   %al
cmp    %al,%dl
sete   %al
movzbl %al,%eax
jmp    80867d1 <dbus_shutdown+0x7af1>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
sub    $0xffffff80,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
ret
lea    0x24(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x20(%esp),%eax
mov    %eax,0xc(%esp)
movl   $0x3,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x20(%esp)
movl   $0x4,0x24(%esp)
call   804d350 <getsockopt@plt>
test   %eax,%eax
js     8086860 <dbus_shutdown+0x7b80>
cmpl   $0x4,0x24(%esp)
mov    $0xffffffea,%eax
jne    80867d1 <dbus_shutdown+0x7af1>
xor    %eax,%eax
cmp    0x20(%esp),%edi
jne    80867d1 <dbus_shutdown+0x7af1>
jmp    80867e0 <dbus_shutdown+0x7b00>
lea    0x0(%esi),%esi
mov    $0xffffffea,%eax
jmp    80867d1 <dbus_shutdown+0x7af1>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x31717,%ebx
sub    $0x3c,%esp
movl   $0x0,0x2c(%esp)
lea    -0x18654(%ebx),%esi
mov    %esi,(%esp)
call   804d4b0 <getenv@plt>
test   %eax,%eax
je     808696f <dbus_shutdown+0x7c8f>
mov    %eax,0x18(%esp)
lea    0x2c(%esp),%ebp
call   804d730 <__errno_location@plt>
mov    0x18(%esp),%edx
movl   $0x0,(%eax)
mov    %eax,%edi
mov    %edx,(%esp)
movl   $0xa,0x8(%esp)
mov    %ebp,0x4(%esp)
call   804d5d0 <strtoul@plt>
mov    (%edi),%edx
test   %edx,%edx
mov    %eax,%ecx
jne    80869a0 <dbus_shutdown+0x7cc0>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     8086a60 <dbus_shutdown+0x7d80>
cmpb   $0x0,(%eax)
jne    8086a60 <dbus_shutdown+0x7d80>
test   %ecx,%ecx
mov    %ecx,0x18(%esp)
je     8086a60 <dbus_shutdown+0x7d80>
call   804d460 <getpid@plt>
mov    0x18(%esp),%ecx
cmp    %ecx,%eax
je     80869a8 <dbus_shutdown+0x7cc8>
xor    %ebp,%ebp
mov    0x50(%esp),%eax
test   %eax,%eax
je     808698f <dbus_shutdown+0x7caf>
mov    %esi,(%esp)
call   804d000 <unsetenv@plt>
lea    -0x18649(%ebx),%eax
mov    %eax,(%esp)
call   804d000 <unsetenv@plt>
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
neg    %edx
mov    %edx,%ebp
jmp    8086971 <dbus_shutdown+0x7c91>
xchg   %ax,%ax
lea    -0x18649(%ebx),%eax
mov    %eax,(%esp)
call   804d4b0 <getenv@plt>
test   %eax,%eax
je     808696f <dbus_shutdown+0x7c8f>
movl   $0x0,(%edi)
movl   $0xa,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   804d5d0 <strtoul@plt>
mov    (%edi),%edx
test   %edx,%edx
jne    80869a0 <dbus_shutdown+0x7cc0>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
je     8086a60 <dbus_shutdown+0x7d80>
cmpb   $0x0,(%ecx)
jne    8086a60 <dbus_shutdown+0x7d80>
mov    %eax,%ebp
lea    0x2(%eax),%eax
cmp    $0x2,%eax
mov    %eax,0x1c(%esp)
jle    8086971 <dbus_shutdown+0x7c91>
mov    $0x3,%ecx
jmp    8086a0d <dbus_shutdown+0x7d2d>
add    $0x1,%ecx
cmp    0x1c(%esp),%ecx
jg     8086971 <dbus_shutdown+0x7c91>
mov    %ecx,(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0x18(%esp)
call   804d680 <fcntl@plt>
mov    0x18(%esp),%ecx
test   %eax,%eax
js     8086a50 <dbus_shutdown+0x7d70>
test   $0x1,%al
jne    8086a00 <dbus_shutdown+0x7d20>
or     $0x1,%eax
mov    %ecx,(%esp)
mov    %eax,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %ecx,0x18(%esp)
call   804d680 <fcntl@plt>
mov    0x18(%esp),%ecx
test   %eax,%eax
jns    8086a00 <dbus_shutdown+0x7d20>
mov    (%edi),%ebp
neg    %ebp
jmp    8086971 <dbus_shutdown+0x7c91>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%ebp
jmp    8086971 <dbus_shutdown+0x7c91>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    0xe0(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x3157a,%ebx
test   %ebp,%ebp
js     8086b80 <dbus_shutdown+0x7ea0>
lea    0x10(%esp),%edx
xor    %esi,%esi
mov    %edx,%edi
mov    %esi,%eax
mov    $0x16,%ecx
rep stos %eax,%es:(%edi)
mov    %edx,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x3,(%esp)
call   804d510 <__fxstat@plt>
test   %eax,%eax
js     8086b60 <dbus_shutdown+0x7e80>
mov    0x20(%esp),%edx
xor    %eax,%eax
and    $0xf000,%edx
cmp    $0x1000,%edx
je     8086ae0 <dbus_shutdown+0x7e00>
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0xe4(%esp),%edx
mov    $0x1,%al
test   %edx,%edx
je     8086ad5 <dbus_shutdown+0x7df5>
lea    0x68(%esp),%edx
mov    %esi,%eax
mov    %edx,%edi
mov    $0x16,%ecx
rep stos %eax,%es:(%edi)
mov    0xe4(%esp),%eax
mov    %edx,0x8(%esp)
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804d390 <__xstat@plt>
test   %eax,%eax
js     8086b48 <dbus_shutdown+0x7e68>
mov    0x68(%esp),%edx
xor    %eax,%eax
mov    0x6c(%esp),%ecx
xor    0x14(%esp),%ecx
xor    0x10(%esp),%edx
or     %edx,%ecx
jne    8086ad5 <dbus_shutdown+0x7df5>
mov    0x1c(%esp),%eax
cmp    %eax,0x74(%esp)
sete   %al
movzbl %al,%eax
jmp    8086ad5 <dbus_shutdown+0x7df5>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x14,%eax
je     8086b78 <dbus_shutdown+0x7e98>
cmp    $0x2,%eax
je     8086b78 <dbus_shutdown+0x7e98>
neg    %eax
jmp    8086ad5 <dbus_shutdown+0x7df5>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
neg    %eax
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8086ad5 <dbus_shutdown+0x7df5>
nop
mov    $0xffffffea,%eax
jmp    8086ad5 <dbus_shutdown+0x7df5>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc4(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3145a,%ebx
mov    0xc0(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
test   %esi,%esi
js     8086c68 <dbus_shutdown+0x7f88>
mov    0xcc(%esp),%eax
mov    0xc8(%esp),%edx
mov    %eax,(%esp)
mov    %ebp,%eax
call   8086770 <dbus_shutdown+0x7a90>
test   %eax,%eax
jle    8086c37 <dbus_shutdown+0x7f57>
test   %esi,%esi
mov    $0x1,%eax
je     8086c37 <dbus_shutdown+0x7f57>
lea    0x1c(%esp),%edx
xor    %al,%al
mov    %edx,%edi
mov    $0x20,%ecx
rep stos %eax,%es:(%edi)
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
movl   $0x80,0x18(%esp)
call   804d930 <getsockname@plt>
test   %eax,%eax
js     8086c58 <dbus_shutdown+0x7f78>
cmpl   $0x1,0x18(%esp)
mov    $0xffffffea,%eax
jbe    8086c37 <dbus_shutdown+0x7f57>
movzwl 0x1c(%esp),%eax
cmp    %esi,%eax
sete   %al
movzbl %al,%eax
mov    0x9c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8086c6f <dbus_shutdown+0x7f8f>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    8086c37 <dbus_shutdown+0x7f57>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%eax
jmp    8086c37 <dbus_shutdown+0x7f57>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc4(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x3136a,%ebx
mov    0xd0(%esp),%ebp
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
test   $0xfffffffd,%esi
je     8086cc3 <dbus_shutdown+0x7fe3>
cmp    $0xa,%esi
jne    8086da0 <dbus_shutdown+0x80c0>
mov    0xcc(%esp),%eax
mov    0xc8(%esp),%edx
mov    %eax,(%esp)
mov    0xc0(%esp),%eax
call   8086770 <dbus_shutdown+0x7a90>
test   %eax,%eax
jle    8086d40 <dbus_shutdown+0x8060>
lea    0x1c(%esp),%edx
xor    %eax,%eax
mov    %edx,%edi
mov    $0x20,%ecx
rep stos %eax,%es:(%edi)
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %edx,0x4(%esp)
movl   $0x80,0x18(%esp)
mov    %eax,(%esp)
call   804d930 <getsockname@plt>
test   %eax,%eax
js     8086d60 <dbus_shutdown+0x8080>
mov    0x18(%esp),%ecx
cmp    $0x1,%ecx
jbe    8086da0 <dbus_shutdown+0x80c0>
movzwl 0x1c(%esp),%edx
xor    %eax,%eax
mov    %edx,%edi
and    $0xfffffff7,%edi
cmp    $0x2,%di
jne    8086d40 <dbus_shutdown+0x8060>
test   %esi,%esi
jle    8086d70 <dbus_shutdown+0x8090>
movzwl %dx,%edi
cmp    %esi,%edi
je     8086d70 <dbus_shutdown+0x8090>
mov    0x9c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8086da7 <dbus_shutdown+0x80c7>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    8086d40 <dbus_shutdown+0x8060>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %bp,%bp
mov    $0x1,%eax
je     8086d40 <dbus_shutdown+0x8060>
cmp    $0x2,%dx
je     8086d98 <dbus_shutdown+0x80b8>
cmp    $0x1b,%ecx
jbe    8086da0 <dbus_shutdown+0x80c0>
xor    %eax,%eax
ror    $0x8,%bp
cmp    0x1e(%esp),%bp
sete   %al
jmp    8086d40 <dbus_shutdown+0x8060>
lea    0x0(%esi),%esi
cmp    $0xf,%ecx
ja     8086d85 <dbus_shutdown+0x80a5>
lea    0x0(%esi),%esi
mov    $0xffffffea,%eax
jmp    8086d40 <dbus_shutdown+0x8060>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x31241,%ebx
mov    0xc0(%esp),%esi
mov    %gs:0x14,%eax
mov    %eax,0x9c(%esp)
xor    %eax,%eax
mov    0xc8(%esp),%eax
mov    0xc4(%esp),%edx
mov    0xcc(%esp),%ebp
mov    %eax,(%esp)
mov    %esi,%eax
call   8086770 <dbus_shutdown+0x7a90>
test   %eax,%eax
jle    8086e44 <dbus_shutdown+0x8164>
lea    0x1c(%esp),%edx
xor    %eax,%eax
mov    %edx,%edi
mov    $0x20,%ecx
rep stos %eax,%es:(%edi)
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
movl   $0x80,0x18(%esp)
call   804d930 <getsockname@plt>
test   %eax,%eax
js     8086e98 <dbus_shutdown+0x81b8>
mov    0x18(%esp),%esi
cmp    $0x1,%esi
jbe    8086f10 <dbus_shutdown+0x8230>
xor    %eax,%eax
cmpw   $0x1,0x1c(%esp)
je     8086e68 <dbus_shutdown+0x8188>
mov    0x9c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    8086f1a <dbus_shutdown+0x823a>
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
test   %ebp,%ebp
je     8086f06 <dbus_shutdown+0x8226>
mov    0xd0(%esp),%eax
test   %eax,%eax
jne    8086ea8 <dbus_shutdown+0x81c8>
mov    %ebp,(%esp)
call   804d600 <strlen@plt>
test   %eax,%eax
mov    %eax,0xd0(%esp)
jne    8086ea8 <dbus_shutdown+0x81c8>
xor    %eax,%eax
cmp    $0x2,%esi
sete   %al
jmp    8086e44 <dbus_shutdown+0x8164>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
neg    %eax
jmp    8086e44 <dbus_shutdown+0x8164>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x0(%ebp)
mov    0xd0(%esp),%eax
je     8086ef0 <dbus_shutdown+0x8210>
lea    0x3(%eax),%edx
xor    %eax,%eax
cmp    %edx,%esi
jb     8086e44 <dbus_shutdown+0x8164>
mov    0xd0(%esp),%eax
add    $0x1,%eax
mov    %eax,0x8(%esp)
lea    0x1e(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   804d1f0 <memcmp@plt>
test   %eax,%eax
sete   %al
movzbl %al,%eax
jmp    8086e44 <dbus_shutdown+0x8164>
lea    0x0(%esi,%eiz,1),%esi
lea    0x2(%eax),%edx
xor    %eax,%eax
cmp    %edx,%esi
jne    8086e44 <dbus_shutdown+0x8164>
mov    0xd0(%esp),%eax
jmp    8086ec8 <dbus_shutdown+0x81e8>
mov    $0x1,%eax
jmp    8086e44 <dbus_shutdown+0x8164>
mov    $0xffffffea,%eax
jmp    8086e44 <dbus_shutdown+0x8164>
call   80962d0 <dbus_bus_remove_match+0x50a0>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf4(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x310ca,%ebx
mov    %gs:0x14,%eax
mov    %eax,0xcc(%esp)
xor    %eax,%eax
test   %edx,%edx
je     8086f80 <dbus_shutdown+0x82a0>
lea    -0x1863e(%ebx),%eax
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   804d4b0 <getenv@plt>
test   %eax,%eax
mov    %eax,%ebp
je     80870f0 <dbus_shutdown+0x8410>
movzbl (%eax),%eax
mov    0x18(%esp),%edx
cmp    $0x2f,%al
jne    8086fc8 <dbus_shutdown+0x82e8>
cmpb   $0x0,0x1(%ebp)
jne    8086fe8 <dbus_shutdown+0x8308>
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffea,%ebp
mov    $0xffffffff,%esi
mov    0xf0(%esp),%eax
test   %eax,%eax
jne    8086fd8 <dbus_shutdown+0x82f8>
test   %esi,%esi
js     8086fa1 <dbus_shutdown+0x82c1>
mov    %esi,(%esp)
call   804dae0 <close@plt>
mov    0xcc(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebp,%eax
jne    8087101 <dbus_shutdown+0x8421>
add    $0xdc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x40,%al
jne    8086f80 <dbus_shutdown+0x82a0>
cmpb   $0x0,0x1(%ebp)
je     8086f80 <dbus_shutdown+0x82a0>
jmp    8086fe8 <dbus_shutdown+0x8308>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1863e(%ebx),%eax
mov    %eax,(%esp)
call   804d000 <unsetenv@plt>
jmp    8086f95 <dbus_shutdown+0x82b5>
movl   $0x0,0x8(%esp)
movl   $0x80002,0x4(%esp)
movl   $0x1,(%esp)
mov    %edx,0x18(%esp)
call   804d980 <socket@plt>
mov    0x18(%esp),%edx
test   %eax,%eax
mov    %eax,%esi
js     80870e0 <dbus_shutdown+0x8400>
xor    %eax,%eax
mov    $0x20,%ecx
lea    0x4c(%esp),%edi
mov    %edi,0x1c(%esp)
rep stos %eax,%es:(%edi)
lea    0x4e(%esp),%eax
mov    %edx,0x18(%esp)
mov    $0x1,%edx
movl   $0x6c,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
mov    %dx,0x4c(%esp)
call   804d750 <strncpy@plt>
mov    0x18(%esp),%edx
cmpb   $0x40,0x4e(%esp)
je     80870f7 <dbus_shutdown+0x8417>
mov    %edx,(%esp)
lea    0x30(%esp),%edi
movl   $0x0,0x2c(%esp)
mov    %edx,0x28(%esp)
call   804d600 <strlen@plt>
mov    %eax,0x2c(%esp)
xor    %eax,%eax
movl   $0x0,(%edi,%eax,1)
add    $0x4,%eax
cmp    $0x1c,%eax
jb     808707a <dbus_shutdown+0x839a>
mov    0x1c(%esp),%eax
mov    %ebp,(%esp)
mov    $0x1,%ebp
mov    %eax,0x30(%esp)
call   804d600 <strlen@plt>
movl   $0x4000,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
movl   $0x1,0x3c(%esp)
lea    0x2(%eax),%edx
mov    $0x6e,%eax
cmp    $0x6e,%edx
cmovbe %edx,%eax
mov    %eax,0x34(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x38(%esp)
call   804d890 <sendmsg@plt>
test   %eax,%eax
jns    8086f8a <dbus_shutdown+0x82aa>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%ebp
neg    %ebp
jmp    8086f8a <dbus_shutdown+0x82aa>
xchg   %ax,%ax
xor    %ebp,%ebp
jmp    8086fa1 <dbus_shutdown+0x82c1>
movb   $0x0,0x4e(%esp)
jmp    808705c <dbus_shutdown+0x837c>
call   80962d0 <dbus_bus_remove_match+0x50a0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x24,%esp
lea    0x38(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x30ee2,%ebx
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
movl   $0x1,0x4(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,0x8(%esp)
lea    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804d6c0 <__vasprintf_chk@plt>
test   %eax,%eax
js     8087180 <dbus_shutdown+0x84a0>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     8087180 <dbus_shutdown+0x84a0>
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8086f20 <dbus_shutdown+0x8240>
mov    %eax,%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804d150 <free@plt>
mov    %esi,%eax
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    $0xfffffff4,%eax
jmp    8087178 <dbus_shutdown+0x8498>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x30e6a,%ebx
sub    $0x78,%esp
lea    0x18(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x3,(%esp)
lea    -0x18630(%ebx),%eax
mov    %eax,0x4(%esp)
call   804d9e0 <__lxstat@plt>
test   %eax,%eax
js     80871e0 <dbus_shutdown+0x8500>
mov    0x28(%esp),%eax
and    $0xf000,%eax
cmp    $0x4000,%eax
sete   %al
add    $0x78,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
add    $0x78,%esp
xor    %eax,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x30e03,%ebx
test   %eax,%eax
je     8087230 <dbus_shutdown+0x8550>
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,(%esp)
call   804d620 <setenv@plt>
test   %eax,%eax
sete   %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d000 <unsetenv@plt>
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x30daa,%ebx
sub    $0x18,%esp
call   80850c0 <dbus_shutdown+0x63e0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    8087278 <dbus_shutdown+0x8598>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d4b0 <getenv@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x30d7a,%ebx
sub    $0x18,%esp
call   8084000 <dbus_shutdown+0x5320>
lea    -0x1861b(%ebx),%eax
mov    %eax,(%esp)
call   8087250 <dbus_shutdown+0x8570>
test   %eax,%eax
je     80872ab <dbus_shutdown+0x85cb>
cmpb   $0x0,(%eax)
jne    80872b5 <dbus_shutdown+0x85d5>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804da30 <abort@plt>
call   8081b90 <dbus_shutdown+0x2eb0>
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x18604(%ebx),%eax
mov    %eax,0x8(%esp)
mov    -0x18(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d9b0 <__fprintf_chk@plt>
movl   $0x2bf20,(%esp)
call   8081df0 <dbus_shutdown+0x3110>
jmp    80872ab <dbus_shutdown+0x85cb>
xchg   %ax,%ax
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x30d0a,%ebx
sub    $0x8,%esp
call   804d0f0 <clearenv@plt>
test   %eax,%eax
sete   %al
add    $0x8,%esp
movzbl %al,%eax
pop    %ebx
ret
jmp    8087320 <dbus_shutdown+0x8640>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x84(%esp),%eax
lea    0x50(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x30cc7,%ebx
mov    0x80(%esp),%ebp
movl   $0x0,0x38(%esp)
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x4(%ebp),%eax
mov    %eax,0x2c(%esp)
lea    0x38(%esp),%eax
mov    %eax,0x24(%esp)
lea    -0x1a0b8(%ebx),%eax
mov    %eax,0x20(%esp)
jmp    8087428 <dbus_shutdown+0x8748>
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8087470 <dbus_shutdown+0x8790>
mov    0x38(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %edi,0x4(%esp)
sub    %edi,%eax
mov    %eax,0x8(%esp)
mov    %ebp,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     80874b0 <dbus_shutdown+0x87d0>
mov    %esi,(%esp)
call   80802b0 <dbus_shutdown+0x15d0>
mov    0x54(%esp),%eax
test   %eax,%eax
je     8087419 <dbus_shutdown+0x8739>
mov    0x28(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     80874b0 <dbus_shutdown+0x87d0>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     80874b0 <dbus_shutdown+0x87d0>
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     80874ba <dbus_shutdown+0x87da>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x38(%esp),%eax
lea    0x1(%eax),%edi
mov    0x24(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x8(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
jne    8087380 <dbus_shutdown+0x86a0>
cmp    0x2c(%esp),%edi
mov    $0x1,%esi
je     80874a2 <dbus_shutdown+0x87c2>
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    80874d0 <dbus_shutdown+0x87f0>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x39450(%ebx),%eax
xor    %esi,%esi
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0x6c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8087470 <dbus_shutdown+0x8790>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    8087470 <dbus_shutdown+0x8790>
mov    0x20(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     8087568 <dbus_shutdown+0x8888>
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     8087568 <dbus_shutdown+0x8888>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f610 <dbus_shutdown+0x930>
test   %eax,%eax
je     8087568 <dbus_shutdown+0x8888>
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
mov    0x20(%esp),%eax
mov    %eax,(%esp)
jne    8087579 <dbus_shutdown+0x8899>
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
jmp    8087470 <dbus_shutdown+0x8790>
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8087470 <dbus_shutdown+0x8790>
call   807f3d0 <dbus_shutdown+0x6f0>
xchg   %ax,%ax
jmp    80874a2 <dbus_shutdown+0x87c2>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x30a65,%ebx
mov    0x30(%esp),%edi
mov    0x4(%edi),%esi
movl   $0xc,0x4(%esp)
mov    %edi,(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
xor    %edx,%edx
test   %eax,%eax
jne    80875c8 <dbus_shutdown+0x88e8>
add    $0x20,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,0x4(%esp)
movl   $0xc,0x8(%esp)
mov    %edi,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0xc,0x4(%esp)
mov    %eax,%esi
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
lea    -0x1fe39(%ebx),%eax
mov    %eax,0x10(%esp)
call   804d050 <__snprintf_chk@plt>
cmpb   $0x0,(%esi)
je     8087642 <dbus_shutdown+0x8962>
xor    %edx,%edx
nop
add    $0x1,%edx
cmpb   $0x0,(%esi,%edx,1)
jne    8087618 <dbus_shutdown+0x8938>
mov    $0xc,%eax
sub    %edx,%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f720 <dbus_shutdown+0xa40>
add    $0x20,%esp
mov    $0x1,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
mov    $0xc,%eax
jmp    8087628 <dbus_shutdown+0x8948>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x309a5,%ebx
mov    0x30(%esp),%edi
mov    0x4(%edi),%esi
movl   $0x18,0x4(%esp)
mov    %edi,(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
xor    %edx,%edx
test   %eax,%eax
jne    8087688 <dbus_shutdown+0x89a8>
add    $0x20,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,0x4(%esp)
movl   $0x18,0x8(%esp)
mov    %edi,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x18,0x4(%esp)
mov    %eax,%esi
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x14(%esp)
lea    -0x1cbad(%ebx),%eax
mov    %eax,0x10(%esp)
call   804d050 <__snprintf_chk@plt>
cmpb   $0x0,(%esi)
je     8087702 <dbus_shutdown+0x8a22>
xor    %edx,%edx
nop
add    $0x1,%edx
cmpb   $0x0,(%esi,%edx,1)
jne    80876d8 <dbus_shutdown+0x89f8>
mov    $0x18,%eax
sub    %edx,%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f720 <dbus_shutdown+0xa40>
add    $0x20,%esp
mov    $0x1,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
mov    $0x18,%eax
jmp    80876e8 <dbus_shutdown+0x8a08>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x308e7,%ebx
sub    $0x3c,%esp
lea    0x2c(%esp),%eax
mov    0x54(%esp),%ebp
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8081cf0 <dbus_shutdown+0x3010>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d5b0 <srand@plt>
mov    0x50(%esp),%edi
test   %ebp,%ebp
lea    (%edi,%ebp,1),%esi
jle    808779b <dbus_shutdown+0x8abb>
lea    0x0(%esi,%eiz,1),%esi
call   804d7d0 <rand@plt>
add    $0x1,%edi
mov    %eax,0x1c(%esp)
fildl  0x1c(%esp)
fdivl  -0x183a0(%ebx)
fnstcw 0x1a(%esp)
movzwl 0x1a(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x18(%esp)
fmuls  -0x18398(%ebx)
fldcw  0x18(%esp)
fistpll 0x10(%esp)
fldcw  0x1a(%esp)
mov    0x10(%esp),%eax
mov    %al,-0x1(%edi)
cmp    %esi,%edi
jne    8087758 <dbus_shutdown+0x8a78>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x30848,%ebx
sub    $0x20,%esp
lea    0x10(%esp),%esi
mov    0x34(%esp),%edi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
mov    %edi,0x4(%esp)
test   %eax,%eax
je     80877f1 <dbus_shutdown+0x8b11>
mov    %esi,(%esp)
call   8082c30 <dbus_shutdown+0x3f50>
test   %eax,%eax
jne    8087808 <dbus_shutdown+0x8b28>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8087710 <dbus_shutdown+0x8a30>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f670 <dbus_shutdown+0x990>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x307c4,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    %edi,(%esp)
mov    %esi,0x4(%esp)
call   8082c30 <dbus_shutdown+0x3f50>
xor    %edx,%edx
test   %eax,%eax
je     80878b4 <dbus_shutdown+0x8bd4>
mov    0x4(%edi),%ecx
mov    %ecx,%eax
sub    %esi,%eax
cmp    %eax,%ecx
jle    80878af <dbus_shutdown+0x8bcf>
mov    %ecx,0xc(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%esi
add    %eax,%esi
add    $0x1,%eax
movzbl (%esi),%edx
movzbl (%esi),%ecx
shr    %dl
movzbl %dl,%edx
mov    %edx,%ebp
shl    $0x5,%ebp
add    %edx,%ebp
lea    (%edx,%ebp,4),%edx
shr    $0xc,%dx
mov    %edx,%ebp
shl    $0x6,%ebp
lea    (%ecx,%edx,2),%edx
mov    %ebp,%ecx
sub    %ecx,%edx
movzbl %dl,%edx
movzbl -0x183e0(%ebx,%edx,1),%edx
cmp    0xc(%esp),%eax
mov    %dl,(%esi)
jne    8087870 <dbus_shutdown+0x8b90>
mov    $0x1,%edx
add    $0x1c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x30737,%ecx
cmp    $0x6f,%eax
ja     8087928 <dbus_shutdown+0x8c48>
mov    -0x185a0(%ecx,%eax,4),%eax
add    %ecx,%eax
jmp    *%eax
nop
lea    -0x2179c(%ecx),%eax
ret
nop
lea    -0x20f84(%ecx),%eax
ret
nop
lea    -0x21ca0(%ecx),%eax
ret
nop
lea    -0x1f938(%ecx),%eax
ret
nop
lea    -0x1c94c(%ecx),%eax
ret
nop
lea    -0x185dc(%ecx),%eax
ret
nop
lea    -0x1c900(%ecx),%eax
ret
nop
lea    -0x20b44(%ecx),%eax
ret
nop
lea    -0x1c928(%ecx),%eax
ret
nop
lea    -0x218bc(%ecx),%eax
ret
nop
lea    -0x1c970(%ecx),%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x306ba,%ebx
sub    $0x18,%esp
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3068a,%ebx
sub    $0x8,%esp
call   804d730 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x8,%esp
pop    %ebx
ret
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x30660,%ebx
movl   $0x0,0x1c(%esp)
mov    (%eax),%esi
add    0x44(%esp),%esi
call   8087970 <dbus_shutdown+0x8c90>
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804da90 <strtol@plt>
mov    0x1c(%esp),%edi
test   %edi,%edi
je     8087a20 <dbus_shutdown+0x8d40>
cmp    %edi,%esi
je     8087a20 <dbus_shutdown+0x8d40>
mov    %eax,%ebp
call   804d730 <__errno_location@plt>
xor    %ecx,%ecx
mov    (%eax),%eax
test   %eax,%eax
jne    8087a15 <dbus_shutdown+0x8d35>
mov    0x48(%esp),%edx
test   %edx,%edx
je     80879fa <dbus_shutdown+0x8d1a>
mov    0x48(%esp),%eax
mov    %ebp,(%eax)
mov    0x4c(%esp),%eax
test   %eax,%eax
je     8087a30 <dbus_shutdown+0x8d50>
mov    %edi,%edx
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
sub    %esi,%edx
add    0x44(%esp),%edx
mov    %edx,(%eax)
add    $0x2c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x2c,%esp
xor    %ecx,%ecx
pop    %ebx
mov    %ecx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ecx
jmp    8087a15 <dbus_shutdown+0x8d35>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x305b0,%ebx
movl   $0x0,0x1c(%esp)
mov    (%eax),%esi
add    0x44(%esp),%esi
call   8087970 <dbus_shutdown+0x8c90>
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804d5d0 <strtoul@plt>
mov    0x1c(%esp),%edi
test   %edi,%edi
je     8087ad0 <dbus_shutdown+0x8df0>
cmp    %edi,%esi
je     8087ad0 <dbus_shutdown+0x8df0>
mov    %eax,%ebp
call   804d730 <__errno_location@plt>
xor    %ecx,%ecx
mov    (%eax),%eax
test   %eax,%eax
jne    8087ac5 <dbus_shutdown+0x8de5>
mov    0x48(%esp),%edx
test   %edx,%edx
je     8087aaa <dbus_shutdown+0x8dca>
mov    0x48(%esp),%eax
mov    %ebp,(%eax)
mov    0x4c(%esp),%eax
test   %eax,%eax
je     8087ae0 <dbus_shutdown+0x8e00>
mov    %edi,%edx
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
sub    %esi,%edx
add    0x44(%esp),%edx
mov    %edx,(%eax)
add    $0x2c,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x2c,%esp
xor    %ecx,%ecx
pop    %ebx
mov    %ecx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ecx
jmp    8087ac5 <dbus_shutdown+0x8de5>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3050a,%ebx
sub    $0x8,%esp
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
test   %eax,%eax
setne  %al
add    $0x8,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x304da,%ebx
sub    $0x8,%esp
call   804d730 <__errno_location@plt>
cmpl   $0xc,(%eax)
sete   %al
add    $0x8,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x304aa,%ebx
sub    $0x8,%esp
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
sete   %al
add    $0x8,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3047a,%ebx
sub    $0x8,%esp
call   804d730 <__errno_location@plt>
cmpl   $0x20,(%eax)
sete   %al
add    $0x8,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3044a,%ebx
sub    $0x8,%esp
call   804d730 <__errno_location@plt>
cmpl   $0x6d,(%eax)
sete   %al
add    $0x8,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x3041a,%ebx
sub    $0x18,%esp
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x303e2,%ebx
test   %esi,%esi
jne    8087c38 <dbus_shutdown+0x8f58>
jmp    8087c4c <dbus_shutdown+0x8f6c>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    %esi,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
test   %eax,%eax
jne    8087c30 <dbus_shutdown+0x8f50>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x30390,%ebx
mov    %eax,0x8(%esp)
mov    %edx,0xc(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   80781b0 <dbus_timeout_get_interval>
mov    $0x10624dd3,%edx
mov    0x4(%esi),%ebp
mov    %eax,%ecx
imul   %edx
mov    %ecx,%eax
sar    $0x1f,%eax
mov    %ecx,%edi
sar    $0x6,%edx
sub    %eax,%edx
add    %edx,%ebp
imul   $0x3e8,%edx,%edx
sub    %edx,%edi
imul   $0x3e8,%edi,%edi
add    0x8(%esi),%edi
cmp    $0xf423f,%edi
jbe    8087cc4 <dbus_shutdown+0x8fe4>
sub    $0xf4240,%edi
add    $0x1,%ebp
sub    0x8(%esp),%ebp
js     8087d04 <dbus_shutdown+0x9024>
sub    0xc(%esp),%edi
mov    $0x10624dd3,%edx
mov    %edi,%eax
imul   %edx
sar    $0x1f,%edi
sar    $0x6,%edx
sub    %edi,%edx
js     8087d00 <dbus_shutdown+0x9020>
cmp    $0x20c49b,%ebp
jle    8087d40 <dbus_shutdown+0x9060>
mov    0x34(%esp),%eax
mov    $0x7fffffff,%edx
movl   $0x7fffffff,(%eax)
jmp    8087d10 <dbus_shutdown+0x9030>
lea    0x0(%esi),%esi
test   %ebp,%ebp
jne    8087d50 <dbus_shutdown+0x9070>
mov    0x34(%esp),%eax
xor    %edx,%edx
movl   $0x0,(%eax)
cmp    %edx,%ecx
jge    8087d2a <dbus_shutdown+0x904a>
mov    0x8(%esp),%eax
mov    %ecx,%edx
mov    %eax,0x4(%esi)
mov    0xc(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %ecx,(%eax)
xor    %eax,%eax
test   %edx,%edx
sete   %al
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
imul   $0x3e8,%ebp,%ebp
mov    0x34(%esp),%eax
add    %ebp,%edx
mov    %edx,(%eax)
jmp    8087d10 <dbus_shutdown+0x9030>
add    $0x3e8,%edx
sub    $0x1,%ebp
jmp    8087ce1 <dbus_shutdown+0x9001>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x30290,%ebx
mov    %edx,0x1c(%esp)
test   %esi,%esi
je     8087e36 <dbus_shutdown+0x9156>
mov    %esi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%ebp
je     8087dec <dbus_shutdown+0x910c>
xor    %edi,%edi
movl   $0x0,0x18(%esp)
jmp    8087dab <dbus_shutdown+0x90cb>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%ebp),%ebp
cmp    (%esi),%ebp
je     8087de8 <dbus_shutdown+0x9108>
test   %ebp,%ebp
je     8087de8 <dbus_shutdown+0x9108>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   807bb50 <dbus_watch_get_enabled>
test   %eax,%eax
je     8087da0 <dbus_shutdown+0x90c0>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   807b3f0 <dbus_threads_init_default+0x2800>
test   %eax,%eax
jne    8087da0 <dbus_shutdown+0x90c0>
mov    0x8(%ebp),%eax
mov    $0x1,%edi
mov    %eax,(%esp)
call   807b8c0 <dbus_watch_get_flags>
mov    0x4(%ebp),%ebp
or     %eax,0x18(%esp)
cmp    (%esi),%ebp
jne    8087da7 <dbus_shutdown+0x90c7>
lea    0x0(%esi,%eiz,1),%esi
test   %edi,%edi
jne    8087e10 <dbus_shutdown+0x9130>
mov    0x1c(%esp),%eax
mov    0x44(%esp),%ecx
mov    (%eax),%eax
mov    (%eax),%edx
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   *0x10(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
mov    0x18(%esp),%ecx
mov    (%eax),%eax
mov    (%eax),%edx
mov    %ecx,0x8(%esp)
mov    0x44(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   *0xc(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x44(%esp),%ecx
mov    %ecx,0x4(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807c4b0 <dbus_watch_handle+0x8f0>
mov    %eax,%esi
jmp    8087d82 <dbus_shutdown+0x90a2>
nop
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x301a9,%ebx
sub    $0x14,%esp
movl   $0x28,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8087ec0 <dbus_shutdown+0x91e0>
lea    -0x303f0(%ebx),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x1,(%esp)
call   807c0c0 <dbus_watch_handle+0x500>
movl   $0x0,(%esp)
mov    %eax,0x4(%esi)
call   808bf60 <dbus_shutdown+0xd280>
mov    0x4(%esi),%edx
test   %edx,%edx
mov    %eax,0x8(%esi)
je     8087ed3 <dbus_shutdown+0x91f3>
test   %eax,%eax
je     8087ec8 <dbus_shutdown+0x91e8>
movl   $0x1,(%esi)
mov    %esi,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8087eb5 <dbus_shutdown+0x91d5>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x8(%esi),%eax
test   %eax,%eax
je     8087ede <dbus_shutdown+0x91fe>
mov    (%eax),%edx
mov    %eax,(%esp)
call   *(%edx)
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8087eb5 <dbus_shutdown+0x91d5>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x300f1,%ebx
subl   $0x1,(%esi)
jne    8087f5c <dbus_shutdown+0x927c>
mov    0x20(%esi),%edx
lea    0x20(%esi),%edi
test   %edx,%edx
je     8087f3f <dbus_shutdown+0x925f>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
mov    %eax,(%esp)
call   8066920 <dbus_connection_unref>
mov    0x20(%esi),%eax
test   %eax,%eax
jne    8087f28 <dbus_shutdown+0x9248>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807c1b0 <dbus_watch_handle+0x5f0>
mov    0x8(%esi),%eax
mov    (%eax),%edx
mov    %eax,(%esp)
call   *(%edx)
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x30084,%ebx
mov    0x44(%esp),%eax
mov    0x40(%esp),%esi
mov    %eax,(%esp)
call   807b860 <dbus_watch_get_socket>
mov    %eax,0x4(%esp)
mov    %eax,%ebp
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807c4b0 <dbus_watch_handle+0x8f0>
test   %eax,%eax
mov    %eax,%edi
je     8088078 <dbus_shutdown+0x9398>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   807b490 <dbus_threads_init_default+0x28a0>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
jne    8087fe8 <dbus_shutdown+0x9308>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    (%edi),%eax
xor    %edx,%edx
test   %eax,%eax
je     8088057 <dbus_shutdown+0x9377>
add    $0x2c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %edi,(%esp)
call   807dbc0 <dbus_watch_handle+0x2000>
test   %eax,%eax
jne    8088020 <dbus_shutdown+0x9340>
lea    0x8(%esi),%edx
lea    0x4(%esi),%eax
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8087d60 <dbus_shutdown+0x9080>
addl   $0x1,0x10(%esi)
mov    $0x1,%edx
addl   $0x1,0x14(%esi)
add    $0x2c,%esp
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   807bb50 <dbus_watch_get_enabled>
mov    %eax,%edi
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   807b8c0 <dbus_watch_get_flags>
mov    0x8(%esi),%edx
mov    (%edx),%ecx
mov    %edx,(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,0x4(%esp)
call   *0x4(%ecx)
test   %eax,%eax
mov    %eax,%edx
jne    8088006 <dbus_shutdown+0x9326>
mov    %edx,0x1c(%esp)
mov    %ebp,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807c580 <dbus_watch_handle+0x9c0>
mov    0x1c(%esp),%edx
jmp    8087fdd <dbus_shutdown+0x92fd>
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x4,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
je     80880b5 <dbus_shutdown+0x93d5>
mov    %eax,0x8(%esp)
mov    %eax,0x1c(%esp)
mov    %ebp,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807c620 <dbus_watch_handle+0xa60>
mov    0x1c(%esp),%edx
test   %eax,%eax
jne    8087fad <dbus_shutdown+0x92cd>
mov    %edx,(%esp)
call   807ebb0 <dbus_free>
xor    %edx,%edx
jmp    8087fdd <dbus_shutdown+0x92fd>
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2ff36,%ebx
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
mov    %eax,(%esp)
call   807b860 <dbus_watch_get_socket>
lea    0x8(%esi),%edx
add    $0x4,%esi
movl   $0x0,0x20(%esp)
mov    %eax,0x24(%esp)
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    8087d60 <dbus_shutdown+0x9080>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2fef4,%ebx
mov    0x34(%esp),%edi
mov    %edi,(%esp)
call   807b860 <dbus_watch_get_socket>
mov    %eax,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807c4b0 <dbus_watch_handle+0x8f0>
test   %eax,%eax
mov    %eax,%ebp
je     8088168 <dbus_shutdown+0x9488>
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%ecx
je     8088168 <dbus_shutdown+0x9488>
mov    0x0(%ebp),%eax
jmp    808815a <dbus_shutdown+0x947a>
xchg   %ax,%ax
cmp    %edi,%esi
je     8088188 <dbus_shutdown+0x94a8>
test   %edx,%edx
je     8088168 <dbus_shutdown+0x9488>
mov    %edx,%ecx
mov    0x4(%ecx),%edx
mov    0x8(%ecx),%esi
cmp    %eax,%edx
jne    8088150 <dbus_shutdown+0x9470>
cmp    %edi,%esi
je     8088188 <dbus_shutdown+0x94a8>
lea    -0x18394(%ebx),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
mov    %ebp,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
mov    0x30(%esp),%eax
addl   $0x1,0x10(%eax)
subl   $0x1,0x14(%eax)
mov    %esi,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    808817a <dbus_shutdown+0x949a>
mov    0xc(%esp),%edi
mov    0x30(%esp),%eax
mov    %edi,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807c580 <dbus_watch_handle+0x9c0>
mov    0x30(%esp),%eax
mov    0x8(%eax),%eax
mov    (%eax),%edx
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *0x8(%edx)
jmp    808817a <dbus_shutdown+0x949a>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2fe18,%ebx
sub    $0x10,%esp
movl   $0xc,(%esp)
mov    0x20(%esp),%edi
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%esi
je     8088260 <dbus_shutdown+0x9580>
mov    0x24(%esp),%eax
mov    %eax,(%esi)
lea    0x8(%esi),%eax
mov    %eax,0x4(%esp)
lea    0x4(%esi),%eax
mov    %eax,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
lea    0xc(%edi),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     8088248 <dbus_shutdown+0x9568>
addl   $0x1,0x10(%edi)
mov    $0x1,%eax
addl   $0x1,0x18(%edi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    808823f <dbus_shutdown+0x955f>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2fd84,%ebx
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebp
lea    0xc(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0xc(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     80882c8 <dbus_shutdown+0x95e8>
mov    0xc(%esi),%ecx
jmp    80882b4 <dbus_shutdown+0x95d4>
lea    0x0(%esi),%esi
cmp    %ebp,(%edi)
je     80882e8 <dbus_shutdown+0x9608>
test   %edx,%edx
xchg   %ax,%ax
je     80882c8 <dbus_shutdown+0x95e8>
mov    %edx,%eax
mov    0x4(%eax),%edx
mov    0x8(%eax),%edi
cmp    %edx,%ecx
jne    80882a8 <dbus_shutdown+0x95c8>
cmp    %ebp,(%edi)
je     80882e8 <dbus_shutdown+0x9608>
lea    0x0(%esi),%esi
lea    -0x18370(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x4(%esp)
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   807d840 <dbus_watch_handle+0x1c80>
addl   $0x1,0x10(%esi)
subl   $0x1,0x18(%esi)
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2fce6,%ebx
mov    0x20(%esp),%eax
mov    0x24(%esp),%esi
add    $0x20,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
xor    %edx,%edx
test   %eax,%eax
je     808834a <dbus_shutdown+0x966a>
mov    %esi,(%esp)
call   8065370 <dbus_connection_ref>
mov    $0x1,%edx
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
subl   $0x1,0x1c(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1f4,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2fc7a,%ebx
sub    $0x18,%esp
call   8088370 <dbus_shutdown+0x9690>
mov    %eax,(%esp)
call   8081df0 <dbus_shutdown+0x3110>
add    $0x18,%esp
pop    %ebx
ret
jmp    80883b0 <dbus_shutdown+0x96d0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x2fc40,%ebx
mov    0x20(%edi),%edx
test   %edx,%edx
je     8088417 <dbus_shutdown+0x9737>
lea    0x20(%edi),%ebp
mov    %ebp,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
mov    %eax,%esi
jmp    80883e5 <dbus_shutdown+0x9705>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2,%eax
je     8088410 <dbus_shutdown+0x9730>
mov    %esi,(%esp)
call   8068550 <dbus_connection_dispatch>
cmp    $0x1,%eax
jne    80883e0 <dbus_shutdown+0x9700>
mov    %esi,(%esp)
call   8066920 <dbus_connection_unref>
mov    0x20(%edi),%eax
test   %eax,%eax
jne    80883d0 <dbus_shutdown+0x96f0>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8088380 <dbus_shutdown+0x96a0>
jmp    80883e5 <dbus_shutdown+0x9705>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    8088430 <dbus_shutdown+0x9750>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x26c,%esp
mov    0x280(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2fbba,%ebx
mov    0x1c(%eax),%eax
mov    %eax,0x20(%esp)
mov    0x280(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807cbf0 <dbus_watch_handle+0x1030>
test   %eax,%eax
jne    808847b <dbus_shutdown+0x979b>
mov    0x280(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
je     8088768 <dbus_shutdown+0x9a88>
mov    0x280(%esp),%eax
mov    0x18(%eax),%eax
test   %eax,%eax
jle    8088559 <dbus_shutdown+0x9879>
lea    0x48(%esp),%eax
mov    $0xffffffff,%esi
mov    %eax,0x4(%esp)
lea    0x44(%esp),%eax
mov    %eax,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
mov    0x280(%esp),%eax
add    $0xc,%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     808855e <dbus_shutdown+0x987e>
lea    0x60(%esp),%edx
mov    %edx,0x30(%esp)
jmp    80884da <dbus_shutdown+0x97fa>
lea    0x0(%esi),%esi
test   %ebp,%ebp
je     8088566 <dbus_shutdown+0x9886>
mov    %ebp,%eax
mov    0x8(%eax),%edi
mov    0x280(%esp),%ecx
mov    0x4(%eax),%ebp
mov    (%edi),%eax
cmp    0xc(%ecx),%ebp
mov    $0x0,%ecx
mov    %eax,(%esp)
cmove  %ecx,%ebp
call   8078360 <dbus_timeout_get_enabled>
test   %eax,%eax
je     80884d0 <dbus_shutdown+0x97f0>
mov    0x30(%esp),%eax
mov    0x48(%esp),%edx
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
call   8087c60 <dbus_shutdown+0x8f80>
test   %esi,%esi
js     80887a0 <dbus_shutdown+0x9ac0>
mov    0x60(%esp),%eax
cmp    %eax,%esi
cmovg  %eax,%esi
test   %esi,%esi
jne    80884d0 <dbus_shutdown+0x97f0>
mov    0x284(%esp),%eax
test   %eax,%eax
jne    8088571 <dbus_shutdown+0x9891>
mov    0x280(%esp),%eax
xor    %esi,%esi
testb  $0x1,0x24(%eax)
je     8088592 <dbus_shutdown+0x98b2>
call   8088370 <dbus_shutdown+0x9690>
cmp    %eax,%esi
jl     8088592 <dbus_shutdown+0x98b2>
call   8088370 <dbus_shutdown+0x9690>
mov    %eax,%esi
jmp    8088592 <dbus_shutdown+0x98b2>
mov    $0xffffffff,%esi
lea    0x60(%esp),%eax
mov    %eax,0x30(%esp)
mov    0x284(%esp),%eax
test   %eax,%eax
je     8088538 <dbus_shutdown+0x9858>
mov    0x280(%esp),%eax
mov    0x20(%eax),%eax
test   %eax,%eax
mov    $0x0,%eax
cmovne %eax,%esi
mov    0x280(%esp),%eax
testb  $0x1,0x24(%eax)
jne    8088547 <dbus_shutdown+0x9867>
mov    0x280(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x8(%eax),%eax
mov    (%eax),%edx
mov    %esi,0xc(%esp)
movl   $0x40,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    %eax,(%esp)
call   *0x14(%edx)
movl   $0x0,0x28(%esp)
mov    %eax,0x34(%esp)
mov    0x280(%esp),%eax
movzbl 0x24(%eax),%eax
test   $0x1,%al
jne    8088931 <dbus_shutdown+0x9c51>
mov    0x280(%esp),%eax
mov    0x10(%eax),%eax
mov    %eax,0x1c(%esp)
mov    0x280(%esp),%eax
mov    0x18(%eax),%edi
test   %edi,%edi
jle    80886c0 <dbus_shutdown+0x99e0>
lea    0x44(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x40(%esp),%eax
mov    %eax,(%esp)
call   8081c90 <dbus_shutdown+0x2fb0>
mov    0x280(%esp),%eax
add    $0xc,%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
je     80886c0 <dbus_shutdown+0x99e0>
lea    0x48(%esp),%ebp
mov    0x280(%esp),%edi
mov    %ebp,0x24(%esp)
jmp    8088642 <dbus_shutdown+0x9962>
xchg   %ax,%ax
test   %esi,%esi
je     80886c0 <dbus_shutdown+0x99e0>
mov    %esi,%eax
mov    0x4(%eax),%esi
mov    $0x0,%edx
cmp    0xc(%edi),%esi
mov    0x8(%eax),%ebp
mov    0x1c(%esp),%eax
cmove  %edx,%esi
cmp    %eax,0x10(%edi)
jne    8088770 <dbus_shutdown+0x9a90>
mov    0x20(%esp),%eax
cmp    %eax,0x1c(%edi)
jne    8088770 <dbus_shutdown+0x9a90>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8078360 <dbus_timeout_get_enabled>
test   %eax,%eax
je     8088638 <dbus_shutdown+0x9958>
mov    0x24(%esp),%eax
mov    0x44(%esp),%edx
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
mov    0x40(%esp),%eax
call   8087c60 <dbus_shutdown+0x8f80>
test   %eax,%eax
je     8088638 <dbus_shutdown+0x9958>
mov    0x40(%esp),%eax
mov    %eax,0x4(%ebp)
mov    0x44(%esp),%eax
mov    %eax,0x8(%ebp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8078340 <dbus_timeout_handle>
test   %esi,%esi
movl   $0x1,0x28(%esp)
jne    8088640 <dbus_shutdown+0x9960>
lea    0x0(%esi),%esi
mov    0x34(%esp),%esi
test   %esi,%esi
jle    8088770 <dbus_shutdown+0x9a90>
mov    0x280(%esp),%eax
movl   $0x0,0x24(%esp)
add    $0x8,%eax
mov    %eax,0x3c(%esp)
lea    0x0(%esi),%esi
mov    0x280(%esp),%eax
mov    0x1c(%esp),%ecx
cmp    %ecx,0x10(%eax)
jne    8088770 <dbus_shutdown+0x9a90>
mov    0x20(%esp),%edx
cmp    %edx,0x1c(%eax)
jne    8088770 <dbus_shutdown+0x9a90>
mov    0x30(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x4(%eax,%ecx,8),%eax
test   $0x10,%al
mov    %eax,0x2c(%esp)
je     80887b0 <dbus_shutdown+0x9ad0>
mov    0x24(%esp),%eax
mov    0x60(%esp,%eax,8),%esi
lea    -0x18348(%ebx),%eax
mov    %eax,(%esp)
mov    %esi,0x4(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x280(%esp),%eax
mov    %esi,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807c4b0 <dbus_watch_handle+0x8f0>
test   %eax,%eax
mov    %eax,%edi
je     8088916 <dbus_shutdown+0x9c36>
mov    %edi,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%ebp
jmp    8088912 <dbus_shutdown+0x9c32>
lea    0x0(%esi),%esi
movl   $0x0,0x28(%esp)
mov    0x280(%esp),%eax
mov    %eax,(%esp)
call   80883b0 <dbus_shutdown+0x96d0>
test   %eax,%eax
mov    $0x1,%eax
cmove  0x28(%esp),%eax
mov    %eax,0x28(%esp)
add    $0x26c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x60(%esp),%esi
jmp    8088529 <dbus_shutdown+0x9849>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
test   %eax,%eax
jne    80887d0 <dbus_shutdown+0x9af0>
addl   $0x1,0x24(%esp)
mov    0x34(%esp),%eax
cmp    %eax,0x24(%esp)
jne    80886e8 <dbus_shutdown+0x9a08>
jmp    8088770 <dbus_shutdown+0x9a90>
lea    0x0(%esi),%esi
mov    0x30(%esp),%eax
mov    0x24(%esp),%edx
mov    (%eax,%edx,8),%eax
mov    %eax,0x4(%esp)
mov    0x280(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807c4b0 <dbus_watch_handle+0x8f0>
test   %eax,%eax
mov    %eax,%edi
je     80887b8 <dbus_shutdown+0x9ad8>
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%ebp
je     80887b8 <dbus_shutdown+0x9ad8>
movl   $0x0,0x38(%esp)
jmp    8088814 <dbus_shutdown+0x9b34>
nop
test   %ebp,%ebp
je     8088874 <dbus_shutdown+0x9b94>
mov    0x8(%ebp),%esi
mov    $0x0,%eax
mov    0x4(%ebp),%ebp
cmp    (%edi),%ebp
mov    %esi,(%esp)
cmove  %eax,%ebp
call   807bb50 <dbus_watch_get_enabled>
test   %eax,%eax
je     8088810 <dbus_shutdown+0x9b30>
mov    0x2c(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807bbc0 <dbus_watch_handle>
test   %eax,%eax
je     80888b0 <dbus_shutdown+0x9bd0>
mov    0x280(%esp),%eax
mov    0x1c(%esp),%edx
cmp    %edx,0x10(%eax)
jne    80888e7 <dbus_shutdown+0x9c07>
mov    0x280(%esp),%eax
mov    0x20(%esp),%edx
cmp    %edx,0x1c(%eax)
jne    80888e7 <dbus_shutdown+0x9c07>
test   %ebp,%ebp
movl   $0x1,0x28(%esp)
jne    8088814 <dbus_shutdown+0x9b34>
mov    0x38(%esp),%edx
test   %edx,%edx
je     80887b8 <dbus_shutdown+0x9ad8>
mov    0x30(%esp),%edx
mov    0x24(%esp),%ecx
mov    0x280(%esp),%eax
mov    (%edx,%ecx,8),%edx
add    $0x4,%eax
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
mov    0x3c(%esp),%edx
call   8087d60 <dbus_shutdown+0x9080>
jmp    80887b8 <dbus_shutdown+0x9ad8>
lea    0x0(%esi),%esi
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   807b400 <dbus_threads_init_default+0x2810>
mov    0x280(%esp),%eax
mov    0x1c(%esp),%edx
movl   $0x1,0x38(%esp)
orb    $0x1,0x24(%eax)
mov    0x280(%esp),%eax
cmp    %edx,0x10(%eax)
je     8088858 <dbus_shutdown+0x9b78>
mov    0x38(%esp),%ecx
test   %ecx,%ecx
jne    8088a34 <dbus_shutdown+0x9d54>
movl   $0x1,0x28(%esp)
jmp    8088770 <dbus_shutdown+0x9a90>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x4(%ebp),%ebp
cmp    (%edi),%ebp
je     8088916 <dbus_shutdown+0x9c36>
test   %ebp,%ebp
jne    8088900 <dbus_shutdown+0x9c20>
mov    0x280(%esp),%eax
mov    %esi,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   807c580 <dbus_watch_handle+0x9c0>
jmp    8088770 <dbus_shutdown+0x9a90>
mov    0x280(%esp),%edx
and    $0xfffffffe,%eax
mov    %al,0x24(%edx)
lea    0x48(%esp),%eax
mov    %eax,0x24(%esp)
mov    %eax,0x4(%esp)
mov    0x4(%edx),%eax
mov    %eax,(%esp)
call   807c250 <dbus_watch_handle+0x690>
mov    0x280(%esp),%eax
add    $0x8,%eax
mov    %eax,0x2c(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
je     8088a27 <dbus_shutdown+0x9d47>
mov    0x24(%esp),%esi
mov    %esi,(%esp)
call   807c3d0 <dbus_watch_handle+0x810>
mov    %esi,(%esp)
mov    %eax,0x28(%esp)
call   807c380 <dbus_watch_handle+0x7c0>
mov    %eax,(%esp)
mov    %eax,%esi
call   807d900 <dbus_watch_handle+0x1d40>
movl   $0x0,0x1c(%esp)
test   %eax,%eax
mov    %eax,%ebp
jne    80889bb <dbus_shutdown+0x9cdb>
jmp    8088968 <dbus_shutdown+0x9c88>
xchg   %ax,%ax
mov    0x4(%ebp),%ebp
cmp    (%esi),%ebp
je     80889e9 <dbus_shutdown+0x9d09>
test   %ebp,%ebp
je     80889e9 <dbus_shutdown+0x9d09>
mov    0x8(%ebp),%edi
mov    %edi,(%esp)
call   807b3f0 <dbus_threads_init_default+0x2800>
test   %eax,%eax
je     80889b0 <dbus_shutdown+0x9cd0>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807b400 <dbus_threads_init_default+0x2810>
mov    0x4(%ebp),%ebp
cmp    (%esi),%ebp
movl   $0x1,0x1c(%esp)
jne    80889b7 <dbus_shutdown+0x9cd7>
mov    0x1c(%esp),%ebp
test   %ebp,%ebp
je     8088968 <dbus_shutdown+0x9c88>
mov    0x28(%esp),%edx
mov    0x280(%esp),%eax
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
mov    0x2c(%esp),%edx
add    $0x4,%eax
call   8087d60 <dbus_shutdown+0x9080>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807c280 <dbus_watch_handle+0x6c0>
test   %eax,%eax
jne    808897c <dbus_shutdown+0x9c9c>
movl   $0x1,0x28(%esp)
jmp    80885d7 <dbus_shutdown+0x98f7>
mov    0x24(%esp),%ecx
mov    0x280(%esp),%eax
mov    0x60(%esp,%ecx,8),%ecx
lea    0x8(%eax),%edx
add    $0x4,%eax
movl   $0x0,(%esp)
mov    %ecx,0x4(%esp)
call   8087d60 <dbus_shutdown+0x9080>
jmp    80888f3 <dbus_shutdown+0x9c13>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2f595,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8087ef0 <dbus_shutdown+0x9210>
mov    0x1c(%esi),%edi
lea    0x1(%edi),%eax
mov    %eax,0x1c(%esi)
xchg   %ax,%ax
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8088430 <dbus_shutdown+0x9750>
cmp    %edi,0x1c(%esi)
jne    8088a88 <dbus_shutdown+0x9da8>
mov    %esi,(%esp)
call   8087f00 <dbus_shutdown+0x9220>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2f546,%ebx
sub    $0x10,%esp
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%esi
je     8088af8 <dbus_shutdown+0x9e18>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
mov    $0x1,%edx
test   %eax,%eax
je     8088af0 <dbus_shutdown+0x9e10>
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x10,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2f4c4,%ebx
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%ebp
je     8088c40 <dbus_shutdown+0x9f60>
lea    0x10(%esp),%esi
mov    %ebp,%edi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8088c6a <dbus_shutdown+0x9f8a>
movzbl (%edi),%ecx
lea    0x0(%esi,%eiz,1),%esi
test   %cl,%cl
je     8088b97 <dbus_shutdown+0x9eb7>
cmp    $0x27,%cl
je     8088bc0 <dbus_shutdown+0x9ee0>
cmp    $0x22,%cl
je     8088bc0 <dbus_shutdown+0x9ee0>
cmp    $0x5c,%cl
jne    8088c00 <dbus_shutdown+0x9f20>
movzbl 0x1(%edi),%eax
test   %al,%al
jne    8088c20 <dbus_shutdown+0x9f40>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,%edi
je     8088be0 <dbus_shutdown+0x9f00>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,%eax
jmp    8088bf2 <dbus_shutdown+0x9f12>
lea    0x0(%esi),%esi
cmp    $0x22,%cl
mov    %edi,%edx
lea    0x1(%edi),%eax
je     8088c79 <dbus_shutdown+0x9f99>
movzbl 0x1(%edi),%ecx
test   %cl,%cl
jne    8088c44 <dbus_shutdown+0x9f64>
mov    %edi,%eax
movb   $0x0,(%eax)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8088be0 <dbus_shutdown+0x9f00>
movzbl 0x1(%edi),%ecx
add    $0x1,%edi
jmp    8088b78 <dbus_shutdown+0x9e98>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xa,%al
je     8088c34 <dbus_shutdown+0x9f54>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8088be0 <dbus_shutdown+0x9f00>
movzbl 0x2(%edi),%ecx
add    $0x2,%edi
jmp    8088b78 <dbus_shutdown+0x9e98>
xor    %eax,%eax
jmp    8088bf2 <dbus_shutdown+0x9f12>
cmp    $0x27,%cl
jne    8088c57 <dbus_shutdown+0x9f77>
jmp    8088cc6 <dbus_shutdown+0x9fe6>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x27,%cl
je     8088cca <dbus_shutdown+0x9fea>
mov    %edi,%eax
mov    %cl,-0x1(%eax)
movzbl 0x1(%eax),%ecx
lea    0x1(%eax),%edi
test   %cl,%cl
jne    8088c50 <dbus_shutdown+0x9f70>
jmp    8088bd8 <dbus_shutdown+0x9ef8>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8088bf2 <dbus_shutdown+0x9f12>
mov    %eax,%ecx
mov    %eax,%edi
movzbl (%ecx),%eax
mov    %ebp,0xc(%esp)
lea    -0x1(%edi),%ebp
test   %al,%al
je     8088cbb <dbus_shutdown+0x9fdb>
cmp    $0x22,%al
je     8088d08 <dbus_shutdown+0xa028>
cmp    $0x5c,%al
jne    8088d00 <dbus_shutdown+0xa020>
movzbl 0x1(%ecx),%eax
lea    0x1(%ecx),%ebp
cmp    $0x24,%al
je     8088cf8 <dbus_shutdown+0xa018>
jg     8088cf0 <dbus_shutdown+0xa010>
cmp    $0xa,%al
je     8088cf8 <dbus_shutdown+0xa018>
cmp    $0x22,%al
je     8088cf8 <dbus_shutdown+0xa018>
movb   $0x5c,-0x1(%edi)
mov    %ebp,%ecx
movzbl (%ecx),%eax
add    $0x1,%edi
lea    -0x1(%edi),%ebp
test   %al,%al
jne    8088c8b <dbus_shutdown+0x9fab>
mov    %ebp,%eax
mov    0xc(%esp),%ebp
jmp    8088bd8 <dbus_shutdown+0x9ef8>
mov    %eax,%edi
mov    %edx,%eax
movb   $0x0,(%eax)
add    $0x1,%edi
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    8088b6e <dbus_shutdown+0x9e8e>
jmp    8088be0 <dbus_shutdown+0x9f00>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x5c,%al
je     8088cf8 <dbus_shutdown+0xa018>
cmp    $0x60,%al
jne    8088ca8 <dbus_shutdown+0x9fc8>
mov    %al,-0x1(%edi)
add    $0x2,%ecx
jmp    8088cae <dbus_shutdown+0x9fce>
mov    %al,-0x1(%edi)
add    $0x1,%ecx
jmp    8088cae <dbus_shutdown+0x9fce>
mov    %ebp,%eax
mov    0xc(%esp),%ebp
movb   $0x0,(%eax)
lea    0x1(%ecx),%edi
jmp    8088cd0 <dbus_shutdown+0x9ff0>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x2f2d0,%ebx
movl   $0x0,0x28(%esp)
test   %ebp,%ebp
je     8088f9a <dbus_shutdown+0xa2ba>
lea    0x30(%esp),%edi
mov    %edi,(%esp)
movl   $0x0,0x2c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808916a <dbus_shutdown+0xa48a>
movzbl 0x0(%ebp),%eax
test   %al,%al
je     80891a3 <dbus_shutdown+0xa4c3>
lea    0x2c(%esp),%edx
xor    %esi,%esi
xor    %ecx,%ecx
mov    %edx,0x18(%esp)
jmp    8088dd7 <dbus_shutdown+0xa0f7>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x23,%cl
je     8088eb0 <dbus_shutdown+0xa1d0>
test   %cl,%cl
je     8088e20 <dbus_shutdown+0xa140>
cmp    %al,%cl
je     8088f18 <dbus_shutdown+0xa238>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %ecx,0x14(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8088fbf <dbus_shutdown+0xa2df>
movzbl 0x0(%ebp),%edx
mov    %ebp,%eax
mov    0x14(%esp),%ecx
xor    $0x1,%esi
mov    %esi,%ebp
xor    %esi,%esi
cmp    $0x5c,%dl
cmove  %ebp,%esi
lea    0x1(%eax),%ebp
movzbl 0x1(%eax),%eax
test   %al,%al
je     808902b <dbus_shutdown+0xa34b>
cmp    $0x5c,%cl
jne    8088d80 <dbus_shutdown+0xa0a0>
cmp    $0xa,%al
je     8088e10 <dbus_shutdown+0xa130>
movl   $0x5c,0x4(%esp)
mov    %edi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8088fbf <dbus_shutdown+0xa2df>
movzbl 0x0(%ebp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8088fbf <dbus_shutdown+0xa2df>
movzbl 0x0(%ebp),%edx
mov    %ebp,%eax
xor    %ecx,%ecx
jmp    8088dbb <dbus_shutdown+0xa0db>
lea    0x0(%esi),%esi
cmp    $0x22,%al
je     8088fa8 <dbus_shutdown+0xa2c8>
jg     8088ef0 <dbus_shutdown+0xa210>
cmp    $0xa,%al
je     8088e4a <dbus_shutdown+0xa16a>
cmp    $0x20,%al
je     8088e3e <dbus_shutdown+0xa15e>
cmp    $0x9,%al
jne    8088d99 <dbus_shutdown+0xa0b9>
mov    0x34(%esp),%eax
test   %eax,%eax
jle    8089020 <dbus_shutdown+0xa340>
mov    0x6c(%esp),%eax
mov    0x18(%esp),%edx
mov    %ecx,0x14(%esp)
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8088ab0 <dbus_shutdown+0x9dd0>
test   %eax,%eax
je     8088fe1 <dbus_shutdown+0xa301>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    8088db1 <dbus_shutdown+0xa0d1>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8088fe9 <dbus_shutdown+0xa309>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x0(%ebp),%edx
mov    %ebp,%eax
test   %dl,%dl
je     8088edd <dbus_shutdown+0xa1fd>
cmp    $0xa,%dl
jne    8088ed2 <dbus_shutdown+0xa1f2>
jmp    8088edd <dbus_shutdown+0xa1fd>
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
lea    0x0(%esi),%esi
je     8088edd <dbus_shutdown+0xa1fd>
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0xa,%dl
jne    8088ec8 <dbus_shutdown+0xa1e8>
test   %dl,%dl
je     80891a3 <dbus_shutdown+0xa4c3>
movzbl (%eax),%edx
xor    %ecx,%ecx
jmp    8088dbb <dbus_shutdown+0xa0db>
nop
cmp    $0x27,%al
je     8088fa8 <dbus_shutdown+0xa2c8>
cmp    $0x5c,%al
je     8088f08 <dbus_shutdown+0xa228>
cmp    $0x23,%al
xchg   %ax,%ax
jne    8088d99 <dbus_shutdown+0xa0b9>
xchg   %ax,%ax
movzbl 0x0(%ebp),%ecx
mov    %ebp,%eax
mov    %ecx,%edx
jmp    8088dbb <dbus_shutdown+0xa0db>
lea    0x0(%esi),%esi
test   $0x1,%esi
je     8088f29 <dbus_shutdown+0xa249>
cmp    $0x22,%cl
je     8088d99 <dbus_shutdown+0xa0b9>
xor    %ecx,%ecx
jmp    8088d99 <dbus_shutdown+0xa0b9>
xor    %ebp,%ebp
test   %esi,%esi
je     8088f4a <dbus_shutdown+0xa26a>
xchg   %ax,%ax
mov    (%edi,%ebp,4),%eax
add    $0x1,%ebp
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
cmp    %esi,%ebp
jne    8088f38 <dbus_shutdown+0xa258>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    0x14(%esp),%edi
lea    -0x39450(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %edi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movsbl %al,%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
jne    8088f08 <dbus_shutdown+0xa228>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x2c(%esp),%ecx
test   %ecx,%ecx
je     8088f9a <dbus_shutdown+0xa2ba>
lea    -0x39450(%ebx),%eax
lea    0x2c(%esp),%esi
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
jmp    8088f9a <dbus_shutdown+0xa2ba>
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x0(%ebp),%edx
mov    %ebp,%eax
jmp    8088dbb <dbus_shutdown+0xa0db>
mov    0x6c(%esp),%eax
lea    0x2c(%esp),%edx
mov    %ecx,0x14(%esp)
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8088ab0 <dbus_shutdown+0x9dd0>
mov    0x14(%esp),%ecx
test   %eax,%eax
je     8088fe1 <dbus_shutdown+0xa301>
test   %cl,%cl
lea    -0x18320(%ebx),%eax
jne    808914b <dbus_shutdown+0xa46b>
mov    0x2c(%esp),%esi
test   %esi,%esi
je     8089145 <dbus_shutdown+0xa465>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x2c(%esp),%eax
test   %eax,%eax
mov    %eax,0x28(%esp)
je     8088f9a <dbus_shutdown+0xa2ba>
lea    0x28(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   807db40 <dbus_watch_handle+0x1f80>
mov    %eax,0x1c(%esp)
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%edi
je     8088f52 <dbus_shutdown+0xa272>
mov    0x28(%esp),%ebp
xor    %esi,%esi
test   %ebp,%ebp
jne    80890c7 <dbus_shutdown+0xa3e7>
jmp    80890e6 <dbus_shutdown+0xa406>
lea    0x0(%esi),%esi
add    $0x1,%esi
test   %ebp,%ebp
je     80890e6 <dbus_shutdown+0xa406>
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   8088b30 <dbus_shutdown+0x9e50>
test   %eax,%eax
mov    %eax,(%edi,%esi,4)
je     8088f30 <dbus_shutdown+0xa250>
mov    0x4(%ebp),%ebp
cmp    0x28(%esp),%ebp
jne    80890c0 <dbus_shutdown+0xa3e0>
mov    0x18(%esp),%eax
mov    0x14(%esp),%esi
movl   $0x0,-0x4(%edi,%eax,1)
lea    -0x39450(%ebx),%eax
movl   $0x0,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807db70 <dbus_watch_handle+0x1fb0>
mov    %esi,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x64(%esp),%edx
test   %edx,%edx
je     808912a <dbus_shutdown+0xa44a>
mov    0x64(%esp),%eax
mov    0x1c(%esp),%ecx
mov    %ecx,(%eax)
mov    0x68(%esp),%eax
test   %eax,%eax
je     8089191 <dbus_shutdown+0xa4b1>
mov    0x68(%esp),%eax
mov    %edi,(%eax)
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x18300(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21a2c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8088fe1 <dbus_shutdown+0xa301>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    8088f9a <dbus_shutdown+0xa2ba>
mov    %edi,(%esp)
call   807ec20 <dbus_free_string_array>
mov    $0x1,%eax
jmp    8088f9c <dbus_shutdown+0xa2bc>
mov    0x6c(%esp),%eax
lea    0x2c(%esp),%edx
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   8088ab0 <dbus_shutdown+0x9dd0>
test   %eax,%eax
je     8088fe1 <dbus_shutdown+0xa301>
jmp    8089059 <dbus_shutdown+0xa379>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    %eax,0x2c(%esp)
mov    0x70(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2ee1c,%ebx
mov    %edx,0x28(%esp)
test   %eax,%eax
je     8089310 <dbus_shutdown+0xa630>
mov    (%eax),%edi
movl   $0x45,(%esp)
mov    $0x400,%esi
call   804d250 <sysconf@plt>
test   %eax,%eax
cmovg  %eax,%esi
lea    0x3c(%esp),%eax
mov    %eax,0x24(%esp)
jmp    808923b <dbus_shutdown+0xa55b>
mov    %edi,(%esp)
call   804da40 <getgrnam_r@plt>
mov    0x20(%esp),%ecx
cmp    $0x22,%eax
jne    8089290 <dbus_shutdown+0xa5b0>
cmp    $0x7ffff,%esi
ja     8089290 <dbus_shutdown+0xa5b0>
mov    %ebp,(%esp)
add    %esi,%esi
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%ebp
je     80892e8 <dbus_shutdown+0xa608>
mov    0x24(%esp),%eax
lea    0x40(%esp),%ecx
test   %edi,%edi
movl   $0x0,0x3c(%esp)
mov    %esi,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x10(%esp)
mov    %ecx,0x4(%esp)
mov    %ecx,0x20(%esp)
jne    8089218 <dbus_shutdown+0xa538>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804da10 <getgrgid_r@plt>
mov    0x20(%esp),%ecx
cmp    $0x22,%eax
je     8089229 <dbus_shutdown+0xa549>
lea    0x0(%esi),%esi
test   %eax,%eax
jne    808929a <dbus_shutdown+0xa5ba>
cmp    %ecx,0x3c(%esp)
je     8089317 <dbus_shutdown+0xa637>
test   %edi,%edi
lea    -0x19101(%ebx),%esi
cmovne %edi,%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x181c4(%ebx),%ecx
mov    %esi,0xc(%esp)
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %edi,%edi
jmp    80891f8 <dbus_shutdown+0xa518>
mov    0x48(%esp),%eax
mov    0x2c(%esp),%edi
mov    %eax,(%edi)
mov    0x40(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %edi,%edx
mov    %eax,%ecx
test   %ecx,%ecx
mov    %eax,0x4(%edx)
mov    $0x1,%eax
je     808934f <dbus_shutdown+0xa66f>
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
call   807ebb0 <dbus_free>
mov    0x20(%esp),%eax
jmp    8089308 <dbus_shutdown+0xa628>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x74(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    808933d <dbus_shutdown+0xa65d>
jmp    8089380 <dbus_shutdown+0xa6a0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2ec70,%ebx
test   %eax,%eax
je     8089415 <dbus_shutdown+0xa735>
mov    (%eax),%ebp
movl   $0x1a4,0x8(%esp)
movl   $0xc1,0x4(%esp)
mov    %ebp,(%esp)
call   804d570 <open@plt>
test   %eax,%eax
mov    %eax,%esi
js     8089558 <dbus_shutdown+0xa878>
lea    -0x2027d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   804d580 <fdopen@plt>
test   %eax,%eax
mov    %eax,%edi
je     8089588 <dbus_shutdown+0xa8a8>
mov    0x58(%esp),%eax
movl   $0x1,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
lea    -0x182c5(%ebx),%eax
mov    %eax,0x8(%esp)
call   804d9b0 <__fprintf_chk@plt>
test   %eax,%eax
js     80894b8 <dbus_shutdown+0xa7d8>
mov    %edi,(%esp)
call   804d1b0 <fclose@plt>
cmp    $0xffffffff,%eax
je     8089510 <dbus_shutdown+0xa830>
mov    0x54(%esp),%edx
test   %edx,%edx
je     808942d <dbus_shutdown+0xa74d>
mov    0x54(%esp),%eax
mov    %eax,(%esp)
call   807ef40 <dbus_shutdown+0x260>
test   %eax,%eax
jne    8089440 <dbus_shutdown+0xa760>
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x20(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8089486 <dbus_shutdown+0xa7a6>
mov    0x58(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8087590 <dbus_shutdown+0x88b0>
test   %eax,%eax
je     808947e <dbus_shutdown+0xa79e>
lea    -0x17a4e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    80895e0 <dbus_shutdown+0xa900>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x1c(%esp)
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x1c(%esp),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x10(%esp)
lea    -0x182c0(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
call   804d1b0 <fclose@plt>
xor    %eax,%eax
jmp    80894aa <dbus_shutdown+0xa7ca>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x182a4(%ebx),%edx
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    80894aa <dbus_shutdown+0xa7ca>
xchg   %ax,%ax
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x192e8(%ebx),%edx
mov    %edi,0x10(%esp)
mov    %ebp,0xc(%esp)
jmp    808953b <dbus_shutdown+0xa85b>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x182e0(%ebx),%ecx
mov    %ecx,0x8(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
xor    %eax,%eax
jmp    80894aa <dbus_shutdown+0xa7ca>
nop
mov    0x5c(%esp),%eax
mov    0x24(%esp),%ebp
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0x10(%esp)
mov    0x54(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %eax,(%esp)
call   8081420 <dbus_shutdown+0x2740>
cmp    %ebp,%eax
je     8089655 <dbus_shutdown+0xa975>
mov    0x5c(%esp),%eax
test   %eax,%eax
je     8089624 <dbus_shutdown+0xa944>
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     8089633 <dbus_shutdown+0xa953>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
jmp    80894aa <dbus_shutdown+0xa7ca>
lea    -0x18198(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8089624 <dbus_shutdown+0xa944>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x0(%esi),%esi
jmp    808942d <dbus_shutdown+0xa74d>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2e988,%ebx
sub    $0x10,%esp
lea    -0x181f5(%ebx),%eax
mov    %eax,(%esp)
call   804d220 <chdir@plt>
test   %eax,%eax
js     80897d8 <dbus_shutdown+0xaaf8>
call   804d840 <fork@plt>
cmp    $0xffffffff,%eax
mov    %eax,%esi
je     8089778 <dbus_shutdown+0xaa98>
test   %eax,%eax
je     80896f0 <dbus_shutdown+0xaa10>
mov    0x28(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8089380 <dbus_shutdown+0xa6a0>
test   %eax,%eax
jne    8089801 <dbus_shutdown+0xab21>
mov    %esi,(%esp)
movl   $0xf,0x4(%esp)
call   804d560 <kill@plt>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x18f1f(%ebx),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804d570 <open@plt>
test   %eax,%eax
mov    %eax,%esi
js     808975b <dbus_shutdown+0xaa7b>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d040 <dup2@plt>
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   804d040 <dup2@plt>
lea    -0x18271(%ebx),%eax
mov    %eax,(%esp)
call   8087250 <dbus_shutdown+0x8570>
test   %eax,%eax
je     8089743 <dbus_shutdown+0xaa63>
cmpb   $0x0,(%eax)
jne    8089753 <dbus_shutdown+0xaa73>
movl   $0x2,0x4(%esp)
mov    %esi,(%esp)
call   804d040 <dup2@plt>
mov    %esi,(%esp)
call   804dae0 <close@plt>
mov    0x2c(%esp),%eax
test   %eax,%eax
je     80897c0 <dbus_shutdown+0xaae0>
call   804d590 <setsid@plt>
mov    $0x1,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x1828b(%ebx),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x12,(%esp)
call   804da60 <umask@plt>
call   804d590 <setsid@plt>
mov    $0x1,%eax
jmp    808976d <dbus_shutdown+0xaa8d>
lea    -0x18160(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
movl   $0x0,(%esp)
call   804d110 <_exit@plt>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2e7e6,%ebx
mov    0x30(%esp),%eax
lea    0x10(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %esi,(%esp)
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
call   808a7d0 <dbus_shutdown+0xbaf0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2e794,%ebx
mov    0x60(%esp),%edi
lea    0x30(%esp),%esi
mov    %esi,(%esp)
mov    %edi,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   808a7d0 <dbus_shutdown+0xbaf0>
test   %eax,%eax
je     80898f8 <dbus_shutdown+0xac18>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   804d320 <setgroups@plt>
test   %eax,%eax
js     80899b0 <dbus_shutdown+0xacd0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804d4f0 <setgid@plt>
test   %eax,%eax
js     8089928 <dbus_shutdown+0xac48>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   804d900 <setuid@plt>
mov    %eax,%edx
mov    $0x1,%eax
test   %edx,%edx
js     8089978 <dbus_shutdown+0xac98>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1813c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    0x2c(%esp),%edi
mov    %eax,%ebp
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x1825f(%ebx),%edx
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    0x28(%esp),%edi
mov    %eax,%ebp
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18242(%ebx),%edx
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
jmp    8089957 <dbus_shutdown+0xac77>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x4(%esp)
lea    -0x18118(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80898be <dbus_shutdown+0xabde>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2e617,%ebx
sub    $0x1c,%esp
movl   $0x8,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8089a28 <dbus_shutdown+0xad48>
mov    %eax,0x4(%esp)
movl   $0x7,(%esp)
call   804d2b0 <getrlimit@plt>
test   %eax,%eax
js     8089a50 <dbus_shutdown+0xad70>
mov    %esi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    8089a1a <dbus_shutdown+0xad3a>
xchg   %ax,%ax
call   804d730 <__errno_location@plt>
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%ebp
mov    (%edi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18225(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    8089a1a <dbus_shutdown+0xad3a>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2e558,%ebx
sub    $0x30,%esp
call   804d270 <getuid@plt>
test   %eax,%eax
je     8089ac8 <dbus_shutdown+0xade8>
mov    $0x1,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
lea    0x28(%esp),%esi
mov    %esi,0x4(%esp)
movl   $0x7,(%esp)
call   804d2b0 <getrlimit@plt>
test   %eax,%eax
js     8089b60 <dbus_shutdown+0xae80>
mov    0x28(%esp),%eax
cmp    $0xffffffff,%eax
je     8089aba <dbus_shutdown+0xadda>
cmp    0x40(%esp),%eax
jae    8089aba <dbus_shutdown+0xadda>
mov    0x40(%esp),%eax
mov    %esi,0x4(%esp)
movl   $0x7,(%esp)
mov    %eax,0x2c(%esp)
mov    %eax,0x28(%esp)
call   804d4c0 <setrlimit@plt>
test   %eax,%eax
jns    8089aba <dbus_shutdown+0xadda>
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x40(%esp),%ecx
lea    -0x180ec(%ebx),%edx
mov    %edi,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8089abf <dbus_shutdown+0xaddf>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18225(%ebx),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8089abf <dbus_shutdown+0xaddf>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2e445,%ebx
mov    0x20(%esp),%eax
movl   $0x7,(%esp)
mov    %eax,0x4(%esp)
call   804d4c0 <setrlimit@plt>
mov    $0x1,%edx
test   %eax,%eax
js     8089be8 <dbus_shutdown+0xaf08>
add    $0x10,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x180c8(%ebx),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x10,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2e3c7,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2e3aa,%ebx
sub    $0x18,%esp
movl   $0x18,0x8(%esp)
movl   $0x21,0x4(%esp)
lea    -0x1820a(%ebx),%eax
mov    %eax,(%esp)
call   804d910 <openlog@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2e363,%ebx
cmp    $0x1,%eax
je     8089d10 <dbus_shutdown+0xb030>
jb     8089ce0 <dbus_shutdown+0xb000>
cmp    $0x2,%eax
jne    8089d05 <dbus_shutdown+0xb025>
mov    0x28(%esp),%eax
movl   $0x1,0x4(%esp)
movl   $0x1a,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   804d410 <__vsyslog_chk@plt>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
nop
mov    $0x1d,%eax
mov    0x28(%esp),%edx
mov    0x24(%esp),%ecx
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0xc(%esp)
mov    %ecx,0x8(%esp)
call   804d410 <__vsyslog_chk@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    $0x25,%eax
jmp    8089ce5 <dbus_shutdown+0xb005>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2e2cb,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8089c90 <dbus_shutdown+0xafb0>
add    $0x18,%esp
pop    %ebx
ret
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2e2a8,%ebx
sub    $0x120,%esp
lea    0x14(%esp),%esi
mov    %esi,(%esp)
lea    0x98(%esp),%edi
call   804d850 <sigemptyset@plt>
mov    0x134(%esp),%eax
mov    $0x20,%ecx
rep movsl %ds:(%esi),%es:(%edi)
movl   $0x0,0x8(%esp)
movl   $0x0,0x118(%esp)
00
mov    %eax,0x94(%esp)
lea    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x130(%esp),%eax
mov    %eax,(%esp)
call   804d9f0 <sigaction@plt>
add    $0x120,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2e227,%ebx
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d7e0 <access@plt>
test   %eax,%eax
sete   %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2e1f8,%ebx
sub    $0x30,%esp
lea    0x20(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8089ea8 <dbus_shutdown+0xb1c8>
lea    -0x18205(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    8089e70 <dbus_shutdown+0xb190>
lea    0x34c(%ebx),%eax
xor    %edi,%edi
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x30,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x40(%esp),%eax
lea    0x10(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     8089e3b <dbus_shutdown+0xb15b>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8089dd0 <dbus_shutdown+0xb0f0>
mov    %eax,%edi
jmp    8089e5f <dbus_shutdown+0xb17f>
lea    0x0(%esi,%eiz,1),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x4(%eax),%edx
test   %edx,%edx
jle    8089ef8 <dbus_shutdown+0xb218>
mov    (%eax),%eax
cmpb   $0x2f,(%eax)
sete   %al
movzbl %al,%eax
ret
nop
xor    %eax,%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x70,%esp
lea    0x18(%esp),%eax
mov    0x84(%esp),%esi
mov    %eax,0x8(%esp)
mov    0x80(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2e0df,%ebx
mov    (%eax),%eax
movl   $0x3,(%esp)
mov    %eax,0x4(%esp)
call   804d390 <__xstat@plt>
test   %eax,%eax
js     8089f80 <dbus_shutdown+0xb2a0>
mov    0x28(%esp),%eax
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x44(%esp),%eax
mov    %eax,0x10(%esi)
mov    0x50(%esp),%eax
mov    %eax,0x14(%esi)
mov    0x58(%esp),%eax
mov    %eax,0x18(%esi)
mov    0x60(%esp),%eax
mov    %eax,0x1c(%esi)
mov    $0x1,%eax
add    $0x70,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%edi
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x1828e(%ebx),%edx
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x88(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    8089f79 <dbus_shutdown+0xb299>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2e020,%ebx
mov    (%eax),%edi
mov    %edi,(%esp)
call   804db10 <opendir@plt>
test   %eax,%eax
mov    %eax,%esi
je     808a010 <dbus_shutdown+0xb330>
movl   $0x4,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
je     808a053 <dbus_shutdown+0xb373>
mov    %esi,(%eax)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804d730 <__errno_location@plt>
mov    %eax,%esi
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,%ebp
mov    (%esi),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x180a4(%ebx),%edx
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    808a008 <dbus_shutdown+0xb328>
mov    %esi,(%esp)
call   804daf0 <closedir@plt>
lea    -0x18080(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    808a008 <dbus_shutdown+0xb328>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2df77,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804d730 <__errno_location@plt>
mov    %eax,%esi
lea    0x0(%esi),%esi
movl   $0x0,(%esi)
mov    (%edi),%eax
mov    %eax,(%esp)
call   804d870 <readdir@plt>
test   %eax,%eax
mov    %eax,%ebp
je     808a138 <dbus_shutdown+0xb458>
cmpb   $0x2e,0xb(%eax)
jne    808a0cd <dbus_shutdown+0xb3ed>
cmpb   $0x0,0xc(%eax)
je     808a0a0 <dbus_shutdown+0xb3c0>
cmpw   $0x2e,0xc(%eax)
je     808a0a0 <dbus_shutdown+0xb3c0>
mov    0x34(%esp),%eax
mov    $0x1,%esi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0x34(%esp),%eax
lea    0xb(%ebp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808a108 <dbus_shutdown+0xb428>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    -0x1804c(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%esi),%edi
xor    %esi,%esi
test   %edi,%edi
je     808a0fd <dbus_shutdown+0xb41d>
mov    %edi,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %edi,(%esp)
mov    %eax,%ebp
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x1828e(%ebx),%edx
mov    %ebp,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x1c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x2de72,%ebx
mov    (%esi),%eax
mov    %eax,(%esp)
call   804daf0 <closedir@plt>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    %edx,0x4(%esp)
mov    $0xffffffff,%edx
mov    %ecx,0x8(%esp)
jmp    80891d0 <dbus_shutdown+0xa4f0>
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    0xc(%esp),%ecx
movl   $0x0,0x4(%esp)
mov    %ecx,0x8(%esp)
jmp    80891d0 <dbus_shutdown+0xa4f0>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2de03,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808a860 <dbus_shutdown+0xbb80>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2ddd3,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808aab0 <dbus_shutdown+0xbdd0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x28(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2dda3,%ebx
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808ab70 <dbus_shutdown+0xbe90>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2dd73,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808a690 <dbus_shutdown+0xb9b0>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2dd4a,%ebx
sub    $0x8,%esp
call   8081af0 <dbus_shutdown+0x2e10>
cmp    0x10(%esp),%eax
sete   %al
add    $0x8,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
xor    %eax,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x40(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x2dd01,%ebx
mov    0x44(%esp),%esi
mov    0x4(%edi),%ecx
cmp    $0x0,%ecx
mov    %ecx,0x2c(%esp)
je     808a3c0 <dbus_shutdown+0xb6e0>
jle    808a353 <dbus_shutdown+0xb673>
mov    (%edi),%edx
mov    %ecx,%eax
cmpb   $0x2f,-0x1(%edx,%ecx,1)
je     808a32f <dbus_shutdown+0xb64f>
jmp    808a358 <dbus_shutdown+0xb678>
cmpb   $0x2f,-0x1(%edx,%eax,1)
jne    808a358 <dbus_shutdown+0xb678>
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x2c(%esp)
jne    808a328 <dbus_shutdown+0xb648>
lea    -0x181f5(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %ecx,%eax
lea    0x0(%esi),%esi
lea    0x2c(%esp),%edx
mov    %edx,0xc(%esp)
movl   $0x2f,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   808c410 <dbus_shutdown+0xd730>
mov    0x2c(%esp),%eax
test   %eax,%eax
js     808a3c0 <dbus_shutdown+0xb6e0>
mov    (%edi),%edx
jne    808a393 <dbus_shutdown+0xb6b3>
jmp    808a3e0 <dbus_shutdown+0xb700>
lea    0x0(%esi),%esi
sub    $0x1,%eax
test   %eax,%eax
mov    %eax,0x2c(%esp)
je     808a3e0 <dbus_shutdown+0xb700>
cmpb   $0x2f,-0x1(%edx,%eax,1)
je     808a388 <dbus_shutdown+0xb6a8>
mov    0x4(%esi),%edx
mov    %esi,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    %edx,0x10(%esp)
movl   $0x0,0x4(%esp)
call   807fc50 <dbus_shutdown+0xf70>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x1cb29(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
cmpb   $0x2f,(%edx)
jne    808a39a <dbus_shutdown+0xb6ba>
jmp    808a33a <dbus_shutdown+0xb65a>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2dc07,%ebx
sub    $0x4c,%esp
lea    0x20(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808a570 <dbus_shutdown+0xb890>
lea    0x30(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808a4f8 <dbus_shutdown+0xb818>
mov    0x60(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x181f3(%ebx),%eax
mov    %eax,0x4(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     808a530 <dbus_shutdown+0xb850>
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   804d570 <open@plt>
test   %eax,%eax
mov    %eax,%ebp
js     808a5e8 <dbus_shutdown+0xb908>
mov    0x68(%esp),%eax
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   80818b0 <dbus_shutdown+0x2bd0>
test   %eax,%eax
jne    808a5a0 <dbus_shutdown+0xb8c0>
call   804d730 <__errno_location@plt>
mov    %eax,%edx
mov    (%eax),%eax
mov    %edx,0x1c(%esp)
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    0x1c(%esp),%edx
mov    %eax,0x18(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x14(%esp)
mov    (%edx),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x18(%esp),%ecx
lea    -0x181e1(%ebx),%edx
mov    %edx,0x8(%esp)
mov    %ecx,0x10(%esp)
mov    0x14(%esp),%ecx
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0xc(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
jmp    808a552 <dbus_shutdown+0xb872>
lea    0x0(%esi,%eiz,1),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x6c(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8082b90 <dbus_shutdown+0x3eb0>
test   %eax,%eax
je     808a552 <dbus_shutdown+0xb872>
mov    0x34(%esp),%edx
mov    0x30(%esp),%eax
test   %edx,%edx
lea    (%eax,%edx,1),%ecx
jg     808a5d2 <dbus_shutdown+0xb8f2>
jmp    808a640 <dbus_shutdown+0xb960>
lea    0x0(%esi),%esi
movb   $0x20,(%eax)
add    $0x1,%eax
cmp    %ecx,%eax
je     808a640 <dbus_shutdown+0xb960>
movzbl (%eax),%edx
test   %dl,%dl
je     808a5c8 <dbus_shutdown+0xb8e8>
sub    $0x20,%edx
cmp    $0x5f,%dl
jbe    808a5cb <dbus_shutdown+0xb8eb>
movb   $0x3f,(%eax)
jmp    808a5cb <dbus_shutdown+0xb8eb>
xchg   %ax,%ax
call   804d730 <__errno_location@plt>
mov    %eax,%ebp
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    0x20(%esp),%edx
mov    %edx,0x14(%esp)
mov    %eax,0x18(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   80878c0 <dbus_shutdown+0x8be0>
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
mov    %edx,0xc(%esp)
lea    -0x192e8(%ebx),%edx
mov    %ecx,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0x6c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808a552 <dbus_shutdown+0xb872>
nop
mov    0x64(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x8(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808a530 <dbus_shutdown+0xb850>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%eax
jmp    808a524 <dbus_shutdown+0xb844>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2d967,%ebx
sub    $0x2c,%esp
movl   $0x0,0x4(%esp)
mov    0x40(%esp),%esi
lea    -0x1802a(%ebx),%eax
mov    %eax,(%esp)
call   804d7e0 <access@plt>
test   %eax,%eax
js     808a6f0 <dbus_shutdown+0xba10>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804d3f0 <sd_uid_get_seats@plt>
cmp    $0x0,%eax
jl     808a750 <dbus_shutdown+0xba70>
setg   %al
movzbl %al,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8086050 <dbus_shutdown+0x7370>
call   80864b0 <dbus_shutdown+0x77d0>
test   %eax,%eax
je     808a790 <dbus_shutdown+0xbab0>
mov    0x44(%esp),%ecx
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   8085e80 <dbus_shutdown+0x71a0>
test   %eax,%eax
je     808a7c0 <dbus_shutdown+0xbae0>
mov    0x44(%esp),%edx
mov    %edx,0x4(%esp)
mov    0x10(%eax),%eax
mov    %eax,(%esp)
call   8089e00 <dbus_shutdown+0xb120>
mov    %eax,%esi
call   8086080 <dbus_shutdown+0x73a0>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
neg    %eax
mov    %eax,(%esp)
mov    %eax,%edi
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %edi,(%esp)
mov    %eax,%ebp
call   80878c0 <dbus_shutdown+0x8be0>
lea    -0x18014(%ebx),%edx
mov    %ebp,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    808a6e3 <dbus_shutdown+0xba03>
nop
lea    -0x17fe8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
call   8086080 <dbus_shutdown+0x73a0>
xor    %eax,%eax
jmp    808a6e3 <dbus_shutdown+0xba03>
lea    0x0(%esi,%eiz,1),%esi
call   8086080 <dbus_shutdown+0x73a0>
xor    %eax,%eax
jmp    808a6e3 <dbus_shutdown+0xba03>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2d828,%ebx
sub    $0x20,%esp
mov    0x34(%esp),%edi
mov    0x38(%esp),%esi
call   8086050 <dbus_shutdown+0x7370>
call   80864b0 <dbus_shutdown+0x77d0>
test   %eax,%eax
je     808a848 <dbus_shutdown+0xbb68>
lea    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x30(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8086620 <dbus_shutdown+0x7940>
test   %eax,%eax
je     808a848 <dbus_shutdown+0xbb68>
test   %edi,%edi
je     808a827 <dbus_shutdown+0xbb47>
mov    0x1c(%esp),%eax
mov    (%eax),%eax
mov    %eax,(%edi)
test   %esi,%esi
je     808a834 <dbus_shutdown+0xbb54>
mov    0x1c(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esi)
call   8086080 <dbus_shutdown+0x73a0>
add    $0x20,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8086080 <dbus_shutdown+0x73a0>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2d793,%ebx
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808a7d0 <dbus_shutdown+0xbaf0>
add    $0x18,%esp
pop    %ebx
ret
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x2d760,%ebx
mov    0x40(%esp),%ebp
cmp    $0xffffffff,%edi
je     808a8d0 <dbus_shutdown+0xbbf0>
mov    %edi,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   807c4f0 <dbus_watch_handle+0x930>
test   %eax,%eax
mov    %eax,%esi
je     808a910 <dbus_shutdown+0xbc30>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esp),%eax
mov    %eax,(%esp)
call   8085e30 <dbus_shutdown+0x7150>
test   %eax,%eax
je     808a8f5 <dbus_shutdown+0xbc15>
mov    0x1c(%esp),%eax
cmp    $0xffffffff,%eax
jne    808aa59 <dbus_shutdown+0xbd79>
mov    0x48(%esp),%eax
mov    (%eax),%eax
mov    %eax,0x4(%esp)
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   807c470 <dbus_watch_handle+0x8b0>
test   %eax,%eax
mov    %eax,%esi
jne    808a8c4 <dbus_shutdown+0xbbe4>
movl   $0x8,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edx
je     808aa36 <dbus_shutdown+0xbd56>
mov    0x4c(%esp),%eax
cmp    $0xffffffff,%edi
mov    %eax,0x8(%esp)
je     808a9d8 <dbus_shutdown+0xbcf8>
mov    %edx,(%esp)
mov    %edi,0x4(%esp)
mov    %edx,0xc(%esp)
call   808a1d0 <dbus_shutdown+0xb4f0>
mov    0xc(%esp),%edx
test   %eax,%eax
je     808a9f8 <dbus_shutdown+0xbd18>
mov    %edx,0x8(%esp)
mov    (%edx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   807c6b0 <dbus_watch_handle+0xaf0>
mov    0xc(%esp),%edx
test   %eax,%eax
je     808aa05 <dbus_shutdown+0xbd25>
mov    %edx,0x8(%esp)
mov    0x4(%edx),%eax
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x10(%ebp),%eax
mov    %eax,(%esp)
call   807cba0 <dbus_watch_handle+0xfe0>
mov    0xc(%esp),%edx
mov    %edx,%esi
test   %eax,%eax
jne    808a8c4 <dbus_shutdown+0xbbe4>
mov    (%edx),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
mov    0x8(%ebp),%eax
mov    %eax,(%esp)
call   807c5d0 <dbus_watch_handle+0xa10>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808a8c4 <dbus_shutdown+0xbbe4>
xchg   %ax,%ax
mov    0x48(%esp),%eax
mov    %edx,(%esp)
mov    %edx,0xc(%esp)
mov    %eax,0x4(%esp)
call   808a1b0 <dbus_shutdown+0xb4d0>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    808a953 <dbus_shutdown+0xbc73>
mov    %edx,(%esp)
call   8085e00 <dbus_shutdown+0x7120>
jmp    808a8c4 <dbus_shutdown+0xbbe4>
lea    -0x21ca0(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0xc(%esp),%edx
mov    %edx,(%esp)
call   8085e00 <dbus_shutdown+0x7120>
jmp    808a8c4 <dbus_shutdown+0xbbe4>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x4c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808a8c4 <dbus_shutdown+0xbbe4>
mov    %eax,%edi
jmp    808a8af <dbus_shutdown+0xbbcf>
push   %ebx
sub    $0x18,%esp
mov    0x2c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2d593,%ebx
movl   $0xffffffff,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808a890 <dbus_shutdown+0xbbb0>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
setne  %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2d54a,%ebx
sub    $0x28,%esp
call   8086050 <dbus_shutdown+0x7370>
call   80864b0 <dbus_shutdown+0x77d0>
test   %eax,%eax
je     808ab10 <dbus_shutdown+0xbe30>
lea    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x30(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   808aa60 <dbus_shutdown+0xbd80>
test   %eax,%eax
je     808ab10 <dbus_shutdown+0xbe30>
mov    0x1c(%esp),%eax
mov    (%eax),%edx
mov    0x34(%esp),%eax
mov    %edx,(%eax)
call   8086080 <dbus_shutdown+0x73a0>
add    $0x28,%esp
mov    $0x1,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
call   8086080 <dbus_shutdown+0x73a0>
add    $0x28,%esp
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x2c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2d4d3,%ebx
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808a890 <dbus_shutdown+0xbbb0>
mov    0x28(%esp),%edx
test   %eax,%eax
mov    %eax,(%edx)
setne  %al
add    $0x18,%esp
movzbl %al,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2d485,%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
movl   $0x0,(%esi)
movl   $0x0,(%edi)
call   8086050 <dbus_shutdown+0x7370>
call   80864b0 <dbus_shutdown+0x77d0>
test   %eax,%eax
je     808ac18 <dbus_shutdown+0xbf38>
lea    0x1c(%esp),%edx
mov    %edx,0x8(%esp)
mov    0x30(%esp),%edx
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   80862d0 <dbus_shutdown+0x75f0>
test   %eax,%eax
je     808ac18 <dbus_shutdown+0xbf38>
mov    0x1c(%esp),%eax
mov    0xc(%eax),%eax
test   %eax,%eax
jle    808ac07 <dbus_shutdown+0xbf27>
shl    $0x2,%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,(%esi)
je     808ac18 <dbus_shutdown+0xbf38>
mov    0x1c(%esp),%eax
mov    0xc(%eax),%edx
mov    %edx,(%edi)
mov    0xc(%eax),%ecx
mov    (%esi),%edx
mov    0x8(%eax),%eax
shl    $0x2,%ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804d170 <memcpy@plt>
call   8086080 <dbus_shutdown+0x73a0>
add    $0x20,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   8086080 <dbus_shutdown+0x73a0>
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2d3c1,%ebx
test   %eax,%eax
je     808ac75 <dbus_shutdown+0xbf95>
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807bb00 <dbus_watch_set_data+0x180>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
movl   $0x0,0x20(%esi)
mov    0x8(%esi),%eax
test   %eax,%eax
js     808ac93 <dbus_shutdown+0xbfb3>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x8(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x1c(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2d351,%ebx
test   %eax,%eax
je     808ace5 <dbus_shutdown+0xc005>
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807bb00 <dbus_watch_set_data+0x180>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
movl   $0x0,0x1c(%esi)
mov    0xc(%esi),%eax
test   %eax,%eax
js     808ad03 <dbus_shutdown+0xc023>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0xc(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2d2e6,%ebx
lea    0x1f(%esp),%esi
movb   $0x0,0x1f(%esp)
jmp    808ad3a <dbus_shutdown+0xc05a>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    808ad58 <dbus_shutdown+0xc078>
mov    0x354(%ebx),%eax
movl   $0x1,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   804d650 <write@plt>
test   %eax,%eax
jle    808ad30 <dbus_shutdown+0xc050>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
mov    %eax,%ebp
push   %edi
xor    %edi,%edi
push   %esi
mov    %edx,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2d291,%ebx
sub    $0x1c,%esp
mov    %edx,0xc(%esp)
lea    0x0(%esi,%eiz,1),%esi
mov    $0x4,%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   804d650 <write@plt>
test   %eax,%eax
js     808adb0 <dbus_shutdown+0xc0d0>
add    %eax,%edi
cmp    $0x3,%edi
ja     808add8 <dbus_shutdown+0xc0f8>
mov    0xc(%esp),%eax
lea    (%eax,%edi,1),%esi
jmp    808ad80 <dbus_shutdown+0xc0a0>
nop
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
je     808ad80 <dbus_shutdown+0xc0a0>
lea    -0x17fc8(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
push   %ebp
mov    %edx,%ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x2c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2d210,%ebx
lea    0x14(%esp),%edi
jmp    808ae0c <dbus_shutdown+0xc12c>
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
jne    808ae40 <dbus_shutdown+0xc160>
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804d400 <waitpid@plt>
test   %eax,%eax
js     808ae00 <dbus_shutdown+0xc120>
jne    808ae66 <dbus_shutdown+0xc186>
testb  $0x18,0x40(%esp)
jne    808aeba <dbus_shutdown+0xc1da>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x4(%esp)
lea    -0x17f74(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
cmp    %eax,%esi
je     808ae88 <dbus_shutdown+0xc1a8>
mov    %eax,0x4(%esp)
lea    -0x17fa8(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
mov    0x14(%esp),%eax
lea    0x1c(%esp),%edx
movl   $0x0,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    %ebp,%eax
call   808ad60 <dbus_shutdown+0xc080>
lea    0x18(%esp),%edx
mov    %ebp,%eax
call   808ad60 <dbus_shutdown+0xc080>
movl   $0x0,(%esp)
call   804d550 <exit@plt>
movl   $0x0,(%esp)
call   804d550 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2d127,%ebx
sub    $0x24,%esp
mov    %edx,0xc(%esp)
call   804d730 <__errno_location@plt>
lea    0xc(%esp),%edx
mov    (%eax),%eax
mov    %eax,0x1c(%esp)
mov    %esi,%eax
call   808ad60 <dbus_shutdown+0xc080>
lea    0x1c(%esp),%edx
mov    %esi,%eax
call   808ad60 <dbus_shutdown+0xc080>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
mov    $0x4,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2d0d0,%ebx
sub    $0x2c,%esp
mov    %edx,0x1c(%esp)
movl   $0x0,0x18(%esp)
lea    0x0(%esi),%esi
mov    0x1c(%esp),%edi
add    0x18(%esp),%edi
jmp    808af64 <dbus_shutdown+0xc284>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
jne    808af90 <dbus_shutdown+0xc2b0>
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   804d0d0 <read@plt>
test   %eax,%eax
js     808af58 <dbus_shutdown+0xc278>
je     808afd6 <dbus_shutdown+0xc2f6>
add    %eax,0x18(%esp)
mov    $0x4,%esi
sub    0x18(%esp),%esi
jne    808af48 <dbus_shutdown+0xc268>
xor    %eax,%eax
jmp    808afc1 <dbus_shutdown+0xc2e1>
lea    0x0(%esi),%esi
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0xc(%esp)
lea    -0x17f38(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17f14(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    $0x1,%eax
mov    0x18(%esp),%ecx
mov    0x40(%esp),%edx
shr    $0x2,%ecx
mov    %ecx,(%edx)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x2,%eax
jmp    808afc1 <dbus_shutdown+0xc2e1>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2d015,%ebx
sub    $0x4c,%esp
mov    %eax,0x18(%esp)
lea    0x28(%esp),%edi
lea    0x30(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x24(%esp),%edx
mov    %eax,0x4(%esp)
mov    %esi,%eax
mov    %edi,(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x3c(%esp)
movb   $0x1,0x38(%esp)
call   808af20 <dbus_shutdown+0xc240>
cmp    $0x1,%eax
je     808b100 <dbus_shutdown+0xc420>
cmp    $0x2,%eax
jne    808b058 <dbus_shutdown+0xc378>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
cmpl   $0x1,0x28(%esp)
jne    808b049 <dbus_shutdown+0xc369>
mov    0x24(%esp),%edx
test   %edx,%edx
js     808b1eb <dbus_shutdown+0xc50b>
cmp    $0x2,%edx
jle    808b136 <dbus_shutdown+0xc456>
cmp    $0x3,%edx
jne    808b1eb <dbus_shutdown+0xc50b>
lea    0x2c(%esp),%eax
mov    $0x4,%edi
movl   $0xffffffff,0x2c(%esp)
movl   $0x0,0x14(%esp)
mov    %eax,0x1c(%esp)
lea    0x0(%esi),%esi
mov    0x1c(%esp),%ebp
add    0x14(%esp),%ebp
jmp    808b0c0 <dbus_shutdown+0xc3e0>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x4,%eax
jne    808b190 <dbus_shutdown+0xc4b0>
mov    %edi,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   804d0d0 <read@plt>
test   %eax,%eax
js     808b0b0 <dbus_shutdown+0xc3d0>
je     808b221 <dbus_shutdown+0xc541>
add    %eax,0x14(%esp)
mov    $0x4,%edi
sub    0x14(%esp),%edi
jne    808b0a0 <dbus_shutdown+0xc3c0>
mov    0x2c(%esp),%eax
mov    0x18(%esp),%ecx
mov    %eax,0x14(%ecx)
xor    %eax,%eax
jmp    808b049 <dbus_shutdown+0xc369>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%edx
mov    %eax,0x14(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x8(%esp)
lea    -0x17eec(%ebx),%edx
mov    %edx,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x10(%esp),%eax
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
mov    0x14(%esp),%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x10(%esp),%eax
lea    0x2c(%esp),%edx
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   808af20 <dbus_shutdown+0xc240>
cmp    $0x1,%eax
je     808b206 <dbus_shutdown+0xc526>
cmp    $0x2,%eax
je     808b049 <dbus_shutdown+0xc369>
cmpl   $0x1,0x28(%esp)
jne    808b049 <dbus_shutdown+0xc369>
mov    0x24(%esp),%edx
test   %edx,%edx
jne    808b22b <dbus_shutdown+0xc54b>
mov    0x18(%esp),%ecx
mov    0x2c(%esp),%edx
orb    $0x1,0x34(%ecx)
mov    %edx,0x30(%ecx)
movl   $0x0,0x2c(%ecx)
jmp    808b049 <dbus_shutdown+0xc369>
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    0x10(%esp),%edi
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
lea    -0x17f38(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17f14(%ebx),%eax
mov    %eax,0x4(%esp)
call   806b100 <dbus_set_error>
mov    0x34(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x17e70(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x17ea4(%ebx),%edx
mov    %edx,(%esp)
mov    %eax,0x10(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x10(%esp),%eax
jmp    808b049 <dbus_shutdown+0xc369>
mov    0x34(%esp),%edx
mov    %eax,0x14(%esp)
mov    %esi,0x4(%esp)
mov    %edx,0x8(%esp)
lea    -0x17ec8(%ebx),%edx
jmp    808b116 <dbus_shutdown+0xc436>
mov    $0x2,%eax
jmp    808b049 <dbus_shutdown+0xc369>
cmp    $0x1,%edx
je     808b24d <dbus_shutdown+0xc56d>
cmp    $0x2,%edx
jne    808b049 <dbus_shutdown+0xc369>
mov    0x18(%esp),%ecx
mov    0x2c(%esp),%edx
orb    $0x4,0x34(%ecx)
mov    %edx,0x2c(%ecx)
jmp    808b049 <dbus_shutdown+0xc369>
mov    0x18(%esp),%ecx
mov    0x2c(%esp),%edx
orb    $0x2,0x34(%ecx)
mov    %edx,0x2c(%ecx)
jmp    808b049 <dbus_shutdown+0xc369>
jmp    808b270 <dbus_shutdown+0xc590>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
mov    %eax,%esi
sub    $0x8,%esp
test   $0x1,%dl
jne    808b288 <dbus_shutdown+0xc5a8>
and    $0x18,%edx
jne    808b294 <dbus_shutdown+0xc5b4>
add    $0x8,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0xc(%eax),%edx
call   808afe0 <dbus_shutdown+0xc300>
test   %eax,%eax
je     808b280 <dbus_shutdown+0xc5a0>
add    $0x8,%esp
mov    %esi,%eax
pop    %esi
jmp    808aca0 <dbus_shutdown+0xbfc0>
nop
push   %esi
mov    %eax,%esi
sub    $0x8,%esp
test   $0x1,%dl
jne    808b2b8 <dbus_shutdown+0xc5d8>
and    $0x18,%edx
jne    808b2c4 <dbus_shutdown+0xc5e4>
add    $0x8,%esp
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x8(%eax),%edx
call   808afe0 <dbus_shutdown+0xc300>
test   %eax,%eax
je     808b2b0 <dbus_shutdown+0xc5d0>
add    $0x8,%esp
mov    %esi,%eax
pop    %esi
jmp    808ac30 <dbus_shutdown+0xbf50>
nop
push   %ebp
mov    %eax,%ecx
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %eax,0x18(%esp)
mov    0xc(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2cd1b,%ebx
mov    %edx,0x1c(%esp)
test   %eax,%eax
js     808b3f9 <dbus_shutdown+0xc719>
mov    %eax,0x20(%esp)
mov    0x8(%ecx),%eax
mov    $0x1,%esi
xor    %edi,%edi
mov    %si,0x24(%esp)
mov    $0x1,%esi
mov    %di,0x26(%esp)
test   %eax,%eax
js     808b330 <dbus_shutdown+0xc650>
mov    $0x1,%edx
xor    %ecx,%ecx
mov    %eax,0x20(%esp,%esi,8)
mov    %dx,0x24(%esp,%esi,8)
mov    %cx,0x26(%esp,%esi,8)
add    $0x1,%esi
lea    0x20(%esp),%edi
jmp    808b342 <dbus_shutdown+0xc662>
xchg   %ax,%ax
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    808b35c <dbus_shutdown+0xc67c>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8081c60 <dbus_shutdown+0x2f80>
test   %eax,%eax
mov    %eax,%ebp
js     808b338 <dbus_shutdown+0xc658>
test   %ebp,%ebp
je     808b3c0 <dbus_shutdown+0xc6e0>
test   %ebp,%ebp
jle    808b410 <dbus_shutdown+0xc730>
mov    0x18(%esp),%edx
sub    $0x1,%esi
lea    (%edi,%esi,8),%edi
mov    (%edi),%eax
cmp    0xc(%edx),%eax
je     808b39b <dbus_shutdown+0xc6bb>
mov    0x18(%esp),%ecx
cmp    0x8(%ecx),%eax
je     808b420 <dbus_shutdown+0xc740>
sub    $0x8,%edi
test   %esi,%esi
je     808b3b0 <dbus_shutdown+0xc6d0>
mov    0x18(%esp),%edx
sub    $0x1,%esi
mov    (%edi),%eax
cmp    0xc(%edx),%eax
jne    808b379 <dbus_shutdown+0xc699>
movswl 0x6(%edi),%edx
sub    $0x8,%edi
mov    0x18(%esp),%eax
call   808b270 <dbus_shutdown+0xc590>
test   %esi,%esi
jne    808b38d <dbus_shutdown+0xc6ad>
nop
add    $0x3c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    808b3da <dbus_shutdown+0xc6fa>
jmp    808b360 <dbus_shutdown+0xc680>
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
cmpl   $0x4,(%eax)
jne    808b410 <dbus_shutdown+0xc730>
movl   $0xffffffff,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8081c60 <dbus_shutdown+0x2f80>
test   %eax,%eax
mov    %eax,%ebp
js     808b3d0 <dbus_shutdown+0xc6f0>
jmp    808b360 <dbus_shutdown+0xc680>
mov    0x18(%esp),%eax
xor    %esi,%esi
mov    0x8(%eax),%eax
test   %eax,%eax
jns    808b318 <dbus_shutdown+0xc638>
lea    0x0(%esi),%esi
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movswl 0x6(%edi),%edx
mov    %ecx,%eax
call   808b2a0 <dbus_shutdown+0xc5c0>
jmp    808b386 <dbus_shutdown+0xc6a6>
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x2cbb0,%ebx
subl   $0x1,(%esi)
je     808b468 <dbus_shutdown+0xc788>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
call   808ac30 <dbus_shutdown+0xbf50>
mov    %esi,%eax
call   808aca0 <dbus_shutdown+0xbfc0>
mov    0x10(%esi),%eax
test   %eax,%eax
jle    808b4a6 <dbus_shutdown+0xc7c6>
lea    0x1c(%esp),%edi
movl   $0x1,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   804d400 <waitpid@plt>
test   %eax,%eax
je     808b4d0 <dbus_shutdown+0xc7f0>
js     808b538 <dbus_shutdown+0xc858>
movl   $0xffffffff,0x10(%esi)
mov    0x18(%esi),%eax
test   %eax,%eax
je     808b4b5 <dbus_shutdown+0xc7d5>
mov    %eax,(%esp)
call   807b630 <dbus_threads_init_default+0x2a40>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x9,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804d560 <kill@plt>
movl   $0x0,0x8(%esp)
mov    %edi,0x4(%esp)
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   804d400 <waitpid@plt>
test   %eax,%eax
jns    808b49f <dbus_shutdown+0xc7bf>
call   804d730 <__errno_location@plt>
mov    (%eax),%edx
mov    %eax,%ebp
cmp    $0x4,%edx
je     808b4e3 <dbus_shutdown+0xc803>
cmp    $0xa,%edx
je     808b548 <dbus_shutdown+0xc868>
mov    %edx,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x8(%esp)
mov    0x0(%ebp),%eax
mov    %eax,0x4(%esp)
lea    -0x17e08(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    808b49f <dbus_shutdown+0xc7bf>
nop
call   804d730 <__errno_location@plt>
mov    %eax,%ebp
mov    (%eax),%edx
jmp    808b50c <dbus_shutdown+0xc82c>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17e4c(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    808b49f <dbus_shutdown+0xc7bf>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2ca96,%ebx
mov    0x20(%esp),%esi
jmp    808b58c <dbus_shutdown+0xc8ac>
xchg   %ax,%ax
mov    0x14(%esi),%eax
cmp    $0xffffffff,%eax
jne    808b5a8 <dbus_shutdown+0xc8c8>
mov    $0x1,%edx
mov    %esi,%eax
call   808b2d0 <dbus_shutdown+0xc5f0>
mov    0x8(%esi),%edx
test   %edx,%edx
jns    808b578 <dbus_shutdown+0xc898>
mov    0xc(%esi),%eax
test   %eax,%eax
jns    808b578 <dbus_shutdown+0xc898>
mov    0x14(%esi),%eax
cmp    $0xffffffff,%eax
je     808b5b8 <dbus_shutdown+0xc8d8>
lea    0x0(%esi),%esi
movl   $0x9,0x4(%esp)
mov    %eax,(%esp)
call   804d560 <kill@plt>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
push   %esi
sub    $0x8,%esp
mov    0x10(%esp),%esi
mov    0x8(%esi),%eax
test   %eax,%eax
jns    808b5d6 <dbus_shutdown+0xc8f6>
mov    0xc(%esi),%edx
test   %edx,%edx
js     808b5e6 <dbus_shutdown+0xc906>
xor    %edx,%edx
mov    %esi,%eax
call   808b2d0 <dbus_shutdown+0xc5f0>
test   %eax,%eax
jne    808b5c8 <dbus_shutdown+0xc8e8>
mov    0x8(%esi),%eax
add    $0x8,%esp
shr    $0x1f,%eax
pop    %esi
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2ca04,%ebx
mov    0x38(%esp),%eax
mov    0x34(%esp),%ebp
mov    %eax,(%esp)
mov    %ebp,%edi
call   808b430 <dbus_shutdown+0xc750>
and    $0x1,%edi
mov    %eax,%esi
mov    %edi,%eax
or     $0x8,%eax
test   $0x4,%ebp
cmovne %eax,%edi
mov    %edi,%eax
or     $0x10,%eax
and    $0x8,%ebp
cmovne %eax,%edi
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   807b860 <dbus_watch_get_socket>
cmp    %eax,0xc(%esi)
je     808b6a6 <dbus_shutdown+0xc9c6>
mov    0x8(%esi),%ecx
cmp    %eax,%ecx
jne    808b653 <dbus_shutdown+0xc973>
jmp    808b6b4 <dbus_shutdown+0xc9d4>
lea    0x0(%esi,%eiz,1),%esi
mov    0x8(%esi),%ecx
test   %ecx,%ecx
jns    808b65e <dbus_shutdown+0xc97e>
mov    0xc(%esi),%eax
test   %eax,%eax
js     808b66b <dbus_shutdown+0xc98b>
xor    %edx,%edx
mov    %esi,%eax
call   808b2d0 <dbus_shutdown+0xc5f0>
test   %eax,%eax
jne    808b650 <dbus_shutdown+0xc970>
mov    %esi,(%esp)
call   808b5c0 <dbus_shutdown+0xc8e0>
test   %eax,%eax
je     808b691 <dbus_shutdown+0xc9b1>
mov    0x24(%esi),%eax
test   %eax,%eax
je     808b691 <dbus_shutdown+0xc9b1>
mov    0x28(%esi),%edx
mov    %esi,(%esp)
mov    %edx,0x4(%esp)
call   *%eax
movl   $0x0,0x24(%esi)
mov    %esi,(%esp)
call   808b440 <dbus_shutdown+0xc760>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,%edx
mov    %esi,%eax
call   808b270 <dbus_shutdown+0xc590>
mov    0x8(%esi),%ecx
jmp    808b653 <dbus_shutdown+0xc973>
mov    %edi,%edx
mov    %esi,%eax
call   808b2a0 <dbus_shutdown+0xc5c0>
jmp    808b650 <dbus_shutdown+0xc970>
nop
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2c936,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   808b5c0 <dbus_shutdown+0xc8e0>
xor    %eax,%eax
testb  $0x1,0x34(%esi)
je     808b6fa <dbus_shutdown+0xca1a>
mov    0x30(%esi),%edx
test   $0x7f,%dl
jne    808b6fa <dbus_shutdown+0xca1a>
mov    0x24(%esp),%eax
movzbl %dh,%edx
mov    %edx,(%eax)
mov    $0x1,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
push   %esi
push   %ebx
sub    $0x24,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2c8f6,%ebx
mov    0x30(%esp),%esi
mov    %esi,(%esp)
call   808b5c0 <dbus_shutdown+0xc8e0>
test   %eax,%eax
je     808b778 <dbus_shutdown+0xca98>
movzbl 0x34(%esi),%eax
test   $0x4,%al
jne    808b780 <dbus_shutdown+0xcaa0>
test   $0x2,%al
jne    808b800 <dbus_shutdown+0xcb20>
test   $0x1,%al
je     808b7f0 <dbus_shutdown+0xcb10>
mov    0x30(%esi),%eax
mov    %eax,%edx
and    $0x7f,%edx
je     808b840 <dbus_shutdown+0xcb60>
lea    0x1(%edx),%eax
cmp    $0x1,%al
jle    808b7c0 <dbus_shutdown+0xcae0>
mov    %edx,0x10(%esp)
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
lea    -0x17c92(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x219d0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x2c(%esi),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x10(%esp)
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
lea    -0x17dd0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21a7c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
lea    -0x17c74(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
lea    -0x17d64(%ebx),%eax
jmp    808b7cd <dbus_shutdown+0xcaed>
nop
mov    0x2c(%esi),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0x10(%esp)
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
lea    -0x17dac(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl %ah,%eax
mov    %eax,0x10(%esp)
mov    0x4(%esi),%eax
mov    %eax,0xc(%esp)
lea    -0x17d88(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x21cf8(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808b778 <dbus_shutdown+0xca98>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x44(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2c773,%ebx
mov    %eax,0x14(%esp)
mov    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    0x18(%eax),%eax
mov    %eax,(%esp)
call   807b500 <dbus_threads_init_default+0x2910>
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2c720,%ebx
mov    0x74(%esp),%edi
movl   $0xffffffff,0x28(%esp)
movl   $0xffffffff,0x2c(%esp)
test   %eax,%eax
movl   $0xffffffff,0x30(%esp)
movl   $0xffffffff,0x34(%esp)
je     808b918 <dbus_shutdown+0xcc38>
mov    0x70(%esp),%eax
movl   $0x0,(%eax)
movl   $0x38,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     808bb98 <dbus_shutdown+0xceb8>
movl   $0x1,(%eax)
movl   $0xffffffff,0x8(%eax)
movl   $0xffffffff,0xc(%eax)
movl   $0xffffffff,0x10(%eax)
movl   $0xffffffff,0x14(%eax)
call   807b4e0 <dbus_threads_init_default+0x28f0>
test   %eax,%eax
mov    %eax,0x18(%esi)
je     808bb8a <dbus_shutdown+0xceaa>
mov    (%edi),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     808bb58 <dbus_shutdown+0xce78>
lea    0x28(%esp),%ebp
movl   $0x80000,0x4(%esp)
mov    %ebp,(%esp)
call   804d960 <pipe2@plt>
test   %eax,%eax
js     808ba58 <dbus_shutdown+0xcd78>
mov    0x84(%esp),%eax
lea    0x34(%esp),%edx
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   8084040 <dbus_shutdown+0x5360>
test   %eax,%eax
jne    808baa0 <dbus_shutdown+0xcdc0>
mov    0x28(%esp),%eax
test   %eax,%eax
js     808b9e0 <dbus_shutdown+0xcd00>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x28(%esp)
mov    0x2c(%esp),%eax
test   %eax,%eax
js     808ba00 <dbus_shutdown+0xcd20>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x2c(%esp)
mov    0x30(%esp),%eax
test   %eax,%eax
js     808ba20 <dbus_shutdown+0xcd40>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x30(%esp)
mov    0x34(%esp),%eax
test   %eax,%eax
js     808ba40 <dbus_shutdown+0xcd60>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x34(%esp)
mov    %esi,(%esp)
call   808b440 <dbus_shutdown+0xc760>
xor    %eax,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x26,%edx
je     808bbc0 <dbus_shutdown+0xcee0>
mov    %edx,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0xc(%esp)
lea    -0x17d40(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17f14(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808b9c0 <dbus_shutdown+0xcce0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x28(%esp),%eax
lea    -0x2ca10(%ebx),%ebp
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   807b420 <dbus_threads_init_default+0x2830>
test   %eax,%eax
mov    %eax,0x1c(%esi)
je     808bb58 <dbus_shutdown+0xce78>
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807ba70 <dbus_watch_set_data+0xf0>
test   %eax,%eax
je     808bbf8 <dbus_shutdown+0xcf18>
mov    0x30(%esp),%eax
movl   $0x0,0x14(%esp)
mov    %esi,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   807b420 <dbus_threads_init_default+0x2830>
test   %eax,%eax
mov    %eax,0x20(%esi)
je     808bb58 <dbus_shutdown+0xce78>
mov    %eax,0x4(%esp)
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   807ba70 <dbus_watch_set_data+0xf0>
test   %eax,%eax
jne    808bc1a <dbus_shutdown+0xcf3a>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x20(%esi),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
movl   $0x0,0x20(%esi)
nop
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x28(%esp),%eax
test   %eax,%eax
jns    808b9c8 <dbus_shutdown+0xcce8>
jmp    808b9e0 <dbus_shutdown+0xcd00>
mov    %esi,(%esp)
call   808b440 <dbus_shutdown+0xc760>
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    808ba4a <dbus_shutdown+0xcd6a>
mov    %ebp,(%esp)
mov    %eax,0x18(%esp)
call   804d7c0 <pipe@plt>
mov    0x18(%esp),%ecx
test   %eax,%eax
js     808bf37 <dbus_shutdown+0xd257>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   8082710 <dbus_shutdown+0x3a30>
jmp    808b991 <dbus_shutdown+0xccb1>
lea    0x0(%esi),%esi
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807b4a0 <dbus_threads_init_default+0x28b0>
mov    0x1c(%esi),%eax
mov    %eax,(%esp)
call   807ba00 <dbus_watch_set_data+0x80>
movl   $0x0,0x1c(%esi)
jmp    808bb58 <dbus_shutdown+0xce78>
call   804d840 <fork@plt>
test   %eax,%eax
mov    %eax,%ebp
js     808beb6 <dbus_shutdown+0xd1d6>
je     808bcb8 <dbus_shutdown+0xcfd8>
mov    0x2c(%esp),%eax
test   %eax,%eax
js     808bc4f <dbus_shutdown+0xcf6f>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x2c(%esp)
mov    0x34(%esp),%eax
test   %eax,%eax
js     808bc6f <dbus_shutdown+0xcf8f>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x34(%esp)
mov    0x30(%esp),%eax
mov    %ebp,0x10(%esi)
movl   $0xffffffff,0x30(%esp)
mov    %eax,0x8(%esi)
mov    0x28(%esp),%eax
movl   $0xffffffff,0x28(%esp)
mov    %eax,0xc(%esi)
mov    0x70(%esp),%eax
test   %eax,%eax
je     808bef1 <dbus_shutdown+0xd211>
mov    0x70(%esp),%eax
mov    %esi,(%eax)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    $0x1,%eax
jmp    808ba4a <dbus_shutdown+0xcd6a>
movl   $0x0,0x4(%esp)
movl   $0xd,(%esp)
call   804d1e0 <signal@plt>
mov    0x28(%esp),%eax
test   %eax,%eax
js     808bcec <dbus_shutdown+0xd00c>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x28(%esp)
mov    0x30(%esp),%eax
test   %eax,%eax
js     808bd0c <dbus_shutdown+0xd02c>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
movl   $0xffffffff,0x30(%esp)
call   804d840 <fork@plt>
test   %eax,%eax
mov    %eax,%ebp
js     808bf29 <dbus_shutdown+0xd249>
jne    808bd65 <dbus_shutdown+0xd085>
mov    0x7c(%esp),%eax
mov    0x2c(%esp),%esi
test   %eax,%eax
je     808bd37 <dbus_shutdown+0xd057>
mov    0x80(%esp),%eax
mov    %eax,(%esp)
call   *0x7c(%esp)
mov    0x78(%esp),%eax
test   %eax,%eax
je     808bf18 <dbus_shutdown+0xd238>
mov    0x78(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    (%edi),%eax
mov    %eax,(%esp)
call   804d640 <execve@plt>
mov    $0x2,%edx
mov    %esi,%eax
call   808aed0 <dbus_shutdown+0xc1f0>
lea    0x38(%esp),%eax
mov    0x34(%esp),%esi
mov    %eax,(%esp)
call   804d7c0 <pipe@plt>
test   %eax,%eax
js     808befe <dbus_shutdown+0xd21e>
mov    0x3c(%esp),%eax
lea    0x40(%esp),%edi
movl   $0x11,(%esp)
mov    %eax,0x354(%ebx)
lea    -0x2d2f0(%ebx),%eax
mov    %eax,0x4(%esp)
call   8089d50 <dbus_shutdown+0xb070>
mov    %edi,%edx
mov    %esi,%eax
mov    %ebp,0x24(%esp)
movl   $0x3,0x40(%esp)
call   808ad60 <dbus_shutdown+0xc080>
lea    0x24(%esp),%edx
mov    %esi,%eax
call   808ad60 <dbus_shutdown+0xc080>
mov    %esi,%edx
mov    %ebp,%eax
movl   $0x0,(%esp)
call   808ade0 <dbus_shutdown+0xc100>
call   804d730 <__errno_location@plt>
mov    %eax,0x18(%esp)
lea    0x23(%esp),%eax
mov    %eax,0x1c(%esp)
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
xor    %ecx,%ecx
mov    $0x1,%edx
movl   $0xffffffff,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x48(%esp)
mov    $0x1,%eax
mov    %ax,0x4c(%esp)
xor    %eax,%eax
mov    %esi,0x40(%esp)
mov    %dx,0x44(%esp)
mov    %cx,0x46(%esp)
mov    %ax,0x4e(%esp)
call   8081c60 <dbus_shutdown+0x2f80>
test   %eax,%eax
js     808be85 <dbus_shutdown+0xd1a5>
movswl 0x46(%esp),%eax
test   %ax,%ax
jne    808be74 <dbus_shutdown+0xd194>
testb  $0x1,0x4e(%esp)
je     808bde8 <dbus_shutdown+0xd108>
mov    0x1c(%esp),%eax
movl   $0x1,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   804d0d0 <read@plt>
mov    %esi,%edx
mov    %ebp,%eax
movl   $0x0,(%esp)
call   808ade0 <dbus_shutdown+0xc100>
jmp    808bde8 <dbus_shutdown+0xd108>
mov    %eax,(%esp)
mov    %esi,%edx
mov    %ebp,%eax
call   808ade0 <dbus_shutdown+0xc100>
jmp    808bde8 <dbus_shutdown+0xd108>
mov    0x18(%esp),%eax
mov    (%eax),%eax
cmp    $0x4,%eax
je     808be32 <dbus_shutdown+0xd152>
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    %eax,0x4(%esp)
lea    -0x17c43(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   8081ea0 <dbus_shutdown+0x31c0>
mov    %eax,0xc(%esp)
lea    -0x17c57(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17d00(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808b9c0 <dbus_shutdown+0xcce0>
mov    %esi,(%esp)
call   808b440 <dbus_shutdown+0xc760>
jmp    808bca2 <dbus_shutdown+0xcfc2>
lea    -0x17cd4(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
movl   $0x1,(%esp)
call   804d550 <exit@plt>
mov    -0x10(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x78(%esp)
jmp    808bd43 <dbus_shutdown+0xd063>
mov    0x34(%esp),%eax
mov    $0x1,%edx
call   808aed0 <dbus_shutdown+0xc1f0>
mov    (%ecx),%edx
jmp    808ba68 <dbus_shutdown+0xcd88>
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
mov    %edx,0x24(%eax)
mov    0xc(%esp),%edx
mov    %edx,0x28(%eax)
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2c09a,%ebx
sub    $0x18,%esp
call   8096190 <dbus_bus_remove_match+0x4f60>
test   %eax,%eax
je     808bf80 <dbus_shutdown+0xd2a0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   808c310 <dbus_shutdown+0xd630>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
sub    $0x4,%esp
mov    0x14(%esp),%ebp
mov    0x18(%esp),%esi
mov    0x8(%ebp),%ecx
mov    0x4(%ebp),%eax
test   %ecx,%ecx
mov    %eax,(%esp)
jle    808bfe1 <dbus_shutdown+0xd301>
cmp    %esi,(%eax)
je     808c011 <dbus_shutdown+0xd331>
mov    (%esp),%eax
xor    %edx,%edx
add    $0x8,%eax
jmp    808bfda <dbus_shutdown+0xd2fa>
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%edi
add    $0x8,%eax
cmp    %esi,-0x8(%eax)
je     808c018 <dbus_shutdown+0xd338>
add    $0x1,%edx
cmp    %ecx,%edx
jne    808bfd0 <dbus_shutdown+0xd2f0>
mov    0x1c(%esp),%edx
mov    (%esp),%eax
and    $0x1,%edx
mov    %esi,(%eax,%ecx,8)
mov    %edx,%eax
mov    0x8(%ebp),%esi
mov    0x4(%ebp),%ecx
or     $0x4,%eax
testb  $0x2,0x1c(%esp)
cmove  %edx,%eax
mov    %ax,0x4(%ecx,%esi,8)
addl   $0x1,0x8(%ebp)
add    $0x4,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%esp),%edi
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%edx
and    $0x1,%edx
mov    %edx,%eax
or     $0x4,%eax
testb  $0x2,0x1c(%esp)
cmove  %edx,%eax
mov    %ax,0x4(%edi)
add    $0x4,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
sub    $0x4,%esp
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
mov    0x8(%eax),%ecx
test   %ecx,%ecx
jle    808c088 <dbus_shutdown+0xd3a8>
mov    0x4(%eax),%eax
cmp    %esi,(%eax)
mov    %eax,(%esp)
je     808c08f <dbus_shutdown+0xd3af>
mov    (%esp),%eax
lea    0x8(%eax),%edx
xor    %eax,%eax
jmp    808c081 <dbus_shutdown+0xd3a1>
lea    0x0(%esi,%eiz,1),%esi
mov    %edx,%ebp
add    $0x8,%edx
cmp    %esi,-0x8(%edx)
lea    0x0(,%eax,8),%edi
je     808c098 <dbus_shutdown+0xd3b8>
add    $0x1,%eax
cmp    %ecx,%eax
jne    808c070 <dbus_shutdown+0xd390>
add    $0x4,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%esp),%ebp
xor    %edi,%edi
xor    %eax,%eax
xchg   %ax,%ax
lea    -0x1(%ecx),%edx
cmp    %eax,%edx
je     808c0ca <dbus_shutdown+0xd3ea>
mov    (%esp),%eax
mov    0x14(%esp),%esi
mov    -0x8(%eax,%ecx,8),%eax
mov    %eax,0x0(%ebp)
mov    0x14(%esp),%eax
mov    0x8(%esi),%edx
mov    0x4(%eax),%eax
movzwl -0x4(%eax,%edx,8),%edx
mov    %dx,0x4(%eax,%edi,1)
mov    0x8(%esi),%eax
mov    %eax,(%esp)
lea    -0x1(%eax),%edx
mov    0x14(%esp),%eax
mov    %edx,0x8(%eax)
add    $0x4,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x2bf12,%ebx
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x2bee0,%ebx
mov    0x8(%esi),%edx
test   %edx,%edx
jle    808c144 <dbus_shutdown+0xd464>
xor    %eax,%eax
nop
mov    0x4(%esi),%edx
xor    %ecx,%ecx
mov    %cx,0x6(%edx,%eax,8)
mov    0x8(%esi),%edx
add    $0x1,%eax
cmp    %eax,%edx
jg     808c130 <dbus_shutdown+0xd450>
mov    0x3c(%esp),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8081c60 <dbus_shutdown+0x2f80>
test   %eax,%eax
jle    808c1f2 <dbus_shutdown+0xd512>
mov    0x8(%esi),%eax
test   %eax,%eax
jle    808c1fa <dbus_shutdown+0xd51a>
xor    %edi,%edi
xor    %edx,%edx
lea    0x0(%esi),%esi
mov    0x4(%esi),%ecx
lea    0x0(,%edx,8),%eax
add    %eax,%ecx
cmpw   $0x0,0x6(%ecx)
je     808c1e8 <dbus_shutdown+0xd508>
mov    0x34(%esp),%ebp
mov    (%ecx),%ecx
lea    0x0(%ebp,%edi,8),%ebp
mov    %ecx,0x0(%ebp)
mov    0x4(%esi),%ecx
mov    %ebp,0xc(%esp)
movzwl 0x6(%ecx,%eax,1),%ecx
mov    %ecx,%ebp
and    $0x1,%ebp
test   $0x4,%cl
movswl %bp,%eax
je     808c1b7 <dbus_shutdown+0xd4d7>
or     $0x2,%ebp
movswl %bp,%eax
mov    %eax,%ebp
or     $0x8,%ebp
test   $0x10,%cl
cmovne %ebp,%eax
mov    %eax,%ebp
or     $0x4,%ebp
test   $0x8,%cl
cmovne %ebp,%eax
mov    %eax,%ebp
or     $0x10,%ebp
and    $0x20,%ecx
mov    0xc(%esp),%ecx
cmovne %ebp,%eax
add    $0x1,%edi
cmp    0x38(%esp),%edi
mov    %eax,0x4(%ecx)
je     808c1f0 <dbus_shutdown+0xd510>
add    $0x1,%edx
cmp    %edx,0x8(%esi)
jg     808c178 <dbus_shutdown+0xd498>
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xor    %eax,%eax
jmp    808c1f2 <dbus_shutdown+0xd512>
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2bdf6,%ebx
mov    0x20(%esp),%esi
mov    0x24(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   808c040 <dbus_shutdown+0xd360>
mov    0xc(%esi),%eax
lea    -0x1(%eax),%edx
mov    %edx,0xc(%esi)
lea    0x7(%eax),%edx
mov    0x10(%esi),%eax
mov    %eax,%ecx
shr    $0x1f,%ecx
add    %ecx,%eax
sar    %eax
cmp    %eax,%edx
jl     808c248 <dbus_shutdown+0xd568>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
shl    $0x3,%edx
mov    %edx,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     808c240 <dbus_shutdown+0xd560>
mov    %eax,0x4(%esi)
mov    0xc(%esi),%eax
mov    %eax,0x10(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x2bd81,%ebx
mov    0xc(%esi),%eax
mov    0x10(%esi),%edx
cmp    %edx,%eax
jge    808c2e0 <dbus_shutdown+0xd600>
mov    0x2c(%esp),%edx
add    $0x1,%eax
mov    %eax,0xc(%esi)
mov    $0x1,%eax
test   %edx,%edx
je     808c2d2 <dbus_shutdown+0xd5f2>
mov    0x8(%esi),%ecx
mov    0x4(%esi),%edx
mov    0x24(%esp),%edi
mov    %edi,(%edx,%ecx,8)
mov    0x28(%esp),%ecx
mov    0x4(%esi),%edi
and    $0x1,%ecx
mov    %ecx,%edx
or     $0x4,%edx
testb  $0x2,0x28(%esp)
cmove  %ecx,%edx
mov    0x8(%esi),%ecx
mov    %dx,0x4(%edi,%ecx,8)
addl   $0x1,0x8(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(,%edx,8),%eax
mov    %eax,0x4(%esp)
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
test   %eax,%eax
je     808c308 <dbus_shutdown+0xd628>
mov    %eax,0x4(%esi)
mov    0xc(%esi),%eax
addl   $0x8,0x10(%esi)
jmp    808c28f <dbus_shutdown+0xd5af>
xchg   %ax,%ax
xor    %eax,%eax
jmp    808c2d2 <dbus_shutdown+0xd5f2>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x8,%eax
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2bce0,%ebx
mov    0x20(%esp),%edi
movl   $0x14,(%esp)
test   %edi,%edi
cmovle %eax,%edi
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     808c370 <dbus_shutdown+0xd690>
lea    0x358(%ebx),%eax
mov    %edi,0x10(%esi)
shl    $0x3,%edi
mov    %edi,(%esp)
movl   $0x0,0x8(%esi)
mov    %eax,(%esi)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x4(%esi)
je     808c374 <dbus_shutdown+0xd694>
mov    %esi,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    808c367 <dbus_shutdown+0xd687>
movl   $0x0,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
xor    %eax,%eax
jmp    808c367 <dbus_shutdown+0xd687>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2bc62,%ebx
mov    0x34(%esp),%esi
mov    0x30(%esp),%edi
mov    %esi,(%esp)
call   804d600 <strlen@plt>
mov    0x4(%edi),%ecx
cmp    %ecx,%eax
ja     808c3ee <dbus_shutdown+0xd70e>
mov    (%edi),%edi
mov    %ecx,%edx
sub    %eax,%edx
add    %edi,%edx
add    %edi,%ecx
cmp    %ecx,%edx
je     808c3e9 <dbus_shutdown+0xd709>
movzbl (%esi),%eax
cmp    %al,(%edx)
je     808c3df <dbus_shutdown+0xd6ff>
jmp    808c3ee <dbus_shutdown+0xd70e>
lea    0x0(%esi),%esi
movzbl (%esi),%eax
cmp    %al,(%edx)
jne    808c3f8 <dbus_shutdown+0xd718>
add    $0x1,%edx
add    $0x1,%esi
cmp    %edx,%ecx
jne    808c3d8 <dbus_shutdown+0xd6f8>
mov    $0x1,%ebp
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
xor    %ebp,%ebp
pop    %ebx
mov    %ebp,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
sub    $0x1,%esp
mov    0x19(%esp),%edi
mov    0x15(%esp),%esi
mov    0x1d(%esp),%ebp
mov    %edi,%eax
mov    %al,(%esp)
mov    %esi,%eax
sub    $0x1,%eax
js     808c451 <dbus_shutdown+0xd771>
mov    0x11(%esp),%edx
mov    %edi,%ecx
mov    (%edx),%edx
cmp    %cl,-0x1(%edx,%esi,1)
jne    808c449 <dbus_shutdown+0xd769>
jmp    808c451 <dbus_shutdown+0xd771>
xchg   %ax,%ax
movzbl (%esp),%ecx
cmp    %cl,(%edx,%eax,1)
je     808c451 <dbus_shutdown+0xd771>
sub    $0x1,%eax
cmp    $0xffffffff,%eax
jne    808c440 <dbus_shutdown+0xd760>
test   %ebp,%ebp
je     808c458 <dbus_shutdown+0xd778>
mov    %eax,0x0(%ebp)
add    $0x1,%esp
not    %eax
pop    %esi
shr    $0x1f,%eax
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2bb87,%ebx
sub    $0x1c,%esp
mov    -0x10(%ebx),%ebp
mov    0x0(%ebp),%edx
mov    (%edx),%esi
test   %esi,%esi
je     808c52c <dbus_shutdown+0xd84c>
xor    %eax,%eax
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    808c498 <dbus_shutdown+0xd7b8>
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0xc(%esp)
je     808c536 <dbus_shutdown+0xd856>
mov    0x0(%ebp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     808c520 <dbus_shutdown+0xd840>
mov    $0x4,%esi
xor    %edi,%edi
jmp    808c4de <dbus_shutdown+0xd7fe>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax,%esi,1),%eax
lea    0x4(%esi),%ecx
test   %eax,%eax
je     808c520 <dbus_shutdown+0xd840>
mov    %esi,%edi
mov    %ecx,%esi
mov    0xc(%esp),%edx
mov    %eax,(%esp)
lea    (%edx,%edi,1),%ecx
mov    %ecx,0x8(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    0x8(%esp),%ecx
test   %eax,%eax
mov    %eax,(%ecx)
mov    0x0(%ebp),%eax
jne    808c4d0 <dbus_shutdown+0xd7f0>
mov    (%eax,%edi,1),%eax
test   %eax,%eax
mov    0xc(%esp),%eax
je     808c524 <dbus_shutdown+0xd844>
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0xc(%esp),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x4,%eax
jmp    808c4a9 <dbus_shutdown+0xd7c9>
xor    %eax,%eax
jmp    808c524 <dbus_shutdown+0xd844>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2bab5,%ebx
sub    $0x1c,%esp
mov    %eax,(%esp)
lea    0x10(%edi),%ebp
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%esi
lea    0x0(%esi,%eiz,1),%esi
test   %esi,%esi
je     808c592 <dbus_shutdown+0xd8b2>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x4(%esi),%esi
cmp    0x10(%edi),%esi
jne    808c570 <dbus_shutdown+0xd890>
mov    %ebp,(%esp)
lea    0x14(%edi),%ebp
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %ebp,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %eax,%eax
mov    %eax,%esi
jne    808c5b4 <dbus_shutdown+0xd8d4>
jmp    808c5d2 <dbus_shutdown+0xd8f2>
lea    0x0(%esi),%esi
test   %esi,%esi
je     808c5d2 <dbus_shutdown+0xd8f2>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x8(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x4(%esi),%esi
cmp    0x14(%edi),%esi
jne    808c5b0 <dbus_shutdown+0xd8d0>
mov    %ebp,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x60(%esp),%ebp
mov    0x64(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x2b9fc,%ebx
add    %edx,%ebp
add    %ebp,%esi
cmp    %esi,%ebp
je     808c718 <dbus_shutdown+0xda38>
mov    %eax,%edi
lea    0x29(%esp),%eax
mov    %eax,0x1c(%esp)
jmp    808c6cf <dbus_shutdown+0xd9ef>
lea    0x0(%esi),%esi
lea    -0x2d(%eax),%ecx
cmp    $0xc,%cl
jbe    808c6e4 <dbus_shutdown+0xda04>
cmp    $0x5f,%al
je     808c6e4 <dbus_shutdown+0xda04>
cmp    $0x5c,%al
je     808c6e4 <dbus_shutdown+0xda04>
cmp    $0x2a,%al
je     808c6e4 <dbus_shutdown+0xda04>
cmp    $0x25,%al
xchg   %ax,%ax
jne    808c749 <dbus_shutdown+0xda69>
lea    0x3(%ebp),%eax
cmp    %eax,%esi
jb     808c797 <dbus_shutdown+0xdab7>
movzbl 0x1(%ebp),%eax
movb   $0x0,0x2b(%esp)
mov    %al,0x29(%esp)
lea    0x2(%ebp),%eax
mov    %eax,0x18(%esp)
movzbl 0x2(%ebp),%eax
lea    0x30(%esp),%ebp
mov    %ebp,(%esp)
mov    %al,0x2a(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x4(%edi),%edx
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x10(%esp)
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
call   80806a0 <dbus_shutdown+0x19c0>
test   %eax,%eax
je     808c6f4 <dbus_shutdown+0xda14>
cmpl   $0x2,0x2c(%esp)
jne    808c772 <dbus_shutdown+0xda92>
mov    0x18(%esp),%ebp
nop
add    $0x1,%ebp
cmp    %ebp,%esi
je     808c718 <dbus_shutdown+0xda38>
movzbl 0x0(%ebp),%eax
mov    %eax,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
ja     808c628 <dbus_shutdown+0xd948>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
jne    808c6c8 <dbus_shutdown+0xd9e8>
mov    0x68(%esp),%eax
test   %eax,%eax
je     808c70c <dbus_shutdown+0xda2c>
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     808c725 <dbus_shutdown+0xda45>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    808c70c <dbus_shutdown+0xda2c>
movsbl %al,%eax
mov    %eax,0xc(%esp)
lea    -0x17b88(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808c6f4 <dbus_shutdown+0xda14>
lea    -0x17be0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808c6f4 <dbus_shutdown+0xda14>
lea    -0x17c28(%ebx),%eax
jmp    808c778 <dbus_shutdown+0xda98>
nop
push   %ebx
sub    $0x28,%esp
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2b853,%ebx
test   %eax,%eax
je     808c7e8 <dbus_shutdown+0xdb08>
mov    %eax,0xc(%esp)
lea    -0x17b4c(%ebx),%eax
mov    0x38(%esp),%edx
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x28,%esp
pop    %ebx
ret
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x17b18(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x2b7cc,%ebx
mov    (%eax),%ebp
mov    0x4(%eax),%edi
mov    0x4(%esi),%edx
add    %ebp,%edi
cmp    %edi,%ebp
mov    %edx,0xc(%esp)
jne    808c89f <dbus_shutdown+0xdbbf>
jmp    808c8e0 <dbus_shutdown+0xdc00>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x2d(%eax),%ecx
cmp    $0xc,%cl
jbe    808c8b0 <dbus_shutdown+0xdbd0>
cmp    $0x5f,%al
je     808c8b0 <dbus_shutdown+0xdbd0>
cmp    $0x5c,%al
je     808c8b0 <dbus_shutdown+0xdbd0>
cmp    $0x2a,%al
je     808c8b0 <dbus_shutdown+0xdbd0>
movl   $0x25,0x4(%esp)
mov    %esi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     808c8c0 <dbus_shutdown+0xdbe0>
movzbl 0x0(%ebp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8080510 <dbus_shutdown+0x1830>
test   %eax,%eax
je     808c8c0 <dbus_shutdown+0xdbe0>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%ebp
cmp    %ebp,%edi
je     808c8e0 <dbus_shutdown+0xdc00>
movzbl 0x0(%ebp),%eax
mov    %eax,%ecx
and    $0xffffffdf,%ecx
sub    $0x41,%ecx
cmp    $0x19,%cl
ja     808c858 <dbus_shutdown+0xdb78>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
jne    808c898 <dbus_shutdown+0xdbb8>
mov    0xc(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x2b701,%ebx
mov    (%edi),%eax
lea    0x4(%edi),%esi
test   %eax,%eax
je     808c91f <dbus_address_entries_free+0x2f>
xchg   %ax,%ax
add    $0x4,%esi
call   808c540 <dbus_shutdown+0xd860>
mov    -0x4(%esi),%eax
test   %eax,%eax
jne    808c910 <dbus_address_entries_free+0x20>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x4(%esp),%eax
mov    (%eax),%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2b6b4,%ebx
mov    0x30(%esp),%esi
lea    0x10(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%edi
lea    0x14(%esi),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
test   %edi,%edi
mov    %eax,%ebp
jne    808c993 <dbus_address_entry_get_value+0x53>
jmp    808c9b8 <dbus_address_entry_get_value+0x78>
xchg   %ax,%ax
mov    0x4(%edi),%edi
mov    $0x0,%eax
cmp    0x10(%esi),%edi
mov    0x4(%ebp),%ebp
cmove  %eax,%edi
cmp    0x14(%esi),%ebp
cmove  %eax,%ebp
test   %edi,%edi
je     808c9b8 <dbus_address_entry_get_value+0x78>
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8(%edi),%eax
mov    %eax,(%esp)
call   8080450 <dbus_shutdown+0x1770>
test   %eax,%eax
je     808c978 <dbus_address_entry_get_value+0x38>
mov    0x8(%ebp),%eax
mov    (%eax),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2b624,%ebx
mov    0x90(%esp),%esi
lea    0x60(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
mov    %esi,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    0x64(%esp),%eax
movl   $0x0,0x50(%esp)
cmp    $0x0,%eax
mov    %eax,0x38(%esp)
je     808cd68 <dbus_parse_address+0x398>
jle    808cf66 <dbus_parse_address+0x596>
lea    0x50(%esp),%eax
xor    %esi,%esi
mov    %eax,0x20(%esp)
lea    -0x20e3d(%ebx),%eax
mov    %eax,0x3c(%esp)
movl   $0x18,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     808ce4e <dbus_parse_address+0x47e>
mov    %eax,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
mov    0x1c(%esp),%eax
je     808ce46 <dbus_parse_address+0x476>
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     808cf37 <dbus_parse_address+0x567>
lea    0x4c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x3c(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
je     808cd48 <dbus_parse_address+0x378>
mov    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
lea    0x54(%esp),%edx
mov    %edx,0x10(%esp)
lea    -0x1a0b8(%ebx),%edx
mov    %edx,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807fe10 <dbus_shutdown+0x1130>
test   %eax,%eax
je     808cf73 <dbus_parse_address+0x5a3>
mov    0x1c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x54(%esp),%eax
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     808ce4e <dbus_parse_address+0x47e>
mov    0x54(%esp),%eax
lea    0x1(%eax),%esi
mov    0x4c(%esp),%eax
cmp    %eax,%esi
jge    808ccab <dbus_parse_address+0x2db>
lea    0x58(%esp),%ecx
mov    %ecx,0x2c(%esp)
lea    0x5c(%esp),%ecx
mov    %ecx,0x30(%esp)
mov    0x1c(%esp),%ecx
lea    -0x17a9b(%ebx),%edx
mov    %edx,0x24(%esp)
lea    -0x1e015(%ebx),%edx
mov    %edx,0x28(%esp)
lea    0x10(%ecx),%edi
mov    %edi,0x34(%esp)
mov    0x2c(%esp),%ecx
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    0x24(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0xc(%esp)
call   807fe10 <dbus_shutdown+0x1130>
test   %eax,%eax
je     808cd58 <dbus_parse_address+0x388>
mov    0x58(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x28(%esp),%edi
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %esi,0x4(%esp)
mov    %ecx,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %eax,(%esp)
call   807fe10 <dbus_shutdown+0x1130>
test   %eax,%eax
je     808cdd8 <dbus_parse_address+0x408>
mov    0x5c(%esp),%eax
cmp    %esi,%eax
je     808cdd8 <dbus_parse_address+0x408>
add    $0x1,%eax
cmp    0x58(%esp),%eax
je     808cdd8 <dbus_parse_address+0x408>
movl   $0x10,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
je     808ce4e <dbus_parse_address+0x47e>
movl   $0x10,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%ebp
je     808ce74 <dbus_parse_address+0x4a4>
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808cea2 <dbus_parse_address+0x4d2>
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808ced8 <dbus_parse_address+0x508>
mov    0x5c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %esi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     808ce00 <dbus_parse_address+0x430>
mov    0x5c(%esp),%edx
mov    0x9c(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edx,%eax
add    $0x1,%edx
mov    %edx,(%esp)
not    %eax
mov    0x60(%esp),%edx
add    0x58(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,%eax
call   808c5f0 <dbus_shutdown+0xd910>
test   %eax,%eax
je     808ce21 <dbus_parse_address+0x451>
mov    0x34(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     808ce00 <dbus_parse_address+0x430>
mov    0x1c(%esp),%eax
mov    %ebp,0x4(%esp)
add    $0x14,%eax
mov    %eax,(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     808cf01 <dbus_parse_address+0x531>
mov    0x58(%esp),%eax
lea    0x1(%eax),%esi
mov    0x4c(%esp),%eax
cmp    %esi,%eax
jg     808cb42 <dbus_parse_address+0x172>
lea    0x1(%eax),%esi
cmp    %esi,0x38(%esp)
jg     808ca30 <dbus_parse_address+0x60>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807db40 <dbus_watch_handle+0x1f80>
mov    0x98(%esp),%edx
mov    %eax,(%edx)
lea    0x4(,%eax,4),%eax
mov    %eax,(%esp)
call   807eb50 <dbus_malloc>
test   %eax,%eax
mov    %eax,%esi
je     808ce4e <dbus_parse_address+0x47e>
mov    0x98(%esp),%eax
mov    (%eax),%eax
movl   $0x0,(%esi,%eax,4)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    0x50(%esp),%edi
mov    %esi,%ecx
test   %eax,%eax
jne    808cd17 <dbus_parse_address+0x347>
jmp    808cd23 <dbus_parse_address+0x353>
xchg   %ax,%ax
add    $0x4,%ecx
test   %eax,%eax
je     808cd23 <dbus_parse_address+0x353>
mov    0x8(%eax),%edx
mov    %edx,(%ecx)
mov    0x4(%eax),%eax
cmp    %edi,%eax
jne    808cd10 <dbus_parse_address+0x340>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
mov    0x94(%esp),%eax
mov    %esi,(%eax)
mov    $0x1,%eax
jmp    808cdcb <dbus_parse_address+0x3fb>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %eax,0x4c(%esp)
jmp    808caa0 <dbus_parse_address+0xd0>
lea    0x0(%esi),%esi
mov    0x4c(%esp),%eax
mov    %eax,0x58(%esp)
jmp    808cb72 <dbus_parse_address+0x1a2>
lea    0x0(%esi),%esi
lea    -0x1a3a8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %esi,0xc(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
lea    0x50(%esp),%eax
mov    %eax,0x20(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d900 <dbus_watch_handle+0x1d40>
mov    %eax,%esi
lea    0x0(%esi),%esi
test   %esi,%esi
je     808cdbd <dbus_parse_address+0x3ed>
mov    0x8(%esi),%eax
call   808c540 <dbus_shutdown+0xd860>
mov    0x4(%esi),%esi
cmp    0x50(%esp),%esi
jne    808cda8 <dbus_parse_address+0x3d8>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
xor    %eax,%eax
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17ad0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9c0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808cd97 <dbus_parse_address+0x3c7>
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
jmp    808cd97 <dbus_parse_address+0x3c7>
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808cd97 <dbus_parse_address+0x3c7>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
jmp    808cd97 <dbus_parse_address+0x3c7>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
jmp    808cd97 <dbus_parse_address+0x3c7>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
jmp    808ce2c <dbus_parse_address+0x45c>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807ebb0 <dbus_free>
jmp    808cd97 <dbus_parse_address+0x3c7>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x9c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x1c(%esp),%eax
call   808c540 <dbus_shutdown+0xd860>
jmp    808cd97 <dbus_parse_address+0x3c7>
lea    0x50(%esp),%eax
mov    %eax,0x20(%esp)
jmp    808ccb8 <dbus_parse_address+0x2e8>
lea    -0x17af4(%ebx),%eax
jmp    808cdde <dbus_parse_address+0x40e>
xchg   %ax,%ax
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2b075,%ebx
mov    0x50(%esp),%eax
lea    0x30(%esp),%edi
mov    %edi,(%esp)
lea    0x20(%esp),%esi
movl   $0x0,0x1c(%esp)
mov    %eax,0x4(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
je     808cfdb <dbus_address_escape_value+0x5b>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   808c820 <dbus_shutdown+0xdb40>
test   %eax,%eax
jne    808cfe8 <dbus_address_escape_value+0x68>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%edx
add    $0x40,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f570 <dbus_shutdown+0x890>
jmp    808cfcf <dbus_address_escape_value+0x4f>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x40,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2aff5,%ebx
mov    0x50(%esp),%eax
lea    0x20(%esp),%esi
mov    0x54(%esp),%edi
movl   $0x0,0x1c(%esp)
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
call   807f390 <dbus_shutdown+0x6b0>
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
je     808d079 <dbus_address_unescape_value+0x79>
mov    0x34(%esp),%eax
mov    0x30(%esp),%edx
mov    %edi,0x8(%esp)
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
mov    %esi,%eax
call   808c5f0 <dbus_shutdown+0xd910>
test   %eax,%eax
jne    808d088 <dbus_address_unescape_value+0x88>
mov    0x1c(%esp),%eax
test   %eax,%eax
je     808d0a0 <dbus_address_unescape_value+0xa0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%edx
add    $0x40,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f570 <dbus_shutdown+0x890>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    808d06d <dbus_address_unescape_value+0x6d>
test   %edi,%edi
je     808d06d <dbus_address_unescape_value+0x6d>
mov    %edi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    808d06d <dbus_address_unescape_value+0x6d>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
jmp    808d06d <dbus_address_unescape_value+0x6d>
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    $0x1,%eax
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
repz ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2aec3,%ebx
test   %edx,%edx
je     808d159 <dbus_address_unescape_value+0x159>
mov    (%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   807cf10 <dbus_watch_handle+0x1350>
test   %eax,%eax
je     808d1a0 <dbus_address_unescape_value+0x1a0>
lea    -0x17a99(%ebx),%edx
xor    %esi,%esi
jmp    808d179 <dbus_address_unescape_value+0x179>
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%esi
lea    (%esi,%esi,4),%eax
mov    -0x260(%ebx,%eax,8),%edx
test   %edx,%edx
je     808d1a0 <dbus_address_unescape_value+0x1a0>
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8080450 <dbus_shutdown+0x1770>
test   %eax,%eax
je     808d168 <dbus_address_unescape_value+0x168>
add    $0x10,%esp
lea    (%esi,%esi,4),%eax
lea    -0x260(%ebx,%eax,8),%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2ae49,%ebx
sub    $0x24,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
jne    808d1e0 <dbus_address_unescape_value+0x1e0>
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    -0x17a90(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    808d208 <dbus_address_unescape_value+0x208>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    0x34(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
je     808d1f6 <dbus_address_unescape_value+0x1f6>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%edx
jmp    808d1d2 <dbus_address_unescape_value+0x1d2>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2adb5,%ebx
sub    $0x1c,%esp
mov    0x1c(%eax),%ebp
lea    0x18(%eax),%edi
mov    %edi,(%esp)
lea    -0x17a81(%ebx),%eax
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d295 <dbus_address_unescape_value+0x295>
mov    0x1c(%esi),%eax
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
lea    0x84(%esi),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
jne    808d2b0 <dbus_address_unescape_value+0x2b0>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
xor    %eax,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17a4f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d295 <dbus_address_unescape_value+0x295>
lea    -0x190(%ebx),%eax
mov    %eax,0x28(%esi)
mov    $0x1,%eax
jmp    808d2a3 <dbus_address_unescape_value+0x2a3>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2ad13,%ebx
movl   $0xffffffff,0x60(%eax)
add    $0x64,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2acd3,%ebx
movl   $0xffffffff,0x60(%eax)
add    $0x64,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2ac97,%ebx
sub    $0x14,%esp
andb   $0xfb,0x78(%eax)
lea    0x30(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   806a920 <dbus_connection_get_outgoing_unix_fds+0x580>
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   806a920 <dbus_connection_get_outgoing_unix_fds+0x580>
mov    0x2c(%esi),%eax
test   %eax,%eax
je     808d3be <dbus_address_unescape_value+0x3be>
lea    -0x176a1(%ebx),%edx
cmp    %edx,0x4(%esi)
mov    %esi,(%esp)
je     808d3c8 <dbus_address_unescape_value+0x3c8>
call   *0x10(%eax)
movl   $0x0,0x2c(%esi)
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   *0x24(%eax)
jmp    808d3b7 <dbus_address_unescape_value+0x3b7>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2ac27,%ebx
sub    $0x3c,%esp
lea    0x20(%esp),%esi
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    808d400 <dbus_address_unescape_value+0x400>
xor    %eax,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x17a7d(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d45e <dbus_address_unescape_value+0x45e>
lea    -0x1fe1e(%ebx),%eax
lea    -0x238(%ebx),%edi
lea    -0x17a99(%ebx),%ebp
mov    %eax,0x18(%esp)
jmp    808d44a <dbus_address_unescape_value+0x44a>
xchg   %ax,%ax
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d45e <dbus_address_unescape_value+0x45e>
add    $0x28,%edi
mov    -0x28(%edi),%ebp
test   %ebp,%ebp
je     808d470 <dbus_address_unescape_value+0x470>
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
jne    808d430 <dbus_address_unescape_value+0x430>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x17a4f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d45e <dbus_address_unescape_value+0x45e>
mov    0x1c(%esp),%edx
mov    0x1c(%edx),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    %edx,%eax
add    $0x18,%eax
mov    %eax,0x8(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808d45e <dbus_address_unescape_value+0x45e>
mov    0x1c(%esp),%edi
mov    %edi,%eax
call   808d360 <dbus_address_unescape_value+0x360>
mov    0x7c(%edi),%eax
mov    %eax,0x18(%esp)
add    $0x1,%eax
cmp    0x80(%edi),%eax
mov    %eax,0x7c(%edi)
jl     808d4ed <dbus_address_unescape_value+0x4ed>
mov    0x1c(%esp),%ecx
lea    -0x1c0(%ebx),%eax
mov    %eax,0x28(%ecx)
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%eax
jmp    808d3f8 <dbus_address_unescape_value+0x3f8>
mov    0x1c(%esp),%ecx
lea    -0x180(%ebx),%eax
mov    %eax,0x28(%ecx)
jmp    808d4db <dbus_address_unescape_value+0x4db>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2aaf3,%ebx
sub    $0x2c,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    808d530 <dbus_address_unescape_value+0x530>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x17a74(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d5e8 <dbus_address_unescape_value+0x5e8>
mov    (%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d5e8 <dbus_address_unescape_value+0x5e8>
mov    0x14(%edi),%eax
test   %eax,%eax
je     808d58b <dbus_address_unescape_value+0x58b>
lea    -0x1fe1e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d5e8 <dbus_address_unescape_value+0x5e8>
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   *0x14(%edi)
test   %eax,%eax
je     808d5e8 <dbus_address_unescape_value+0x5e8>
lea    -0x17a4f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d5e8 <dbus_address_unescape_value+0x5e8>
mov    0x1c(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
lea    0x18(%ebp),%eax
mov    %eax,0x8(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808d5e8 <dbus_address_unescape_value+0x5e8>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,%eax
call   808d360 <dbus_address_unescape_value+0x360>
lea    -0x1a0(%ebx),%eax
mov    %eax,0x28(%ebp)
mov    $0x1,%eax
mov    %edi,0x2c(%ebp)
jmp    808d528 <dbus_address_unescape_value+0x528>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2a9f8,%ebx
sub    $0x20,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
jne    808d630 <dbus_address_unescape_value+0x630>
add    $0x20,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
xor    %edi,%edi
call   8081b60 <dbus_shutdown+0x2e80>
test   %eax,%eax
jne    808d658 <dbus_address_unescape_value+0x658>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x20,%esp
mov    %edi,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%edi
jmp    808d63e <dbus_address_unescape_value+0x63e>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2a969,%ebx
sub    $0x24,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
jne    808d6c0 <dbus_address_unescape_value+0x6c0>
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   8081b60 <dbus_shutdown+0x2e80>
test   %eax,%eax
jne    808d6e0 <dbus_address_unescape_value+0x6e0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x34(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
je     808d6cc <dbus_address_unescape_value+0x6cc>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%edx
jmp    808d6b2 <dbus_address_unescape_value+0x6b2>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %eax,%ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2a8d3,%ebx
sub    $0x4c,%esp
lea    0x30(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    808d750 <dbus_address_unescape_value+0x750>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   80806a0 <dbus_shutdown+0x19c0>
test   %eax,%eax
je     808d7b8 <dbus_address_unescape_value+0x7b8>
mov    0x2c(%esp),%eax
cmp    %eax,0x4(%edi)
je     808d7d0 <dbus_address_unescape_value+0x7d0>
mov    %esi,(%esp)
add    $0x18,%ebp
call   807f3d0 <dbus_shutdown+0x6f0>
lea    -0x17a6e(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
setne  %al
add    $0x4c,%esp
pop    %ebx
movzbl %al,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   *0x60(%esp)
test   %eax,%eax
je     808d7b8 <dbus_address_unescape_value+0x7b8>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%eax
jmp    808d748 <dbus_address_unescape_value+0x748>
jmp    808d800 <dbus_address_unescape_value+0x800>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2a7f7,%ebx
sub    $0x2c,%esp
mov    %eax,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     808d948 <dbus_address_unescape_value+0x948>
lea    0x8(%eax),%edi
movl   $0x1,(%eax)
movl   $0x0,0x5c(%eax)
movl   $0xffffffff,0x60(%eax)
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808d934 <dbus_address_unescape_value+0x934>
lea    0x18(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808d92c <dbus_address_unescape_value+0x92c>
lea    0x30(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808d920 <dbus_address_unescape_value+0x920>
lea    0x4c(%esi),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808d914 <dbus_address_unescape_value+0x914>
lea    0x64(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808d90c <dbus_address_unescape_value+0x90c>
lea    -0x17a4c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808d900 <dbus_address_unescape_value+0x900>
call   806a440 <dbus_connection_get_outgoing_unix_fds+0xa0>
test   %eax,%eax
mov    %eax,0x40(%esi)
je     808d900 <dbus_address_unescape_value+0x900>
call   806a440 <dbus_connection_get_outgoing_unix_fds+0xa0>
test   %eax,%eax
mov    %eax,0x44(%esi)
je     808d8ee <dbus_address_unescape_value+0x8ee>
call   806a440 <dbus_connection_get_outgoing_unix_fds+0xa0>
test   %eax,%eax
mov    %eax,0x48(%esi)
je     808d8e3 <dbus_address_unescape_value+0x8e3>
mov    %esi,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
xor    %eax,%eax
jmp    808d8db <dbus_address_unescape_value+0x8db>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x4c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x2a6a2,%ebx
testb  $0x2,0x78(%eax)
je     808d9c0 <dbus_address_unescape_value+0x9c0>
mov    0x7c(%esi),%eax
test   %eax,%eax
je     808d990 <dbus_address_unescape_value+0x990>
mov    0x8(%eax),%edx
mov    %esi,%eax
call   808d500 <dbus_address_unescape_value+0x500>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    808d9a8 <dbus_address_unescape_value+0x9a8>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1c0(%ebx),%eax
mov    %eax,0x28(%esi)
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x7c,%esi
mov    %esi,(%esp)
call   807da30 <dbus_watch_handle+0x1e70>
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%edx),%eax
mov    %edx,%ebp
movl   $0x0,0x28(%esp)
test   %eax,%eax
mov    %eax,0x18(%esp)
jle    808dad8 <dbus_address_unescape_value+0xad8>
lea    -0x260(%ebx),%eax
lea    0x30(%esp),%edi
mov    %eax,0x1c(%esp)
jmp    808da35 <dbus_address_unescape_value+0xa35>
lea    0x0(%esi,%eiz,1),%esi
mov    0x74(%esi),%edx
mov    %edi,%eax
call   808d130 <dbus_address_unescape_value+0x130>
test   %eax,%eax
je     808da1f <dbus_address_unescape_value+0xa1f>
cmp    0x1c(%esp),%eax
je     808da1f <dbus_address_unescape_value+0xa1f>
lea    0x7c(%esi),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
mov    %edx,0x14(%esp)
call   807d5d0 <dbus_watch_handle+0x1a10>
test   %eax,%eax
je     808daf0 <dbus_address_unescape_value+0xaf0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x18(%esp),%eax
cmp    0x28(%esp),%eax
jle    808dad8 <dbus_address_unescape_value+0xad8>
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808dae8 <dbus_address_unescape_value+0xae8>
lea    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80800f0 <dbus_shutdown+0x1410>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8080080 <dbus_shutdown+0x13a0>
mov    0x28(%esp),%eax
mov    0x2c(%esp),%edx
cmp    %edx,%eax
jge    808d9f0 <dbus_address_unescape_value+0x9f0>
sub    %eax,%edx
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     808dab8 <dbus_address_unescape_value+0xab8>
mov    0x2c(%esp),%eax
mov    %eax,0x28(%esp)
jmp    808d9f0 <dbus_address_unescape_value+0x9f0>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x7c(%esi),%edx
mov    %edx,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
orb    $0x2,0x78(%esi)
jmp    808d96a <dbus_address_unescape_value+0x96a>
lea    0x0(%esi,%eiz,1),%esi
lea    0x7c(%esi),%edx
jmp    808dac3 <dbus_address_unescape_value+0xac3>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x14(%esp),%edx
jmp    808dac3 <dbus_address_unescape_value+0xac3>
xchg   %ax,%ax
call   806a42f <dbus_connection_get_outgoing_unix_fds+0x8f>
add    $0x2a4fb,%ecx
mov    0x4(%esp),%eax
cmpl   $0x4,0x8(%esp)
mov    0xc(%esp),%edx
je     808db30 <dbus_address_unescape_value+0xb30>
lea    -0x1c0(%ecx),%edx
mov    %edx,0x28(%eax)
mov    $0x1,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
jmp    808d950 <dbus_address_unescape_value+0x950>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x2a4b5,%ebx
sub    $0x2c,%esp
mov    0x1c(%eax),%ebp
lea    0x18(%eax),%esi
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
lea    -0x17a34(%ebx),%eax
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     808db97 <dbus_address_unescape_value+0xb97>
mov    0x1c(%edi),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
jne    808dbb0 <dbus_address_unescape_value+0xbb0>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x17a4f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808db97 <dbus_address_unescape_value+0xb97>
mov    $0x1,%eax
jmp    808dba5 <dbus_address_unescape_value+0xba5>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2a422,%ebx
mov    0x20(%esp),%esi
mov    0x4(%eax),%edx
test   %edx,%edx
jle    808dc07 <dbus_address_unescape_value+0xc07>
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8080990 <dbus_shutdown+0x1cb0>
test   %eax,%eax
je     808dc48 <dbus_address_unescape_value+0xc48>
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   806a920 <dbus_connection_get_outgoing_unix_fds+0x580>
mov    0x40(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   806a7b0 <dbus_connection_get_outgoing_unix_fds+0x410>
xor    %edx,%edx
test   %eax,%eax
je     808dc40 <dbus_address_unescape_value+0xc40>
mov    %esi,%eax
call   808d240 <dbus_address_unescape_value+0x240>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    808d3d0 <dbus_address_unescape_value+0x3d0>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x2a38d,%ebx
mov    0x60(%ebp),%eax
test   %eax,%eax
js     808dcc8 <dbus_address_unescape_value+0xcc8>
mov    0x84(%esp),%eax
lea    0x2c(%esp),%esi
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8080080 <dbus_shutdown+0x13a0>
test   %eax,%eax
je     808dd38 <dbus_address_unescape_value+0xd38>
lea    0x30(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
jne    808dd58 <dbus_address_unescape_value+0xd58>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x64(%ebp),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0x84(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
jle    808dd1a <dbus_address_unescape_value+0xd1a>
mov    0x34(%ebp),%edi
test   %edi,%edi
jg     808dd38 <dbus_address_unescape_value+0xd38>
lea    0x30(%ebp),%eax
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808dd50 <dbus_address_unescape_value+0xd50>
mov    0x84(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%ebp),%eax
mov    %eax,(%esp)
call   80866f0 <dbus_shutdown+0x7a10>
test   %eax,%eax
jne    808dd90 <dbus_address_unescape_value+0xd90>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,%eax
call   808d3d0 <dbus_address_unescape_value+0x3d0>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
nop
xor    %eax,%eax
jmp    808dcbf <dbus_address_unescape_value+0xcbf>
nop
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
movl   $0x0,0x14(%esp)
test   %eax,%eax
jne    808df68 <dbus_address_unescape_value+0xf68>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x14(%esp),%eax
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808dd50 <dbus_address_unescape_value+0xd50>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808dd47 <dbus_address_unescape_value+0xd47>
mov    0x5c(%ebp),%eax
test   %eax,%eax
je     808e06e <dbus_address_unescape_value+0x106e>
mov    0x48(%ebp),%edx
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   8092460 <dbus_bus_remove_match+0x1230>
test   %eax,%eax
je     808e05c <dbus_address_unescape_value+0x105c>
mov    0x5c(%ebp),%ecx
test   %ecx,%ecx
je     808e06e <dbus_address_unescape_value+0x106e>
lea    0x50(%esp),%eax
mov    %eax,0x1c(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806ad70 <dbus_error_init>
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x5c(%ebp),%eax
mov    %eax,(%esp)
call   80923c0 <dbus_bus_remove_match+0x1190>
test   %eax,%eax
mov    %eax,0x60(%ebp)
js     808e03a <dbus_address_unescape_value+0x103a>
mov    0x44(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x4c(%ebp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
jne    808de67 <dbus_address_unescape_value+0xe67>
xor    %esi,%esi
mov    %edi,(%esp)
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x18(%esp),%edi
mov    %edi,(%esp)
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,%eax
jmp    808dcbf <dbus_address_unescape_value+0xcbf>
lea    -0x1fe1e(%ebx),%eax
mov    %eax,0x14(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808de3a <dbus_address_unescape_value+0xe3a>
mov    0x60(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8087590 <dbus_shutdown+0x88b0>
test   %eax,%eax
je     808de3a <dbus_address_unescape_value+0xe3a>
mov    0x14(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808de3a <dbus_address_unescape_value+0xe3a>
movl   $0x10,0x4(%esp)
mov    %edi,(%esp)
call   8082c30 <dbus_shutdown+0x3f50>
test   %eax,%eax
je     808de3a <dbus_address_unescape_value+0xe3a>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
je     808de3a <dbus_address_unescape_value+0xe3a>
mov    0x44(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
je     808de3a <dbus_address_unescape_value+0xe3a>
cmpl   $0x0,0x44(%esp)
jne    808e1b5 <dbus_address_unescape_value+0x11b5>
lea    -0x17a2e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%ebp),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808de3a <dbus_address_unescape_value+0xe3a>
lea    -0x188(%ebx),%eax
mov    $0x1,%esi
mov    %eax,0x28(%ebp)
jmp    808de3c <dbus_address_unescape_value+0xe3c>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
jne    808dfb8 <dbus_address_unescape_value+0xfb8>
movl   $0x0,0x14(%esp)
mov    0x18(%esp),%esi
mov    %esi,(%esp)
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    808dd78 <dbus_address_unescape_value+0xd78>
mov    0x2c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   80800f0 <dbus_shutdown+0x1410>
mov    0x18(%esp),%eax
mov    0x2c(%esp),%edx
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x84(%esp),%eax
mov    0x4(%eax),%eax
mov    %edx,0x4(%esp)
sub    %edx,%eax
mov    %eax,0x8(%esp)
mov    0x84(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     808df97 <dbus_address_unescape_value+0xf97>
mov    0x34(%esp),%edx
test   %edx,%edx
je     808e022 <dbus_address_unescape_value+0x1022>
mov    0x44(%esp),%eax
test   %eax,%eax
jne    808e0d8 <dbus_address_unescape_value+0x10d8>
mov    %ebp,%eax
call   808d3d0 <dbus_address_unescape_value+0x3d0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x14(%esp)
jmp    808df9f <dbus_address_unescape_value+0xf9f>
mov    %ebp,%eax
call   808d3d0 <dbus_address_unescape_value+0x3d0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,%esi
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
jmp    808de3c <dbus_address_unescape_value+0xe3c>
mov    0x5c(%ebp),%eax
mov    %eax,(%esp)
call   8091e80 <dbus_bus_remove_match+0xc50>
movl   $0x0,0x5c(%ebp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   806ad70 <dbus_error_init>
mov    0x1c(%esp),%eax
mov    %eax,0x8(%esp)
lea    0x4c(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x48(%ebp),%eax
mov    %eax,(%esp)
call   8092050 <dbus_bus_remove_match+0xe20>
test   %eax,%eax
mov    %eax,0x5c(%ebp)
jne    808dde9 <dbus_address_unescape_value+0xde9>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
je     808e03a <dbus_address_unescape_value+0x103a>
mov    0x1c(%esp),%eax
xor    %esi,%esi
mov    %eax,(%esp)
call   806ade0 <dbus_error_free>
jmp    808de3c <dbus_address_unescape_value+0xe3c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808df97 <dbus_address_unescape_value+0xf97>
mov    0x1c(%esp),%ecx
lea    0x5c(%ebp),%eax
mov    0x60(%ebp),%edx
mov    %edi,0x4(%esp)
mov    %ecx,0x8(%esp)
lea    0x64(%ebp),%ecx
mov    %ecx,(%esp)
call   804dc4c <sidput@plt+0xec>
test   %eax,%eax
jne    808e132 <dbus_address_unescape_value+0x1132>
movl   $0x0,0x14(%esp)
mov    0x1c(%esp),%esi
mov    %esi,(%esp)
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    808df9f <dbus_address_unescape_value+0xf9f>
cmpl   $0x0,0x54(%esp)
je     808e19d <dbus_address_unescape_value+0x119d>
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8080330 <dbus_shutdown+0x1650>
test   %eax,%eax
je     808e19d <dbus_address_unescape_value+0x119d>
mov    0x48(%ebp),%eax
mov    %eax,0x4(%esp)
mov    0x44(%ebp),%eax
mov    %eax,(%esp)
call   806a890 <dbus_connection_get_outgoing_unix_fds+0x4f0>
test   %eax,%eax
je     808e111 <dbus_address_unescape_value+0x1111>
mov    0x40(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%ebp),%eax
mov    %eax,(%esp)
call   806a7b0 <dbus_connection_get_outgoing_unix_fds+0x410>
test   %eax,%eax
je     808e111 <dbus_address_unescape_value+0x1111>
mov    %ebp,%eax
call   808d240 <dbus_address_unescape_value+0x240>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x14(%esp)
jmp    808e119 <dbus_address_unescape_value+0x1119>
mov    %ebp,%eax
call   808d3d0 <dbus_address_unescape_value+0x3d0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x14(%esp)
jmp    808e119 <dbus_address_unescape_value+0x1119>
mov    0x18(%esp),%edx
mov    %ebp,%eax
call   808db40 <dbus_address_unescape_value+0xb40>
jmp    808df48 <dbus_address_unescape_value+0xf48>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x29e22,%ebx
mov    0x20(%esp),%esi
cmp    $0x8,%edx
ja     808e2a0 <dbus_address_unescape_value+0x12a0>
mov    -0x17714(%ebx,%edx,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x78(%esi),%eax
test   $0x10,%al
je     808e2a8 <dbus_address_unescape_value+0x12a8>
or     $0x20,%eax
mov    %al,0x78(%esi)
lea    -0x17a27(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     808e23d <dbus_address_unescape_value+0x123d>
lea    -0x190(%ebx),%eax
mov    %eax,0x28(%esi)
mov    $0x1,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17898(%ebx),%eax
mov    %eax,0x8(%esp)
add    $0x18,%esi
lea    -0x17a59(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
add    $0x14,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
jmp    808d3d0 <dbus_address_unescape_value+0x3d0>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17878(%ebx),%eax
jmp    808e24e <dbus_address_unescape_value+0x124e>
lea    -0x1b8(%ebx),%eax
mov    %eax,0x28(%esi)
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17a17(%ebx),%eax
jmp    808e24e <dbus_address_unescape_value+0x124e>
lea    -0x17858(%ebx),%eax
jmp    808e24e <dbus_address_unescape_value+0x124e>
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x29d40,%ebx
cmp    $0x8,%eax
ja     808e370 <dbus_address_unescape_value+0x1370>
mov    -0x176f0(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
lea    0x0(%esi),%esi
lea    -0x17a07(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x70(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
mov    %eax,%edx
add    $0x5c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x78(%esp),%eax
mov    0x4(%eax),%eax
test   %eax,%eax
jne    808e380 <dbus_address_unescape_value+0x1380>
mov    0x70(%esp),%eax
call   808d3d0 <dbus_address_unescape_value+0x3d0>
xor    %edx,%edx
test   %eax,%eax
setne  %dl
jmp    808e305 <dbus_address_unescape_value+0x1305>
lea    0x0(%esi),%esi
lea    -0x1780c(%ebx),%eax
jmp    808e2e6 <dbus_address_unescape_value+0x12e6>
mov    0x70(%esp),%ecx
lea    -0x1c0(%ebx),%eax
mov    $0x1,%edx
mov    %eax,0x28(%ecx)
add    $0x5c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x70(%esp),%eax
call   808d3d0 <dbus_address_unescape_value+0x3d0>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
mov    %eax,%edx
mov    %edx,%eax
ret
lea    0x0(%esi),%esi
lea    -0x17a17(%ebx),%eax
jmp    808e2e6 <dbus_address_unescape_value+0x12e6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%eax
lea    0x2c(%esp),%edi
mov    %edi,0x8(%esp)
lea    0x30(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8080080 <dbus_shutdown+0x13a0>
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
je     808e305 <dbus_address_unescape_value+0x1305>
lea    0x40(%esp),%ebp
mov    %ebp,(%esp)
mov    %edx,0x1c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    808e3d8 <dbus_address_unescape_value+0x13d8>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%edx
jmp    808e305 <dbus_address_unescape_value+0x1305>
nop
mov    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     808e440 <dbus_address_unescape_value+0x1440>
mov    0x2c(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   80800f0 <dbus_shutdown+0x1410>
mov    0x2c(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
jne    808e462 <dbus_address_unescape_value+0x1462>
mov    0x70(%esp),%eax
movl   $0x0,0x2c(%eax)
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %edx,%edx
jmp    808e305 <dbus_address_unescape_value+0x1305>
mov    0x70(%esp),%eax
mov    0x74(%eax),%edx
mov    %esi,%eax
call   808d130 <dbus_address_unescape_value+0x130>
mov    0x70(%esp),%edi
test   %eax,%eax
mov    %eax,0x2c(%edi)
je     808e4a8 <dbus_address_unescape_value+0x14a8>
mov    0x4(%eax),%eax
mov    %ebp,%edx
mov    %eax,(%esp)
mov    %edi,%eax
call   808d720 <dbus_address_unescape_value+0x720>
test   %eax,%eax
je     808e440 <dbus_address_unescape_value+0x1440>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%edx
jmp    808e305 <dbus_address_unescape_value+0x1305>
mov    0x70(%esp),%eax
call   808d3d0 <dbus_address_unescape_value+0x3d0>
test   %eax,%eax
jne    808e48e <dbus_address_unescape_value+0x148e>
jmp    808e440 <dbus_address_unescape_value+0x1440>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x29b33,%ebx
mov    0x20(%esp),%eax
mov    0x28(%esp),%edx
cmp    $0x8,%ecx
ja     808e560 <dbus_address_unescape_value+0x1560>
mov    -0x176cc(%ebx,%ecx,4),%ecx
add    %ebx,%ecx
jmp    *%ecx
nop
lea    -0x17a07(%ebx),%edx
mov    %edx,0x8(%esp)
add    $0x18,%eax
lea    -0x17a59(%ebx),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x177e4(%ebx),%edx
jmp    808e4f6 <dbus_address_unescape_value+0x14f6>
add    $0x18,%esp
pop    %ebx
jmp    808d3d0 <dbus_address_unescape_value+0x3d0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%eax),%ecx
mov    0x4(%ecx),%ecx
mov    %ecx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    808d720 <dbus_address_unescape_value+0x720>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1c0(%ebx),%edx
mov    %edx,0x28(%eax)
add    $0x18,%esp
mov    $0x1,%eax
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17a17(%ebx),%edx
jmp    808e4f6 <dbus_address_unescape_value+0x14f6>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x29a82,%ebx
mov    0x20(%esp),%esi
cmp    $0x6,%eax
je     808e5f0 <dbus_address_unescape_value+0x15f0>
cmp    $0x9,%eax
jne    808e5c8 <dbus_address_unescape_value+0x15c8>
orb    $0x20,0x78(%esi)
lea    -0x179ec(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     808e5e7 <dbus_address_unescape_value+0x15e7>
lea    -0x1b8(%ebx),%eax
mov    %eax,0x28(%esi)
add    $0x14,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
ret
nop
lea    -0x17a17(%ebx),%eax
add    $0x18,%esi
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
andb   $0xdf,0x78(%esi)
jmp    808e596 <dbus_address_unescape_value+0x1596>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x299f1,%ebx
mov    0x40(%esp),%esi
cmp    $0x4,%edx
je     808e6f8 <dbus_address_unescape_value+0x16f8>
jbe    808e6b0 <dbus_address_unescape_value+0x16b0>
cmp    $0x5,%edx
je     808e668 <dbus_address_unescape_value+0x1668>
cmp    $0x6,%edx
jne    808e6d0 <dbus_address_unescape_value+0x16d0>
lea    -0x179d0(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     808e661 <dbus_address_unescape_value+0x1661>
lea    -0x1a8(%ebx),%eax
mov    %eax,0x28(%esi)
mov    $0x1,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
lea    0x80(%esi),%edi
movl   $0x0,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
movl   $0x0,0x2c(%esp)
call   80806a0 <dbus_shutdown+0x19c0>
test   %eax,%eax
jne    808e710 <dbus_address_unescape_value+0x1710>
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x2,%edx
jne    808e6d0 <dbus_address_unescape_value+0x16d0>
mov    0x2c(%esi),%eax
mov    0x48(%esp),%edx
mov    0x18(%eax),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   808d720 <dbus_address_unescape_value+0x720>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    -0x17a17(%ebx),%eax
add    $0x18,%esi
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
mov    0x48(%esp),%edx
mov    %esi,%eax
call   808d950 <dbus_address_unescape_value+0x950>
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0x48(%esp),%eax
mov    0x4(%eax),%eax
cmp    0x2c(%esp),%eax
je     808e740 <dbus_address_unescape_value+0x1740>
lea    -0x1c0(%ebx),%eax
mov    %eax,0x28(%esi)
mov    $0x1,%eax
jmp    808e661 <dbus_address_unescape_value+0x1661>
test   %eax,%eax
je     808e72d <dbus_address_unescape_value+0x172d>
mov    0x48(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808e7ce <dbus_address_unescape_value+0x17ce>
testb  $0x10,0x78(%esi)
je     808e79e <dbus_address_unescape_value+0x179e>
lea    -0x179e4(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808e6a2 <dbus_address_unescape_value+0x16a2>
lea    -0x1b0(%ebx),%eax
mov    %eax,0x28(%esi)
mov    $0x1,%eax
jmp    808e661 <dbus_address_unescape_value+0x1661>
lea    -0x179ec(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808e6a2 <dbus_address_unescape_value+0x16a2>
lea    -0x1b8(%ebx),%eax
mov    %eax,0x28(%esi)
mov    $0x1,%eax
jmp    808e661 <dbus_address_unescape_value+0x1661>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
xor    %eax,%eax
jmp    808e6a4 <dbus_address_unescape_value+0x16a4>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x29801,%ebx
mov    0x24(%esp),%edi
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   806a790 <dbus_connection_get_outgoing_unix_fds+0x3f0>
test   %eax,%eax
jne    808e826 <dbus_address_unescape_value+0x1826>
mov    0x4(%edi),%eax
test   %eax,%eax
jle    808e85b <dbus_address_unescape_value+0x185b>
mov    0x34(%esi),%edx
test   %edx,%edx
jle    808e838 <dbus_address_unescape_value+0x1838>
add    $0x10,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
jmp    808d3d0 <dbus_address_unescape_value+0x3d0>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x30(%esi),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808e8d8 <dbus_address_unescape_value+0x18d8>
mov    0x34(%esi),%ecx
test   %ecx,%ecx
jne    808e86c <dbus_address_unescape_value+0x186c>
testb  $0x4,0x78(%esi)
je     808e900 <dbus_address_unescape_value+0x1900>
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   806a920 <dbus_connection_get_outgoing_unix_fds+0x580>
mov    0x34(%esi),%eax
test   %eax,%eax
je     808e8e8 <dbus_address_unescape_value+0x18e8>
lea    0x30(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   80866f0 <dbus_shutdown+0x7a10>
test   %eax,%eax
je     808e826 <dbus_address_unescape_value+0x1826>
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   806a790 <dbus_connection_get_outgoing_unix_fds+0x3f0>
test   %eax,%eax
jne    808e826 <dbus_address_unescape_value+0x1826>
mov    0x48(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   806a6c0 <dbus_connection_get_outgoing_unix_fds+0x320>
test   %eax,%eax
je     808e826 <dbus_address_unescape_value+0x1826>
mov    0x48(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   806a890 <dbus_connection_get_outgoing_unix_fds+0x4f0>
test   %eax,%eax
jne    808e930 <dbus_address_unescape_value+0x1930>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esi),%eax
mov    %eax,0x4(%esp)
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   806a890 <dbus_connection_get_outgoing_unix_fds+0x4f0>
test   %eax,%eax
jne    808e894 <dbus_address_unescape_value+0x1894>
jmp    808e8d8 <dbus_address_unescape_value+0x18d8>
lea    -0x17a2e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808e8d8 <dbus_address_unescape_value+0x18d8>
lea    -0x188(%ebx),%eax
mov    %eax,0x28(%esi)
mov    $0x1,%eax
orb    $0x4,0x78(%esi)
jmp    808e8da <dbus_address_unescape_value+0x18da>
lea    0x0(%esi),%esi
mov    0x40(%esi),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   806a7b0 <dbus_connection_get_outgoing_unix_fds+0x410>
test   %eax,%eax
je     808e8d8 <dbus_address_unescape_value+0x18d8>
mov    0x40(%esi),%eax
movl   $0x2,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   806a7b0 <dbus_connection_get_outgoing_unix_fds+0x410>
test   %eax,%eax
je     808e8d8 <dbus_address_unescape_value+0x18d8>
mov    %esi,%eax
call   808d240 <dbus_address_unescape_value+0x240>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    808e8da <dbus_address_unescape_value+0x18da>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x29661,%ebx
mov    0xc4(%esp),%esi
lea    0x34(%esp),%edi
mov    %edi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8080080 <dbus_shutdown+0x13a0>
test   %eax,%eax
jne    808ea08 <dbus_address_unescape_value+0x1a08>
lea    -0x177b8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
setne  %al
movzbl %al,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
mov    %eax,%edx
xor    %eax,%eax
test   %edx,%edx
je     808e9f6 <dbus_address_unescape_value+0x19f6>
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
jne    808ea68 <dbus_address_unescape_value+0x1a68>
xor    %eax,%eax
mov    %ebp,(%esp)
mov    %eax,0x20(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x20(%esp),%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80800f0 <dbus_shutdown+0x1410>
lea    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8080080 <dbus_shutdown+0x13a0>
test   %eax,%eax
je     808eaf8 <dbus_address_unescape_value+0x1af8>
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x20(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808ea44 <dbus_address_unescape_value+0x1a44>
mov    0x20(%esp),%eax
mov    0x34(%esp),%edx
movl   $0x0,0x10(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %edx,0x4(%esp)
sub    %edx,%eax
mov    %eax,0x8(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
jne    808eb2b <dbus_address_unescape_value+0x1b2b>
xor    %eax,%eax
mov    %eax,0x24(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x24(%esp),%eax
jmp    808ea46 <dbus_address_unescape_value+0x1a46>
lea    0x0(%esi),%esi
lea    -0x177b8(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    808ea46 <dbus_address_unescape_value+0x1a46>
lea    0x60(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x24(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808eada <dbus_address_unescape_value+0x1ada>
mov    0x38(%esp),%eax
mov    %edi,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %eax,0x34(%esp)
call   80800f0 <dbus_shutdown+0x1410>
mov    0x4(%esi),%edx
mov    0x34(%esp),%eax
mov    0x24(%esp),%ecx
movl   $0x0,0x10(%esp)
mov    %edx,0x38(%esp)
sub    %eax,%edx
mov    %ecx,0xc(%esp)
mov    %edx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
jne    808eba3 <dbus_address_unescape_value+0x1ba3>
xor    %eax,%eax
mov    %eax,0x28(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x28(%esp),%eax
jmp    808eadc <dbus_address_unescape_value+0x1adc>
mov    %ebp,(%esp)
call   8091f20 <dbus_bus_remove_match+0xcf0>
test   %eax,%eax
jne    808ebdf <dbus_address_unescape_value+0x1bdf>
lea    -0x17784(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    808eb8a <dbus_address_unescape_value+0x1b8a>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8087990 <dbus_shutdown+0x8cb0>
test   %eax,%eax
je     808ec6d <dbus_address_unescape_value+0x1c6d>
cmpl   $0x0,0x64(%esp)
je     808ed19 <dbus_address_unescape_value+0x1d19>
mov    0xc0(%esp),%eax
lea    0x90(%esp),%esi
cmpl   $0x0,0x5c(%eax)
je     808ecc8 <dbus_address_unescape_value+0x1cc8>
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808eb88 <dbus_address_unescape_value+0x1b88>
movl   $0x10,0x4(%esp)
mov    %esi,(%esp)
call   8082c30 <dbus_shutdown+0x3f50>
test   %eax,%eax
jne    808ec78 <dbus_address_unescape_value+0x1c78>
xor    %eax,%eax
mov    %esi,(%esp)
mov    %eax,0x28(%esp)
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x28(%esp),%eax
jmp    808eb8a <dbus_address_unescape_value+0x1b8a>
lea    -0x17760(%ebx),%eax
jmp    808ebb5 <dbus_address_unescape_value+0x1bb5>
lea    0x70(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808ec4e <dbus_address_unescape_value+0x1c4e>
mov    0x28(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
jne    808ed24 <dbus_address_unescape_value+0x1d24>
xor    %eax,%eax
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x2c(%esp),%eax
jmp    808ec50 <dbus_address_unescape_value+0x1c50>
mov    %esi,(%esp)
call   806ad70 <dbus_error_init>
mov    %esi,0x8(%esp)
mov    %ebp,0x4(%esp)
movl   $0x0,(%esp)
call   8092050 <dbus_bus_remove_match+0xe20>
mov    0xc0(%esp),%ecx
test   %eax,%eax
mov    %eax,0x5c(%ecx)
jne    808ec2a <dbus_address_unescape_value+0x1c2a>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806ae60 <dbus_error_has_name>
test   %eax,%eax
je     808ed84 <dbus_address_unescape_value+0x1d84>
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
jmp    808eb88 <dbus_address_unescape_value+0x1b88>
lea    -0x179c7(%ebx),%eax
jmp    808ebb5 <dbus_address_unescape_value+0x1bb5>
lea    0x80(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808ecb0 <dbus_address_unescape_value+0x1cb0>
mov    0x28(%esp),%ecx
mov    0xc0(%esp),%eax
mov    0x3c(%esp),%edx
mov    %edi,0x8(%esp)
mov    %ecx,0x4(%esp)
mov    0x24(%esp),%ecx
add    $0x5c,%eax
mov    %ecx,(%esp)
call   804dc4c <sidput@plt+0xec>
test   %eax,%eax
jne    808edc7 <dbus_address_unescape_value+0x1dc7>
xor    %eax,%eax
mov    %edi,(%esp)
mov    %eax,0x2c(%esp)
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x2c(%esp),%eax
jmp    808ecb2 <dbus_address_unescape_value+0x1cb2>
lea    -0x179a9(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
mov    %esi,(%esp)
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x28(%esp)
call   806ade0 <dbus_error_free>
mov    0x28(%esp),%eax
jmp    808eb8a <dbus_address_unescape_value+0x1b8a>
cmpl   $0x0,0x84(%esp)
jne    808ee04 <dbus_address_unescape_value+0x1e04>
lea    -0x17738(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    808ed67 <dbus_address_unescape_value+0x1d67>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0x94(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808ed65 <dbus_address_unescape_value+0x1d65>
lea    -0x1fe1e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     808ed65 <dbus_address_unescape_value+0x1d65>
mov    0x94(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808ed65 <dbus_address_unescape_value+0x1d65>
cmpl   $0x0,0x94(%esp)
jne    808eeb3 <dbus_address_unescape_value+0x1eb3>
lea    -0x17a2e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xc0(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
setne  %al
movzbl %al,%eax
jmp    808ed67 <dbus_address_unescape_value+0x1d67>
mov    0xc0(%esp),%eax
mov    %esi,%edx
call   808db40 <dbus_address_unescape_value+0xb40>
jmp    808eea6 <dbus_address_unescape_value+0x1ea6>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x29129,%ebx
sub    $0x24,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
je     808ef71 <dbus_address_unescape_value+0x1f71>
mov    0x30(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     808ef80 <dbus_address_unescape_value+0x1f80>
mov    $0x94,%eax
call   808d800 <dbus_address_unescape_value+0x800>
test   %eax,%eax
je     808ef80 <dbus_address_unescape_value+0x1f80>
lea    -0x176a8(%ebx),%edx
mov    %edx,0x4(%eax)
lea    -0x180(%ebx),%edx
mov    %edx,0x28(%eax)
mov    0x10(%esp),%edx
movl   $0x0,0x7c(%eax)
movl   $0x6,0x80(%eax)
00
mov    %edx,0x84(%eax)
mov    0x14(%esp),%edx
mov    %edx,0x88(%eax)
mov    0x18(%esp),%edx
mov    %edx,0x8c(%eax)
mov    0x1c(%esp),%edx
mov    %edx,0x90(%eax)
mov    %eax,%edx
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %edx,%edx
jmp    808ef71 <dbus_address_unescape_value+0x1f71>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x29052,%ebx
subl   $0x1,(%esi)
je     808efc0 <dbus_address_unescape_value+0x1fc0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %esi,%eax
call   808d360 <dbus_address_unescape_value+0x360>
lea    -0x176a1(%ebx),%eax
cmp    %eax,0x4(%esi)
je     808f068 <dbus_address_unescape_value+0x2068>
lea    0x84(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x5c(%esi),%eax
test   %eax,%eax
je     808eff3 <dbus_address_unescape_value+0x1ff3>
mov    %eax,(%esp)
call   8091e80 <dbus_bus_remove_match+0xc50>
lea    0x4c(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x64(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x30(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x8(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x74(%esi),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
mov    0x44(%esi),%eax
mov    %eax,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
mov    0x48(%esi),%eax
mov    %eax,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x80(%esi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x7c(%esi),%eax
mov    %eax,(%esp)
call   807d8c0 <dbus_watch_handle+0x1d00>
jmp    808efe4 <dbus_address_unescape_value+0x1fe4>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x28f65,%ebx
sub    $0x2c,%esp
lea    0x10(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808f111 <dbus_address_unescape_value+0x2111>
mov    $0x90,%eax
call   808d800 <dbus_address_unescape_value+0x800>
test   %eax,%eax
mov    %eax,%esi
je     808f130 <dbus_address_unescape_value+0x2130>
mov    0x10(%esp),%eax
lea    -0x260(%ebx),%edx
mov    %esi,%edi
mov    %eax,0x80(%esi)
mov    0x14(%esp),%eax
mov    %eax,0x84(%esi)
mov    0x18(%esp),%eax
mov    %eax,0x88(%esi)
mov    0x1c(%esp),%eax
mov    %eax,0x8c(%esi)
lea    -0x176a1(%ebx),%eax
mov    %eax,0x4(%esi)
lea    -0x198(%ebx),%eax
mov    %eax,0x28(%esi)
mov    %esi,%eax
call   808d500 <dbus_address_unescape_value+0x500>
test   %eax,%eax
je     808f120 <dbus_address_unescape_value+0x2120>
add    $0x2c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
xor    %edi,%edi
call   808efa0 <dbus_address_unescape_value+0x1fa0>
jmp    808f111 <dbus_address_unescape_value+0x2111>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    808f111 <dbus_address_unescape_value+0x2111>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x28eb1,%ebx
mov    0x20(%esp),%esi
test   %eax,%eax
je     808f188 <dbus_address_unescape_value+0x2188>
mov    %eax,(%esp)
call   807ce60 <dbus_watch_handle+0x12a0>
test   %eax,%eax
mov    %eax,%edi
je     808f190 <dbus_address_unescape_value+0x2190>
mov    0x74(%esi),%eax
mov    %eax,(%esp)
call   807ec20 <dbus_free_string_array>
mov    $0x1,%eax
mov    %edi,0x74(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
xor    %edi,%edi
jmp    808f16b <dbus_address_unescape_value+0x216b>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    808f17e <dbus_address_unescape_value+0x217e>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x6c,%esp
mov    0x80(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x28e4d,%ebx
mov    0x28(%esi),%eax
andb   $0xfe,0x78(%esi)
mov    0x4(%eax),%edi
test   %edi,%edi
je     808f22c <dbus_address_unescape_value+0x222c>
cmpl   $0x4000,0xc(%esi)
jg     808f36d <dbus_address_unescape_value+0x236d>
cmpl   $0x4000,0x1c(%esi)
jg     808f36d <dbus_address_unescape_value+0x236d>
lea    0x34(%esp),%eax
mov    %eax,0x20(%esp)
lea    -0x17a4f(%ebx),%eax
mov    %eax,0x24(%esp)
lea    -0x1798e(%ebx),%eax
lea    0x8(%esi),%edi
mov    %eax,0x2c(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
movl   $0x0,0x34(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
jne    808f250 <dbus_address_unescape_value+0x2250>
testb  $0x1,0x78(%esi)
mov    $0x1,%eax
jne    808f244 <dbus_address_unescape_value+0x2244>
mov    0x1c(%esi),%edx
mov    $0x2,%al
test   %edx,%edx
jle    808f43d <dbus_address_unescape_value+0x243d>
add    $0x6c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x40(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
jne    808f268 <dbus_address_unescape_value+0x2268>
orb    $0x1,0x78(%esi)
jmp    808f22c <dbus_address_unescape_value+0x222c>
xchg   %ax,%ax
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x28(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808f2b0 <dbus_address_unescape_value+0x22b0>
mov    0x34(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ebp,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
jne    808f2c0 <dbus_address_unescape_value+0x22c0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    808f260 <dbus_address_unescape_value+0x2260>
lea    0x0(%esi),%esi
mov    0x44(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   80808a0 <dbus_shutdown+0x1bc0>
test   %eax,%eax
jne    808f380 <dbus_address_unescape_value+0x2380>
mov    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
lea    -0x17a59(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x18(%esi),%eax
mov    %eax,(%esp)
call   807f9e0 <dbus_shutdown+0xd00>
test   %eax,%eax
je     808f2a4 <dbus_address_unescape_value+0x22a4>
mov    0x34(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
call   807fac0 <dbus_shutdown+0xde0>
movl   $0x2,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807fac0 <dbus_shutdown+0xde0>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x28(%esi),%eax
andb   $0xfe,0x78(%esi)
mov    0x4(%eax),%ecx
test   %ecx,%ecx
je     808f22c <dbus_address_unescape_value+0x222c>
cmpl   $0x4000,0xc(%esi)
jg     808f36d <dbus_address_unescape_value+0x236d>
cmpl   $0x4000,0x1c(%esi)
jle    808f200 <dbus_address_unescape_value+0x2200>
lea    -0x1c0(%ebx),%eax
mov    %eax,0x28(%esi)
jmp    808f22c <dbus_address_unescape_value+0x222c>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x38(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
call   8080080 <dbus_shutdown+0x13a0>
lea    0x3c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80800f0 <dbus_shutdown+0x1410>
mov    0x3c(%esp),%edx
mov    0x38(%esp),%eax
cmp    %eax,%edx
jg     808f466 <dbus_address_unescape_value+0x2466>
mov    0x28(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x8(%esp)
call   807fc00 <dbus_shutdown+0xf20>
test   %eax,%eax
je     808f2a4 <dbus_address_unescape_value+0x22a4>
xor    %edx,%edx
mov    %esi,0x80(%esp)
mov    %edx,%esi
nop
mov    -0x2c0(%ebx,%esi,8),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8080450 <dbus_shutdown+0x1770>
test   %eax,%eax
jne    808f481 <dbus_address_unescape_value+0x2481>
add    $0x1,%esi
cmp    $0x9,%esi
jne    808f3f0 <dbus_address_unescape_value+0x23f0>
mov    0x80(%esp),%esi
mov    $0x7,%edx
mov    0x28(%esi),%eax
mov    0x28(%esp),%ecx
mov    %edx,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
call   *0x4(%eax)
test   %eax,%eax
je     808f2a4 <dbus_address_unescape_value+0x22a4>
jmp    808f301 <dbus_address_unescape_value+0x2301>
mov    0x28(%esi),%edx
lea    -0x1c0(%ebx),%ecx
mov    $0x3,%al
cmp    %ecx,%edx
je     808f244 <dbus_address_unescape_value+0x2244>
lea    -0x1b8(%ebx),%eax
cmp    %eax,%edx
sete   %al
movzbl %al,%eax
shl    $0x2,%eax
jmp    808f244 <dbus_address_unescape_value+0x2244>
sub    %eax,%edx
mov    %eax,0x4(%esp)
mov    %edx,0x8(%esp)
mov    %ebp,(%esp)
call   807fac0 <dbus_shutdown+0xde0>
mov    0x38(%esp),%eax
jmp    808f3c0 <dbus_address_unescape_value+0x23c0>
mov    %esi,%edx
mov    0x80(%esp),%esi
mov    -0x2bc(%ebx,%edx,8),%edx
jmp    808f41b <dbus_address_unescape_value+0x241b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
xor    %eax,%eax
mov    0x8(%esp),%edx
movl   $0x0,(%edx)
cmpl   $0x0,0x1c(%ecx)
je     808f4bd <dbus_address_unescape_value+0x24bd>
add    $0x18,%ecx
mov    $0x1,%al
mov    %ecx,(%edx)
repz ret
nop
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x28b33,%ebx
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
add    $0x18,%eax
mov    %eax,(%esp)
call   807fac0 <dbus_shutdown+0xde0>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0x8(%esp),%edx
lea    0x8(%eax),%ecx
mov    %ecx,(%edx)
orb    $0x8,0x78(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
andb   $0xf7,0x78(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x28(%eax),%edx
mov    0x4(%edx),%edx
test   %edx,%edx
je     808f540 <dbus_address_unescape_value+0x2540>
repz ret
mov    0x8(%esp),%edx
add    $0x8,%eax
mov    %eax,(%edx)
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x28aa3,%ebx
mov    0x28(%eax),%edx
mov    0x4(%edx),%edx
test   %edx,%edx
je     808f578 <dbus_address_unescape_value+0x2578>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
add    $0x8,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0x18,%esp
pop    %ebx
ret
push   %ebx
mov    0x8(%esp),%edx
xor    %eax,%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x28a64,%ebx
lea    -0x1b8(%ebx),%ecx
cmp    %ecx,0x28(%edx)
je     808f5b0 <dbus_address_unescape_value+0x25b0>
pop    %ebx
ret
nop
mov    0x2c(%edx),%ecx
test   %ecx,%ecx
je     808f5ad <dbus_address_unescape_value+0x25ad>
lea    -0x176a1(%ebx),%eax
cmp    %eax,0x4(%edx)
je     808f5d0 <dbus_address_unescape_value+0x25d0>
mov    0x8(%ecx),%edx
xor    %eax,%eax
pop    %ebx
test   %edx,%edx
setne  %al
ret
xchg   %ax,%ax
mov    0x1c(%ecx),%ecx
xor    %eax,%eax
pop    %ebx
test   %ecx,%ecx
setne  %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x28a17,%ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
lea    -0x1b8(%ebx),%edx
cmp    %edx,0x28(%esi)
je     808f608 <dbus_address_unescape_value+0x2608>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %esi,(%esp)
call   808f590 <dbus_address_unescape_value+0x2590>
test   %eax,%eax
je     808f640 <dbus_address_unescape_value+0x2640>
mov    0x28(%esp),%ecx
lea    -0x176a1(%ebx),%eax
cmp    %eax,0x4(%esi)
mov    0x2c(%esi),%eax
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
mov    0x24(%esp),%ecx
mov    %ecx,0x4(%esp)
je     808f670 <dbus_address_unescape_value+0x2670>
call   *0x8(%eax)
jmp    808f601 <dbus_address_unescape_value+0x2601>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
jmp    808f601 <dbus_address_unescape_value+0x2601>
lea    0x0(%esi,%eiz,1),%esi
call   *0x1c(%eax)
jmp    808f601 <dbus_address_unescape_value+0x2601>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
mov    0x8(%esp),%edx
xor    %eax,%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x28974,%ebx
lea    -0x1b8(%ebx),%ecx
cmp    %ecx,0x28(%edx)
je     808f6a0 <dbus_address_unescape_value+0x26a0>
pop    %ebx
ret
nop
mov    0x2c(%edx),%ecx
test   %ecx,%ecx
je     808f69d <dbus_address_unescape_value+0x269d>
lea    -0x176a1(%ebx),%eax
cmp    %eax,0x4(%edx)
je     808f6c0 <dbus_address_unescape_value+0x26c0>
mov    0xc(%ecx),%edx
xor    %eax,%eax
pop    %ebx
test   %edx,%edx
setne  %al
ret
xchg   %ax,%ax
mov    0x20(%ecx),%ecx
xor    %eax,%eax
pop    %ebx
test   %ecx,%ecx
setne  %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
xor    %eax,%eax
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x28927,%ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
lea    -0x1b8(%ebx),%edx
cmp    %edx,0x28(%esi)
je     808f6f8 <dbus_address_unescape_value+0x26f8>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
mov    %esi,(%esp)
call   808f680 <dbus_address_unescape_value+0x2680>
test   %eax,%eax
je     808f730 <dbus_address_unescape_value+0x2730>
mov    0x28(%esp),%ecx
lea    -0x176a1(%ebx),%eax
cmp    %eax,0x4(%esi)
mov    0x2c(%esi),%eax
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
mov    0x24(%esp),%ecx
mov    %ecx,0x4(%esp)
je     808f760 <dbus_address_unescape_value+0x2760>
call   *0xc(%eax)
jmp    808f6f1 <dbus_address_unescape_value+0x26f1>
lea    0x0(%esi),%esi
mov    0x28(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
jmp    808f6f1 <dbus_address_unescape_value+0x26f1>
lea    0x0(%esi,%eiz,1),%esi
call   *0x20(%eax)
jmp    808f6f1 <dbus_address_unescape_value+0x26f1>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x28882,%ebx
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   806a920 <dbus_connection_get_outgoing_unix_fds+0x580>
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x40(%esi),%eax
mov    %eax,(%esp)
call   806a890 <dbus_connection_get_outgoing_unix_fds+0x4f0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x44(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    0x8(%esp),%edx
xor    %eax,%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x28834,%ebx
lea    -0x1b8(%ebx),%ecx
cmp    %ecx,0x28(%edx)
jne    808f7e3 <dbus_address_unescape_value+0x27e3>
mov    0x80(%edx),%eax
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x287ff,%ebx
mov    0x4(%eax),%edx
add    $0x4c,%ecx
movl   $0x0,0x10(%esp)
mov    %ecx,0xc(%esp)
mov    %edx,0x14(%esp)
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807fc80 <dbus_shutdown+0xfa0>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%ecx
movzbl 0x8(%esp),%edx
movzbl 0x78(%ecx),%eax
and    $0x1,%edx
shl    $0x4,%edx
and    $0xffffffef,%eax
or     %edx,%eax
mov    %al,0x78(%ecx)
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movzbl 0x78(%eax),%eax
shr    $0x5,%al
and    $0x1,%eax
ret
nop
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x28787,%ebx
sub    $0x14,%esp
mov    %edx,(%esp)
call   8087250 <dbus_shutdown+0x8570>
mov    %eax,%edx
mov    $0x1,%eax
test   %edx,%edx
je     808f8ac <dbus_address_unescape_value+0x28ac>
cmpb   $0x0,(%edx)
je     808f8ac <dbus_address_unescape_value+0x28ac>
mov    %edx,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,(%esi)
setne  %al
movzbl %al,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
xor    %esi,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x28736,%ebx
sub    $0x10,%esp
lea    -0x17698(%ebx),%edi
mov    0x944(%esi,%ebx,1),%eax
test   %eax,%eax
je     808f8ec <dbus_address_unescape_value+0x28ec>
mov    %edi,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
mov    0x938(%esi,%ebx,1),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
movl   $0x0,0x938(%esi,%ebx,1)
00
add    $0x4,%esi
cmp    $0xc,%esi
jne    808f8d9 <dbus_address_unescape_value+0x28d9>
movl   $0x2,0x370(%ebx)
00
movl   $0x0,0x934(%ebx)
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x286c1,%ebx
testb  $0x1,0x8(%esi)
jne    808f978 <dbus_address_unescape_value+0x2978>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
lea    0x374(%ebx),%eax
mov    %eax,(%esp)
call   8069c20 <dbus_connection_free_data_slot>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    0x930(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x944(%ebx),%eax
lea    0xc(%eax),%edx
mov    (%esi),%ecx
cmp    %ecx,(%eax)
je     808f9b0 <dbus_address_unescape_value+0x29b0>
add    $0x4,%eax
cmp    %edx,%eax
jne    808f991 <dbus_address_unescape_value+0x2991>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    808f94b <dbus_address_unescape_value+0x294b>
lea    0x0(%esi),%esi
movl   $0x0,(%eax)
jmp    808f997 <dbus_address_unescape_value+0x2997>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
mov    %eax,%ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x28635,%ebx
sub    $0x1c,%esp
lea    0x374(%ebx),%esi
mov    %esi,(%esp)
call   8069be0 <dbus_connection_allocate_data_slot>
test   %eax,%eax
je     808fa10 <dbus_address_unescape_value+0x2a10>
mov    0x374(%ebx),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8069db0 <dbus_connection_get_data>
test   %eax,%eax
mov    %eax,%edi
je     808fa20 <dbus_address_unescape_value+0x2a20>
mov    %esi,(%esp)
call   8069c20 <dbus_connection_free_data_slot>
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movl   $0xc,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%edi
je     808fa64 <dbus_address_unescape_value+0x2a64>
mov    %ebp,(%eax)
lea    -0x286d0(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x374(%ebx),%eax
mov    %edi,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8069c90 <dbus_connection_set_data>
mov    %eax,%edx
mov    %edi,%eax
test   %edx,%edx
jne    808fa08 <dbus_address_unescape_value+0x2a08>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
mov    %esi,(%esp)
call   8069c20 <dbus_connection_free_data_slot>
xor    %eax,%eax
jmp    808fa08 <dbus_address_unescape_value+0x2a08>
push   %ebx
sub    $0x28,%esp
mov    0x30(%esp),%ecx
call   804e750 <sidput@plt+0xbf0>
add    $0x28583,%ebx
test   %ecx,%ecx
je     808fab0 <dbus_address_unescape_value+0x2ab0>
mov    %ecx,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   80674b0 <dbus_connection_send_with_reply_and_block>
test   %eax,%eax
je     808faab <dbus_address_unescape_value+0x2aab>
mov    %eax,(%esp)
call   806e970 <dbus_message_unref>
add    $0x28,%esp
pop    %ebx
ret
mov    %edx,(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x1c(%esp)
mov    %edx,0x18(%esp)
call   80714a0 <dbus_message_set_no_reply>
mov    0x18(%esp),%edx
mov    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8067a90 <dbus_connection_send>
add    $0x28,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x28508,%ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
lea    0x930(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
lea    0x944(%ebx),%eax
lea    0xc(%eax),%edx
cmp    %esi,(%eax)
je     808fb40 <dbus_address_unescape_value+0x2b40>
add    $0x4,%eax
cmp    %edx,%eax
jne    808fb1e <dbus_address_unescape_value+0x2b1e>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
movl   $0x0,(%eax)
jmp    808fb22 <dbus_address_unescape_value+0x2b22>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x284a0,%ebx
mov    0x54(%esp),%esi
test   %edx,%edx
je     808fce0 <dbus_bus_register+0x190>
test   %esi,%esi
je     808fb82 <dbus_bus_register+0x32>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    808fbc8 <dbus_bus_register+0x78>
lea    0x92c(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x50(%esp),%eax
call   808f9c0 <dbus_address_unescape_value+0x29c0>
test   %eax,%eax
mov    %eax,%ecx
je     808fc08 <dbus_bus_register+0xb8>
mov    0x4(%eax),%eax
mov    $0x1,%ebp
test   %eax,%eax
je     808fc30 <dbus_bus_register+0xe0>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %ebp,%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x291,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1735c(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x34c(%ebx),%eax
xor    %ebp,%ebp
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
jmp    808fbb1 <dbus_bus_register+0x61>
lea    0x0(%esi),%esi
lea    -0x20e02(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x2149a(%ebx),%ebp
lea    -0x21484(%ebx),%eax
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x14(%esp)
call   806f360 <dbus_message_new_method_call>
mov    0x14(%esp),%ecx
test   %eax,%eax
mov    %eax,%ebp
je     808fdb8 <dbus_bus_register+0x268>
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %esi,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,(%esp)
call   80674b0 <dbus_connection_send_with_reply_and_block>
test   %eax,%eax
je     808fcfd <dbus_bus_register+0x1ad>
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x1c(%esp)
call   8072cd0 <dbus_set_error_from_message>
mov    0x1c(%esp),%edx
movl   $0x0,0x18(%esp)
mov    0x14(%esp),%ecx
test   %eax,%eax
je     808fd16 <dbus_bus_register+0x1c6>
mov    (%edi),%eax
mov    %edx,0x14(%esp)
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
mov    0x14(%esp),%edx
mov    %edx,(%esp)
call   806e970 <dbus_message_unref>
mov    0x18(%esp),%eax
jmp    808fbbd <dbus_bus_register+0x6d>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x290,0x10(%esp)
jmp    808fbe0 <dbus_bus_register+0x90>
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
xor    %eax,%eax
jmp    808fbbd <dbus_bus_register+0x6d>
lea    0x2c(%esp),%eax
mov    %edx,(%esp)
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x73,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x14(%esp)
call   8070090 <dbus_message_get_args>
mov    0x14(%esp),%edx
mov    0x1c(%esp),%ecx
test   %eax,%eax
je     808fcb0 <dbus_bus_register+0x160>
mov    0x2c(%esp),%eax
mov    %edx,0x1c(%esp)
mov    %ecx,0x14(%esp)
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    0x14(%esp),%ecx
movl   $0x1,0x18(%esp)
mov    0x1c(%esp),%edx
test   %eax,%eax
mov    %eax,0x4(%ecx)
jne    808fcb0 <dbus_bus_register+0x160>
lea    0x34c(%ebx),%eax
mov    %edx,0x14(%esp)
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    0x14(%esp),%edx
movl   $0x0,0x18(%esp)
jmp    808fcb0 <dbus_bus_register+0x160>
lea    0x0(%esi,%eiz,1),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
jmp    808fbb1 <dbus_bus_register+0x61>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x28214,%ebx
cmp    $0x2,%eax
mov    %eax,0x18(%esp)
mov    %edx,0x14(%esp)
ja     8090060 <dbus_bus_register+0x510>
mov    0x70(%esp),%eax
test   %eax,%eax
je     808fe1f <dbus_bus_register+0x2cf>
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    80900a0 <dbus_bus_register+0x550>
lea    0x930(%ebx),%ebp
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    0x934(%ebx),%eax
test   %eax,%eax
jne    808ff60 <dbus_bus_register+0x410>
mov    0x93c(%ebx),%eax
movl   $0x0,0x944(%ebx)
00
movl   $0x0,0x948(%ebx)
00
movl   $0x0,0x94c(%ebx)
00
test   %eax,%eax
je     80900c0 <dbus_bus_register+0x570>
mov    0x938(%ebx),%eax
test   %eax,%eax
je     8090108 <dbus_bus_register+0x5b8>
mov    0x940(%ebx),%edi
test   %edi,%edi
je     80901d0 <dbus_bus_register+0x680>
lea    -0x2145a(%ebx),%eax
mov    %eax,(%esp)
call   8087250 <dbus_shutdown+0x8570>
test   %eax,%eax
je     808fec8 <dbus_bus_register+0x378>
mov    $0x7,%ecx
mov    %eax,%esi
lea    -0x1e084(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
je     8090038 <dbus_bus_register+0x4e8>
mov    $0x8,%ecx
mov    %eax,%esi
lea    -0x1e07b(%ebx),%edi
repz cmpsb %es:(%edi),%ds:(%esi)
jne    808fec8 <dbus_bus_register+0x378>
movl   $0x0,0x370(%ebx)
00
lea    -0x17499(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80871f0 <dbus_shutdown+0x8510>
test   %eax,%eax
jne    808ff20 <dbus_bus_register+0x3d0>
lea    0x34c(%ebx),%eax
xor    %esi,%esi
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %esi,%eax
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17481(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80871f0 <dbus_shutdown+0x8510>
test   %eax,%eax
je     808fee2 <dbus_bus_register+0x392>
lea    -0x28740(%ebx),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807ec70 <dbus_free_string_array+0x50>
test   %eax,%eax
je     808fee2 <dbus_bus_register+0x392>
movl   $0x1,0x934(%ebx)
00
xchg   %ax,%ax
mov    0x18(%esp),%edi
cmp    $0x2,%edi
jne    808ff7d <dbus_bus_register+0x42d>
mov    0x370(%ebx),%edi
mov    0x938(%ebx,%edi,4),%ecx
test   %ecx,%ecx
cmove  0x18(%esp),%edi
mov    0x14(%esp),%edx
test   %edx,%edx
je     8090018 <dbus_bus_register+0x4c8>
mov    0x18(%esp),%eax
mov    0x938(%ebx,%eax,4),%eax
test   %eax,%eax
je     8090220 <dbus_bus_register+0x6d0>
mov    0x70(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   80682f0 <dbus_connection_open_private>
mov    %eax,%esi
test   %esi,%esi
je     808ff06 <dbus_bus_register+0x3b6>
mov    0x70(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   808fb50 <dbus_bus_register>
test   %eax,%eax
je     8090048 <dbus_bus_register+0x4f8>
mov    0x14(%esp),%eax
test   %eax,%eax
jne    808ffd9 <dbus_bus_register+0x489>
mov    %esi,0x944(%ebx,%edi,4)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8065720 <dbus_connection_set_exit_on_disconnect>
lea    0x92c(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
call   808f9c0 <dbus_address_unescape_value+0x29c0>
orb    $0x1,0x8(%eax)
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
jmp    808ff06 <dbus_bus_register+0x3b6>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x944(%ebx,%edi,4),%esi
test   %esi,%esi
je     8090299 <dbus_bus_register+0x749>
mov    %esi,(%esp)
call   8065370 <dbus_connection_ref>
jmp    808ff06 <dbus_bus_register+0x3b6>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x1,0x370(%ebx)
00
jmp    808fec8 <dbus_bus_register+0x378>
nop
mov    %esi,(%esp)
call   8067bc0 <dbus_connection_send+0x130>
mov    %esi,(%esp)
xor    %esi,%esi
call   8066920 <dbus_connection_unref>
jmp    808ff06 <dbus_bus_register+0x3b6>
nop
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17604(%ebx),%eax
movl   $0x1b2,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x1734a(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    808ff13 <dbus_bus_register+0x3c3>
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x1b3,0x10(%esp)
jmp    8090078 <dbus_bus_register+0x528>
lea    0x0(%esi),%esi
lea    -0x2142b(%ebx),%edx
lea    0x93c(%ebx),%eax
call   808f870 <dbus_address_unescape_value+0x2870>
test   %eax,%eax
je     808fee2 <dbus_bus_register+0x392>
mov    0x93c(%ebx),%eax
test   %eax,%eax
jne    808fe6a <dbus_bus_register+0x31a>
lea    -0x175e4(%ebx),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x93c(%ebx)
jne    808fe6a <dbus_bus_register+0x31a>
jmp    808fee2 <dbus_bus_register+0x392>
lea    -0x21444(%ebx),%edx
lea    0x938(%ebx),%eax
call   808f870 <dbus_address_unescape_value+0x2870>
mov    0x938(%ebx),%eax
test   %eax,%eax
jne    808fe78 <dbus_bus_register+0x328>
lea    0x30(%esp),%esi
mov    %esi,(%esp)
movl   $0x0,0x48(%esp)
movl   $0x0,0x40(%esp)
movl   $0x0,0x44(%esp)
movl   $0x0,0x4c(%esp)
movb   $0x1,0x48(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     808fee2 <dbus_bus_register+0x392>
lea    0x40(%esp),%edx
lea    0x2c(%esp),%eax
mov    %edx,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
movl   $0x0,0x2c(%esp)
call   8084460 <dbus_shutdown+0x5780>
mov    0x1c(%esp),%edx
cmpl   $0x0,0x2c(%esp)
mov    %eax,%edi
je     809025b <dbus_bus_register+0x70b>
test   %eax,%eax
jne    8090247 <dbus_bus_register+0x6f7>
mov    %edx,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
je     80902c3 <dbus_bus_register+0x773>
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x175b8(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    808fee2 <dbus_bus_register+0x392>
lea    -0x2146f(%ebx),%edx
lea    0x940(%ebx),%eax
call   808f870 <dbus_address_unescape_value+0x2870>
test   %eax,%eax
je     808fee2 <dbus_bus_register+0x392>
mov    0x940(%ebx),%esi
test   %esi,%esi
jne    808fe86 <dbus_bus_register+0x336>
mov    0x938(%ebx),%eax
test   %eax,%eax
je     808fec8 <dbus_bus_register+0x378>
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x940(%ebx)
jne    808fec8 <dbus_bus_register+0x378>
jmp    808fee2 <dbus_bus_register+0x392>
lea    -0x1754c(%ebx),%eax
xor    %esi,%esi
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x70(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    808ff06 <dbus_bus_register+0x3b6>
lea    0x938(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   807f570 <dbus_shutdown+0x890>
mov    %eax,%edi
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
test   %edi,%edi
je     808fee2 <dbus_bus_register+0x392>
cmpl   $0x0,0x938(%ebx)
jne    808fe78 <dbus_bus_register+0x328>
lea    -0x174a5(%ebx),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x938(%ebx)
je     808fee2 <dbus_bus_register+0x392>
jmp    808fe78 <dbus_bus_register+0x328>
mov    0x18(%esp),%eax
mov    0x938(%ebx,%eax,4),%eax
test   %eax,%eax
je     8090220 <dbus_bus_register+0x6d0>
mov    0x70(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8068240 <dbus_connection_open>
mov    %eax,%esi
jmp    808ffae <dbus_bus_register+0x45e>
lea    -0x17584(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    80901c3 <dbus_bus_register+0x673>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0x4(%esp)
xor    %edx,%edx
jmp    808fde0 <dbus_bus_register+0x290>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x8(%esp),%edx
mov    0x4(%esp),%eax
mov    %edx,0x4(%esp)
mov    $0x1,%edx
jmp    808fde0 <dbus_bus_register+0x290>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x27cd0,%ebx
test   %esi,%esi
je     80903d8 <dbus_bus_set_unique_name+0xb8>
mov    0x44(%esp),%eax
test   %eax,%eax
je     8090398 <dbus_bus_set_unique_name+0x78>
lea    0x92c(%ebx),%edi
xor    %ebp,%ebp
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
call   808f9c0 <dbus_address_unescape_value+0x29c0>
test   %eax,%eax
mov    %eax,%esi
je     809037e <dbus_bus_set_unique_name+0x5e>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
test   %eax,%eax
mov    %eax,0x4(%esi)
setne  %al
movzbl %al,%eax
mov    %eax,%ebp
mov    (%edi),%edx
mov    %edx,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
add    $0x2c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17468(%ebx),%eax
movl   $0x302,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x17375(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x301,0x10(%esp)
jmp    80903b0 <dbus_bus_set_unique_name+0x90>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x27bf1,%ebx
test   %esi,%esi
je     8090458 <dbus_bus_get_unique_name+0x58>
lea    0x92c(%ebx),%edi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078580 <dbus_timeout_get_enabled+0x220>
mov    %esi,%eax
call   808f9c0 <dbus_address_unescape_value+0x29c0>
test   %eax,%eax
je     8090450 <dbus_bus_get_unique_name+0x50>
mov    0x4(%eax),%esi
mov    (%edi),%eax
mov    %eax,(%esp)
call   8078600 <dbus_timeout_get_enabled+0x2a0>
mov    %esi,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
xor    %esi,%esi
jmp    8090437 <dbus_bus_get_unique_name+0x37>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1738e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x32d,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    8090443 <dbus_bus_get_unique_name+0x43>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x27b50,%ebx
test   %esi,%esi
je     8090610 <dbus_bus_get_unix_user+0x170>
mov    0x54(%esp),%eax
test   %eax,%eax
je     80905d0 <dbus_bus_get_unix_user+0x130>
mov    %eax,(%esp)
call   806e3a0 <dbus_set_error+0x32a0>
test   %eax,%eax
je     8090588 <dbus_bus_get_unix_user+0xe8>
mov    0x58(%esp),%eax
test   %eax,%eax
je     80904f6 <dbus_bus_get_unix_user+0x56>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    80905f0 <dbus_bus_get_unix_user+0x150>
lea    -0x1f0bd(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x2149a(%ebx),%edx
lea    -0x21484(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806f360 <dbus_message_new_method_call>
test   %eax,%eax
mov    %eax,%edi
je     8090552 <dbus_bus_get_unix_user+0xb2>
lea    0x54(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %edi,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
jne    8090630 <dbus_bus_get_unix_user+0x190>
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
lea    0x34c(%ebx),%eax
mov    $0xffffffff,%esi
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x174e0(%ebx),%eax
movl   $0x35e,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x173a5(%ebx),%eax
mov    $0xffffffff,%esi
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0x35d,0x10(%esp)
jmp    80905a0 <dbus_bus_get_unix_user+0x100>
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x35f,0x10(%esp)
jmp    80905a0 <dbus_bus_get_unix_user+0x100>
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x35c,0x10(%esp)
jmp    80905a0 <dbus_bus_get_unix_user+0x100>
lea    0x0(%esi),%esi
mov    0x58(%esp),%eax
mov    %esi,(%esp)
mov    $0xffffffff,%esi
movl   $0xffffffff,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0xc(%esp)
call   80674b0 <dbus_connection_send_with_reply_and_block>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806e970 <dbus_message_unref>
test   %ebp,%ebp
je     80905c3 <dbus_bus_get_unix_user+0x123>
mov    0x58(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8072cd0 <dbus_set_error_from_message>
test   %eax,%eax
je     8090685 <dbus_bus_get_unix_user+0x1e5>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
nop
jmp    80905c3 <dbus_bus_get_unix_user+0x123>
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x75,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8070090 <dbus_message_get_args>
mov    %ebp,(%esp)
test   %eax,%eax
jne    80906be <dbus_bus_get_unix_user+0x21e>
call   806e970 <dbus_message_unref>
jmp    80905c3 <dbus_bus_get_unix_user+0x123>
xchg   %ax,%ax
call   806e970 <dbus_message_unref>
mov    0x2c(%esp),%esi
jmp    80905c3 <dbus_bus_get_unix_user+0x123>
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x27920,%ebx
mov    0x54(%esp),%esi
test   %edi,%edi
je     8090875 <dbus_bus_get_id+0x1a5>
test   %esi,%esi
je     8090706 <dbus_bus_get_id+0x36>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8090810 <dbus_bus_get_id+0x140>
lea    -0x1f068(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x2149a(%ebx),%edx
lea    -0x21484(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806f360 <dbus_message_new_method_call>
test   %eax,%eax
mov    %eax,%ebp
je     8090850 <dbus_bus_get_id+0x180>
mov    %edi,(%esp)
mov    %esi,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %eax,0x4(%esp)
call   80674b0 <dbus_connection_send_with_reply_and_block>
mov    %ebp,(%esp)
mov    %eax,%edi
call   806e970 <dbus_message_unref>
test   %edi,%edi
je     8090808 <dbus_bus_get_id+0x138>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8072cd0 <dbus_set_error_from_message>
test   %eax,%eax
jne    80907c8 <dbus_bus_get_id+0xf8>
lea    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x73,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
movl   $0x0,0x2c(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
je     80907c8 <dbus_bus_get_id+0xf8>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   807cdc0 <dbus_watch_handle+0x1200>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806e970 <dbus_message_unref>
test   %ebp,%ebp
mov    %ebp,%eax
je     80907e0 <dbus_bus_get_id+0x110>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x34c(%ebx),%edx
mov    %ebp,0x1c(%esp)
mov    (%edx),%edx
mov    %esi,(%esp)
mov    %edx,0x8(%esp)
lea    -0x21ca0(%ebx),%edx
mov    %edx,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    0x1c(%esp),%eax
jmp    80907bc <dbus_bus_get_id+0xec>
xor    %eax,%eax
jmp    80907bc <dbus_bus_get_id+0xec>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x3b0,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x173b5(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
xor    %eax,%eax
jmp    80907bc <dbus_bus_get_id+0xec>
lea    0x0(%esi),%esi
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
xor    %eax,%eax
jmp    80907bc <dbus_bus_get_id+0xec>
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x3af,0x10(%esp)
jmp    8090828 <dbus_bus_get_id+0x158>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x27760,%ebx
mov    0x5c(%esp),%esi
test   %ebp,%ebp
je     8090a58 <dbus_bus_request_name+0x1c8>
mov    0x54(%esp),%eax
test   %eax,%eax
je     8090a28 <dbus_bus_request_name+0x198>
mov    %eax,(%esp)
call   806e3a0 <dbus_set_error+0x32a0>
test   %eax,%eax
je     8090a08 <dbus_bus_request_name+0x178>
test   %esi,%esi
je     80908e2 <dbus_bus_request_name+0x52>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    80909c8 <dbus_bus_request_name+0x138>
lea    -0x1f16f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x2149a(%ebx),%edx
lea    -0x21484(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806f360 <dbus_message_new_method_call>
test   %eax,%eax
mov    %eax,%edi
je     8090a80 <dbus_bus_request_name+0x1f0>
lea    0x58(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x54(%esp),%eax
movl   $0x0,0x14(%esp)
movl   $0x75,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %edi,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     8090a78 <dbus_bus_request_name+0x1e8>
mov    %ebp,(%esp)
mov    %esi,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %edi,0x4(%esp)
call   80674b0 <dbus_connection_send_with_reply_and_block>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806e970 <dbus_message_unref>
test   %ebp,%ebp
je     8090aba <dbus_bus_request_name+0x22a>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8072cd0 <dbus_set_error_from_message>
test   %eax,%eax
jne    8090aa8 <dbus_bus_request_name+0x218>
lea    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x75,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8070090 <dbus_message_get_args>
mov    %ebp,(%esp)
test   %eax,%eax
je     8090a48 <dbus_bus_request_name+0x1b8>
call   806e970 <dbus_message_unref>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x457,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x173cb(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x174e0(%ebx),%eax
movl   $0x456,0x10(%esp)
jmp    80909e0 <dbus_bus_request_name+0x150>
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0x455,0x10(%esp)
jmp    80909e0 <dbus_bus_request_name+0x150>
lea    0x0(%esi),%esi
call   806e970 <dbus_message_unref>
mov    $0xffffffff,%eax
jmp    80909c0 <dbus_bus_request_name+0x130>
nop
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x454,0x10(%esp)
jmp    80909e0 <dbus_bus_request_name+0x150>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    $0xffffffff,%eax
jmp    80909c0 <dbus_bus_request_name+0x130>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
mov    $0xffffffff,%eax
jmp    80909c0 <dbus_bus_request_name+0x130>
mov    $0xffffffff,%eax
jmp    80909c0 <dbus_bus_request_name+0x130>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x27520,%ebx
mov    0x58(%esp),%esi
test   %ebp,%ebp
je     8090c88 <dbus_bus_release_name+0x1b8>
mov    0x54(%esp),%eax
test   %eax,%eax
je     8090c58 <dbus_bus_release_name+0x188>
mov    %eax,(%esp)
call   806e3a0 <dbus_set_error+0x32a0>
test   %eax,%eax
je     8090c38 <dbus_bus_release_name+0x168>
test   %esi,%esi
je     8090b22 <dbus_bus_release_name+0x52>
mov    %esi,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8090bf8 <dbus_bus_release_name+0x128>
lea    -0x1f160(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x2149a(%ebx),%edx
lea    -0x21484(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806f360 <dbus_message_new_method_call>
test   %eax,%eax
mov    %eax,%edi
je     8090cb0 <dbus_bus_release_name+0x1e0>
lea    0x54(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %edi,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     8090ca8 <dbus_bus_release_name+0x1d8>
mov    %ebp,(%esp)
mov    %esi,0xc(%esp)
movl   $0xffffffff,0x8(%esp)
mov    %edi,0x4(%esp)
call   80674b0 <dbus_connection_send_with_reply_and_block>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806e970 <dbus_message_unref>
test   %ebp,%ebp
je     8090cea <dbus_bus_release_name+0x21a>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   8072cd0 <dbus_set_error_from_message>
test   %eax,%eax
jne    8090cd8 <dbus_bus_release_name+0x208>
lea    0x2c(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x75,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
call   8070090 <dbus_message_get_args>
mov    %ebp,(%esp)
test   %eax,%eax
je     8090c78 <dbus_bus_release_name+0x1a8>
call   806e970 <dbus_message_unref>
mov    0x2c(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x4ac,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x173e1(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x174e0(%ebx),%eax
movl   $0x4ab,0x10(%esp)
jmp    8090c10 <dbus_bus_release_name+0x140>
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0x4aa,0x10(%esp)
jmp    8090c10 <dbus_bus_release_name+0x140>
lea    0x0(%esi),%esi
call   806e970 <dbus_message_unref>
mov    $0xffffffff,%eax
jmp    8090bf0 <dbus_bus_release_name+0x120>
nop
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
movl   $0x4a9,0x10(%esp)
jmp    8090c10 <dbus_bus_release_name+0x140>
lea    0x0(%esi),%esi
mov    %edi,(%esp)
call   806e970 <dbus_message_unref>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
call   806af90 <dbus_set_error_const>
mov    $0xffffffff,%eax
jmp    8090bf0 <dbus_bus_release_name+0x120>
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
mov    $0xffffffff,%eax
jmp    8090bf0 <dbus_bus_release_name+0x120>
mov    $0xffffffff,%eax
jmp    8090bf0 <dbus_bus_release_name+0x120>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x272f0,%ebx
test   %edi,%edi
je     8090ef0 <dbus_bus_name_has_owner+0x1f0>
mov    0x54(%esp),%eax
test   %eax,%eax
je     8090ed0 <dbus_bus_name_has_owner+0x1d0>
mov    %eax,(%esp)
call   806e3a0 <dbus_set_error+0x32a0>
test   %eax,%eax
je     8090eb0 <dbus_bus_name_has_owner+0x1b0>
mov    0x58(%esp),%eax
test   %eax,%eax
je     8090d56 <dbus_bus_name_has_owner+0x56>
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806af20 <dbus_error_is_set>
test   %eax,%eax
jne    8090e58 <dbus_bus_name_has_owner+0x158>
lea    -0x1f11f(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x2149a(%ebx),%edx
lea    -0x21484(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806f360 <dbus_message_new_method_call>
test   %eax,%eax
mov    %eax,%ebp
je     8090e28 <dbus_bus_name_has_owner+0x128>
lea    0x54(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %ebp,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     8090e20 <dbus_bus_name_has_owner+0x120>
mov    0x58(%esp),%eax
mov    %edi,(%esp)
xor    %edi,%edi
movl   $0xffffffff,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0xc(%esp)
call   80674b0 <dbus_connection_send_with_reply_and_block>
mov    %ebp,(%esp)
mov    %eax,%esi
call   806e970 <dbus_message_unref>
test   %esi,%esi
je     8090e12 <dbus_bus_name_has_owner+0x112>
lea    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x62,0x8(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   8070090 <dbus_message_get_args>
mov    %esi,(%esp)
test   %eax,%eax
je     8090ea0 <dbus_bus_name_has_owner+0x1a0>
call   806e970 <dbus_message_unref>
mov    0x2c(%esp),%edi
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
lea    0x34c(%ebx),%eax
xor    %edi,%edi
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1d9d4(%ebx),%eax
movl   $0x4fe,0x10(%esp)
mov    %eax,0x8(%esp)
lea    -0x173f9(%ebx),%eax
xor    %edi,%edi
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   806e970 <dbus_message_unref>
jmp    8090e12 <dbus_bus_name_has_owner+0x112>
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x174e0(%ebx),%eax
movl   $0x4fd,0x10(%esp)
jmp    8090e70 <dbus_bus_name_has_owner+0x170>
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17461(%ebx),%eax
movl   $0x4fc,0x10(%esp)
jmp    8090e70 <dbus_bus_name_has_owner+0x170>
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x173f9(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x4fb,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
jmp    8090e12 <dbus_bus_name_has_owner+0x112>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x40(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x270c0,%ebx
test   %esi,%esi
je     80910e0 <dbus_bus_start_service_by_name+0x1b0>
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   806e3a0 <dbus_set_error+0x32a0>
test   %eax,%eax
je     8091098 <dbus_bus_start_service_by_name+0x168>
lea    -0x1f154(%ebx),%eax
lea    -0x2149a(%ebx),%edx
mov    %eax,0xc(%esp)
lea    -0x21484(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,(%esp)
call   806f360 <dbus_message_new_method_call>
movl   $0x0,0x14(%esp)
movl   $0x75,0xc(%esp)
movl   $0x73,0x4(%esp)
mov    %eax,%edi
lea    0x48(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     8091060 <dbus_bus_start_service_by_name+0x130>
mov    0x50(%esp),%eax
mov    %esi,(%esp)
xor    %esi,%esi
movl   $0xffffffff,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,0xc(%esp)
call   80674b0 <dbus_connection_send_with_reply_and_block>
mov    %edi,(%esp)
mov    %eax,%ebp
call   806e970 <dbus_message_unref>
test   %ebp,%ebp
je     809108c <dbus_bus_start_service_by_name+0x15c>
mov    0x50(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   8072cd0 <dbus_set_error_from_message>
test   %eax,%eax
jne    8091120 <dbus_bus_start_service_by_name+0x1f0>
mov    0x4c(%esp),%eax
test   %eax,%eax
je     8091042 <dbus_bus_start_service_by_name+0x112>
mov    0x4c(%esp),%eax
movl   $0x0,0x10(%esp)
movl   $0x75,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
call   8070090 <dbus_message_get_args>
test   %eax,%eax
je     8091120 <dbus_bus_start_service_by_name+0x1f0>
mov    %ebp,(%esp)
mov    $0x1,%esi
call   806e970 <dbus_message_unref>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
xor    %esi,%esi
call   806e970 <dbus_message_unref>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
lea    -0x174bb(%ebx),%eax
xor    %esi,%esi
mov    %eax,0xc(%esp)
lea    -0x174e0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17418(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x54a,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x1df54(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17418(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x549,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %ebp,(%esp)
call   806e970 <dbus_message_unref>
jmp    809108c <dbus_bus_start_service_by_name+0x15c>
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x26ec2,%ebx
test   %eax,%eax
je     80911f0 <dbus_bus_add_match+0xc0>
lea    -0x1f0f0(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x2149a(%ebx),%edx
lea    -0x21484(%ebx),%eax
mov    %eax,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   806f360 <dbus_message_new_method_call>
test   %eax,%eax
mov    %eax,%esi
je     80911c8 <dbus_bus_add_match+0x98>
lea    0x34(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x73,0x4(%esp)
mov    %esi,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     80911c0 <dbus_bus_add_match+0x90>
mov    0x38(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   808fa70 <dbus_address_unescape_value+0x2a70>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17454(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1742e(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x5f0,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x34(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x26dc2,%ebx
test   %eax,%eax
je     80912e8 <dbus_bus_remove_match+0xb8>
lea    -0x1f0e7(%ebx),%eax
lea    -0x2149a(%ebx),%edx
mov    %eax,0xc(%esp)
lea    -0x21484(%ebx),%eax
mov    %edx,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %eax,(%esp)
call   806f360 <dbus_message_new_method_call>
movl   $0x0,0xc(%esp)
movl   $0x73,0x4(%esp)
mov    %eax,%esi
lea    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8071420 <dbus_message_append_args>
test   %eax,%eax
je     80912b8 <dbus_bus_remove_match+0x88>
mov    0x38(%esp),%eax
mov    %esi,%edx
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   808fa70 <dbus_address_unescape_value+0x2a70>
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    %esi,(%esp)
call   806e970 <dbus_message_unref>
lea    0x34c(%ebx),%eax
mov    (%eax),%eax
mov    %eax,0x8(%esp)
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x38(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    -0x174bb(%ebx),%eax
mov    %eax,0xc(%esp)
lea    -0x17454(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x17444(%ebx),%eax
mov    %eax,0x4(%esp)
lea    0x348(%ebx),%eax
movl   $0x622,0x10(%esp)
mov    (%eax),%eax
mov    %eax,(%esp)
call   807cd30 <dbus_watch_handle+0x1170>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %edi
mov    %eax,%edi
push   %esi
mov    %edx,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x26cc4,%ebx
sub    $0x20,%esp
lea    0x1c(%esp),%eax
lea    0x18(%esp),%edx
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   8081cf0 <dbus_shutdown+0x3010>
mov    (%esi),%esi
test   %esi,%esi
jle    8091389 <dbus_bus_remove_match+0x159>
mov    (%edi),%eax
mov    0x18(%esp),%edi
sub    $0x12b,%edi
cmp    0x4(%eax),%edi
jle    809138b <dbus_bus_remove_match+0x15b>
lea    0x18(%eax),%edx
xor    %ecx,%ecx
jmp    8091382 <dbus_bus_remove_match+0x152>
nop
mov    %edx,%eax
add    $0x18,%edx
cmp    %edi,-0x14(%edx)
jge    809138b <dbus_bus_remove_match+0x15b>
add    $0x1,%ecx
cmp    %esi,%ecx
jne    8091378 <dbus_bus_remove_match+0x148>
xor    %eax,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x26c57,%ebx
sub    $0x9c,%esp
mov    %eax,0x24(%esp)
lea    0x50(%esp),%eax
mov    %eax,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8091680 <dbus_bus_remove_match+0x450>
lea    0x60(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8091640 <dbus_bus_remove_match+0x410>
lea    0x40(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
call   8081cf0 <dbus_shutdown+0x3010>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    80916b0 <dbus_bus_remove_match+0x480>
movl   $0x0,0x2c(%esp)
lea    0x70(%esp),%esi
mov    %esi,(%esp)
call   806ad70 <dbus_error_init>
mov    0x24(%esp),%eax
mov    %esi,0x8(%esp)
add    $0x14,%eax
mov    %eax,0x30(%esp)
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8080bd0 <dbus_shutdown+0x1ef0>
test   %eax,%eax
je     8091960 <dbus_bus_remove_match+0x730>
mov    0x54(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   80808a0 <dbus_shutdown+0x1bc0>
test   %eax,%eax
je     8091938 <dbus_bus_remove_match+0x708>
xor    %esi,%esi
movl   $0x0,0x28(%esp)
lea    0x44(%esp),%edi
xchg   %ax,%ax
mov    0x18(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %eax,(%esp)
call   80801f0 <dbus_shutdown+0x1510>
test   %eax,%eax
je     8091748 <dbus_bus_remove_match+0x518>
cmpl   $0x1,0x1c(%esp)
sbb    %eax,%eax
not    %eax
add    $0x100,%eax
cmp    %esi,%eax
jle    8091748 <dbus_bus_remove_match+0x518>
lea    0x48(%esp),%eax
mov    %edi,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
movl   $0x0,0x44(%esp)
call   8087990 <dbus_shutdown+0x8cb0>
test   %eax,%eax
je     8091478 <dbus_bus_remove_match+0x248>
mov    0x48(%esp),%ecx
test   %ecx,%ecx
mov    %ecx,0x20(%esp)
js     8091478 <dbus_bus_remove_match+0x248>
mov    0x44(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   80800f0 <dbus_shutdown+0x1410>
lea    0x4c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %edi,0xc(%esp)
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8087990 <dbus_shutdown+0x8cb0>
mov    0x20(%esp),%ecx
test   %eax,%eax
je     8091478 <dbus_bus_remove_match+0x248>
mov    0x4c(%esp),%eax
test   %eax,%eax
mov    %eax,0x20(%esp)
js     8091478 <dbus_bus_remove_match+0x248>
mov    0x40(%esp),%edx
lea    0x12c(%edx),%eax
cmp    %eax,0x20(%esp)
jg     8091478 <dbus_bus_remove_match+0x248>
sub    $0x1a4,%edx
cmp    %edx,0x20(%esp)
jl     8091478 <dbus_bus_remove_match+0x248>
mov    0x44(%esp),%eax
mov    %edi,0x8(%esp)
mov    %ebp,(%esp)
mov    %ecx,0x34(%esp)
mov    %eax,0x4(%esp)
call   80800f0 <dbus_shutdown+0x1410>
mov    0x44(%esp),%eax
cmp    %eax,0x64(%esp)
je     8091478 <dbus_bus_remove_match+0x248>
lea    0x1(%esi),%eax
mov    %eax,0x3c(%esp)
lea    (%eax,%eax,2),%edx
mov    0x28(%esp),%eax
shl    $0x3,%edx
mov    %edx,0x4(%esp)
mov    %edx,0x38(%esp)
mov    %eax,(%esp)
call   807ebe0 <dbus_realloc>
mov    0x38(%esp),%edx
mov    0x34(%esp),%ecx
test   %eax,%eax
mov    %eax,0x20(%esp)
je     8091e4d <dbus_bus_remove_match+0xc1d>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
lea    -0x18(%eax,%edx,1),%edx
lea    0x8(%edx),%eax
mov    %eax,(%esp)
mov    %edx,0x34(%esp)
mov    %eax,0x28(%esp)
call   807f330 <dbus_shutdown+0x650>
mov    0x34(%esp),%edx
mov    0x38(%esp),%ecx
test   %eax,%eax
je     8091e22 <dbus_bus_remove_match+0xbf2>
mov    0x4c(%esp),%eax
mov    %ecx,(%edx)
mov    %eax,0x4(%edx)
mov    0x28(%esp),%eax
movl   $0x0,0x10(%esp)
mov    %ebp,(%esp)
mov    %eax,0xc(%esp)
lea    0x80(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,0x4(%esp)
call   80806a0 <dbus_shutdown+0x19c0>
test   %eax,%eax
je     8091de8 <dbus_bus_remove_match+0xbb8>
mov    0x80(%esp),%eax
cmp    %eax,0x64(%esp)
je     8091bbd <dbus_bus_remove_match+0x98d>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x20(%esp),%eax
mov    %eax,0x28(%esp)
jmp    8091478 <dbus_bus_remove_match+0x248>
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x9c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x9c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x24(%esp),%eax
mov    $0x20,%esi
mov    %ebp,0x20(%esp)
lea    0x80(%esp),%edi
add    $0x24,%eax
mov    %eax,0x28(%esp)
mov    %eax,%ebp
jmp    80916ed <dbus_bus_remove_match+0x4bd>
nop
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
movl   $0xfa,(%esp)
call   8081df0 <dbus_shutdown+0x3110>
sub    $0x1,%esi
je     8091b1d <dbus_bus_remove_match+0x8ed>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
movl   $0x0,0x88(%esp)
00
movl   $0x0,0x80(%esp)
00
movl   $0x0,0x84(%esp)
00
movl   $0x0,0x8c(%esp)
00
movb   $0x1,0x88(%esp)
call   80812e0 <dbus_shutdown+0x2600>
test   %eax,%eax
je     80916d0 <dbus_bus_remove_match+0x4a0>
mov    0x20(%esp),%ebp
movl   $0x1,0x2c(%esp)
jmp    8091411 <dbus_bus_remove_match+0x1e1>
lea    0x0(%esi),%esi
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    8091970 <dbus_bus_remove_match+0x740>
mov    0x24(%esp),%edx
mov    0x34(%edx),%eax
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     80917a6 <dbus_bus_remove_match+0x576>
mov    0x38(%edx),%edx
xor    %edi,%edi
mov    %edx,%ecx
test   %ecx,%ecx
lea    0x8(%eax),%edx
jle    809179a <dbus_bus_remove_match+0x56a>
mov    %esi,0x20(%esp)
mov    %edi,%esi
mov    %ecx,%edi
mov    %ebp,0x30(%esp)
mov    %edx,%ebp
nop
mov    %ebp,(%esp)
add    $0x1,%esi
add    $0x18,%ebp
call   807f3d0 <dbus_shutdown+0x6f0>
cmp    %edi,%esi
jne    8091780 <dbus_bus_remove_match+0x550>
mov    0x20(%esp),%esi
mov    0x30(%esp),%ebp
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x24(%esp),%eax
mov    0x28(%esp),%edx
movl   $0x1,0x1c(%esp)
movl   $0x0,0x28(%esp)
mov    %esi,0x38(%eax)
xor    %esi,%esi
mov    %edx,0x34(%eax)
mov    0x2c(%esp),%edi
test   %edi,%edi
jne    8091868 <dbus_bus_remove_match+0x638>
cmpl   $0x1,0x1c(%esp)
je     80918e8 <dbus_bus_remove_match+0x6b8>
mov    0xb0(%esp),%edx
movl   $0x0,0x1c(%esp)
test   %edx,%edx
je     8091801 <dbus_bus_remove_match+0x5d1>
mov    0xb0(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8091bce <dbus_bus_remove_match+0x99e>
mov    0x28(%esp),%eax
test   %eax,%eax
je     8091842 <dbus_bus_remove_match+0x612>
lea    0x8(%eax),%edi
xor    %eax,%eax
test   %esi,%esi
je     8091836 <dbus_bus_remove_match+0x606>
mov    %ebp,0x20(%esp)
mov    %eax,%ebp
mov    %edi,(%esp)
add    $0x1,%ebp
call   8080b90 <dbus_shutdown+0x1eb0>
mov    %edi,(%esp)
add    $0x18,%edi
call   807f3d0 <dbus_shutdown+0x6f0>
cmp    %esi,%ebp
jne    8091818 <dbus_bus_remove_match+0x5e8>
mov    0x20(%esp),%ebp
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x24(%esp),%eax
lea    0x80(%esp),%edi
mov    %edi,0x4(%esp)
movl   $0x0,0x88(%esp)
00
movl   $0x0,0x80(%esp)
00
add    $0x24,%eax
mov    %eax,(%esp)
movl   $0x0,0x84(%esp)
00
movl   $0x0,0x8c(%esp)
00
movb   $0x1,0x88(%esp)
call   80813a0 <dbus_shutdown+0x26c0>
test   %eax,%eax
jne    80917d2 <dbus_bus_remove_match+0x5a2>
mov    0x84(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x172b8(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
jmp    80917d2 <dbus_bus_remove_match+0x5a2>
lea    0x0(%esi,%eiz,1),%esi
mov    0xb0(%esp),%ecx
test   %ecx,%ecx
je     8091801 <dbus_bus_remove_match+0x5d1>
mov    0xb0(%esp),%eax
mov    (%eax),%eax
test   %eax,%eax
je     8091801 <dbus_bus_remove_match+0x5d1>
mov    %eax,0xc(%esp)
mov    0xb0(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x17298(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
jmp    8091801 <dbus_bus_remove_match+0x5d1>
lea    0x0(%esi),%esi
lea    -0x172fc(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
mov    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
jmp    8091468 <dbus_bus_remove_match+0x238>
nop
mov    %esi,(%esp)
call   806ade0 <dbus_error_free>
jmp    8091444 <dbus_bus_remove_match+0x214>
lea    0x0(%esi),%esi
lea    0x80(%esp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8091bd9 <dbus_bus_remove_match+0x9a9>
mov    %ebp,0x1c(%esp)
mov    0x28(%esp),%ebp
nop
movl   $0x4,0x4(%esp)
mov    %edi,(%esp)
call   8082c30 <dbus_shutdown+0x3f50>
test   %eax,%eax
je     8091ac5 <dbus_bus_remove_match+0x895>
mov    0x80(%esp),%eax
movzbl 0x1(%eax),%edx
movzbl 0x2(%eax),%ecx
shl    $0x8,%edx
shl    $0x10,%ecx
or     %ecx,%edx
movzbl (%eax),%ecx
movzbl 0x3(%eax),%eax
or     %ecx,%edx
shl    $0x18,%eax
or     %eax,%edx
mov    %edx,%eax
sar    $0x1f,%eax
xor    %eax,%edx
sub    %eax,%edx
test   %esi,%esi
je     8091a02 <dbus_bus_remove_match+0x7d2>
cmp    %edx,0x0(%ebp)
je     8091b08 <dbus_bus_remove_match+0x8d8>
mov    %ebp,%ecx
xor    %eax,%eax
jmp    80919fb <dbus_bus_remove_match+0x7cb>
lea    0x0(%esi,%eiz,1),%esi
add    $0x18,%ecx
cmp    %edx,(%ecx)
je     8091b08 <dbus_bus_remove_match+0x8d8>
add    $0x1,%eax
cmp    %esi,%eax
jne    80919f0 <dbus_bus_remove_match+0x7c0>
movl   $0x0,0x4(%esp)
mov    0x1c(%esp),%ebp
mov    %edi,(%esp)
mov    %edx,0x1c(%esp)
call   807f730 <dbus_shutdown+0xa50>
movl   $0x18,0x4(%esp)
mov    %edi,(%esp)
call   8082c30 <dbus_shutdown+0x3f50>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     8091ad0 <dbus_bus_remove_match+0x8a0>
lea    0x1(%esi),%eax
mov    %eax,0x20(%esp)
lea    (%eax,%eax,2),%ecx
mov    0x28(%esp),%eax
shl    $0x3,%ecx
mov    %ecx,0x4(%esp)
mov    %edx,0x38(%esp)
mov    %eax,(%esp)
mov    %ecx,0x34(%esp)
call   807ebe0 <dbus_realloc>
mov    0x34(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
mov    %eax,0x1c(%esp)
je     8091ad0 <dbus_bus_remove_match+0x8a0>
mov    0x1c(%esp),%eax
mov    %edx,0x38(%esp)
lea    -0x18(%eax,%ecx,1),%ecx
lea    0x8(%ecx),%eax
mov    %eax,(%esp)
mov    %ecx,0x34(%esp)
mov    %eax,0x28(%esp)
call   807f330 <dbus_shutdown+0x650>
mov    0x34(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    8091c07 <dbus_bus_remove_match+0x9d7>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x1c(%esp),%eax
mov    %eax,0x28(%esp)
jmp    8091af1 <dbus_bus_remove_match+0x8c1>
mov    0x1c(%esp),%ebp
lea    0x0(%esi,%eiz,1),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
movl   $0x0,0x1c(%esp)
jmp    80917c6 <dbus_bus_remove_match+0x596>
xchg   %ax,%ax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
jmp    8091990 <dbus_bus_remove_match+0x760>
mov    0x28(%esp),%eax
mov    %edi,0x4(%esp)
mov    0x20(%esp),%ebp
movl   $0x0,0x88(%esp)
00
movl   $0x0,0x80(%esp)
00
mov    %eax,(%esp)
movl   $0x0,0x84(%esp)
00
movl   $0x0,0x8c(%esp)
00
movb   $0x1,0x88(%esp)
call   80813a0 <dbus_shutdown+0x26c0>
test   %eax,%eax
jne    8091ba3 <dbus_bus_remove_match+0x973>
mov    %edi,(%esp)
xor    %esi,%esi
call   806ade0 <dbus_error_free>
lea    -0x17328(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x28(%esp)
jmp    80917dd <dbus_bus_remove_match+0x5ad>
mov    0x28(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   80812e0 <dbus_shutdown+0x2600>
test   %eax,%eax
jne    8091735 <dbus_bus_remove_match+0x505>
jmp    8091b69 <dbus_bus_remove_match+0x939>
mov    0x20(%esp),%eax
mov    0x3c(%esp),%esi
mov    %eax,0x28(%esp)
jmp    8091478 <dbus_bus_remove_match+0x248>
lea    -0x17339(%ebx),%eax
jmp    8091908 <dbus_bus_remove_match+0x6d8>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x1c(%esp)
jmp    80917c6 <dbus_bus_remove_match+0x596>
lea    0x4c(%esp),%eax
mov    %eax,(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,0x38(%esp)
mov    %edx,0x34(%esp)
call   8081cf0 <dbus_shutdown+0x3010>
mov    0x38(%esp),%ecx
mov    0x4c(%esp),%eax
mov    0x34(%esp),%edx
mov    %eax,0x4(%ecx)
mov    0x28(%esp),%eax
mov    %edx,(%ecx)
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %edi,(%esp)
call   807fc00 <dbus_shutdown+0xf20>
test   %eax,%eax
je     8091dae <dbus_bus_remove_match+0xb7e>
mov    %edi,(%esp)
xor    %edi,%edi
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x18(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   807f730 <dbus_shutdown+0xa50>
mov    0x1c(%esp),%edx
mov    %ebp,0x28(%esp)
mov    0x18(%esp),%ebp
lea    0x8(%edx),%esi
mov    -0x8(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8087590 <dbus_shutdown+0x88b0>
test   %eax,%eax
je     8091d70 <dbus_bus_remove_match+0xb40>
movl   $0x20,0x4(%esp)
mov    %ebp,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8091d70 <dbus_bus_remove_match+0xb40>
mov    -0x4(%esi),%eax
mov    %ebp,(%esp)
mov    %eax,0x4(%esp)
call   8087590 <dbus_shutdown+0x88b0>
test   %eax,%eax
je     8091d70 <dbus_bus_remove_match+0xb40>
movl   $0x20,0x4(%esp)
mov    %ebp,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8091d70 <dbus_bus_remove_match+0xb40>
mov    0x54(%esp),%eax
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
je     8091d70 <dbus_bus_remove_match+0xb40>
movl   $0xa,0x4(%esp)
mov    %ebp,(%esp)
call   807fa80 <dbus_shutdown+0xda0>
test   %eax,%eax
je     8091d70 <dbus_bus_remove_match+0xb40>
add    $0x1,%edi
add    $0x18,%esi
cmp    0x20(%esp),%edi
jne    8091c89 <dbus_bus_remove_match+0xa59>
mov    0xb0(%esp),%eax
mov    %edi,%esi
movl   $0x0,0x8(%esp)
mov    0x28(%esp),%ebp
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8080e60 <dbus_shutdown+0x2180>
test   %eax,%eax
mov    0x1c(%esp),%eax
mov    %eax,0x28(%esp)
je     8091e15 <dbus_bus_remove_match+0xbe5>
jmp    8091754 <dbus_bus_remove_match+0x524>
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    0x28(%esp),%ebp
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x1c(%esp),%eax
mov    0x20(%esp),%esi
movl   $0x0,0x1c(%esp)
mov    %eax,0x28(%esp)
jmp    80917c6 <dbus_bus_remove_match+0x596>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
mov    %eax,0x28(%esp)
jmp    8091af1 <dbus_bus_remove_match+0x8c1>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%eax
mov    0x3c(%esp),%esi
mov    %eax,0x28(%esp)
movl   $0x0,0x1c(%esp)
jmp    80917c6 <dbus_bus_remove_match+0x596>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x20(%esp),%eax
mov    %eax,0x28(%esp)
jmp    8091e15 <dbus_bus_remove_match+0xbe5>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0xb0(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8091e15 <dbus_bus_remove_match+0xbe5>
mov    0x4(%esp),%eax
addl   $0x1,(%eax)
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x26170,%ebx
subl   $0x1,(%edi)
jne    8091f10 <dbus_bus_remove_match+0xce0>
mov    0x3c(%edi),%eax
test   %eax,%eax
je     8091eaa <dbus_bus_remove_match+0xc7a>
mov    %eax,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
lea    0x14(%edi),%eax
xor    %ebp,%ebp
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x24(%edi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
lea    0x4(%edi),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x38(%edi),%eax
mov    0x34(%edi),%edx
test   %eax,%eax
mov    %eax,0x8(%esp)
lea    0x8(%edx),%esi
mov    %edx,0xc(%esp)
jle    8091efc <dbus_bus_remove_match+0xccc>
lea    0x0(%esi),%esi
mov    %esi,(%esp)
add    $0x1,%ebp
add    $0x18,%esi
call   807f3d0 <dbus_shutdown+0x6f0>
cmp    0x8(%esp),%ebp
jne    8091ee8 <dbus_bus_remove_match+0xcb8>
mov    0xc(%esp),%eax
mov    %eax,(%esp)
call   807ebb0 <dbus_free>
mov    %edi,(%esp)
call   807ebb0 <dbus_free>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x260d2,%ebx
mov    0x4(%esi),%eax
test   %eax,%eax
jne    8091f48 <dbus_bus_remove_match+0xd18>
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   80808a0 <dbus_shutdown+0x1bc0>
test   %eax,%eax
je     8091f3b <dbus_bus_remove_match+0xd0b>
lea    -0x181f5(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
jne    8091f3b <dbus_bus_remove_match+0xd0b>
lea    -0x17332(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
jne    8091f3b <dbus_bus_remove_match+0xd0b>
lea    -0x1cb29(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
jne    8091f3b <dbus_bus_remove_match+0xd0b>
movl   $0x0,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   8080080 <dbus_shutdown+0x13a0>
test   %eax,%eax
jne    8091f3b <dbus_bus_remove_match+0xd0b>
lea    -0x17a4e(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
jne    8091f3b <dbus_bus_remove_match+0xd0b>
lea    -0x17330(%ebx),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807ff90 <dbus_shutdown+0x12b0>
test   %eax,%eax
sete   %al
movzbl %al,%eax
jmp    8091f3d <dbus_bus_remove_match+0xd0d>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x25fa7,%ebx
sub    $0x4c,%esp
mov    0x60(%esp),%esi
call   80850c0 <dbus_shutdown+0x63e0>
test   %eax,%eax
jne    8092320 <dbus_bus_remove_match+0x10f0>
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8092398 <dbus_bus_remove_match+0x1168>
test   %esi,%esi
je     8092310 <dbus_bus_remove_match+0x10e0>
mov    %esi,(%esp)
call   806a980 <dbus_connection_get_outgoing_unix_fds+0x5e0>
mov    %eax,%edi
test   %edi,%edi
je     80922a0 <dbus_bus_remove_match+0x1070>
mov    %edi,(%esp)
call   806a790 <dbus_connection_get_outgoing_unix_fds+0x3f0>
test   %eax,%eax
jne    8092268 <dbus_bus_remove_match+0x1038>
mov    %edi,0x4(%esp)
mov    %ebp,(%esp)
call   80846d0 <dbus_shutdown+0x59f0>
test   %eax,%eax
je     8092278 <dbus_bus_remove_match+0x1048>
movl   $0x40,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8092278 <dbus_bus_remove_match+0x1048>
lea    0x4(%eax),%eax
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8092300 <dbus_bus_remove_match+0x10d0>
lea    0x14(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80922f4 <dbus_bus_remove_match+0x10c4>
lea    0x24(%esi),%eax
mov    %eax,(%esp)
mov    %eax,0x1c(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80922e8 <dbus_bus_remove_match+0x10b8>
mov    0x64(%esp),%eax
movl   $0x1,(%esi)
movl   $0x0,0x34(%esi)
movl   $0x0,0x38(%esi)
mov    %edi,0x3c(%esi)
mov    %eax,(%esp)
call   8091f20 <dbus_bus_remove_match+0xcf0>
test   %eax,%eax
je     8092370 <dbus_bus_remove_match+0x1140>
mov    0x14(%esp),%edi
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %edi,0x8(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     80922a8 <dbus_bus_remove_match+0x1078>
mov    0x18(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x8(%esp)
mov    %edi,0x14(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     80922a8 <dbus_bus_remove_match+0x1078>
mov    0x64(%esp),%edx
mov    0x18(%esp),%edi
mov    %edx,0x4(%esp)
mov    %edi,(%esp)
call   8081d40 <dbus_shutdown+0x3060>
test   %eax,%eax
je     80922a8 <dbus_bus_remove_match+0x1078>
mov    0x1c(%esp),%edx
movl   $0x0,0xc(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %edx,0x8(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     80922a8 <dbus_bus_remove_match+0x1078>
mov    0x1c(%esp),%edx
lea    -0x1732e(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     80922a8 <dbus_bus_remove_match+0x1078>
lea    0x30(%esp),%edi
mov    %edi,(%esp)
call   806ad70 <dbus_error_init>
mov    0x14(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8082180 <dbus_shutdown+0x34a0>
test   %eax,%eax
jne    8092350 <dbus_bus_remove_match+0x1120>
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
mov    %edi,(%esp)
call   806ad70 <dbus_error_init>
mov    0x14(%esp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8082650 <dbus_shutdown+0x3970>
test   %eax,%eax
jne    8092251 <dbus_bus_remove_match+0x1021>
mov    %edi,(%esp)
call   806ade0 <dbus_error_free>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8081b10 <dbus_shutdown+0x2e30>
test   %eax,%eax
jne    80920b1 <dbus_bus_remove_match+0xe81>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
mov    %edi,(%esp)
call   806a4a0 <dbus_connection_get_outgoing_unix_fds+0x100>
jmp    80922d2 <dbus_bus_remove_match+0x10a2>
xor    %esi,%esi
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
test   %esi,%esi
je     80922d2 <dbus_bus_remove_match+0x10a2>
mov    %esi,(%esp)
call   8091e80 <dbus_bus_remove_match+0xc50>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
jmp    8092278 <dbus_bus_remove_match+0x1048>
lea    0x0(%esi),%esi
call   806a4e0 <dbus_connection_get_outgoing_unix_fds+0x140>
mov    %eax,%edi
jmp    8092099 <dbus_bus_remove_match+0xe69>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x1726c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1f938(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
xor    %edx,%edx
mov    %esi,%eax
mov    %edi,(%esp)
call   80913a0 <dbus_bus_remove_match+0x170>
test   %eax,%eax
jne    809222d <dbus_bus_remove_match+0xffd>
jmp    8092225 <dbus_bus_remove_match+0xff5>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x17240(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    80922ca <dbus_bus_remove_match+0x109a>
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x68(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
xor    %eax,%eax
jmp    80922dc <dbus_bus_remove_match+0x10ac>
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x25c30,%ebx
lea    0x34(%esi),%edi
lea    0x38(%esi),%ebp
mov    %edi,%eax
mov    %ebp,%edx
call   8091330 <dbus_bus_remove_match+0x100>
test   %eax,%eax
je     80923f8 <dbus_bus_remove_match+0x11c8>
mov    (%eax),%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x4(%esi),%eax
mov    %eax,(%esp)
call   8082180 <dbus_shutdown+0x34a0>
test   %eax,%eax
jne    8092418 <dbus_bus_remove_match+0x11e8>
mov    $0xffffffff,%eax
jmp    80923eb <dbus_bus_remove_match+0x11bb>
xchg   %ax,%ax
mov    0x34(%esp),%eax
mov    $0x1,%edx
mov    %eax,(%esp)
mov    %esi,%eax
call   80913a0 <dbus_bus_remove_match+0x170>
test   %eax,%eax
je     809240f <dbus_bus_remove_match+0x11df>
mov    %ebp,%edx
mov    %edi,%eax
call   8091330 <dbus_bus_remove_match+0x100>
test   %eax,%eax
jne    80923e9 <dbus_bus_remove_match+0x11b9>
lea    -0x1721c(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x218bc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   806af90 <dbus_set_error_const>
jmp    809240f <dbus_bus_remove_match+0x11df>
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x25b93,%ebx
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    0x3c(%eax),%eax
mov    %eax,(%esp)
call   806a9d0 <dbus_connection_get_outgoing_unix_fds+0x630>
add    $0x18,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x25b60,%ebx
mov    0x34(%esp),%edi
mov    0x38(%esp),%ebp
mov    0x38(%eax),%esi
mov    0x34(%eax),%ecx
test   %esi,%esi
jle    80924d9 <dbus_bus_remove_match+0x12a9>
cmp    (%ecx),%edi
je     80924e8 <dbus_bus_remove_match+0x12b8>
lea    0x18(%ecx),%eax
xor    %edx,%edx
jmp    80924d2 <dbus_bus_remove_match+0x12a2>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ecx
add    $0x18,%eax
cmp    -0x18(%eax),%edi
je     80924e8 <dbus_bus_remove_match+0x12b8>
add    $0x1,%edx
cmp    %esi,%edx
jne    80924c8 <dbus_bus_remove_match+0x1298>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x4(%ebp),%eax
add    $0x8,%ecx
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,(%esp)
mov    %eax,0xc(%esp)
call   8080600 <dbus_shutdown+0x1920>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x8c,%esp
mov    0x10(%eax),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x25adc,%ebx
mov    0xc(%eax),%eax
mov    %edx,0x14(%esp)
mov    0x4(%eax),%edi
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
movl   $0x0,0xc(%esp)
movl   $0x0,0x8(%esp)
movl   $0x72,0x4(%esp)
sub    %ebp,%edi
mov    %esi,(%esp)
mov    %eax,0x18(%esp)
call   806c5d0 <dbus_set_error+0x14d0>
mov    0x14(%esp),%edx
test   %eax,%eax
je     809258e <dbus_bus_remove_match+0x135e>
lea    0x2d(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
movl   $0x79,0x4(%esp)
mov    %dl,0x2d(%esp)
mov    %eax,(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
jne    80925b8 <dbus_bus_remove_match+0x1388>
mov    0xc(%esi),%edx
mov    0x4(%edx),%eax
mov    %ebp,0x4(%esp)
mov    %edx,(%esp)
sub    %ebp,%eax
sub    %edi,%eax
mov    %eax,0x8(%esp)
call   807fac0 <dbus_shutdown+0xde0>
xor    %eax,%eax
add    $0x8c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movzbl 0xa0(%esp),%eax
movl   $0x1,0x8(%esp)
movb   $0x0,0x2f(%esp)
mov    %al,0x2e(%esp)
lea    0x2e(%esp),%eax
mov    %eax,0x4(%esp)
lea    0x30(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   807f360 <dbus_shutdown+0x680>
lea    0x60(%esp),%eax
mov    %eax,0x1c(%esp)
mov    %eax,0x10(%esp)
mov    0x14(%esp),%eax
movl   $0x0,0xc(%esp)
movl   $0x76,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   806c5d0 <dbus_set_error+0x14d0>
test   %eax,%eax
je     809258e <dbus_bus_remove_match+0x135e>
mov    0xa4(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
je     809258e <dbus_bus_remove_match+0x135e>
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   806c6b0 <dbus_set_error+0x15b0>
test   %eax,%eax
je     809258e <dbus_bus_remove_match+0x135e>
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806c6b0 <dbus_set_error+0x15b0>
test   %eax,%eax
je     809258e <dbus_bus_remove_match+0x135e>
mov    $0x1,%eax
jmp    80925aa <dbus_bus_remove_match+0x137a>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x10,%esp
movzbl 0x38(%eax),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2595f,%ebx
mov    %esi,(%esp)
and    $0x7,%eax
mov    %eax,0x4(%esp)
call   807f720 <dbus_shutdown+0xa40>
mov    0x4(%esi),%edi
mov    %esi,(%esp)
movl   $0x8,0x4(%esp)
call   807f740 <dbus_shutdown+0xa60>
movzbl 0x4(%esi),%edx
mov    %edi,%eax
sub    %eax,%edx
movzbl 0x38(%esi),%eax
and    $0x7,%edx
and    $0xfffffff8,%eax
or     %edx,%eax
mov    %al,0x38(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
movzbl (%eax),%eax
ret
lea    0x0(%esi),%esi
push   %ebp
xor    %edx,%edx
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x258f3,%ebx
sub    $0xac,%esp
lea    0x0(%esi,%eiz,1),%esi
movl   $0xfffffffe,0x10(%edi,%edx,4)
add    $0x1,%edx
cmp    $0xa,%edx
jne    8092720 <dbus_bus_remove_match+0x14f0>
mov    %edi,(%esp)
lea    0x4c(%esp),%ebp
call   80926f0 <dbus_bus_remove_match+0x14c0>
lea    -0x158(%ebx),%edx
mov    %edx,0x8(%esp)
lea    0x30(%esp),%esi
mov    %ebp,(%esp)
movl   $0xc,0x14(%esp)
mov    %edi,0x10(%esp)
movl   $0x6,0xc(%esp)
movsbl %al,%eax
mov    %eax,0x4(%esp)
call   806b7f0 <dbus_set_error+0x6f0>
mov    %ebp,(%esp)
lea    0x68(%esp),%ebp
mov    %esi,0x4(%esp)
call   806ba30 <dbus_set_error+0x930>
jmp    8092788 <dbus_bus_remove_match+0x1558>
nop
mov    %esi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
je     80927f8 <dbus_bus_remove_match+0x15c8>
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
call   806ba30 <dbus_set_error+0x930>
lea    0x2f(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   806b920 <dbus_set_error+0x820>
cmpb   $0x9,0x2f(%esp)
ja     8092780 <dbus_bus_remove_match+0x1550>
mov    %ebp,(%esp)
call   806bb40 <dbus_set_error+0xa40>
lea    0x84(%esp),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x1c(%esp)
call   806ba30 <dbus_set_error+0x930>
mov    0x1c(%esp),%eax
movzbl 0x2f(%esp),%edx
mov    %eax,(%esp)
mov    %edx,0x18(%esp)
call   806b8f0 <dbus_set_error+0x7f0>
mov    0x18(%esp),%edx
mov    %eax,0x10(%edi,%edx,4)
jmp    8092780 <dbus_bus_remove_match+0x1550>
lea    0x0(%esi),%esi
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
mov    %edx,%ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x257e3,%ebx
sub    $0x4c,%esp
mov    %eax,(%esp)
mov    0x60(%esp),%esi
call   80926f0 <dbus_bus_remove_match+0x14c0>
lea    -0x158(%ebx),%edx
mov    %edi,0x10(%esp)
lea    0x24(%esp),%edi
mov    %edx,0x8(%esp)
movl   $0xc,0x14(%esp)
movl   $0x6,0xc(%esp)
movsbl %al,%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
mov    %eax,(%esp)
call   806b7f0 <dbus_set_error+0x6f0>
mov    0x64(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   806ba30 <dbus_set_error+0x930>
jmp    80928ad <dbus_bus_remove_match+0x167d>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806ba30 <dbus_set_error+0x930>
lea    0x23(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806b920 <dbus_set_error+0x820>
movzbl 0x23(%esp),%eax
cmp    %ebp,%eax
je     80928c8 <dbus_bus_remove_match+0x1698>
mov    %esi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
jne    8092880 <dbus_bus_remove_match+0x1650>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x4c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
movzbl 0x1(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x25706,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
mov    %esi,(%esp)
movl   $0x8,0x4(%esp)
movsbl %al,%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   807ddb0 <dbus_watch_handle+0x21f0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
jmp    8092940 <dbus_bus_remove_match+0x1710>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x256b6,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
mov    %esi,(%esp)
movl   $0x0,0xc(%esp)
movl   $0x8,0x4(%esp)
movsbl %al,%eax
mov    %eax,0x8(%esp)
call   807e140 <dbus_watch_handle+0x2580>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
jmp    8092990 <dbus_bus_remove_match+0x1760>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x25666,%ebx
mov    0x20(%esp),%esi
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   807f730 <dbus_shutdown+0xa50>
xor    %eax,%eax
andb   $0xf8,0x38(%esi)
lea    0x0(%esi),%esi
movl   $0xffffffff,0x10(%esi,%eax,4)
add    $0x1,%eax
cmp    $0xa,%eax
jne    80929c0 <dbus_bus_remove_match+0x1790>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x25616,%ebx
mov    0x20(%esp),%esi
movl   $0x20,0x4(%esp)
mov    %esi,(%esp)
call   807f2d0 <dbus_shutdown+0x5f0>
xor    %edx,%edx
test   %eax,%eax
je     8092a17 <dbus_bus_remove_match+0x17e7>
mov    %esi,(%esp)
call   8092990 <dbus_bus_remove_match+0x1760>
mov    $0x1,%edx
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x255d7,%ebx
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x18,%esp
pop    %ebx
ret
push   %ebp
xor    %ebp,%ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x255aa,%ebx
mov    (%edi),%eax
mov    %eax,(%esi)
mov    0x4(%edi),%eax
mov    %eax,0x4(%esi)
mov    0x8(%edi),%eax
mov    %eax,0x8(%esi)
mov    0xc(%edi),%eax
mov    %eax,0xc(%esi)
mov    0x10(%edi),%eax
mov    %eax,0x10(%esi)
mov    0x14(%edi),%eax
mov    %eax,0x14(%esi)
mov    0x18(%edi),%eax
mov    %eax,0x18(%esi)
mov    0x1c(%edi),%eax
mov    %eax,0x1c(%esi)
mov    0x20(%edi),%eax
mov    %eax,0x20(%esi)
mov    0x24(%edi),%eax
mov    %eax,0x24(%esi)
mov    0x28(%edi),%eax
mov    %eax,0x28(%esi)
mov    0x2c(%edi),%eax
mov    %eax,0x2c(%esi)
mov    0x30(%edi),%eax
mov    %eax,0x30(%esi)
mov    0x34(%edi),%eax
mov    %eax,0x34(%esi)
mov    0x38(%edi),%eax
mov    %eax,0x38(%esi)
mov    0x4(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807f2d0 <dbus_shutdown+0x5f0>
test   %eax,%eax
jne    8092ad8 <dbus_bus_remove_match+0x18a8>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0xc(%esp)
mov    %esi,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     8092b18 <dbus_bus_remove_match+0x18e8>
mov    %esi,(%esp)
mov    $0x1,%ebp
movl   $0x0,0x4(%esp)
call   80928f0 <dbus_bus_remove_match+0x16c0>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x1c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    0x90(%esp),%ebp
call   804e750 <sidput@plt+0xbf0>
add    $0x254bd,%ebx
movzbl 0x38(%ebp),%eax
mov    %ebp,(%esp)
not    %eax
and    $0x7,%eax
mov    %eax,0x4(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
xor    %edx,%edx
test   %eax,%eax
je     8092c39 <dbus_bus_remove_match+0x1a09>
mov    0x4(%ebp),%eax
lea    0x30(%esp),%esi
orb    $0x7,0x38(%ebp)
lea    0x2b(%esp),%edi
mov    %ebp,0x10(%esp)
sub    $0x7,%eax
mov    %eax,0x14(%esp)
lea    -0x158(%ebx),%eax
mov    %eax,0x1c(%esp)
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
movl   $0x0,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   806c580 <dbus_set_error+0x1480>
movzbl 0x94(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x79,0x4(%esp)
mov    %esi,(%esp)
mov    %al,0x2b(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
mov    0x98(%esp),%eax
mov    %edi,0x8(%esp)
movl   $0x79,0x4(%esp)
mov    %esi,(%esp)
mov    %al,0x2b(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
mov    %edi,0x8(%esp)
movl   $0x79,0x4(%esp)
mov    %esi,(%esp)
movb   $0x0,0x2b(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
jne    8092c48 <dbus_bus_remove_match+0x1a18>
nop
movzbl 0x38(%ebp),%edx
mov    0x4(%ebp),%eax
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
and    $0x7,%edx
sub    %edx,%eax
mov    %eax,0x8(%esp)
call   807fac0 <dbus_shutdown+0xde0>
mov    %ebp,%eax
call   8092690 <dbus_bus_remove_match+0x1460>
xor    %edx,%edx
add    $0x7c,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x8(%esp)
movl   $0x79,0x4(%esp)
mov    %esi,(%esp)
movb   $0x1,0x2b(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
lea    0x2c(%esp),%edi
mov    %edi,0x8(%esp)
movl   $0x75,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x2c(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
mov    %edi,0x8(%esp)
movl   $0x75,0x4(%esp)
mov    %esi,(%esp)
movl   $0x0,0x2c(%esp)
call   806c7a0 <dbus_set_error+0x16a0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
mov    0x1c(%esp),%eax
lea    0x50(%esp),%edi
mov    %edi,0x10(%esp)
movl   $0x6,0xc(%esp)
movl   $0x61,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   806c5d0 <dbus_set_error+0x14d0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
cmpl   $0x0,0xa0(%esp)
je     8092d0d <dbus_bus_remove_match+0x1add>
lea    0xa0(%esp),%eax
mov    $0x1,%edx
mov    %eax,0x4(%esp)
mov    %edi,%eax
movl   $0x6f,(%esp)
call   8092510 <dbus_bus_remove_match+0x12e0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
cmpl   $0x0,0x9c(%esp)
je     8092d3d <dbus_bus_remove_match+0x1b0d>
lea    0x9c(%esp),%eax
mov    $0x6,%edx
mov    %eax,0x4(%esp)
mov    %edi,%eax
movl   $0x73,(%esp)
call   8092510 <dbus_bus_remove_match+0x12e0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
cmpl   $0x0,0xa4(%esp)
je     8092d6d <dbus_bus_remove_match+0x1b3d>
lea    0xa4(%esp),%eax
mov    $0x2,%edx
mov    %eax,0x4(%esp)
mov    %edi,%eax
movl   $0x73,(%esp)
call   8092510 <dbus_bus_remove_match+0x12e0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
cmpl   $0x0,0xa8(%esp)
je     8092d9d <dbus_bus_remove_match+0x1b6d>
lea    0xa8(%esp),%eax
mov    $0x3,%edx
mov    %eax,0x4(%esp)
mov    %edi,%eax
movl   $0x73,(%esp)
call   8092510 <dbus_bus_remove_match+0x12e0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
cmpl   $0x0,0xac(%esp)
je     8092dcd <dbus_bus_remove_match+0x1b9d>
lea    0xac(%esp),%eax
mov    $0x4,%edx
mov    %eax,0x4(%esp)
mov    %edi,%eax
movl   $0x73,(%esp)
call   8092510 <dbus_bus_remove_match+0x12e0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   806c6b0 <dbus_set_error+0x15b0>
test   %eax,%eax
je     8092c10 <dbus_bus_remove_match+0x19e0>
mov    %ebp,%eax
call   8092690 <dbus_bus_remove_match+0x1460>
mov    $0x1,%edx
jmp    8092c39 <dbus_bus_remove_match+0x1a09>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x58(%esp),%ebp
mov    0x5c(%esp),%esi
mov    0x48(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x251e8,%ebx
mov    0x0(%ebp),%eax
movzbl (%eax,%esi,1),%eax
cmp    $0x42,%eax
mov    %eax,(%edi)
je     8092e48 <dbus_bus_remove_match+0x1c18>
cmp    $0x6c,%eax
je     8092e48 <dbus_bus_remove_match+0x1c18>
mov    0x44(%esp),%eax
movl   $0xd,(%eax)
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x8(%esp)
lea    0xc(%esi),%eax
movl   $0x0,0xc(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   807e140 <dbus_watch_handle+0x2580>
cmp    0x40(%esp),%eax
jbe    8092e80 <dbus_bus_remove_match+0x1c50>
mov    0x44(%esp),%eax
movl   $0x11,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %eax,0x1c(%esp)
add    $0x4,%esi
movl   $0x0,0xc(%esp)
mov    (%edi),%eax
mov    %esi,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
call   807e140 <dbus_watch_handle+0x2580>
mov    0x1c(%esp),%edx
cmp    %eax,0x40(%esp)
jb     8092ee8 <dbus_bus_remove_match+0x1cb8>
lea    0x17(%edx),%ecx
and    $0xfffffff8,%ecx
lea    (%eax,%ecx,1),%esi
cmp    %esi,0x40(%esp)
jb     8092f00 <dbus_bus_remove_match+0x1cd0>
mov    0x54(%esp),%edi
mov    %eax,(%edi)
mov    0x4c(%esp),%eax
mov    %edx,(%eax)
mov    0x50(%esp),%eax
mov    %ecx,(%eax)
mov    0x44(%esp),%eax
movl   $0x0,(%eax)
xor    %eax,%eax
cmp    0x60(%esp),%esi
setbe  %al
jmp    8092e3d <dbus_bus_remove_match+0x1c0d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
movl   $0x12,(%eax)
xor    %eax,%eax
jmp    8092e3d <dbus_bus_remove_match+0x1c0d>
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
movl   $0x13,(%eax)
xor    %eax,%eax
jmp    8092e3d <dbus_bus_remove_match+0x1c0d>
jmp    8092f20 <dbus_bus_remove_match+0x1cf0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x14,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x250d6,%ebx
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
mov    %esi,(%esp)
movl   $0x4,0x4(%esp)
movsbl %al,%eax
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
call   807ddb0 <dbus_watch_handle+0x21f0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
jmp    8092f70 <dbus_bus_remove_match+0x1d40>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc0(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x2507a,%ebx
movzbl 0x38(%esi),%eax
mov    %esi,(%esp)
not    %eax
and    $0x7,%eax
mov    %eax,0x4(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
xor    %edx,%edx
test   %eax,%eax
je     8093062 <dbus_bus_remove_match+0x1e32>
mov    0xc4(%esp),%eax
orb    $0x7,0x38(%esi)
lea    (%esi,%eax,4),%edi
cmpl   $0xffffffff,0x10(%edi)
je     8093110 <dbus_bus_remove_match+0x1ee0>
cmpl   $0xfffffffe,0x10(%edi)
je     8093070 <dbus_bus_remove_match+0x1e40>
mov    0xc4(%esp),%edx
lea    0x28(%esp),%ecx
mov    %esi,%eax
lea    0x44(%esp),%ebp
mov    %ecx,(%esp)
lea    0x60(%esp),%edi
mov    %ebp,0x4(%esp)
mov    %ecx,0x1c(%esp)
call   8092810 <dbus_bus_remove_match+0x15e0>
mov    0x1c(%esp),%ecx
mov    %edi,0x4(%esp)
mov    %ecx,(%esp)
call   806ba30 <dbus_set_error+0x930>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
lea    0x80(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x1c(%esp)
call   806ba30 <dbus_set_error+0x930>
mov    0xcc(%esp),%eax
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   806cfb0 <dbus_set_error+0x1eb0>
xor    %edx,%edx
test   %eax,%eax
je     8093062 <dbus_bus_remove_match+0x1e32>
mov    %esi,%eax
call   8092690 <dbus_bus_remove_match+0x1460>
xor    %edx,%edx
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0xffffffff,0x10(%esi,%edx,4)
add    $0x1,%edx
cmp    $0xa,%edx
jne    8093050 <dbus_bus_remove_match+0x1e20>
mov    $0x1,%dl
add    $0xac,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    %esi,(%esp)
lea    0x60(%esp),%edi
call   80926f0 <dbus_bus_remove_match+0x14c0>
lea    -0x158(%ebx),%edx
mov    %edx,0x8(%esp)
lea    0x80(%esp),%ebp
movl   $0xc,0x14(%esp)
mov    %esi,0x10(%esp)
movl   $0x6,0xc(%esp)
mov    %edi,(%esp)
movsbl %al,%eax
mov    %eax,0x4(%esp)
mov    %edx,0x1c(%esp)
call   806c580 <dbus_set_error+0x1480>
mov    0x1c(%esp),%edx
mov    %ebp,0xc(%esp)
movl   $0x7,0x8(%esp)
mov    %edi,(%esp)
mov    %edx,0x4(%esp)
call   806c640 <dbus_set_error+0x1540>
mov    0xcc(%esp),%eax
mov    0xc4(%esp),%edx
mov    %eax,0x4(%esp)
mov    0xc8(%esp),%eax
mov    %eax,(%esp)
mov    %ebp,%eax
call   8092510 <dbus_bus_remove_match+0x12e0>
xor    %edx,%edx
test   %eax,%eax
je     8093062 <dbus_bus_remove_match+0x1e32>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   806c6b0 <dbus_set_error+0x15b0>
jmp    8093042 <dbus_bus_remove_match+0x1e12>
xchg   %ax,%ax
mov    %esi,%eax
call   8092700 <dbus_bus_remove_match+0x14d0>
jmp    8092fc3 <dbus_bus_remove_match+0x1d93>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x34(%esp),%eax
mov    0x30(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x24ecd,%ebx
lea    (%esi,%eax,4),%edi
mov    0x10(%edi),%eax
cmp    $0xffffffff,%eax
je     80931a0 <dbus_bus_remove_match+0x1f70>
cmp    $0xfffffffe,%eax
je     8093190 <dbus_bus_remove_match+0x1f60>
mov    %esi,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
movl   $0x0,0x14(%esp)
movsbl %al,%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x10(%edi),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   807e7e0 <dbus_watch_handle+0x2c20>
add    $0x20,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x20,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,%eax
call   8092700 <dbus_bus_remove_match+0x14d0>
mov    0x10(%edi),%eax
jmp    8093144 <dbus_bus_remove_match+0x1f14>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
mov    0x10(%esp),%edi
mov    0x14(%esp),%eax
mov    0x18(%esp),%esi
lea    (%edi,%eax,4),%ebp
mov    0x10(%ebp),%ecx
cmp    $0xffffffff,%ecx
je     80931f8 <dbus_bus_remove_match+0x1fc8>
xor    %eax,%eax
cmp    $0xfffffffe,%ecx
je     80931ed <dbus_bus_remove_match+0x1fbd>
test   %esi,%esi
je     80931d7 <dbus_bus_remove_match+0x1fa7>
mov    %edi,(%esi)
mov    0x1c(%esp),%eax
test   %eax,%eax
je     8093208 <dbus_bus_remove_match+0x1fd8>
mov    0x10(%ebp),%eax
mov    0x1c(%esp),%edx
mov    %eax,(%edx)
mov    $0x1,%eax
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%eax
call   8092700 <dbus_bus_remove_match+0x14d0>
mov    0x10(%ebp),%ecx
jmp    80931ca <dbus_bus_remove_match+0x1f9a>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
jmp    80931ed <dbus_bus_remove_match+0x1fbd>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xcc,%esp
mov    0x100(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x24dda,%ebx
mov    0xe0(%esp),%esi
mov    0xf4(%esp),%edi
movl   $0x0,0x10(%esp)
mov    %eax,0x4(%esp)
mov    0xfc(%esp),%eax
mov    %esi,0xc(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   807fc50 <dbus_shutdown+0xf70>
test   %eax,%eax
je     80932a0 <dbus_bus_remove_match+0x2070>
mov    0xe4(%esp),%ecx
test   %ecx,%ecx
jne    80932c0 <dbus_bus_remove_match+0x2090>
movzbl 0x38(%esi),%eax
sub    0xf0(%esp),%edi
and    $0xfffffff8,%eax
and    $0x7,%edi
or     %edi,%eax
mov    %al,0x38(%esi)
mov    0xe8(%esp),%eax
movl   $0x0,(%eax)
mov    $0x1,%eax
add    $0xcc,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0xe8(%esp),%eax
movl   $0xfffffffc,(%eax)
add    $0xcc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0x104(%esp),%eax
lea    -0x158(%ebx),%ebp
movl   $0x0,0x4(%esp)
mov    %ebp,(%esp)
mov    %eax,0x18(%esp)
mov    0x100(%esp),%eax
mov    %eax,0x14(%esp)
mov    0xfc(%esp),%eax
mov    %eax,0x10(%esp)
lea    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0xec(%esp),%eax
mov    %eax,0x8(%esp)
call   806dd50 <dbus_set_error+0x2c50>
test   %eax,%eax
je     8093338 <dbus_bus_remove_match+0x2108>
mov    0xe8(%esp),%ecx
mov    %eax,(%ecx)
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   807f730 <dbus_shutdown+0xa50>
add    $0xcc,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0xf0(%esp),%eax
mov    0x100(%esp),%edx
sub    0xf0(%esp),%edi
lea    0x10(%eax,%edx,1),%eax
sub    $0x10,%edi
mov    %eax,0x4(%esp)
mov    0xfc(%esp),%eax
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8080b40 <dbus_shutdown+0x1e60>
test   %eax,%eax
je     8093400 <dbus_bus_remove_match+0x21d0>
movzbl 0x38(%esi),%eax
and    $0x7,%edi
and    $0xfffffff8,%eax
or     %edi,%eax
mov    %al,0x38(%esi)
mov    0x100(%esp),%eax
lea    0x50(%esp),%edi
mov    %ebp,0x8(%esp)
lea    0x36(%esp),%ebp
movl   $0x0,0xc(%esp)
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
mov    0xfc(%esp),%eax
mov    %eax,0x10(%esp)
mov    0xec(%esp),%eax
mov    %eax,0x4(%esp)
call   806b7f0 <dbus_set_error+0x6f0>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
cmpb   $0x0,0x36(%esp)
jne    8093418 <dbus_bus_remove_match+0x21e8>
mov    0xe8(%esp),%eax
movl   $0xf,(%eax)
jmp    8093317 <dbus_bus_remove_match+0x20e7>
mov    0xe8(%esp),%eax
movl   $0x9,(%eax)
jmp    8093317 <dbus_bus_remove_match+0x20e7>
lea    0x0(%esi),%esi
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
cmpb   $0x1,0x36(%esp)
je     8093459 <dbus_bus_remove_match+0x2229>
mov    0xe8(%esp),%eax
movl   $0xe,(%eax)
jmp    8093317 <dbus_bus_remove_match+0x20e7>
lea    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
lea    0x40(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
mov    0x40(%esp),%edx
test   %edx,%edx
jne    80934a3 <dbus_bus_remove_match+0x2273>
mov    0xe8(%esp),%eax
movl   $0x10,(%eax)
jmp    8093317 <dbus_bus_remove_match+0x20e7>
lea    0x6c(%esp),%eax
mov    %eax,%ebp
mov    %edi,(%esp)
mov    %ebp,%edi
mov    %eax,0x4(%esp)
call   806ba30 <dbus_set_error+0x930>
mov    %esi,0xe0(%esp)
xchg   %ax,%ax
mov    %edi,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
je     80935a9 <dbus_bus_remove_match+0x2379>
lea    0x88(%esp),%esi
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   806ba30 <dbus_set_error+0x930>
lea    0x37(%esp),%eax
mov    %eax,0x4(%esp)
mov    %esi,(%esp)
call   806b920 <dbus_set_error+0x820>
mov    %esi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
movzbl 0x37(%esp),%eax
test   %al,%al
je     8093590 <dbus_bus_remove_match+0x2360>
cmp    $0x9,%al
ja     8093560 <dbus_bus_remove_match+0x2330>
lea    0xa4(%esp),%ebp
mov    %esi,(%esp)
mov    %ebp,0x4(%esp)
call   806ba30 <dbus_set_error+0x930>
movzbl 0x37(%esp),%eax
mov    %ebp,(%esp)
movzbl %al,%esi
mov    %al,0x24(%esp)
call   806b870 <dbus_set_error+0x770>
mov    %eax,%ecx
movzbl -0x171b7(%ebx,%esi,2),%eax
cmp    %eax,%ecx
je     809356d <dbus_bus_remove_match+0x233d>
mov    0xe0(%esp),%esi
mov    $0x15,%edx
mov    0xe8(%esp),%eax
mov    %edx,(%eax)
jmp    8093317 <dbus_bus_remove_match+0x20e7>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
jmp    80934c0 <dbus_bus_remove_match+0x2290>
mov    0xe0(%esp),%eax
lea    (%eax,%esi,4),%edx
mov    0x10(%edx),%eax
test   %eax,%eax
js     8093648 <dbus_bus_remove_match+0x2418>
mov    0xe0(%esp),%esi
mov    $0x18,%edx
jmp    809354d <dbus_bus_remove_match+0x231d>
mov    0xe8(%esp),%eax
mov    0xe0(%esp),%esi
movl   $0x14,(%eax)
jmp    8093317 <dbus_bus_remove_match+0x20e7>
mov    0xe0(%esp),%esi
jmp    80935c0 <dbus_bus_remove_match+0x2390>
lea    0x0(%esi),%esi
add    $0x1,%eax
cmp    $0xa,%eax
je     80935d1 <dbus_bus_remove_match+0x23a1>
cmpl   $0xffffffff,0x10(%esi,%eax,4)
jne    80935b8 <dbus_bus_remove_match+0x2388>
movl   $0xfffffffe,0x10(%esi,%eax,4)
jmp    80935b8 <dbus_bus_remove_match+0x2388>
mov    %esi,(%esp)
call   80928e0 <dbus_bus_remove_match+0x16b0>
cmp    $0x2,%eax
je     8093621 <dbus_bus_remove_match+0x23f1>
xchg   %ax,%ax
jle    8093641 <dbus_bus_remove_match+0x2411>
cmp    $0x3,%eax
je     8093631 <dbus_bus_remove_match+0x2401>
cmp    $0x4,%eax
jne    809360a <dbus_bus_remove_match+0x23da>
cmpl   $0x0,0x18(%esi)
js     80936b8 <dbus_bus_remove_match+0x2488>
cmpl   $0x0,0x14(%esi)
js     80936ae <dbus_bus_remove_match+0x247e>
cmpl   $0x0,0x1c(%esi)
js     809371f <dbus_bus_remove_match+0x24ef>
mov    0xe8(%esp),%eax
movl   $0x0,(%eax)
mov    $0x1,%eax
jmp    8093294 <dbus_bus_remove_match+0x2064>
cmpl   $0x0,0x24(%esi)
jns    809360a <dbus_bus_remove_match+0x23da>
mov    $0x22,%eax
jmp    809330e <dbus_bus_remove_match+0x20de>
cmpl   $0x0,0x20(%esi)
jns    8093621 <dbus_bus_remove_match+0x23f1>
mov    $0x21,%eax
jmp    809330e <dbus_bus_remove_match+0x20de>
sub    $0x1,%eax
je     80935f6 <dbus_bus_remove_match+0x23c6>
jmp    809360a <dbus_bus_remove_match+0x23da>
mov    %ebp,(%esp)
mov    %edx,0x2c(%esp)
mov    %ecx,0x28(%esp)
call   806b8f0 <dbus_set_error+0x7f0>
mov    0x28(%esp),%ecx
mov    0x2c(%esp),%edx
movl   $0x0,0x4c(%esp)
movl   $0x0,0x44(%esp)
cmp    $0x75,%ecx
movl   $0xffffffff,0x48(%esp)
mov    %eax,0x10(%edx)
je     80936f4 <dbus_bus_remove_match+0x24c4>
cmp    $0x73,%ecx
je     80936c2 <dbus_bus_remove_match+0x2492>
and    $0xfffffff7,%ecx
or     $0xffffffff,%ebp
cmp    $0x67,%ecx
je     80936c2 <dbus_bus_remove_match+0x2492>
movzbl 0x24(%esp),%eax
sub    $0x1,%eax
cmp    $0x6,%al
ja     8093560 <dbus_bus_remove_match+0x2330>
movzbl %al,%eax
mov    -0x171d4(%ebx,%eax,4),%eax
add    %ebx,%eax
jmp    *%eax
mov    $0x1e,%eax
jmp    809330e <dbus_bus_remove_match+0x20de>
mov    $0x1f,%eax
jmp    809330e <dbus_bus_remove_match+0x20de>
lea    0x48(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x44(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xe0(%esp),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80931b0 <dbus_bus_remove_match+0x1f80>
mov    0x48(%esp),%eax
lea    0x3(%eax),%ebp
and    $0xfffffffc,%ebp
add    $0x4,%ebp
jmp    8093690 <dbus_bus_remove_match+0x2460>
lea    0x4c(%esp),%eax
or     $0xffffffff,%ebp
mov    %eax,0xc(%esp)
mov    0xe0(%esp),%eax
movl   $0x75,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8093120 <dbus_bus_remove_match+0x1ef0>
jmp    8093690 <dbus_bus_remove_match+0x2460>
mov    $0x20,%eax
jmp    809330e <dbus_bus_remove_match+0x20de>
lea    -0x49e70(%ebx),%esi
mov    $0x19,%edx
mov    0xe0(%esp),%eax
mov    %edx,0x24(%esp)
mov    %eax,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
movl   $0x0,0xc(%esp)
movsbl %al,%eax
mov    %eax,0x8(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   807e140 <dbus_watch_handle+0x2580>
mov    %ebp,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x44(%esp),%eax
mov    %eax,(%esp)
call   *%esi
mov    0x24(%esp),%edx
test   %eax,%eax
jne    8093560 <dbus_bus_remove_match+0x2330>
mov    0xe0(%esp),%esi
jmp    809354d <dbus_bus_remove_match+0x231d>
mov    0x44(%esp),%eax
mov    %ebp,0x10(%esp)
movl   $0x1c,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x178(%ebx),%eax
mov    %eax,(%esp)
call   80803f0 <dbus_shutdown+0x1710>
test   %eax,%eax
je     8093560 <dbus_bus_remove_match+0x2330>
mov    0xe0(%esp),%esi
mov    $0x17,%edx
jmp    809354d <dbus_bus_remove_match+0x231d>
lea    -0x49e70(%ebx),%esi
mov    $0x1d,%edx
jmp    8093734 <dbus_bus_remove_match+0x2504>
cmpl   $0x0,0x4c(%esp)
jne    8093560 <dbus_bus_remove_match+0x2330>
mov    0xe0(%esp),%esi
mov    $0x10,%edx
jmp    809354d <dbus_bus_remove_match+0x231d>
lea    -0x49ea0(%ebx),%esi
mov    $0x1c,%edx
jmp    8093734 <dbus_bus_remove_match+0x2504>
lea    -0x49f30(%ebx),%esi
mov    $0x1b,%edx
jmp    8093734 <dbus_bus_remove_match+0x2504>
mov    0x44(%esp),%eax
mov    %ebp,0x10(%esp)
movl   $0x1b,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,0xc(%esp)
lea    -0x168(%ebx),%eax
mov    %eax,(%esp)
call   80803f0 <dbus_shutdown+0x1710>
test   %eax,%eax
je     8093861 <dbus_bus_remove_match+0x2631>
mov    0xe0(%esp),%esi
mov    $0x16,%edx
jmp    809354d <dbus_bus_remove_match+0x231d>
lea    -0x49ff0(%ebx),%esi
mov    $0x1a,%edx
jmp    8093734 <dbus_bus_remove_match+0x2504>
jmp    8093880 <dbus_bus_remove_match+0x2650>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x70(%esp),%esi
mov    0x74(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x2476c,%ebx
cmpl   $0xfffffffe,0x10(%esi,%edx,4)
je     80938bb <dbus_bus_remove_match+0x268b>
lea    0x34(%esp),%ebp
mov    %esi,%eax
lea    0x18(%esp),%edi
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8092810 <dbus_bus_remove_match+0x15e0>
test   %eax,%eax
jne    80938c8 <dbus_bus_remove_match+0x2698>
add    $0x5c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movzbl 0x38(%esi),%eax
mov    %esi,(%esp)
not    %eax
and    $0x7,%eax
mov    %eax,0x4(%esp)
call   807f6f0 <dbus_shutdown+0xa10>
test   %eax,%eax
jne    80938f0 <dbus_bus_remove_match+0x26c0>
add    $0x5c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
orb    $0x7,0x38(%esi)
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   806cf50 <dbus_set_error+0x1e50>
test   %eax,%eax
je     80938e1 <dbus_bus_remove_match+0x26b1>
mov    %esi,%eax
call   8092690 <dbus_bus_remove_match+0x1460>
xor    %eax,%eax
lea    0x0(%esi),%esi
movl   $0xffffffff,0x10(%esi,%eax,4)
add    $0x1,%eax
cmp    $0xa,%eax
jne    8093910 <dbus_bus_remove_match+0x26e0>
jmp    80938bb <dbus_bus_remove_match+0x268b>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x246c7,%ebx
mov    0x20(%esp),%eax
movl   $0x1,0x8(%esp)
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
mov    0x28(%esp),%edx
test   %edx,%edx
jne    8093978 <dbus_bus_remove_match+0x2748>
movzbl 0x24(%esp),%edx
not    %edx
and    %dl,(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x24(%esp),%ecx
or     %cl,(%eax)
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    (%eax),%eax
movzbl 0x2(%eax),%eax
test   %eax,0x8(%esp)
setne  %al
movzbl %al,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x24645,%ebx
mov    0x30(%esp),%edi
mov    0x34(%esp),%esi
mov    %edi,(%esp)
call   80926f0 <dbus_bus_remove_match+0x14c0>
movsbl %al,%eax
cmp    %esi,%eax
je     8093a08 <dbus_bus_remove_match+0x27d8>
mov    %eax,0x8(%esp)
lea    -0x158(%ebx),%eax
mov    %eax,(%esp)
movl   $0x0,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x0,0x4(%esp)
call   8093d40 <dbus_bus_remove_match+0x2b10>
mov    (%edi),%eax
mov    %esi,%edx
mov    %dl,(%eax)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x245e3,%ebx
sub    $0x5c,%esp
lea    0x34(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
je     8093adc <dbus_bus_remove_match+0x28ac>
xchg   %ax,%ax
lea    -0x61(%eax),%edx
cmp    $0x18,%edx
ja     8093ac0 <dbus_bus_remove_match+0x2890>
mov    -0x17160(%ebx,%edx,4),%ecx
lea    (%ecx,%ebx,1),%edx
jmp    *%edx
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,(%esp)
call   806b8c0 <dbus_set_error+0x7c0>
mov    %eax,(%esp)
mov    %eax,0x14(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    %eax,%ecx
mov    %eax,%edx
mov    0x78(%esp),%eax
neg    %edx
mov    %ecx,0x18(%esp)
lea    -0x1(%eax,%ecx,1),%eax
and    %eax,%edx
mov    0x14(%esp),%eax
mov    %edx,0x78(%esp)
mov    %eax,(%esp)
call   8077e60 <dbus_type_is_fixed>
test   %eax,%eax
je     8093cca <dbus_bus_remove_match+0x2a9a>
mov    0x18(%esp),%ecx
cmp    $0x1,%ecx
jle    8093abb <dbus_bus_remove_match+0x288b>
mov    %ebp,%eax
xor    %edx,%edx
div    %ecx
mov    %ecx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x78(%esp),%eax
mov    %eax,(%esp)
call   807e3c0 <dbus_watch_handle+0x2800>
add    %ebp,0x78(%esp)
nop
test   %edi,%edi
je     8093adc <dbus_bus_remove_match+0x28ac>
mov    %esi,(%esp)
call   806bb40 <dbus_set_error+0xa40>
mov    %esi,(%esp)
call   806b870 <dbus_set_error+0x770>
test   %eax,%eax
jne    8093a40 <dbus_bus_remove_match+0x2810>
mov    0x7c(%esp),%eax
test   %eax,%eax
je     8093aee <dbus_bus_remove_match+0x28be>
mov    0x78(%esp),%eax
mov    0x7c(%esp),%edi
mov    %eax,(%edi)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
mov    0x78(%esp),%edx
lea    0x24(%esp),%ebp
movzbl (%edx),%eax
add    $0x1,%edx
mov    %edx,0x4(%esp)
mov    %ebp,(%esp)
mov    %edx,0x78(%esp)
mov    %eax,0x8(%esp)
mov    %eax,0x14(%esp)
call   807f360 <dbus_shutdown+0x680>
mov    0x14(%esp),%eax
mov    %ebp,(%esp)
movl   $0x0,0x4(%esp)
add    $0x1,%eax
add    %eax,0x78(%esp)
call   807eaf0 <dbus_watch_handle+0x2f30>
mov    %eax,(%esp)
call   807e660 <dbus_watch_handle+0x2aa0>
mov    0x78(%esp),%ecx
mov    %ebp,0x4(%esp)
lea    0x78(%esp),%ebp
movl   $0x0,0x8(%esp)
mov    %eax,%edx
neg    %edx
lea    -0x1(%ecx,%eax,1),%eax
and    %eax,%edx
mov    0x10(%esp),%eax
mov    %edx,0x78(%esp)
mov    %eax,(%esp)
call   806b830 <dbus_set_error+0x730>
mov    0x74(%esp),%ecx
xor    %edx,%edx
mov    0x78(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    0x70(%esp),%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
mov    %ecx,(%esp)
call   8093a10 <dbus_bus_remove_match+0x27e0>
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
add    $0x1,%eax
and    $0xfffffffe,%eax
mov    %eax,0x78(%esp)
movzwl (%eax),%edx
ror    $0x8,%dx
mov    %dx,(%eax)
addl   $0x2,0x78(%esp)
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
lea    0x0(%esi),%esi
mov    0x78(%esp),%eax
movzbl (%eax),%edx
lea    0x2(%eax,%edx,1),%eax
mov    %eax,0x78(%esp)
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
lea    0x0(%esi,%eiz,1),%esi
mov    0x78(%esp),%eax
lea    0x78(%esp),%ebp
mov    %esi,(%esp)
add    $0x7,%eax
and    $0xfffffff8,%eax
mov    %eax,0x78(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   806ba30 <dbus_set_error+0x930>
mov    0x74(%esp),%ecx
mov    $0x1,%edx
mov    0x78(%esp),%eax
mov    %ebp,0xc(%esp)
mov    %ecx,0x4(%esp)
mov    0x70(%esp),%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
mov    %ecx,(%esp)
call   8093a10 <dbus_bus_remove_match+0x27e0>
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
mov    0x78(%esp),%eax
add    $0x7,%eax
and    $0xfffffff8,%eax
mov    %eax,0x78(%esp)
mov    0x4(%eax),%ecx
mov    (%eax),%edx
bswap  %ecx
mov    %ecx,(%eax)
bswap  %edx
addl   $0x8,0x78(%esp)
mov    %edx,0x4(%eax)
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
xchg   %ax,%ax
mov    0x78(%esp),%eax
add    $0x3,%eax
and    $0xfffffffc,%eax
mov    %eax,0x78(%esp)
mov    (%eax),%edx
bswap  %edx
mov    %edx,(%eax)
addl   $0x4,0x78(%esp)
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
xchg   %ax,%ax
mov    0x78(%esp),%ecx
lea    0x3(%ecx),%edx
and    $0xfffffffc,%edx
mov    %edx,0x78(%esp)
mov    (%edx),%ebp
cmpl   $0x6c,0x70(%esp)
mov    %ebp,%ecx
bswap  %ecx
je     8093c97 <dbus_bus_remove_match+0x2a67>
bswap  %ebp
mov    %ebp,%ecx
mov    %ecx,(%edx)
mov    0x78(%esp),%ecx
cmp    $0x61,%eax
lea    0x4(%ecx),%edx
mov    %edx,0x78(%esp)
je     8093a58 <dbus_bus_remove_match+0x2828>
lea    0x1(%edx,%ebp,1),%eax
mov    %eax,0x78(%esp)
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
lea    0x0(%esi),%esi
addl   $0x1,0x78(%esp)
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
mov    0x10(%esp),%eax
add    0x78(%esp),%ebp
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,0x14(%esp)
lea    0x78(%esp),%ebp
call   806ba30 <dbus_set_error+0x930>
mov    0x78(%esp),%eax
cmp    %eax,0x14(%esp)
jbe    8093ac0 <dbus_bus_remove_match+0x2890>
mov    %esi,0x18(%esp)
mov    0x70(%esp),%esi
mov    %edi,0x1c(%esp)
mov    0x74(%esp),%edi
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
xor    %edx,%edx
mov    %ebp,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8093a10 <dbus_bus_remove_match+0x27e0>
mov    0x78(%esp),%eax
cmp    %eax,0x14(%esp)
ja     8093d08 <dbus_bus_remove_match+0x2ad8>
mov    0x18(%esp),%esi
mov    0x1c(%esp),%edi
jmp    8093ac0 <dbus_bus_remove_match+0x2890>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x58(%esp),%esi
mov    0x5c(%esp),%edi
call   804e750 <sidput@plt+0xbf0>
add    $0x242ac,%ebx
cmp    %edi,%esi
je     8093db5 <dbus_bus_remove_match+0x2b85>
mov    0x54(%esp),%eax
lea    0x14(%esp),%ebp
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x50(%esp),%eax
mov    %eax,0x4(%esp)
call   806b830 <dbus_set_error+0x730>
mov    0x64(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   807f4a0 <dbus_shutdown+0x7c0>
mov    $0x1,%edx
movl   $0x0,0xc(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    %ebp,%eax
call   8093a10 <dbus_bus_remove_match+0x27e0>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x24237,%ebx
sub    $0x4c,%esp
mov    %eax,0x18(%esp)
lea    0x20(%esp),%eax
mov    %eax,(%esp)
lea    0x30(%esp),%edi
mov    %edx,0x1c(%esp)
mov    %eax,0x14(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8093e98 <dbus_bus_remove_match+0x2c68>
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8093e98 <dbus_bus_remove_match+0x2c68>
mov    $0x10,%esi
jmp    8093e3a <dbus_bus_remove_match+0x2c0a>
lea    0x0(%esi),%esi
test   %eax,%eax
je     8093f30 <dbus_bus_remove_match+0x2d00>
mov    0x30(%esp),%eax
sub    %ebp,%esi
mov    %ebp,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   807fa10 <dbus_shutdown+0xd30>
test   %esi,%esi
je     8093ef0 <dbus_bus_remove_match+0x2cc0>
mov    0x18(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8081990 <dbus_shutdown+0x2cb0>
cmp    $0xffffffff,%eax
mov    %eax,%ebp
jne    8093e10 <dbus_bus_remove_match+0x2be0>
call   8087b50 <dbus_shutdown+0x8e70>
test   %eax,%eax
jne    8093e32 <dbus_bus_remove_match+0x2c02>
xchg   %ax,%ax
call   80847c0 <dbus_shutdown+0x5ae0>
test   %eax,%eax
jne    8093ed8 <dbus_bus_remove_match+0x2ca8>
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x170fc(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9e4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8093eb6 <dbus_bus_remove_match+0x2c86>
nop
lea    0x0(%esi,%eiz,1),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x64,(%esp)
call   8081df0 <dbus_shutdown+0x3110>
test   %esi,%esi
jne    8093e3a <dbus_bus_remove_match+0x2c0a>
lea    0x0(%esi,%eiz,1),%esi
mov    0x1c(%esp),%eax
movl   $0x10,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8080390 <dbus_shutdown+0x16b0>
test   %eax,%eax
mov    %eax,%esi
je     8093f76 <dbus_bus_remove_match+0x2d46>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x4c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x170fc(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x1c9e4(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x4c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x18(%esp),%eax
mov    %eax,0xc(%esp)
lea    -0x170d0(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x20f84(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8093f12 <dbus_bus_remove_match+0x2ce2>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2403e,%ebx
mov    0x60(%esp),%ebp
movb   $0x0,0x3b(%esp)
mov    %eax,0x1c(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x18(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x3c(%esp)
xor    %eax,%eax
lea    -0x1705f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x0(%ebp),%eax
mov    %eax,(%esp)
call   804d6e0 <fopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     8094061 <dbus_bus_remove_match+0x2e31>
lea    0x2b(%esp),%edx
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
movl   $0x10,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,0x14(%esp)
call   804d420 <fread@plt>
mov    %esi,(%esp)
mov    %eax,0x10(%esp)
call   804d1b0 <fclose@plt>
mov    0x10(%esp),%ecx
mov    0x14(%esp),%edx
test   %ecx,%ecx
je     8094078 <dbus_bus_remove_match+0x2e48>
mov    0x1c(%esp),%eax
mov    $0x1,%edi
movl   $0x10,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   807fa10 <dbus_shutdown+0xd30>
test   %eax,%eax
je     80940a8 <dbus_bus_remove_match+0x2e78>
mov    %edi,%eax
mov    0x3c(%esp),%edi
xor    %gs:0x14,%edi
jne    80940cb <dbus_bus_remove_match+0x2e9b>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x0(%ebp),%eax
mov    %eax,0xc(%esp)
lea    -0x170a4(%ebx),%eax
mov    %eax,0x8(%esp)
lea    -0x20b44(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8094061 <dbus_bus_remove_match+0x2e31>
lea    0x0(%esi,%eiz,1),%esi
lea    -0x21ca0(%ebx),%eax
xor    %di,%di
mov    %eax,0x4(%esp)
mov    0x18(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8094061 <dbus_bus_remove_match+0x2e31>
call   80962d0 <dbus_bus_remove_match+0x50a0>
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x23f1e,%ebx
mov    0x4(%esi),%eax
test   %eax,%eax
jne    8094100 <dbus_bus_remove_match+0x2ed0>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x20(%esp),%ebp
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80941b0 <dbus_bus_remove_match+0x2f80>
mov    0x58(%esp),%eax
mov    %ebp,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8093fb0 <dbus_bus_remove_match+0x2d80>
test   %eax,%eax
je     80941a0 <dbus_bus_remove_match+0x2f70>
mov    0x24(%esp),%eax
mov    $0x1,%edi
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x50(%esp),%eax
mov    %eax,(%esp)
call   8081570 <dbus_shutdown+0x2890>
mov    %ebp,(%esp)
mov    %eax,%esi
call   807f3d0 <dbus_shutdown+0x6f0>
cmp    $0xffffffff,%esi
jne    80940ef <dbus_bus_remove_match+0x2ebf>
call   8087be0 <dbus_shutdown+0x8f00>
xor    %di,%di
mov    %eax,%esi
call   8087940 <dbus_shutdown+0x8c60>
mov    0x50(%esp),%ecx
lea    -0x17080(%ebx),%edx
mov    %esi,0x10(%esp)
mov    %edx,0x8(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    80940ef <dbus_bus_remove_match+0x2ebf>
lea    0x0(%esi),%esi
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    80940ef <dbus_bus_remove_match+0x2ebf>
lea    0x0(%esi),%esi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x58(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
add    $0x3c,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x23e17,%ebx
sub    $0x4c,%esp
lea    0x20(%esp),%esi
mov    0x60(%esp),%ebp
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     809421a <dbus_bus_remove_match+0x2fea>
movl   $0x8,0x4(%esp)
mov    %esi,(%esp)
call   8087830 <dbus_shutdown+0x8b50>
test   %eax,%eax
jne    8094270 <dbus_bus_remove_match+0x3040>
lea    0x10(%ebp),%edi
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   80847f0 <dbus_shutdown+0x5b10>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %ebp,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
xor    %eax,%eax
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x10(%ebp),%edi
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     809421d <dbus_bus_remove_match+0x2fed>
call   8084320 <dbus_shutdown+0x5640>
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     809421d <dbus_bus_remove_match+0x2fed>
lea    -0x1705c(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     809421d <dbus_bus_remove_match+0x2fed>
mov    0x20(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     809421d <dbus_bus_remove_match+0x2fed>
mov    %ebp,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     809421d <dbus_bus_remove_match+0x2fed>
movl   $0x0,0xc(%esp)
mov    %ebp,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   807faf0 <dbus_shutdown+0xe10>
test   %eax,%eax
je     809421d <dbus_bus_remove_match+0x2fed>
lea    -0x1704f(%ebx),%eax
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   807f7c0 <dbus_shutdown+0xae0>
test   %eax,%eax
je     809421d <dbus_bus_remove_match+0x2fed>
mov    0x64(%esp),%eax
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8082650 <dbus_shutdown+0x3970>
test   %eax,%eax
je     809423b <dbus_bus_remove_match+0x300b>
lea    0x30(%esp),%eax
mov    %eax,(%esp)
mov    %eax,0x18(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     80943a5 <dbus_bus_remove_match+0x3175>
mov    0x18(%esp),%eax
movl   $0x10,0x4(%esp)
mov    %eax,(%esp)
call   8082c30 <dbus_shutdown+0x3f50>
test   %eax,%eax
je     80943d7 <dbus_bus_remove_match+0x31a7>
mov    0x64(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %ebp,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   8080e60 <dbus_shutdown+0x2180>
mov    %eax,0x1c(%esp)
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    0x1c(%esp),%eax
test   %eax,%eax
jne    80943c5 <dbus_bus_remove_match+0x3195>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   80847f0 <dbus_shutdown+0x5b10>
jmp    809423b <dbus_bus_remove_match+0x300b>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
jmp    8094390 <dbus_bus_remove_match+0x3160>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%eax
jmp    8094265 <dbus_bus_remove_match+0x3035>
lea    -0x21ca0(%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x64(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   806b100 <dbus_set_error>
mov    0x18(%esp),%eax
mov    %eax,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
jmp    8094390 <dbus_bus_remove_match+0x3160>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x23be1,%ebx
mov    0x24(%esp),%eax
lea    0x10(%esi),%edi
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   80847f0 <dbus_shutdown+0x5b10>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    %esi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
add    $0x10,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x23b88,%ebx
sub    $0x20,%esp
lea    0x10(%esp),%esi
mov    %esi,(%esp)
call   807f330 <dbus_shutdown+0x650>
test   %eax,%eax
je     8094508 <dbus_bus_remove_match+0x32d8>
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8094460 <dbus_bus_remove_match+0x3230>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8093fb0 <dbus_bus_remove_match+0x2d80>
cmp    $0x1,%eax
jne    8094508 <dbus_bus_remove_match+0x32d8>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80829f0 <dbus_shutdown+0x3d10>
mov    %eax,(%esp)
mov    %eax,%edi
call   80818a0 <dbus_shutdown+0x2bc0>
test   %eax,%eax
je     80944e0 <dbus_bus_remove_match+0x32b0>
add    $0x20,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,(%esp)
mov    %esi,%edx
mov    %edi,%eax
call   8093dc0 <dbus_bus_remove_match+0x2b90>
cmp    $0x1,%eax
je     80944d0 <dbus_bus_remove_match+0x32a0>
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
call   8082c00 <dbus_shutdown+0x3f20>
lea    0x0(%esi),%esi
add    $0x20,%esp
mov    $0xffffffff,%edi
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x23ad5,%ebx
mov    0x24(%esp),%eax
mov    0x20(%esp),%esi
mov    0x28(%esp),%edi
mov    %eax,(%esp)
call   8094460 <dbus_bus_remove_match+0x3230>
mov    %edi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
mov    %eax,%edx
mov    %esi,%eax
pop    %esi
pop    %edi
jmp    8093dc0 <dbus_bus_remove_match+0x2b90>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0xa0,%esp
mov    0x4(%eax),%ecx
mov    0x10(%eax),%ebp
mov    (%eax),%esi
mov    %eax,0x5c(%esp)
mov    %ecx,0x48(%esp)
mov    0x8(%eax),%ecx
mov    %ebp,0x50(%esp)
mov    (%edx),%ebp
mov    %ecx,%edi
mov    0xc(%eax),%ecx
mov    %ebp,%eax
mov    0x4(%edx),%ebp
mov    %ecx,0x40(%esp)
mov    0x10(%edx),%ecx
mov    %ebp,0x4(%esp)
mov    0x8(%edx),%ebp
mov    %ecx,0x10(%esp)
mov    0x18(%edx),%ecx
mov    %ebp,0x8(%esp)
mov    0xc(%edx),%ebp
mov    %ecx,0x18(%esp)
mov    0x24(%edx),%ecx
mov    %ebp,0xc(%esp)
mov    0x14(%edx),%ebp
mov    %ecx,0x24(%esp)
mov    %ebp,0x14(%esp)
mov    0x1c(%edx),%ebp
mov    %ebp,0x1c(%esp)
mov    0x20(%edx),%ebp
mov    %ebp,0x20(%esp)
mov    0x28(%edx),%ebp
mov    %ebp,0x28(%esp)
mov    0x2c(%edx),%ecx
mov    0x30(%edx),%ebp
mov    %eax,(%esp)
mov    %ecx,0x2c(%esp)
mov    0x34(%edx),%ecx
mov    %ebp,0x30(%esp)
mov    0x38(%edx),%ebp
mov    %ecx,0x34(%esp)
mov    0x3c(%edx),%ecx
mov    %ebp,0x38(%esp)
mov    %esi,%ebp
mov    %ebp,0x58(%esp)
mov    %ecx,0x3c(%esp)
mov    0x50(%esp),%ecx
lea    0x5a827999(%ecx,%eax,1),%edx
mov    %esi,%ecx
mov    0x40(%esp),%esi
ror    $0x1b,%ecx
add    %ecx,%edx
mov    %edi,%ecx
mov    %ecx,0x4c(%esp)
xor    %edi,%esi
mov    0x48(%esp),%edi
mov    %esi,%eax
mov    0x40(%esp),%esi
and    %edi,%eax
xor    %esi,%eax
add    %eax,%edx
mov    0x4(%esp),%eax
ror    $0x2,%edi
xor    %edi,%ecx
lea    0x5a827999(%esi,%eax,1),%esi
mov    %ecx,%eax
and    %ebp,%eax
mov    %edx,%ecx
xor    0x4c(%esp),%eax
ror    $0x1b,%ecx
ror    $0x2,%ebp
add    %eax,%esi
mov    0x8(%esp),%eax
add    %ecx,%esi
mov    0x4c(%esp),%ecx
lea    0x5a827999(%ecx,%eax,1),%ecx
mov    %ebp,%eax
xor    %edi,%eax
and    %edx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    %esi,%ecx
ror    $0x1b,%ecx
add    %eax,%ecx
mov    0xc(%esp),%eax
ror    $0x2,%edx
lea    0x5a827999(%edi,%eax,1),%edi
mov    %edx,%eax
xor    %ebp,%eax
and    %esi,%eax
xor    %ebp,%eax
add    %edi,%eax
mov    %ecx,%edi
ror    $0x1b,%edi
add    %eax,%edi
mov    0x10(%esp),%eax
ror    $0x2,%esi
lea    0x5a827999(%ebp,%eax,1),%ebp
mov    %esi,%eax
xor    %edx,%eax
and    %ecx,%eax
xor    %edx,%eax
add    %ebp,%eax
mov    %edi,%ebp
ror    $0x1b,%ebp
add    %eax,%ebp
mov    0x14(%esp),%eax
ror    $0x2,%ecx
lea    0x5a827999(%edx,%eax,1),%edx
mov    %ecx,%eax
xor    %esi,%eax
and    %edi,%eax
xor    %esi,%eax
add    %edx,%eax
mov    %ebp,%edx
ror    $0x1b,%edx
add    %eax,%edx
mov    0x18(%esp),%eax
ror    $0x2,%edi
lea    0x5a827999(%esi,%eax,1),%esi
mov    %edi,%eax
xor    %ecx,%eax
and    %ebp,%eax
xor    %ecx,%eax
add    %esi,%eax
mov    %edx,%esi
ror    $0x1b,%esi
add    %eax,%esi
mov    0x1c(%esp),%eax
ror    $0x2,%ebp
lea    0x5a827999(%ecx,%eax,1),%ecx
mov    %ebp,%eax
xor    %edi,%eax
and    %edx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    %esi,%ecx
ror    $0x1b,%ecx
add    %eax,%ecx
mov    0x20(%esp),%eax
ror    $0x2,%edx
lea    0x5a827999(%edi,%eax,1),%edi
mov    %edx,%eax
xor    %ebp,%eax
and    %esi,%eax
xor    %ebp,%eax
add    %edi,%eax
mov    %ecx,%edi
ror    $0x1b,%edi
add    %eax,%edi
mov    0x24(%esp),%eax
ror    $0x2,%esi
lea    0x5a827999(%ebp,%eax,1),%ebp
mov    %esi,%eax
xor    %edx,%eax
and    %ecx,%eax
xor    %edx,%eax
add    %ebp,%eax
mov    %edi,%ebp
ror    $0x1b,%ebp
add    %eax,%ebp
mov    0x28(%esp),%eax
ror    $0x2,%ecx
lea    0x5a827999(%edx,%eax,1),%edx
mov    %ecx,%eax
xor    %esi,%eax
and    %edi,%eax
xor    %esi,%eax
add    %edx,%eax
mov    %ebp,%edx
ror    $0x1b,%edx
add    %eax,%edx
mov    0x2c(%esp),%eax
ror    $0x2,%edi
lea    0x5a827999(%esi,%eax,1),%esi
mov    %edi,%eax
xor    %ecx,%eax
and    %ebp,%eax
xor    %ecx,%eax
add    %esi,%eax
mov    %edx,%esi
ror    $0x1b,%esi
add    %eax,%esi
mov    0x30(%esp),%eax
ror    $0x2,%ebp
lea    0x5a827999(%ecx,%eax,1),%ecx
mov    %ebp,%eax
xor    %edi,%eax
and    %edx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    %esi,%ecx
ror    $0x1b,%ecx
add    %eax,%ecx
mov    0x34(%esp),%eax
ror    $0x2,%edx
lea    0x5a827999(%edi,%eax,1),%edi
mov    %edx,%eax
xor    %ebp,%eax
and    %esi,%eax
xor    %ebp,%eax
add    %edi,%eax
mov    %ecx,%edi
ror    $0x1b,%edi
add    %eax,%edi
mov    0x38(%esp),%eax
ror    $0x2,%esi
lea    0x5a827999(%ebp,%eax,1),%ebp
mov    %esi,%eax
xor    %edx,%eax
and    %ecx,%eax
xor    %edx,%eax
add    %ebp,%eax
mov    %edi,%ebp
ror    $0x1b,%ebp
add    %eax,%ebp
mov    0x3c(%esp),%eax
ror    $0x2,%ecx
lea    0x5a827999(%edx,%eax,1),%edx
mov    %ecx,%eax
xor    %esi,%eax
and    %edi,%eax
xor    %esi,%eax
add    %edx,%eax
mov    %ebp,%edx
ror    $0x1b,%edx
add    %eax,%edx
mov    (%esp),%eax
xor    0x8(%esp),%eax
ror    $0x2,%edi
mov    %eax,(%esp)
mov    0x20(%esp),%eax
xor    %eax,(%esp)
mov    0x34(%esp),%eax
xor    %eax,(%esp)
rorl   $0x1f,(%esp)
mov    (%esp),%eax
lea    0x5a827999(%esi,%eax,1),%esi
mov    %edi,%eax
xor    %ecx,%eax
and    %ebp,%eax
xor    %ecx,%eax
add    %esi,%eax
mov    %edx,%esi
ror    $0x1b,%esi
add    %eax,%esi
mov    0x4(%esp),%eax
xor    0xc(%esp),%eax
ror    $0x2,%ebp
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
xor    %eax,0x4(%esp)
mov    0x38(%esp),%eax
xor    %eax,0x4(%esp)
rorl   $0x1f,0x4(%esp)
mov    0x4(%esp),%eax
lea    0x5a827999(%ecx,%eax,1),%ecx
mov    %ebp,%eax
xor    %edi,%eax
and    %edx,%eax
xor    %edi,%eax
add    %ecx,%eax
mov    %esi,%ecx
ror    $0x1b,%ecx
add    %eax,%ecx
mov    0x8(%esp),%eax
xor    0x10(%esp),%eax
ror    $0x2,%edx
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
xor    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
xor    %eax,0x8(%esp)
rorl   $0x1f,0x8(%esp)
mov    0x8(%esp),%eax
lea    0x5a827999(%edi,%eax,1),%edi
mov    %edx,%eax
xor    %ebp,%eax
and    %esi,%eax
xor    %ebp,%eax
add    %edi,%eax
mov    %ecx,%edi
ror    $0x1b,%edi
add    %eax,%edi
mov    0xc(%esp),%eax
xor    0x14(%esp),%eax
ror    $0x2,%esi
mov    %eax,0xc(%esp)
mov    0x2c(%esp),%eax
xor    %eax,0xc(%esp)
mov    (%esp),%eax
xor    %eax,0xc(%esp)
rorl   $0x1f,0xc(%esp)
mov    0xc(%esp),%eax
lea    0x5a827999(%ebp,%eax,1),%ebp
mov    %esi,%eax
xor    %edx,%eax
and    %ecx,%eax
xor    %edx,%eax
add    %ebp,%eax
mov    %edi,%ebp
ror    $0x1b,%ebp
add    %eax,%ebp
mov    0x10(%esp),%eax
xor    0x18(%esp),%eax
ror    $0x2,%ecx
mov    %eax,0x10(%esp)
mov    0x30(%esp),%eax
xor    %eax,0x10(%esp)
mov    0x4(%esp),%eax
xor    %eax,0x10(%esp)
rorl   $0x1f,0x10(%esp)
mov    0x10(%esp),%eax
lea    0x6ed9eba1(%edx,%eax,1),%edx
mov    %ecx,%eax
xor    %esi,%eax
xor    %edi,%eax
add    %edx,%eax
mov    %ebp,%edx
ror    $0x1b,%edx
add    %edx,%eax
mov    0x14(%esp),%edx
xor    0x1c(%esp),%edx
ror    $0x2,%edi
mov    %edx,0x14(%esp)
mov    0x34(%esp),%edx
xor    %edx,0x14(%esp)
mov    0x8(%esp),%edx
xor    %edx,0x14(%esp)
rorl   $0x1f,0x14(%esp)
mov    0x14(%esp),%edx
lea    0x6ed9eba1(%esi,%edx,1),%esi
mov    %edi,%edx
xor    %ecx,%edx
xor    %ebp,%edx
add    %esi,%edx
mov    %eax,%esi
ror    $0x1b,%esi
add    %edx,%esi
mov    %ebp,%edx
mov    0x18(%esp),%ebp
xor    0x20(%esp),%ebp
ror    $0x2,%edx
mov    %ebp,0x18(%esp)
mov    0x38(%esp),%ebp
xor    %ebp,0x18(%esp)
mov    0xc(%esp),%ebp
xor    %ebp,0x18(%esp)
rorl   $0x1f,0x18(%esp)
mov    0x18(%esp),%ebp
lea    0x6ed9eba1(%ecx,%ebp,1),%ebp
mov    %edx,%ecx
xor    %edi,%ecx
xor    %eax,%ecx
add    %ebp,%ecx
mov    %esi,%ebp
ror    $0x1b,%ebp
add    %ebp,%ecx
mov    0x1c(%esp),%ebp
xor    0x24(%esp),%ebp
ror    $0x2,%eax
mov    %ebp,0x1c(%esp)
mov    0x3c(%esp),%ebp
xor    %ebp,0x1c(%esp)
mov    0x10(%esp),%ebp
xor    %ebp,0x1c(%esp)
rorl   $0x1f,0x1c(%esp)
mov    0x1c(%esp),%ebp
lea    0x6ed9eba1(%edi,%ebp,1),%ebp
mov    %eax,%edi
xor    %edx,%edi
xor    %esi,%edi
add    %ebp,%edi
mov    %ecx,%ebp
ror    $0x1b,%ebp
add    %ebp,%edi
mov    0x20(%esp),%ebp
xor    0x28(%esp),%ebp
ror    $0x2,%esi
mov    %ebp,0x20(%esp)
mov    (%esp),%ebp
xor    %ebp,0x20(%esp)
mov    0x14(%esp),%ebp
xor    %ebp,0x20(%esp)
rorl   $0x1f,0x20(%esp)
mov    0x20(%esp),%ebp
lea    0x6ed9eba1(%edx,%ebp,1),%ebp
mov    %esi,%edx
xor    %eax,%edx
xor    %ecx,%edx
add    %ebp,%edx
mov    %edi,%ebp
ror    $0x1b,%ebp
add    %ebp,%edx
mov    0x24(%esp),%ebp
xor    0x2c(%esp),%ebp
ror    $0x2,%ecx
mov    %ebp,0x24(%esp)
mov    0x4(%esp),%ebp
xor    %ebp,0x24(%esp)
mov    0x18(%esp),%ebp
xor    %ebp,0x24(%esp)
rorl   $0x1f,0x24(%esp)
mov    0x24(%esp),%ebp
lea    0x6ed9eba1(%eax,%ebp,1),%ebp
mov    %ecx,%eax
xor    %esi,%eax
xor    %edi,%eax
add    %ebp,%eax
mov    %edx,%ebp
ror    $0x1b,%ebp
add    %ebp,%eax
mov    0x28(%esp),%ebp
xor    0x30(%esp),%ebp
ror    $0x2,%edi
mov    %ebp,0x28(%esp)
mov    0x8(%esp),%ebp
xor    %ebp,0x28(%esp)
mov    0x1c(%esp),%ebp
xor    %ebp,0x28(%esp)
rorl   $0x1f,0x28(%esp)
mov    0x28(%esp),%ebp
lea    0x6ed9eba1(%esi,%ebp,1),%ebp
mov    %edi,%esi
xor    %ecx,%esi
xor    %edx,%esi
add    %ebp,%esi
mov    %eax,%ebp
ror    $0x1b,%ebp
add    %ebp,%esi
mov    0x2c(%esp),%ebp
xor    0x34(%esp),%ebp
ror    $0x2,%edx
mov    %ebp,0x2c(%esp)
mov    0xc(%esp),%ebp
xor    %ebp,0x2c(%esp)
mov    0x20(%esp),%ebp
xor    %ebp,0x2c(%esp)
rorl   $0x1f,0x2c(%esp)
mov    0x2c(%esp),%ebp
lea    0x6ed9eba1(%ecx,%ebp,1),%ebp
mov    %edx,%ecx
xor    %edi,%ecx
xor    %eax,%ecx
add    %ebp,%ecx
mov    %esi,%ebp
ror    $0x1b,%ebp
add    %ebp,%ecx
mov    0x30(%esp),%ebp
xor    0x38(%esp),%ebp
ror    $0x2,%eax
mov    %ebp,0x30(%esp)
mov    0x10(%esp),%ebp
xor    %ebp,0x30(%esp)
mov    0x24(%esp),%ebp
xor    %ebp,0x30(%esp)
rorl   $0x1f,0x30(%esp)
mov    0x30(%esp),%ebp
lea    0x6ed9eba1(%edi,%ebp,1),%ebp
mov    %eax,%edi
xor    %edx,%edi
xor    %esi,%edi
add    %ebp,%edi
mov    %ecx,%ebp
ror    $0x1b,%ebp
add    %ebp,%edi
mov    0x34(%esp),%ebp
xor    0x3c(%esp),%ebp
ror    $0x2,%esi
mov    %ebp,0x34(%esp)
mov    0x14(%esp),%ebp
xor    %ebp,0x34(%esp)
mov    0x28(%esp),%ebp
xor    %ebp,0x34(%esp)
rorl   $0x1f,0x34(%esp)
mov    0x34(%esp),%ebp
lea    0x6ed9eba1(%edx,%ebp,1),%ebp
mov    %esi,%edx
xor    %eax,%edx
xor    %ecx,%edx
add    %ebp,%edx
mov    %edi,%ebp
ror    $0x1b,%ebp
add    %ebp,%edx
mov    0x38(%esp),%ebp
xor    (%esp),%ebp
ror    $0x2,%ecx
mov    %ebp,0x38(%esp)
mov    0x18(%esp),%ebp
xor    %ebp,0x38(%esp)
mov    0x2c(%esp),%ebp
xor    %ebp,0x38(%esp)
rorl   $0x1f,0x38(%esp)
mov    0x38(%esp),%ebp
lea    0x6ed9eba1(%eax,%ebp,1),%ebp
mov    %ecx,%eax
xor    %esi,%eax
xor    %edi,%eax
add    %ebp,%eax
mov    %edx,%ebp
ror    $0x1b,%ebp
add    %ebp,%eax
mov    0x3c(%esp),%ebp
xor    0x4(%esp),%ebp
ror    $0x2,%edi
mov    %ebp,0x3c(%esp)
mov    0x1c(%esp),%ebp
xor    %ebp,0x3c(%esp)
mov    0x30(%esp),%ebp
xor    %ebp,0x3c(%esp)
rorl   $0x1f,0x3c(%esp)
mov    0x3c(%esp),%ebp
lea    0x6ed9eba1(%esi,%ebp,1),%ebp
mov    %edi,%esi
xor    %ecx,%esi
xor    %edx,%esi
add    %ebp,%esi
mov    %eax,%ebp
ror    $0x1b,%ebp
add    %ebp,%esi
mov    (%esp),%ebp
xor    0x8(%esp),%ebp
ror    $0x2,%edx
mov    %ebp,(%esp)
mov    0x20(%esp),%ebp
xor    %ebp,(%esp)
mov    0x34(%esp),%ebp
xor    %ebp,(%esp)
rorl   $0x1f,(%esp)
mov    (%esp),%ebp
lea    0x6ed9eba1(%ecx,%ebp,1),%ebp
mov    %edx,%ecx
xor    %edi,%ecx
xor    %eax,%ecx
add    %ebp,%ecx
mov    %esi,%ebp
ror    $0x1b,%ebp
add    %ebp,%ecx
mov    0x4(%esp),%ebp
xor    0xc(%esp),%ebp
ror    $0x2,%eax
mov    %ebp,0x4(%esp)
mov    0x24(%esp),%ebp
xor    %ebp,0x4(%esp)
mov    0x38(%esp),%ebp
xor    %ebp,0x4(%esp)
rorl   $0x1f,0x4(%esp)
mov    0x4(%esp),%ebp
lea    0x6ed9eba1(%edi,%ebp,1),%ebp
mov    %eax,%edi
xor    %edx,%edi
xor    %esi,%edi
add    %ebp,%edi
mov    %ecx,%ebp
ror    $0x1b,%ebp
add    %ebp,%edi
mov    0x8(%esp),%ebp
ror    $0x2,%esi
xor    0x10(%esp),%ebp
mov    %ebp,0x8(%esp)
mov    0x28(%esp),%ebp
xor    %ebp,0x8(%esp)
mov    0x3c(%esp),%ebp
xor    %ebp,0x8(%esp)
rorl   $0x1f,0x8(%esp)
mov    0x8(%esp),%ebp
lea    0x6ed9eba1(%edx,%ebp,1),%ebp
mov    %esi,%edx
xor    %eax,%edx
xor    %ecx,%edx
add    %ebp,%edx
mov    %edi,%ebp
ror    $0x1b,%ebp
add    %ebp,%edx
mov    0xc(%esp),%ebp
xor    0x14(%esp),%ebp
ror    $0x2,%ecx
mov    %ebp,0xc(%esp)
mov    0x2c(%esp),%ebp
xor    %ebp,0xc(%esp)
mov    (%esp),%ebp
xor    %ebp,0xc(%esp)
rorl   $0x1f,0xc(%esp)
mov    0xc(%esp),%ebp
lea    0x6ed9eba1(%eax,%ebp,1),%ebp
mov    %ecx,%eax
xor    %esi,%eax
xor    %edi,%eax
add    %ebp,%eax
mov    %edx,%ebp
ror    $0x1b,%ebp
add    %ebp,%eax
mov    0x10(%esp),%ebp
xor    0x18(%esp),%ebp
ror    $0x2,%edi
mov    %ebp,0x10(%esp)
mov    0x30(%esp),%ebp
xor    %ebp,0x10(%esp)
mov    0x4(%esp),%ebp
xor    %ebp,0x10(%esp)
rorl   $0x1f,0x10(%esp)
mov    0x10(%esp),%ebp
lea    0x6ed9eba1(%esi,%ebp,1),%ebp
mov    %edi,%esi
xor    %ecx,%esi
xor    %edx,%esi
add    %ebp,%esi
mov    %eax,%ebp
ror    $0x1b,%ebp
add    %ebp,%esi
mov    0x14(%esp),%ebp
xor    0x1c(%esp),%ebp
ror    $0x2,%edx
mov    %ebp,0x14(%esp)
mov    0x34(%esp),%ebp
xor    %ebp,0x14(%esp)
mov    0x8(%esp),%ebp
xor    %ebp,0x14(%esp)
rorl   $0x1f,0x14(%esp)
mov    0x14(%esp),%ebp
lea    0x6ed9eba1(%ecx,%ebp,1),%ebp
mov    %edx,%ecx
xor    %edi,%ecx
xor    %eax,%ecx
add    %ebp,%ecx
mov    %esi,%ebp
ror    $0x1b,%ebp
add    %ebp,%ecx
mov    0x18(%esp),%ebp
xor    0x20(%esp),%ebp
ror    $0x2,%eax
mov    %ebp,0x18(%esp)
mov    0x38(%esp),%ebp
xor    %ebp,0x18(%esp)
mov    0xc(%esp),%ebp
xor    %ebp,0x18(%esp)
rorl   $0x1f,0x18(%esp)
mov    0x18(%esp),%ebp
lea    0x6ed9eba1(%edi,%ebp,1),%ebp
mov    %eax,%edi
xor    %edx,%edi
xor    %esi,%edi
add    %ebp,%edi
mov    %ecx,%ebp
ror    $0x1b,%ebp
ror    $0x2,%esi
add    %ebp,%edi
mov    %esi,%ebp
mov    0x1c(%esp),%esi
xor    0x24(%esp),%esi
mov    %esi,0x1c(%esp)
mov    0x3c(%esp),%esi
xor    %esi,0x1c(%esp)
mov    0x10(%esp),%esi
xor    %esi,0x1c(%esp)
rorl   $0x1f,0x1c(%esp)
mov    0x1c(%esp),%esi
lea    0x6ed9eba1(%edx,%esi,1),%esi
mov    %ebp,%edx
xor    %eax,%edx
xor    %ecx,%edx
add    %edx,%esi
mov    %edi,%edx
ror    $0x1b,%edx
add    %edx,%esi
mov    0x20(%esp),%edx
xor    0x28(%esp),%edx
ror    $0x2,%ecx
mov    %edx,0x20(%esp)
mov    (%esp),%edx
xor    %edx,0x20(%esp)
mov    0x14(%esp),%edx
xor    %edx,0x20(%esp)
rorl   $0x1f,0x20(%esp)
mov    0x20(%esp),%edx
mov    %ecx,0x44(%esp)
lea    -0x70e44324(%eax,%edx,1),%edx
mov    %esi,%eax
ror    $0x1b,%eax
add    %eax,%edx
mov    %edi,%eax
or     %ecx,%eax
mov    %eax,%ecx
mov    0x44(%esp),%eax
and    %ebp,%ecx
and    %edi,%eax
or     %eax,%ecx
mov    0x24(%esp),%eax
xor    0x2c(%esp),%eax
add    %ecx,%edx
ror    $0x2,%edi
mov    %esi,%ecx
and    %edi,%ecx
mov    %eax,0x24(%esp)
mov    0x4(%esp),%eax
xor    %eax,0x24(%esp)
mov    0x18(%esp),%eax
xor    %eax,0x24(%esp)
rorl   $0x1f,0x24(%esp)
mov    0x24(%esp),%eax
lea    -0x70e44324(%ebp,%eax,1),%ebp
mov    %esi,%eax
or     %edi,%eax
and    0x44(%esp),%eax
or     %ecx,%eax
mov    %edx,%ecx
add    %ebp,%eax
ror    $0x1b,%ecx
add    %ecx,%eax
mov    %esi,%ecx
mov    0x28(%esp),%esi
xor    0x30(%esp),%esi
ror    $0x2,%ecx
mov    %ecx,%ebp
mov    %esi,0x28(%esp)
mov    0x8(%esp),%esi
xor    %esi,0x28(%esp)
mov    0x1c(%esp),%esi
xor    %esi,0x28(%esp)
rorl   $0x1f,0x28(%esp)
mov    0x44(%esp),%ecx
mov    0x28(%esp),%esi
lea    -0x70e44324(%ecx,%esi,1),%esi
mov    %eax,%ecx
ror    $0x1b,%ecx
add    %ecx,%esi
mov    %edx,%ecx
or     %ebp,%ecx
mov    %ecx,0x44(%esp)
mov    %edx,%ecx
and    %edi,0x44(%esp)
and    %ebp,%ecx
or     %ecx,0x44(%esp)
mov    %edx,%ecx
add    0x44(%esp),%esi
mov    0xc(%esp),%edx
ror    $0x2,%ecx
mov    %esi,0x54(%esp)
mov    0x2c(%esp),%esi
xor    0x34(%esp),%esi
mov    %esi,0x2c(%esp)
xor    %edx,0x2c(%esp)
mov    0x20(%esp),%edx
xor    %edx,0x2c(%esp)
rorl   $0x1f,0x2c(%esp)
mov    0x2c(%esp),%edx
lea    -0x70e44324(%edi,%edx,1),%esi
mov    %eax,%edi
or     %ecx,%edi
mov    %edi,%edx
mov    %eax,%edi
and    %ecx,%edi
and    %ebp,%edx
or     %edi,%edx
mov    0x54(%esp),%edi
add    %esi,%edx
ror    $0x2,%eax
ror    $0x1b,%edi
lea    (%edx,%edi,1),%esi
mov    %eax,%edx
mov    0x10(%esp),%eax
mov    %esi,%edi
mov    0x30(%esp),%esi
xor    0x38(%esp),%esi
mov    %esi,0x30(%esp)
xor    %eax,0x30(%esp)
mov    0x24(%esp),%eax
xor    %eax,0x30(%esp)
rorl   $0x1f,0x30(%esp)
mov    0x30(%esp),%eax
mov    %edi,0x44(%esp)
lea    -0x70e44324(%ebp,%eax,1),%esi
mov    %edi,%ebp
mov    0x54(%esp),%edi
ror    $0x1b,%ebp
add    %ebp,%esi
mov    %edi,%ebp
or     %edx,%ebp
mov    %ebp,%eax
mov    %edi,%ebp
and    %ecx,%eax
and    %edx,%edi
or     %edi,%eax
mov    0x14(%esp),%edi
add    %esi,%eax
mov    0x34(%esp),%esi
xor    0x3c(%esp),%esi
ror    $0x2,%ebp
mov    %esi,0x34(%esp)
xor    %edi,0x34(%esp)
mov    0x28(%esp),%edi
xor    %edi,0x34(%esp)
rorl   $0x1f,0x34(%esp)
mov    0x34(%esp),%edi
lea    -0x70e44324(%ecx,%edi,1),%esi
mov    0x44(%esp),%edi
mov    %edi,%ecx
and    %ebp,%edi
or     %ebp,%ecx
and    %edx,%ecx
or     %edi,%ecx
mov    %eax,%edi
add    %esi,%ecx
ror    $0x1b,%edi
lea    (%ecx,%edi,1),%esi
mov    0x44(%esp),%ecx
mov    %esi,%edi
mov    0x38(%esp),%esi
xor    (%esp),%esi
mov    %edi,0x54(%esp)
ror    $0x2,%ecx
mov    %esi,0x38(%esp)
mov    0x18(%esp),%esi
xor    %esi,0x38(%esp)
mov    0x2c(%esp),%esi
xor    %esi,0x38(%esp)
rorl   $0x1f,0x38(%esp)
mov    0x38(%esp),%esi
ror    $0x1b,%edi
lea    -0x70e44324(%edx,%esi,1),%esi
mov    %eax,%edx
add    %edi,%esi
or     %ecx,%edx
mov    %eax,%edi
and    %ebp,%edx
and    %ecx,%edi
or     %edi,%edx
add    %edx,%esi
mov    %eax,%edx
mov    0x1c(%esp),%eax
mov    %esi,0x44(%esp)
mov    0x3c(%esp),%esi
ror    $0x2,%edx
xor    0x4(%esp),%esi
mov    %esi,0x3c(%esp)
xor    %eax,0x3c(%esp)
mov    0x30(%esp),%eax
xor    %eax,0x3c(%esp)
rorl   $0x1f,0x3c(%esp)
mov    0x54(%esp),%edi
mov    0x3c(%esp),%eax
lea    -0x70e44324(%ebp,%eax,1),%esi
mov    %edi,%ebp
or     %edx,%ebp
mov    %ebp,%eax
mov    %edi,%ebp
and    %ecx,%eax
and    %edx,%edi
or     %edi,%eax
mov    0x44(%esp),%edi
add    %esi,%eax
mov    (%esp),%esi
xor    0x8(%esp),%esi
ror    $0x2,%ebp
ror    $0x1b,%edi
add    %edi,%eax
mov    0x20(%esp),%edi
mov    %esi,(%esp)
xor    %edi,(%esp)
mov    0x34(%esp),%edi
xor    %edi,(%esp)
rorl   $0x1f,(%esp)
mov    (%esp),%edi
lea    -0x70e44324(%ecx,%edi,1),%esi
mov    0x44(%esp),%edi
mov    %eax,%ecx
ror    $0x1b,%ecx
add    %ecx,%esi
mov    %edi,%ecx
and    %ebp,%edi
or     %ebp,%ecx
and    %edx,%ecx
or     %edi,%ecx
mov    0x24(%esp),%edi
add    %ecx,%esi
mov    0x44(%esp),%ecx
mov    %esi,0x54(%esp)
mov    0x4(%esp),%esi
ror    $0x2,%ecx
xor    0xc(%esp),%esi
mov    %esi,0x4(%esp)
xor    %edi,0x4(%esp)
mov    0x38(%esp),%edi
xor    %edi,0x4(%esp)
rorl   $0x1f,0x4(%esp)
mov    0x4(%esp),%edi
lea    -0x70e44324(%edx,%edi,1),%esi
mov    %eax,%edx
or     %ecx,%edx
mov    %eax,%edi
and    %ecx,%edi
and    %ebp,%edx
or     %edi,%edx
mov    0x54(%esp),%edi
add    %esi,%edx
ror    $0x1b,%edi
lea    (%edx,%edi,1),%esi
mov    %eax,%edx
mov    0x3c(%esp),%eax
mov    %esi,%edi
mov    0x8(%esp),%esi
xor    0x10(%esp),%esi
mov    %edi,0x44(%esp)
ror    $0x2,%edx
mov    %esi,0x8(%esp)
mov    0x28(%esp),%esi
xor    %esi,0x8(%esp)
xor    %eax,0x8(%esp)
rorl   $0x1f,0x8(%esp)
mov    0x8(%esp),%eax
lea    -0x70e44324(%ebp,%eax,1),%esi
mov    %edi,%ebp
mov    0x54(%esp),%edi
ror    $0x1b,%ebp
add    %ebp,%esi
mov    %edi,%ebp
or     %edx,%ebp
mov    %ebp,%eax
mov    %edi,%ebp
and    %ecx,%eax
and    %edx,%edi
or     %edi,%eax
mov    0x2c(%esp),%edi
add    %esi,%eax
mov    0xc(%esp),%esi
xor    0x14(%esp),%esi
ror    $0x2,%ebp
mov    %esi,0xc(%esp)
mov    (%esp),%esi
xor    %edi,0xc(%esp)
xor    %esi,0xc(%esp)
rorl   $0x1f,0xc(%esp)
mov    0x44(%esp),%edi
mov    0xc(%esp),%esi
lea    -0x70e44324(%ecx,%esi,1),%esi
mov    %edi,%ecx
or     %ebp,%ecx
and    %ebp,%edi
and    %edx,%ecx
or     %edi,%ecx
mov    %eax,%edi
add    %esi,%ecx
ror    $0x1b,%edi
lea    (%ecx,%edi,1),%esi
mov    0x44(%esp),%ecx
mov    %esi,%edi
mov    0x10(%esp),%esi
xor    0x18(%esp),%esi
ror    $0x2,%ecx
mov    %esi,0x10(%esp)
mov    0x30(%esp),%esi
xor    %esi,0x10(%esp)
mov    0x4(%esp),%esi
xor    %esi,0x10(%esp)
rorl   $0x1f,0x10(%esp)
mov    0x10(%esp),%esi
mov    %edi,0x54(%esp)
ror    $0x1b,%edi
lea    -0x70e44324(%edx,%esi,1),%esi
mov    %eax,%edx
add    %edi,%esi
or     %ecx,%edx
mov    %eax,%edi
and    %ebp,%edx
and    %ecx,%edi
or     %edi,%edx
mov    0x54(%esp),%edi
add    %edx,%esi
mov    %eax,%edx
mov    0x34(%esp),%eax
mov    %esi,0x44(%esp)
mov    0x14(%esp),%esi
ror    $0x2,%edx
xor    0x1c(%esp),%esi
mov    %esi,0x14(%esp)
xor    %eax,0x14(%esp)
mov    0x8(%esp),%eax
xor    %eax,0x14(%esp)
rorl   $0x1f,0x14(%esp)
mov    0x14(%esp),%eax
lea    -0x70e44324(%ebp,%eax,1),%esi
mov    %edi,%ebp
or     %edx,%ebp
mov    %ebp,%eax
mov    %edi,%ebp
and    %ecx,%eax
and    %edx,%edi
or     %edi,%eax
mov    0x44(%esp),%edi
add    %esi,%eax
mov    0x18(%esp),%esi
xor    0x20(%esp),%esi
ror    $0x2,%ebp
ror    $0x1b,%edi
mov    %esi,0x18(%esp)
mov    0x38(%esp),%esi
add    %edi,%eax
xor    %esi,0x18(%esp)
mov    0xc(%esp),%edi
xor    %edi,0x18(%esp)
rorl   $0x1f,0x18(%esp)
mov    0x18(%esp),%edi
lea    -0x70e44324(%ecx,%edi,1),%esi
mov    0x44(%esp),%edi
mov    %eax,%ecx
ror    $0x1b,%ecx
add    %ecx,%esi
mov    %edi,%ecx
or     %ebp,%ecx
and    %edx,%ecx
and    %ebp,%edi
or     %edi,%ecx
mov    0x3c(%esp),%edi
add    %ecx,%esi
mov    0x44(%esp),%ecx
mov    %esi,0x54(%esp)
mov    0x1c(%esp),%esi
xor    0x24(%esp),%esi
ror    $0x2,%ecx
mov    %esi,0x1c(%esp)
xor    %edi,0x1c(%esp)
mov    0x10(%esp),%edi
xor    %edi,0x1c(%esp)
rorl   $0x1f,0x1c(%esp)
mov    0x1c(%esp),%edi
lea    -0x70e44324(%edx,%edi,1),%esi
mov    %eax,%edx
or     %ecx,%edx
mov    %eax,%edi
and    %ecx,%edi
and    %ebp,%edx
or     %edi,%edx
mov    0x54(%esp),%edi
add    %esi,%edx
ror    $0x1b,%edi
lea    (%edx,%edi,1),%esi
mov    %eax,%edx
mov    (%esp),%eax
mov    %esi,%edi
mov    0x20(%esp),%esi
xor    0x28(%esp),%esi
mov    %edi,0x44(%esp)
ror    $0x2,%edx
mov    %esi,0x20(%esp)
xor    %eax,0x20(%esp)
mov    0x14(%esp),%eax
xor    %eax,0x20(%esp)
rorl   $0x1f,0x20(%esp)
mov    0x20(%esp),%eax
lea    -0x70e44324(%ebp,%eax,1),%esi
mov    %edi,%ebp
mov    0x54(%esp),%edi
ror    $0x1b,%ebp
add    %ebp,%esi
mov    %edi,%ebp
or     %edx,%ebp
mov    %ebp,%eax
mov    %edi,%ebp
and    %ecx,%eax
and    %edx,%edi
or     %edi,%eax
add    %esi,%eax
mov    0x24(%esp),%esi
xor    0x2c(%esp),%esi
ror    $0x2,%ebp
mov    %esi,0x24(%esp)
mov    0x4(%esp),%esi
xor    %esi,0x24(%esp)
mov    0x18(%esp),%esi
xor    %esi,0x24(%esp)
rorl   $0x1f,0x24(%esp)
mov    0x44(%esp),%edi
mov    0x24(%esp),%esi
lea    -0x70e44324(%ecx,%esi,1),%esi
mov    %edi,%ecx
or     %ebp,%ecx
and    %edx,%ecx
and    %ebp,%edi
or     %edi,%ecx
mov    %eax,%edi
add    %esi,%ecx
ror    $0x1b,%edi
lea    (%ecx,%edi,1),%esi
mov    0x44(%esp),%ecx
mov    %esi,%edi
mov    0x28(%esp),%esi
xor    0x30(%esp),%esi
mov    %edi,0x44(%esp)
ror    $0x1b,%edi
ror    $0x2,%ecx
mov    %esi,0x28(%esp)
mov    0x8(%esp),%esi
xor    %esi,0x28(%esp)
mov    0x1c(%esp),%esi
xor    %esi,0x28(%esp)
rorl   $0x1f,0x28(%esp)
mov    0x28(%esp),%esi
lea    -0x70e44324(%edx,%esi,1),%esi
mov    %eax,%edx
add    %edi,%esi
or     %ecx,%edx
mov    %eax,%edi
and    %ebp,%edx
and    %ecx,%edi
or     %edi,%edx
mov    0x2c(%esp),%edi
xor    0x34(%esp),%edi
add    %edx,%esi
mov    0x20(%esp),%edx
ror    $0x2,%eax
mov    %edi,0x2c(%esp)
mov    0xc(%esp),%edi
xor    %edi,0x2c(%esp)
xor    %edx,0x2c(%esp)
rorl   $0x1f,0x2c(%esp)
mov    0x44(%esp),%edi
mov    0x2c(%esp),%edx
or     %eax,%edi
lea    -0x70e44324(%ebp,%edx,1),%ebp
mov    %edi,%edx
mov    0x44(%esp),%edi
and    %ecx,%edx
and    %eax,%edi
or     %edi,%edx
mov    0x44(%esp),%edi
add    %ebp,%edx
mov    %esi,%ebp
ror    $0x1b,%ebp
lea    (%edx,%ebp,1),%ebp
mov    0x30(%esp),%edx
xor    0x38(%esp),%edx
ror    $0x2,%edi
mov    %edx,0x30(%esp)
mov    0x10(%esp),%edx
xor    %edx,0x30(%esp)
mov    0x24(%esp),%edx
xor    %edx,0x30(%esp)
rorl   $0x1f,0x30(%esp)
mov    0x30(%esp),%edx
lea    -0x359d3e2a(%ecx,%edx,1),%ecx
mov    %edi,%edx
xor    %eax,%edx
xor    %esi,%edx
add    %ecx,%edx
mov    %ebp,%ecx
ror    $0x1b,%ecx
add    %ecx,%edx
mov    0x34(%esp),%ecx
xor    0x3c(%esp),%ecx
ror    $0x2,%esi
mov    %ecx,0x34(%esp)
mov    0x14(%esp),%ecx
xor    %ecx,0x34(%esp)
mov    0x28(%esp),%ecx
xor    %ecx,0x34(%esp)
rorl   $0x1f,0x34(%esp)
mov    0x34(%esp),%ecx
lea    -0x359d3e2a(%eax,%ecx,1),%ecx
mov    %esi,%eax
xor    %edi,%eax
xor    %ebp,%eax
add    %ecx,%eax
mov    %edx,%ecx
ror    $0x2,%ebp
ror    $0x1b,%ecx
add    %eax,%ecx
mov    %ebp,%eax
mov    0x38(%esp),%ebp
xor    (%esp),%ebp
mov    %ebp,0x38(%esp)
mov    0x18(%esp),%ebp
xor    %ebp,0x38(%esp)
mov    0x2c(%esp),%ebp
xor    %ebp,0x38(%esp)
rorl   $0x1f,0x38(%esp)
mov    0x38(%esp),%ebp
lea    -0x359d3e2a(%edi,%ebp,1),%ebp
mov    %eax,%edi
xor    %esi,%edi
xor    %edx,%edi
add    %ebp,%edi
mov    %ecx,%ebp
ror    $0x1b,%ebp
add    %ebp,%edi
mov    %edx,%ebp
mov    0x3c(%esp),%edx
xor    0x4(%esp),%edx
ror    $0x2,%ebp
mov    %edx,0x3c(%esp)
mov    0x1c(%esp),%edx
xor    %edx,0x3c(%esp)
mov    0x30(%esp),%edx
xor    %edx,0x3c(%esp)
rorl   $0x1f,0x3c(%esp)
mov    0x3c(%esp),%edx
lea    -0x359d3e2a(%esi,%edx,1),%esi
mov    %ebp,%edx
xor    %eax,%edx
xor    %ecx,%edx
add    %esi,%edx
mov    %edi,%esi
ror    $0x1b,%esi
add    %esi,%edx
mov    (%esp),%esi
xor    0x8(%esp),%esi
ror    $0x2,%ecx
mov    %esi,(%esp)
mov    0x20(%esp),%esi
xor    %esi,(%esp)
mov    0x34(%esp),%esi
xor    %esi,(%esp)
rorl   $0x1f,(%esp)
mov    (%esp),%esi
lea    -0x359d3e2a(%eax,%esi,1),%esi
mov    %ecx,%eax
xor    %ebp,%eax
xor    %edi,%eax
add    %esi,%eax
mov    %edx,%esi
ror    $0x1b,%esi
add    %eax,%esi
mov    0x4(%esp),%eax
xor    0xc(%esp),%eax
ror    $0x2,%edi
mov    %eax,0x4(%esp)
mov    0x24(%esp),%eax
xor    %eax,0x4(%esp)
mov    0x38(%esp),%eax
xor    %eax,0x4(%esp)
rorl   $0x1f,0x4(%esp)
mov    0x4(%esp),%eax
lea    -0x359d3e2a(%ebp,%eax,1),%ebp
mov    %edi,%eax
xor    %ecx,%eax
xor    %edx,%eax
add    %ebp,%eax
mov    %esi,%ebp
ror    $0x1b,%ebp
add    %ebp,%eax
mov    0x8(%esp),%ebp
xor    0x10(%esp),%ebp
ror    $0x2,%edx
mov    %ebp,0x8(%esp)
mov    0x28(%esp),%ebp
xor    %ebp,0x8(%esp)
mov    0x3c(%esp),%ebp
xor    %ebp,0x8(%esp)
rorl   $0x1f,0x8(%esp)
mov    0x8(%esp),%ebp
lea    -0x359d3e2a(%ecx,%ebp,1),%ebp
mov    %edx,%ecx
xor    %edi,%ecx
xor    %esi,%ecx
add    %ebp,%ecx
mov    %eax,%ebp
ror    $0x1b,%ebp
add    %ecx,%ebp
mov    0xc(%esp),%ecx
ror    $0x2,%esi
xor    0x14(%esp),%ecx
mov    %ecx,0xc(%esp)
mov    0x2c(%esp),%ecx
xor    %ecx,0xc(%esp)
mov    (%esp),%ecx
xor    %ecx,0xc(%esp)
rorl   $0x1f,0xc(%esp)
mov    0xc(%esp),%ecx
lea    -0x359d3e2a(%edi,%ecx,1),%edi
mov    %esi,%ecx
xor    %edx,%ecx
xor    %eax,%ecx
add    %edi,%ecx
mov    %ebp,%edi
ror    $0x1b,%edi
add    %edi,%ecx
mov    0x10(%esp),%edi
xor    0x18(%esp),%edi
ror    $0x2,%eax
mov    %edi,0x10(%esp)
mov    0x30(%esp),%edi
xor    %edi,0x10(%esp)
mov    0x4(%esp),%edi
xor    %edi,0x10(%esp)
rorl   $0x1f,0x10(%esp)
mov    0x10(%esp),%edi
lea    -0x359d3e2a(%edx,%edi,1),%edi
mov    %eax,%edx
xor    %esi,%edx
xor    %ebp,%edx
add    %edi,%edx
mov    %ecx,%edi
ror    $0x1b,%edi
add    %edx,%edi
mov    0x14(%esp),%edx
xor    0x1c(%esp),%edx
ror    $0x2,%ebp
mov    %edx,0x14(%esp)
mov    0x34(%esp),%edx
xor    %edx,0x14(%esp)
mov    0x8(%esp),%edx
xor    %edx,0x14(%esp)
rorl   $0x1f,0x14(%esp)
mov    0x14(%esp),%edx
lea    -0x359d3e2a(%esi,%edx,1),%esi
mov    %ebp,%edx
xor    %eax,%edx
xor    %ecx,%edx
add    %esi,%edx
mov    %edi,%esi
ror    $0x1b,%esi
add    %esi,%edx
mov    0x18(%esp),%esi
xor    0x20(%esp),%esi
ror    $0x2,%ecx
mov    %esi,0x18(%esp)
mov    0x38(%esp),%esi
xor    %esi,0x18(%esp)
mov    0xc(%esp),%esi
xor    %esi,0x18(%esp)
rorl   $0x1f,0x18(%esp)
mov    0x18(%esp),%esi
lea    -0x359d3e2a(%eax,%esi,1),%esi
mov    %ecx,%eax
xor    %ebp,%eax
xor    %edi,%eax
add    %esi,%eax
mov    %edx,%esi
ror    $0x1b,%esi
add    %eax,%esi
mov    0x1c(%esp),%eax
xor    0x24(%esp),%eax
ror    $0x2,%edi
mov    %eax,0x1c(%esp)
mov    0x3c(%esp),%eax
xor    %eax,0x1c(%esp)
mov    0x10(%esp),%eax
xor    %eax,0x1c(%esp)
rorl   $0x1f,0x1c(%esp)
mov    0x1c(%esp),%eax
mov    %esi,0x54(%esp)
lea    -0x359d3e2a(%ebp,%eax,1),%ebp
mov    %edi,%eax
xor    %ecx,%eax
xor    %edx,%eax
add    %ebp,%eax
mov    %esi,%ebp
ror    $0x1b,%ebp
lea    (%eax,%ebp,1),%esi
mov    0x54(%esp),%eax
mov    %esi,0x44(%esp)
mov    0x20(%esp),%esi
ror    $0x2,%edx
xor    0x28(%esp),%esi
xor    (%esp),%esi
xor    0x14(%esp),%esi
ror    $0x1f,%esi
lea    -0x359d3e2a(%ecx,%esi,1),%ebp
mov    %edx,%ecx
xor    %edi,%ecx
xor    %eax,%ecx
add    %ebp,%ecx
mov    0x44(%esp),%ebp
ror    $0x1b,%ebp
add    %ebp,%ecx
mov    %eax,%ebp
mov    0x24(%esp),%eax
xor    0x2c(%esp),%eax
xor    0x4(%esp),%eax
xor    0x18(%esp),%eax
ror    $0x2,%ebp
mov    %ecx,0x20(%esp)
mov    %ebp,%ecx
ror    $0x1f,%eax
lea    -0x359d3e2a(%edi,%eax,1),%ebp
mov    %ecx,%edi
mov    %ecx,0x54(%esp)
mov    0x44(%esp),%ecx
xor    %edx,%edi
xor    %ecx,%edi
add    %ebp,%edi
mov    0x20(%esp),%ebp
ror    $0x1b,%ebp
add    %ebp,%edi
ror    $0x2,%ecx
mov    %edi,0x24(%esp)
mov    %ecx,%edi
mov    0x28(%esp),%ecx
xor    0x30(%esp),%ecx
xor    0x8(%esp),%ecx
xor    0x1c(%esp),%ecx
mov    %edi,0x28(%esp)
xor    0x54(%esp),%edi
ror    $0x1f,%ecx
lea    -0x359d3e2a(%edx,%ecx,1),%ebp
mov    0x20(%esp),%edx
xor    %edi,%edx
add    %ebp,%edx
mov    0x24(%esp),%ebp
ror    $0x1b,%ebp
lea    (%edx,%ebp,1),%edi
mov    0x20(%esp),%ebp
mov    %edi,%edx
ror    $0x2,%ebp
mov    %ebp,0x8(%esp)
mov    0x2c(%esp),%edi
xor    0x34(%esp),%edi
xor    0xc(%esp),%edi
mov    0x54(%esp),%ebp
mov    %edx,0x20(%esp)
xor    %esi,%edi
mov    0x8(%esp),%esi
xor    0x28(%esp),%esi
xor    0x24(%esp),%esi
ror    $0x1f,%edi
lea    -0x359d3e2a(%ebp,%edi,1),%ebp
add    %ebp,%esi
mov    %edx,%ebp
mov    0x30(%esp),%edx
ror    $0x1b,%ebp
add    %ebp,%esi
mov    0x24(%esp),%ebp
xor    0x38(%esp),%edx
xor    0x10(%esp),%edx
ror    $0x2,%ebp
mov    %ebp,0xc(%esp)
mov    0x28(%esp),%ebp
xor    %eax,%edx
mov    0xc(%esp),%eax
ror    $0x1f,%edx
xor    0x8(%esp),%eax
xor    0x20(%esp),%eax
lea    -0x359d3e2a(%ebp,%edx,1),%ebp
add    %ebp,%eax
mov    %esi,%ebp
ror    $0x1b,%ebp
add    %eax,%ebp
mov    0x20(%esp),%eax
ror    $0x2,%eax
mov    %eax,0x10(%esp)
mov    0x34(%esp),%eax
xor    0x3c(%esp),%eax
xor    0x14(%esp),%eax
xor    %ecx,%eax
mov    0x8(%esp),%ecx
ror    $0x1f,%eax
lea    -0x359d3e2a(%ecx,%eax,1),%ecx
mov    0x10(%esp),%eax
xor    0xc(%esp),%eax
xor    %esi,%eax
add    %ecx,%eax
mov    %ebp,%ecx
ror    $0x1b,%ecx
add    %eax,%ecx
mov    (%esp),%eax
xor    0x38(%esp),%eax
xor    0x18(%esp),%eax
ror    $0x2,%esi
xor    %edi,%eax
mov    0xc(%esp),%edi
ror    $0x1f,%eax
lea    -0x359d3e2a(%edi,%eax,1),%edi
mov    0x10(%esp),%eax
xor    %esi,%eax
xor    %ebp,%eax
add    %edi,%eax
mov    %ecx,%edi
ror    $0x1b,%edi
add    %eax,%edi
mov    0x4(%esp),%eax
xor    0x3c(%esp),%eax
xor    0x1c(%esp),%eax
ror    $0x2,%ebp
xor    %edx,%eax
mov    0x58(%esp),%edx
ror    $0x1f,%eax
lea    -0x359d3e2a(%edx,%eax,1),%eax
mov    0x10(%esp),%edx
add    %eax,%edx
mov    %ebp,%eax
xor    %esi,%eax
xor    %ecx,%eax
add    %edx,%eax
mov    %edi,%edx
ror    $0x1b,%edx
add    %edx,%eax
mov    0x5c(%esp),%edx
ror    $0x2,%ecx
mov    %eax,(%edx)
add    0x48(%esp),%edi
add    0x40(%esp),%ebp
add    0x4c(%esp),%ecx
add    0x50(%esp),%esi
mov    %edi,0x4(%edx)
mov    %ecx,0x8(%edx)
mov    %ebp,0xc(%edx)
mov    %esi,0x10(%edx)
add    $0xa0,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
movl   $0x67452301,(%eax)
movl   $0xefcdab89,0x4(%eax)
movl   $0x98badcfe,0x8(%eax)
movl   $0x10325476,0xc(%eax)
movl   $0xc3d2e1f0,0x10(%eax)
movl   $0x0,0x18(%eax)
movl   $0x0,0x14(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x22700,%ebx
mov    (%eax),%ecx
mov    0x4(%eax),%eax
mov    %ecx,0x1c(%esp)
mov    %eax,0x18(%esp)
mov    %eax,%ecx
mov    0x40(%esp),%eax
mov    0x14(%eax),%eax
lea    (%eax,%ecx,8),%edx
mov    0x40(%esp),%ecx
cmp    %edx,%eax
mov    %edx,0x14(%ecx)
ja     8095a40 <dbus_bus_remove_match+0x4810>
mov    0x18(%ecx),%ecx
mov    0x18(%esp),%edx
shr    $0x3,%eax
shr    $0x1d,%edx
add    %ecx,%edx
mov    0x40(%esp),%ecx
and    $0x3f,%eax
mov    %edx,0x18(%ecx)
jne    80959e3 <dbus_bus_remove_match+0x47b3>
lea    0x1c(%ecx),%esi
mov    0x18(%esp),%eax
cmp    $0x3f,%eax
jbe    80959c3 <dbus_bus_remove_match+0x4793>
mov    0x1c(%esp),%edi
lea    0x40(%esi),%ebp
mov    %eax,0x14(%esp)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x40,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   804d140 <memmove@plt>
mov    %esi,%eax
xchg   %ax,%ax
mov    (%eax),%edx
add    $0x4,%eax
bswap  %edx
mov    %edx,-0x4(%eax)
cmp    %ebp,%eax
jne    8095980 <dbus_bus_remove_match+0x4750>
mov    0x40(%esp),%eax
mov    %esi,%edx
add    $0x40,%edi
call   8094560 <dbus_bus_remove_match+0x3330>
subl   $0x40,0x14(%esp)
cmpl   $0x3f,0x14(%esp)
ja     8095968 <dbus_bus_remove_match+0x4738>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%ecx
andl   $0x3f,0x18(%esp)
sub    $0x40,%eax
and    $0xffffffc0,%eax
lea    0x40(%ecx,%eax,1),%eax
mov    %eax,0x1c(%esp)
mov    0x18(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   804d140 <memmove@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x40(%esp),%ecx
mov    $0x40,%esi
sub    %eax,%esi
cmp    %esi,0x18(%esp)
lea    0x1c(%ecx),%edi
lea    (%edi,%eax,1),%edx
jb     8095a53 <dbus_bus_remove_match+0x4823>
mov    0x1c(%esp),%eax
mov    %esi,0x8(%esp)
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   804d140 <memmove@plt>
mov    0x40(%esp),%eax
lea    0x5c(%eax),%ecx
mov    %edi,%eax
nop
mov    (%eax),%edx
add    $0x4,%eax
bswap  %edx
mov    %edx,-0x4(%eax)
cmp    %ecx,%eax
jne    8095a18 <dbus_bus_remove_match+0x47e8>
mov    0x40(%esp),%eax
mov    %edi,%edx
call   8094560 <dbus_bus_remove_match+0x3330>
add    %esi,0x1c(%esp)
sub    %esi,0x18(%esp)
mov    %edi,%esi
jmp    8095950 <dbus_bus_remove_match+0x4720>
mov    0x40(%esp),%ecx
mov    0x18(%ecx),%ecx
mov    %ecx,0x14(%esp)
add    $0x1,%ecx
jmp    8095931 <dbus_bus_remove_match+0x4701>
mov    0x18(%esp),%eax
mov    %edx,(%esp)
mov    %eax,0x8(%esp)
mov    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   804d140 <memmove@plt>
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
mov    0x54(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x2256c,%ebx
lea    0x1c(%esi),%ebp
mov    %eax,0xc(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x2c(%esp)
xor    %eax,%eax
mov    0x14(%esi),%eax
sar    $0x3,%eax
and    $0x3f,%eax
lea    0x0(%ebp,%eax,1),%edx
lea    0x1(%edx),%ecx
movb   $0x80,(%edx)
mov    $0x3f,%edx
sub    %eax,%edx
cmp    $0x7,%edx
jg     8095bf0 <dbus_bus_remove_match+0x49c0>
mov    %ecx,(%esp)
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804d6f0 <memset@plt>
lea    0x5c(%esi),%ecx
mov    %ebp,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
add    $0x4,%eax
bswap  %edx
mov    %edx,-0x4(%eax)
cmp    %ecx,%eax
jne    8095af0 <dbus_bus_remove_match+0x48c0>
mov    %ebp,%edx
mov    %esi,%eax
call   8094560 <dbus_bus_remove_match+0x3330>
test   $0x1,%ebp
mov    %ebp,%edi
mov    $0x38,%edx
jne    8095c88 <dbus_bus_remove_match+0x4a58>
test   $0x2,%edi
jne    8095c96 <dbus_bus_remove_match+0x4a66>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
jne    8095c18 <dbus_bus_remove_match+0x49e8>
and    $0x1,%edx
jne    8095c10 <dbus_bus_remove_match+0x49e0>
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%esi),%eax
lea    0x54(%esi),%ecx
mov    %eax,0x54(%esi)
mov    0x14(%esi),%eax
mov    %eax,0x58(%esi)
mov    %ebp,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
add    $0x4,%eax
bswap  %edx
mov    %edx,-0x4(%eax)
cmp    %ecx,%eax
jne    8095b60 <dbus_bus_remove_match+0x4930>
mov    %esi,%eax
mov    %ebp,%edx
call   8094560 <dbus_bus_remove_match+0x3330>
lea    0x14(%esi),%ecx
mov    %esi,%eax
lea    0x0(%esi,%eiz,1),%esi
mov    (%eax),%edx
add    $0x4,%eax
bswap  %edx
mov    %edx,-0x4(%eax)
cmp    %ecx,%eax
jne    8095b80 <dbus_bus_remove_match+0x4950>
mov    (%esi),%edx
lea    0x18(%esp),%eax
mov    %edx,0x18(%esp)
mov    0x4(%esi),%edx
mov    %edx,0x1c(%esp)
mov    0x8(%esi),%edx
mov    %edx,0x20(%esp)
mov    0xc(%esi),%edx
mov    %edx,0x24(%esp)
mov    0x10(%esi),%edx
mov    %eax,0x4(%esp)
mov    0xc(%esp),%eax
movl   $0x14,0x8(%esp)
mov    %edx,0x28(%esp)
mov    %eax,(%esp)
call   807fa10 <dbus_shutdown+0xd30>
xor    %edx,%edx
test   %eax,%eax
jne    8095c30 <dbus_bus_remove_match+0x4a00>
mov    0x2c(%esp),%edi
xor    %gs:0x14,%edi
mov    %edx,%eax
jne    8095cc2 <dbus_bus_remove_match+0x4a92>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    $0x37,%edx
sub    %eax,%edx
mov    %edx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %ecx,(%esp)
call   804d6f0 <memset@plt>
jmp    8095b48 <dbus_bus_remove_match+0x4918>
movb   $0x0,(%edi)
jmp    8095b48 <dbus_bus_remove_match+0x4918>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     8095b48 <dbus_bus_remove_match+0x4918>
jmp    8095c10 <dbus_bus_remove_match+0x49e0>
lea    0x0(%esi,%eiz,1),%esi
test   $0x1,%esi
mov    %esi,%edi
mov    $0x5c,%dl
jne    8095cb5 <dbus_bus_remove_match+0x4a85>
test   $0x2,%edi
jne    8095ca7 <dbus_bus_remove_match+0x4a77>
mov    %edx,%ecx
xor    %eax,%eax
shr    $0x2,%ecx
test   $0x2,%dl
rep stos %eax,%es:(%edi)
jne    8095c78 <dbus_bus_remove_match+0x4a48>
and    $0x1,%edx
jne    8095c68 <dbus_bus_remove_match+0x4a38>
mov    $0x1,%edx
jmp    8095bd2 <dbus_bus_remove_match+0x49a2>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,(%edi)
mov    $0x1,%edx
jmp    8095bd2 <dbus_bus_remove_match+0x49a2>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
and    $0x1,%edx
je     8095c57 <dbus_bus_remove_match+0x4a27>
jmp    8095c68 <dbus_bus_remove_match+0x4a38>
movb   $0x0,0x1c(%esi)
lea    0x1(%ebp),%edi
mov    $0x37,%dl
jmp    8095b1a <dbus_bus_remove_match+0x48ea>
xor    %eax,%eax
add    $0x2,%edi
mov    %ax,-0x2(%edi)
sub    $0x2,%edx
jmp    8095b26 <dbus_bus_remove_match+0x48f6>
xor    %ecx,%ecx
add    $0x2,%edi
mov    %cx,-0x2(%edi)
sub    $0x2,%edx
jmp    8095c44 <dbus_bus_remove_match+0x4a14>
movb   $0x0,(%esi)
add    $0x1,%edi
mov    $0x5b,%dl
jmp    8095c3c <dbus_bus_remove_match+0x4a0c>
call   80962d0 <dbus_bus_remove_match+0x50a0>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x22328,%ebx
add    $0xffffff80,%esp
lea    0x24(%esp),%esi
mov    %esi,(%esp)
lea    0x14(%esp),%edi
call   80958b0 <dbus_bus_remove_match+0x4680>
mov    0x90(%esp),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   80958f0 <dbus_bus_remove_match+0x46c0>
mov    %edi,(%esp)
call   807f330 <dbus_shutdown+0x650>
xor    %edx,%edx
test   %eax,%eax
jne    8095d20 <dbus_bus_remove_match+0x4af0>
sub    $0xffffff80,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,0x4(%esp)
mov    %esi,(%esp)
call   8095a80 <dbus_bus_remove_match+0x4850>
test   %eax,%eax
jne    8095d48 <dbus_bus_remove_match+0x4b18>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
sub    $0xffffff80,%esp
xor    %edx,%edx
pop    %ebx
mov    %edx,%eax
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x94(%esp),%eax
mov    0x4(%eax),%eax
movl   $0x0,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0xc(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x8(%esp)
call   8080600 <dbus_shutdown+0x1920>
test   %eax,%eax
je     8095d30 <dbus_bus_remove_match+0x4b00>
mov    %edi,(%esp)
call   807f3d0 <dbus_shutdown+0x6f0>
mov    $0x1,%edx
jmp    8095d12 <dbus_bus_remove_match+0x4ae2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x22262,%ebx
test   %esi,%esi
je     8095dc0 <dbus_bus_remove_match+0x4b90>
mov    0x4(%esi),%eax
cmp    $0xffffffff,%eax
je     8095db8 <dbus_bus_remove_match+0x4b88>
mov    %eax,(%esp)
call   804dae0 <close@plt>
mov    %esi,(%esp)
call   807ebb0 <dbus_free>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x32c,%esp
mov    0x348(%esp),%edx
mov    0x34c(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x22213,%ebx
cmp    $0x40,%edx
mov    %eax,0xc(%esp)
mov    $0x40,%eax
cmovle %edx,%eax
mov    %eax,0x8(%esp)
lea    0x20(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x340(%esp),%eax
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   804d800 <epoll_wait@plt>
test   %eax,%eax
mov    %eax,0x1c(%esp)
jle    8095e7b <dbus_bus_remove_match+0x4c4b>
mov    0x344(%esp),%esi
lea    0x24(%esp),%edx
lea    (%eax,%eax,2),%eax
lea    (%edx,%eax,4),%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    (%edx),%eax
mov    %eax,(%esi)
mov    -0x4(%edx),%ecx
mov    %ecx,%edi
and    $0x1,%edi
mov    %edi,%eax
or     $0x2,%eax
test   $0x4,%cl
cmove  %edi,%eax
mov    %eax,%edi
or     $0x8,%edi
test   $0x10,%cl
cmovne %edi,%eax
mov    %eax,%edi
or     $0x4,%edi
and    $0x8,%ecx
cmovne %edi,%eax
add    $0xc,%edx
cwtl
add    $0x8,%esi
mov    %eax,-0x4(%esi)
cmp    %ebp,%edx
jne    8095e40 <dbus_bus_remove_match+0x4c10>
mov    0x1c(%esp),%eax
add    $0x32c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
lea    0x14(%esp),%eax
mov    0x34(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x22156,%ebx
movl   $0x3,0x4(%esp)
mov    %esi,0x8(%esp)
mov    0x4(%eax),%eax
mov    %esi,0x18(%esp)
movl   $0x80000000,0x14(%esp)
mov    %eax,(%esp)
call   804d450 <epoll_ctl@plt>
test   %eax,%eax
jne    8095ee0 <dbus_bus_remove_match+0x4cb0>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x17048(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x38(%esp),%edx
call   804e750 <sidput@plt+0xbf0>
add    $0x220e2,%ebx
mov    0x34(%esp),%esi
movl   $0x3,0x4(%esp)
mov    %edx,%eax
and    $0x1,%eax
mov    %eax,%ecx
or     $0x4,%ecx
and    $0x2,%edx
cmovne %ecx,%eax
mov    %eax,0x14(%esp)
lea    0x14(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
mov    %esi,0x18(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   804d450 <epoll_ctl@plt>
test   %eax,%eax
je     8095f9b <dbus_bus_remove_match+0x4d6b>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0x9,%eax
je     8095fa8 <dbus_bus_remove_match+0x4d78>
cmp    $0xc,%eax
je     8095fd8 <dbus_bus_remove_match+0x4da8>
cmp    $0x2,%eax
je     8095fc0 <dbus_bus_remove_match+0x4d90>
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x16fcc(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    -0x16f54(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    -0x17020(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    -0x16ffc(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
push   %esi
push   %ebx
sub    $0x24,%esp
lea    0x14(%esp),%eax
mov    0x34(%esp),%esi
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
call   804e750 <sidput@plt+0xbf0>
add    $0x21ff6,%ebx
movl   $0x2,0x4(%esp)
mov    %esi,0x8(%esp)
mov    0x4(%eax),%eax
movl   $0x0,0x14(%esp)
movl   $0x0,0x18(%esp)
movl   $0x0,0x1c(%esp)
mov    %eax,(%esp)
call   804d450 <epoll_ctl@plt>
test   %eax,%eax
jne    8096050 <dbus_bus_remove_match+0x4e20>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x16fa0(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x3c(%esp),%eax
mov    0x34(%esp),%esi
call   804e750 <sidput@plt+0xbf0>
add    $0x21f6e,%ebx
test   %eax,%eax
mov    %esi,0x18(%esp)
je     8096118 <dbus_bus_remove_match+0x4ee8>
mov    0x38(%esp),%eax
and    $0x1,%eax
mov    %eax,%edx
or     $0x4,%edx
testb  $0x2,0x38(%esp)
cmovne %edx,%eax
mov    %eax,0x14(%esp)
lea    0x14(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x30(%esp),%eax
mov    %esi,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    0x4(%eax),%eax
mov    %eax,(%esp)
call   804d450 <epoll_ctl@plt>
mov    $0x1,%edx
test   %eax,%eax
je     809610b <dbus_bus_remove_match+0x4edb>
call   804d730 <__errno_location@plt>
mov    (%eax),%eax
cmp    $0xc,%eax
je     8096155 <dbus_bus_remove_match+0x4f25>
jle    8096128 <dbus_bus_remove_match+0x4ef8>
cmp    $0x11,%eax
jne    8096150 <dbus_bus_remove_match+0x4f20>
lea    -0x16f78(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
xor    %edx,%edx
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
movl   $0x80000000,0x14(%esp)
jmp    80960b8 <dbus_bus_remove_match+0x4e88>
lea    0x0(%esi),%esi
cmp    $0x9,%eax
jne    8096160 <dbus_bus_remove_match+0x4f30>
lea    -0x16f54(%ebx),%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1c,%eax
jne    8096160 <dbus_bus_remove_match+0x4f30>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
mov    %eax,(%esp)
call   804d520 <strerror@plt>
mov    %esi,0x4(%esp)
mov    %eax,0x8(%esp)
lea    -0x16fcc(%ebx),%eax
mov    %eax,(%esp)
call   807ccc0 <dbus_watch_handle+0x1100>
add    $0x24,%esp
xor    %edx,%edx
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x21e69,%ebx
sub    $0x14,%esp
movl   $0x8,(%esp)
call   807eb80 <dbus_malloc0>
test   %eax,%eax
mov    %eax,%esi
je     8096240 <dbus_bus_remove_match+0x5010>
lea    0x378(%ebx),%eax
movl   $0x80000,(%esp)
mov    %eax,(%esi)
call   804dab0 <epoll_create1@plt>
mov    %eax,%edx
cmp    $0xffffffff,%edx
mov    %eax,0x4(%esi)
mov    %esi,%eax
je     80961e0 <dbus_bus_remove_match+0x4fb0>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x2a,(%esp)
call   804d950 <epoll_create@plt>
movl   $0x0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
mov    %eax,0x4(%esi)
call   804d680 <fcntl@plt>
cmp    $0xffffffff,%eax
je     8096226 <dbus_bus_remove_match+0x4ff6>
or     $0x1,%eax
mov    %eax,0x8(%esp)
mov    0x4(%esi),%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   804d680 <fcntl@plt>
cmpl   $0xffffffff,0x4(%esi)
mov    %esi,%eax
jne    80961d6 <dbus_bus_remove_match+0x4fa6>
mov    %esi,(%esp)
call   8095d90 <dbus_bus_remove_match+0x4b60>
xor    %eax,%eax
jmp    80961d6 <dbus_bus_remove_match+0x4fa6>
lea    0x0(%esi),%esi
xor    %eax,%eax
jmp    80961d6 <dbus_bus_remove_match+0x4fa6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x21da5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x3ec(%ebx),%esi
call   804cfac <_init>
lea    -0x3f0(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     80962a9 <dbus_bus_remove_match+0x5079>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x3f0(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    8096288 <dbus_bus_remove_match+0x5058>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    80962c0 <dbus_bus_remove_match+0x5090>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   804e750 <sidput@plt+0xbf0>
add    $0x21d2a,%ebx
sub    $0x8,%esp
call   804d240 <__stack_chk_fail@plt>
push   %ebx
sub    $0x8,%esp
call   804e750 <sidput@plt+0xbf0>
add    $0x21d13,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
outsl  %ds:(%esi),(%dx)
jb     8096372 <_IO_stdin_used+0x6e>
cs
data16
jb     8096374 <_IO_stdin_used+0x70>
gs
fs
gs
jae    809637f <_IO_stdin_used+0x7b>
je     8096385 <_IO_stdin_used+0x81>
jo     8096346 <_IO_stdin_used+0x42>
inc    %esp
inc    %edx
jne    809638f <_IO_stdin_used+0x8b>
cs
inc    %ebp
jb     8096392 <_IO_stdin_used+0x8e>
outsl  %ds:(%esi),(%dx)
jb     8096351 <_IO_stdin_used+0x4d>
push   %ebx
jo     8096387 <_IO_stdin_used+0x83>
ja     8096396 <_IO_stdin_used+0x92>
cs
inc    %ebx
push   $0x45646c69
js     809639a <_IO_stdin_used+0x96>
je     8096398 <_IO_stdin_used+0x94>
add    %al,%fs:(%eax)
add    %al,(%eax)
dec    %esp
popa
jne    80963aa <_IO_stdin_used+0xa6>
arpl   %bp,0x65(%eax)
jb     8096361 <_IO_stdin_used+0x5d>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     809636b <_IO_stdin_used+0x67>
jb     80963c2 <_IO_stdin_used+0xbe>
outsb  %ds:(%esi),(%dx)
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
jne    80963c7 <_IO_stdin_used+0xc3>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80963d6 <_IO_stdin_used+0xd2>
sub    %eax,(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     80963cc <_IO_stdin_used+0xc8>
gs
fs
gs
jae    80963d7 <_IO_stdin_used+0xd3>
je     80963dd <_IO_stdin_used+0xd9>
jo     809639e <_IO_stdin_used+0x9a>
inc    %esp
inc    %edx
jne    80963e7 <_IO_stdin_used+0xe3>
cs
inc    %ebp
jb     80963ea <_IO_stdin_used+0xe6>
outsl  %ds:(%esi),(%dx)
jb     80963a9 <_IO_stdin_used+0xa5>
dec    %esi
outsl  %ds:(%esi),(%dx)
dec    %ebp
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80963fc <_IO_stdin_used+0xf8>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    80963f5 <_IO_stdin_used+0xf1>
je     8096407 <_IO_stdin_used+0x103>
jo     80963b4 <_IO_stdin_used+0xb0>
outsb  %gs:(%esi),(%dx)
jbe    8096401 <_IO_stdin_used+0xfd>
jb     8096409 <_IO_stdin_used+0x105>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80963c0 <_IO_stdin_used+0xbc>
arpl   %bp,0x72(%edi)
jb     809640a <_IO_stdin_used+0x106>
arpl   %si,0x79(%esp,%ebp,2)
add    %al,(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     8096418 <_IO_stdin_used+0x114>
gs
fs
gs
jae    8096423 <_IO_stdin_used+0x11f>
je     8096429 <_IO_stdin_used+0x125>
jo     80963ea <_IO_stdin_used+0xe6>
inc    %esp
inc    %edx
jne    8096433 <_IO_stdin_used+0x12f>
cs
inc    %ebp
jb     8096436 <_IO_stdin_used+0x132>
outsl  %ds:(%esi),(%dx)
jb     80963f5 <_IO_stdin_used+0xf1>
push   %ebx
jo     809642b <_IO_stdin_used+0x127>
ja     809643a <_IO_stdin_used+0x136>
cs
inc    %esi
popa
imul   $0x65536f54,0x64(%ebp,%eiz,2),%ebp
je     809644e <_IO_stdin_used+0x14a>
jo     80963db <_IO_stdin_used+0xd7>
add    %al,0x75(%edx)
jae    8096400 <_IO_stdin_used+0xfc>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x73(%ecx)
and    %ch,0x6f(%esi)
je     809640c <_IO_stdin_used+0x108>
jbe    809644f <_IO_stdin_used+0x14b>
insb   (%dx),%es:(%edi)
imul   $0x696d2072,0x6f(%eax,%eiz,1),%esp
jae    809646c <_IO_stdin_used+0x168>
imul   $0x0,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     809646a <_IO_stdin_used+0x166>
cs
data16
jb     809646c <_IO_stdin_used+0x168>
gs
fs
gs
jae    8096477 <_IO_stdin_used+0x173>
je     809647d <_IO_stdin_used+0x179>
jo     809643e <_IO_stdin_used+0x13a>
inc    %esp
inc    %edx
jne    8096487 <_IO_stdin_used+0x183>
cs
inc    %ebp
jb     809648a <_IO_stdin_used+0x186>
outsl  %ds:(%esi),(%dx)
jb     8096449 <_IO_stdin_used+0x145>
push   %ebx
jo     809647f <_IO_stdin_used+0x17b>
ja     809648e <_IO_stdin_used+0x18a>
cs
push   %ebx
gs
jb     809649b <_IO_stdin_used+0x197>
imul   $0x56746f4e,0x65(%ebx),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x75420000,0x0(%eax,%eax,1),%esp
jae    8096458 <_IO_stdin_used+0x154>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x6f(%esi)
je     8096461 <_IO_stdin_used+0x15d>
outsw  %ds:(%esi),(%dx)
jne    80964b3 <_IO_stdin_used+0x1af>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x79(%ebx)
jae    80964c2 <_IO_stdin_used+0x1be>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
jb     80964cb <_IO_stdin_used+0x1c7>
imul   $0x72696420,0x65(%ebx),%esp
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    8096463 <_IO_stdin_used+0x15f>
add    %ch,0x72(%edi)
addr16
cs
data16
jb     80964d0 <_IO_stdin_used+0x1cc>
gs
fs
gs
jae    80964db <_IO_stdin_used+0x1d7>
je     80964e1 <_IO_stdin_used+0x1dd>
jo     80964a2 <_IO_stdin_used+0x19e>
inc    %esp
inc    %edx
jne    80964eb <_IO_stdin_used+0x1e7>
cs
inc    %ebp
jb     80964ee <_IO_stdin_used+0x1ea>
outsl  %ds:(%esi),(%dx)
jb     80964ad <_IO_stdin_used+0x1a9>
push   %ebx
jo     80964e3 <_IO_stdin_used+0x1df>
ja     80964f2 <_IO_stdin_used+0x1ee>
cs
push   %ebx
gs
jb     80964ff <_IO_stdin_used+0x1fb>
imul   $0x46746f4e,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
jne    8096501 <_IO_stdin_used+0x1fd>
add    %al,%fs:(%eax)
add    %al,(%eax)
push   %esp
push   $0x65702065
jb     809650d <_IO_stdin_used+0x209>
imul   $0x206e6f69,0x73(%ebx),%esi
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
je     8096527 <_IO_stdin_used+0x223>
imul   $0x65706c65,0x68(%eax,%eiz,1),%esp
jb     80964dc <_IO_stdin_used+0x1d8>
imul   $0x20746f6e,0x20(%ebx),%esi
arpl   %bp,0x72(%edi)
jb     809652d <_IO_stdin_used+0x229>
arpl   %si,0x0(%eax,%eax,1)
outsl  %ds:(%esi),(%dx)
jb     8096536 <_IO_stdin_used+0x232>
cs
data16
jb     8096538 <_IO_stdin_used+0x234>
gs
fs
gs
jae    8096543 <_IO_stdin_used+0x23f>
je     8096549 <_IO_stdin_used+0x245>
jo     809650a <_IO_stdin_used+0x206>
inc    %esp
inc    %edx
jne    8096553 <_IO_stdin_used+0x24f>
cs
inc    %ebp
jb     8096556 <_IO_stdin_used+0x252>
outsl  %ds:(%esi),(%dx)
jb     8096515 <_IO_stdin_used+0x211>
push   %ebx
jo     809654b <_IO_stdin_used+0x247>
ja     809655a <_IO_stdin_used+0x256>
cs
push   %eax
gs
jb     809655e <_IO_stdin_used+0x25a>
imul   $0x736e6f69,0x73(%ebx),%esi
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    809655d <_IO_stdin_used+0x259>
insb   (%dx),%es:(%edi)
imul   $0x73206568,0x54(%eax,%eax,1),%esp
gs
jb     809657e <_IO_stdin_used+0x27a>
imul   $0x6c696620,0x65(%ebx),%esp
and    %ch,%gs:0x73(%ecx)
and    %ch,0x6e(%ecx)
arpl   %bp,0x72(%edi)
jb     8096580 <_IO_stdin_used+0x27c>
arpl   %si,0x6f(%eax,%eiz,1)
jb     8096541 <_IO_stdin_used+0x23d>
outsl  %fs:(%esi),(%dx)
gs
jae    8096546 <_IO_stdin_used+0x242>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809654a <_IO_stdin_used+0x246>
push   $0x20657661
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
jno    80965ac <_IO_stdin_used+0x2a8>
imul   $0x74612064,0x65(%edx),%esi
je     80965b2 <_IO_stdin_used+0x2ae>
imul   $0x736574,0x75(%edx),%esp
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809656f <_IO_stdin_used+0x26b>
insb   (%dx),%es:(%edi)
popa
jne    80965c1 <_IO_stdin_used+0x2bd>
arpl   %bp,0x20(%eax)
fs
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
imul   $0x6f6e,0x20(%ebp,%eiz,2),%bp
je     8096587 <_IO_stdin_used+0x283>
outsw  %ds:(%esi),(%dx)
jne    80965d9 <_IO_stdin_used+0x2d5>
and    %ch,%fs:0x72(%edi)
and    %dh,0x65(%eax)
jb     80965e1 <_IO_stdin_used+0x2dd>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ch,0x6e(%ecx)
jbe    80965e1 <_IO_stdin_used+0x2dd>
insb   (%dx),%es:(%edi)
imul   $0x662e6772,0x6f(%eax,%eax,1),%esp
jb     80965f0 <_IO_stdin_used+0x2ec>
gs
fs
gs
jae    80965fb <_IO_stdin_used+0x2f7>
je     8096601 <_IO_stdin_used+0x2fd>
jo     80965c2 <_IO_stdin_used+0x2be>
inc    %esp
inc    %edx
jne    809660b <_IO_stdin_used+0x307>
cs
inc    %ebp
jb     809660e <_IO_stdin_used+0x30a>
outsl  %ds:(%esi),(%dx)
jb     80965cd <_IO_stdin_used+0x2c9>
push   %ebx
jo     8096603 <_IO_stdin_used+0x2ff>
ja     8096612 <_IO_stdin_used+0x30e>
cs
inc    %ebp
js     809660d <_IO_stdin_used+0x309>
arpl   %ax,0x61(%esi)
imul   $0x766e4900,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     8096634 <_IO_stdin_used+0x330>
and    %dh,0x20(%edi,%ebp,2)
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
add    %al,%gs:(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     8096640 <_IO_stdin_used+0x33c>
gs
fs
gs
jae    809664b <_IO_stdin_used+0x347>
je     8096651 <_IO_stdin_used+0x34d>
jo     8096612 <_IO_stdin_used+0x30e>
inc    %esp
inc    %edx
jne    809665b <_IO_stdin_used+0x357>
cs
inc    %ebp
jb     809665e <_IO_stdin_used+0x35a>
outsl  %ds:(%esi),(%dx)
jb     809661d <_IO_stdin_used+0x319>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8096654 <_IO_stdin_used+0x350>
insb   (%dx),%es:(%edi)
imul   $0x7367,0x72(%ecx,%eax,2),%esp
dec    %esp
popa
jne    809666e <_IO_stdin_used+0x36a>
arpl   %bp,0x65(%eax)
and    %ah,%fs:0x68(%ebx)
imul   $0x20736177,0x20(%esp,%eiz,2),%ebp
jae    809667a <_IO_stdin_used+0x376>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
gs
fs
sub    $0x20,%al
imul   $0x61626f72,0x70(%eax,%eiz,1),%esi
bound  %ebp,0x20(%ecx,%edi,2)
arpl   %si,0x61(%edx)
jae    8096692 <_IO_stdin_used+0x38e>
gs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809669a <_IO_stdin_used+0x396>
cs
data16
jb     809669c <_IO_stdin_used+0x398>
gs
fs
gs
jae    80966a7 <_IO_stdin_used+0x3a3>
je     80966ad <_IO_stdin_used+0x3a9>
jo     809666e <_IO_stdin_used+0x36a>
inc    %esp
inc    %edx
jne    80966b7 <_IO_stdin_used+0x3b3>
cs
inc    %ebp
jb     80966ba <_IO_stdin_used+0x3b6>
outsl  %ds:(%esi),(%dx)
jb     8096679 <_IO_stdin_used+0x375>
push   %ebx
jo     80966af <_IO_stdin_used+0x3ab>
ja     80966be <_IO_stdin_used+0x3ba>
cs
inc    %ebx
push   $0x53646c69
imul   $0x64656c61,0x6e(%edi),%esp
add    %al,(%eax)
dec    %esp
popa
jne    80966d2 <_IO_stdin_used+0x3ce>
arpl   %bp,0x20(%eax)
push   $0x65706c65
jb     809668e <_IO_stdin_used+0x38a>
gs
js     80966da <_IO_stdin_used+0x3d6>
je     80966d8 <_IO_stdin_used+0x3d4>
and    %dh,%fs:0x69(%edi)
je     80966e1 <_IO_stdin_used+0x3dd>
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
je     80966fb <_IO_stdin_used+0x3f7>
jb     80966f6 <_IO_stdin_used+0x3f2>
and    %ah,0x6f(%ebx)
fs and %ah,%fs:%gs:0x69
add    %al,0x63(%ecx)
je     8096701 <_IO_stdin_used+0x3fd>
jbe    80966fb <_IO_stdin_used+0x3f7>
je     8096701 <_IO_stdin_used+0x3fd>
and    %dh,%fs:0x65(%ebx)
jb     8096718 <_IO_stdin_used+0x414>
imul   $0x73252720,0x65(%ebx),%esp
daa
and    %ah,0x61(%esi)
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     8096729 <_IO_stdin_used+0x425>
jae    809672b <_IO_stdin_used+0x427>
je     80966e8 <_IO_stdin_used+0x3e4>
data16
and    %ch,%fs:0x6d(%ecx,%ebp,2)
imul   $0x726f6665,0x62(%eax,%eiz,1),%esi
and    %ah,%gs:0x63(%ecx)
je     8096745 <_IO_stdin_used+0x441>
jbe    809673f <_IO_stdin_used+0x43b>
je     8096749 <_IO_stdin_used+0x445>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%bp,%di)
jb     809675d <_IO_stdin_used+0x459>
imul   $0x7325203a,0x65(%ebx),%esp
cmp    (%eax),%ah
and    $0x6f000073,%eax
jb     809675e <_IO_stdin_used+0x45a>
cs
data16
jb     8096760 <_IO_stdin_used+0x45c>
gs
fs
gs
jae    809676b <_IO_stdin_used+0x467>
je     8096771 <_IO_stdin_used+0x46d>
jo     8096732 <_IO_stdin_used+0x42e>
inc    %esp
inc    %edx
jne    809677b <_IO_stdin_used+0x477>
cs
inc    %ebp
jb     809677e <_IO_stdin_used+0x47a>
outsl  %ds:(%esi),(%dx)
jb     809673d <_IO_stdin_used+0x439>
push   %esp
imul   $0x74754f64,0x65(%ebp),%ebp
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     809678f <_IO_stdin_used+0x48b>
and    %dh,0x65(%ebx)
jb     80967a5 <_IO_stdin_used+0x4a1>
imul   $0x73252720,0x65(%ebx),%esp
daa
cmp    (%eax),%ah
je     80967a4 <_IO_stdin_used+0x4a0>
insl   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x75(%edi)
je     8096743 <_IO_stdin_used+0x43f>
add    %ch,0x72(%edi)
addr16
cs
data16
jb     80967b0 <_IO_stdin_used+0x4ac>
gs
fs
gs
jae    80967bb <_IO_stdin_used+0x4b7>
je     80967c1 <_IO_stdin_used+0x4bd>
jo     8096782 <_IO_stdin_used+0x47e>
inc    %esp
inc    %edx
jne    80967cb <_IO_stdin_used+0x4c7>
cs
inc    %ebp
jb     80967ce <_IO_stdin_used+0x4ca>
outsl  %ds:(%esi),(%dx)
jb     809678d <_IO_stdin_used+0x489>
inc    %esi
popa
imul   $0x53000000,0x64(%ebp,%eiz,2),%ebp
gs
jb     80967e2 <_IO_stdin_used+0x4de>
imul   $0x20732520,0x65(%ebx),%esp
popa
insb   (%dx),%es:(%edi)
jb     80967dc <_IO_stdin_used+0x4d8>
popa
fs
jns    809679b <_IO_stdin_used+0x497>
gs
js     80967e7 <_IO_stdin_used+0x4e3>
jae    80967f4 <_IO_stdin_used+0x4f0>
jae    80967a2 <_IO_stdin_used+0x49e>
imul   $0x69746361,0x20(%esi),%ebp
jbe    80967ec <_IO_stdin_used+0x4e8>
je     80967f6 <_IO_stdin_used+0x4f2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ebp)
je     8096806 <_IO_stdin_used+0x502>
jns    80967b6 <_IO_stdin_used+0x4b2>
insb   (%dx),%es:(%edi)
imul   $0x6854000a,0x74(%ebx),%esi
and    %ch,%gs:0x65(%esi)
ja     80967c4 <_IO_stdin_used+0x4c0>
jae    809680b <_IO_stdin_used+0x507>
jb     809681e <_IO_stdin_used+0x51a>
imul   $0x6d616e20,0x65(%ebx),%esp
and    %ah,%gs:(%edx)
and    $0x6f202273,%eax
data16
and    %dh,0x65(%ebx)
jb     8096833 <_IO_stdin_used+0x52f>
imul   $0x6c696620,0x65(%ebx),%esp
and    %ah,%gs:(%edx)
and    $0x69202273,%eax
jae    80967ee <_IO_stdin_used+0x4ea>
popa
insb   (%dx),%es:(%edi)
jb     8096837 <_IO_stdin_used+0x533>
popa
fs
jns    80967f6 <_IO_stdin_used+0x4f2>
imul   $0x68636163,0x20(%esi),%ebp
gs
sub    $0x20,%al
imul   $0x6e69726f,0x6e(%edi),%esp
or     (%bx,%si),%al
add    %al,(%eax)
push   %ebx
jne    8096852 <_IO_stdin_used+0x54e>
arpl   %sp,0x73(%ebp)
jae    809685a <_IO_stdin_used+0x556>
jne    8096862 <_IO_stdin_used+0x55e>
insb   (%dx),%es:(%edi)
jns    8096819 <_IO_stdin_used+0x515>
popa
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8096866 <_IO_stdin_used+0x562>
and    %dh,%fs:0x65(%ebx)
jb     809687d <_IO_stdin_used+0x579>
imul   $0x73252720,0x65(%ebx),%esp
daa
add    %dl,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
js     8096881 <_IO_stdin_used+0x57d>
insl   (%dx),%es:(%edi)
jne    8096888 <_IO_stdin_used+0x584>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x74636120,%fs:0x67(%esi),%ebp
imul   $0x6e6f6974,0x61(%esi),%esi
jae    809685a <_IO_stdin_used+0x556>
push   $0x62207361
gs outsb %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
arpl   %bp,0x65(%eax)
fs
sub    $0x20,%al
popa
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     80968bd <_IO_stdin_used+0x5b9>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %ah,0x61662073
imul   $0x67726f00,0x64(%ebp,%eiz,2),%ebp
cs
data16
jb     80968d0 <_IO_stdin_used+0x5cc>
gs
fs
gs
jae    80968db <_IO_stdin_used+0x5d7>
je     80968e1 <_IO_stdin_used+0x5dd>
jo     80968a2 <_IO_stdin_used+0x59e>
inc    %esp
inc    %edx
jne    80968eb <_IO_stdin_used+0x5e7>
cs
inc    %ebp
jb     80968ee <_IO_stdin_used+0x5ea>
outsl  %ds:(%esi),(%dx)
jb     80968ad <_IO_stdin_used+0x5a9>
dec    %esp
imul   $0x78457374,0x69(%ebp),%ebp
arpl   %sp,0x65(%ebp)
fs gs add %al,%fs:%gs:(%eax)
add    %dl,0x65(%eax,%ebp,2)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x61772073
jae    80968c0 <_IO_stdin_used+0x5bc>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80968c4 <_IO_stdin_used+0x5c0>
jo     8096918 <_IO_stdin_used+0x614>
outsl  %ds:(%esi),(%dx)
jbe    8096912 <_IO_stdin_used+0x60e>
fs gs and %ah,%fs:%gs:0x79(%edx)
and    %ah,0x6e(%ecx)
jns    80968d4 <_IO_stdin_used+0x5d0>
jae,pn 809691c <_IO_stdin_used+0x618>
jb     809692f <_IO_stdin_used+0x62b>
imul   $0x6c696620,0x65(%ebx),%esp
gs
jae    80968c3 <_IO_stdin_used+0x5bf>
add    %ch,0x72(%edi)
addr16
cs
data16
jb     8096930 <_IO_stdin_used+0x62c>
gs
fs
gs
jae    809693b <_IO_stdin_used+0x637>
je     8096941 <_IO_stdin_used+0x63d>
jo     8096902 <_IO_stdin_used+0x5fe>
inc    %esp
inc    %edx
jne    809694b <_IO_stdin_used+0x647>
cs
inc    %ebp
jb     809694e <_IO_stdin_used+0x64a>
outsl  %ds:(%esi),(%dx)
jb     809690d <_IO_stdin_used+0x609>
push   %ebx
gs
jb     8096959 <_IO_stdin_used+0x655>
imul   $0x6e6b6e55,0x65(%ebx),%esp
outsl  %ds:(%esi),(%dx)
ja     809695b <_IO_stdin_used+0x657>
add    %al,(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     809695c <_IO_stdin_used+0x658>
gs
fs
gs
jae    8096967 <_IO_stdin_used+0x663>
je     809696d <_IO_stdin_used+0x669>
jo     809692e <_IO_stdin_used+0x62a>
jae    809697b <_IO_stdin_used+0x677>
jae    8096978 <_IO_stdin_used+0x674>
gs
insl   (%dx),%es:(%edi)
xor    %ebp,%fs:(%esi)
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8096980 <_IO_stdin_used+0x67c>
jb     8096913 <_IO_stdin_used+0x60f>
add    %al,0x63(%ecx)
je     8096981 <_IO_stdin_used+0x67d>
jbe    809697b <_IO_stdin_used+0x677>
je     8096985 <_IO_stdin_used+0x681>
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%bp)
popa
and    %dh,0x79(%ebx)
jae    809699b <_IO_stdin_used+0x697>
gs
insl   (%dx),%es:(%edi)
cmp    %fs:(%eax),%ah
jae    8096993 <_IO_stdin_used+0x68f>
jb     80969a6 <_IO_stdin_used+0x6a2>
imul   $0x6d616e20,0x65(%ebx),%esp
gs
cmp    $0x27732527,%eax
and    %dh,0x6e(%ebp)
imul   $0x277325,0x27(%ebp,%edi,1),%esi
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     80969b9 <_IO_stdin_used+0x6b5>
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%bp,%di)
jae    80969cb <_IO_stdin_used+0x6c7>
gs
insl   (%dx),%es:(%edi)
and    %dh,%fs:0x20(%edi,%ebp,2)
push   $0x2d646e61
outsl  %ds:(%esi),(%dx)
data16
data16
cmp    (%eax),%ah
jae    80969cf <_IO_stdin_used+0x6cb>
jb     80969e2 <_IO_stdin_used+0x6de>
imul   $0x6d616e20,0x65(%ebx),%esp
gs
cmp    $0x27732527,%eax
and    %dh,0x6e(%ebp)
imul   $0x277325,0x27(%ebp,%edi,1),%esi
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     80969fb <_IO_stdin_used+0x6f7>
and    %dh,0x69(%esi)
popa
and    %dh,0x79(%ebx)
jae    8096a13 <_IO_stdin_used+0x70f>
gs
insl   (%dx),%es:(%edi)
cmp    %fs:(%eax),%ah
jae    8096a0b <_IO_stdin_used+0x707>
jb     8096a1e <_IO_stdin_used+0x71a>
imul   $0x6d616e20,0x65(%ebx),%esp
gs
cmp    $0x27732527,%eax
and    %dh,0x6e(%ebp)
imul   $0x277325,0x27(%ebp,%edi,1),%esi
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80969e7 <_IO_stdin_used+0x6e3>
outsl  %fs:(%esi),(%dx)
and    %dh,0x79(%ebx)
jae    8096a42 <_IO_stdin_used+0x73e>
gs
insl   (%dx),%es:(%edi)
sub    $0x20737562,%eax
popa
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8096a46 <_IO_stdin_used+0x742>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%edi)
je     8096a4c <_IO_stdin_used+0x748>
and    %ch,0x6f(%esi)
and    %dh,0x73(%ebp)
gs
jb     80969f7 <_IO_stdin_used+0x6f3>
add    %al,(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     8096a5c <_IO_stdin_used+0x758>
gs
fs
gs
jae    8096a67 <_IO_stdin_used+0x763>
je     8096a6d <_IO_stdin_used+0x769>
jo     8096a2e <_IO_stdin_used+0x72a>
inc    %esp
inc    %edx
jne    8096a77 <_IO_stdin_used+0x773>
cs
inc    %ebp
jb     8096a7a <_IO_stdin_used+0x776>
outsl  %ds:(%esi),(%dx)
jb     8096a39 <_IO_stdin_used+0x735>
push   %ebx
jo     8096a6f <_IO_stdin_used+0x76b>
ja     8096a7e <_IO_stdin_used+0x77a>
cs
inc    %esi
imul   $0x6c61766e,0x49(%ebp,%eiz,2),%ebp
imul   $0x63410000,0x0(%eax,%eax,1),%esp
je     8096a8d <_IO_stdin_used+0x789>
jbe    8096a87 <_IO_stdin_used+0x783>
je     8096a91 <_IO_stdin_used+0x78d>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%bp,%di)
jb     8096aa5 <_IO_stdin_used+0x7a1>
imul   $0x6d616e20,0x65(%ebx),%esp
gs
cmp    $0x27732527,%eax
and    %ch,(%eax)
jne    8096ab3 <_IO_stdin_used+0x7af>
imul   $0x72657320,0x67(%esi),%ebp
jbe    8096ab2 <_IO_stdin_used+0x7ae>
arpl   %sp,0x68(%ebp)
gs
insb   (%dx),%es:(%edi)
jo     8096ab5 <_IO_stdin_used+0x7b1>
jb     8096a7b <_IO_stdin_used+0x777>
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8096acb <_IO_stdin_used+0x7c7>
and    %dh,0x65(%ebx)
jb     8096ae1 <_IO_stdin_used+0x7dd>
imul   $0x3a732520,0x65(%ebx),%esp
and    %ah,0x73
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8096ae9 <_IO_stdin_used+0x7e5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%esi)
popa
and    %dh,0x79(%ebx)
jae    8096aff <_IO_stdin_used+0x7fb>
gs
insl   (%dx),%es:(%edi)
and    %ah,%fs:0x61(%esi)
imul   $0x726f6620,0x64(%ebp,%eiz,2),%ebp
and    %dh,0x6e(%ebp)
imul   $0x3a277325,0x27(%eax,%eiz,1),%esi
and    %ah,0xec7d0073
add    $0x8,%al
jge    8096a9a <_IO_stdin_used+0x796>
add    $0x8,%al
pusha
in     (%dx),%al
add    $0x8,%al
jge    8096aa2 <_IO_stdin_used+0x79e>
add    $0x8,%al
inc    %ebx
in     (%dx),%al
add    $0x8,%al
es
in     (%dx),%al
add    $0x8,%al
or     %ebp,%esp
add    $0x8,%al
in     (%dx),%al
jmp    8096acb <_IO_stdin_used+0x7c7>
or     %cl,%bh
jmp    8096acf <_IO_stdin_used+0x7cb>
or     %dh,-0x6af7fb15(%edx)
jmp    8096ad7 <_IO_stdin_used+0x7d3>
or     %bh,-0x15(%eax)
add    $0x8,%al
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8096b49 <_IO_stdin_used+0x845>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %ah,0x69742073
insl   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x75(%edi)
je     8096af3 <_IO_stdin_used+0x7ef>
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
daa
je     8096b19 <_IO_stdin_used+0x815>
jae    8096b6f <_IO_stdin_used+0x86b>
popa
je     8096b1e <_IO_stdin_used+0x81a>
je     8096b68 <_IO_stdin_used+0x864>
and    %dh,%gs:0x65(%ebx)
jb     8096b7c <_IO_stdin_used+0x878>
imul   $0x6c696620,0x65(%ebx),%esp
or     %gs:(%eax),%al
inc    %esp
sub    $0x20535542,%eax
push   %ebx
gs
jb     8096b90 <_IO_stdin_used+0x88c>
imul   $0x65784500,0x65(%ebx),%esp
arpl   %ax,(%eax)
push   %ebx
jns    8096b99 <_IO_stdin_used+0x895>
je     8096b8d <_IO_stdin_used+0x889>
insl   (%dx),%es:(%edi)
fs
push   %ebx
gs
jb     8096ba4 <_IO_stdin_used+0x8a0>
imul   $0x65732e00,0x65(%ebx),%esp
jb     8096bad <_IO_stdin_used+0x8a9>
imul   $0x67726f00,0x65(%ebx),%esp
cs
data16
jb     8096ba7 <_IO_stdin_used+0x8a3>
gs
fs
gs
jae    8096bb2 <_IO_stdin_used+0x8ae>
je     8096bb8 <_IO_stdin_used+0x8b4>
jo     8096b79 <_IO_stdin_used+0x875>
jae    8096bc6 <_IO_stdin_used+0x8c2>
jae    8096bc3 <_IO_stdin_used+0x8bf>
gs
insl   (%dx),%es:(%edi)
xor    %eax,%fs:(%eax)
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8096bc5 <_IO_stdin_used+0x8c1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
push   %edx
gs
jno    8096bd7 <_IO_stdin_used+0x8d3>
gs
jae    8096bd9 <_IO_stdin_used+0x8d5>
add    %ch,(%edi)
outsl  %ds:(%esi),(%dx)
jb     8096bd1 <_IO_stdin_used+0x8cd>
das
data16
jb     8096bd3 <_IO_stdin_used+0x8cf>
gs
fs
gs
jae    8096bde <_IO_stdin_used+0x8da>
je     8096be4 <_IO_stdin_used+0x8e0>
jo     8096ba6 <_IO_stdin_used+0x8a2>
inc    %esp
inc    %edx
jne    8096bee <_IO_stdin_used+0x8ea>
add    %ch,0x72(%edi)
addr16
cs
data16
jb     8096be8 <_IO_stdin_used+0x8e4>
gs
fs
gs
jae    8096bf3 <_IO_stdin_used+0x8ef>
je     8096bf9 <_IO_stdin_used+0x8f5>
jo     8096bba <_IO_stdin_used+0x8b6>
inc    %esp
inc    %edx
jne    8096c03 <_IO_stdin_used+0x8ff>
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
push   %ebx
push   %esp
inc    %ecx
push   %edx
push   %esp
inc    %ebp
push   %edx
pop    %edi
inc    %ecx
inc    %esp
inc    %esp
push   %edx
inc    %ebp
push   %ebx
push   %ebx
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
push   %ebx
push   %esp
inc    %ecx
push   %edx
push   %esp
inc    %ebp
push   %edx
pop    %edi
inc    %edx
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
push   %ebx
inc    %ebp
push   %ebx
push   %ebx
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %edx
push   %ebp
push   %ebx
pop    %edi
inc    %ecx
inc    %esp
inc    %esp
push   %edx
inc    %ebp
push   %ebx
push   %ebx
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
push   %ebx
pop    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %ebp
pop    %edi
inc    %edx
push   %ebp
push   %ebx
pop    %edi
inc    %ecx
inc    %esp
inc    %esp
push   %edx
inc    %ebp
push   %ebx
push   %ebx
add    %ah,0x73253d73
add    %al,0x63(%ecx)
je     8096c60 <_IO_stdin_used+0x95c>
jbe    8096c5a <_IO_stdin_used+0x956>
je     8096c64 <_IO_stdin_used+0x960>
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%bp,%di)
jb     8096c78 <_IO_stdin_used+0x974>
imul   $0x6d616e20,0x65(%ebx),%esp
gs
cmp    $0x27732527,%eax
add    %ah,0x65662f73
popa
je     8096c8d <_IO_stdin_used+0x989>
jb     8096c7f <_IO_stdin_used+0x97b>
jae    8096c4b <_IO_stdin_used+0x947>
bound  %esi,%fs:0x73(%ebp)
das
insl   (%dx),%es:(%edi)
popa
jae    8096c90 <_IO_stdin_used+0x98c>
add    %dh,0x6e(%ebp)
arpl   %bp,0x6e(%edi)
imul   $0x64,0x65(%esi),%bp
jae    8096c98 <_IO_stdin_used+0x994>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    8096ca2 <_IO_stdin_used+0x99e>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x73(%ecx,%ebp,2)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %dh,0x65(%edx)
jno    8096cc5 <_IO_stdin_used+0x9c1>
imul   $0x4c410064,0x65(%edx),%esi
dec    %esp
dec    %edi
push   %edi
inc    %ebp
inc    %esp
add    %al,0x4e(%ebp,%eax,2)
dec    %ecx
inc    %ebp
inc    %esp
add    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     8096cd5 <_IO_stdin_used+0x9d1>
popa
imul   $0x6874656d,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jb     8096cdb <_IO_stdin_used+0x9d7>
je     8096ced <_IO_stdin_used+0x9e9>
jb     8096ce8 <_IO_stdin_used+0x9e4>
add    %ah,0x72(%ebp)
jb     8096cee <_IO_stdin_used+0x9ea>
jb     8096ce0 <_IO_stdin_used+0x9dc>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x65(%eax)
gs
jb     8096cea <_IO_stdin_used+0x9e6>
jo     8096cf6 <_IO_stdin_used+0x9f2>
add    %dh,%fs:0x65(%eax)
gs
jb     8096cf3 <_IO_stdin_used+0x9ef>
jo     8096d08 <_IO_stdin_used+0xa04>
outsl  %ds:(%esi),(%dx)
imul   $0x6570,0x0(%ebp,%eiz,2),%bp
gs
jb     8096d00 <_IO_stdin_used+0x9fc>
imul   $0x6165006f,0x66(%esi),%ebp
jbe    8096d0f <_IO_stdin_used+0xa0b>
jae    8096d10 <_IO_stdin_used+0xa0c>
jb     8096d1d <_IO_stdin_used+0xa19>
jo     8096cb0 <_IO_stdin_used+0x9ac>
dec    %ebp
outsl  %ds:(%esi),(%dx)
fs and %ah,%fs:%gs:0x74(%ecx)
je     8096d2b <_IO_stdin_used+0xa27>
imul   $0x6f206574,0x75(%edx),%esp
outsb  %ds:(%esi),(%dx)
and    %bh,(%ecx,%eiz,2)
jo     8096d36 <_IO_stdin_used+0xa32>
popa
jb     8096d36 <_IO_stdin_used+0xa32>
outsl  %ds:(%esi),(%dx)
jb     8096d0a <_IO_stdin_used+0xa06>
and    %ch,0x75(%ebp)
jae    8096d45 <_IO_stdin_used+0xa41>
and    %ch,0x61(%eax)
jbe    8096d3b <_IO_stdin_used+0xa37>
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    8096d41 <_IO_stdin_used+0xa3d>
and    %ah,(%edx)
jb     8096d45 <_IO_stdin_used+0xa41>
jno    8096d57 <_IO_stdin_used+0xa53>
imul   $0x202c2264,0x65(%edx),%esi
and    0x6e(%ebp),%ah
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    (%eax),%ah
outsl  %ds:(%esi),(%dx)
jb     8096d16 <_IO_stdin_used+0xa12>
and    0x73(%ecx,%ebp,2),%ah
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    (%eax,%eiz,1),%ch
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8096d26 <_IO_stdin_used+0xa22>
and    0x2273,%ah
inc    %ebp
jb     8096d81 <_IO_stdin_used+0xa7d>
outsl  %ds:(%esi),(%dx)
jb     8096d32 <_IO_stdin_used+0xa2e>
addr16
gs
je     8096d8a <_IO_stdin_used+0xa86>
imul   $0x70704120,0x67(%esi),%ebp
inc    %ecx
jb     8096d8d <_IO_stdin_used+0xa89>
outsl  %ds:(%esi),(%dx)
jb     8096d43 <_IO_stdin_used+0xa3f>
arpl   %bp,0x6e(%edi)
je     8096d8d <_IO_stdin_used+0xa89>
js     8096d9e <_IO_stdin_used+0xa9a>
and    %ch,0x66(%edi)
and    %ah,0x75(%edx)
jae    8096d6c <_IO_stdin_used+0xa68>
and    %ah,0xa73
inc    %ecx
jo     8096dab <_IO_stdin_used+0xaa7>
inc    %ecx
jb     8096dab <_IO_stdin_used+0xaa7>
outsl  %ds:(%esi),(%dx)
jb     8096d61 <_IO_stdin_used+0xa5d>
insl   (%dx),%es:(%edi)
gs imul $0x206e6f69,%fs:%gs:0x74(%ecx),%esp
20
jb     8096db2 <_IO_stdin_used+0xaae>
jno    8096dc4 <_IO_stdin_used+0xac0>
imul   $0x75622064,0x65(%edx),%esi
je     8096d78 <_IO_stdin_used+0xa74>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8096d7c <_IO_stdin_used+0xa78>
jo     8096dd0 <_IO_stdin_used+0xacc>
gs
jae    8096dc6 <_IO_stdin_used+0xac2>
outsb  %ds:(%esi),(%dx)
je     8096d6e <_IO_stdin_used+0xa6a>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
jb     8096ddd <_IO_stdin_used+0xad9>
outsl  %ds:(%esi),(%dx)
jb     8096d8e <_IO_stdin_used+0xa8a>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x73756220,0x67(%esi),%ebp
and    %al,0x70(%ecx)
jo     8096dc2 <_IO_stdin_used+0xabe>
jb     8096df0 <_IO_stdin_used+0xaec>
outsl  %ds:(%esi),(%dx)
jb     8096da6 <_IO_stdin_used+0xaa2>
arpl   %bp,0x6e(%edi)
imul   $0x656d,0x65(%esi),%bp
outsb  %ds:(%esi),(%dx)
je     8096d9c <_IO_stdin_used+0xa98>
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     8096dc2 <_IO_stdin_used+0xabe>
jae    8096e13 <_IO_stdin_used+0xb0f>
arpl   %bp,0x65(%ebx)
je     8096dc9 <_IO_stdin_used+0xac5>
imul   $0x6564,0x20(%ebp,%eiz,2),%bp
jae    8096e15 <_IO_stdin_used+0xb11>
jb     8096e1d <_IO_stdin_used+0xb19>
jo     8096e2a <_IO_stdin_used+0xb26>
outsl  %ds:(%esi),(%dx)
jb     8096dd9 <_IO_stdin_used+0xad5>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     8096df6 <_IO_stdin_used+0xaf2>
inc    %ecx
jo     8096e49 <_IO_stdin_used+0xb45>
inc    %ecx
jb     8096e49 <_IO_stdin_used+0xb45>
outsl  %ds:(%esi),(%dx)
jb     8096dff <_IO_stdin_used+0xafb>
arpl   %bp,0x6e(%edi)
imul   $0x656d,0x65(%esi),%bp
outsb  %ds:(%esi),(%dx)
je     8096e0b <_IO_stdin_used+0xb07>
imul   $0x616d726f,0x66(%esi),%ebp
je     8096e5d <_IO_stdin_used+0xb59>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     8096e21 <_IO_stdin_used+0xb1d>
jo     8096e68 <_IO_stdin_used+0xb64>
gs
jb     8096e40 <_IO_stdin_used+0xb3c>
and    %ah,0xa73
popa
jo     8096e7f <_IO_stdin_used+0xb7b>
popa
jb     8096e7f <_IO_stdin_used+0xb7b>
outsl  %ds:(%esi),(%dx)
jb     8096e52 <_IO_stdin_used+0xb4e>
and    0x6f202273,%ah
jo     8096e82 <_IO_stdin_used+0xb7e>
jb     8096e80 <_IO_stdin_used+0xb7c>
je     8096e8a <_IO_stdin_used+0xb86>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    $0x75626422,%eax
jae    8096e89 <_IO_stdin_used+0xb85>
and    $0x25202273,%eax
jae    8096e3b <_IO_stdin_used+0xb37>
add    %al,(%eax)
add    %dl,0x65(%eax,%ebp,2)
and    %dh,0x69(%eax)
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x65202273,%eax
js     8096eb2 <_IO_stdin_used+0xbae>
jae    8096ebf <_IO_stdin_used+0xbbb>
jae    8096e79 <_IO_stdin_used+0xb75>
and    %ch,0x66(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebp)
jae    8096ecc <_IO_stdin_used+0xbc8>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    8096e81 <_IO_stdin_used+0xb7d>
imul   $0x20746f6e,0x20(%ebx),%esi
jb     8096edf <_IO_stdin_used+0xbdb>
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6572202c,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8096edc <_IO_stdin_used+0xbd8>
and    %dh,0x69(%eax,%ebp,2)
jae    8096e9d <_IO_stdin_used+0xb99>
imul   $0x0,0x0(%ebp,%eiz,2),%bp
push   %eax
jb     8096ef0 <_IO_stdin_used+0xbec>
outsb  %ds:(%esi),(%dx)
je     8096ef3 <_IO_stdin_used+0xbef>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%di)
jae    8096f04 <_IO_stdin_used+0xc00>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    8096eb9 <_IO_stdin_used+0xbb5>
popa
fs
fs
jb     8096f03 <_IO_stdin_used+0xbff>
jae    8096f13 <_IO_stdin_used+0xc0f>
cmp    (%eax),%ah
imul   $0x7720746f,%fs:0x6e(%eax,%eiz,1),%esp
77
jb     8096f16 <_IO_stdin_used+0xc12>
je     8096f14 <_IO_stdin_used+0xc10>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x79(%edx)
je     8096f1d <_IO_stdin_used+0xc19>
jae    8096ec4 <_IO_stdin_used+0xbc0>
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8096f2c <_IO_stdin_used+0xc28>
and    %ch,%fs:0x6f(%esi)
je     8096ee6 <_IO_stdin_used+0xbe2>
addr16
gs
je     8096eea <_IO_stdin_used+0xbe6>
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x6e(%ecx)
and    %al,%fs:0x49(%edi)
inc    %esp
and    %ah,0x6f(%esi)
jb     8096efa <_IO_stdin_used+0xbf6>
jne    8096f4f <_IO_stdin_used+0xc4b>
gs
jb     8096f4d <_IO_stdin_used+0xc49>
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x53002273,%eax
inc    %ebp
dec    %esp
imul   $0x6e652078,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    %ah,0x75(%edx)
je     8096f1c <_IO_stdin_used+0xc18>
inc    %ecx
push   %esi
inc    %ebx
and    %ch,0x6e(%ecx)
imul   $0x617a696c,0x61(%ecx,%ebp,2),%esi
je     8096f75 <_IO_stdin_used+0xc71>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
imul   $0x6863203b,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,%gs:0x20(%ebx)
jae    8096f98 <_IO_stdin_used+0xc94>
jae    8096f95 <_IO_stdin_used+0xc91>
gs
insl   (%dx),%es:(%edi)
and    %ch,0x67(%edi,%ebp,2)
or     (%eax),%al
add    %al,(%eax)
add    %al,0x70(%ecx)
jo     8096f71 <_IO_stdin_used+0xc6d>
jb     8096f9f <_IO_stdin_used+0xc9b>
outsl  %ds:(%esi),(%dx)
jb     8096f55 <_IO_stdin_used+0xc51>
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    %ah,0x75(%edx)
je     8096f61 <_IO_stdin_used+0xc5d>
data16
jne    8096fb0 <_IO_stdin_used+0xcac>
insb   (%dx),%es:(%edi)
and    %ch,0x6e(%ecx)
imul   $0x617a696c,0x61(%ecx,%ebp,2),%esi
je     8096fbb <_IO_stdin_used+0xcb7>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x61(%esi)
imul   $0x6863203b,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,%gs:0x20(%ebx)
jae    8096fde <_IO_stdin_used+0xcda>
jae    8096fdb <_IO_stdin_used+0xcd7>
gs
insl   (%dx),%es:(%edi)
and    %ch,0x67(%edi,%ebp,2)
or     (%eax),%al
add    %al,0x70(%ecx)
jo     8096fb5 <_IO_stdin_used+0xcb1>
jb     8096fe3 <_IO_stdin_used+0xcdf>
outsl  %ds:(%esi),(%dx)
jb     8096f99 <_IO_stdin_used+0xc95>
inc    %esp
sub    $0x20737542,%eax
insl   (%dx),%es:(%edi)
gs imul $0x206e6f69,%fs:%gs:0x74(%ecx),%esp
20
imul   $0x62616e65,0x20(%ebx),%esi
insb   (%dx),%es:(%edi)
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8097010 <_IO_stdin_used+0xd0c>
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     809701d <_IO_stdin_used+0xd19>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0x25000073,%eax
jae    8096feb <_IO_stdin_used+0xce7>
and    %ah,0x616d2064
je     809702a <_IO_stdin_used+0xd26>
push   $0x72206465
jne    809703a <_IO_stdin_used+0xd36>
gs
jae    809700c <_IO_stdin_used+0xd08>
and    %dh,0x70(%ecx,%edi,2)
gs
cmp    $0x22732522,%eax
sub    $0x20,%al
jae    8097044 <_IO_stdin_used+0xd40>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     8097021 <_IO_stdin_used+0xd1d>
and    0x28202273,%ah
and    $0x69202973,%eax
outsb  %ds:(%esi),(%dx)
je     8097057 <_IO_stdin_used+0xd53>
jb     809705a <_IO_stdin_used+0xd56>
popa
arpl   %sp,0x3d(%ebp)
and    0x6d202273,%ah
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
cmp    $0x22732522,%eax
and    %ah,0x72(%ebp)
jb     809707c <_IO_stdin_used+0xd78>
jb     809702f <_IO_stdin_used+0xd2b>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x22732522,%eax
and    %dh,0x65(%edx)
jno    8097092 <_IO_stdin_used+0xd8e>
gs
jae    8097094 <_IO_stdin_used+0xd90>
gs
fs
pop    %edi
jb     809708a <_IO_stdin_used+0xd86>
jo     8097093 <_IO_stdin_used+0xd8f>
jns    8097066 <_IO_stdin_used+0xd62>
and    0x64202264,%ah
gs
jae    80970a6 <_IO_stdin_used+0xda2>
imul   $0x6e6f6974,0x61(%esi),%ebp
cmp    $0x22732522,%eax
and    %ch,(%eax)
and    $0x4d002973,%eax
gs
jae    80970bb <_IO_stdin_used+0xdb7>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    8097070 <_IO_stdin_used+0xd6c>
ja     80970bb <_IO_stdin_used+0xdb7>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x6f(%esi)
je     8097079 <_IO_stdin_used+0xd75>
popa
arpl   %sp,0x65(%ebx)
jo     80970d3 <_IO_stdin_used+0xdcf>
and    %ch,0x65(%ebp)
jae    80970d7 <_IO_stdin_used+0xdd3>
popa
addr16
gs
jae    8097089 <_IO_stdin_used+0xd85>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x70(%ecx,%edi,2)
or     %gs:(%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     80970e6 <_IO_stdin_used+0xde2>
cs
data16
jb     80970e8 <_IO_stdin_used+0xde4>
gs
fs
gs
jae    80970f3 <_IO_stdin_used+0xdef>
je     80970f9 <_IO_stdin_used+0xdf5>
jo     80970ba <_IO_stdin_used+0xdb6>
inc    %esp
inc    %edx
jne    8097103 <_IO_stdin_used+0xdff>
cs
inc    %ebp
jb     8097106 <_IO_stdin_used+0xe02>
outsl  %ds:(%esi),(%dx)
jb     80970c5 <_IO_stdin_used+0xdc1>
inc    %ecx
arpl   %sp,0x65(%ebx)
jae    8097110 <_IO_stdin_used+0xe0c>
inc    %esp
outsb  %gs:(%esi),(%dx)
imul   $0x206e4100,0x64(%ebp),%esp
push   %ebx
inc    %ebp
dec    %esp
imul   $0x6f702078,0x75(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x65727020,0x79(%ebx),%esp
jbe    8097120 <_IO_stdin_used+0xe1c>
outsb  %ds:(%esi),(%dx)
je     8097131 <_IO_stdin_used+0xe2d>
and    %dh,0x69(%eax,%ebp,2)
jae    80970e4 <_IO_stdin_used+0xde0>
jae    809712b <_IO_stdin_used+0xe27>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     80970eb <_IO_stdin_used+0xde7>
data16
jb     809713d <_IO_stdin_used+0xe39>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x69687420,%fs:0x67(%esi),%ebp
jae    80970fd <_IO_stdin_used+0xdf9>
insl   (%dx),%es:(%edi)
gs
jae    8097154 <_IO_stdin_used+0xe50>
popa
and    %dh,%gs:0x6f(%si)
and    %dh,0x69(%eax,%ebp,2)
jae    809710d <_IO_stdin_used+0xe09>
jb     8097154 <_IO_stdin_used+0xe50>
arpl   %bp,0x70(%ecx)
imul   $0x41000074,0x6e(%ebp),%esp
outsb  %ds:(%esi),(%dx)
and    %al,0x70(%ecx)
jo     8097140 <_IO_stdin_used+0xe3c>
jb     809716e <_IO_stdin_used+0xe6a>
outsl  %ds:(%esi),(%dx)
jb     8097124 <_IO_stdin_used+0xe20>
jo     8097175 <_IO_stdin_used+0xe71>
insb   (%dx),%es:(%edi)
imul   $0x65727020,0x79(%ebx),%esp
jbe    8097175 <_IO_stdin_used+0xe71>
outsb  %ds:(%esi),(%dx)
je     8097186 <_IO_stdin_used+0xe82>
and    %dh,0x69(%eax,%ebp,2)
jae    8097139 <_IO_stdin_used+0xe35>
jae    8097180 <_IO_stdin_used+0xe7c>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     8097140 <_IO_stdin_used+0xe3c>
data16
jb     8097192 <_IO_stdin_used+0xe8e>
insl   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x69687420,%fs:0x67(%esi),%ebp
jae    8097152 <_IO_stdin_used+0xe4e>
insl   (%dx),%es:(%edi)
gs
jae    80971a9 <_IO_stdin_used+0xea5>
popa
and    %dh,%gs:0x6f(%si)
and    %dh,0x69(%eax,%ebp,2)
jae    8097162 <_IO_stdin_used+0xe5e>
jb     80971a9 <_IO_stdin_used+0xea5>
arpl   %bp,0x70(%ecx)
imul   $0x6c430074,0x6e(%ebp),%esp
imul   $0x72742074,0x6e(%ebp),%esp
imul   $0x206f7420,0x64(%ebp),%esp
jae    80971c3 <_IO_stdin_used+0xebf>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20(%ecx)
insl   (%dx),%es:(%edi)
gs
jae    80971da <_IO_stdin_used+0xed6>
popa
and    %ch,%gs:0x74(%bx)
push   $0x74207265
push   $0x25206e61
jae    8097199 <_IO_stdin_used+0xe95>
ja     80971e4 <_IO_stdin_used+0xee0>
je     80971e5 <_IO_stdin_used+0xee1>
outsl  %ds:(%esi),(%dx)
jne    80971f4 <_IO_stdin_used+0xef0>
and    %ah,0x65(%edx)
imul   $0x67657220,0x67(%esi),%ebp
imul   $0x64657265,0x74(%ebx),%esi
add    %al,(%eax)
add    %dl,0x65(%edx)
push   $0x65
arpl   %si,0x64(%ebp,%eiz,2)
cmp    (%eax),%ah
fs
gs
jae    8097216 <_IO_stdin_used+0xf12>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ch,0x61(%eax)
jae    80971ce <_IO_stdin_used+0xeca>
popa
and    %ah,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
jae    809722c <_IO_stdin_used+0xf28>
popa
and    %dh,%gs:0x75(%bx,%di)
gs
jne    8097227 <_IO_stdin_used+0xf23>
add    %bh,(%ebx)
add    %bl,0x73(%ebx)
jns    809723c <_IO_stdin_used+0xf38>
je     8097230 <_IO_stdin_used+0xf2c>
insl   (%dx),%es:(%edi)
pop    %ebp
and    %al,(%eax)
pop    %ebx
jae    8097237 <_IO_stdin_used+0xf33>
jae    8097247 <_IO_stdin_used+0xf43>
imul   $0x65520020,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs gs and %ah,%fs:%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8097256 <_IO_stdin_used+0xf52>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,(%eax)
bound  %esi,0x73(%ebp)
sub    %eax,(%eax)
sub    %dh,0x6e(%ebp)
jae    8097260 <_IO_stdin_used+0xf5c>
je     8097226 <_IO_stdin_used+0xf22>
add    %cl,0x65(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %dl,0x65(%edx)
push   $0x65
arpl   %si,0x64(%ebp,%eiz,2)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x65(%ebp)
jae    8097289 <_IO_stdin_used+0xf85>
popa
add    %dl,%gs:0x6f(%bx)
jne    809728a <_IO_stdin_used+0xf86>
and    %dh,%fs:0x65(%edx)
push   $0x65
arpl   %si,0x6d(%eax,%eiz,1)
gs
jae    809729e <_IO_stdin_used+0xf9a>
popa
add    %dl,%gs:0x65(%bp,%si)
push   $0x65
arpl   %si,0x64(%ebp,%eiz,2)
and    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    80972a4 <_IO_stdin_used+0xfa0>
and    %ch,0x65(%ebp)
jae    80972b7 <_IO_stdin_used+0xfb3>
popa
add    %al,%gs:0x74(%bx,%di)
je     80972be <_IO_stdin_used+0xfba>
imul   $0x22206574,0x75(%edx),%esp
and    $0x72202273,%eax
gs
jo     80972c0 <_IO_stdin_used+0xfbc>
popa
je     80972c3 <_IO_stdin_used+0xfbf>
and    %dh,%fs:0x69(%edi,%esi,2)
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %bh,%gs:0x65203e73(,%eiz,1)
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809727f <_IO_stdin_used+0xf7b>
add    %al,0x74(%ecx)
je     80972f6 <_IO_stdin_used+0xff2>
imul   $0x22206574,0x75(%edx),%esp
and    $0x69202273,%eax
jae    80972b2 <_IO_stdin_used+0xfae>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ch,0x6e(%edi)
and    %bh,0x65203e73(,%eiz,1)
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80972ca <_IO_stdin_used+0xfc6>
imul   $0x73696874,0x20(%esi),%ebp
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809731c <_IO_stdin_used+0x1018>
js     809732d <_IO_stdin_used+0x1029>
add    %al,(%eax)
add    %al,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80972e4 <_IO_stdin_used+0xfe0>
cmp    $0x25,%al
jae    8097306 <_IO_stdin_used+0x1002>
and    %ch,0x75(%ebp)
jae    8097341 <_IO_stdin_used+0x103d>
and    %ch,0x61(%eax)
jbe    8097337 <_IO_stdin_used+0x1033>
and    %ch,0x6e(%edi)
and    %ch,%gs:0x72(%edi)
and    %ch,0x6f(%ebp)
jb     8097343 <_IO_stdin_used+0x103f>
and    %ah,0x74(%ecx)
je     8097355 <_IO_stdin_used+0x1051>
imul   $0x736574,0x75(%edx),%esp
add    %al,(%eax)
dec    %edi
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097317 <_IO_stdin_used+0x1013>
cmp    $0x25,%al
jae    8097339 <_IO_stdin_used+0x1035>
sub    $0x20,%al
imul   $0x20756f79,0x20(%esi),%esp
jae    8097376 <_IO_stdin_used+0x1072>
arpl   %bp,%gs:0x66(%ecx)
jns    809732c <_IO_stdin_used+0x1028>
popa
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %bh,0x6f(%ecx)
jne    8097339 <_IO_stdin_used+0x1035>
insl   (%dx),%es:(%edi)
jne    809738f <_IO_stdin_used+0x108b>
je     809733e <_IO_stdin_used+0x103a>
jae    8097390 <_IO_stdin_used+0x108c>
arpl   %bp,%gs:0x66(%ecx)
jns    8097346 <_IO_stdin_used+0x1042>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
je     8097392 <_IO_stdin_used+0x108e>
jb     8097395 <_IO_stdin_used+0x1091>
popa
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
jb     8097356 <_IO_stdin_used+0x1052>
popa
and    %dh,0x61(%eax)
je     80973a4 <_IO_stdin_used+0x10a0>
and    %cl,%cs:0x65(%ebx)
gs
jo     8097363 <_IO_stdin_used+0x105f>
imul   $0x646e696d,0x20(%esi),%ebp
and    %dh,0x61(%eax,%ebp,2)
je     8097370 <_IO_stdin_used+0x106c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8097374 <_IO_stdin_used+0x1070>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x65(%ebp)
jae    80973cf <_IO_stdin_used+0x10cb>
popa
addr16
gs
jae    8097381 <_IO_stdin_used+0x107d>
push   $0x20657661
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
je     80973d2 <_IO_stdin_used+0x10ce>
jb     80973d5 <_IO_stdin_used+0x10d1>
popa
arpl   %sp,0x20(%ebp)
imul   $0x2e64,0x6c(%ebp),%sp
add    %al,(%eax)
add    %cl,0x6e(%ecx)
jbe    80973e1 <_IO_stdin_used+0x10dd>
insb   (%dx),%es:(%edi)
imul   $0x69626d6f,0x63(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
popa
je     80973f6 <_IO_stdin_used+0x10f2>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %ah,0x74(%ecx)
je     8097409 <_IO_stdin_used+0x1105>
imul   $0x20736574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80973c9 <_IO_stdin_used+0x10c5>
cmp    $0x25,%al
jae    80973eb <_IO_stdin_used+0x10e7>
add    %al,(%eax)
add    %al,0x61(%edx)
and    %dh,%fs:0x61(%esi)
insb   (%dx),%es:(%edi)
jne    809741e <_IO_stdin_used+0x111a>
and    %ah,(%edx)
and    $0x66202273,%eax
outsl  %ds:(%esi),(%dx)
jb     80973e3 <_IO_stdin_used+0x10df>
and    $0x74612073,%eax
je     809743c <_IO_stdin_used+0x1138>
imul   $0x202c6574,0x75(%edx),%esp
insl   (%dx),%es:(%edi)
jne    8097447 <_IO_stdin_used+0x1143>
je     80973f6 <_IO_stdin_used+0x10f2>
bound  %esp,0x20(%ebp)
je     809744d <_IO_stdin_used+0x1149>
jne    8097442 <_IO_stdin_used+0x113e>
and    %ch,0x72(%edi)
and    %ah,0x61(%esi)
insb   (%dx),%es:(%edi)
jae    809744b <_IO_stdin_used+0x1147>
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x73(%ebp)
gs
jb     8097463 <_IO_stdin_used+0x115f>
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x6f202273,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097429 <_IO_stdin_used+0x1125>
cmp    $0x25,%al
jae    809744b <_IO_stdin_used+0x1147>
or     (%eax),%al
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    809748d <_IO_stdin_used+0x1189>
and    %ah,(%edx)
and    $0x6f202273,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809744e <_IO_stdin_used+0x114a>
cmp    $0x25,%al
jae    8097470 <_IO_stdin_used+0x116c>
or     (%eax),%al
cmp    $0x25,%al
jae    8097476 <_IO_stdin_used+0x1172>
and    %dh,0x75(%edx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8097465 <_IO_stdin_used+0x1161>
bound  %esp,0x20(%ebp)
jo     80974af <_IO_stdin_used+0x11ab>
jb     8097479 <_IO_stdin_used+0x1175>
jne    80974c1 <_IO_stdin_used+0x11bd>
gs
jb     8097471 <_IO_stdin_used+0x116d>
bound  %esp,0x63(%ebp)
popa
jne    80974ca <_IO_stdin_used+0x11c6>
and    %ch,%gs:0x74(%ecx)
and    %ch,0x61(%eax)
jae    8097480 <_IO_stdin_used+0x117c>
bound  %esi,0x73(%ebp)
sub    $0x626f6c67,%eax
popa
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
je     80974db <_IO_stdin_used+0x11d7>
arpl   %si,0x0(%ebx)
add    %al,(%eax)
add    %bh,0x72203e73(,%eiz,1)
jne    80974ec <_IO_stdin_used+0x11e8>
and    %ah,%gs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80974a9 <_IO_stdin_used+0x11a5>
bound  %esp,0x20(%ebp)
jo     80974f3 <_IO_stdin_used+0x11ef>
jb     80974bd <_IO_stdin_used+0x11b9>
addr16 jb 8097502 <_IO_stdin_used+0x11fe>
jne    8097505 <_IO_stdin_used+0x1201>
and    %ah,0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    8097502 <_IO_stdin_used+0x11fe>
and    %ch,0x74(%ecx)
and    %ch,0x61(%eax)
jae    80974c5 <_IO_stdin_used+0x11c1>
bound  %esi,0x73(%ebp)
sub    $0x626f6c67,%eax
popa
insb   (%dx),%es:(%edi)
and    %dh,0x65(%ebx)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
je     8097520 <_IO_stdin_used+0x121c>
arpl   %si,0x0(%ebx)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8097526 <_IO_stdin_used+0x1222>
cs
data16
jb     8097528 <_IO_stdin_used+0x1224>
gs
fs
gs
jae    8097533 <_IO_stdin_used+0x122f>
je     8097539 <_IO_stdin_used+0x1235>
jo     80974fa <_IO_stdin_used+0x11f6>
inc    %esp
inc    %edx
jne    8097543 <_IO_stdin_used+0x123f>
cs
inc    %ebp
jb     8097546 <_IO_stdin_used+0x1242>
outsl  %ds:(%esi),(%dx)
jb     8097505 <_IO_stdin_used+0x1201>
inc    %esi
imul   $0x6f46746f,0x4e(%ebp,%eiz,2),%ebp
jne    8097550 <_IO_stdin_used+0x124c>
add    %al,%fs:0x69(%ebx)
jb     809754b <_IO_stdin_used+0x1247>
jne    8097556 <_IO_stdin_used+0x1252>
popa
jb     809750d <_IO_stdin_used+0x1209>
imul   $0x6973756c,0x63(%esi),%ebp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x43002773,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8097578 <_IO_stdin_used+0x1274>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%eax)
jae    809753b <_IO_stdin_used+0x1237>
je     8097585 <_IO_stdin_used+0x1281>
and    %dh,%gs:0x72(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%si)
arpl   %si,0x6d(%ebp)
outsb  %gs:(%esi),(%dx)
je     809754e <_IO_stdin_used+0x124a>
je     80975a9 <_IO_stdin_used+0x12a5>
jo     8097597 <_IO_stdin_used+0x1293>
and    %ah,0x73
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097568 <_IO_stdin_used+0x1264>
cmp    $0x25,%al
jae    809758a <_IO_stdin_used+0x1286>
and    %ah,0x74(%ecx)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     8097575 <_IO_stdin_used+0x1271>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     80975cc <_IO_stdin_used+0x12c8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
imul   $0x5f65726f,0x6e(%edi),%esp
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
popa
je     80975f2 <_IO_stdin_used+0x12ee>
jb     80975e9 <_IO_stdin_used+0x12e5>
bound  %esi,0x74(%ebp)
and    %ch,%gs:0x75(%ebp)
jae    80975fd <_IO_stdin_used+0x12f9>
and    %ch,0x61(%eax)
jbe    80975f3 <_IO_stdin_used+0x12ef>
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80975f9 <_IO_stdin_used+0x12f5>
and    %ah,(%edx)
jns    80975fd <_IO_stdin_used+0x12f9>
jae    80975bc <_IO_stdin_used+0x12b8>
and    %ch,0x72(%edi)
and    %ah,(%edx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    (%eax),%al
add    %ch,0x66(%ecx)
pop    %edi
jae    809760e <_IO_stdin_used+0x130a>
insb   (%dx),%es:(%edi)
imul   $0x6e655f78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    %ah,0x74(%ecx)
je     809762d <_IO_stdin_used+0x1329>
imul   $0x6d206574,0x75(%edx),%esp
jne    8097637 <_IO_stdin_used+0x1333>
je     80975e6 <_IO_stdin_used+0x12e2>
push   $0x20657661
jbe    809762e <_IO_stdin_used+0x132a>
insb   (%dx),%es:(%edi)
jne    8097635 <_IO_stdin_used+0x1331>
and    %ah,(%edx)
jns    8097639 <_IO_stdin_used+0x1335>
jae    80975f8 <_IO_stdin_used+0x12f4>
and    %ch,0x72(%edi)
and    %ah,(%edx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    (%eax),%al
add    %dh,0x65(%ebx)
insb   (%dx),%es:(%edi)
imul   $0x6f725f78,0x75(%esi),%ebp
outsl  %ds:(%esi),(%dx)
je     809764c <_IO_stdin_used+0x1348>
jb     8097654 <_IO_stdin_used+0x1350>
insb   (%dx),%es:(%edi)
popa
je     809765c <_IO_stdin_used+0x1358>
jbe    809765a <_IO_stdin_used+0x1356>
and    %ah,0x74(%ecx)
je     809766c <_IO_stdin_used+0x1368>
imul   $0x6d206574,0x75(%edx),%esp
jne    8097676 <_IO_stdin_used+0x1372>
je     8097625 <_IO_stdin_used+0x1321>
push   $0x20657661
jbe    809766d <_IO_stdin_used+0x1369>
insb   (%dx),%es:(%edi)
jne    8097674 <_IO_stdin_used+0x1370>
and    %ah,(%edx)
jns    8097678 <_IO_stdin_used+0x1374>
jae    8097637 <_IO_stdin_used+0x1333>
and    %ch,0x72(%edi)
and    %ah,(%edx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    (%eax),%al
add    %al,(%eax)
cmp    $0x70,%al
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x6c65203e,0x79(%ebx),%esp
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097651 <_IO_stdin_used+0x134d>
insl   (%dx),%es:(%edi)
jne    80976a7 <_IO_stdin_used+0x13a3>
je     8097656 <_IO_stdin_used+0x1352>
push   $0x20657661
gs
js     809769f <_IO_stdin_used+0x139b>
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ch,%gs:0x66(%edi)
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
je     80976b5 <_IO_stdin_used+0x13b1>
js     80976c6 <_IO_stdin_used+0x13c2>
jl     80976c9 <_IO_stdin_used+0x13c5>
jae    80976bb <_IO_stdin_used+0x13b7>
jb     80976d4 <_IO_stdin_used+0x13d0>
addr16 jb 80976ca <_IO_stdin_used+0x13c6>
jne    80976cd <_IO_stdin_used+0x13c9>
jl     80976c0 <_IO_stdin_used+0x13bc>
je     80976c0 <_IO_stdin_used+0x13bc>
arpl   %bp,0x6e(%edi)
jae    80976d5 <_IO_stdin_used+0x13d1>
insb   (%dx),%es:(%edi)
sub    %esp,%gs:(%eax)
popa
je     80976e1 <_IO_stdin_used+0x13dd>
jb     80976d8 <_IO_stdin_used+0x13d4>
bound  %esi,0x74(%ebp)
gs
jae    8097675 <_IO_stdin_used+0x1371>
add    %al,(%eax)
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80976e2 <_IO_stdin_used+0x13de>
js     80976f3 <_IO_stdin_used+0x13ef>
and    %ah,0x74(%ecx)
je     80976f6 <_IO_stdin_used+0x13f2>
imul   $0x6f206574,0x75(%edx),%esp
outsb  %ds:(%esi),(%dx)
and    %bh,(%eax,%esi,2)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
imul   $0x756d203e,0x79(%ebx),%esp
jae    809770e <_IO_stdin_used+0x140a>
and    %ch,0x61(%eax)
jbe    8097704 <_IO_stdin_used+0x1400>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    809770e <_IO_stdin_used+0x140a>
and    %ah,(%edx)
fs
gs
popaw
jne    809771d <_IO_stdin_used+0x1419>
je     80976d5 <_IO_stdin_used+0x13d1>
and    %ch,0x72(%edi)
and    %ah,(%edx)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
je     809772e <_IO_stdin_used+0x142a>
jb     809773a <_IO_stdin_used+0x1436>
and    (%eax,%eiz,1),%ch
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80976e8 <_IO_stdin_used+0x13e4>
and    0x2273,%ah
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x73(%ebp)
gs
jb     809774b <_IO_stdin_used+0x1447>
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x69202273,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebp)
jae    8097760 <_IO_stdin_used+0x145c>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    8097715 <_IO_stdin_used+0x1411>
arpl   %bp,0x6e(%edi)
imul   $0x6172,0x75(%edi),%sp
je     8097769 <_IO_stdin_used+0x1465>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    8097789 <_IO_stdin_used+0x1485>
and    %ah,(%edx)
and    $0x69202273,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebp)
jae    8097799 <_IO_stdin_used+0x1495>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    809774e <_IO_stdin_used+0x144a>
arpl   %bp,0x6e(%edi)
imul   $0x6172,0x75(%edi),%sp
je     80977a2 <_IO_stdin_used+0x149e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
or     %gs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80977b6 <_IO_stdin_used+0x14b2>
and    %ah,(%edx)
and    $0x66202273,%eax
outsl  %ds:(%esi),(%dx)
jb     809777b <_IO_stdin_used+0x1477>
popa
je     80977bd <_IO_stdin_used+0x14b9>
arpl   %bp,0x6e(%edi)
jae    80977d2 <_IO_stdin_used+0x14ce>
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x6e(%ecx)
and    %ch,0x65(%ebp)
jae    80977e0 <_IO_stdin_used+0x14dc>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    8097795 <_IO_stdin_used+0x1491>
arpl   %bp,0x6e(%edi)
imul   $0x6172,0x75(%edi),%sp
je     80977e9 <_IO_stdin_used+0x14e5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %bh,%gs:(%esp,%ebp,2)
imul   $0x65203e74,0x69(%ebp),%ebp
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80977b8 <_IO_stdin_used+0x14b4>
insl   (%dx),%es:(%edi)
jne    809780e <_IO_stdin_used+0x150a>
je     80977bd <_IO_stdin_used+0x14b9>
push   $0x20657661
popa
and    %ah,(%edx)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %gs:(%eax),%ah
popa
je     8097822 <_IO_stdin_used+0x151e>
jb     8097819 <_IO_stdin_used+0x1515>
bound  %esi,0x74(%ebp)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %ebp
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80977e0 <_IO_stdin_used+0x14dc>
cmp    $0x25,%al
jae    8097802 <_IO_stdin_used+0x14fe>
and    %ch,0x6f(%esi)
je     80977e9 <_IO_stdin_used+0x14e5>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8097834 <_IO_stdin_used+0x1530>
and    %ch,%fs:0x6e(%ecx)
jae    809783e <_IO_stdin_used+0x153a>
fs and %bh,%fs:%gs:0x69203e73(,%eiz,1)
69
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8097854 <_IO_stdin_used+0x1550>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
inc    %ebp
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809781c <_IO_stdin_used+0x1518>
cmp    $0x61,%al
jae    8097873 <_IO_stdin_used+0x156f>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ecx)
je     809786b <_IO_stdin_used+0x1567>
and    %ch,%ds:0x75(%ebp)
jae    8097880 <_IO_stdin_used+0x157c>
and    %ch,0x61(%eax)
jbe    8097876 <_IO_stdin_used+0x1572>
and    %ah,0x74(%ecx)
je     8097888 <_IO_stdin_used+0x1584>
imul   $0x20736574,0x75(%edx),%esp
outsl  %ds:(%esi),(%dx)
ja     809788e <_IO_stdin_used+0x158a>
cmp    $0x65733c22,%eax
jb     809789d <_IO_stdin_used+0x1599>
imul   $0x656d616e,0x65(%ebx),%esp
and    %ds:(%eax),%ah
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809789f <_IO_stdin_used+0x159b>
js     80978b0 <_IO_stdin_used+0x15ac>
cmp    $0x65733c22,%eax
insb   (%dx),%es:(%edi)
imul   $0x6f632078,0x75(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     80978b1 <_IO_stdin_used+0x15ad>
js     80978c2 <_IO_stdin_used+0x15be>
and    %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809787c <_IO_stdin_used+0x1578>
cmp    $0x25,%al
jae    809789e <_IO_stdin_used+0x159a>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     8097888 <_IO_stdin_used+0x1584>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80978d3 <_IO_stdin_used+0x15cf>
and    %ch,%fs:0x6e(%ecx)
and    %dh,0x69(%eax,%ebp,2)
jae    8097898 <_IO_stdin_used+0x1594>
arpl   %bp,0x6e(%edi)
je     80978e2 <_IO_stdin_used+0x15de>
js     80978f3 <_IO_stdin_used+0x15ef>
add    %bl,0x4d(%eax)
dec    %esp
and    %dh,0x61(%eax)
jb     80978fb <_IO_stdin_used+0x15f7>
gs
jb     80978ab <_IO_stdin_used+0x15a7>
outsb  %gs:(%esi),(%dx)
fs gs and %ah,%fs:%gs:0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80978b9 <_IO_stdin_used+0x15b5>
ja     8097904 <_IO_stdin_used+0x1600>
je     8097905 <_IO_stdin_used+0x1601>
and    %ch,0x6f(%esi)
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80978c9 <_IO_stdin_used+0x15c5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x74(%ebx)
popa
arpl   %bp,0x0(%ebx)
add    %al,(%eax)
pop    %eax
dec    %ebp
dec    %esp
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80978e4 <_IO_stdin_used+0x15e0>
cmp    $0x25,%al
jae    8097906 <_IO_stdin_used+0x1602>
and    %ah,0x6e(%ebp)
fs gs and %ah,%fs:%gs:0x75(%edx)
je     80978f3 <_IO_stdin_used+0x15ef>
je     8097944 <_IO_stdin_used+0x1640>
jo     8097944 <_IO_stdin_used+0x1640>
outsl  %ds:(%esi),(%dx)
jae    809794e <_IO_stdin_used+0x164a>
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097903 <_IO_stdin_used+0x15ff>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x74(%ebx)
popa
arpl   %bp,0x20(%ebx)
ja     8097953 <_IO_stdin_used+0x164f>
jae    8097914 <_IO_stdin_used+0x1610>
cmp    $0x25,%al
jae    8097936 <_IO_stdin_used+0x1632>
add    %al,(%eax)
add    %al,(%eax)
pop    %eax
dec    %ebp
dec    %esp
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097928 <_IO_stdin_used+0x1624>
cmp    $0x25,%al
jae    809794a <_IO_stdin_used+0x1646>
and    %dh,0x61(%edi)
jae    8097931 <_IO_stdin_used+0x162d>
gs
js     8097984 <_IO_stdin_used+0x1680>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x20(%edi,%ebp,2)
push   $0x20657661
arpl   %bp,0x6e(%edi)
je     809798c <_IO_stdin_used+0x1688>
outsb  %ds:(%esi),(%dx)
je     809794a <_IO_stdin_used+0x1646>
imul   $0x20656469,0x73(%esi),%ebp
imul   $0x6d5f7861,0x6d(%eax,%eax,1),%esi
popa
je     809799f <_IO_stdin_used+0x169b>
push   $0x6c75725f
gs
jae    80979a3 <_IO_stdin_used+0x169f>
jo     80979ab <_IO_stdin_used+0x16a7>
jb     80979a7 <_IO_stdin_used+0x16a3>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
push   %esp
push   $0x20657265
imul   $0x6c206f6e,0x20(%ebx),%esi
imul   $0x61632074,0x69(%ebp),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:(%edx)
and    $0xa2273,%eax
add    %bh,(%esp,%ebp,2)
imul   $0x616e2074,0x69(%ebp),%ebp
insl   (%dx),%es:(%edi)
gs
cmp    $0x22732522,%eax
and    %ch,%ds:0x75(%ebp)
jae    80979fe <_IO_stdin_used+0x16fa>
and    %ah,0x65(%edx)
and    %ah,0x20(%ecx)
jo     8097a01 <_IO_stdin_used+0x16fd>
jae    80979fd <_IO_stdin_used+0x16f9>
je     80979ff <_IO_stdin_used+0x16fb>
jbe    80979fd <_IO_stdin_used+0x16f9>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
or     (%eax),%al
add    %al,(%eax)
add    %dl,0x78(%ebp,%eiz,2)
je     80979c9 <_IO_stdin_used+0x16c5>
arpl   %bp,0x6e(%edi)
je     8097a13 <_IO_stdin_used+0x170f>
outsb  %ds:(%esi),(%dx)
je     80979d1 <_IO_stdin_used+0x16cd>
outsl  %ds:(%esi),(%dx)
jne    8097a28 <_IO_stdin_used+0x1724>
jae    8097a1f <_IO_stdin_used+0x171b>
fs and %ch,%fs:%gs:0x66(%edi)
and    %ah,0x6e(%ecx)
jns    80979e0 <_IO_stdin_used+0x16dc>
pop    %eax
dec    %ebp
dec    %esp
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     80979ec <_IO_stdin_used+0x16e8>
imul   $0x666e6f63,0x20(%esi),%ebp
imul   $0x69746172,0x75(%edi),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %cl,0x6f(%esi)
and    %dh,0x78(%ebp,%eiz,2)
je     8097a0c <_IO_stdin_used+0x1708>
arpl   %bp,0x6e(%edi)
je     8097a56 <_IO_stdin_used+0x1752>
outsb  %ds:(%esi),(%dx)
je     8097a14 <_IO_stdin_used+0x1710>
gs
js     8097a67 <_IO_stdin_used+0x1763>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ch,0x6e(%ecx)
jae    8097a6a <_IO_stdin_used+0x1766>
fs and %bl,%fs:%gs:0x4d(%eax)
dec    %esp
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097a30 <_IO_stdin_used+0x172c>
and    $0x6e692073,%eax
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8097a8a <_IO_stdin_used+0x1786>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8097a9c <_IO_stdin_used+0x1798>
and    %ch,%fs:0x6f(%esi)
je     8097a56 <_IO_stdin_used+0x1752>
fs
gs
je     8097a9f <_IO_stdin_used+0x179b>
jb     8097aa9 <_IO_stdin_used+0x17a5>
imul   $0x4c455320,0x65(%esi),%ebp
imul   $0x6f702078,0x75(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x6f6f7220,0x79(%ebx),%esp
je     8097a74 <_IO_stdin_used+0x1770>
outsw  %ds:(%esi),(%dx)
jb     8097a78 <_IO_stdin_used+0x1774>
jb     8097abf <_IO_stdin_used+0x17bb>
insb   (%dx),%es:(%edi)
popa
je     8097ac7 <_IO_stdin_used+0x17c3>
jbe    8097ac5 <_IO_stdin_used+0x17c1>
and    %ch,0x6e(%ecx)
arpl   %bp,0x73(%ebp,%esi,2)
imul   $0x6e450000,0x6e(%edi),%ebp
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     8097ad9 <_IO_stdin_used+0x17d5>
jb     8097adb <_IO_stdin_used+0x17d7>
and    %ah,%fs:0x72(%ebp)
jb     8097aeb <_IO_stdin_used+0x17e7>
jb     8097a9e <_IO_stdin_used+0x179a>
daa
and    $0x77202773,%eax
push   $0x20656c69
jo     8097aec <_IO_stdin_used+0x17e8>
jb     8097b00 <_IO_stdin_used+0x17fc>
imul   $0x73252720,0x67(%esi),%ebp
daa
or     (%eax),%al
add    %bh,(%esp,%ebp,2)
imul   $0x616e2074,0x69(%ebp),%ebp
insl   (%dx),%es:(%edi)
gs
cmp    $0x22732522,%eax
and    %ah,%ds:0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097ad2 <_IO_stdin_used+0x17ce>
push   $0x69207361
outsb  %ds:(%esi),(%dx)
jbe    8097b1b <_IO_stdin_used+0x1817>
insb   (%dx),%es:(%edi)
imul   $0x65756c61,0x76(%eax,%eiz,1),%esp
and    %ch,(%eax)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     8097aef <_IO_stdin_used+0x17eb>
jo     8097b32 <_IO_stdin_used+0x182e>
jb     8097b46 <_IO_stdin_used+0x1842>
and    %ah,%gs:0x73(%ecx)
and    %ch,0x6e(%ecx)
je     8097b41 <_IO_stdin_used+0x183d>
addr16
gs
jb     8097b09 <_IO_stdin_used+0x1805>
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097b0c <_IO_stdin_used+0x1808>
cmp    $0x25,%al
jae    8097b2e <_IO_stdin_used+0x182a>
and    %dh,0x61(%edi)
jae    8097b15 <_IO_stdin_used+0x1811>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8097b19 <_IO_stdin_used+0x1815>
arpl   %bp,0x73(%edi,%ebp,2)
gs and %ch,%fs:%gs:0x6e(%ecx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8097b77 <_IO_stdin_used+0x1873>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8097b8c <_IO_stdin_used+0x1888>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x65(%esi)
gs
fs
jae    8097b51 <_IO_stdin_used+0x184d>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,%gs:0x72(%edi)
and    %ch,0x6f(%ebp)
jb     8097ba1 <_IO_stdin_used+0x189d>
and    %bh,(%esp,%ebp,2)
imul   $0x203e6e65,0x74(%ebx),%esi
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8097bc1 <_IO_stdin_used+0x18bd>
and    %ah,0x69(%edi)
jbe    8097bbc <_IO_stdin_used+0x18b8>
outsb  %ds:(%esi),(%dx)
and    %ah,0x64(%bx,%di)
fs
jb     8097bc0 <_IO_stdin_used+0x18bc>
jae    8097bd0 <_IO_stdin_used+0x18cc>
gs
jae    8097b60 <_IO_stdin_used+0x185c>
addr16 jb 8097bd2 <_IO_stdin_used+0x18ce>
jne    8097bd5 <_IO_stdin_used+0x18d1>
add    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
pop    %edi
jo     8097bde <_IO_stdin_used+0x18da>
imul   $0x6572,%gs:0x0(%eax),%di
arpl   %sp,0x69(%ebp)
jbe    8097bdd <_IO_stdin_used+0x18d9>
pop    %edi
jb     8097be0 <_IO_stdin_used+0x18dc>
jno    8097bf2 <_IO_stdin_used+0x18ee>
gs
jae    8097bf4 <_IO_stdin_used+0x18f0>
gs
fs
pop    %edi
jb     8097bea <_IO_stdin_used+0x18e6>
jo     8097bf3 <_IO_stdin_used+0x18ef>
jns    8097b89 <_IO_stdin_used+0x1885>
jae    8097bf0 <_IO_stdin_used+0x18ec>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
jb     8097bf5 <_IO_stdin_used+0x18f1>
jno    8097c07 <_IO_stdin_used+0x1903>
gs
jae    8097c09 <_IO_stdin_used+0x1905>
gs
fs
pop    %edi
jb     8097bff <_IO_stdin_used+0x18fb>
jo     8097c08 <_IO_stdin_used+0x1904>
jns    8097b9e <_IO_stdin_used+0x189a>
jb     8097c05 <_IO_stdin_used+0x1901>
arpl   %sp,0x69(%ebp)
jbe    8097c0a <_IO_stdin_used+0x1906>
pop    %edi
je     8097c21 <_IO_stdin_used+0x191d>
jo     8097c0f <_IO_stdin_used+0x190b>
add    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    8097c17 <_IO_stdin_used+0x1913>
pop    %edi
jo     8097c16 <_IO_stdin_used+0x1912>
je     8097c1f <_IO_stdin_used+0x191b>
add    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    8097c24 <_IO_stdin_used+0x1920>
pop    %edi
jae    8097c27 <_IO_stdin_used+0x1923>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     8097bc7 <_IO_stdin_used+0x18c3>
jb     8097c2e <_IO_stdin_used+0x192a>
arpl   %sp,0x69(%ebp)
jbe    8097c33 <_IO_stdin_used+0x192f>
pop    %edi
gs
jb     8097c44 <_IO_stdin_used+0x1940>
outsl  %ds:(%esi),(%dx)
jb     8097bd5 <_IO_stdin_used+0x18d1>
jb     8097c3c <_IO_stdin_used+0x1938>
arpl   %sp,0x69(%ebp)
jbe    8097c41 <_IO_stdin_used+0x193d>
pop    %edi
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %dh,0x65(%edx)
arpl   %sp,0x69(%ebp)
jbe    8097c50 <_IO_stdin_used+0x194c>
pop    %edi
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
jae    8097c5d <_IO_stdin_used+0x1959>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
je     8097c76 <_IO_stdin_used+0x1972>
jo     8097c64 <_IO_stdin_used+0x1960>
add    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
jo     8097c68 <_IO_stdin_used+0x1964>
je     8097c71 <_IO_stdin_used+0x196d>
add    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
fs
gs
jae    8097c87 <_IO_stdin_used+0x1983>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
gs
jb     8097c95 <_IO_stdin_used+0x1991>
outsl  %ds:(%esi),(%dx)
jb     8097c26 <_IO_stdin_used+0x1922>
jae    8097c8d <_IO_stdin_used+0x1989>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
inc    %edx
popa
and    %ch,%fs:0x65(%ebp)
jae    8097cbc <_IO_stdin_used+0x19b8>
popa
and    %dh,%gs:0x79(%si)
jo     8097cb6 <_IO_stdin_used+0x19b2>
and    %ah,(%edx)
and    $0x74002273,%eax
jb     8097ccf <_IO_stdin_used+0x19cb>
add    %ah,%gs:0x61(%esi)
insb   (%dx),%es:(%edi)
jae    8097cc6 <_IO_stdin_used+0x19c2>
add    %ah,0x75(%edx)
jae    8097cc9 <_IO_stdin_used+0x19c5>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x7973,0x0(%edi),%sp
jae    8097cdc <_IO_stdin_used+0x19d8>
outsl  %ds:(%esi),(%dx)
add    %ch,0x65(%bp,%di)
gs
jo     8097cd7 <_IO_stdin_used+0x19d3>
jne    8097ce7 <_IO_stdin_used+0x19e3>
popa
jae    8097ce8 <_IO_stdin_used+0x19e4>
add    %ch,0x73(%ecx,%ebp,2)
je     8097ce8 <_IO_stdin_used+0x19e4>
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%ecx)
je     8097cf1 <_IO_stdin_used+0x19ed>
add    %dh,0x65(%ebx)
jb     8097d04 <_IO_stdin_used+0x1a00>
imul   $0x706c6568,0x65(%ebx),%esp
gs
jb     8097c98 <_IO_stdin_used+0x1994>
imul   $0x6564756c,0x63(%esi),%ebp
imul   $0x6e617473,%fs:0x0(%edx),%esi
fs
popa
jb     8097d0f <_IO_stdin_used+0x1a0b>
pop    %edi
jae    8097d13 <_IO_stdin_used+0x1a0f>
jae    8097d23 <_IO_stdin_used+0x1a1f>
imul   $0x7265735f,0x6e(%edi),%ebp
jbe    8097d22 <_IO_stdin_used+0x1a1e>
arpl   %sp,0x64(%ebp)
imul   $0x61747300,0x73(%edx),%esi
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8097d2c <_IO_stdin_used+0x1a28>
pop    %edi
jae    8097d44 <_IO_stdin_used+0x1a40>
jae    8097d41 <_IO_stdin_used+0x1a3d>
gs
insl   (%dx),%es:(%edi)
pop    %edi
jae    8097d37 <_IO_stdin_used+0x1a33>
jb     8097d4a <_IO_stdin_used+0x1a46>
imul   $0x73726964,0x65(%ebx),%esp
add    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8097d41 <_IO_stdin_used+0x1a3d>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jns    8097d55 <_IO_stdin_used+0x1a51>
outsl  %ds:(%esi),(%dx)
jne    8097d5e <_IO_stdin_used+0x1a5a>
add    %dh,0x65(%ebx)
jb     8097d66 <_IO_stdin_used+0x1a62>
imul   $0x726964,0x65(%ebx),%esp
jae    8097d5e <_IO_stdin_used+0x1a5a>
insb   (%dx),%es:(%edi)
imul   $0x6f725f78,0x75(%esi),%ebp
outsl  %ds:(%esi),(%dx)
je     8097d63 <_IO_stdin_used+0x1a5f>
jb     8097d6b <_IO_stdin_used+0x1a67>
insb   (%dx),%es:(%edi)
popa
je     8097d73 <_IO_stdin_used+0x1a6f>
jbe    8097d71 <_IO_stdin_used+0x1a6d>
add    %ch,0x66(%ecx)
pop    %edi
jae    8097d77 <_IO_stdin_used+0x1a73>
insb   (%dx),%es:(%edi)
imul   $0x6e655f78,0x75(%esi),%ebp
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ch,0x67(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     8097d8b <_IO_stdin_used+0x1a87>
pop    %edi
insl   (%dx),%es:(%edi)
imul   $0x676e69,0x73(%ebx),%esi
imul   $0x6564756c,0x63(%esi),%ebp
add    %ah,0x74(%ecx)
pop    %edi
arpl   %bp,0x6e(%edi)
jae    8097dae <_IO_stdin_used+0x1aaa>
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     8097dac <_IO_stdin_used+0x1aa8>
js     8097dbd <_IO_stdin_used+0x1ab9>
add    %dh,0x6f(%eax)
insb   (%dx),%es:(%edi)
imul   $0x66656400,0x79(%ebx),%esp
popa
jne    8097dc3 <_IO_stdin_used+0x1abf>
je     8097d59 <_IO_stdin_used+0x1a55>
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
fs
popa
je     8097dcf <_IO_stdin_used+0x1acb>
jb     8097ddb <_IO_stdin_used+0x1ad7>
add    %ch,0x6d(%ecx,%ebp,2)
imul   $0x6e696c65,0x73(%eax,%eax,1),%esi
jne    8097de8 <_IO_stdin_used+0x1ae4>
add    %ch,0x6f(%ebp)
fs add %ah,%fs:%gs:0x70(%ecx)
jo     8097ddb <_IO_stdin_used+0x1ad7>
jb     8097de9 <_IO_stdin_used+0x1ae5>
outsl  %ds:(%esi),(%dx)
jb     8097d7f <_IO_stdin_used+0x1a7b>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8097d85 <_IO_stdin_used+0x1a81>
fs outsb %fs:%gs:(%esi),(%dx)
jns    8097d8a <_IO_stdin_used+0x1a86>
popa
jae    8097e00 <_IO_stdin_used+0x1afc>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ecx)
je     8097df8 <_IO_stdin_used+0x1af4>
add    %ch,0x61(%ebp)
js     8097df7 <_IO_stdin_used+0x1af3>
imul   $0x6e696d6f,0x63(%esi),%ebp
addr16 pop %edi
bound  %edi,0x74(%ecx)
gs
jae    8097da7 <_IO_stdin_used+0x1aa3>
insl   (%dx),%es:(%edi)
popa
js     8097e0a <_IO_stdin_used+0x1b06>
imul   $0x6e696d6f,0x63(%esi),%ebp
addr16 pop %edi
jne    8097e24 <_IO_stdin_used+0x1b20>
imul   $0x736466,0x5f(%eax),%edi
insl   (%dx),%es:(%edi)
popa
js     8097e20 <_IO_stdin_used+0x1b1c>
outsl  %ds:(%esi),(%dx)
jne    8097e38 <_IO_stdin_used+0x1b34>
outsl  %ds:(%si),(%dx)
imul   $0x7479625f,0x67(%esi),%ebp
gs
jae    8097dd0 <_IO_stdin_used+0x1acc>
insl   (%dx),%es:(%edi)
popa
js     8097e33 <_IO_stdin_used+0x1b2f>
outsl  %ds:(%esi),(%dx)
jne    8097e4b <_IO_stdin_used+0x1b47>
outsl  %ds:(%si),(%dx)
imul   $0x696e755f,0x67(%esi),%ebp
js     8097e41 <_IO_stdin_used+0x1b3d>
data16
fs
jae    8097de6 <_IO_stdin_used+0x1ae2>
insl   (%dx),%es:(%edi)
popa
js     8097e49 <_IO_stdin_used+0x1b45>
insl   (%dx),%es:(%edi)
gs
jae    8097e61 <_IO_stdin_used+0x1b5d>
popa
addr16
gs
pop    %edi
jae    8097e5d <_IO_stdin_used+0x1b59>
jp     8097e5b <_IO_stdin_used+0x1b57>
add    %ch,0x61(%ebp)
js     8097e5a <_IO_stdin_used+0x1b56>
insl   (%dx),%es:(%edi)
gs
jae    8097e72 <_IO_stdin_used+0x1b6e>
popa
addr16
gs
pop    %edi
jne    8097e73 <_IO_stdin_used+0x1b6f>
imul   $0x736466,0x5f(%eax),%edi
jae    8097e73 <_IO_stdin_used+0x1b6f>
jb     8097e86 <_IO_stdin_used+0x1b82>
imul   $0x6174735f,0x65(%ebx),%esp
jb     8097e8d <_IO_stdin_used+0x1b89>
pop    %edi
je     8097e85 <_IO_stdin_used+0x1b81>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    8097e95 <_IO_stdin_used+0x1b91>
add    %ah,0x75(%ecx)
je     8097e8e <_IO_stdin_used+0x1b8a>
pop    %edi
je     8097e92 <_IO_stdin_used+0x1b8e>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    8097ea2 <_IO_stdin_used+0x1b9e>
add    %dh,0x65(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x5f64665f,%fs:0x67(%esi),%ebp
je     8097ea5 <_IO_stdin_used+0x1ba1>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    8097eb5 <_IO_stdin_used+0x1bb1>
add    %dh,0x65(%edx)
jo     8097eb2 <_IO_stdin_used+0x1bae>
jns    8097ea7 <_IO_stdin_used+0x1ba3>
je     8097eb3 <_IO_stdin_used+0x1baf>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    8097ec3 <_IO_stdin_used+0x1bbf>
add    %ch,0x61(%ebp)
js     8097eb3 <_IO_stdin_used+0x1baf>
arpl   %bp,0x6d(%edi)
jo     8097ec5 <_IO_stdin_used+0x1bc1>
gs
je     8097ec1 <_IO_stdin_used+0x1bbd>
fs
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    8097e6a <_IO_stdin_used+0x1b66>
insl   (%dx),%es:(%edi)
popa
js     8097ecd <_IO_stdin_used+0x1bc9>
imul   $0x6c706d6f,0x63(%esi),%ebp
gs
je     8097edd <_IO_stdin_used+0x1bd9>
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    8097e85 <_IO_stdin_used+0x1b81>
insl   (%dx),%es:(%edi)
popa
js     8097ee8 <_IO_stdin_used+0x1be4>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    8097ef4 <_IO_stdin_used+0x1bf0>
jo     8097efc <_IO_stdin_used+0x1bf8>
jb     8097ef8 <_IO_stdin_used+0x1bf4>
jne    8097f0e <_IO_stdin_used+0x1c0a>
gs
jb     8097e9e <_IO_stdin_used+0x1b9a>
insl   (%dx),%es:(%edi)
popa
js     8097f01 <_IO_stdin_used+0x1bfd>
jo     8097f09 <_IO_stdin_used+0x1c05>
outsb  %ds:(%esi),(%dx)
imul   $0x7265735f,%fs:0x67(%esi),%ebp
jbe    8097f18 <_IO_stdin_used+0x1c14>
arpl   %sp,0x5f(%ebp)
jae    8097f28 <_IO_stdin_used+0x1c24>
popa
jb     8097f2b <_IO_stdin_used+0x1c27>
jae    8097eb9 <_IO_stdin_used+0x1bb5>
insl   (%dx),%es:(%edi)
popa
js     8097f1c <_IO_stdin_used+0x1c18>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    8097f22 <_IO_stdin_used+0x1c1e>
jo     8097f2a <_IO_stdin_used+0x1c26>
jb     8097f26 <_IO_stdin_used+0x1c22>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ch,0x61(%ebp)
js     8097f35 <_IO_stdin_used+0x1c31>
jb     8097f3d <_IO_stdin_used+0x1c39>
jo     8097f46 <_IO_stdin_used+0x1c42>
imul   $0x7265705f,0x73(%ebp),%esp
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
and    $0x5b,%al
add    $0x55bb408,%eax
or     %ah,%dh
pop    %ecx
add    $0x55b4808,%eax
or     %dh,0x5b(%ebx)
add    $0x5764908,%eax
or     %bh,%al
jbe    8097f10 <_IO_stdin_used+0x1c0c>
or     %bh,0x77(%eax)
add    $0x579f008,%eax
or     %bl,0x30080579(%eax)
jp     8097f20 <_IO_stdin_used+0x1c1c>
or     %bh,%al
jbe    8097f24 <_IO_stdin_used+0x1c20>
or     %ah,(%eax)
js     8097f28 <_IO_stdin_used+0x1c24>
or     %bh,%al
jbe    8097f2c <_IO_stdin_used+0x1c28>
or     %bh,%al
jbe    8097f30 <_IO_stdin_used+0x1c2c>
or     %bh,%al
jbe    8097f34 <_IO_stdin_used+0x1c30>
or     %dh,0x78(%eax)
add    $0x578b008,%eax
or     %dh,(%eax)
jns    8097f40 <_IO_stdin_used+0x1c3c>
or     %bh,0x76(%eax)
add    $0x576b808,%eax
or     %bh,%al
jbe    8097f4c <_IO_stdin_used+0x1c48>
or     %bh,%al
jbe    8097f50 <_IO_stdin_used+0x1c4c>
or     %bh,%al
jbe    8097f54 <_IO_stdin_used+0x1c50>
or     %bh,%al
jbe    8097f58 <_IO_stdin_used+0x1c54>
or     %bh,%al
jbe    8097f5c <_IO_stdin_used+0x1c58>
or     %bh,%al
jbe    8097f60 <_IO_stdin_used+0x1c5c>
or     %bh,%al
jbe    8097f64 <_IO_stdin_used+0x1c60>
or     %bh,%al
jbe    8097f68 <_IO_stdin_used+0x1c64>
or     %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
add    %al,%gs:(%eax)
add    %al,(%eax)
bound  %edi,0x8(%ecx,%ecx,1)
das
jge    8097f90 <_IO_stdin_used+0x1c8c>
or     %bl,0x7e08097e(%ecx)
jl     8097f98 <_IO_stdin_used+0x1c94>
or     %al,0x4a08097c(%ebp)
jge    8097fa0 <_IO_stdin_used+0x1c9c>
or     %ah,0x7d(%ebx)
or     %ecx,(%eax)
jg     809801b <_IO_stdin_used+0x1d17>
or     %ecx,(%eax)
test   %edi,0x9(%ebp)
or     %dl,0x9(%edi,%ebx,4)
or     %bl,-0x61(%ebp)
or     %ecx,(%eax)
in     (%dx),%al
jl     8097fb8 <_IO_stdin_used+0x1cb4>
or     %cl,-0x67f7f684(%edx)
jl     8097fc0 <_IO_stdin_used+0x1cbc>
or     %al,(%edx,%eax,8)
or     %ecx,(%eax)
imul   $0x97d8a08,0x9(%ebp),%edi
or     %ah,-0x3ff7f684(%ebx)
jl     8097fd4 <_IO_stdin_used+0x1cd0>
or     %dh,0x7c(%ebx)
or     %ecx,(%eax)
insb   (%dx),%es:(%edi)
jl     8097fdc <_IO_stdin_used+0x1cd8>
or     %bl,%ah
jl     8097fe0 <_IO_stdin_used+0x1cdc>
or     %dh,0x7d(%esi)
or     %ecx,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
jae    809800b <_IO_stdin_used+0x1d07>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809800f <_IO_stdin_used+0x1d0b>
popa
jne    8098066 <_IO_stdin_used+0x1d62>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
gs and %dh,%fs:%gs:0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ebp)
outsl  %ds:(%esi),(%dx)
jne    809806e <_IO_stdin_used+0x1d6a>
push   $0x6c63202c
outsl  %ds:(%esi),(%dx)
jae    8098078 <_IO_stdin_used+0x1d74>
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%bx,%di)
and    %ch,(%eax)
popa
jne    809808d <_IO_stdin_used+0x1d89>
push   $0x6d69745f
outsl  %gs:(%esi),(%dx)
jne    8098096 <_IO_stdin_used+0x1d92>
cmp    $0x736d6425,%eax
sub    $0x20,%al
gs
insb   (%dx),%es:(%edi)
popa
jo     80980a1 <_IO_stdin_used+0x1d9d>
gs cmp %fs:%gs:(%eax),%ah
and    $0x6d66302e,%eax
jae    8098062 <_IO_stdin_used+0x1d5e>
add    %al,(%eax)
add    %dl,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
js     80980ad <_IO_stdin_used+0x1da9>
insl   (%dx),%es:(%edi)
jne    80980b4 <_IO_stdin_used+0x1db0>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,0x63(%ecx)
je     80980bf <_IO_stdin_used+0x1dbb>
jbe    80980bd <_IO_stdin_used+0x1db9>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    8098085 <_IO_stdin_used+0x1d81>
push   $0x62207361
gs outsb %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
arpl   %bp,0x65(%eax)
add    %al,%fs:(%eax)
add    %dl,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
js     80980e9 <_IO_stdin_used+0x1de5>
insl   (%dx),%es:(%edi)
jne    80980f0 <_IO_stdin_used+0x1dec>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %ah,0x63(%ecx)
je     80980fb <_IO_stdin_used+0x1df7>
jbe    80980f9 <_IO_stdin_used+0x1df5>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    80980c1 <_IO_stdin_used+0x1dbd>
outsw  %ds:(%esi),(%dx)
jb     80980c5 <_IO_stdin_used+0x1dc1>
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x6820756c
popa
jae    80980d1 <_IO_stdin_used+0x1dcd>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
arpl   %bp,0x65(%eax)
add    %al,%fs:(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     809812c <_IO_stdin_used+0x1e28>
gs
fs
gs
jae    8098137 <_IO_stdin_used+0x1e33>
je     809813d <_IO_stdin_used+0x1e39>
jo     80980fe <_IO_stdin_used+0x1dfa>
inc    %esp
inc    %edx
jne    8098147 <_IO_stdin_used+0x1e43>
cs
inc    %ebp
jb     809814a <_IO_stdin_used+0x1e46>
outsl  %ds:(%esi),(%dx)
jb     8098109 <_IO_stdin_used+0x1e05>
dec    %esi
outsl  %ds:(%esi),(%dx)
push   %edx
gs
jo     809814d <_IO_stdin_used+0x1e49>
jns    80980e3 <_IO_stdin_used+0x1ddf>
add    %cl,0x65(%ebp)
jae    809815b <_IO_stdin_used+0x1e57>
popa
and    %ah,%gs:0x69(%si)
and    %ch,%fs:0x6f(%esi)
je     8098114 <_IO_stdin_used+0x1e10>
jb     809815b <_IO_stdin_used+0x1e57>
arpl   %sp,0x69(%ebp)
jbe    8098160 <_IO_stdin_used+0x1e5c>
and    %ah,0x20(%ecx)
jb     8098165 <_IO_stdin_used+0x1e61>
jo     809816e <_IO_stdin_used+0x1e6a>
jns    8098124 <_IO_stdin_used+0x1e20>
sub    %dh,0x6d(%ecx,%ebp,2)
outsl  %gs:(%esi),(%dx)
jne    8098180 <_IO_stdin_used+0x1e7c>
and    %ah,0x79(%edx)
and    %ch,0x65(%ebp)
jae    8098187 <_IO_stdin_used+0x1e83>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    8098145 <_IO_stdin_used+0x1e41>
add    %al,(%eax)
add    %al,(%eax)
dec    %ebp
gs
jae    8098197 <_IO_stdin_used+0x1e93>
popa
and    %ch,%gs:0x61(%bx,%si)
jae    809814c <_IO_stdin_used+0x1e48>
je     8098196 <_IO_stdin_used+0x1e92>
and    %dh,%gs:0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x65(%edx)
jo     80981a5 <_IO_stdin_used+0x1ea1>
jns    809815b <_IO_stdin_used+0x1e57>
jae    80981a2 <_IO_stdin_used+0x1e9e>
jb     80981a8 <_IO_stdin_used+0x1ea4>
popa
insb   (%dx),%es:(%edi)
and    %ah,0x73(%ecx)
and    %ah,0x20(%ecx)
arpl   %si,0x72(%ebp)
jb     80981b1 <_IO_stdin_used+0x1ead>
outsb  %ds:(%esi),(%dx)
je     80981bb <_IO_stdin_used+0x1eb7>
jns    809817e <_IO_stdin_used+0x1e7a>
outsl  %ds:(%esi),(%dx)
jne    80981c8 <_IO_stdin_used+0x1ec4>
jae    80981ca <_IO_stdin_used+0x1ec6>
popa
outsb  %ds:(%esi),(%dx)
imul   $0x69786520,%fs:0x67(%esi),%ebp
jae    80981d6 <_IO_stdin_used+0x1ed2>
imul   $0x74656d20,0x67(%esi),%ebp
push   $0x6320646f
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
js     80981e5 <_IO_stdin_used+0x1ee1>
insl   (%dx),%es:(%edi)
jne    80981ec <_IO_stdin_used+0x1ee8>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x66(%edi)
and    %dh,0x65(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x70657220,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x72657020,0x73(%ebp),%esp
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%eax)
jae    80981cd <_IO_stdin_used+0x1ec9>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
arpl   %bp,0x65(%eax)
add    %ch,%fs:0x6e(%ecx)
popa
arpl   %si,0x76(%ecx,%ebp,2)
add    %dh,%gs:0x69(%ebp)
fs
cmp    $0x646c25,%eax
jo     8098236 <_IO_stdin_used+0x1f32>
fs
cmp    $0x20646c25,%eax
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
cmp    $0x69730022,%eax
fs
cmp    $0x22732522,%eax
and    %al,(%eax)
add    %al,(%eax)
jp     809822c <_IO_stdin_used+0x1f28>
inc    %ebp
jb     809825d <_IO_stdin_used+0x1f59>
outsl  %ds:(%esi),(%dx)
jb     809820e <_IO_stdin_used+0x1f0a>
imul   $0x74636573,0x20(%esi),%ebp
imul   $0x20732520,0x6e(%edi),%ebp
popa
je     809821f <_IO_stdin_used+0x1f1b>
insb   (%dx),%es:(%edi)
imul   $0x3a642520,0x65(%esi),%ebp
and    %ah,0x6f000a73
jb     8098276 <_IO_stdin_used+0x1f72>
cs
data16
jb     8098278 <_IO_stdin_used+0x1f74>
gs
fs
gs
jae    8098283 <_IO_stdin_used+0x1f7f>
je     8098289 <_IO_stdin_used+0x1f85>
jo     809824a <_IO_stdin_used+0x1f46>
inc    %esp
inc    %edx
jne    8098293 <_IO_stdin_used+0x1f8f>
cs
inc    %esp
gs
jae    8098290 <_IO_stdin_used+0x1f8c>
je     8098296 <_IO_stdin_used+0x1f92>
jo     8098279 <_IO_stdin_used+0x1f75>
popa
jb     809829f <_IO_stdin_used+0x1f9b>
gs
inc    %ebp
jb     80982a2 <_IO_stdin_used+0x1f9e>
outsl  %ds:(%esi),(%dx)
jb     8098261 <_IO_stdin_used+0x1f5d>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8098298 <_IO_stdin_used+0x1f94>
insb   (%dx),%es:(%edi)
imul   $0x65706163,0x73(%ebp,%eax,2),%esp
jae    8098242 <_IO_stdin_used+0x1f3e>
add    %al,(%eax)
push   %esp
gs
js     80982bc <_IO_stdin_used+0x1fb8>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0x20(%ebp)
jne    80982bf <_IO_stdin_used+0x1fbb>
gs
jae    80982b7 <_IO_stdin_used+0x1fb3>
popa
jo     80982bc <_IO_stdin_used+0x1fb8>
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80982bf <_IO_stdin_used+0x1fbb>
imul   $0x626d6520,0x73(%esi),%ebp
gs fs fs gs and %ch,%fs:%gs:0x75(%esi)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
push   %esp
gs
js     80982e8 <_IO_stdin_used+0x1fe4>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0x20(%ebp)
jne    80982eb <_IO_stdin_used+0x1fe7>
gs
jae    80982e3 <_IO_stdin_used+0x1fdf>
popa
jo     80982e8 <_IO_stdin_used+0x1fe4>
and    %ah,%fs:0x6e(%ebp)
fs gs and %ch,%fs:%gs:0x6e(%ecx)
and    %bl,0x54(%eax,%eax,1)
gs
js     8098308 <_IO_stdin_used+0x2004>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0x20(%ebp)
jne    809830b <_IO_stdin_used+0x2007>
gs
jae    8098303 <_IO_stdin_used+0x1fff>
popa
jo     8098308 <_IO_stdin_used+0x2004>
and    %ch,%fs:0x61(%eax)
and    %ch,%fs:0x6e(%ecx)
jbe    809830e <_IO_stdin_used+0x200a>
insb   (%dx),%es:(%edi)
imul   $0x70616373,0x65(%eax,%eiz,1),%esp
and    %dh,%gs:0x65(%ebx)
jno    8098331 <_IO_stdin_used+0x202d>
outsb  %gs:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
add    %al,(%eax)
add    %al,0x73(%ebp,%eiz,2)
imul   $0x20,0x70(%edi,%ebp,2),%esi
imul   $0x6973,0x20(%ebp,%eiz,2),%bp
jp     809833a <_IO_stdin_used+0x2036>
and    %ch,(%eax)
and    $0x6220646c,%eax
jns    8098352 <_IO_stdin_used+0x204e>
gs
jae    809830a <_IO_stdin_used+0x2006>
and    %ch,0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x72(%ecx,%eiz,2)
add    %al,%gs:(%bx,%si)
outsl  %ds:(%esi),(%dx)
jb     809835a <_IO_stdin_used+0x2056>
cs
data16
jb     809835c <_IO_stdin_used+0x2058>
gs
fs
gs
jae    8098367 <_IO_stdin_used+0x2063>
je     809836d <_IO_stdin_used+0x2069>
jo     809832e <_IO_stdin_used+0x202a>
inc    %esp
inc    %edx
jne    8098377 <_IO_stdin_used+0x2073>
cs
inc    %esp
gs
jae    8098374 <_IO_stdin_used+0x2070>
je     809837a <_IO_stdin_used+0x2076>
jo     809835d <_IO_stdin_used+0x2059>
popa
jb     8098383 <_IO_stdin_used+0x207f>
gs
inc    %ebp
jb     8098386 <_IO_stdin_used+0x2082>
outsl  %ds:(%esi),(%dx)
jb     8098345 <_IO_stdin_used+0x2041>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    809837c <_IO_stdin_used+0x2078>
insb   (%dx),%es:(%edi)
imul   $0x7861746e,0x79(%ebx,%edx,2),%esp
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    809838d <_IO_stdin_used+0x2089>
insb   (%dx),%es:(%edi)
imul   $0x61746e79,0x73(%eax,%eiz,1),%esp
js     8098357 <_IO_stdin_used+0x2053>
outsw  %ds:(%esi),(%dx)
jb     809835b <_IO_stdin_used+0x2057>
jae    80983a2 <_IO_stdin_used+0x209e>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%eax)
popa
fs
gs
jb     809834a <_IO_stdin_used+0x2046>
add    %al,(%eax)
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x65(%ebx)
jb     80983ce <_IO_stdin_used+0x20ca>
imul   $0x6c696620,0x65(%ebx),%esp
cmp    %gs:(%eax),%ah
imul   $0x3d,0x79(%ebp),%esp
jbe    80983c9 <_IO_stdin_used+0x20c5>
insb   (%dx),%es:(%edi)
jne    80983d0 <_IO_stdin_used+0x20cc>
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     80983d7 <_IO_stdin_used+0x20d3>
and    %bl,0x53(%ebx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %ebp
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     80983ea <_IO_stdin_used+0x20e6>
cs
data16
jb     80983ec <_IO_stdin_used+0x20e8>
gs
fs
gs
jae    80983f7 <_IO_stdin_used+0x20f3>
je     80983fd <_IO_stdin_used+0x20f9>
jo     80983be <_IO_stdin_used+0x20ba>
inc    %esp
inc    %edx
jne    8098407 <_IO_stdin_used+0x2103>
cs
inc    %esp
gs
jae    8098404 <_IO_stdin_used+0x2100>
je     809840a <_IO_stdin_used+0x2106>
jo     80983ed <_IO_stdin_used+0x20e9>
popa
jb     8098413 <_IO_stdin_used+0x210f>
gs
inc    %ebp
jb     8098416 <_IO_stdin_used+0x2112>
outsl  %ds:(%esi),(%dx)
jb     80983d5 <_IO_stdin_used+0x20d1>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    809840c <_IO_stdin_used+0x2108>
insb   (%dx),%es:(%edi)
imul   $0x737261,0x68(%ebx,%eax,2),%esp
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8098419 <_IO_stdin_used+0x2115>
insb   (%dx),%es:(%edi)
imul   $0x61726168,0x63(%eax,%eiz,1),%esp
arpl   %si,0x72(%ebp,%eiz,2)
jae    80983e7 <_IO_stdin_used+0x20e3>
imul   $0x2079656b,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:0x72(%ebp)
jb     8098446 <_IO_stdin_used+0x2142>
jb     80983f9 <_IO_stdin_used+0x20f5>
popa
je     80983fc <_IO_stdin_used+0x20f8>
insb   (%dx),%es:(%edi)
imul   $0x3a642520,0x65(%esi),%ebp
and    %ah,0x69000a73
outsb  %ds:(%esi),(%dx)
jbe    809844e <_IO_stdin_used+0x214a>
insb   (%dx),%es:(%edi)
imul   $0x382d4654,0x55(%eax,%eiz,1),%esp
add    %al,0x6d(%ebp)
jo     809846f <_IO_stdin_used+0x216b>
jns    809841d <_IO_stdin_used+0x2119>
imul   $0x20,0x79(%ebp),%esp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x6f(%esi)
and    %ah,(%edi)
cmp    $0x6e692027,%eax
and    %ch,0x65(%ebx)
jns    8098443 <_IO_stdin_used+0x213f>
jbe    8098477 <_IO_stdin_used+0x2173>
insb   (%dx),%es:(%edi)
jne    809847e <_IO_stdin_used+0x217a>
and    %dh,0x61(%eax)
imul   $0x22206f4e,0x0(%edx),%esi
and    $0x6b202273,%eax
gs
jns    809844b <_IO_stdin_used+0x2147>
imul   $0x7265732e,0x20(%esi),%ebp
jbe    809849d <_IO_stdin_used+0x2199>
arpl   %sp,0x20(%ebp)
imul   $0x0,0xa(%ebp,%eiz,2),%bp
add    %al,(%eax)
test   $0xa8,%al
add    $0x5a8b008,%eax
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %ah,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x4ff7fa58(%eax)
test   $0x5,%al
or     %bl,-0x6ff7fa58(%eax)
test   $0x5,%al
or     %dh,-0x58(%eax)
add    $0x8,%eax
add    %al,(%eax)
add    (%edx),%eax
add    %al,(%ebx)
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    (%ebx),%eax
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80985e7 <_IO_stdin_used+0x22e3>
jae    809862e <_IO_stdin_used+0x232a>
je     8098640 <_IO_stdin_used+0x233c>
jo     80985ed <_IO_stdin_used+0x22e9>
imul   $0x79666974,0x6f(%esi),%ebp
and    %ah,0x6f(%esi)
jb     80985f9 <_IO_stdin_used+0x22f5>
daa
and    $0x203b2773,%eax
gs
jb     8098654 <_IO_stdin_used+0x2350>
outsl  %ds:(%esi),(%dx)
jb     8098605 <_IO_stdin_used+0x2301>
daa
and    $0xa2773,%eax
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8098664 <_IO_stdin_used+0x2360>
and    %ah,0x72(%ebx)
gs
popa
je     8098661 <_IO_stdin_used+0x235d>
and    %ch,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
je     809866b <_IO_stdin_used+0x2367>
data16
jns    8098625 <_IO_stdin_used+0x2321>
ja     8098668 <_IO_stdin_used+0x2364>
je     809866c <_IO_stdin_used+0x2368>
push   $0x6e55000a
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8098684 <_IO_stdin_used+0x2380>
and    %ah,0x64(%ecx)
and    %dh,%fs:0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x61(%edi)
je     8098688 <_IO_stdin_used+0x2384>
push   $0x206f7420
insl   (%dx),%es:(%edi)
popa
imul   $0x706f6f6c,0x20(%esi),%ebp
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80986ac <_IO_stdin_used+0x23a8>
and    %dh,0x65(%edx)
imul   $0x73207265,0x74(%bp,%di),%esi
push   $0x6f647475
ja     80986bd <_IO_stdin_used+0x23b9>
and    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809867c <_IO_stdin_used+0x2378>
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x6f6e6920,0x65(%edx),%edi
je     80986d5 <_IO_stdin_used+0x23d1>
data16
jns    8098679 <_IO_stdin_used+0x2375>
add    %dl,0x69(%edx,%esi,2)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
jae    80986e0 <_IO_stdin_used+0x23dc>
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x65(%ebp)
jae    80986f5 <_IO_stdin_used+0x23f1>
popa
and    %dh,%gs:0x69(%bx)
je     80986f2 <_IO_stdin_used+0x23ee>
and    %dl,0x6e(%ebp)
imul   $0x656c6966,0x20(%eax),%edi
and    %ah,0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     8098711 <_IO_stdin_used+0x240d>
outsl  %ds:(%esi),(%dx)
jb     8098713 <_IO_stdin_used+0x240f>
je     8098711 <_IO_stdin_used+0x240d>
and    %ah,0x20(%ecx)
arpl   %bp,0x65(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     80986cc <_IO_stdin_used+0x23c8>
je     8098716 <_IO_stdin_used+0x2412>
popa
je     80986d1 <_IO_stdin_used+0x23cd>
outsl  %fs:(%esi),(%dx)
gs
jae    8098724 <_IO_stdin_used+0x2420>
daa
je     80986d9 <_IO_stdin_used+0x23d5>
jae    8098730 <_IO_stdin_used+0x242c>
jo     809872d <_IO_stdin_used+0x2429>
outsl  %ds:(%esi),(%dx)
jb     8098734 <_IO_stdin_used+0x2430>
and    %dh,0x61(%eax,%ebp,2)
je     80986f4 <_IO_stdin_used+0x23f0>
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8098732 <_IO_stdin_used+0x242e>
cs
data16
jb     8098734 <_IO_stdin_used+0x2430>
gs
fs
gs
jae    809873f <_IO_stdin_used+0x243b>
je     8098745 <_IO_stdin_used+0x2441>
jo     8098706 <_IO_stdin_used+0x2402>
inc    %esp
inc    %edx
jne    809874f <_IO_stdin_used+0x244b>
cs
inc    %ebp
jb     8098752 <_IO_stdin_used+0x244e>
outsl  %ds:(%esi),(%dx)
jb     8098711 <_IO_stdin_used+0x240d>
dec    %esi
outsl  %ds:(%esi),(%dx)
je     809873a <_IO_stdin_used+0x2436>
jne    8098759 <_IO_stdin_used+0x2455>
jo     809875a <_IO_stdin_used+0x2456>
jb     8098761 <_IO_stdin_used+0x245d>
gs add %ch,%fs:%gs:0x72(%edi)
addr16
cs
data16
jb     809875c <_IO_stdin_used+0x2458>
gs
fs
gs
jae    8098767 <_IO_stdin_used+0x2463>
je     809876d <_IO_stdin_used+0x2469>
jo     809872e <_IO_stdin_used+0x242a>
inc    %esp
inc    %edx
jne    8098777 <_IO_stdin_used+0x2473>
cs
inc    %ebp
jb     809877a <_IO_stdin_used+0x2476>
outsl  %ds:(%esi),(%dx)
jb     8098739 <_IO_stdin_used+0x2435>
dec    %esi
popa
insl   (%dx),%es:(%edi)
gs
dec    %eax
popa
jae    8098761 <_IO_stdin_used+0x245d>
outsl  %ds:(%esi),(%dx)
dec    %edi
ja     8098785 <_IO_stdin_used+0x2481>
gs
jb     809871a <_IO_stdin_used+0x2416>
inc    %esp
imul   $0x656e6e6f,0x63(%ebx),%esi
arpl   %si,0x64(%ebp,%eiz,2)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     8098793 <_IO_stdin_used+0x248f>
gs
fs
gs
jae    809879e <_IO_stdin_used+0x249a>
je     80987a4 <_IO_stdin_used+0x24a0>
jo     8098765 <_IO_stdin_used+0x2461>
inc    %esp
inc    %edx
jne    80987ae <_IO_stdin_used+0x24aa>
cs
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %cl,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x64202273,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    8098771 <_IO_stdin_used+0x246d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8098775 <_IO_stdin_used+0x2471>
gs
js     80987c1 <_IO_stdin_used+0x24bd>
jae    80987ce <_IO_stdin_used+0x24ca>
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    80987cc <_IO_stdin_used+0x24c8>
and    %ch,%fs:0x6f(%esi)
je     8098786 <_IO_stdin_used+0x2482>
addr16
gs
je     809878a <_IO_stdin_used+0x2486>
jae    80987d1 <_IO_stdin_used+0x24cd>
arpl   %si,0x72(%ebp)
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     80987ee <_IO_stdin_used+0x24ea>
and    %ch,0x66(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,0x6f(%ebx)
jne    8098808 <_IO_stdin_used+0x2504>
and    %ch,%fs:0x6f(%esi)
je     80987c2 <_IO_stdin_used+0x24be>
fs
gs
je     809880b <_IO_stdin_used+0x2507>
jb     8098815 <_IO_stdin_used+0x2511>
imul   $0x63657320,0x65(%esi),%ebp
jne    8098823 <_IO_stdin_used+0x251f>
imul   $0x746e6f63,0x20(%ecx,%edi,2),%esi
gs
js     8098830 <_IO_stdin_used+0x252c>
and    %ah,0x6f(%esi)
jb     80987e1 <_IO_stdin_used+0x24dd>
daa
and    $0x2773,%eax
add    %ch,0x72(%edi)
addr16
cs
data16
jb     8098834 <_IO_stdin_used+0x2530>
gs
fs
gs
jae    809883f <_IO_stdin_used+0x253b>
je     8098845 <_IO_stdin_used+0x2541>
jo     8098806 <_IO_stdin_used+0x2502>
inc    %esp
inc    %edx
jne    809884f <_IO_stdin_used+0x254b>
cs
inc    %ebp
jb     8098852 <_IO_stdin_used+0x254e>
outsl  %ds:(%esi),(%dx)
jb     8098811 <_IO_stdin_used+0x250d>
inc    %ecx
jo     8098856 <_IO_stdin_used+0x2552>
inc    %ecx
jb     8098856 <_IO_stdin_used+0x2552>
outsl  %ds:(%esi),(%dx)
jb     809883f <_IO_stdin_used+0x253b>
arpl   %si,%gs:0x72(%ebp)
imul   $0x65746e6f,0x43(%ecx,%edi,2),%esi
js     809886e <_IO_stdin_used+0x256a>
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     8098870 <_IO_stdin_used+0x256c>
gs
fs
gs
jae    809887b <_IO_stdin_used+0x2577>
je     8098881 <_IO_stdin_used+0x257d>
jo     8098842 <_IO_stdin_used+0x253e>
inc    %esp
inc    %edx
jne    809888b <_IO_stdin_used+0x2587>
cs
inc    %ebp
jb     809888e <_IO_stdin_used+0x258a>
outsl  %ds:(%esi),(%dx)
jb     809884d <_IO_stdin_used+0x2549>
push   %ebx
inc    %ebp
dec    %esp
imul   $0x63655378,0x75(%esi),%ebp
jne    809889d <_IO_stdin_used+0x2599>
imul   $0x65746e6f,0x43(%ecx,%edi,2),%esi
js     80988a9 <_IO_stdin_used+0x25a5>
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    80988b0 <_IO_stdin_used+0x25ac>
and    %ch,%fs:0x6f(%esi)
je     809886a <_IO_stdin_used+0x2566>
addr16
gs
je     809886e <_IO_stdin_used+0x256a>
popa
jne    80988b5 <_IO_stdin_used+0x25b1>
imul   $0x69737365,0x73(%eax,%eiz,1),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %ah,0x6f(%esi)
jb     8098885 <_IO_stdin_used+0x2581>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    80988f0 <_IO_stdin_used+0x25ec>
and    %ch,%fs:0x6f(%esi)
je     80988aa <_IO_stdin_used+0x25a6>
fs
gs
je     80988f3 <_IO_stdin_used+0x25ef>
jb     80988fd <_IO_stdin_used+0x25f9>
imul   $0x64756120,0x65(%esi),%ebp
imul   $0x69737365,0x73(%eax,%eiz,1),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x74(%ecx,%eiz,2)
popa
and    %ah,0x6f(%esi)
jb     80988cb <_IO_stdin_used+0x25c7>
daa
and    $0x6f002773,%eax
jb     809891a <_IO_stdin_used+0x2616>
cs
data16
jb     809891c <_IO_stdin_used+0x2618>
gs
fs
gs
jae    8098927 <_IO_stdin_used+0x2623>
je     809892d <_IO_stdin_used+0x2629>
jo     80988ee <_IO_stdin_used+0x25ea>
inc    %esp
inc    %edx
jne    8098937 <_IO_stdin_used+0x2633>
cs
inc    %ebp
jb     809893a <_IO_stdin_used+0x2636>
outsl  %ds:(%esi),(%dx)
jb     80988f9 <_IO_stdin_used+0x25f5>
inc    %ecx
fs
je     8098910 <_IO_stdin_used+0x260c>
jne    8098935 <_IO_stdin_used+0x2631>
imul   $0x6e556174,0x61(%esp,%eax,2),%esi
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8098950 <_IO_stdin_used+0x264c>
and    %ch,%fs:0x6f(%esi)
je     809890a <_IO_stdin_used+0x2606>
addr16
gs
je     809890e <_IO_stdin_used+0x260a>
push   %eax
dec    %ecx
inc    %esp
and    %ch,0x66(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8098980 <_IO_stdin_used+0x267c>
and    %ch,%fs:0x6f(%esi)
je     809893a <_IO_stdin_used+0x2636>
fs
gs
je     8098983 <_IO_stdin_used+0x267f>
jb     809898d <_IO_stdin_used+0x2689>
imul   $0x44495020,0x65(%esi),%ebp
and    %ah,0x6f(%esi)
jb     809894c <_IO_stdin_used+0x2648>
daa
and    $0x2773,%eax
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809899e <_IO_stdin_used+0x269a>
cs
data16
jb     80989a0 <_IO_stdin_used+0x269c>
gs
fs
gs
jae    80989ab <_IO_stdin_used+0x26a7>
je     80989b1 <_IO_stdin_used+0x26ad>
jo     8098972 <_IO_stdin_used+0x266e>
inc    %esp
inc    %edx
jne    80989bb <_IO_stdin_used+0x26b7>
cs
inc    %ebp
jb     80989be <_IO_stdin_used+0x26ba>
outsl  %ds:(%esi),(%dx)
jb     809897d <_IO_stdin_used+0x2679>
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x65636f72,0x50(%eax),%edi
jae    80989cd <_IO_stdin_used+0x26c9>
dec    %ecx
fs
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %al,0x6f(%ebx)
jne    80989d4 <_IO_stdin_used+0x26d0>
and    %ch,%fs:0x6f(%esi)
je     809898e <_IO_stdin_used+0x268a>
addr16
gs
je     8098992 <_IO_stdin_used+0x268e>
push   %ebp
dec    %ecx
inc    %esp
and    %ch,0x66(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8098a04 <_IO_stdin_used+0x2700>
and    %ch,%fs:0x6f(%esi)
je     80989be <_IO_stdin_used+0x26ba>
fs
gs
je     8098a07 <_IO_stdin_used+0x2703>
jb     8098a11 <_IO_stdin_used+0x270d>
imul   $0x44495520,0x65(%esi),%ebp
and    %ah,0x6f(%esi)
jb     80989d0 <_IO_stdin_used+0x26cc>
daa
and    $0x2773,%eax
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8098a28 <_IO_stdin_used+0x2724>
and    %ch,%fs:0x6f(%esi)
je     80989e2 <_IO_stdin_used+0x26de>
fs
gs
je     8098a2b <_IO_stdin_used+0x2727>
jb     8098a35 <_IO_stdin_used+0x2731>
imul   $0x696e7520,0x65(%esi),%ebp
jno    8098a46 <_IO_stdin_used+0x2742>
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f(%esi)
jb     80989fc <_IO_stdin_used+0x26f8>
daa
and    $0x2773,%eax
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8098a54 <_IO_stdin_used+0x2750>
and    %ch,%fs:0x6f(%esi)
je     8098a0e <_IO_stdin_used+0x270a>
addr16
gs
je     8098a12 <_IO_stdin_used+0x270e>
outsl  %ds:(%esi),(%dx)
ja     8098a63 <_IO_stdin_used+0x275f>
gs
jb     8098a18 <_IO_stdin_used+0x2714>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    8098a84 <_IO_stdin_used+0x2780>
and    %ch,%fs:0x6f(%esi)
je     8098a3e <_IO_stdin_used+0x273a>
addr16
gs
je     8098a42 <_IO_stdin_used+0x273e>
outsl  %ds:(%esi),(%dx)
ja     8098a93 <_IO_stdin_used+0x278f>
gs
jb     8098a9b <_IO_stdin_used+0x2797>
and    %ch,0x66(%edi)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x203a2773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%ecx,%eiz,2)
jb     8098ab5 <_IO_stdin_used+0x27b1>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
cmp    $0x22732522,%eax
and    %dh,0x70(%ecx,%edi,2)
gs
cmp    $0x22,%eax
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x69202273,%eax
jae    8098a9b <_IO_stdin_used+0x2797>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8098a9f <_IO_stdin_used+0x279b>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8098aea <_IO_stdin_used+0x27e6>
and    %dh,%fs:0x20(%edi,%ebp,2)
popa
fs and %ch,%fs:0x6f(%ebp)
jb     8098af7 <_IO_stdin_used+0x27f3>
and    %ch,0x61(%ebp)
je     8098afa <_IO_stdin_used+0x27f6>
push   $0x6c757220
gs
jae    8098abf <_IO_stdin_used+0x27bb>
sub    %ch,0x6e(%ecx)
arpl   %si,0x65(%edx)
popa
jae    8098b0d <_IO_stdin_used+0x2809>
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x63206e69,0x20(%ebx,%esi,2),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8098b27 <_IO_stdin_used+0x2823>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%ecx)
and    %dh,0x65(%edx)
jno    8098b42 <_IO_stdin_used+0x283e>
imul   $0x2964,0x65(%edx),%esi
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x69202273,%eax
jae    8098b07 <_IO_stdin_used+0x2803>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8098b0b <_IO_stdin_used+0x2807>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8098b56 <_IO_stdin_used+0x2852>
and    %dh,%fs:0x20(%edi,%ebp,2)
gs
popa
jbe    8098b5f <_IO_stdin_used+0x285b>
jae    8098b60 <_IO_stdin_used+0x285c>
jb     8098b6d <_IO_stdin_used+0x2869>
jo     8098b20 <_IO_stdin_used+0x281c>
fs
jne    8098b68 <_IO_stdin_used+0x2864>
and    %dh,0x20(%edi,%ebp,2)
inc    %ecx
jo     8098b7a <_IO_stdin_used+0x2876>
inc    %ecx
jb     8098b7a <_IO_stdin_used+0x2876>
outsl  %ds:(%esi),(%dx)
jb     8098b30 <_IO_stdin_used+0x282c>
jo     8098b81 <_IO_stdin_used+0x287d>
insb   (%dx),%es:(%edi)
imul   $0x6c410000,0x79(%ebx),%esp
jb     8098b81 <_IO_stdin_used+0x287d>
popa
fs
jns    8098b40 <_IO_stdin_used+0x283c>
push   $0x6c646e61
gs and %ah,%fs:%gs:0x6e(%ecx)
and    %cl,0x65(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
and    %ch,0x65(%ebp)
jae    8098ba8 <_IO_stdin_used+0x28a4>
popa
add    %al,%gs:(%bx,%si)
add    %al,(%eax)
cmp    $0x21,%al
inc    %esp
dec    %edi
inc    %ebx
push   %esp
pop    %ecx
push   %eax
inc    %ebp
and    %ch,0x6f(%esi)
fs and %dl,%fs:%gs:0x55(%eax)
inc    %edx
dec    %esp
dec    %ecx
inc    %ebx
and    %ah,(%edx)
sub    $0x72662f2f,%eax
gs
gs
fs
gs
jae    8098bc9 <_IO_stdin_used+0x28c5>
je     8098bcf <_IO_stdin_used+0x28cb>
jo     8098b91 <_IO_stdin_used+0x288d>
das
inc    %esp
push   %esp
inc    %esp
and    %al,0x42(%ebp,%ebp,1)
push   %ebp
push   %ebx
and    %cl,0x62(%edi)
push   $0x65
arpl   %si,0x49(%eax,%eiz,1)
outsb  %ds:(%esi),(%dx)
je     8098bea <_IO_stdin_used+0x28e6>
outsl  %ds:(%esi),(%dx)
jae    8098beb <_IO_stdin_used+0x28e7>
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,(%ecx)
xor    %ch,%cs:(%edi)
das
inc    %ebp
dec    %esi
and    (%edx),%cl
and    0x74(%eax),%ch
je     8098c00 <_IO_stdin_used+0x28fc>
cmp    (%edi),%ch
das
ja     8098c0c <_IO_stdin_used+0x2908>
ja     8098bc5 <_IO_stdin_used+0x28c1>
data16
jb     8098bff <_IO_stdin_used+0x28fb>
gs
fs
gs
jae    8098c0a <_IO_stdin_used+0x2906>
je     8098c10 <_IO_stdin_used+0x290c>
jo     8098bd1 <_IO_stdin_used+0x28cd>
outsl  %ds:(%esi),(%dx)
jb     8098c0d <_IO_stdin_used+0x2909>
das
jae    8098c1d <_IO_stdin_used+0x2919>
popa
outsb  %ds:(%esi),(%dx)
fs
popa
jb     8098c13 <_IO_stdin_used+0x290f>
jae    8098be0 <_IO_stdin_used+0x28dc>
bound  %esi,%fs:0x73(%ebp)
das
xor    %ebp,(%esi)
xor    %ch,(%edi)
imul   $0x70736f72,0x74(%esi),%ebp
arpl   %si,%gs:0x64(%esi,%ebp,1)
je     8098c2c <_IO_stdin_used+0x2928>
and    (%esi),%bh
or     (%eax),%al
outsl  %ds:(%esi),(%dx)
jb     8098c36 <_IO_stdin_used+0x2932>
cs
data16
jb     8098c38 <_IO_stdin_used+0x2934>
gs
fs
gs
jae    8098c43 <_IO_stdin_used+0x293f>
je     8098c49 <_IO_stdin_used+0x2945>
jo     8098c0a <_IO_stdin_used+0x2906>
inc    %esp
inc    %edx
jne    8098c53 <_IO_stdin_used+0x294f>
cs
inc    %ebp
jb     8098c56 <_IO_stdin_used+0x2952>
outsl  %ds:(%esi),(%dx)
jb     8098c15 <_IO_stdin_used+0x2911>
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
dec    %ebp
gs
je     8098c5a <_IO_stdin_used+0x2956>
outsl  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     8098c62 <_IO_stdin_used+0x295e>
cs
data16
jb     8098c64 <_IO_stdin_used+0x2960>
gs
fs
gs
jae    8098c6f <_IO_stdin_used+0x296b>
je     8098c75 <_IO_stdin_used+0x2971>
jo     8098c36 <_IO_stdin_used+0x2932>
inc    %esp
inc    %edx
jne    8098c7f <_IO_stdin_used+0x297b>
cs
inc    %ebp
jb     8098c82 <_IO_stdin_used+0x297e>
outsl  %ds:(%esi),(%dx)
jb     8098c41 <_IO_stdin_used+0x293d>
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     8098c83 <_IO_stdin_used+0x297f>
jb     8098c86 <_IO_stdin_used+0x2982>
popa
arpl   %sp,0x0(%ebp)
inc    %ebx
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
and    $0x61682073,%eax
jae    8098c53 <_IO_stdin_used+0x294f>
ja     8098ca7 <_IO_stdin_used+0x29a3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%bx,%di)
addr16 jae 8098c5e <_IO_stdin_used+0x295a>
sub    %ah,0x65202c73
js     8098cb6 <_IO_stdin_used+0x29b2>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0xa2973
add    %al,(%eax)
add    %ah,0x6f642073
gs
jae    8098c7c <_IO_stdin_used+0x2978>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8098c80 <_IO_stdin_used+0x297c>
jne    8098cd0 <_IO_stdin_used+0x29cc>
fs
gs
jb     8098cd9 <_IO_stdin_used+0x29d5>
je     8098cc9 <_IO_stdin_used+0x29c5>
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x65(%ebp)
jae    8098ce2 <_IO_stdin_used+0x29de>
popa
and    %ah,%gs:(%di)
jae    8098c76 <_IO_stdin_used+0x2972>
add    %al,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    $0x73,%al
imul   $0x6e206c61,0x6e(%edi),%esp
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x6d614e22,%eax
gs
dec    %edi
ja     8098cff <_IO_stdin_used+0x29fb>
gs
jb     8098cd7 <_IO_stdin_used+0x29d3>
push   $0x65676e61
and    %fs:(%esi),%bh
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%ecx,%eiz,2)
jb     8098d0e <_IO_stdin_used+0x2a0a>
and    %dh,0x70(%ecx,%edi,2)
gs
cmp    $0x2f227322,%eax
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%ecx,%eiz,2)
jb     8098d24 <_IO_stdin_used+0x2a20>
and    %dh,0x70(%ecx,%edi,2)
gs
cmp    $0x2f227322,%eax
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%ecx,%eiz,2)
jb     8098d3a <_IO_stdin_used+0x2a36>
and    %dh,0x70(%ecx,%edi,2)
gs
cmp    $0x2f227322,%eax
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %bh,(%edi,%ebp,1)
jae    8098d50 <_IO_stdin_used+0x2a4c>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %bh,(%ebx,%esi,2)
imul   $0x6e206c61,0x6e(%edi),%esp
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x6d614e22,%eax
gs
dec    %esp
outsl  %ds:(%esi),(%dx)
jae    8098d7b <_IO_stdin_used+0x2a77>
and    (%esi),%bh
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %bh,(%ecx,%eiz,2)
jb     8098d7b <_IO_stdin_used+0x2a77>
and    %dh,0x70(%ecx,%edi,2)
gs
cmp    $0x2f227322,%eax
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %bh,(%edi,%ebp,1)
jae    8098d91 <_IO_stdin_used+0x2a8d>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %bh,(%ebx,%esi,2)
imul   $0x6e206c61,0x6e(%edi),%esp
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x6d614e22,%eax
gs
inc    %ecx
arpl   %si,0x75(%ecx)
imul   $0xa3e2264,0x65(%edx),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
cmp    $0x61,%al
jb     8098dc0 <_IO_stdin_used+0x2abc>
and    %dh,0x70(%ecx,%edi,2)
gs
cmp    $0x2f227322,%eax
or     %ds:(%eax),%ah
and    %ah,(%eax)
and    %bh,(%edi,%ebp,1)
jae    8098dd6 <_IO_stdin_used+0x2ad2>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
or     %ds:(%eax),%al
outsl  %ds:(%esi),(%dx)
jb     8098dde <_IO_stdin_used+0x2ada>
cs
data16
jb     8098de0 <_IO_stdin_used+0x2adc>
gs
fs
gs
jae    8098deb <_IO_stdin_used+0x2ae7>
je     8098df1 <_IO_stdin_used+0x2aed>
jo     8098db2 <_IO_stdin_used+0x2aae>
inc    %esp
inc    %edx
jne    8098dfb <_IO_stdin_used+0x2af7>
cs
dec    %ecx
outsb  %ds:(%esi),(%dx)
je     8098dff <_IO_stdin_used+0x2afb>
outsl  %ds:(%esi),(%dx)
jae    8098e00 <_IO_stdin_used+0x2afc>
arpl   %si,%gs:0x62(%ecx,%eiz,2)
insb   (%dx),%es:(%edi)
add    %al,%gs:0x65(%edi)
je     8098ddf <_IO_stdin_used+0x2adb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
push   %ebx
inc    %ebp
dec    %esp
imul   $0x63655378,0x75(%esi),%ebp
jne    8098e23 <_IO_stdin_used+0x2b1f>
imul   $0x65746e6f,0x43(%ecx,%edi,2),%esi
js     8098e2f <_IO_stdin_used+0x2b2b>
add    %al,0x65(%edi)
je     8098e03 <_IO_stdin_used+0x2aff>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
inc    %ecx
jo     8098e3c <_IO_stdin_used+0x2b38>
inc    %ecx
jb     8098e3c <_IO_stdin_used+0x2b38>
outsl  %ds:(%esi),(%dx)
jb     8098e25 <_IO_stdin_used+0x2b21>
arpl   %si,%gs:0x72(%ebp)
imul   $0x65746e6f,0x43(%ecx,%edi,2),%esi
js     8098e54 <_IO_stdin_used+0x2b50>
add    %ch,(%eax)
imul   $0x76697463,0x61(%esi),%ebp
sub    %eax,%gs:(%eax)
dec    %esi
popa
insl   (%dx),%es:(%edi)
gs
dec    %edi
ja     8098e61 <_IO_stdin_used+0x2b5d>
gs
jb     8098e39 <_IO_stdin_used+0x2b35>
push   $0x65676e61
add    %cl,%fs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
dec    %esp
outsl  %ds:(%esi),(%dx)
jae    8098e79 <_IO_stdin_used+0x2b75>
add    %cl,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
inc    %ecx
arpl   %si,0x75(%ecx)
imul   $0x6e3c0064,0x65(%edx),%esi
outsl  %ds:(%esi),(%dx)
fs gs or %ds:%fs:%gs:(%eax),%al
cmp    $0x2f,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
fs gs or %ds:%fs:%gs:(%eax),%al
and    %ah,(%eax)
cmp    $0x69,%al
outsb  %ds:(%esi),(%dx)
je     8098e90 <_IO_stdin_used+0x2b8c>
jb     8098e93 <_IO_stdin_used+0x2b8f>
popa
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x22732522,%eax
or     %ds:(%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
cmp    $0x6d,%al
gs
je     8098eae <_IO_stdin_used+0x2baa>
outsl  %ds:(%esi),(%dx)
and    %ch,%fs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
cmp    $0x22732522,%eax
or     %ds:(%eax),%al
and    %ah,(%eax)
and    %ah,(%eax)
cmp    $0x2f,%al
insl   (%dx),%es:(%edi)
gs
je     8098ec7 <_IO_stdin_used+0x2bc3>
outsl  %ds:(%esi),(%dx)
fs or  %ds:%fs:(%eax),%al
and    %ah,(%eax)
cmp    $0x2f,%al
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x3e(%ebp)
or     (%eax),%al
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8098ee5 <_IO_stdin_used+0x2be1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
inc    %esi
popa
imul   $0x6e490065,0x72(%ebp,%esi,2),%ebp
je     8098efc <_IO_stdin_used+0x2bf8>
outsl  %ds:(%esi),(%dx)
jae    8098efd <_IO_stdin_used+0x2bf9>
arpl   %si,%gs:0x52(%eax,%eax,1)
gs
jno    8098f0a <_IO_stdin_used+0x2c06>
gs
jae    8098f0c <_IO_stdin_used+0x2c08>
dec    %esi
popa
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x75(%ebx)
add    %dl,0x65(%edx)
insb   (%dx),%es:(%edi)
gs
popa
jae    8098f0c <_IO_stdin_used+0x2c08>
dec    %esi
popa
insl   (%dx),%es:(%edi)
add    %dl,%gs:0x74(%ebx)
popa
jb     8098f25 <_IO_stdin_used+0x2c21>
push   %ebx
gs
jb     8098f2b <_IO_stdin_used+0x2c27>
imul   $0x614e7942,0x65(%ebx),%esp
insl   (%dx),%es:(%edi)
add    %dl,%gs:0x70(%ebp)
fs
popa
je     8098f2a <_IO_stdin_used+0x2c26>
inc    %ecx
arpl   %si,0x76(%ecx,%ebp,2)
popa
je     8098f36 <_IO_stdin_used+0x2c32>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
inc    %ebp
outsb  %ds:(%esi),(%dx)
jbe    8098f3c <_IO_stdin_used+0x2c38>
jb     8098f44 <_IO_stdin_used+0x2c40>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     8098edb <_IO_stdin_used+0x2bd7>
popa
jnp    8098f51 <_IO_stdin_used+0x2c4d>
jae    8098f5d <_IO_stdin_used+0x2c59>
add    %cl,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
dec    %eax
popa
jae    8098f38 <_IO_stdin_used+0x2c34>
ja     8098f59 <_IO_stdin_used+0x2c55>
gs
jb     8098eee <_IO_stdin_used+0x2bea>
dec    %esp
imul   $0x656d614e,0x74(%ebx),%esi
jae    8098ef8 <_IO_stdin_used+0x2bf4>
popa
jae    8098efb <_IO_stdin_used+0x2bf7>
dec    %esp
imul   $0x69746341,0x74(%ebx),%esi
jbe    8098f66 <_IO_stdin_used+0x2c62>
je     8098f68 <_IO_stdin_used+0x2c64>
bound  %ebp,0x4e(%ebp,%eiz,2)
popa
insl   (%dx),%es:(%edi)
gs
jae    8098f10 <_IO_stdin_used+0x2c0c>
inc    %ecx
fs
fs
dec    %ebp
popa
je     8098f7a <_IO_stdin_used+0x2c76>
push   $0x6d655200
outsl  %ds:(%esi),(%dx)
jbe    8098f84 <_IO_stdin_used+0x2c80>
dec    %ebp
popa
je     8098f86 <_IO_stdin_used+0x2c82>
push   $0x74654700
dec    %esi
popa
insl   (%dx),%es:(%edi)
gs
dec    %edi
ja     8098f9d <_IO_stdin_used+0x2c99>
gs
jb     8098f32 <_IO_stdin_used+0x2c2e>
dec    %esp
imul   $0x75657551,0x74(%ebx),%esi
gs
fs
dec    %edi
ja     8098fad <_IO_stdin_used+0x2ca9>
gs
jb     8098fb5 <_IO_stdin_used+0x2cb1>
add    %al,0x65(%edi)
je     8098f8a <_IO_stdin_used+0x2c86>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x726573,0x55(%eax),%edi
inc    %edi
gs
je     8098fa0 <_IO_stdin_used+0x2c9c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x65636f72,0x50(%eax),%edi
jae    8098fe4 <_IO_stdin_used+0x2ce0>
dec    %ecx
inc    %esp
add    %al,0x65(%edi)
je     8098fb9 <_IO_stdin_used+0x2cb5>
fs
je     8098fbc <_IO_stdin_used+0x2cb8>
jne    8098fe1 <_IO_stdin_used+0x2cdd>
imul   $0x6f697373,0x65(%ebx,%edx,2),%esi
outsb  %ds:(%esi),(%dx)
inc    %esp
popa
je     8098feb <_IO_stdin_used+0x2ce7>
add    %dl,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
fs
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6547,0x0(%edi),%sp
je     8098fe5 <_IO_stdin_used+0x2ce1>
add    %al,%fs:(%eax)
add    %al,-0x4cf7f672(%esi)
add    $0xfd73080a,%eax
or     %ecx,(%eax)
pusha
loope  8098fb4 <_IO_stdin_used+0x2cb0>
or     %al,(%eax)
add    %al,(%eax)
add    %bh,%dh
jno    8098fcc <_IO_stdin_used+0x2cc8>
or     %dh,0x73080a05(%ebx)
std
or     %ecx,(%eax)
rcr    %dl
add    $0x98e9108,%eax
or     %bl,0x4408098e(%ebp)
stc
or     %ecx,(%eax)
lock rolb %cl,0x98ea008
or     %dh,-0x3(%ebx)
or     %ecx,(%eax)
inc    %esp
stc
or     %ecx,(%eax)
mov    0xac0805d1,%al
mov    (%ecx),%cs
or     %bl,0x4408098e(%ebp)
stc
or     %ecx,(%eax)
add    %dl,%cl
add    $0x98ebf08,%eax
or     %bl,%bl
mov    (%ecx),%cs
or     %dh,-0x2ff7f5fb(%ebx)
fadds  0x98ee108
or     %dh,-0x3(%ebx)
or     %ecx,(%eax)
mov    %al,0xa0080a0f
iret
add    $0x98eee08,%eax
or     %dh,-0x7f7f5fb(%ebx)
mov    (%ecx),%cs
or     %dh,(%eax)
into
add    $0x98efb08,%eax
or     %dh,-0x7f7f5fb(%ebx)
mov    (%ecx),%cs
or     %al,%al
int3
add    $0x98f1008,%eax
or     %dh,-0x3(%ebx)
or     %ecx,(%eax)
mov    $0x5,%bl
or     (%eax),%cl
lock (bad)
add    $0x98f1908,%eax
or     %dh,-0x3(%ebx)
or     %ecx,(%eax)
mov    $0x5,%bl
or     (%eax),%cl
adc    %dl,%dh
add    $0x98f2508,%eax
or     %dh,-0x3(%ebx)
or     %ecx,(%eax)
jae    8099067 <_IO_stdin_used+0x2d63>
or     %ecx,(%eax)
mov    $0xc8,%al
add    $0x98f3208,%eax
or     %dh,-0x3(%ebx)
or     %ecx,(%eax)
clc
mov    (%ecx),%cs
or     %dh,-0x36(%eax)
add    $0x98f4308,%eax
or     %dh,-0x3(%ebx)
or     %ecx,(%eax)
inc    %esp
stc
or     %ecx,(%eax)
lock movb $0x8,0x98f5908
jae    8099093 <_IO_stdin_used+0x2d8f>
or     %ecx,(%eax)
inc    %esp
stc
or     %ecx,(%eax)
xor    %al,%ch
add    $0x98f7408,%eax
or     %dh,-0x3(%ebx)
or     %ecx,(%eax)
ljmp   $0x5c3,$0x600809c1
or     %bl,0x7308098d(%eax)
std
or     %ecx,(%eax)
ljmp   $0x5c1,$0xd00809c1
or     %bh,-0x28cf7f7(%ebp,%ecx,4)
or     %ecx,(%eax)
jae    80990c7 <_IO_stdin_used+0x2dc3>
or     %ecx,(%eax)
and    %al,%al
add    $0x98f8b08,%eax
or     %dh,-0x4cf7f5fb(%ebx)
add    $0xbf60080a,%eax
add    $0x98f9808,%eax
or     %dh,0x73080a05(%ebx)
std
or     %ecx,(%eax)
xor    %bh,0x805(%esi)
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    8099180 <_IO_stdin_used+0x2e7c>
popa
jb     8099183 <_IO_stdin_used+0x2e7f>
and    %al,0x56(%ecx)
inc    %ebx
and    %dh,0x72(%eax,%ebp,2)
gs
popa
cmp    %fs:(%eax),%ah
and    $0x42000a73,%eax
jne    8099189 <_IO_stdin_used+0x2e85>
data16
gs
jb     8099147 <_IO_stdin_used+0x2e43>
je     8099198 <_IO_stdin_used+0x2e94>
outsl  %ds:(%esi),(%dx)
and    %dh,0x6d(%ebx)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%esi)
jb     8099155 <_IO_stdin_used+0x2e51>
popa
jne    809919c <_IO_stdin_used+0x2e98>
imul   $0x61737365,0x6d(%eax,%eiz,1),%esi
add    %al,%gs:(%bx,%si)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    80991b4 <_IO_stdin_used+0x2eb0>
and    %ch,%fs:0x6f(%esi)
je     809916e <_IO_stdin_used+0x2e6a>
je     80991b5 <_IO_stdin_used+0x2eb1>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x66(%ecx)
and    %dl,0x45(%ebx)
dec    %esp
imul   $0x73692078,0x75(%esi),%ebp
and    %ah,0x6e(%ebp)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
cmp    (%eax),%ah
and    $0xa73,%eax
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    80991f0 <_IO_stdin_used+0x2eec>
popa
jb     80991f3 <_IO_stdin_used+0x2eef>
and    %al,0x63(%ecx)
arpl   %sp,0x73(%ebp)
jae    80991a7 <_IO_stdin_used+0x2ea3>
push   %esi
arpl   %si,%gs:0x72(%edi,%ebp,2)
and    %al,0x61(%ebx)
arpl   %bp,0x65(%eax)
and    %ch,(%eax)
inc    %ecx
push   %esi
inc    %ebx
sub    %ebp,(%esi)
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
fs and %dh,%fs:0x6f(%eax)
insb   (%dx),%es:(%edi)
imul   $0x6c657220,0x79(%ebx),%esp
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
bound  %esp,0x63(%ecx)
imul   $0x20,(%edx),%edi
and    $0xa73,%eax
add    %al,0x72(%ebp)
jb     809923b <_IO_stdin_used+0x2f37>
jb     80991ee <_IO_stdin_used+0x2eea>
addr16
gs
je     8099246 <_IO_stdin_used+0x2f42>
imul   $0x6e6f6320,0x67(%esi),%ebp
je     8099240 <_IO_stdin_used+0x2f3c>
js     8099251 <_IO_stdin_used+0x2f4d>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dl,0x49(%ebx)
inc    %esp
cmp    (%eax),%ah
and    $0x45000a73,%eax
jb     8099261 <_IO_stdin_used+0x2f5d>
outsl  %ds:(%esi),(%dx)
jb     8099212 <_IO_stdin_used+0x2f0e>
addr16
gs
je     809926a <_IO_stdin_used+0x2f66>
imul   $0x44495320,0x67(%esi),%ebp
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809926d <_IO_stdin_used+0x2f69>
js     809927e <_IO_stdin_used+0x2f7a>
and    %ah,(%edx)
and    $0x203a2273,%eax
and    $0xa73,%eax
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     8099289 <_IO_stdin_used+0x2f85>
popa
and    %ah,%fs:0x6e(%ecx)
and    %dl,0x45(%ebx)
dec    %esp
imul   $0x6f632078,0x75(%esi),%ebp
outsb  %ds:(%esi),(%dx)
je     809929c <_IO_stdin_used+0x2f98>
js     80992ad <_IO_stdin_used+0x2fa9>
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,0x6f(%ebx)
jne    80992ba <_IO_stdin_used+0x2fb6>
and    %ch,%fs:0x6f(%esi)
je     8099274 <_IO_stdin_used+0x2f70>
arpl   %si,0x65(%edx)
popa
je     80992bf <_IO_stdin_used+0x2fbb>
and    %ch,0x75(%ebp)
je     80992c4 <_IO_stdin_used+0x2fc0>
js     809929b <_IO_stdin_used+0x2f97>
and    %ah,0x61000a73
jbe    80992cc <_IO_stdin_used+0x2fc8>
add    %dh,0x65(%ebx)
jb     80992e4 <_IO_stdin_used+0x2fe0>
imul   $0x7320003d,0x65(%ebx),%esp
jo     80992e0 <_IO_stdin_used+0x2fdc>
fs
cmp    $0x67736d00,%eax
je     80992f8 <_IO_stdin_used+0x2ff4>
jo     80992e6 <_IO_stdin_used+0x2fe2>
cmp    $0x6e692000,%eax
je     80992ed <_IO_stdin_used+0x2fe9>
jb     80992f0 <_IO_stdin_used+0x2fec>
popa
arpl   %sp,0x3d(%ebp)
add    %ah,(%eax)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
cmp    $0x72652000,%eax
jb     809930c <_IO_stdin_used+0x3008>
jb     80992fe <_IO_stdin_used+0x2ffa>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
cmp    $0x65642000,%eax
jae    809931e <_IO_stdin_used+0x301a>
cmp    $0x70742000,%eax
imul   $0x5fcc000,0x0(%ebp,%edi,1),%esp
or     %dl,%al
sti
add    $0x5fbc008,%eax
or     %ah,-0xff7fa05(%eax)
sti
add    $0x5fbe008,%eax
or     %dl,-0x4(%eax)
add    $0x5fd2008,%eax
or     %dl,-0x15(%eax)
pop    %es
or     %dh,0x520807eb(%eax)
gs
jno    8099355 <_IO_stdin_used+0x3051>
gs
jae    8099357 <_IO_stdin_used+0x3053>
gs and %ah,%fs:%gs:0x75(%edx)
jae    809930a <_IO_stdin_used+0x3006>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x69202273,%eax
jae    8099317 <_IO_stdin_used+0x3013>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809931b <_IO_stdin_used+0x3017>
jbe    809935e <_IO_stdin_used+0x305a>
insb   (%dx),%es:(%edi)
imul   $0x61430000,0x0(%eax,%eax,1),%esp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809932b <_IO_stdin_used+0x3027>
popa
arpl   %si,0x75(%ecx)
imul   $0x73206120,0x65(%edx),%esi
gs
jb     809938f <_IO_stdin_used+0x308b>
imul   $0x61747320,0x65(%ebx),%esp
jb     8099396 <_IO_stdin_used+0x3092>
imul   $0x74697720,0x67(%esi),%ebp
push   $0x273a2720
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
popa
jae    8099357 <_IO_stdin_used+0x3053>
and    0x43002273,%ah
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x69202273,%eax
jae    809936f <_IO_stdin_used+0x306b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8099373 <_IO_stdin_used+0x306f>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80993be <_IO_stdin_used+0x30ba>
and    %dh,%fs:0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
ja     80993cf <_IO_stdin_used+0x30cb>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
jb     80993e0 <_IO_stdin_used+0x30dc>
imul   $0x73252220,0x65(%ebx),%esp
and    0x65(%edx),%ah
arpl   %sp,0x75(%ecx)
jae    80993de <_IO_stdin_used+0x30da>
and    %ch,0x74(%ecx)
and    %ch,0x73(%ecx)
and    %dh,0x65(%edx)
jae    80993e9 <_IO_stdin_used+0x30e5>
jb     80993fc <_IO_stdin_used+0x30f8>
gs and %ah,%fs:%gs:0x6f(%esi)
jb     80993ad <_IO_stdin_used+0x30a9>
inc    %esp
sub    $0x27737542,%eax
and    %dh,0x73(%ebp)
and    %ch,%gs:0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    809939d <_IO_stdin_used+0x3099>
add    %al,(%eax)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x69202273,%eax
jae    80993d3 <_IO_stdin_used+0x30cf>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80993d7 <_IO_stdin_used+0x30d3>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8099422 <_IO_stdin_used+0x311e>
and    %dh,%fs:0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
ja     8099433 <_IO_stdin_used+0x312f>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
jb     8099444 <_IO_stdin_used+0x3140>
imul   $0x73252220,0x65(%ebx),%esp
and    (%eax),%ah
fs
jne    809943f <_IO_stdin_used+0x313b>
and    %dh,0x20(%edi,%ebp,2)
push   %ebx
inc    %ebp
dec    %esp
imul   $0x6f702078,0x75(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x0,0x79(%ebx),%esp
inc    %ebx
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x69202273,%eax
jae    8099423 <_IO_stdin_used+0x311f>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8099427 <_IO_stdin_used+0x3123>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8099472 <_IO_stdin_used+0x316e>
and    %dh,%fs:0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
ja     8099483 <_IO_stdin_used+0x317f>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
jb     8099494 <_IO_stdin_used+0x3190>
imul   $0x73252220,0x65(%ebx),%esp
and    (%eax),%ah
fs
jne    809948f <_IO_stdin_used+0x318b>
and    %dh,0x20(%edi,%ebp,2)
inc    %ecx
jo     80994a1 <_IO_stdin_used+0x319d>
inc    %ecx
jb     80994a1 <_IO_stdin_used+0x319d>
outsl  %ds:(%esi),(%dx)
jb     8099457 <_IO_stdin_used+0x3153>
jo     80994a8 <_IO_stdin_used+0x31a4>
insb   (%dx),%es:(%edi)
imul   $0x43000000,0x79(%ebx),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x69202273,%eax
jae    8099473 <_IO_stdin_used+0x316f>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8099477 <_IO_stdin_used+0x3173>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80994c2 <_IO_stdin_used+0x31be>
and    %dh,%fs:0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
ja     80994d3 <_IO_stdin_used+0x31cf>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%ebx)
jb     80994e4 <_IO_stdin_used+0x31e0>
imul   $0x73252220,0x65(%ebx),%esp
and    (%eax),%ah
fs
jne    80994df <_IO_stdin_used+0x31db>
and    %dh,0x20(%edi,%ebp,2)
jae    80994e5 <_IO_stdin_used+0x31e1>
arpl   %si,0x72(%ebp)
imul   $0x696c6f70,0x20(%ecx,%edi,2),%esi
arpl   %bp,0x65(%ecx)
jae    80994b0 <_IO_stdin_used+0x31ac>
imul   $0x20656874,0x20(%esi),%ebp
arpl   %bp,0x6e(%edi)
imul   $0x6172,0x75(%edi),%sp
je     809950b <_IO_stdin_used+0x3207>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x69202273,%eax
jae    80994df <_IO_stdin_used+0x31db>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80994e3 <_IO_stdin_used+0x31df>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     809952e <_IO_stdin_used+0x322a>
and    %dh,%fs:0x20(%edi,%ebp,2)
outsl  %ds:(%esi),(%dx)
ja     809953f <_IO_stdin_used+0x323b>
and    %ch,0x6f(%ebp)
jb     809953b <_IO_stdin_used+0x3237>
and    %dh,0x65(%ebx)
jb     8099551 <_IO_stdin_used+0x324d>
imul   $0x69282073,0x65(%ebx),%esp
outsb  %ds:(%esi),(%dx)
arpl   %si,0x65(%edx)
popa
jae    809954e <_IO_stdin_used+0x324a>
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x63206e69,0x20(%ebx,%esi,2),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8099568 <_IO_stdin_used+0x3264>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%ecx)
and    %dh,0x65(%edx)
jno    8099583 <_IO_stdin_used+0x327f>
imul   $0x47002964,0x65(%edx),%esi
imul   $0x7562206e,0x65(%esi),%esi
jae    809953e <_IO_stdin_used+0x323a>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x69202273,%eax
jae    809954b <_IO_stdin_used+0x3247>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809954f <_IO_stdin_used+0x324b>
jbe    8099592 <_IO_stdin_used+0x328e>
insb   (%dx),%es:(%edi)
imul   $0x61430000,0x0(%eax,%eax,1),%esp
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809955f <_IO_stdin_used+0x325b>
jb     80995a6 <_IO_stdin_used+0x32a2>
insb   (%dx),%es:(%edi)
gs
popa
jae    80995ab <_IO_stdin_used+0x32a7>
and    %ah,0x20(%ecx)
jae    80995b0 <_IO_stdin_used+0x32ac>
jb     80995c3 <_IO_stdin_used+0x32bf>
imul   $0x61747320,0x65(%ebx),%esp
jb     80995ca <_IO_stdin_used+0x32c6>
imul   $0x74697720,0x67(%esi),%ebp
push   $0x273a2720
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
popa
jae    809958b <_IO_stdin_used+0x3287>
and    0x43002273,%ah
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8099597 <_IO_stdin_used+0x3293>
jb     80995de <_IO_stdin_used+0x32da>
insb   (%dx),%es:(%edi)
gs
popa
jae    80995e3 <_IO_stdin_used+0x32df>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x65732073
jb     8099600 <_IO_stdin_used+0x32fc>
imul   $0x63656220,0x65(%ebx),%esp
popa
jne    8099607 <_IO_stdin_used+0x3303>
and    %ch,%gs:0x74(%ecx)
and    %ch,0x73(%ecx)
and    %ch,0x77(%edi)
outsb  %ds:(%esi),(%dx)
gs and %ah,%fs:%gs:0x79(%edx)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x75(%edx)
jae    80995ad <_IO_stdin_used+0x32a9>
push   %ebx
outsb  %gs:(%esi),(%dx)
fs
gs
jb     80995d4 <_IO_stdin_used+0x32d0>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x69202773,%eax
jae    80995e1 <_IO_stdin_used+0x32dd>
imul   $0x64696c61,0x76(%esi),%ebp
or     (%eax),%al
dec    %ebp
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x69202773,%eax
jae    80995fe <_IO_stdin_used+0x32fa>
imul   $0x64696c61,0x76(%esi),%ebp
or     (%eax),%al
jo     809964a <_IO_stdin_used+0x3346>
je     8099653 <_IO_stdin_used+0x334f>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    8099662 <_IO_stdin_used+0x335e>
popa
arpl   %sp,0x0(%ebp)
push   %eax
popa
je     8099662 <_IO_stdin_used+0x335e>
and    %ah,(%edi)
and    $0x69202773,%eax
jae    8099623 <_IO_stdin_used+0x331f>
imul   $0x64696c61,0x76(%esi),%ebp
or     (%eax),%al
popa
jb     8099676 <_IO_stdin_used+0x3372>
add    %ah,0x72(%ecx)
xor    %ch,0x61(%bp)
insl   (%dx),%es:(%edi)
gs
jae    809968a <_IO_stdin_used+0x3386>
popa
arpl   %sp,0x0(%ebp)
add    %al,(%eax)
dec    %ebp
popa
je     8099687 <_IO_stdin_used+0x3383>
push   $0x6c757220
and    %dh,%gs:0x78(%ebp,%eiz,2)
je     8099650 <_IO_stdin_used+0x334c>
imul   $0x62206425,0x20(%ebx),%esi
jns    80996ad <_IO_stdin_used+0x33a9>
gs
jae    8099668 <_IO_stdin_used+0x3364>
and    %ch,0x61(%ebp)
js     80996aa <_IO_stdin_used+0x33a6>
insl   (%dx),%es:(%edi)
jne    80996b1 <_IO_stdin_used+0x33ad>
and    %ch,0x73(%ecx)
and    %ah,0x4d000064
popa
je     80996b3 <_IO_stdin_used+0x33af>
push   $0x6c757220
and    %ch,%gs:0x61(%eax)
jae    809967b <_IO_stdin_used+0x3377>
popa
and    %ch,0x65(%ebx)
jns    8099681 <_IO_stdin_used+0x337d>
ja     80996cc <_IO_stdin_used+0x33c8>
je     80996cd <_IO_stdin_used+0x33c9>
and    %ch,0x6f(%esi)
and    %dh,0x75(%ebx)
bound  %esi,0x65(%ebx)
jno    80996e5 <_IO_stdin_used+0x33e1>
outsb  %gs:(%esi),(%dx)
je     8099694 <_IO_stdin_used+0x3390>
daa
cmp    $0x68632027,%eax
popa
jb     80996de <_IO_stdin_used+0x33da>
arpl   %si,0x72(%ebp,%eiz,2)
add    %al,(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     80996f0 <_IO_stdin_used+0x33ec>
gs
fs
gs
jae    80996fb <_IO_stdin_used+0x33f7>
je     8099701 <_IO_stdin_used+0x33fd>
jo     80996c2 <_IO_stdin_used+0x33be>
inc    %esp
inc    %edx
jne    809970b <_IO_stdin_used+0x3407>
cs
inc    %ebp
jb     809970e <_IO_stdin_used+0x340a>
outsl  %ds:(%esi),(%dx)
jb     80996cd <_IO_stdin_used+0x33c9>
dec    %ebp
popa
je     8099706 <_IO_stdin_used+0x3402>
push   $0x656c7552
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    809970d <_IO_stdin_used+0x3409>
insb   (%dx),%es:(%edi)
imul   $0x6c61626e,0x55(%eax,%eax,1),%esp
popa
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x64(%ebp)
and    %dh,0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     8099721 <_IO_stdin_used+0x341d>
je     809972b <_IO_stdin_used+0x3427>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
jb     8099734 <_IO_stdin_used+0x3430>
jae    80996eb <_IO_stdin_used+0x33e7>
imul   $0x6374616d,0x20(%esi),%ebp
push   $0x6c757220
add    %al,%gs:(%eax)
add    %al,(%eax)
dec    %ebx
gs
jns    8099700 <_IO_stdin_used+0x33fc>
and    $0x70732073,%eax
arpl   %bp,%gs:0x66(%ecx)
imul   $0x69777420,0x64(%ebp),%esp
arpl   %sp,0x20(%ebp)
imul   $0x6374616d,0x20(%esi),%ebp
push   $0x6c757220
or     %gs:(%eax),%al
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8099769 <_IO_stdin_used+0x3465>
insb   (%dx),%es:(%edi)
imul   $0x61737365,0x6d(%eax,%eiz,1),%esp
and    %dh,%gs:0x79(%si)
jo     809977d <_IO_stdin_used+0x3479>
and    %ch,(%eax)
and    $0x69202973,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     8099788 <_IO_stdin_used+0x3484>
push   $0x6c757220
or     %gs:(%eax),%al
add    %al,(%eax)
add    %cl,0x6e(%ecx)
je     8099799 <_IO_stdin_used+0x3495>
jb     809979c <_IO_stdin_used+0x3498>
popa
arpl   %sp,0x20(%ebp)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x69202773,%eax
jae    8099767 <_IO_stdin_used+0x3463>
imul   $0x64696c61,0x76(%esi),%ebp
or     (%eax),%al
jo     80997b3 <_IO_stdin_used+0x34af>
je     80997bc <_IO_stdin_used+0x34b8>
and    %ch,0x72(%edi)
and    %dh,0x61(%eax)
je     80997c4 <_IO_stdin_used+0x34c0>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
jae    80997d3 <_IO_stdin_used+0x34cf>
popa
arpl   %sp,0x20(%ebp)
jae    80997d9 <_IO_stdin_used+0x34d5>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x69777420,0x64(%ebp),%esp
arpl   %sp,0x20(%ebp)
imul   $0x6374616d,0x20(%esi),%ebp
push   $0x6c757220
or     %gs:(%eax),%al
add    %al,(%eax)
inc    %esp
gs
jae    8099800 <_IO_stdin_used+0x34fc>
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x69202773,%eax
jae    80997c1 <_IO_stdin_used+0x34bd>
imul   $0x64696c61,0x76(%esi),%ebp
or     (%eax),%al
add    %al,(%eax)
gs
popa
jbe    8099815 <_IO_stdin_used+0x3511>
jae    8099816 <_IO_stdin_used+0x3512>
jb     8099823 <_IO_stdin_used+0x351f>
jo     80997f3 <_IO_stdin_used+0x34ef>
daa
and    $0x69202773,%eax
jae    80997de <_IO_stdin_used+0x34da>
imul   $0x64696c61,0x76(%esi),%ebp
sub    $0x20,%al
imul   $0x6c756f68,0x73(%eax,%eiz,1),%esi
and    %ah,%fs:0x65(%edx)
and    %ah,(%edi)
je     8099849 <_IO_stdin_used+0x3545>
jne    809983e <_IO_stdin_used+0x353a>
daa
and    %ch,0x72(%edi)
and    %ah,(%edi)
popaw
insb   (%dx),%es:(%edi)
jae    8099849 <_IO_stdin_used+0x3545>
daa
or     (%eax),%al
add    %cl,0x65(%ebx)
jns    809980c <_IO_stdin_used+0x3508>
daa
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     809985b <_IO_stdin_used+0x3557>
push   $0x6c757220
and    %dh,%gs:0x74(%ebx)
popa
jb     8099878 <_IO_stdin_used+0x3574>
jae    8099826 <_IO_stdin_used+0x3522>
ja     8099871 <_IO_stdin_used+0x356d>
je     8099872 <_IO_stdin_used+0x356e>
and    %ah,(%edi)
popa
jb     8099876 <_IO_stdin_used+0x3572>
daa
and    %ah,0x75(%edx)
je     8099835 <_IO_stdin_used+0x3531>
insb   (%dx),%es:(%edi)
popa
arpl   %bp,0x73(%ebx)
and    %ah,0x6e(%ecx)
and    %ah,0x72(%ecx)
and    %ch,0x75(%bp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dl,%cs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    809989b <_IO_stdin_used+0x3597>
and    %ah,%fs:0x65(%edx)
and    %ah,(%edi)
popa
jb     809989f <_IO_stdin_used+0x359b>
xor    %ah,(%edi)
and    %ch,0x72(%edi)
and    %ah,(%edi)
popa
jb     80998a9 <_IO_stdin_used+0x35a5>
aaa
daa
and    %ah,0x6f(%esi)
jb     8099869 <_IO_stdin_used+0x3565>
gs
js     80998ad <_IO_stdin_used+0x35a9>
insl   (%dx),%es:(%edi)
jo     80998bb <_IO_stdin_used+0x35b7>
gs or  %cs:%gs:(%eax),%al
add    %cl,0x65(%ebx)
jns    8099878 <_IO_stdin_used+0x3574>
daa
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     80998c7 <_IO_stdin_used+0x35c3>
push   $0x6c757220
and    %dh,%gs:0x74(%ebx)
popa
jb     80998e4 <_IO_stdin_used+0x35e0>
jae    8099892 <_IO_stdin_used+0x358e>
ja     80998dd <_IO_stdin_used+0x35d9>
je     80998de <_IO_stdin_used+0x35da>
and    %ah,(%edi)
popa
jb     80998e2 <_IO_stdin_used+0x35de>
daa
and    %ah,0x75(%edx)
je     80998a1 <_IO_stdin_used+0x359d>
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     80998ab <_IO_stdin_used+0x35a7>
jo     80998ee <_IO_stdin_used+0x35ea>
jb     8099902 <_IO_stdin_used+0x35fe>
and    %ah,%gs:0x72(%ecx)
and    %ch,0x75(%bp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %dl,%cs:0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    809990e <_IO_stdin_used+0x360a>
and    %ah,%fs:0x65(%edx)
and    %ah,(%edi)
popa
jb     8099912 <_IO_stdin_used+0x360e>
xor    %ah,(%edi)
and    %ch,0x72(%edi)
and    %ah,(%edi)
popa
jb     809991c <_IO_stdin_used+0x3618>
aaa
daa
and    %ah,0x6f(%esi)
jb     80998dc <_IO_stdin_used+0x35d8>
gs
js     8099920 <_IO_stdin_used+0x361c>
insl   (%dx),%es:(%edi)
jo     809992e <_IO_stdin_used+0x362a>
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
popa
jb     8099932 <_IO_stdin_used+0x362e>
xor    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    8099942 <_IO_stdin_used+0x363e>
popa
arpl   %sp,0x3d(%ebp)
daa
and    $0x69202773,%eax
jae    80998fe <_IO_stdin_used+0x35fa>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8099902 <_IO_stdin_used+0x35fe>
popa
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x69666572,0x70(%eax,%eiz,1),%esp
js     8099911 <_IO_stdin_used+0x360d>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x20(%ecx)
bound  %esi,0x73(%ebp)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
add    %al,%gs:(%eax)
dec    %ebx
gs
jns    8099924 <_IO_stdin_used+0x3620>
daa
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     8099973 <_IO_stdin_used+0x366f>
push   $0x6c757220
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809997d <_IO_stdin_used+0x3679>
imul   $0x6e756a20,0x73(%esi),%ebp
imul   $0x61,(%eax),%esp
data16
je     809998e <_IO_stdin_used+0x368a>
jb     809994b <_IO_stdin_used+0x3647>
popa
jb     8099995 <_IO_stdin_used+0x3691>
jne    809999d <_IO_stdin_used+0x3699>
outsb  %gs:(%esi),(%dx)
je     8099954 <_IO_stdin_used+0x3650>
outsb  %ds:(%esi),(%dx)
jne    80999a4 <_IO_stdin_used+0x36a0>
bound  %esp,0x72(%ebp)
and    %ch,(%eax)
and    $0x202e2975,%eax
dec    %edi
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    8099966 <_IO_stdin_used+0x3662>
daa
popa
jb     80999b1 <_IO_stdin_used+0x36ad>
and    $0x74617075,%eax
push   $0x66282027
outsl  %ds:(%esi),(%dx)
jb     8099977 <_IO_stdin_used+0x3673>
gs
js     80999bb <_IO_stdin_used+0x36b7>
insl   (%dx),%es:(%edi)
jo     80999c9 <_IO_stdin_used+0x36c5>
sub    %esp,%gs:(%eax)
outsl  %ds:(%esi),(%dx)
jb     8099983 <_IO_stdin_used+0x367f>
daa
popa
jb     80999ce <_IO_stdin_used+0x36ca>
xor    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
gs
jae    80999de <_IO_stdin_used+0x36da>
popa
arpl   %sp,0x27(%ebp)
and    %ah,0x72(%ecx)
and    %dh,%gs:0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x654b0000,0x0(%eax,%eax,1),%esp
jns    80999a4 <_IO_stdin_used+0x36a0>
daa
and    $0x69202773,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     80999f3 <_IO_stdin_used+0x36ef>
push   $0x6c757220
and    %ch,%gs:0x61(%eax)
jae    80999bb <_IO_stdin_used+0x36b7>
popa
jb     8099a05 <_IO_stdin_used+0x3701>
and    %ch,0x75(%esi)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ah,0x6220756c
jne    8099a21 <_IO_stdin_used+0x371d>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
js     8099a1f <_IO_stdin_used+0x371b>
insl   (%dx),%es:(%edi)
jne    8099a26 <_IO_stdin_used+0x3722>
and    %ch,0x73(%ecx)
and    %ah,0xa2e64
add    %al,(%eax)
inc    %ecx
jb     8099a2e <_IO_stdin_used+0x372a>
jne    8099a36 <_IO_stdin_used+0x3732>
outsb  %gs:(%esi),(%dx)
je     80999ed <_IO_stdin_used+0x36e9>
and    $0x616d2064,%eax
je     8099a37 <_IO_stdin_used+0x3733>
push   $0x6d206465
outsl  %ds:(%esi),(%dx)
jb     8099a41 <_IO_stdin_used+0x373d>
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi)
arpl   %sp,0x20(%ebp)
imul   $0x6374616d,0x20(%esi),%ebp
push   $0x6c757220
or     %gs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebx)
jns    8099a24 <_IO_stdin_used+0x3720>
and    0x69202273,%ah
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     8099a73 <_IO_stdin_used+0x376f>
push   $0x6c757220
add    %al,%gs:(%eax)
push   %esp
push   $0x69672065
jbe    8099a85 <_IO_stdin_used+0x3781>
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
je     8099a89 <_IO_stdin_used+0x3785>
push   $0x6c757220
and    %dh,%gs:0x61(%edi)
jae    8099a9f <_IO_stdin_used+0x379b>
daa
je     8099a54 <_IO_stdin_used+0x3750>
outsw  %ds:(%esi),(%dx)
jne    8099aa6 <_IO_stdin_used+0x37a2>
and    %ah,%fs:0x6e(%ecx)
and    %ah,%fs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     8099a64 <_IO_stdin_used+0x3760>
bound  %esp,0x20(%ebp)
jb     8099aae <_IO_stdin_used+0x37aa>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8099ab2 <_IO_stdin_used+0x37ae>
add    %al,%fs:(%eax)
outsl  %ds:(%esi),(%dx)
jb     8099aba <_IO_stdin_used+0x37b6>
cs
data16
jb     8099abc <_IO_stdin_used+0x37b8>
gs
fs
gs
jae    8099ac7 <_IO_stdin_used+0x37c3>
je     8099acd <_IO_stdin_used+0x37c9>
jo     8099a8e <_IO_stdin_used+0x378a>
inc    %esp
inc    %edx
jne    8099ad7 <_IO_stdin_used+0x37d3>
cs
inc    %ebp
jb     8099ada <_IO_stdin_used+0x37d6>
outsl  %ds:(%esi),(%dx)
jb     8099a99 <_IO_stdin_used+0x3795>
dec    %ebp
popa
je     8099ad2 <_IO_stdin_used+0x37ce>
push   $0x656c7552
dec    %esi
outsl  %ds:(%esi),(%dx)
je     8099abe <_IO_stdin_used+0x37ba>
outsl  %ds:(%esi),(%dx)
jne    8099ae9 <_IO_stdin_used+0x37e5>
add    %al,%fs:(%eax)
add    %al,(%eax)
dec    %ebp
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8099aff <_IO_stdin_used+0x37fb>
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x69616620,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
jne    8099b0a <_IO_stdin_used+0x3806>
and    %ch,%gs:0x6e(%ecx)
and    %ch,0x65(%ebp)
jae    8099b14 <_IO_stdin_used+0x3810>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    8099aa9 <_IO_stdin_used+0x37a5>
add    %al,(%eax)
add    %al,0x72(%ebp)
jb     8099b1f <_IO_stdin_used+0x381b>
jb     8099ad2 <_IO_stdin_used+0x37ce>
imul   $0x656c6966,0x20(%esi),%ebp
and    %ah,0x6c202c73
imul   $0x2c642520,0x65(%esi),%ebp
and    %ah,0x6f(%ebx)
insb   (%dx),%es:(%edi)
jne    8099b39 <_IO_stdin_used+0x3835>
outsb  %ds:(%esi),(%dx)
and    %ah,0x25203a64
jae    8099adf <_IO_stdin_used+0x37db>
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    8099b0a <_IO_stdin_used+0x3806>
fs
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %bl,0x2d(%ebx)
sub    $0x73726576,%eax
imul   $0x2d5b205d,0x6e(%edi),%ebp
sub    $0x73736573,%eax
imul   $0x2d5b205d,0x6e(%edi),%ebp
sub    $0x74737973,%eax
gs
insl   (%dx),%es:(%edi)
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x666e6f63,%eax
imul   $0x656c6966,0x2d(%edi),%esp
cmp    $0x454c4946,%eax
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x6e697270,%eax
je     8099b52 <_IO_stdin_used+0x384e>
popa
fs
fs
jb     8099b8f <_IO_stdin_used+0x388b>
jae    8099b9f <_IO_stdin_used+0x389b>
pop    %ebx
cmp    $0x43534544,%eax
push   %edx
dec    %ecx
push   %eax
push   %esp
dec    %edi
push   %edx
pop    %ebp
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x6e697270,%eax
je     8099b71 <_IO_stdin_used+0x386d>
jo     8099baf <_IO_stdin_used+0x38ab>
fs
pop    %ebx
cmp    $0x43534544,%eax
push   %edx
dec    %ecx
push   %eax
push   %esp
dec    %edi
push   %edx
pop    %ebp
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x6b726f66,%eax
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x6f666f6e,%eax
jb     8099bd3 <_IO_stdin_used+0x38cf>
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x72746e69,%eax
outsl  %ds:(%esi),(%dx)
jae    8099be4 <_IO_stdin_used+0x38e0>
arpl   %si,%gs:0x20(%ebp,%ebx,2)
pop    %ebx
sub    $0x6464612d,%eax
jb     8099be6 <_IO_stdin_used+0x38e2>
jae    8099bf6 <_IO_stdin_used+0x38f2>
cmp    $0x52444441,%eax
inc    %ebp
push   %ebx
push   %ebx
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x74737973,%eax
gs
insl   (%dx),%es:(%edi)
fs
sub    $0x69746361,%eax
jbe    8099bff <_IO_stdin_used+0x38fb>
je     8099c09 <_IO_stdin_used+0x3905>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %ebp
and    %bl,0x2d(%ebx)
sub    $0x69706f6e,%eax
imul   $0xa,%fs:0x5d(%ebp,%eiz,2),%bp
add    %al,0x6f(%ebx)
jne    8099c24 <_IO_stdin_used+0x3920>
outsb  %fs:(%esi),(%dx)
daa
je     8099bdd <_IO_stdin_used+0x38d9>
jb     8099c24 <_IO_stdin_used+0x3920>
popa
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x69(%eax)
jo     8099c37 <_IO_stdin_used+0x3933>
or     %cs:(%eax),%al
add    %al,(%eax)
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8099c50 <_IO_stdin_used+0x394c>
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8099c5d <_IO_stdin_used+0x3959>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0x2d000a73,%eax
sub    $0x73207325,%eax
jo     8099c69 <_IO_stdin_used+0x3965>
arpl   %bp,0x66(%ecx)
imul   $0x74756220,0x64(%ebp),%esp
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8099c83 <_IO_stdin_used+0x397f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x6c612073
jb     8099c8e <_IO_stdin_used+0x398a>
popa
fs
jns    8099c4d <_IO_stdin_used+0x3949>
jb     8099c94 <_IO_stdin_used+0x3990>
jno    8099ca6 <_IO_stdin_used+0x39a2>
gs
jae    8099ca8 <_IO_stdin_used+0x39a4>
gs or  %fs:%gs:(%eax),%al
sub    $0x2073252d,%eax
jae    8099caf <_IO_stdin_used+0x39ab>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x74756220,0x64(%ebp),%esp
and    %dh,0x72(%eax)
imul   $0x20676e69,0x74(%esi),%ebp
jo     8099cbf <_IO_stdin_used+0x39bb>
and    %dh,%fs:0x20(%edi,%ebp,2)
and    $0x6c612073,%eax
jb     8099cc7 <_IO_stdin_used+0x39c3>
popa
fs
jns    8099c86 <_IO_stdin_used+0x3982>
jb     8099ccd <_IO_stdin_used+0x39c9>
jno    8099cdf <_IO_stdin_used+0x39db>
gs
jae    8099ce1 <_IO_stdin_used+0x39dd>
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %ch,0x2073252d
jae    8099ceb <_IO_stdin_used+0x39e7>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x74756220,0x64(%ebp),%esp
and    %dh,0x72(%eax)
imul   $0x20676e69,0x74(%esi),%ebp
popa
fs
fs
jb     8099cfa <_IO_stdin_used+0x39f6>
jae    8099d0a <_IO_stdin_used+0x3a06>
and    %dh,0x20(%edi,%ebp,2)
and    $0x6c612073,%eax
jb     8099d07 <_IO_stdin_used+0x3a03>
popa
fs
jns    8099cc6 <_IO_stdin_used+0x39c2>
jb     8099d0d <_IO_stdin_used+0x3a09>
jno    8099d1f <_IO_stdin_used+0x3a1b>
gs
jae    8099d21 <_IO_stdin_used+0x3a1d>
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %ch,0x2073252d
jae    8099d2b <_IO_stdin_used+0x3a27>
arpl   %bp,%gs:0x66(%ecx)
imul   $0x74756220,0x64(%ebp),%esp
and    %ah,0x64(%ecx)
fs
jb     8099d31 <_IO_stdin_used+0x3a2d>
jae    8099d41 <_IO_stdin_used+0x3a3d>
and    %ah,0x6c612073
jb     8099d3b <_IO_stdin_used+0x3a37>
popa
fs
jns    8099cfa <_IO_stdin_used+0x39f6>
jb     8099d41 <_IO_stdin_used+0x3a3d>
jno    8099d53 <_IO_stdin_used+0x3a4f>
gs
jae    8099d55 <_IO_stdin_used+0x3a51>
gs or  %fs:%gs:(%eax),%al
add    %al,(%eax)
add    %al,0x42(%ebp,%ebp,1)
jne    8099d60 <_IO_stdin_used+0x3a5c>
and    %cl,0x65(%ebp)
jae    8099d65 <_IO_stdin_used+0x3a61>
popa
and    %al,%gs:0x75(%bp,%si)
jae    8099d1a <_IO_stdin_used+0x3a16>
inc    %esp
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f430a73
jo     8099d81 <_IO_stdin_used+0x3a7d>
jb     8099d73 <_IO_stdin_used+0x3a6f>
addr16 push $0x43282074
sub    %esp,(%eax)
xor    (%eax),%dh
xor    %dh,(%edx)
sub    $0x20,%al
xor    (%eax),%dh
xor    %dh,(%ebx)
and    %dl,0x65(%edx)
and    %cl,%fs:0x61(%eax)
je     8099d51 <_IO_stdin_used+0x3a4d>
and    %cl,0x6e(%ecx)
arpl   %bp,(%esi)
sub    $0x20,%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
fs
gs
inc    %esi
popa
arpl   %si,0x72(%edi,%ebp,2)
jns    8099d58 <_IO_stdin_used+0x3a54>
inc    %ecx
inc    %edx
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0xa737265
push   %esp
push   $0x69207369
jae    8099d6f <_IO_stdin_used+0x3a6b>
data16
jb     8099db7 <_IO_stdin_used+0x3ab3>
and    %dh,%gs:0x6f(%ebx)
data16
je     8099dd0 <_IO_stdin_used+0x3acc>
popa
jb     8099dc1 <_IO_stdin_used+0x3abd>
cmp    (%eax),%esp
jae    8099dc5 <_IO_stdin_used+0x3ac1>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %dh,0x6f(%ebx)
jne    8099ddc <_IO_stdin_used+0x3ad8>
arpl   %sp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
jb     8099d91 <_IO_stdin_used+0x3a8d>
arpl   %bp,0x70(%edi)
jns    8099ddf <_IO_stdin_used+0x3adb>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp,%di)
outsb  %ds:(%esi),(%dx)
imul   $0xa2e736e,%fs:0x6f(%ecx,%ebp,2),%esi
0a
push   %esp
push   $0x20657265
imul   $0x77204f4e,0x20(%ebx),%esi
popa
jb     8099e07 <_IO_stdin_used+0x3b03>
popa
outsb  %ds:(%esi),(%dx)
je     8099e12 <_IO_stdin_used+0x3b0e>
cmp    (%eax),%esp
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     8099dbf <_IO_stdin_used+0x3abb>
gs
jbe    8099e07 <_IO_stdin_used+0x3b03>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     8099dc8 <_IO_stdin_used+0x3ac4>
dec    %ebp
inc    %ebp
push   %edx
inc    %ebx
dec    %eax
inc    %ecx
dec    %esi
push   %esp
inc    %ecx
inc    %edx
dec    %ecx
dec    %esp
dec    %ecx
push   %esp
pop    %ecx
and    %ch,0x72(%edi)
and    %al,0x49(%esi)
push   %esp
dec    %esi
inc    %ebp
push   %ebx
push   %ebx
and    %al,0x4f(%esi)
push   %edx
and    %al,0x20(%ecx)
push   %eax
inc    %ecx
push   %edx
push   %esp
dec    %ecx
inc    %ebx
push   %ebp
dec    %esp
inc    %ecx
push   %edx
and    %dl,0x55(%eax)
push   %edx
push   %eax
dec    %edi
push   %ebx
inc    %ebp
or     %cs:(%eax),%al
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     8099e08 <_IO_stdin_used+0x3b04>
imul   $0x70736f72,0x74(%esi),%ebp
arpl   %si,%gs:0x2d(%eax,%eiz,1)
and    %cl,0x75(%edi)
je     8099e19 <_IO_stdin_used+0x3b15>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     8099e7b <_IO_stdin_used+0x3b77>
or     (%eax),%al
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     8099e7b <_IO_stdin_used+0x3b77>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0xa2e,0x64(%ebp),%esp
add    %dl,0x45(%ebx)
dec    %esp
imul   $0x72702078,0x75(%esi),%ebp
gs
sub    $0x74696e69,%eax
imul   $0x74617a69,0x6c(%ecx),%esp
imul   $0x69616620,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
gs or  %fs:%gs:(%eax),%al
add    %al,0x70(%ecx)
jo     8099e91 <_IO_stdin_used+0x3b8d>
jb     8099ebf <_IO_stdin_used+0x3bbb>
outsl  %ds:(%esi),(%dx)
jb     8099e75 <_IO_stdin_used+0x3b71>
jo     8099ec9 <_IO_stdin_used+0x3bc5>
gs
sub    $0x74696e69,%eax
imul   $0x74617a69,0x6c(%ecx),%esp
imul   $0x69616620,0x6e(%edi),%ebp
insb   (%dx),%es:(%edi)
gs or  %fs:%gs:(%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    8099ef0 <_IO_stdin_used+0x3bec>
popa
jb     8099ef3 <_IO_stdin_used+0x3bef>
and    %ch,0x65(%ebp)
jae    8099ef7 <_IO_stdin_used+0x3bf3>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    8099ec6 <_IO_stdin_used+0x3bc2>
and    %ah,0xa73
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8099f0c <_IO_stdin_used+0x3c08>
and    %ah,0x72(%ebx)
gs
popa
je     8099f09 <_IO_stdin_used+0x3c05>
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x69(%eax)
jo     8099f15 <_IO_stdin_used+0x3c11>
cmp    (%eax),%ah
and    $0xa73,%eax
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8099f30 <_IO_stdin_used+0x3c2c>
and    %ah,0x72(%ebx)
gs
popa
je     8099f2d <_IO_stdin_used+0x3c29>
and    %dh,0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x61(%edi)
je     8099f37 <_IO_stdin_used+0x3c33>
push   $0x7325203a
or     (%eax),%al
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     8099f54 <_IO_stdin_used+0x3c50>
and    %ah,0x64(%ecx)
and    %dh,%fs:0x65(%edx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x61(%edi)
je     8099f58 <_IO_stdin_used+0x3c54>
push   $0x206f7420
insl   (%dx),%es:(%edi)
popa
imul   $0x706f6f6c,0x20(%esi),%ebp
cmp    (%eax),%ah
and    $0xa73,%eax
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    8099f71 <_IO_stdin_used+0x3c6d>
insb   (%dx),%es:(%edi)
imul   $0x20656c69,0x66(%eax,%eiz,1),%esp
fs
gs
jae    8099f80 <_IO_stdin_used+0x3c7c>
jb     8099f88 <_IO_stdin_used+0x3c84>
jo     8099f95 <_IO_stdin_used+0x3c91>
outsl  %ds:(%esi),(%dx)
jb     8099f5e <_IO_stdin_used+0x3c5a>
and    %ah,(%edx)
and    $0xa2273,%eax
sub    $0x6c65682d,%eax
jo     8099f32 <_IO_stdin_used+0x3c2e>
sub    $0x7265762d,%eax
jae    8099fa2 <_IO_stdin_used+0x3c9e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x746e692d
jb     8099fb2 <_IO_stdin_used+0x3cae>
jae    8099fb5 <_IO_stdin_used+0x3cb1>
arpl   %si,%gs:0x2d(%eax,%eax,1)
sub    $0x6f666f6e,%eax
jb     8099fbc <_IO_stdin_used+0x3cb8>
add    %ch,0x726f662d
imul   $0x2d,(%eax),%eax
sub    $0x69706f6e,%eax
imul   $0x2d2d,%fs:0x0(%ebp,%eiz,2),%bp
jae    8099fe2 <_IO_stdin_used+0x3cde>
jae    8099fdf <_IO_stdin_used+0x3cdb>
gs
insl   (%dx),%es:(%edi)
fs
sub    $0x69746361,%eax
jbe    8099fd6 <_IO_stdin_used+0x3cd2>
je     8099fe0 <_IO_stdin_used+0x3cdc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x7379732d
je     8099fe6 <_IO_stdin_used+0x3ce2>
insl   (%dx),%es:(%edi)
add    %ch,0x7365732d
jae    8099ff3 <_IO_stdin_used+0x3cef>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ch,0x6e6f632d
imul   $0x6966,0x2d(%edi),%sp
insb   (%dx),%es:(%edi)
gs
cmp    $0x632d2d00,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6966,0x2d(%edi),%sp
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x6464612d
jb     809a016 <_IO_stdin_used+0x3d12>
jae    809a026 <_IO_stdin_used+0x3d22>
cmp    $0x612d2d00,%eax
fs
fs
jb     809a021 <_IO_stdin_used+0x3d1d>
jae    809a031 <_IO_stdin_used+0x3d2d>
add    %ch,0x6972702d
outsb  %ds:(%esi),(%dx)
je     8099ff4 <_IO_stdin_used+0x3cf0>
popa
fs
fs
jb     809a031 <_IO_stdin_used+0x3d2d>
jae    809a041 <_IO_stdin_used+0x3d3d>
cmp    $0x702d2d00,%eax
jb     809a03e <_IO_stdin_used+0x3d3a>
outsb  %ds:(%esi),(%dx)
je     809a005 <_IO_stdin_used+0x3d01>
popa
fs
fs
jb     809a042 <_IO_stdin_used+0x3d3e>
jae    809a052 <_IO_stdin_used+0x3d4e>
add    %ch,0x6972702d
outsb  %ds:(%esi),(%dx)
je     809a015 <_IO_stdin_used+0x3d11>
jo     809a053 <_IO_stdin_used+0x3d4f>
fs
cmp    $0x702d2d00,%eax
jb     809a05b <_IO_stdin_used+0x3d57>
outsb  %ds:(%esi),(%dx)
je     809a022 <_IO_stdin_used+0x3d1e>
jo     809a060 <_IO_stdin_used+0x3d5c>
add    %al,%fs:(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     809a078 <_IO_stdin_used+0x3d74>
and    %dh,0x72(%edi)
imul   $0x6d726574,0x20(%ebp,%eiz,2),%esi
imul   $0x6e6f6974,0x61(%esi),%ebp
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
jo     809a091 <_IO_stdin_used+0x3d8d>
jo     809a08f <_IO_stdin_used+0x3d8b>
and    %ch,0x66756220
data16
gs
jb     809a054 <_IO_stdin_used+0x3d50>
data16
jne    809a0a3 <_IO_stdin_used+0x3d9f>
insb   (%dx),%es:(%edi)
aas
or     0x69(%edi),%dl
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x78(%ebp)
imul   $0x6574736e,0x69(%eax,%eiz,1),%esi
popa
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     809a0d8 <_IO_stdin_used+0x3dd4>
and    %dh,0x72(%edi)
imul   $0x72206f74,0x20(%ebp,%eiz,2),%esi
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %dh,%fs:0x69(%eax)
jo     809a0e3 <_IO_stdin_used+0x3ddf>
and    %ch,0x66756220
data16
gs
jb     809a0a8 <_IO_stdin_used+0x3da4>
data16
jne    809a0f7 <_IO_stdin_used+0x3df3>
insb   (%dx),%es:(%edi)
aas
or     (%eax),%al
cs
cs
das
cs
cs
das
bound  %esi,%fs:0x73(%ebp)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x6e6e6f63,%eax
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
arpl   %ax,%cs:(%eax)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ch,(%edi)
outsl  %ds:(%esi),(%dx)
jb     809a12a <_IO_stdin_used+0x3e26>
das
data16
jb     809a12c <_IO_stdin_used+0x3e28>
gs
fs
gs
jae    809a137 <_IO_stdin_used+0x3e33>
je     809a13d <_IO_stdin_used+0x3e39>
jo     809a0ff <_IO_stdin_used+0x3dfb>
inc    %esp
inc    %edx
jne    809a147 <_IO_stdin_used+0x3e43>
das
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,0x72(%eax)
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs and %ah,%fs:%gs:(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
sub    $0x6172743e,%eax
outsb  %ds:(%esi),(%dx)
jae    809a172 <_IO_stdin_used+0x3e6e>
outsl  %ds:(%esi),(%dx)
jb     809a179 <_IO_stdin_used+0x3e75>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %dh,0x69(%ebp)
and    %ah,%fs:(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %dh,0x69(%eax)
and    %ah,%fs:(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ah,0x74(%ecx,%eiz,2)
popa
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ah,0x74(%ecx,%eiz,2)
popa
pop    %edi
jae    809a1a3 <_IO_stdin_used+0x3e9f>
jp     809a1a1 <_IO_stdin_used+0x3e9d>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ch,0x65(%ebp)
jae    809a1bc <_IO_stdin_used+0x3eb8>
popa
and    %ah,%gs:(%bx,%di)
cmp    $0x4c554e20,%eax
dec    %esp
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    809a1cd <_IO_stdin_used+0x3ec9>
add    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
sub    $0x7369643e,%eax
jo     809a1dc <_IO_stdin_used+0x3ed8>
je     809a1e0 <_IO_stdin_used+0x3edc>
push   $0x7163615f
jne    809a1ed <_IO_stdin_used+0x3ee9>
jb     809a1eb <_IO_stdin_used+0x3ee7>
add    %ah,%fs:0x75(%edi)
imul   $0x65726464,0x61(%eax,%eax,1),%esp
jae    809a207 <_IO_stdin_used+0x3f03>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ch,0x72(%edi)
addr16
cs
data16
jb     809a209 <_IO_stdin_used+0x3f05>
gs
fs
gs
jae    809a214 <_IO_stdin_used+0x3f10>
je     809a21a <_IO_stdin_used+0x3f16>
jo     809a1db <_IO_stdin_used+0x3ed7>
inc    %esp
inc    %edx
jne    809a224 <_IO_stdin_used+0x3f20>
cs
push   %eax
gs
gs
jb     809a1b7 <_IO_stdin_used+0x3eb3>
push   %eax
imul   $0x74654700,0x67(%esi),%ebp
dec    %ebp
popa
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
gs
dec    %ecx
add    %dh,%fs:0x69(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     809a243 <_IO_stdin_used+0x3f3f>
pop    %edi
jae    809a23c <_IO_stdin_used+0x3f38>
fs
pop    %edi
jo     809a1f7 <_IO_stdin_used+0x3ef3>
and    %edi,0x4c554e20
dec    %esp
add    %ah,0x75(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %dh,0x74(%esi)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
and    %edi,0x4c554e20
dec    %esp
add    %dh,0x61(%eax)
jb     809a268 <_IO_stdin_used+0x3f64>
outsb  %ds:(%esi),(%dx)
je     809a265 <_IO_stdin_used+0x3f61>
jo     809a269 <_IO_stdin_used+0x3f65>
je     809a272 <_IO_stdin_used+0x3f6e>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %dh,0x61(%eax)
jb     809a27c <_IO_stdin_used+0x3f78>
outsb  %ds:(%esi),(%dx)
je     809a279 <_IO_stdin_used+0x3f75>
jo     809a27d <_IO_stdin_used+0x3f79>
je     809a286 <_IO_stdin_used+0x3f82>
pop    %ebx
xor    %bl,0x20(%ebp)
cmp    $0x2f27203d,%eax
daa
add    %ah,0x68(%ebx)
imul   $0x72746e65,0x5f(%esp,%eiz,2),%ebp
imul   $0x203d2120,0x73(%ebp),%esp
dec    %esi
push   %ebp
dec    %esp
dec    %esp
add    %ch,(%edx)
jae    809a2ae <_IO_stdin_used+0x3faa>
outsl  %ds:(%esi),(%dx)
je     809a2a4 <_IO_stdin_used+0x3fa0>
jo     809a267 <_IO_stdin_used+0x3f63>
ds
cmp    $0x73003020,%eax
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     809a271 <_IO_stdin_used+0x3f6d>
ds
cmp    $0x3020,%eax
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
sub    $0x6e65673e,%eax
gs
jb     809a2cb <_IO_stdin_used+0x3fc7>
je     809a2d5 <_IO_stdin_used+0x3fd1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %bh,0x645f203d
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %si,0x72(%ebp)
jb     809a2e2 <_IO_stdin_used+0x3fde>
outsb  %ds:(%esi),(%dx)
je     809a2df <_IO_stdin_used+0x3fdb>
outsb  %gs:(%si),(%dx)
gs
jb     809a2e7 <_IO_stdin_used+0x3fe3>
je     809a2f1 <_IO_stdin_used+0x3fed>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %bh,0x7270203d
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
fs
sub    $0x6e6f633e,%eax
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
dec    %ebp
outsl  %ds:(%esi),(%dx)
jae    809a32c <_IO_stdin_used+0x4028>
and    %ch,0x6b(%ecx,%ebp,2)
gs
insb   (%dx),%es:(%edi)
jns    809a2ec <_IO_stdin_used+0x3fe8>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x70(%ecx)
jo     809a335 <_IO_stdin_used+0x4031>
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x6e(%ebp)
jb     809a341 <_IO_stdin_used+0x403d>
data16
sub    %ch,(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    809a309 <_IO_stdin_used+0x4005>
je     809a354 <_IO_stdin_used+0x4050>
insl   (%dx),%es:(%edi)
gs
jae    809a30f <_IO_stdin_used+0x400b>
popa
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809a35e <_IO_stdin_used+0x405a>
and    %ah,%fs:0x20(%ecx)
jb     809a364 <_IO_stdin_used+0x4060>
data16
gs
jb     809a368 <_IO_stdin_used+0x4064>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
bound  %esp,0x6c(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x206f7420,0x67(%bp),%ebp
insb   (%dx),%es:(%edi)
imul   $0x2c737562,0x64(%edx),%esp
and    %dh,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
je     809a38d <_IO_stdin_used+0x4089>
imul   $0x61207369,0x20(%ebx),%esi
and    %dh,0x68(%ebx)
popa
jb     809a397 <_IO_stdin_used+0x4093>
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %al,(%eax)
add    %cl,0x6f(%ebp)
jae    809a3bc <_IO_stdin_used+0x40b8>
and    %ch,0x6b(%ecx,%ebp,2)
gs
insb   (%dx),%es:(%edi)
jns    809a37c <_IO_stdin_used+0x4078>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x70(%ecx)
jo     809a3c5 <_IO_stdin_used+0x40c1>
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %dh,0x61(%edi)
jae    809a385 <_IO_stdin_used+0x4081>
jae    809a3dc <_IO_stdin_used+0x40d8>
jo     809a3d9 <_IO_stdin_used+0x40d5>
outsl  %ds:(%esi),(%dx)
jae    809a3d1 <_IO_stdin_used+0x40cd>
and    %dh,%fs:0x20(%edi,%ebp,2)
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x75(%edx,%eiz,2)
jae    809a3da <_IO_stdin_used+0x40d6>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
sub    %ch,%gs:(%ecx)
sub    $0x20,%al
jae    809a3fa <_IO_stdin_used+0x40f6>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
je     809a3ff <_IO_stdin_used+0x40fb>
imul   $0x61207369,0x20(%ebx),%esi
and    %dh,0x72(%eax)
imul   $0x63206574,0x61(%esi),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
push   %esp
push   $0x616c2065
jae    809a430 <_IO_stdin_used+0x412c>
and    %dh,0x65(%edx)
data16
gs
jb     809a428 <_IO_stdin_used+0x4124>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x20(%ecx)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    809a3fb <_IO_stdin_used+0x40f7>
fs
jb     809a44d <_IO_stdin_used+0x4149>
jo     809a450 <_IO_stdin_used+0x414c>
gs and %dh,%fs:%gs:0x69(%edi)
je     809a44f <_IO_stdin_used+0x414b>
outsl  %ds:(%esi),(%dx)
jne    809a45e <_IO_stdin_used+0x415a>
and    %ah,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
jae    809a459 <_IO_stdin_used+0x4155>
outsb  %ds:(%esi),(%dx)
and    %dh,0x68(%si)
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dl,%cs:0x69(%eax,%ebp,2)
jae    809a428 <_IO_stdin_used+0x4124>
imul   $0x75622061,0x20(%ebx),%esi
and    %ch,0x6e(%bx,%di)
and    %ah,0x6e(%ecx)
and    %ah,0x70(%ecx)
jo     809a487 <_IO_stdin_used+0x4183>
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %dl,%cs:0x65(%ebx)
and    %ah,%gs:0x75(%edx,%eiz,2)
jae    809a48c <_IO_stdin_used+0x4188>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    809a4a8 <_IO_stdin_used+0x41a4>
jb     809a4a1 <_IO_stdin_used+0x419d>
data16
sub    %ch,(%ecx)
and    %ah,0x63(%edi,%ebp,2)
jne    809a4b2 <_IO_stdin_used+0x41ae>
outsb  %gs:(%esi),(%dx)
je     809a4aa <_IO_stdin_used+0x41a6>
je     809a4b4 <_IO_stdin_used+0x41b0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     809a472 <_IO_stdin_used+0x416e>
fs
gs
je     809a4b7 <_IO_stdin_used+0x41b3>
imul   $0x73250a,0x2e(%ebx,%esi,2),%ebp
add    %al,(%eax)
jo     809a4d4 <_IO_stdin_used+0x41d0>
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
fs
sub    $0x6e6f633e,%eax
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %bh,0x6f63203d
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809a504 <_IO_stdin_used+0x4200>
popa
addr16
gs
pop    %edi
addr16
gs
je     809a4f8 <_IO_stdin_used+0x41f4>
je     809a514 <_IO_stdin_used+0x4210>
jo     809a502 <_IO_stdin_used+0x41fe>
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
gs
jae    809a516 <_IO_stdin_used+0x4212>
popa
sub    %esp,%gs:(%bx,%si)
and    %edi,0x55424420
push   %ebx
pop    %edi
dec    %ebp
inc    %ebp
push   %ebx
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
dec    %ebp
inc    %ebp
push   %esp
dec    %eax
dec    %edi
inc    %esp
pop    %edi
inc    %ebx
inc    %ecx
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809a548 <_IO_stdin_used+0x4244>
popa
addr16
gs
pop    %edi
addr16
gs
je     809a53c <_IO_stdin_used+0x4238>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
gs
jae    809a55c <_IO_stdin_used+0x4258>
popa
sub    %esp,%gs:(%bx,%si)
and    %edi,0x4c554e20
dec    %esp
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809a55c <_IO_stdin_used+0x4258>
insl   (%dx),%es:(%edi)
gs
jae    809a574 <_IO_stdin_used+0x4270>
popa
addr16
gs
pop    %edi
addr16
gs
je     809a568 <_IO_stdin_used+0x4264>
je     809a584 <_IO_stdin_used+0x4280>
jo     809a572 <_IO_stdin_used+0x426e>
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
gs
jae    809a586 <_IO_stdin_used+0x4282>
popa
sub    %esp,%gs:(%bx,%si)
and    %edi,0x55424420
push   %ebx
pop    %edi
dec    %ebp
inc    %ebp
push   %ebx
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
push   %ebx
dec    %ecx
inc    %edi
dec    %esi
inc    %ecx
dec    %esp
and    %bh,0x20(%esp,%edi,2)
sub    %ah,0x75(%edx,%eiz,2)
jae    809a59c <_IO_stdin_used+0x4298>
insl   (%dx),%es:(%edi)
gs
jae    809a5b4 <_IO_stdin_used+0x42b0>
popa
addr16
gs
pop    %edi
addr16
gs
je     809a5a8 <_IO_stdin_used+0x42a4>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x20(%ebp)
sub    %ch,0x65(%ebp)
jae    809a5cb <_IO_stdin_used+0x42c7>
popa
sub    %esp,%gs:(%bx,%si)
and    %edi,0x4c554e20
dec    %esp
and    %ah,(%esi)
and    %ah,%es:0x75(%edx,%eiz,2)
jae    809a5cc <_IO_stdin_used+0x42c8>
insl   (%dx),%es:(%edi)
gs
jae    809a5e4 <_IO_stdin_used+0x42e0>
popa
addr16
gs
pop    %edi
addr16
gs
je     809a5d8 <_IO_stdin_used+0x42d4>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
gs
jae    809a5f8 <_IO_stdin_used+0x42f4>
popa
sub    %esp,%gs:(%bx,%si)
and    %edi,0x4c554e20
dec    %esp
sub    %eax,(%eax)
add    %al,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    809a5c3 <_IO_stdin_used+0x42bf>
imul   $0x656e6e6f,%fs:0x63(%ebx),%esi
arpl   %si,0x64(%ebp,%eiz,2)
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     809a61b <_IO_stdin_used+0x4317>
and    %ah,0x20(%ecx)
jb     809a620 <_IO_stdin_used+0x431c>
jo     809a629 <_IO_stdin_used+0x4325>
jns    809a5df <_IO_stdin_used+0x42db>
ja     809a622 <_IO_stdin_used+0x431e>
jae    809a5e3 <_IO_stdin_used+0x42df>
jb     809a62a <_IO_stdin_used+0x4326>
arpl   %sp,0x69(%ebp)
jbe    809a62f <_IO_stdin_used+0x432b>
add    %ch,%fs:0x72(%edi)
addr16
cs
data16
jb     809a638 <_IO_stdin_used+0x4334>
gs
fs
gs
jae    809a643 <_IO_stdin_used+0x433f>
je     809a649 <_IO_stdin_used+0x4345>
jo     809a60a <_IO_stdin_used+0x4306>
inc    %esp
inc    %edx
jne    809a653 <_IO_stdin_used+0x434f>
cs
inc    %ebp
jb     809a656 <_IO_stdin_used+0x4352>
outsl  %ds:(%esi),(%dx)
jb     809a615 <_IO_stdin_used+0x4311>
inc    %esp
imul   $0x656e6e6f,0x63(%ebx),%esi
arpl   %si,0x64(%ebp,%eiz,2)
add    %dh,0x6d(%ecx,%ebp,2)
outsl  %gs:(%esi),(%dx)
jne    809a66f <_IO_stdin_used+0x436b>
pop    %edi
insl   (%dx),%es:(%edi)
imul   $0x6f636573,0x69(%esp,%ebp,2),%ebp
outsb  %ds:(%esi),(%dx)
fs
jae    809a629 <_IO_stdin_used+0x4325>
ds
cmp    $0x7c203020,%eax
jl     809a631 <_IO_stdin_used+0x432d>
je     809a67c <_IO_stdin_used+0x4378>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    809a68c <_IO_stdin_used+0x4388>
pop    %edi
insl   (%dx),%es:(%edi)
imul   $0x6f636573,0x69(%esp,%ebp,2),%ebp
outsb  %ds:(%esi),(%dx)
fs
jae    809a646 <_IO_stdin_used+0x4342>
cmp    $0x312d203d,%eax
add    %ch,(%eax)
gs
jb     809a6a2 <_IO_stdin_used+0x439e>
outsl  %ds:(%esi),(%dx)
jb     809a65c <_IO_stdin_used+0x4358>
and    %bh,0x554e203d
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
and    %esp,0x75(%edx,%eiz,2)
jae    809a6a4 <_IO_stdin_used+0x43a0>
gs
jb     809a6ba <_IO_stdin_used+0x43b6>
outsl  %ds:(%esi),(%dx)
jb     809a6aa <_IO_stdin_used+0x43a6>
imul   $0x20746573,0x5f(%ebx),%esi
sub    %ch,(%eax)
gs
jb     809a6c9 <_IO_stdin_used+0x43c5>
outsl  %ds:(%esi),(%dx)
jb     809a683 <_IO_stdin_used+0x437f>
sub    %eax,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809a683 <_IO_stdin_used+0x437f>
jae    809a6ca <_IO_stdin_used+0x43c6>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     809a6e9 <_IO_stdin_used+0x43e5>
outsl  %ds:(%esi),(%dx)
jb     809a6eb <_IO_stdin_used+0x43e7>
and    %ch,0x6e(%edi)
and    %dh,0x69(%eax,%ebp,2)
jae    809a6a1 <_IO_stdin_used+0x439d>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,%cs:(%eax)
add    %al,(%eax)
insl   (%dx),%es:(%edi)
gs
jae    809a707 <_IO_stdin_used+0x4403>
popa
and    %bh,%gs:(%di)
cmp    $0x6e6f6320,%eax
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
sub    $0x73656d3e,%eax
jae    809a70d <_IO_stdin_used+0x4409>
addr16
gs
pop    %edi
bound  %ebp,0x72(%edi)
jb     809a723 <_IO_stdin_used+0x441f>
ja     809a71b <_IO_stdin_used+0x4417>
add    %al,%fs:0x70(%ecx)
jo     809a728 <_IO_stdin_used+0x4424>
imul   $0x6e6f6974,0x61(%ebx),%esp
jae    809a6e5 <_IO_stdin_used+0x43e1>
insl   (%dx),%es:(%edi)
jne    809a73b <_IO_stdin_used+0x4437>
je     809a6ea <_IO_stdin_used+0x43e6>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809a6ee <_IO_stdin_used+0x43ea>
arpl   %bp,0x73(%edi,%ebp,2)
and    %dh,%gs:0x68(%ebx)
popa
jb     809a73e <_IO_stdin_used+0x443a>
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    809a707 <_IO_stdin_used+0x4403>
sub    $0x65657320,%eax
and    %ah,0x75(%edx,%eiz,2)
jae    809a751 <_IO_stdin_used+0x444d>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
sub    %ch,%gs:(%ecx)
and    %ah,0x63(%edi,%ebp,2)
jae    809a738 <_IO_stdin_used+0x4434>
and    %dl,0x69(%eax,%ebp,2)
jae    809a730 <_IO_stdin_used+0x442c>
imul   $0x75622061,0x20(%ebx),%esi
and    %ch,0x6e(%bx,%di)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x70(%ecx)
jo     809a790 <_IO_stdin_used+0x448c>
imul   $0x6e6f6974,0x61(%ebx),%esp
or     %cs:(%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809a79a <_IO_stdin_used+0x4496>
cs
data16
jb     809a79c <_IO_stdin_used+0x4498>
gs
fs
gs
jae    809a7a7 <_IO_stdin_used+0x44a3>
je     809a7ad <_IO_stdin_used+0x44a9>
jo     809a76e <_IO_stdin_used+0x446a>
inc    %esp
inc    %edx
jne    809a7b7 <_IO_stdin_used+0x44b3>
cs
inc    %ebp
jb     809a7ba <_IO_stdin_used+0x44b6>
outsl  %ds:(%esi),(%dx)
jb     809a779 <_IO_stdin_used+0x4475>
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
dec    %edi
bound  %ebp,0x65(%edx)
arpl   %si,0x0(%eax,%eax,1)
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebp)
je     809a7d0 <_IO_stdin_used+0x44cc>
outsl  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx)
jbe    809a7de <_IO_stdin_used+0x44da>
imul   $0x20,0x64(%ebp),%esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%edi)
addr16
cs
data16
jb     809a7e2 <_IO_stdin_used+0x44de>
gs
fs
gs
jae    809a7ed <_IO_stdin_used+0x44e9>
je     809a7f3 <_IO_stdin_used+0x44ef>
jo     809a7b4 <_IO_stdin_used+0x44b0>
inc    %esp
inc    %edx
jne    809a7fd <_IO_stdin_used+0x44f9>
cs
push   %eax
gs
gs
jb     809a7b0 <_IO_stdin_used+0x44ac>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
add    %al,(%eax)
dec    %ebp
gs
je     809a808 <_IO_stdin_used+0x4504>
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:(%edx)
and    $0x77202273,%eax
imul   $0x6e676973,0x20(%eax,%ebp,2),%esi
popa
je     809a829 <_IO_stdin_used+0x4525>
jb     809a81b <_IO_stdin_used+0x4517>
and    %ah,(%edx)
and    $0x6f202273,%eax
outsb  %ds:(%esi),(%dx)
and    %ch,0x6e(%ecx)
je     809a828 <_IO_stdin_used+0x4524>
jb     809a82b <_IO_stdin_used+0x4527>
popa
arpl   %sp,0x20(%ebp)
and    0x64202273,%ah
outsl  %ds:(%esi),(%dx)
gs
jae    809a841 <_IO_stdin_used+0x453d>
daa
je     809a7f6 <_IO_stdin_used+0x44f2>
gs
js     809a842 <_IO_stdin_used+0x453e>
jae    809a84f <_IO_stdin_used+0x454b>
or     (%eax),%al
add    %al,(%eax)
add    %al,0x74(%ecx)
je     809a849 <_IO_stdin_used+0x4545>
insl   (%dx),%es:(%edi)
jo     809a85b <_IO_stdin_used+0x4557>
and    %dh,0x20(%edi,%ebp,2)
jb     809a852 <_IO_stdin_used+0x454e>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809a856 <_IO_stdin_used+0x4552>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
je     809a85c <_IO_stdin_used+0x4558>
jb     809a819 <_IO_stdin_used+0x4515>
data16
jne    809a86a <_IO_stdin_used+0x4566>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x73752070
gs
jb     809a82a <_IO_stdin_used+0x4526>
fs
popa
je     809a86f <_IO_stdin_used+0x456b>
and    %ah,0x62202c70
jne    809a88a <_IO_stdin_used+0x4586>
and    %ch,0x6f(%esi)
and    %dh,0x75(%ebx)
arpl   %bp,0x20(%eax)
imul   $0x2072,0x65(%esp,%esi,2),%bp
push   $0x62207361
gs outsb %gs:(%esi),(%dx)
and    %ah,0x64(%ecx)
fs gs or %fs:%gs:(%eax),%al
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809a8a2 <_IO_stdin_used+0x459e>
cs
data16
jb     809a8a4 <_IO_stdin_used+0x45a0>
gs
fs
gs
jae    809a8af <_IO_stdin_used+0x45ab>
je     809a8b5 <_IO_stdin_used+0x45b1>
jo     809a876 <_IO_stdin_used+0x4572>
inc    %esp
inc    %edx
jne    809a8bf <_IO_stdin_used+0x45bb>
cs
inc    %ebp
jb     809a8c2 <_IO_stdin_used+0x45be>
outsl  %ds:(%esi),(%dx)
jb     809a881 <_IO_stdin_used+0x457d>
dec    %edi
bound  %ebp,0x65(%edx)
arpl   %si,0x61(%eax,%edx,2)
je     809a8c5 <_IO_stdin_used+0x45c1>
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %ebp
jae    809a8c7 <_IO_stdin_used+0x45c3>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809a8f3 <_IO_stdin_used+0x45ef>
outsl  %ds:(%esi),(%dx)
jne    809a90b <_IO_stdin_used+0x4607>
outsl  %ds:(%si),(%dx)
imul   $0x696e755f,0x67(%esi),%ebp
js     809a901 <_IO_stdin_used+0x45fd>
data16
fs
jae    809a8a6 <_IO_stdin_used+0x45a2>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809a933 <_IO_stdin_used+0x462f>
outsl  %ds:(%esi),(%dx)
jne    809a94b <_IO_stdin_used+0x4647>
outsl  %ds:(%si),(%dx)
imul   $0x7a69735f,0x67(%esi),%ebp
add    %al,%gs:(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809a964 <_IO_stdin_used+0x4660>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809a973 <_IO_stdin_used+0x466f>
insl   (%dx),%es:(%edi)
popa
js     809a977 <_IO_stdin_used+0x4673>
jb     809a97f <_IO_stdin_used+0x467b>
arpl   %sp,0x69(%ebp)
jbe    809a984 <_IO_stdin_used+0x4680>
fs
pop    %edi
jne    809a991 <_IO_stdin_used+0x468d>
imul   $0x736466,0x5f(%eax),%edi
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809a9b7 <_IO_stdin_used+0x46b3>
je     809a9b3 <_IO_stdin_used+0x46af>
insl   (%dx),%es:(%edi)
popa
js     809a9b7 <_IO_stdin_used+0x46b3>
jb     809a9bf <_IO_stdin_used+0x46bb>
arpl   %sp,0x69(%ebp)
jbe    809a9c4 <_IO_stdin_used+0x46c0>
fs
pop    %edi
jne    809a9d1 <_IO_stdin_used+0x46cd>
imul   $0x736466,0x5f(%eax),%edi
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809a9f3 <_IO_stdin_used+0x46ef>
insl   (%dx),%es:(%edi)
popa
js     809a9f7 <_IO_stdin_used+0x46f3>
jb     809a9ff <_IO_stdin_used+0x46fb>
arpl   %sp,0x69(%ebp)
jbe    809aa04 <_IO_stdin_used+0x4700>
fs
pop    %edi
jae    809aa0c <_IO_stdin_used+0x4708>
jp     809aa0a <_IO_stdin_used+0x4706>
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809aa24 <_IO_stdin_used+0x4720>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809aa37 <_IO_stdin_used+0x4733>
je     809aa33 <_IO_stdin_used+0x472f>
insl   (%dx),%es:(%edi)
popa
js     809aa37 <_IO_stdin_used+0x4733>
jb     809aa3f <_IO_stdin_used+0x473b>
arpl   %sp,0x69(%ebp)
jbe    809aa44 <_IO_stdin_used+0x4740>
fs
pop    %edi
jae    809aa4c <_IO_stdin_used+0x4748>
jp     809aa4a <_IO_stdin_used+0x4746>
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809aa64 <_IO_stdin_used+0x4760>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809aa73 <_IO_stdin_used+0x476f>
insl   (%dx),%es:(%edi)
popa
js     809aa77 <_IO_stdin_used+0x4773>
insl   (%dx),%es:(%edi)
gs
jae    809aa8f <_IO_stdin_used+0x478b>
popa
addr16
gs
pop    %edi
jne    809aa90 <_IO_stdin_used+0x478c>
imul   $0x736466,0x5f(%eax),%edi
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809aaa4 <_IO_stdin_used+0x47a0>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809aab7 <_IO_stdin_used+0x47b3>
je     809aab3 <_IO_stdin_used+0x47af>
insl   (%dx),%es:(%edi)
popa
js     809aab7 <_IO_stdin_used+0x47b3>
insl   (%dx),%es:(%edi)
gs
jae    809aacf <_IO_stdin_used+0x47cb>
popa
addr16
gs
pop    %edi
jne    809aad0 <_IO_stdin_used+0x47cc>
imul   $0x736466,0x5f(%eax),%edi
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809aae4 <_IO_stdin_used+0x47e0>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809aaf3 <_IO_stdin_used+0x47ef>
insl   (%dx),%es:(%edi)
popa
js     809aaf7 <_IO_stdin_used+0x47f3>
insl   (%dx),%es:(%edi)
gs
jae    809ab0f <_IO_stdin_used+0x480b>
popa
addr16
gs
pop    %edi
jae    809ab0b <_IO_stdin_used+0x4807>
jp     809ab09 <_IO_stdin_used+0x4805>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809ab37 <_IO_stdin_used+0x4833>
je     809ab33 <_IO_stdin_used+0x482f>
insl   (%dx),%es:(%edi)
popa
js     809ab37 <_IO_stdin_used+0x4833>
insl   (%dx),%es:(%edi)
gs
jae    809ab4f <_IO_stdin_used+0x484b>
popa
addr16
gs
pop    %edi
jae    809ab4b <_IO_stdin_used+0x4847>
jp     809ab49 <_IO_stdin_used+0x4845>
add    %ah,0x75(%edx,%eiz,2)
jae    809ab49 <_IO_stdin_used+0x4845>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809ab58 <_IO_stdin_used+0x4854>
fs
popa
je     809ab5e <_IO_stdin_used+0x485a>
add    %ah,0x75(%edx,%eiz,2)
jae    809ab62 <_IO_stdin_used+0x485e>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809ab75 <_IO_stdin_used+0x4871>
je     809ab71 <_IO_stdin_used+0x486d>
fs
popa
je     809ab77 <_IO_stdin_used+0x4873>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
jb     809ab90 <_IO_stdin_used+0x488c>
gs
pop    %edi
fs
popa
je     809ab92 <_IO_stdin_used+0x488e>
pop    %edi
jae    809aba0 <_IO_stdin_used+0x489c>
outsl  %ds:(%esi),(%dx)
je     809ab37 <_IO_stdin_used+0x4833>
add    %ah,0x75(%edx,%eiz,2)
jae    809aba4 <_IO_stdin_used+0x48a0>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6765725f,0x74(%ebx),%esi
imul   $0x64657265,0x74(%ebx),%esi
add    %ah,0x75(%edx,%eiz,2)
jae    809abc4 <_IO_stdin_used+0x48c0>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809abd3 <_IO_stdin_used+0x48cf>
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     809abe7 <_IO_stdin_used+0x48e3>
pop    %edi
fs
popa
je     809abe5 <_IO_stdin_used+0x48e1>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    809ac20 <_IO_stdin_used+0x491c>
jb     809ac19 <_IO_stdin_used+0x4915>
imul   $0x6f5f7265,0x74(%bp,%di),%esi
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     809ac2e <_IO_stdin_used+0x492a>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     809ac57 <_IO_stdin_used+0x4953>
imul   $0x665f7265,0x74(%bp,%di),%esi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
bound  %esp,0x63(%ecx)
imul   $0x0,(%eax),%eax
add    %ah,0x75(%edx,%eiz,2)
jae    809ac84 <_IO_stdin_used+0x4980>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
je     809aca4 <_IO_stdin_used+0x49a0>
jns    809ac93 <_IO_stdin_used+0x498f>
jb     809ac9b <_IO_stdin_used+0x4997>
imul   $0x665f7265,0x74(%bp,%di),%esi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
bound  %esp,0x63(%ecx)
imul   $0x0,(%eax),%eax
add    %ah,0x75(%edx,%eiz,2)
jae    809acc4 <_IO_stdin_used+0x49c0>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     809acd7 <_IO_stdin_used+0x49d3>
imul   $0x6f5f7265,0x74(%bp,%di),%esi
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     809acec <_IO_stdin_used+0x49e8>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
je     809ad24 <_IO_stdin_used+0x4a20>
jns    809ad13 <_IO_stdin_used+0x4a0f>
jb     809ad1b <_IO_stdin_used+0x4a17>
imul   $0x6f5f7265,0x74(%bp,%di),%esi
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     809ad30 <_IO_stdin_used+0x4a2c>
add    %ah,0x75(%edx,%eiz,2)
jae    809ad2d <_IO_stdin_used+0x4a29>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     809ad40 <_IO_stdin_used+0x4a3c>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809ad44 <_IO_stdin_used+0x4a40>
pop    %edi
imul   $0x72,0x65(%esp,%esi,2),%bp
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
popa
fs
fs
pop    %edi
imul   $0x72,0x65(%esp,%esi,2),%bp
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809ad97 <_IO_stdin_used+0x4a93>
je     809ad93 <_IO_stdin_used+0x4a8f>
jb     809ada5 <_IO_stdin_used+0x4aa1>
jne    809adac <_IO_stdin_used+0x4aa8>
gs
pop    %edi
jo     809ada1 <_IO_stdin_used+0x4a9d>
gs
jb     809ad9e <_IO_stdin_used+0x4a9a>
insl   (%dx),%es:(%edi)
gs
jae    809adb6 <_IO_stdin_used+0x4ab2>
popa
addr16
gs
jae    809ad48 <_IO_stdin_used+0x4a44>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809add7 <_IO_stdin_used+0x4ad3>
je     809add3 <_IO_stdin_used+0x4acf>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     809add9 <_IO_stdin_used+0x4ad5>
popa
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jns    809aded <_IO_stdin_used+0x4ae9>
outsl  %ds:(%esi),(%dx)
jne    809adf6 <_IO_stdin_used+0x4af2>
add    %ah,0x75(%edx,%eiz,2)
jae    809ae04 <_IO_stdin_used+0x4b00>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809ae17 <_IO_stdin_used+0x4b13>
je     809ae13 <_IO_stdin_used+0x4b0f>
ja     809ae1f <_IO_stdin_used+0x4b1b>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     809ae2e <_IO_stdin_used+0x4b2a>
pop    %edi
jne    809ae31 <_IO_stdin_used+0x4b2d>
gs
jb     809ae20 <_IO_stdin_used+0x4b1c>
data16
jne    809ae32 <_IO_stdin_used+0x4b2e>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809ae44 <_IO_stdin_used+0x4b40>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809ae53 <_IO_stdin_used+0x4b4f>
ja     809ae5f <_IO_stdin_used+0x4b5b>
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
ja     809ae6e <_IO_stdin_used+0x4b6a>
pop    %edi
jne    809ae71 <_IO_stdin_used+0x4b6d>
gs
jb     809ae01 <_IO_stdin_used+0x4afd>
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809ae84 <_IO_stdin_used+0x4b80>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809ae97 <_IO_stdin_used+0x4b93>
je     809ae93 <_IO_stdin_used+0x4b8f>
jne    809aea4 <_IO_stdin_used+0x4ba0>
imul   $0x72657375,0x5f(%eax),%edi
pop    %edi
data16
jne    809aeaf <_IO_stdin_used+0x4bab>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809aed3 <_IO_stdin_used+0x4bcf>
popa
fs
je     809aed7 <_IO_stdin_used+0x4bd3>
popa
jne    809aedf <_IO_stdin_used+0x4bdb>
imul   $0x69737365,0x73(%edi,%ebx,2),%esi
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
fs
popa
je     809aeeb <_IO_stdin_used+0x4be7>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809af13 <_IO_stdin_used+0x4c0f>
jne    809af24 <_IO_stdin_used+0x4c20>
imul   $0x636f7270,0x5f(%eax),%edi
gs
jae    809af33 <_IO_stdin_used+0x4c2f>
pop    %edi
imul   $0x5f737562,0x64(%eax,%eax,1),%esp
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809af37 <_IO_stdin_used+0x4c33>
jne    809af48 <_IO_stdin_used+0x4c44>
imul   $0x72657375,0x5f(%eax),%edi
add    %ah,0x75(%edx,%eiz,2)
jae    809af46 <_IO_stdin_used+0x4c42>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809af55 <_IO_stdin_used+0x4c51>
jae    809af67 <_IO_stdin_used+0x4c63>
arpl   %bp,0x65(%ebx)
je     809aefd <_IO_stdin_used+0x4bf9>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809af70 <_IO_stdin_used+0x4c6c>
jne    809af81 <_IO_stdin_used+0x4c7d>
imul   $0x6466,0x5f(%eax),%edi
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809af97 <_IO_stdin_used+0x4c93>
je     809af93 <_IO_stdin_used+0x4c8f>
imul   $0x68637461,%fs:0x70(%ebx),%esi
pop    %edi
jae    809afb3 <_IO_stdin_used+0x4caf>
popa
je     809afb7 <_IO_stdin_used+0x4cb3>
jae    809afa3 <_IO_stdin_used+0x4c9f>
data16
jne    809afb5 <_IO_stdin_used+0x4cb1>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809afd7 <_IO_stdin_used+0x4cd3>
je     809afd3 <_IO_stdin_used+0x4ccf>
ja     809afd7 <_IO_stdin_used+0x4cd3>
imul   $0x70,0x75(%ebp),%esp
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x636e7566,0x5f(%esi),%ebp
je     809afef <_IO_stdin_used+0x4ceb>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809b017 <_IO_stdin_used+0x4d13>
je     809b013 <_IO_stdin_used+0x4d0f>
je     809b01f <_IO_stdin_used+0x4d1b>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    809b02f <_IO_stdin_used+0x4d2b>
pop    %edi
data16
jne    809b02d <_IO_stdin_used+0x4d29>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    809afc6 <_IO_stdin_used+0x4cc2>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809b057 <_IO_stdin_used+0x4d53>
je     809b053 <_IO_stdin_used+0x4d4f>
ja     809b057 <_IO_stdin_used+0x4d53>
je     809b05b <_IO_stdin_used+0x4d57>
push   $0x6e75665f
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    809b004 <_IO_stdin_used+0x4d00>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x68637461,%fs:0x70(%ebx),%esi
add    %al,(%eax)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809b093 <_IO_stdin_used+0x4d8f>
imul   $0x68637461,%fs:0x70(%ebx),%esi
pop    %edi
jae    809b0b3 <_IO_stdin_used+0x4daf>
popa
je     809b0b7 <_IO_stdin_used+0x4db3>
jae    809b044 <_IO_stdin_used+0x4d40>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809b0e6 <_IO_stdin_used+0x4de2>
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
bound  %ebp,0x72(%edi)
jb     809b0ea <_IO_stdin_used+0x4de6>
ja     809b0e2 <_IO_stdin_used+0x4dde>
fs
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809b0f6 <_IO_stdin_used+0x4df2>
popa
add    %al,%gs:(%bx,%si)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     809b0ff <_IO_stdin_used+0x4dfb>
je     809b111 <_IO_stdin_used+0x4e0d>
jb     809b10c <_IO_stdin_used+0x4e08>
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809b116 <_IO_stdin_used+0x4e12>
popa
add    %al,%gs:(%bx,%si)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
bound  %ebp,0x72(%edi)
jb     809b12c <_IO_stdin_used+0x4e28>
ja     809b11e <_IO_stdin_used+0x4e1a>
insl   (%dx),%es:(%edi)
gs
jae    809b136 <_IO_stdin_used+0x4e32>
popa
add    %ah,%gs:0x62(%si)
jne    809b13e <_IO_stdin_used+0x4e3a>
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     809b13e <_IO_stdin_used+0x4e3a>
popa
fs
pop    %edi
ja     809b150 <_IO_stdin_used+0x4e4c>
imul   $0x0,0x0(%ebp,%eiz,2),%esi
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     809b177 <_IO_stdin_used+0x4e73>
popa
fs
pop    %edi
ja     809b189 <_IO_stdin_used+0x4e85>
imul   $0x70736964,0x5f(%ebp,%eiz,2),%esi
popa
je     809b185 <_IO_stdin_used+0x4e81>
push   $0x75626400
jae    809b188 <_IO_stdin_used+0x4e84>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
insb   (%dx),%es:(%edi)
jne    809b1ab <_IO_stdin_used+0x4ea7>
push   $0x0
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809b1a4 <_IO_stdin_used+0x4ea0>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809b1b7 <_IO_stdin_used+0x4eb3>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
ja     809b1c0 <_IO_stdin_used+0x4ebc>
je     809b1c1 <_IO_stdin_used+0x4ebd>
pop    %edi
jb     809b1c1 <_IO_stdin_used+0x4ebd>
jo     809b1ca <_IO_stdin_used+0x4ec6>
jns    809b1bf <_IO_stdin_used+0x4ebb>
popa
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x0,(%eax),%eax
add    %ah,0x75(%edx,%eiz,2)
jae    809b1e4 <_IO_stdin_used+0x4ee0>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809b1f7 <_IO_stdin_used+0x4ef3>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
ja     809b200 <_IO_stdin_used+0x4efc>
je     809b201 <_IO_stdin_used+0x4efd>
pop    %edi
jb     809b201 <_IO_stdin_used+0x4efd>
jo     809b20a <_IO_stdin_used+0x4f06>
jns    809b1a0 <_IO_stdin_used+0x4e9c>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809b217 <_IO_stdin_used+0x4f13>
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809b237 <_IO_stdin_used+0x4f33>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
jo     809b249 <_IO_stdin_used+0x4f45>
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs add %al,%fs:%gs:(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809b264 <_IO_stdin_used+0x4f60>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
jb     809b278 <_IO_stdin_used+0x4f74>
gs
pop    %edi
jo     809b289 <_IO_stdin_used+0x4f85>
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
fs
pop    %edi
jae    809b289 <_IO_stdin_used+0x4f85>
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jo     809b2c4 <_IO_stdin_used+0x4fc0>
gs
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
pop    %edi
jae    809b2c3 <_IO_stdin_used+0x4fbf>
outsb  %ds:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    809b2f7 <_IO_stdin_used+0x4ff3>
je     809b2f3 <_IO_stdin_used+0x4fef>
gs
js     809b300 <_IO_stdin_used+0x4ffc>
je     809b2f8 <_IO_stdin_used+0x4ff4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
imul   $0x656e6e6f,%fs:0x63(%ebx),%esi
arpl   %si,0x64(%eax,%eax,1)
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %sp,0x6e(%ecx)
pop    %edi
jae    809b322 <_IO_stdin_used+0x501e>
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
je     809b33b <_IO_stdin_used+0x5037>
jo     809b329 <_IO_stdin_used+0x5025>
add    %ah,0x75(%edx,%eiz,2)
jae    809b329 <_IO_stdin_used+0x5025>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809b338 <_IO_stdin_used+0x5034>
jae    809b340 <_IO_stdin_used+0x503c>
jb     809b353 <_IO_stdin_used+0x504f>
gs
jb     809b33f <_IO_stdin_used+0x503b>
imul   $0x0,0x0(%eax,%eax,1),%esp
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809b373 <_IO_stdin_used+0x506f>
imul   $0x6e6f6e61,0x5f(%ebx),%esi
jns    809b38a <_IO_stdin_used+0x5086>
outsl  %ds:(%esi),(%dx)
jne    809b393 <_IO_stdin_used+0x508f>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809b3b3 <_IO_stdin_used+0x50af>
imul   $0x68747561,0x5f(%ebx),%esi
outsb  %gs:(%esi),(%dx)
je     809b3c8 <_IO_stdin_used+0x50c4>
arpl   %sp,0x74(%ecx)
gs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
addr16
gs
je     809b3f3 <_IO_stdin_used+0x50ef>
imul   $0x6e6e6f63,0x5f(%ebx),%esi
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %ah,0x75(%edx,%eiz,2)
jae    809b405 <_IO_stdin_used+0x5101>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    809b41b <_IO_stdin_used+0x5117>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jne    809b437 <_IO_stdin_used+0x5133>
jb     809b430 <_IO_stdin_used+0x512c>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    809b431 <_IO_stdin_used+0x512d>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
jb     809b444 <_IO_stdin_used+0x5140>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    809b445 <_IO_stdin_used+0x5141>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     809b459 <_IO_stdin_used+0x5155>
outsb  %ds:(%esi),(%dx)
pop    %edi
jo     809b46a <_IO_stdin_used+0x5166>
imul   $0x64006574,0x61(%esi),%esi
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     809b476 <_IO_stdin_used+0x5172>
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
push   $0x6d5f7361
gs
jae    809b4ab <_IO_stdin_used+0x51a7>
popa
addr16
gs
jae    809b49c <_IO_stdin_used+0x5198>
je     809b4ae <_IO_stdin_used+0x51aa>
pop    %edi
jae    809b4a7 <_IO_stdin_used+0x51a3>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x69(%ebp)
fs
cmp    $0x756c25,%eax
and    $0x64697073,%eax
cmp    $0x756c25,%eax
and    $0x64697373,%eax
cmp    $0x52007325,%eax
gs
jae    809b4d3 <_IO_stdin_used+0x51cf>
jne    809b4d8 <_IO_stdin_used+0x51d4>
arpl   %sp,0x20(%ebp)
insb   (%dx),%es:(%edi)
imul   $0x65207374,0x69(%ebp),%ebp
js     809b4d6 <_IO_stdin_used+0x51d2>
gs gs fs gs add %dl,%fs:%gs:0x65(%eax)
jb     809b4ea <_IO_stdin_used+0x51e6>
imul   $0x206e6f69,0x73(%ebx),%esi
fs outsb %fs:%gs:(%esi),(%dx)
imul   $0x6e6f4300,0x64(%ebp),%esp
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x6d(%ecx,%ebp,2)
gs and %ch,%fs:%gs:0x75(%edi)
je     809b4a0 <_IO_stdin_used+0x519c>
dec    %esi
gs
je     809b51b <_IO_stdin_used+0x5217>
outsl  %ds:(%esi),(%dx)
jb     809b512 <_IO_stdin_used+0x520e>
and    %dh,0x6e(%ebp)
popa
jbe    809b50e <_IO_stdin_used+0x520a>
imul   $0x4100656c,0x62(%ecx,%eiz,2),%ebp
fs
fs
jb     809b51e <_IO_stdin_used+0x521a>
jae    809b52e <_IO_stdin_used+0x522a>
and    %ah,0x6c(%ecx)
jb     809b525 <_IO_stdin_used+0x5221>
popa
fs
jns    809b4e4 <_IO_stdin_used+0x51e0>
imul   $0x657375,0x20(%esi),%ebp
inc    %esp
imul   $0x656e6e6f,0x63(%ebx),%esi
arpl   %si,0x64(%ebp,%eiz,2)
add    %cl,%cs:0x6e(%ecx)
jbe    809b53e <_IO_stdin_used+0x523a>
insb   (%dx),%es:(%edi)
imul   $0x6d756772,0x61(%eax,%eiz,1),%esp
outsb  %gs:(%esi),(%dx)
je     809b55d <_IO_stdin_used+0x5259>
add    %al,%cs:0x64(%ecx,%ebp,2)
and    %ch,0x6f(%esi)
je     809b514 <_IO_stdin_used+0x5210>
addr16
gs
je     809b518 <_IO_stdin_used+0x5214>
popa
and    %dh,0x65(%edx)
jo     809b56a <_IO_stdin_used+0x5266>
jns    809b520 <_IO_stdin_used+0x521c>
insl   (%dx),%es:(%edi)
gs
jae    809b577 <_IO_stdin_used+0x5273>
popa
gs add %al,%cs:%gs:0x69(%bp)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x65(%edi,%ebp,2)
jae    809b581 <_IO_stdin_used+0x527d>
daa
je     809b536 <_IO_stdin_used+0x5232>
gs
js     809b582 <_IO_stdin_used+0x527e>
jae    809b58f <_IO_stdin_used+0x528b>
add    %cl,%cs:0x62(%edi)
push   $0x65
arpl   %si,0x70(%eax,%eiz,1)
popa
je     809b590 <_IO_stdin_used+0x528c>
and    %ah,0x6c(%ecx)
jb     809b592 <_IO_stdin_used+0x528e>
popa
fs
jns    809b551 <_IO_stdin_used+0x524d>
imul   $0x657375,0x20(%esi),%ebp
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     809b5b3 <_IO_stdin_used+0x52af>
jb     809b546 <_IO_stdin_used+0x5242>
dec    %esi
outsl  %ds:(%esi),(%dx)
je     809b56a <_IO_stdin_used+0x5266>
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    809b5b6 <_IO_stdin_used+0x52b2>
push   $0x6d656d20
outsl  %ds:(%esi),(%dx)
jb     809b5d0 <_IO_stdin_used+0x52cc>
and    %ah,0x76(%ecx)
popa
imul   $0x4500656c,0x62(%ecx,%eiz,2),%ebp
jb     809b5d7 <_IO_stdin_used+0x52d3>
outsl  %ds:(%esi),(%dx)
jb     809b588 <_IO_stdin_used+0x5284>
jb     809b5cf <_IO_stdin_used+0x52cb>
popa
imul   $0x20726f20,%fs:0x67(%esi),%ebp
ja     809b5e7 <_IO_stdin_used+0x52e3>
imul   $0x61642067,0x6e(%ecx,%ebp,2),%esi
je     809b5e0 <_IO_stdin_used+0x52dc>
add    %al,0x6f(%ebx)
jne    809b5f0 <_IO_stdin_used+0x52ec>
and    %ch,%fs:0x6f(%esi)
je     809b5aa <_IO_stdin_used+0x52a6>
jo     809b5ed <_IO_stdin_used+0x52e9>
jb     809b601 <_IO_stdin_used+0x52fd>
and    %ah,%gs:0x64(%ecx)
fs
jb     809b5fa <_IO_stdin_used+0x52f6>
jae    809b60a <_IO_stdin_used+0x5306>
add    %al,0x65(%esi)
popa
je     809b612 <_IO_stdin_used+0x530e>
jb     809b604 <_IO_stdin_used+0x5300>
and    %ch,0x6f(%esi)
je     809b5c4 <_IO_stdin_used+0x52c0>
jae    809b61b <_IO_stdin_used+0x5317>
jo     809b618 <_IO_stdin_used+0x5314>
outsl  %ds:(%esi),(%dx)
jb     809b61f <_IO_stdin_used+0x531b>
gs add %ch,%fs:%gs:(%esi)
cs
das
cs
cs
das
bound  %esi,%fs:0x73(%ebp)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x6f727265,%eax
jb     809b637 <_IO_stdin_used+0x5333>
arpl   %ax,%cs:(%eax)
gs
jb     809b63c <_IO_stdin_used+0x5338>
outsl  %ds:(%esi),(%dx)
jb     809b5ed <_IO_stdin_used+0x52e9>
and    %edi,0x4c554e20
dec    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    809b648 <_IO_stdin_used+0x5344>
and    %ch,%fs:0x6f(%esi)
je     809b602 <_IO_stdin_used+0x52fe>
popa
jne    809b659 <_IO_stdin_used+0x5355>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
and    %dh,%gs:0x20(%edi,%ebp,2)
jae    809b659 <_IO_stdin_used+0x5355>
jb     809b66c <_IO_stdin_used+0x5368>
gs
jb     809b5f9 <_IO_stdin_used+0x52f5>
add    %al,(%eax)
add    %cl,0x6f(%esi)
and    %dh,0x65(%ebx)
jb     809b679 <_IO_stdin_used+0x5375>
gs
jb     809b626 <_IO_stdin_used+0x5322>
popa
jbe    809b66a <_IO_stdin_used+0x5366>
imul   $0x6120656c,0x62(%ecx,%eiz,2),%ebp
je     809b633 <_IO_stdin_used+0x532f>
popa
fs
fs
jb     809b67d <_IO_stdin_used+0x5379>
jae    809b68d <_IO_stdin_used+0x5389>
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809b686 <_IO_stdin_used+0x5382>
cs
data16
jb     809b688 <_IO_stdin_used+0x5384>
gs
fs
gs
jae    809b693 <_IO_stdin_used+0x538f>
je     809b699 <_IO_stdin_used+0x5395>
jo     809b65a <_IO_stdin_used+0x5356>
inc    %esp
inc    %edx
jne    809b6a3 <_IO_stdin_used+0x539f>
cs
inc    %ebp
jb     809b6a6 <_IO_stdin_used+0x53a2>
outsl  %ds:(%esi),(%dx)
jb     809b665 <_IO_stdin_used+0x5361>
dec    %ecx
dec    %edi
inc    %ebp
jb     809b6ae <_IO_stdin_used+0x53aa>
outsl  %ds:(%esi),(%dx)
jb     809b63f <_IO_stdin_used+0x533b>
add    %ch,0x72(%edi)
addr16
cs
data16
jb     809b6ac <_IO_stdin_used+0x53a8>
gs
fs
gs
jae    809b6b7 <_IO_stdin_used+0x53b3>
je     809b6bd <_IO_stdin_used+0x53b9>
jo     809b67e <_IO_stdin_used+0x537a>
inc    %esp
inc    %edx
jne    809b6c7 <_IO_stdin_used+0x53c3>
cs
inc    %ebp
jb     809b6ca <_IO_stdin_used+0x53c6>
outsl  %ds:(%esi),(%dx)
jb     809b689 <_IO_stdin_used+0x5385>
inc    %edx
popa
fs
inc    %ecx
fs
fs
jb     809b6c8 <_IO_stdin_used+0x53c4>
jae    809b6d8 <_IO_stdin_used+0x53d4>
add    %al,(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     809b6d4 <_IO_stdin_used+0x53d0>
gs
fs
gs
jae    809b6df <_IO_stdin_used+0x53db>
je     809b6e5 <_IO_stdin_used+0x53e1>
jo     809b6a6 <_IO_stdin_used+0x53a2>
inc    %esp
inc    %edx
jne    809b6ef <_IO_stdin_used+0x53eb>
cs
inc    %ebp
jb     809b6f2 <_IO_stdin_used+0x53ee>
outsl  %ds:(%esi),(%dx)
jb     809b6b1 <_IO_stdin_used+0x53ad>
inc    %ecx
jne    809b6fa <_IO_stdin_used+0x53f6>
push   $0x6c696146
gs add %al,%fs:%gs:(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     809b6fc <_IO_stdin_used+0x53f8>
gs
fs
gs
jae    809b707 <_IO_stdin_used+0x5403>
je     809b70d <_IO_stdin_used+0x5409>
jo     809b6ce <_IO_stdin_used+0x53ca>
inc    %esp
inc    %edx
jne    809b717 <_IO_stdin_used+0x5413>
cs
inc    %ebp
jb     809b71a <_IO_stdin_used+0x5416>
outsl  %ds:(%esi),(%dx)
jb     809b6d9 <_IO_stdin_used+0x53d5>
dec    %esi
outsl  %ds:(%esi),(%dx)
push   %ebx
gs
jb     809b727 <_IO_stdin_used+0x5423>
gs
jb     809b6b4 <_IO_stdin_used+0x53b0>
outsl  %ds:(%esi),(%dx)
jb     809b71e <_IO_stdin_used+0x541a>
cs
data16
jb     809b720 <_IO_stdin_used+0x541c>
gs
fs
gs
jae    809b72b <_IO_stdin_used+0x5427>
je     809b731 <_IO_stdin_used+0x542d>
jo     809b6f2 <_IO_stdin_used+0x53ee>
inc    %esp
inc    %edx
jne    809b73b <_IO_stdin_used+0x5437>
cs
inc    %ebp
jb     809b73e <_IO_stdin_used+0x543a>
outsl  %ds:(%esi),(%dx)
jb     809b6fd <_IO_stdin_used+0x53f9>
push   %esp
imul   $0x74756f,0x65(%ebp),%ebp
add    %ch,0x72(%edi)
addr16
cs
data16
jb     809b744 <_IO_stdin_used+0x5440>
gs
fs
gs
jae    809b74f <_IO_stdin_used+0x544b>
je     809b755 <_IO_stdin_used+0x5451>
jo     809b716 <_IO_stdin_used+0x5412>
inc    %esp
inc    %edx
jne    809b75f <_IO_stdin_used+0x545b>
cs
inc    %ebp
jb     809b762 <_IO_stdin_used+0x545e>
outsl  %ds:(%esi),(%dx)
jb     809b721 <_IO_stdin_used+0x541d>
dec    %esi
outsl  %ds:(%esi),(%dx)
dec    %esi
gs
je     809b770 <_IO_stdin_used+0x546c>
outsl  %ds:(%esi),(%dx)
jb     809b767 <_IO_stdin_used+0x5463>
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809b76a <_IO_stdin_used+0x5466>
cs
data16
jb     809b76c <_IO_stdin_used+0x5468>
gs
fs
gs
jae    809b777 <_IO_stdin_used+0x5473>
je     809b77d <_IO_stdin_used+0x5479>
jo     809b73e <_IO_stdin_used+0x543a>
inc    %esp
inc    %edx
jne    809b787 <_IO_stdin_used+0x5483>
cs
inc    %ebp
jb     809b78a <_IO_stdin_used+0x5486>
outsl  %ds:(%esi),(%dx)
jb     809b749 <_IO_stdin_used+0x5445>
inc    %ecx
fs
fs
jb     809b785 <_IO_stdin_used+0x5481>
jae    809b795 <_IO_stdin_used+0x5491>
dec    %ecx
outsb  %ds:(%esi),(%dx)
push   %ebp
jae    809b78c <_IO_stdin_used+0x5488>
add    %ch,(%eax)
fs
gs
jae    809b7a1 <_IO_stdin_used+0x549d>
sub    %esp,(%eax)
cmp    $0x554e203d,%eax
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
and    %esp,0x75(%edx,%eiz,2)
jae    809b79f <_IO_stdin_used+0x549b>
gs
jb     809b7b5 <_IO_stdin_used+0x54b1>
outsl  %ds:(%esi),(%dx)
jb     809b7a5 <_IO_stdin_used+0x54a1>
imul   $0x20746573,0x5f(%ebx),%esi
sub    %ch,(%eax)
fs
gs
jae    809b7c7 <_IO_stdin_used+0x54c3>
sub    %ebp,(%ecx)
add    %ah,0x75(%edx,%eiz,2)
jae    809b7ba <_IO_stdin_used+0x54b6>
jae    809b7c2 <_IO_stdin_used+0x54be>
je     809b7be <_IO_stdin_used+0x54ba>
gs
jb     809b7d4 <_IO_stdin_used+0x54d0>
outsl  %ds:(%esi),(%dx)
jb     809b765 <_IO_stdin_used+0x5461>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
gs
jb     809b7df <_IO_stdin_used+0x54db>
outsl  %ds:(%esi),(%dx)
jb     809b7cf <_IO_stdin_used+0x54cb>
imul   $0x746573,0x5f(%ebx),%esi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
gs
jb     809b7f1 <_IO_stdin_used+0x54ed>
outsl  %ds:(%esi),(%dx)
jb     809b7e1 <_IO_stdin_used+0x54dd>
push   $0x6e5f7361
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    809b7ef <_IO_stdin_used+0x54eb>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809b7f9 <_IO_stdin_used+0x54f5>
pop    %edi
gs
jb     809b80a <_IO_stdin_used+0x5506>
outsl  %ds:(%esi),(%dx)
jb     809b79b <_IO_stdin_used+0x5497>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    809b807 <_IO_stdin_used+0x5503>
je     809b803 <_IO_stdin_used+0x54ff>
gs
jb     809b819 <_IO_stdin_used+0x5515>
outsl  %ds:(%esi),(%dx)
jb     809b809 <_IO_stdin_used+0x5505>
arpl   %bp,0x6e(%edi)
jae    809b823 <_IO_stdin_used+0x551f>
add    %ah,0x75(%edx,%eiz,2)
jae    809b814 <_IO_stdin_used+0x5510>
gs
jb     809b82a <_IO_stdin_used+0x5526>
outsl  %ds:(%esi),(%dx)
jb     809b81a <_IO_stdin_used+0x5516>
data16
jb     809b823 <_IO_stdin_used+0x551f>
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    809b824 <_IO_stdin_used+0x5520>
gs
jb     809b83a <_IO_stdin_used+0x5536>
outsl  %ds:(%esi),(%dx)
jb     809b82a <_IO_stdin_used+0x5526>
imul   $0x72410074,0x69(%esi),%ebp
jb     809b835 <_IO_stdin_used+0x5531>
jns    809b7f6 <_IO_stdin_used+0x54f2>
outsl  %ds:(%esi),(%dx)
jb     809b7f9 <_IO_stdin_used+0x54f5>
jbe    809b83c <_IO_stdin_used+0x5538>
jb     809b846 <_IO_stdin_used+0x5542>
popa
outsb  %ds:(%esi),(%dx)
je     809b801 <_IO_stdin_used+0x54fd>
je     809b85c <_IO_stdin_used+0x5558>
jo     809b84a <_IO_stdin_used+0x5546>
and    %dh,0x65(%edx)
jno    809b85f <_IO_stdin_used+0x555b>
imul   $0x68742073,0x65(%edx),%esi
popa
je     809b814 <_IO_stdin_used+0x5510>
je     809b86f <_IO_stdin_used+0x556b>
jo     809b85d <_IO_stdin_used+0x5559>
and    %ah,0x65622073
and    %dh,0x72(%edi)
imul   $0x62202c6e,0x65(%esp,%esi,2),%esi
jne    809b87f <_IO_stdin_used+0x557b>
and    %ah,0x61772073
jae    809b833 <_IO_stdin_used+0x552f>
ja     809b887 <_IO_stdin_used+0x5583>
imul   $0x540a2e6e,0x65(%esp,%esi,2),%esi
push   $0x766f2065
gs
jb     809b886 <_IO_stdin_used+0x5582>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809b8a4 <_IO_stdin_used+0x55a0>
jb     809b896 <_IO_stdin_used+0x5592>
and    %ah,0x78(%ebp)
jo     809b89b <_IO_stdin_used+0x5597>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x65(%eax)
jb     809b8a4 <_IO_stdin_used+0x55a0>
and    %dh,0x61(%edi)
jae    809b864 <_IO_stdin_used+0x5560>
daa
and    $0x61202773,%eax
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%edi)
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%edi)
and    %ah,0x79(%edx)
je     809b8c0 <_IO_stdin_used+0x55bc>
and    %ah,0x666f2064
and    %dh,0x61(%eax,%ebp,2)
je     809b887 <_IO_stdin_used+0x5583>
jae    809b8d2 <_IO_stdin_used+0x55ce>
outsb  %ds:(%si),(%dx)
popa
je     809b8e3 <_IO_stdin_used+0x55df>
jb     809b8d5 <_IO_stdin_used+0x55d1>
or     %cs:(%eax),%al
add    %al,0x72(%ecx)
jb     809b8d9 <_IO_stdin_used+0x55d5>
jns    809b89a <_IO_stdin_used+0x5596>
outsl  %ds:(%esi),(%dx)
jb     809b89d <_IO_stdin_used+0x5599>
jbe    809b8e0 <_IO_stdin_used+0x55dc>
jb     809b8ea <_IO_stdin_used+0x55e6>
popa
outsb  %ds:(%esi),(%dx)
je     809b8a5 <_IO_stdin_used+0x55a1>
je     809b900 <_IO_stdin_used+0x55fc>
jo     809b8ee <_IO_stdin_used+0x55ea>
and    %dh,0x61(%edi)
jae    809b8fc <_IO_stdin_used+0x55f8>
daa
je     809b8b1 <_IO_stdin_used+0x55ad>
gs
js     809b904 <_IO_stdin_used+0x5600>
arpl   %si,%gs:0x6e(%ecx,%ebp,2)
and    %ah,0x6e(%bx,%di)
jns    809b8bf <_IO_stdin_used+0x55bb>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     809b908 <_IO_stdin_used+0x5604>
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    809b90e <_IO_stdin_used+0x560a>
jae    809b8cb <_IO_stdin_used+0x55c7>
je     809b91c <_IO_stdin_used+0x5618>
and    %ah,0x65(%edx)
and    %dh,0x72(%edi)
imul   $0x6e69206e,0x65(%esp,%esi,2),%esi
je     809b92c <_IO_stdin_used+0x5628>
and    %ch,0x74(%ecx)
sub    $0x20,%al
bound  %esi,0x74(%ebp)
and    %ah,0x20(%ecx)
jbe    809b92b <_IO_stdin_used+0x5627>
insb   (%dx),%es:(%edi)
jne    809b932 <_IO_stdin_used+0x562e>
and    %ah,0x61772073
jae    809b8f5 <_IO_stdin_used+0x55f1>
ja     809b949 <_IO_stdin_used+0x5645>
imul   $0x540a2e6e,0x65(%esp,%esi,2),%esi
push   $0x766f2065
gs
jb     809b948 <_IO_stdin_used+0x5644>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809b966 <_IO_stdin_used+0x5662>
jb     809b958 <_IO_stdin_used+0x5654>
and    %ah,0x78(%ebp)
jo     809b95d <_IO_stdin_used+0x5659>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x65(%eax)
jb     809b966 <_IO_stdin_used+0x5662>
and    %dh,0x61(%edi)
jae    809b926 <_IO_stdin_used+0x5622>
daa
and    $0x61202773,%eax
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%edi)
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%edi)
and    %ah,0x79(%edx)
je     809b982 <_IO_stdin_used+0x567e>
and    %ah,0x666f2064
and    %dh,0x61(%eax,%ebp,2)
je     809b949 <_IO_stdin_used+0x5645>
jae    809b994 <_IO_stdin_used+0x5690>
outsb  %ds:(%si),(%dx)
popa
je     809b9a5 <_IO_stdin_used+0x56a1>
jb     809b997 <_IO_stdin_used+0x5693>
or     %cs:(%eax),%al
add    %al,(%eax)
add    %bl,0x6f(%ecx)
jne    809b95c <_IO_stdin_used+0x5658>
arpl   %sp,0x6e(%ecx)
daa
je     809b962 <_IO_stdin_used+0x565e>
jb     809b9a9 <_IO_stdin_used+0x56a5>
arpl   %si,0x72(%ebp)
jae    809b9ae <_IO_stdin_used+0x56aa>
and    %ch,0x6e(%ecx)
je     809b9bd <_IO_stdin_used+0x56b9>
and    %ah,0x6e(%ecx)
and    %ah,0x6d(%ebp)
jo     809b9ca <_IO_stdin_used+0x56c6>
jns    809b978 <_IO_stdin_used+0x5674>
popa
jb     809b9cd <_IO_stdin_used+0x56c9>
popa
jns    809b97e <_IO_stdin_used+0x567a>
outsl  %ds:(%esi),(%dx)
jb     809b981 <_IO_stdin_used+0x567d>
outsl  %ds:(%esi),(%dx)
data16
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6e(%ebp)
and    %ch,%fs:0x66(%edi)
and    %ah,0x20(%ecx)
insl   (%dx),%es:(%edi)
gs
jae    809b9e9 <_IO_stdin_used+0x56e5>
popa
and    %ah,%gs:0x6f(%bp,%si)
fs
jns    809b989 <_IO_stdin_used+0x5685>
add    %dl,0x72(%edi)
imul   $0x6e612067,0x6e(%ecx,%ebp,2),%esi
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809b9b3 <_IO_stdin_used+0x56af>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x62202c73
jne    809ba16 <_IO_stdin_used+0x5712>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
jo     809ba10 <_IO_stdin_used+0x570c>
arpl   %si,0x64(%ebp,%eiz,2)
and    %dh,0x70(%ecx,%edi,2)
and    %ch,%gs:0x65(%eax)
jb     809ba1e <_IO_stdin_used+0x571a>
and    %ch,0x73(%ecx)
and    %ah,0x68540a73
and    %ch,%gs:0x76(%edi)
gs
jb     809ba2a <_IO_stdin_used+0x5726>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809ba48 <_IO_stdin_used+0x5744>
jb     809ba3a <_IO_stdin_used+0x5736>
and    %ah,0x78(%ebp)
jo     809ba3f <_IO_stdin_used+0x573b>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x65(%eax)
jb     809ba48 <_IO_stdin_used+0x5744>
and    %dh,0x61(%edi)
jae    809ba08 <_IO_stdin_used+0x5704>
daa
and    $0x61202773,%eax
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%edi)
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%edi)
and    %ah,0x79(%edx)
je     809ba64 <_IO_stdin_used+0x5760>
and    %ah,0x666f2064
and    %dh,0x61(%eax,%ebp,2)
je     809ba2b <_IO_stdin_used+0x5727>
jae    809ba76 <_IO_stdin_used+0x5772>
outsb  %ds:(%si),(%dx)
popa
je     809ba87 <_IO_stdin_used+0x5783>
jb     809ba79 <_IO_stdin_used+0x5775>
or     %cs:(%eax),%al
add    %dl,0x72(%edi)
imul   $0x6e612067,0x6e(%ecx,%ebp,2),%esi
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809ba4b <_IO_stdin_used+0x5747>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x62202c73
jne    809baae <_IO_stdin_used+0x57aa>
and    %ch,0x6f(%esi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    809baa8 <_IO_stdin_used+0x57a4>
and    %ch,0x73(%ecx)
and    %ah,0x78(%ebp)
jo     809bab0 <_IO_stdin_used+0x57ac>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x65(%eax)
jb     809bab9 <_IO_stdin_used+0x57b5>
or     0x65(%eax,%ebp,2),%dl
and    %ch,0x76(%edi)
gs
jb     809babf <_IO_stdin_used+0x57bb>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809badd <_IO_stdin_used+0x57d9>
jb     809bacf <_IO_stdin_used+0x57cb>
and    %ah,0x78(%ebp)
jo     809bad4 <_IO_stdin_used+0x57d0>
arpl   %si,0x64(%ebp,%eiz,2)
and    %ch,0x65(%eax)
jb     809badd <_IO_stdin_used+0x57d9>
and    %dh,0x61(%edi)
jae    809ba9d <_IO_stdin_used+0x5799>
daa
and    $0x61202773,%eax
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x65(%edi)
and    %ah,0x72(%ecx)
and    %ch,%gs:0x6e(%edi)
and    %ah,0x79(%edx)
je     809baf9 <_IO_stdin_used+0x57f5>
and    %ah,0x666f2064
and    %dh,0x61(%eax,%ebp,2)
je     809bac0 <_IO_stdin_used+0x57bc>
jae    809bb0b <_IO_stdin_used+0x5807>
outsb  %ds:(%si),(%dx)
popa
je     809bb1c <_IO_stdin_used+0x5818>
jb     809bb0e <_IO_stdin_used+0x580a>
or     %cs:(%eax),%al
push   %edi
jb     809bb18 <_IO_stdin_used+0x5814>
je     809bb1a <_IO_stdin_used+0x5816>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%bx,%di)
and    %ah,0x72(%ecx)
jb     809bb1c <_IO_stdin_used+0x5818>
jns    809badd <_IO_stdin_used+0x57d9>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,(%edi)
and    $0x62202773,%eax
jne    809bb3c <_IO_stdin_used+0x5838>
and    %dh,0x69(%eax,%ebp,2)
jae    809baee <_IO_stdin_used+0x57ea>
imul   $0x6f636e69,0x20(%ebx),%esi
insl   (%dx),%es:(%edi)
jo     809bb39 <_IO_stdin_used+0x5835>
je     809bb43 <_IO_stdin_used+0x583f>
bound  %ebp,0x20(%ebp,%eiz,2)
ja     809bb49 <_IO_stdin_used+0x5845>
je     809bb4a <_IO_stdin_used+0x5846>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
jo     809bb50 <_IO_stdin_used+0x584c>
arpl   %si,0x64(%ebp,%eiz,2)
and    %dh,0x70(%ecx,%edi,2)
and    %ch,%gs:0x66(%edi)
and    %ah,0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809bb73 <_IO_stdin_used+0x586f>
and    %ch,0x6e(%ecx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x61(%eax)
jb     809bb71 <_IO_stdin_used+0x586d>
outsb  %ds:(%esi),(%dx)
je     809bb2f <_IO_stdin_used+0x582b>
popa
jb     809bb84 <_IO_stdin_used+0x5880>
popa
jns    809bb1f <_IO_stdin_used+0x581b>
add    %dh,0x61(%esi)
jb     809bb83 <_IO_stdin_used+0x587f>
popa
outsb  %ds:(%esi),(%dx)
je     809bb1e <_IO_stdin_used+0x581a>
popa
jb     809bb93 <_IO_stdin_used+0x588f>
popa
jns    809bb44 <_IO_stdin_used+0x5840>
je     809bb9f <_IO_stdin_used+0x589b>
jo     809bb8d <_IO_stdin_used+0x5889>
jae    809bb2a <_IO_stdin_used+0x5826>
imul   $0x746e655f,%fs:0x74(%ebx),%esp
jb     809bbad <_IO_stdin_used+0x58a9>
and    %dh,0x70(%ecx,%edi,2)
gs
jae    809bb3b <_IO_stdin_used+0x5837>
jae    809bbb1 <_IO_stdin_used+0x58ad>
jb     809bbb4 <_IO_stdin_used+0x58b0>
arpl   %si,0x74(%eax,%eiz,1)
jns    809bbb5 <_IO_stdin_used+0x58b1>
gs
jae    809bb48 <_IO_stdin_used+0x5844>
bound  %ebp,0x64(%edi)
jns    809bb6d <_IO_stdin_used+0x5869>
je     809bbc8 <_IO_stdin_used+0x58c4>
jo     809bbb6 <_IO_stdin_used+0x58b2>
jae    809bb53 <_IO_stdin_used+0x584f>
bound  %ebp,0x64(%edi)
jns    809bb58 <_IO_stdin_used+0x5854>
clc
push   %esp
sti
jmp    *0x18fffb54(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
call   *%eax
push   %esp
sti
(bad)
jmp    2109b798 <_end+0x18fe2e48>
push   %ebp
sti
(bad)
jmp    2109b7a0 <_end+0x18fe2e50>
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
(bad)
jmp    f209b7ac <_end+0xe9fe2e5c>
push   %ebx
sti
(bad)
jmp    2109b7b4 <_end+0x18fe2e64>
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
lcall  *(%eax)
push   %ebp
sti
(bad)
jmp    f209b7c8 <_end+0xe9fe2e78>
push   %ebx
sti
lcall  *(%eax)
push   %ebp
sti
(bad)
jmp    2109b7d4 <_end+0x18fe2e84>
push   %ebp
sti
(bad)
jmp    f209b7dc <_end+0xe9fe2e8c>
push   %ebx
sti
(bad)
jmp    f209b7e4 <_end+0xe9fe2e94>
push   %ebx
sti
lcall  *(%eax)
push   %ebp
sti
(bad)
jmp    f209b7f0 <_end+0xe9fe2ea0>
push   %ebx
sti
lcall  *(%eax)
push   %ebp
sti
jmp    *0x54(%eax)
sti
lcall  *(%eax)
push   %ebp
sti
inc    %eax
push   %ebx
sti
push   %eax
pop    %ecx
sti
decl   0x78fffb59(%eax)
push   %edi
sti
decl   -0xf0004a7(%eax)
pop    %eax
sti
(bad)
js     809bd1d <_IO_stdin_used+0x5a19>
sti
call   *(%eax)
push   %edi
sti
decl   -0x770004a7(%eax)
pop    %ecx
sti
(bad)
js     809bd2d <_IO_stdin_used+0x5a29>
sti
(bad)
js     809bd31 <_IO_stdin_used+0x5a2d>
sti
(bad)
js     809bd35 <_IO_stdin_used+0x5a31>
sti
(bad)
js     809bd39 <_IO_stdin_used+0x5a35>
sti
decl   -0xf0004a7(%eax)
pop    %ecx
sti
(bad)
js     809bd45 <_IO_stdin_used+0x5a41>
sti
decl   -0xf0004a7(%eax)
pop    %eax
sti
push   %eax
pop    %ecx
sti
decl   -0x770004a7(%eax)
pop    %ecx
sti
pushl  0x78fffb57(%eax)
push   %edi
sti
decl   -0x5f0004a7(%eax)
push   %edi
sti
jmp    *(%eax)
pop    %esi
sti
lcall  *(%eax)
pop    %esi
sti
(bad)
clc
pop    %edi
sti
push   %eax
pop    %edi
sti
(bad)
call   e909b888 <_end+0xe0fe2f38>
pop    %edi
sti
(bad)
fcomps -0x5(%edi)
call   *%eax
pop    %edi
sti
dec    %eax
pop    %edi
sti
inc    %eax
pop    %edi
sti
(bad)
mov    $0xb0fffb5f,%eax
pop    %edi
sti
ljmp   *-0x5f0004a1(%eax)
pop    %edi
sti
lcall  *-0x6f0004a1(%eax)
pop    %edi
sti
decl   -0x7f0004a1(%eax)
pop    %edi
sti
(bad)
js     809bdbd <_IO_stdin_used+0x5ab9>
sti
pushl  0x5f(%eax)
sti
ljmp   *0x5f(%eax)
sti
jmp    *0x5f(%eax)
sti
lcall  *0x5f(%eax)
sti
call   *0x5f(%eax)
sti
decl   0x5f(%eax)
sti
incl   0x5f(%eax)
sti
(bad)
cmp    %bl,-0x5(%edi)
pushl  (%eax)
pop    %edi
sti
ljmp   *(%eax)
pop    %edi
sti
jmp    *(%eax)
pop    %edi
sti
lcall  *(%eax)
pop    %edi
sti
call   *(%eax)
pop    %edi
sti
decl   (%eax)
pop    %edi
sti
incl   (%eax)
pop    %edi
sti
(bad)
clc
pop    %esi
sti
push   %eax
pop    %esi
sti
(bad)
call   e909b907 <_end+0xe0fe2fb7>
pop    %esi
sti
(bad)
fcomps -0x5(%esi)
call   *%eax
pop    %esi
sti
dec    %eax
pop    %esi
sti
inc    %eax
pop    %esi
sti
(bad)
mov    $0xb0fffb5e,%eax
pop    %esi
sti
ljmp   *-0x5f0004a2(%eax)
pop    %esi
sti
lcall  *-0x6f0004a2(%eax)
pop    %esi
sti
decl   -0x7f0004a2(%eax)
pop    %esi
sti
(bad)
js     809be3c <_IO_stdin_used+0x5b38>
sti
pushl  0x5e(%eax)
sti
ljmp   *0x5e(%eax)
sti
jmp    *0x5e(%eax)
sti
lcall  *0x5e(%eax)
sti
call   *0x5e(%eax)
sti
decl   0x5e(%eax)
sti
incl   0x5e(%eax)
sti
(bad)
cmp    %bl,-0x5(%esi)
pushl  (%eax)
pop    %esi
sti
incl   (%eax)
pusha
sti
ljmp   *(%eax)
pop    %esi
sti
decl   0x75(%edi)
je     809be30 <_IO_stdin_used+0x5b2c>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     809be92 <_IO_stdin_used+0x5b8e>
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%edx)
popa
jae    809be96 <_IO_stdin_used+0x5b92>
outsb  %ds:(%esi),(%dx)
add    %dl,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x69207475,0x62(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x6d(%edi)
jo     809bea6 <_IO_stdin_used+0x5ba2>
gs
je     809bea2 <_IO_stdin_used+0x5b9e>
add    %dl,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x6e752079,0x74(%ecx,%ebp,2),%esp
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %dl,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x6f6e6b6e,0x55(%eax,%eax,1),%esp
ja     809beca <_IO_stdin_used+0x5bc6>
and    %dh,0x70(%ecx,%edi,2)
arpl   %bp,%gs:0x64(%edi)
add    %cl,%gs:0x69(%ebp)
jae    809bedd <_IO_stdin_used+0x5bd9>
imul   $0x72726120,0x67(%esi),%ebp
popa
jns    809be94 <_IO_stdin_used+0x5b90>
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809be9c <_IO_stdin_used+0x5b98>
je     809bef7 <_IO_stdin_used+0x5bf3>
jo     809bee5 <_IO_stdin_used+0x5be1>
add    %dl,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809befd <_IO_stdin_used+0x5bf9>
jb     809beef <_IO_stdin_used+0x5beb>
and    %ch,0x73(%ecx)
and    %dh,0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
add    %dl,0x74(%bp,%di)
jb     809bf10 <_IO_stdin_used+0x5c0c>
arpl   %si,0x65(%eax,%eiz,1)
outsb  %ds:(%esi),(%dx)
fs gs and %ah,%fs:%gs:0x75(%edx)
je     809bec8 <_IO_stdin_used+0x5bc4>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809becc <_IO_stdin_used+0x5bc8>
jae    809bf22 <_IO_stdin_used+0x5c1e>
popa
jb     809bf25 <_IO_stdin_used+0x5c21>
gs add %dl,%fs:%gs:0x74(%ebx)
jb     809bf2d <_IO_stdin_used+0x5c29>
arpl   %si,0x73(%eax,%eiz,1)
je     809bf1f <_IO_stdin_used+0x5c1b>
jb     809bf34 <_IO_stdin_used+0x5c30>
gs and %ah,%fs:%gs:0x75(%edx)
je     809bee7 <_IO_stdin_used+0x5be3>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809beeb <_IO_stdin_used+0x5be7>
outsb  %gs:(%esi),(%dx)
fs gs add %dl,%fs:%gs:0x74(%ebx)
jb     809bf4a <_IO_stdin_used+0x5c46>
arpl   %si,0x68(%eax,%eiz,1)
popa
jae    809befc <_IO_stdin_used+0x5bf8>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
fs
jae    809bee6 <_IO_stdin_used+0x5be2>
inc    %ecx
insb   (%dx),%es:(%edi)
imul   $0x746e656d,0x6e(%edi),%esp
and    %dh,0x61(%eax)
fs imul $0x746f6e20,%fs:0x67(%esi),%ebp
74
and    %ch,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %al,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     809bf30 <_IO_stdin_used+0x5c2c>
jp     809bf77 <_IO_stdin_used+0x5c73>
jb     809bf83 <_IO_stdin_used+0x5c7f>
and    %ch,0x72(%edi)
and    %ch,0x6e(%edi)
add    %cl,%gs:0x6f(%esi)
je     809bf40 <_IO_stdin_used+0x5c3c>
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    809bf8c <_IO_stdin_used+0x5c88>
push   $0x74616420
popa
add    %dl,0x6f(%edi,%ebp,2)
and    %ch,0x75(%ebp)
arpl   %bp,0x20(%eax)
fs
popa
je     809bf9a <_IO_stdin_used+0x5c96>
add    %al,0x61(%edx)
and    %ah,%fs:0x79(%edx)
je     809bfa7 <_IO_stdin_used+0x5ca3>
and    %ch,0x72(%edi)
fs
gs
jb     809bf49 <_IO_stdin_used+0x5c45>
inc    %edx
popa
and    %dh,%fs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
je     809bfc1 <_IO_stdin_used+0x5cbd>
arpl   %bp,0x6c(%edi)
and    %dh,0x65(%esi)
jb     809bfcd <_IO_stdin_used+0x5cc9>
imul   $0x64614200,0x6e(%edi),%ebp
and    %ch,0x65(%ebp)
jae    809bfd9 <_IO_stdin_used+0x5cd5>
popa
and    %dh,%gs:0x79(%si)
jo     809bfd3 <_IO_stdin_used+0x5ccf>
add    %al,0x61(%edx)
and    %dh,%fs:0x65(%ebx)
jb     809bfe0 <_IO_stdin_used+0x5cdc>
popa
insb   (%dx),%es:(%edi)
add    %cl,0x6e(%ecx)
jae    809bfdf <_IO_stdin_used+0x5cdb>
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x69(%esi)
gs
insb   (%dx),%es:(%edi)
fs
jae    809bfa8 <_IO_stdin_used+0x5ca4>
popa
jb     809bffd <_IO_stdin_used+0x5cf9>
popa
jns    809bfae <_IO_stdin_used+0x5caa>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 809bffc <_IO_stdin_used+0x5cf8>
add    %cl,0x6e(%ecx)
jae    809bffa <_IO_stdin_used+0x5cf6>
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6f(%edx)
fs
jns    809bfc1 <_IO_stdin_used+0x5cbd>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 809c00f <_IO_stdin_used+0x5d0b>
add    %cl,0x65(%ebp)
jae    809c01f <_IO_stdin_used+0x5d1b>
popa
and    %dh,%gs:0x6f(%si)
outsl  %ds:(%esi),(%dx)
and    %ch,0x6e(%edi,%ebp,2)
add    %cl,0x65(%bx,%si)
popa
fs
gs
jb     809bfe0 <_IO_stdin_used+0x5cdc>
imul   $0x2064,0x6c(%ebp),%sp
arpl   %bp,0x64(%edi)
add    %cl,%gs:0x65(%eax)
popa
fs
gs
jb     809bff2 <_IO_stdin_used+0x5cee>
imul   $0x2064,0x6c(%ebp),%sp
push   $0x77207361
jb     809c04e <_IO_stdin_used+0x5d4a>
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%si)
jo     809c04b <_IO_stdin_used+0x5d47>
add    %dl,0x73(%ebp)
gs
jae    809c00c <_IO_stdin_used+0x5d08>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
and    %ch,0x6e(%ecx)
je     809c05b <_IO_stdin_used+0x5d57>
jb     809c05e <_IO_stdin_used+0x5d5a>
popa
arpl   %sp,0x0(%ebp)
push   %ebp
jae    809c064 <_IO_stdin_used+0x5d60>
jae    809c021 <_IO_stdin_used+0x5d1d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
and    %dh,0x61(%eax)
je     809c073 <_IO_stdin_used+0x5d6f>
add    %cl,0x65(%eax)
popa
fs
gs
jb     809c033 <_IO_stdin_used+0x5d2f>
imul   $0x2064,0x6c(%ebp),%sp
popa
jo     809c08c <_IO_stdin_used+0x5d88>
gs
popa
jb     809c093 <_IO_stdin_used+0x5d8f>
and    %dh,0x69(%edi,%esi,2)
arpl   %sp,0x0(%ebp)
inc    %edx
popa
and    %ah,%fs:0x73(%ebp,%eiz,2)
je     809c099 <_IO_stdin_used+0x5d95>
outsb  %ds:(%esi),(%dx)
popa
je     809c09d <_IO_stdin_used+0x5d99>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,0x61(%edx)
and    %ch,%fs:0x6e(%ecx)
je     809c0a4 <_IO_stdin_used+0x5da0>
jb     809c0a7 <_IO_stdin_used+0x5da3>
popa
arpl   %sp,0x0(%ebp)
inc    %edx
popa
and    %ch,%fs:0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %al,0x61(%edx)
and    %ah,%fs:0x72(%ebp)
jb     809c0c7 <_IO_stdin_used+0x5dc3>
jb     809c07a <_IO_stdin_used+0x5d76>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %al,%gs:0x61(%edx)
and    %dh,%fs:0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
gs
jb     809c06a <_IO_stdin_used+0x5d66>
dec    %ebp
imul   $0x20676e69,0x73(%ebx),%esi
jo     809c0d5 <_IO_stdin_used+0x5dd1>
je     809c0de <_IO_stdin_used+0x5dda>
add    %cl,0x69(%ebp)
jae    809c0ee <_IO_stdin_used+0x5dea>
imul   $0x746e6920,0x67(%esi),%ebp
gs
jb     809c0eb <_IO_stdin_used+0x5de7>
popa
arpl   %sp,0x0(%ebp)
dec    %ebp
imul   $0x20676e69,0x73(%ebx),%esi
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %cl,0x69(%ebp)
jae    809c10f <_IO_stdin_used+0x5e0b>
imul   $0x72726520,0x67(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     809c0c6 <_IO_stdin_used+0x5dc2>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %cl,%gs:0x69(%ebp)
jae    809c122 <_IO_stdin_used+0x5e1e>
imul   $0x70657220,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
jns    809c0d9 <_IO_stdin_used+0x5dd5>
jae    809c120 <_IO_stdin_used+0x5e1c>
jb     809c126 <_IO_stdin_used+0x5e22>
popa
insb   (%dx),%es:(%edi)
add    %cl,0x6e(%ebp,%eiz,2)
addr16 je 809c12e <_IO_stdin_used+0x5e2a>
and    %ch,0x75(%edi)
je     809c0eb <_IO_stdin_used+0x5de7>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f(%edx)
jne    809c140 <_IO_stdin_used+0x5e3c>
fs
jae    809c0d5 <_IO_stdin_used+0x5dd1>
inc    %ecx
jb     809c14a <_IO_stdin_used+0x5e46>
popa
jns    809c0fb <_IO_stdin_used+0x5df7>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 809c149 <_IO_stdin_used+0x5e45>
and    %ah,0x78(%ebp)
arpl   %sp,0x65(%ebp)
fs
jae    809c10a <_IO_stdin_used+0x5e06>
insl   (%dx),%es:(%edi)
popa
js     809c157 <_IO_stdin_used+0x5e53>
insl   (%dx),%es:(%edi)
jne    809c15e <_IO_stdin_used+0x5e5a>
add    %al,0x61(%edx)
and    %dh,%fs:0x61(%eax)
je     809c162 <_IO_stdin_used+0x5e5e>
add    %al,0x61(%edx)
and    %dh,%fs:0x74(%ebp)
data16
cmp    %ah,(%eax)
imul   $0x69727473,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %al,0x72(%bx,%di)
jb     809c173 <_IO_stdin_used+0x5e6f>
jns    809c134 <_IO_stdin_used+0x5e30>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 809c182 <_IO_stdin_used+0x5e7e>
and    %ch,0x6e(%ecx)
arpl   %bp,0x72(%edi)
jb     809c187 <_IO_stdin_used+0x5e83>
arpl   %si,0x56(%eax,%eax,1)
popa
jb     809c192 <_IO_stdin_used+0x5e8e>
popa
outsb  %ds:(%esi),(%dx)
je     809c14d <_IO_stdin_used+0x5e49>
jae    809c198 <_IO_stdin_used+0x5e94>
outsb  %ds:(%si),(%dx)
popa
je     809c1a9 <_IO_stdin_used+0x5ea5>
jb     809c19b <_IO_stdin_used+0x5e97>
and    %ah,0x61(%edx)
add    %dl,%fs:0x61(%esi)
jb     809c1a8 <_IO_stdin_used+0x5ea4>
popa
outsb  %ds:(%esi),(%dx)
je     809c163 <_IO_stdin_used+0x5e5f>
jae    809c1ae <_IO_stdin_used+0x5eaa>
outsb  %ds:(%si),(%dx)
popa
je     809c1bf <_IO_stdin_used+0x5ebb>
jb     809c1b1 <_IO_stdin_used+0x5ead>
and    %ah,0x6d(%ebp)
jo     809c1c5 <_IO_stdin_used+0x5ec1>
jns    809c153 <_IO_stdin_used+0x5e4f>
push   %esi
popa
jb     809c1c0 <_IO_stdin_used+0x5ebc>
popa
outsb  %ds:(%esi),(%dx)
je     809c17b <_IO_stdin_used+0x5e77>
jae    809c1c6 <_IO_stdin_used+0x5ec2>
outsb  %ds:(%si),(%dx)
popa
je     809c1d7 <_IO_stdin_used+0x5ed3>
jb     809c1c9 <_IO_stdin_used+0x5ec5>
and    %ch,0x69(%ebp)
jae    809c1dc <_IO_stdin_used+0x5ed8>
imul   $0x6c756e20,0x67(%esi),%ebp
add    %dl,0x74(%ebx)
jb     809c1de <_IO_stdin_used+0x5eda>
outsb  %ds:(%esi),(%dx)
and    %ch,0x69(%di)
jae    809c1ef <_IO_stdin_used+0x5eeb>
imul   $0x6c756e20,0x67(%esi),%ebp
add    %dl,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809c200 <_IO_stdin_used+0x5efc>
jb     809c1f2 <_IO_stdin_used+0x5eee>
and    %ch,0x69(%ebp)
jae    809c205 <_IO_stdin_used+0x5f01>
imul   $0x6c756e20,0x67(%esi),%ebp
add    %al,0x63(%ecx,%ebp,2)
je     809c1bf <_IO_stdin_used+0x5ebb>
outsb  %gs:(%esi),(%dx)
je     809c215 <_IO_stdin_used+0x5f11>
jns    809c1c5 <_IO_stdin_used+0x5ec1>
push   $0x6e207361
outsl  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
gs
insb   (%dx),%es:(%edi)
fs
jae    809c1b3 <_IO_stdin_used+0x5eaf>
inc    %esp
imul   $0x746e6520,0x74(%ebx),%esp
jb     809c236 <_IO_stdin_used+0x5f32>
and    %ch,0x61(%eax)
jae    809c1e2 <_IO_stdin_used+0x5ede>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    809c1e7 <_IO_stdin_used+0x5ee3>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x69(%esi)
gs
insb   (%dx),%es:(%edi)
add    %al,%fs:0x63(%ecx,%ebp,2)
je     809c1f6 <_IO_stdin_used+0x5ef2>
outsb  %gs:(%esi),(%dx)
je     809c24c <_IO_stdin_used+0x5f48>
jns    809c1fc <_IO_stdin_used+0x5ef8>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809c200 <_IO_stdin_used+0x5efc>
imul   $0x20656469,0x73(%esi),%ebp
popa
jb     809c25c <_IO_stdin_used+0x5f58>
popa
jns    809c1ed <_IO_stdin_used+0x5ee9>
inc    %esp
imul   $0x79656b20,0x74(%ebx),%esp
and    %ch,0x75(%ebp)
jae    809c26e <_IO_stdin_used+0x5f6a>
and    %ah,0x65(%edx)
and    %ah,0x61(%edx)
jae    809c26b <_IO_stdin_used+0x5f67>
arpl   %sp,(%eax)
je     809c27f <_IO_stdin_used+0x5f7b>
jo     809c26d <_IO_stdin_used+0x5f69>
add    %cl,0x6e(%ecx)
jbe    809c26e <_IO_stdin_used+0x5f6a>
insb   (%dx),%es:(%edi)
imul   $0x78450000,0x0(%eax,%eax,1),%esp
arpl   %sp,0x65(%ebp)
fs gs and %ch,%fs:%gs:0x61(%ebp)
js     809c28a <_IO_stdin_used+0x5f86>
insl   (%dx),%es:(%edi)
jne    809c291 <_IO_stdin_used+0x5f8d>
and    %ah,0x72(%ecx)
jb     809c28a <_IO_stdin_used+0x5f86>
jns    809c24b <_IO_stdin_used+0x5f47>
jb     809c292 <_IO_stdin_used+0x5f8e>
arpl   %si,0x72(%ebp)
jae    809c29b <_IO_stdin_used+0x5f97>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebp
js     809c29e <_IO_stdin_used+0x5f9a>
gs gs fs gs and %ch,%fs:%gs:0x61(%ebp)
js     809c2ae <_IO_stdin_used+0x5faa>
insl   (%dx),%es:(%edi)
jne    809c2b5 <_IO_stdin_used+0x5fb1>
and    %dh,0x74(%ebx)
jb     809c2c2 <_IO_stdin_used+0x5fbe>
arpl   %si,0x72(%eax,%eiz,1)
arpl   %si,%gs:0x72(%ebp)
jae    809c2c0 <_IO_stdin_used+0x5fbc>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809c2d8 <_IO_stdin_used+0x5fd4>
jb     809c2ca <_IO_stdin_used+0x5fc6>
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 809c2d4 <_IO_stdin_used+0x5fd0>
and    %ch,0x75(%edi)
je     809c291 <_IO_stdin_used+0x5f8d>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f(%edx)
jne    809c2e6 <_IO_stdin_used+0x5fe2>
fs
jae    809c27b <_IO_stdin_used+0x5f77>
add    %dl,0x61(%esi)
jb     809c2e9 <_IO_stdin_used+0x5fe5>
popa
outsb  %ds:(%esi),(%dx)
je     809c2a4 <_IO_stdin_used+0x5fa0>
jae    809c2ef <_IO_stdin_used+0x5feb>
outsb  %ds:(%si),(%dx)
popa
je     809c300 <_IO_stdin_used+0x5ffc>
jb     809c2f2 <_IO_stdin_used+0x5fee>
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 809c2fc <_IO_stdin_used+0x5ff8>
and    %ch,0x75(%edi)
je     809c2b9 <_IO_stdin_used+0x5fb5>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,0x6f(%edx)
jne    809c30e <_IO_stdin_used+0x600a>
fs
jae    809c2a3 <_IO_stdin_used+0x5f9f>
add    %dl,0x61(%esi)
jb     809c311 <_IO_stdin_used+0x600d>
popa
outsb  %ds:(%esi),(%dx)
je     809c2cc <_IO_stdin_used+0x5fc8>
jae    809c317 <_IO_stdin_used+0x6013>
outsb  %ds:(%si),(%dx)
popa
je     809c328 <_IO_stdin_used+0x6024>
jb     809c31a <_IO_stdin_used+0x6016>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x6c756d20,0x73(%ebp),%esp
je     809c32e <_IO_stdin_used+0x602a>
jo     809c333 <_IO_stdin_used+0x602f>
and    %dh,%gs:0x61(%esi)
insb   (%dx),%es:(%edi)
jne    809c333 <_IO_stdin_used+0x602f>
jae    809c2d0 <_IO_stdin_used+0x5fcc>
inc    %ebp
js     809c336 <_IO_stdin_used+0x6032>
gs gs fs gs and %ch,%fs:%gs:0x61(%ebp)
js     809c346 <_IO_stdin_used+0x6042>
insl   (%dx),%es:(%edi)
jne    809c34d <_IO_stdin_used+0x6049>
and    %ah,0x63(%ecx,%ebp,2)
je     809c306 <_IO_stdin_used+0x6002>
outsb  %gs:(%esi),(%dx)
je     809c35c <_IO_stdin_used+0x6058>
jns    809c30c <_IO_stdin_used+0x6008>
jb     809c353 <_IO_stdin_used+0x604f>
arpl   %si,0x72(%ebp)
jae    809c35c <_IO_stdin_used+0x6058>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,0x63(%ecx,%ebp,2)
je     809c31d <_IO_stdin_used+0x6019>
outsb  %gs:(%esi),(%dx)
je     809c373 <_IO_stdin_used+0x606f>
jns    809c323 <_IO_stdin_used+0x601f>
outsb  %gs:(%esi),(%dx)
fs gs and %ah,%fs:%gs:0x75(%edx)
je     809c32d <_IO_stdin_used+0x6029>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809c331 <_IO_stdin_used+0x602d>
jae    809c387 <_IO_stdin_used+0x6083>
popa
jb     809c38a <_IO_stdin_used+0x6086>
gs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
inc    %esp
imul   $0x746e6520,0x74(%ebx),%esp
jb     809c39f <_IO_stdin_used+0x609b>
and    %dh,0x74(%ebx)
popa
jb     809c3a0 <_IO_stdin_used+0x609c>
gs and %ah,%fs:%gs:0x75(%edx)
je     809c353 <_IO_stdin_used+0x604f>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809c357 <_IO_stdin_used+0x6053>
outsb  %gs:(%esi),(%dx)
fs gs add %al,%fs:%gs:(%eax)
add    %al,(%eax)
inc    %esp
imul   $0x746e6520,0x74(%ebx),%esp
jb     809c3c3 <_IO_stdin_used+0x60bf>
and    %ch,0x61(%eax)
jae    809c36f <_IO_stdin_used+0x606b>
je     809c3c0 <_IO_stdin_used+0x60bc>
outsl  %ds:(%esi),(%dx)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jns    809c378 <_IO_stdin_used+0x6074>
imul   $0x7364,0x6c(%ebp),%sp
add    %al,(%eax)
push   %esi
popa
jb     809c3cd <_IO_stdin_used+0x60c9>
popa
outsb  %ds:(%esi),(%dx)
je     809c3db <_IO_stdin_used+0x60d7>
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809c390 <_IO_stdin_used+0x608c>
bound  %esp,0x20(%ebp)
jne    809c3e8 <_IO_stdin_used+0x60e4>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
arpl   %si,0x65(%edx)
popa
je     809c3e6 <_IO_stdin_used+0x60e2>
and    %ah,0x20(%ecx)
push   $0x6c656775
jns    809c3ab <_IO_stdin_used+0x60a7>
jb     809c3f2 <_IO_stdin_used+0x60ee>
arpl   %si,0x72(%ebp)
jae    809c3fb <_IO_stdin_used+0x60f7>
jbe    809c3f9 <_IO_stdin_used+0x60f5>
and    %dh,0x65(%edx,%esi,2)
and    %ch,%gs:0x66(%edi)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    809c407 <_IO_stdin_used+0x6103>
jae    809c3a4 <_IO_stdin_used+0x60a0>
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     809c435 <_IO_stdin_used+0x6131>
outsl  %ds:(%esi),(%dx)
jb     809c3fe <_IO_stdin_used+0x60fa>
and    %ah,0xa73
add    %al,(%eax)
insl   (%dx),%es:(%edi)
gs
jae    809c443 <_IO_stdin_used+0x613f>
popa
addr16
gs
sub    $0x6e65673e,%eax
gs
jb     809c43c <_IO_stdin_used+0x6138>
je     809c446 <_IO_stdin_used+0x6142>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %bh,0x645f203d
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %si,0x72(%ebp)
jb     809c453 <_IO_stdin_used+0x614f>
outsb  %ds:(%esi),(%dx)
je     809c450 <_IO_stdin_used+0x614c>
outsb  %gs:(%si),(%dx)
gs
jb     809c458 <_IO_stdin_used+0x6154>
je     809c462 <_IO_stdin_used+0x615e>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    809c421 <_IO_stdin_used+0x611d>
insl   (%dx),%es:(%edi)
gs
jae    809c478 <_IO_stdin_used+0x6174>
popa
and    %ch,%gs:0x74(%bx,%di)
gs
jb     809c46f <_IO_stdin_used+0x616b>
je     809c47f <_IO_stdin_used+0x617b>
jb     809c432 <_IO_stdin_used+0x612e>
imul   $0x4c4c554e,0x20(%ebx),%esi
or     (%eax),%al
add    %ah,0x75(%edx,%eiz,2)
jae    809c441 <_IO_stdin_used+0x613d>
insl   (%dx),%es:(%edi)
gs
jae    809c498 <_IO_stdin_used+0x6194>
popa
and    %ah,%gs:0x68(%bp,%di)
popa
outsb  %ds:(%esi),(%dx)
gs and %ah,%fs:%gs:0x79(%bp,%si)
je     809c49a <_IO_stdin_used+0x6196>
and    %ch,0x72(%edi)
fs
gs
jb     809c45c <_IO_stdin_used+0x6158>
jae    809c4a7 <_IO_stdin_used+0x61a3>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
imul   $0x726f7461,0x72(%ebp,%eiz,2),%esi
and    %dh,0x61(%edi)
jae    809c46f <_IO_stdin_used+0x616b>
arpl   %si,0x65(%edx)
popa
je     809c4ba <_IO_stdin_used+0x61b6>
or     %fs:(%eax),%al
bound  %esi,%fs:0x73(%ebp)
and    %ch,0x65(%ebp)
jae    809c4d4 <_IO_stdin_used+0x61d0>
popa
and    %ah,%gs:0x68(%bp,%di)
popa
outsb  %ds:(%esi),(%dx)
gs and %ah,%fs:%gs:0x79(%bp,%si)
je     809c4d6 <_IO_stdin_used+0x61d2>
and    %ch,0x72(%edi)
fs
gs
jb     809c498 <_IO_stdin_used+0x6194>
jae    809c4e3 <_IO_stdin_used+0x61df>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
popa
jo     809c4f1 <_IO_stdin_used+0x61ed>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x74(%ecx)
gs
jb     809c4eb <_IO_stdin_used+0x61e7>
je     809c4fb <_IO_stdin_used+0x61f7>
jb     809c4ae <_IO_stdin_used+0x61aa>
ja     809c4f1 <_IO_stdin_used+0x61ed>
jae    809c4b2 <_IO_stdin_used+0x61ae>
arpl   %si,0x65(%edx)
popa
je     809c4fd <_IO_stdin_used+0x61f9>
or     %fs:(%eax),%al
add    %ah,0x75(%edx,%eiz,2)
jae    809c4c1 <_IO_stdin_used+0x61bd>
insl   (%dx),%es:(%edi)
gs
jae    809c518 <_IO_stdin_used+0x6214>
popa
and    %ch,%gs:0x74(%bx,%di)
gs
jb     809c50f <_IO_stdin_used+0x620b>
je     809c51f <_IO_stdin_used+0x621b>
jb     809c4d2 <_IO_stdin_used+0x61ce>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x75,0x20(%ebx),%esi
outsb  %ds:(%esi),(%dx)
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0x726f2064,0x65(%edx),%edi
and    %ah,0x6f(%ebx)
jb     809c53f <_IO_stdin_used+0x623b>
jne    809c53f <_IO_stdin_used+0x623b>
je     809c536 <_IO_stdin_used+0x6232>
or     %fs:(%eax),%al
bound  %esi,%fs:0x73(%ebp)
and    %ch,0x65(%ebp)
jae    809c550 <_IO_stdin_used+0x624c>
popa
and    %ch,%gs:0x74(%bx,%di)
gs
jb     809c547 <_IO_stdin_used+0x6243>
je     809c557 <_IO_stdin_used+0x6253>
jb     809c50a <_IO_stdin_used+0x6206>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x65(%edx)
arpl   %sp,0x75(%ecx)
jae    809c55e <_IO_stdin_used+0x625a>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebp)
jae    809c575 <_IO_stdin_used+0x6271>
popa
and    %ch,%gs:0x61(%bx,%si)
jae    809c52a <_IO_stdin_used+0x6226>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %ch,0x6f(%ebp)
imul   $0x28206465,%fs:0x69(%esi),%esp
outsl  %ds:(%esi),(%dx)
jb     809c53c <_IO_stdin_used+0x6238>
jo     809c583 <_IO_stdin_used+0x627f>
jb     809c588 <_IO_stdin_used+0x6284>
popa
jo     809c596 <_IO_stdin_used+0x6292>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x74(%ecx)
gs
jb     809c58e <_IO_stdin_used+0x628a>
je     809c59e <_IO_stdin_used+0x629a>
jb     809c551 <_IO_stdin_used+0x624d>
imul   $0x7473756a,0x20(%ebx),%esi
and    %dh,0x6e(%ebp)
imul   $0x6c616974,0x69(%esi),%ebp
imul   $0xa2964,0x65(%edx),%edi
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809c571 <_IO_stdin_used+0x626d>
popa
jo     809c5c4 <_IO_stdin_used+0x62c0>
outsb  %gs:(%esi),(%dx)
and    %ch,%fs:0x74(%ecx)
gs
jb     809c5be <_IO_stdin_used+0x62ba>
je     809c5ce <_IO_stdin_used+0x62ca>
jb     809c581 <_IO_stdin_used+0x627d>
arpl   %sp,0x6e(%ecx)
daa
je     809c587 <_IO_stdin_used+0x6283>
bound  %esp,0x20(%ebp)
jne    809c5df <_IO_stdin_used+0x62db>
gs cmp %fs:%gs:(%eax),%ah
insl   (%dx),%es:(%edi)
gs
jae    809c5e7 <_IO_stdin_used+0x62e3>
popa
and    %ch,%gs:0x73(%bx,%di)
and    %ch,0x63(%edi,%ebp,2)
imul   $0x20,0x64(%ebp),%esp
sub    %ch,0x61(%eax)
jae    809c5a7 <_IO_stdin_used+0x62a3>
popa
insb   (%dx),%es:(%edi)
jb     809c5f0 <_IO_stdin_used+0x62ec>
popa
fs
jns    809c5af <_IO_stdin_used+0x62ab>
bound  %esp,0x65(%ebp)
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     809c5c2 <_IO_stdin_used+0x62be>
or     (%eax),%al
add    %ch,0x65(%ebp)
jae    809c613 <_IO_stdin_used+0x630f>
popa
addr16
gs
pop    %edi
je     809c61f <_IO_stdin_used+0x631b>
jo     809c60d <_IO_stdin_used+0x6309>
and    %ah,(%ecx)
cmp    $0x55424420,%eax
push   %ebx
pop    %edi
dec    %ebp
inc    %ebp
push   %ebx
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
dec    %ecx
dec    %esi
push   %esi
inc    %ecx
dec    %esp
dec    %ecx
inc    %esp
add    %al,(%eax)
add    %ah,0x73(%ebp,%eiz,2)
je     809c636 <_IO_stdin_used+0x6332>
outsb  %ds:(%esi),(%dx)
popa
je     809c63a <_IO_stdin_used+0x6336>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %bh,0x554e203d
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
fs
gs
jae    809c676 <_IO_stdin_used+0x6372>
imul   $0x6e6f6974,0x61(%esi),%ebp
sub    %eax,(%eax)
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
jo     809c684 <_IO_stdin_used+0x6380>
je     809c68d <_IO_stdin_used+0x6389>
and    %ch,(%eax)
jo     809c68a <_IO_stdin_used+0x6386>
je     809c693 <_IO_stdin_used+0x638f>
sub    %eax,(%eax)
add    %al,(%eax)
add    %ch,0x66(%ecx)
popa
arpl   %sp,0x20(%ebp)
cmp    $0x554e203d,%eax
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x20(%ebp)
sub    %ch,0x66(%ecx)
popa
arpl   %sp,0x29(%ebp)
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
gs
je     809c6f1 <_IO_stdin_used+0x63ed>
outsl  %ds:(%esi),(%dx)
sub    %eax,%fs:(%eax)
add    %al,(%eax)
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809c70d <_IO_stdin_used+0x6409>
popa
addr16
gs
pop    %edi
imul   $0x6568635f,0x72(%ebp,%eiz,2),%esi
arpl   %bp,0x20(%ebx)
sub    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
sub    %eax,(%eax)
jb     809c717 <_IO_stdin_used+0x6413>
popa
insb   (%dx),%es:(%edi)
sub    $0x6574693e,%eax
jb     809c71a <_IO_stdin_used+0x6416>
je     809c736 <_IO_stdin_used+0x6432>
jo     809c724 <_IO_stdin_used+0x6420>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
dec    %ebp
inc    %ebp
push   %ebx
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
pop    %edi
dec    %ecx
push   %esp
inc    %ebp
push   %edx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
push   %edx
inc    %ebp
inc    %ecx
inc    %esp
inc    %ebp
push   %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
jb     809c74e <_IO_stdin_used+0x644a>
jne    809c756 <_IO_stdin_used+0x6452>
outsb  %gs:(%esi),(%dx)
je     809c70d <_IO_stdin_used+0x6409>
and    $0x73692064,%eax
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x206f7420,0x64(%ebp),%esp
bound  %esp,0x20(%ebp)
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:(%edx)
and    $0x202c2273,%eax
bound  %esi,0x74(%ebp)
and    %ch,0x73(%ecx)
and    %ah,0x63(%ecx)
je     809c791 <_IO_stdin_used+0x648d>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    809c741 <_IO_stdin_used+0x643d>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:(%edx)
and    $0xa2273,%eax
add    %cl,0x65(%ebp)
jae    809c7a7 <_IO_stdin_used+0x64a3>
popa
and    %dh,%gs:0x65(%bp,%si)
data16
gs
jb     809c7b1 <_IO_stdin_used+0x64ad>
and    %dh,0x20(%edi,%ebp,2)
imul   $0x6564,0x20(%ebp,%eiz,2),%bp
jae    809c7ae <_IO_stdin_used+0x64aa>
jb     809c7b6 <_IO_stdin_used+0x64b2>
jo     809c7c3 <_IO_stdin_used+0x64bf>
outsl  %ds:(%esi),(%dx)
jb     809c772 <_IO_stdin_used+0x646e>
popa
je     809c775 <_IO_stdin_used+0x6471>
imul   $0x25207865,0x64(%esi),%ebp
imul   $0x68207475,(%edx,%eiz,2),%ebp
popa
jae    809c786 <_IO_stdin_used+0x6482>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    809c78b <_IO_stdin_used+0x6487>
and    $0x65642069,%eax
jae    809c7d5 <_IO_stdin_used+0x64d1>
jb     809c7dd <_IO_stdin_used+0x64d9>
jo     809c7ea <_IO_stdin_used+0x64e6>
outsl  %ds:(%esi),(%dx)
jb     809c7ec <_IO_stdin_used+0x64e8>
and    %ah,0x74(%ecx)
je     809c7df <_IO_stdin_used+0x64db>
arpl   %bp,0x65(%eax)
fs or  %cs:%fs:(%eax),%al
add    %al,(%eax)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     809c7f4 <_IO_stdin_used+0x64f0>
gs
fs
gs
jae    809c7ff <_IO_stdin_used+0x64fb>
je     809c805 <_IO_stdin_used+0x6501>
jo     809c7c6 <_IO_stdin_used+0x64c2>
inc    %esp
inc    %edx
jne    809c80f <_IO_stdin_used+0x650b>
cs
inc    %ebp
jb     809c812 <_IO_stdin_used+0x650e>
outsl  %ds:(%esi),(%dx)
jb     809c7d1 <_IO_stdin_used+0x64cd>
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x6e(%edi)
jae    809c813 <_IO_stdin_used+0x650f>
jae    809c820 <_IO_stdin_used+0x651c>
outsb  %gs:(%esi),(%dx)
je     809c7fd <_IO_stdin_used+0x64f9>
gs
jae    809c826 <_IO_stdin_used+0x6522>
popa
add    %al,%gs:(%bx,%si)
inc    %ecx
jb     809c822 <_IO_stdin_used+0x651e>
jne    809c82a <_IO_stdin_used+0x6526>
outsb  %gs:(%esi),(%dx)
je     809c7e1 <_IO_stdin_used+0x64dd>
and    $0x73692064,%eax
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x206f7420,0x64(%ebp),%esp
bound  %esp,0x20(%ebp)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
jb     809c83f <_IO_stdin_used+0x653b>
jns    809c800 <_IO_stdin_used+0x64fc>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,(%edx)
and    $0x202c2273,%eax
bound  %esi,0x74(%ebp)
and    %ch,0x73(%ecx)
and    %ah,0x63(%ecx)
je     809c869 <_IO_stdin_used+0x6565>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    809c819 <_IO_stdin_used+0x6515>
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx)
jb     809c861 <_IO_stdin_used+0x655d>
jns    809c822 <_IO_stdin_used+0x651e>
outsl  %ds:(%esi),(%dx)
data16
and    %ah,(%edx)
and    $0xa2273,%eax
add    %bh,0x6f(%ecx)
jne    809c830 <_IO_stdin_used+0x652c>
arpl   %sp,0x6e(%ecx)
daa
je     809c836 <_IO_stdin_used+0x6532>
jb     809c87d <_IO_stdin_used+0x6579>
popa
and    %ah,%fs:0x72(%ecx)
jb     809c880 <_IO_stdin_used+0x657c>
jns    809c894 <_IO_stdin_used+0x6590>
and    %ch,0x66(%edi)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809c88b <_IO_stdin_used+0x6587>
imul   $0x79742072,0x65(%esi),%ebp
jo     809c898 <_IO_stdin_used+0x6594>
jae    809c855 <_IO_stdin_used+0x6551>
sub    %dh,0x74(%ebx)
jb     809c8af <_IO_stdin_used+0x65ab>
arpl   %si,0x20(%esp,%ebp,1)
jbe    809c8a1 <_IO_stdin_used+0x659d>
jb     809c8ab <_IO_stdin_used+0x65a7>
popa
outsb  %ds:(%esi),(%dx)
je     809c872 <_IO_stdin_used+0x656e>
and    %ah,0x72(%ecx)
jb     809c8ac <_IO_stdin_used+0x65a8>
jns    809c876 <_IO_stdin_used+0x6572>
and    %dh,0x69(%edi)
je     809c8ba <_IO_stdin_used+0x65b6>
and    %ah,0x6f662073
jb     809c87a <_IO_stdin_used+0x6576>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     809c868 <_IO_stdin_used+0x6564>
add    %al,(%eax)
jns    809c8d1 <_IO_stdin_used+0x65cd>
jne    809c884 <_IO_stdin_used+0x6580>
arpl   %sp,0x6e(%ecx)
and    %ch,0x6e(%edi)
insb   (%dx),%es:(%edi)
jns    809c88d <_IO_stdin_used+0x6589>
jb     809c8d4 <_IO_stdin_used+0x65d0>
popa
and    %ah,%fs:0x72(%ecx)
jb     809c8d7 <_IO_stdin_used+0x65d3>
jns    809c8eb <_IO_stdin_used+0x65e7>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x61(%edx)
jae    809c8ea <_IO_stdin_used+0x65e6>
arpl   %sp,(%eax)
je     809c8fe <_IO_stdin_used+0x65fa>
jo     809c8ec <_IO_stdin_used+0x65e8>
jae    809c8a9 <_IO_stdin_used+0x65a5>
ja     809c8f4 <_IO_stdin_used+0x65f0>
je     809c8f5 <_IO_stdin_used+0x65f1>
and    %ah,0x6f662073
jb     809c8b5 <_IO_stdin_used+0x65b1>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     809c8a3 <_IO_stdin_used+0x659f>
add    %al,(%eax)
add    %cl,0x65(%ebp)
jae    809c913 <_IO_stdin_used+0x660f>
popa
and    %ch,%gs:0x61(%bx,%si)
jae    809c8c8 <_IO_stdin_used+0x65c4>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    809c8cd <_IO_stdin_used+0x65c9>
and    $0x72612064,%eax
addr16 jne 809c922 <_IO_stdin_used+0x661e>
outsb  %gs:(%esi),(%dx)
je     809c92c <_IO_stdin_used+0x6628>
sub    $0x20,%al
bound  %esi,0x74(%ebp)
and    %ch,0x6f(%ebp)
jb     809c928 <_IO_stdin_used+0x6624>
and    %dh,0x65(%edi)
jb     809c92d <_IO_stdin_used+0x6629>
and    %ah,0x78(%ebp)
jo     809c932 <_IO_stdin_used+0x662e>
arpl   %si,0x64(%ebp,%eiz,2)
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809c938 <_IO_stdin_used+0x6634>
insl   (%dx),%es:(%edi)
gs
jae    809c950 <_IO_stdin_used+0x664c>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
popa
jb     809c954 <_IO_stdin_used+0x6650>
pop    %edi
je     809c969 <_IO_stdin_used+0x6665>
jo     809c957 <_IO_stdin_used+0x6653>
and    %ch,(%eax)
imul   $0x3d3d2029,0x72(%ebp,%eiz,2),%esi
and    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
inc    %ecx
push   %edx
push   %edx
inc    %ecx
pop    %ecx
add    %al,(%eax)
add    %al,(%eax)
sub    %dh,0x75(%ebx)
bound  %esi,0x70(%ecx,%edi,2)
and    %bh,%gs:0x4244203d
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
dec    %ecx
dec    %esi
push   %esi
inc    %ecx
dec    %esp
dec    %ecx
inc    %esp
sub    %esp,(%eax)
jl     809c9ad <_IO_stdin_used+0x66a9>
and    %ch,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
je     809c9b3 <_IO_stdin_used+0x66af>
jo     809c9a1 <_IO_stdin_used+0x669d>
pop    %edi
imul   $0x65786966,0x5f(%ebx),%esi
and    %ch,%fs:(%eax)
jae    809c9be <_IO_stdin_used+0x66ba>
bound  %esi,0x70(%ecx,%edi,2)
sub    %esp,%gs:(%eax)
es and %dh,%es:0x75(%ebx)
bound  %esi,0x70(%ecx,%edi,2)
and    %ah,%gs:(%ecx)
cmp    $0x55424420,%eax
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
push   %ebp
dec    %esi
dec    %ecx
pop    %eax
pop    %edi
inc    %esi
inc    %esp
sub    %eax,(%eax)
add    %al,(%eax)
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809c9f1 <_IO_stdin_used+0x66ed>
popa
addr16
gs
pop    %edi
imul   $0x7070615f,0x72(%ebp,%eiz,2),%esi
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x20(%ebx)
sub    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
sub    %eax,(%eax)
add    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
sub    $0x6574693e,%eax
jb     809ca06 <_IO_stdin_used+0x6702>
je     809ca22 <_IO_stdin_used+0x671e>
jo     809ca10 <_IO_stdin_used+0x670c>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
dec    %ebp
inc    %ebp
push   %ebx
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
pop    %edi
dec    %ecx
push   %esp
inc    %ebp
push   %edx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
push   %edi
push   %edx
dec    %ecx
push   %esp
inc    %ebp
push   %edx
add    %al,(%eax)
add    %al,(%eax)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
jne    809ca5b <_IO_stdin_used+0x6757>
data16
cmp    %ah,(%eax)
sub    %ch,(%edx)
jae    809ca62 <_IO_stdin_used+0x675e>
jb     809ca59 <_IO_stdin_used+0x6755>
outsb  %ds:(%esi),(%dx)
addr16 pop %edi
jo     809ca1e <_IO_stdin_used+0x671a>
add    %al,(%eax)
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
jo     809ca70 <_IO_stdin_used+0x676c>
je     809ca79 <_IO_stdin_used+0x6775>
and    %ch,(%eax)
sub    0x74(%ebx),%dh
jb     809ca81 <_IO_stdin_used+0x677d>
outsb  %ds:(%esi),(%dx)
addr16 pop %edi
jo     809ca46 <_IO_stdin_used+0x6742>
add    %al,(%eax)
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
jae    809caa0 <_IO_stdin_used+0x679c>
outsb  %ds:(%si),(%dx)
popa
je     809cab1 <_IO_stdin_used+0x67ad>
jb     809caa3 <_IO_stdin_used+0x679f>
and    %ch,(%eax)
sub    0x74(%ebx),%dh
jb     809caae <_IO_stdin_used+0x67aa>
outsb  %ds:(%esi),(%dx)
addr16 pop %edi
jo     809ca73 <_IO_stdin_used+0x676f>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
je     809cacc <_IO_stdin_used+0x67c8>
jo     809caba <_IO_stdin_used+0x67b6>
pop    %edi
imul   $0x65786966,0x5f(%ebx),%esi
and    %ch,%fs:(%eax)
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809cac7 <_IO_stdin_used+0x67c3>
je     809cae3 <_IO_stdin_used+0x67df>
jo     809cad1 <_IO_stdin_used+0x67cd>
sub    %esp,(%eax)
es and %ah,%es:0x6c(%ebp)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809cad8 <_IO_stdin_used+0x67d4>
je     809caf4 <_IO_stdin_used+0x67f0>
jo     809cae2 <_IO_stdin_used+0x67de>
and    %ah,(%ecx)
cmp    $0x55424420,%eax
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
push   %ebp
dec    %esi
dec    %ecx
pop    %eax
pop    %edi
inc    %esi
inc    %esp
add    %al,(%eax)
jb     809cafb <_IO_stdin_used+0x67f7>
popa
insb   (%dx),%es:(%edi)
sub    $0x772e753e,%eax
jb     809cb08 <_IO_stdin_used+0x6804>
je     809cb06 <_IO_stdin_used+0x6802>
jb     809cad1 <_IO_stdin_used+0x67cd>
arpl   %bp,0x6e(%edi)
je     809cb09 <_IO_stdin_used+0x6805>
imul   $0x79745f72,0x65(%esi),%ebp
jo     809cb16 <_IO_stdin_used+0x6812>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
inc    %ecx
push   %edx
push   %edx
inc    %ecx
pop    %ecx
add    %al,(%eax)
add    %al,(%eax)
outsb  %ds:(%esi),(%dx)
pop    %edi
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809cb45 <_IO_stdin_used+0x6841>
and    %bh,0x55424420(,%edi,1)
push   %ebx
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
dec    %ecx
dec    %ebp
push   %ebp
dec    %ebp
pop    %edi
inc    %ecx
push   %edx
push   %edx
inc    %ecx
pop    %ecx
pop    %edi
dec    %esp
inc    %ebp
dec    %esi
inc    %edi
push   %esp
dec    %eax
and    %ch,(%edi)
and    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
je     809cb73 <_IO_stdin_used+0x686f>
jo     809cb61 <_IO_stdin_used+0x685d>
pop    %edi
addr16
gs
je     809cb60 <_IO_stdin_used+0x685c>
popa
insb   (%dx),%es:(%edi)
imul   $0x746e656d,0x6e(%edi),%esp
and    %ch,(%eax)
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809cb73 <_IO_stdin_used+0x686f>
je     809cb8f <_IO_stdin_used+0x688b>
jo     809cb7d <_IO_stdin_used+0x6879>
sub    %eax,(%eax)
add    %al,(%eax)
sub    %ch,(%edx)
bound  %ebp,0x6f(%edi)
insb   (%dx),%es:(%edi)
jae    809cb4d <_IO_stdin_used+0x6849>
pop    %ebx
imul   $0x30203d3d,0x20(%ebp),%ebx
and    %bh,0x20(%esp,%edi,2)
sub    %ch,(%edx)
bound  %ebp,0x6f(%edi)
insb   (%dx),%es:(%edi)
jae    809cb61 <_IO_stdin_used+0x685d>
pop    %ebx
imul   $0x31203d3d,0x20(%ebp),%ebx
add    %al,(%eax)
add    %al,(%eax)
sub    %dh,0x70(%ecx,%edi,2)
and    %bh,%gs:0x4244203d
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
push   %ebx
push   %esp
push   %edx
push   %ebp
inc    %ebx
push   %esp
and    %ah,(%esi)
and    %ah,%es:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809cbc7 <_IO_stdin_used+0x68c3>
imul   $0x69735f64,0x65(%esi),%ebp
outsb  %ds:(%si),(%dx)
popa
je     809cbe7 <_IO_stdin_used+0x68e3>
jb     809cbd9 <_IO_stdin_used+0x68d5>
and    %bh,0x554e203d
dec    %esp
dec    %esp
sub    %esp,(%eax)
jl     809cbfc <_IO_stdin_used+0x68f8>
and    %ch,(%eax)
je     809cbfd <_IO_stdin_used+0x68f9>
jo     809cbeb <_IO_stdin_used+0x68e7>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
inc    %esp
dec    %ecx
inc    %ebx
push   %esp
pop    %edi
inc    %ebp
dec    %esi
push   %esp
push   %edx
pop    %ecx
and    %ah,(%esi)
and    %ah,%es:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809cc08 <_IO_stdin_used+0x6904>
imul   $0x69735f64,0x65(%esi),%ebp
outsb  %ds:(%si),(%dx)
popa
je     809cc28 <_IO_stdin_used+0x6924>
jb     809cc1a <_IO_stdin_used+0x6916>
and    %bh,0x554e203d
dec    %esp
dec    %esp
sub    %esp,(%eax)
jl     809cc3d <_IO_stdin_used+0x6939>
and    %ch,(%eax)
je     809cc3e <_IO_stdin_used+0x693a>
jo     809cc2c <_IO_stdin_used+0x6928>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
push   %esi
inc    %ecx
push   %edx
dec    %ecx
inc    %ecx
dec    %esi
push   %esp
and    %ah,(%esi)
and    %ah,%es:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809cc46 <_IO_stdin_used+0x6942>
imul   $0x69735f64,0x65(%esi),%ebp
outsb  %ds:(%si),(%dx)
popa
je     809cc66 <_IO_stdin_used+0x6962>
jb     809cc58 <_IO_stdin_used+0x6954>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
sub    %esp,(%eax)
jl     809cc7b <_IO_stdin_used+0x6977>
and    %ch,(%eax)
je     809cc7c <_IO_stdin_used+0x6978>
jo     809cc6a <_IO_stdin_used+0x6966>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
inc    %ecx
push   %edx
push   %edx
inc    %ecx
pop    %ecx
and    %ah,(%esi)
and    %ah,%es:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809cc82 <_IO_stdin_used+0x697e>
imul   $0x69735f64,0x65(%esi),%ebp
outsb  %ds:(%si),(%dx)
popa
je     809cca2 <_IO_stdin_used+0x699e>
jb     809cc94 <_IO_stdin_used+0x6990>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
sub    %eax,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
je     809ccb8 <_IO_stdin_used+0x69b4>
jo     809cca6 <_IO_stdin_used+0x69a2>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
inc    %ecx
push   %edx
push   %edx
inc    %ecx
pop    %ecx
and    %ah,(%esi)
and    %ah,%es:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809ccbe <_IO_stdin_used+0x69ba>
imul   $0x69735f64,0x65(%esi),%ebp
outsb  %ds:(%si),(%dx)
popa
je     809ccde <_IO_stdin_used+0x69da>
jb     809ccd0 <_IO_stdin_used+0x69cc>
and    %ah,(%esi)
and    %ch,%es:(%edx)
arpl   %bp,0x6e(%edi)
je     809ccd6 <_IO_stdin_used+0x69d2>
imul   $0x69735f64,0x65(%esi),%ebp
outsb  %ds:(%si),(%dx)
popa
je     809ccf6 <_IO_stdin_used+0x69f2>
jb     809cce8 <_IO_stdin_used+0x69e4>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
inc    %esp
dec    %ecx
inc    %ebx
push   %esp
pop    %edi
inc    %ebp
dec    %esi
push   %esp
push   %edx
pop    %ecx
pop    %edi
inc    %edx
inc    %ebp
inc    %edi
dec    %ecx
dec    %esi
pop    %edi
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
sub    %esp,(%eax)
jl     809cd21 <_IO_stdin_used+0x6a1d>
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
je     809cd0d <_IO_stdin_used+0x6a09>
imul   $0x69735f64,0x65(%esi),%ebp
outsb  %ds:(%si),(%dx)
popa
je     809cd2d <_IO_stdin_used+0x6a29>
jb     809cd1f <_IO_stdin_used+0x6a1b>
and    %bh,0x554e203d
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
jae    809cd46 <_IO_stdin_used+0x6a42>
outsb  %ds:(%si),(%dx)
popa
je     809cd57 <_IO_stdin_used+0x6a53>
jb     809cd49 <_IO_stdin_used+0x6a45>
and    %ch,(%eax)
arpl   %bp,0x6e(%edi)
je     809cd4c <_IO_stdin_used+0x6a48>
imul   $0x69735f64,0x65(%esi),%ebp
outsb  %ds:(%si),(%dx)
popa
je     809cd6c <_IO_stdin_used+0x6a68>
jb     809cd5e <_IO_stdin_used+0x6a5a>
sub    %ebp,(%ecx)
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809cd79 <_IO_stdin_used+0x6a75>
popa
addr16
gs
pop    %edi
imul   $0x7070615f,0x72(%ebp,%eiz,2),%esi
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x20(%ebx)
sub    %dh,0x65(%edx)
popa
insb   (%dx),%es:(%edi)
pop    %edi
jae    809cd99 <_IO_stdin_used+0x6a95>
bound  %ebp,(%ecx)
add    %al,(%eax)
jb     809cd8f <_IO_stdin_used+0x6a8b>
popa
insb   (%dx),%es:(%edi)
pop    %edi
jae    809cda4 <_IO_stdin_used+0x6aa0>
bound  %ebp,0x6574693e
jb     809cd96 <_IO_stdin_used+0x6a92>
je     809cdb2 <_IO_stdin_used+0x6aae>
jo     809cda0 <_IO_stdin_used+0x6a9c>
and    %bh,0x4244203d
push   %ebp
push   %ebx
pop    %edi
dec    %ebp
inc    %ebp
push   %ebx
push   %ebx
inc    %ecx
inc    %edi
inc    %ebp
pop    %edi
dec    %ecx
push   %esp
inc    %ebp
push   %edx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
push   %edi
push   %edx
dec    %ecx
push   %esp
inc    %ebp
push   %edx
add    %al,(%eax)
add    %al,(%eax)
popa
jb     809cdd5 <_IO_stdin_used+0x6ad1>
popa
jns    809cdd9 <_IO_stdin_used+0x6ad5>
and    %ch,0x66(%edi)
and    %ah,0x61632073
outsb  %ds:(%esi),(%dx)
daa
je     809cd93 <_IO_stdin_used+0x6a8f>
bound  %esp,0x20(%ebp)
popa
jo     809cde9 <_IO_stdin_used+0x6ae5>
outsb  %gs:(%esi),(%dx)
fs gs and %dh,%fs:%gs:0x69(%edi)
je     809cdeb <_IO_stdin_used+0x6ae7>
and    %ah,0x6f662073
jb     809cdab <_IO_stdin_used+0x6aa7>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     809cd99 <_IO_stdin_used+0x6a95>
add    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x73692073
outsb  %ds:(%esi),(%dx)
daa
je     809cdbe <_IO_stdin_used+0x6aba>
jae    809ce15 <_IO_stdin_used+0x6b11>
jo     809ce12 <_IO_stdin_used+0x6b0e>
outsl  %ds:(%esi),(%dx)
jb     809ce19 <_IO_stdin_used+0x6b15>
gs and %bh,%fs:%gs:0x65(%ecx)
je     809cdcc <_IO_stdin_used+0x6ac8>
imul   $0xa7325,0x20(%esi),%ebp
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x20(%ebp)
sub    %ch,0x66(%ecx)
popa
arpl   %sp,0x29(%ebp)
add    %al,(%eax)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %eax,%gs:(%eax)
add    %ch,0x62(%edi)
push   $0x65
arpl   %si,0x70(%edi,%ebx,2)
popa
je     809ce73 <_IO_stdin_used+0x6b6f>
and    %bh,0x554e203d
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
jo     809ce8f <_IO_stdin_used+0x6b8b>
je     809ce98 <_IO_stdin_used+0x6b94>
and    %ch,(%eax)
outsl  %ds:(%esi),(%dx)
bound  %ebp,0x65(%edx)
arpl   %si,0x70(%edi,%ebx,2)
popa
je     809cea5 <_IO_stdin_used+0x6ba1>
sub    %eax,(%eax)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %bh,0x554e203d
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
and    %ch,(%eax)
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
sub    %eax,(%eax)
add    %ah,0x72(%ebp)
jb     809ceeb <_IO_stdin_used+0x6be7>
jb     809cedd <_IO_stdin_used+0x6bd9>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %bh,%gs:0x554e203d
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
gs
jb     809cf18 <_IO_stdin_used+0x6c14>
outsl  %ds:(%esi),(%dx)
jb     809cf08 <_IO_stdin_used+0x6c04>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
gs
jb     809cf24 <_IO_stdin_used+0x6c20>
outsl  %ds:(%esi),(%dx)
jb     809cf14 <_IO_stdin_used+0x6c10>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %eax,%gs:(%eax)
add    %dh,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
fs
gs
jb     809cee3 <_IO_stdin_used+0x6bdf>
cmp    $0x554e203d,%eax
dec    %esp
dec    %esp
and    %bh,0x20(%esp,%edi,2)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
jae    809cf54 <_IO_stdin_used+0x6c50>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     809cf1d <_IO_stdin_used+0x6c19>
add    %al,(%eax)
add    %al,(%eax)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
gs
jb     809cf82 <_IO_stdin_used+0x6c7e>
outsl  %ds:(%esi),(%dx)
jb     809cf72 <_IO_stdin_used+0x6c6e>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
gs
jb     809cf8e <_IO_stdin_used+0x6c8a>
outsl  %ds:(%esi),(%dx)
jb     809cf7e <_IO_stdin_used+0x6c7a>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %eax,%gs:(%eax)
cs
cs
das
cs
cs
das
bound  %esi,%fs:0x73(%ebp)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x7373656d,%eax
popa
gs arpl %ax,%cs:%gs:(%bx,%si)
and    %ebp,0x65(%ebp)
jae    809cfb7 <_IO_stdin_used+0x6cb3>
popa
addr16
gs
sub    $0x5f6e693e,%eax
arpl   %sp,0x63(%ecx)
push   $0x6d210065
gs
jae    809cfca <_IO_stdin_used+0x6cc6>
popa
addr16
gs
sub    $0x636f6c3e,%eax
imul   $0x0,0x64(%ebp),%esp
jb     809cfca <_IO_stdin_used+0x6cc6>
jo     809cfd3 <_IO_stdin_used+0x6ccf>
jns    809cfc8 <_IO_stdin_used+0x6cc4>
jae    809cfd0 <_IO_stdin_used+0x6ccc>
jb     809cfd6 <_IO_stdin_used+0x6cd2>
popa
insb   (%dx),%es:(%edi)
and    %ah,(%ecx)
cmp    $0x6d003020,%eax
gs
je     809cfe1 <_IO_stdin_used+0x6cdd>
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ch,0x74(%ecx)
gs
jb     809cfa9 <_IO_stdin_used+0x6ca5>
and    %edi,0x4c554e20
dec    %esp
add    %dh,0x75(%ebx)
bound  %esp,(%eax)
and    %edi,0x4c554e20
dec    %esp
add    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    809d007 <_IO_stdin_used+0x6d03>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ah,0x75(%edx,%eiz,2)
jae    809d00f <_IO_stdin_used+0x6d0b>
je     809d02b <_IO_stdin_used+0x6d27>
jo     809d019 <_IO_stdin_used+0x6d15>
pop    %edi
imul   $0x69736162,0x5f(%ebx),%esi
arpl   %sp,(%eax)
sub    %dh,0x70(%ecx,%edi,2)
sub    %eax,%gs:(%eax)
sub    0x6f(%edx),%ah
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
jo     809cfed <_IO_stdin_used+0x6ce9>
cmp    $0x2030203d,%eax
jl     809d050 <_IO_stdin_used+0x6d4c>
and    %ch,(%edx)
bound  %ebp,0x6f(%edi)
insb   (%dx),%es:(%edi)
pop    %edi
jo     809cffd <_IO_stdin_used+0x6cf9>
cmp    $0x31203d,%eax
outsb  %ds:(%esi),(%dx)
pop    %edi
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809d05f <_IO_stdin_used+0x6d5b>
and    %bh,(%esi)
cmp    $0x64003020,%eax
bound  %esi,0x73(%ebp)
pop    %edi
je     809d072 <_IO_stdin_used+0x6d6e>
jo     809d060 <_IO_stdin_used+0x6d5c>
pop    %edi
imul   $0x746e6f63,0x5f(%ebx),%esi
popa
imul   $0x74282072,0x65(%esi),%ebp
jns    809d07d <_IO_stdin_used+0x6d79>
sub    %eax,%gs:(%eax)
imul   $0x21206563,0x61(%esi),%esp
cmp    $0x4c554e20,%eax
dec    %esp
add    %ch,0x65(%ebp)
je     809d08a <_IO_stdin_used+0x6d86>
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %dh,0x65(%edx)
jo     809d0a2 <_IO_stdin_used+0x6d9e>
jns    809d097 <_IO_stdin_used+0x6d93>
je     809d0a9 <_IO_stdin_used+0x6da5>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ah,0x72(%ebp)
jb     809d0b6 <_IO_stdin_used+0x6db2>
jb     809d0a8 <_IO_stdin_used+0x6da4>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809d0e6 <_IO_stdin_used+0x6de2>
jb     809d0d8 <_IO_stdin_used+0x6dd4>
and    %ah,(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %ch,0x65(%ebp)
je     809d0e8 <_IO_stdin_used+0x6de4>
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
add    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %ch,0x6e(%ecx)
jbe    809d0f4 <_IO_stdin_used+0x6df0>
insb   (%dx),%es:(%edi)
imul   $0x21206773,0x6d(%eax,%eax,1),%esp
cmp    $0x4c554e20,%eax
dec    %esp
add    %ch,0x61(%ebp)
jb     809d11a <_IO_stdin_used+0x6e16>
push   $0x656c6c61
fs
pop    %edi
fs
popa
je     809d113 <_IO_stdin_used+0x6e0f>
pop    %edi
jo     809d0d5 <_IO_stdin_used+0x6dd1>
and    %edi,0x4c554e20
dec    %esp
add    %ch,0x6e(%ebp,%eiz,2)
pop    %edi
jo     809d0e3 <_IO_stdin_used+0x6ddf>
and    %edi,0x4c554e20
dec    %esp
add    %dh,0x74(%ebx)
jb     809d0ef <_IO_stdin_used+0x6deb>
and    %edi,0x4c554e20
dec    %esp
add    %cl,0x65(%ebp)
jae    809d14e <_IO_stdin_used+0x6e4a>
popa
and    %ch,%gs:0x73(%bx,%di)
and    %ah,0x6f(%ebx)
jb     809d158 <_IO_stdin_used+0x6e54>
jne    809d158 <_IO_stdin_used+0x6e54>
je     809d14f <_IO_stdin_used+0x6e4b>
and    %ch,%fs:(%eax)
and    $0x2973,%eax
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d17c <_IO_stdin_used+0x6e78>
popa
addr16
gs
pop    %edi
fs
gs
insl   (%dx),%es:(%edi)
popa
jb     809d186 <_IO_stdin_used+0x6e82>
push   $0x64006c61
bound  %esi,0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d193 <_IO_stdin_used+0x6e8f>
popa
addr16
gs
pop    %edi
insl   (%dx),%es:(%edi)
popa
jb     809d19b <_IO_stdin_used+0x6e97>
push   $0x64006c61
bound  %esi,0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d1a8 <_IO_stdin_used+0x6ea4>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d19c <_IO_stdin_used+0x6e98>
fs
popa
je     809d1a2 <_IO_stdin_used+0x6e9e>
add    %ah,0x75(%edx,%eiz,2)
jae    809d1a6 <_IO_stdin_used+0x6ea2>
insl   (%dx),%es:(%edi)
gs
jae    809d1be <_IO_stdin_used+0x6eba>
popa
addr16
gs
pop    %edi
jae    809d1b6 <_IO_stdin_used+0x6eb2>
je     809d1b2 <_IO_stdin_used+0x6eae>
fs
popa
je     809d1b8 <_IO_stdin_used+0x6eb4>
add    %ah,0x75(%edx,%eiz,2)
jae    809d1bc <_IO_stdin_used+0x6eb8>
insl   (%dx),%es:(%edi)
gs
jae    809d1d4 <_IO_stdin_used+0x6ed0>
popa
addr16
gs
pop    %edi
data16
jb     809d1cd <_IO_stdin_used+0x6ec9>
gs
pop    %edi
fs
popa
je     809d1cf <_IO_stdin_used+0x6ecb>
pop    %edi
jae    809d1dd <_IO_stdin_used+0x6ed9>
outsl  %ds:(%esi),(%dx)
je     809d174 <_IO_stdin_used+0x6e70>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    809d1e0 <_IO_stdin_used+0x6edc>
je     809d1dc <_IO_stdin_used+0x6ed8>
gs
jb     809d1f2 <_IO_stdin_used+0x6eee>
outsl  %ds:(%esi),(%dx)
jb     809d1e2 <_IO_stdin_used+0x6ede>
data16
jb     809d1f5 <_IO_stdin_used+0x6ef1>
insl   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d1ff <_IO_stdin_used+0x6efb>
popa
add    %ah,%gs:0x62(%si)
jne    809d207 <_IO_stdin_used+0x6f03>
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d20c <_IO_stdin_used+0x6f08>
popa
addr16
gs
pop    %edi
push   $0x735f7361
imul   $0x72757461,0x6e(%edi),%esp
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    809d20f <_IO_stdin_used+0x6f0b>
insl   (%dx),%es:(%edi)
gs
jae    809d227 <_IO_stdin_used+0x6f23>
popa
addr16
gs
pop    %edi
push   $0x735f7361
outsb  %gs:(%esi),(%dx)
fs
gs
jb     809d1c3 <_IO_stdin_used+0x6ebf>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d23f <_IO_stdin_used+0x6f3b>
popa
addr16
gs
pop    %edi
push   $0x645f7361
gs
jae    809d24c <_IO_stdin_used+0x6f48>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %ah,0x75(%edx,%eiz,2)
jae    809d244 <_IO_stdin_used+0x6f40>
insl   (%dx),%es:(%edi)
gs
jae    809d25c <_IO_stdin_used+0x6f58>
popa
addr16
gs
pop    %edi
imul   $0x6f727265,0x5f(%ebx),%esi
jb     809d1f6 <_IO_stdin_used+0x6ef2>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d272 <_IO_stdin_used+0x6f6e>
popa
addr16
gs
pop    %edi
imul   $0x6e676973,0x5f(%ebx),%esi
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    809d271 <_IO_stdin_used+0x6f6d>
insl   (%dx),%es:(%edi)
gs
jae    809d289 <_IO_stdin_used+0x6f85>
popa
addr16
gs
pop    %edi
imul   $0x6874656d,0x5f(%ebx),%esi
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    809d28d <_IO_stdin_used+0x6f89>
insl   (%dx),%es:(%edi)
gs
jae    809d2a5 <_IO_stdin_used+0x6fa1>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d299 <_IO_stdin_used+0x6f95>
jae    809d2a5 <_IO_stdin_used+0x6fa1>
outsb  %ds:(%si),(%dx)
popa
je     809d2b6 <_IO_stdin_used+0x6fb2>
jb     809d2a8 <_IO_stdin_used+0x6fa4>
add    %ah,0x75(%edx,%eiz,2)
jae    809d2a8 <_IO_stdin_used+0x6fa4>
insl   (%dx),%es:(%edi)
gs
jae    809d2c0 <_IO_stdin_used+0x6fbc>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d2b4 <_IO_stdin_used+0x6fb0>
jae    809d2bc <_IO_stdin_used+0x6fb8>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     809d25c <_IO_stdin_used+0x6f58>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d2d8 <_IO_stdin_used+0x6fd4>
popa
addr16
gs
pop    %edi
jae    809d2d0 <_IO_stdin_used+0x6fcc>
je     809d2cc <_IO_stdin_used+0x6fc8>
jae    809d2d4 <_IO_stdin_used+0x6fd0>
outsb  %ds:(%esi),(%dx)
fs
gs
jb     809d274 <_IO_stdin_used+0x6f70>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d2f0 <_IO_stdin_used+0x6fec>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d2e4 <_IO_stdin_used+0x6fe0>
fs
gs
jae    809d2fd <_IO_stdin_used+0x6ff9>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %ah,0x75(%edx,%eiz,2)
jae    809d2f5 <_IO_stdin_used+0x6ff1>
insl   (%dx),%es:(%edi)
gs
jae    809d30d <_IO_stdin_used+0x7009>
popa
addr16
gs
pop    %edi
jae    809d305 <_IO_stdin_used+0x7001>
je     809d301 <_IO_stdin_used+0x6ffd>
fs
gs
jae    809d31a <_IO_stdin_used+0x7016>
imul   $0x6e6f6974,0x61(%esi),%ebp
add    %ah,0x75(%edx,%eiz,2)
jae    809d312 <_IO_stdin_used+0x700e>
insl   (%dx),%es:(%edi)
gs
jae    809d32a <_IO_stdin_used+0x7026>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d31e <_IO_stdin_used+0x701a>
gs
jb     809d334 <_IO_stdin_used+0x7030>
outsl  %ds:(%esi),(%dx)
jb     809d324 <_IO_stdin_used+0x7020>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    809d32e <_IO_stdin_used+0x702a>
insl   (%dx),%es:(%edi)
gs
jae    809d346 <_IO_stdin_used+0x7042>
popa
addr16
gs
pop    %edi
jae    809d33e <_IO_stdin_used+0x703a>
je     809d33a <_IO_stdin_used+0x7036>
gs
jb     809d350 <_IO_stdin_used+0x704c>
outsl  %ds:(%esi),(%dx)
jb     809d340 <_IO_stdin_used+0x703c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    809d34a <_IO_stdin_used+0x7046>
insl   (%dx),%es:(%edi)
gs
jae    809d362 <_IO_stdin_used+0x705e>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d356 <_IO_stdin_used+0x7052>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ah,0x75(%edx,%eiz,2)
jae    809d362 <_IO_stdin_used+0x705e>
insl   (%dx),%es:(%edi)
gs
jae    809d37a <_IO_stdin_used+0x7076>
popa
addr16
gs
pop    %edi
jae    809d372 <_IO_stdin_used+0x706e>
je     809d36e <_IO_stdin_used+0x706a>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
bound  %esp,0x72(%ebp)
add    %ah,0x75(%edx,%eiz,2)
jae    809d37a <_IO_stdin_used+0x7076>
insl   (%dx),%es:(%edi)
gs
jae    809d392 <_IO_stdin_used+0x708e>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d386 <_IO_stdin_used+0x7082>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d3ad <_IO_stdin_used+0x70a9>
popa
addr16
gs
pop    %edi
jae    809d3a5 <_IO_stdin_used+0x70a1>
je     809d3a1 <_IO_stdin_used+0x709d>
imul   $0x61667265,0x74(%esi),%ebp
arpl   %sp,0x0(%ebp)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d3dc <_IO_stdin_used+0x70d8>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d3d0 <_IO_stdin_used+0x70cc>
jo     809d3d4 <_IO_stdin_used+0x70d0>
je     809d3dd <_IO_stdin_used+0x70d9>
pop    %edi
fs arpl %bp,%fs:%gs:0x6d(%edi)
jo     809d3ec <_IO_stdin_used+0x70e8>
jae    809d3e4 <_IO_stdin_used+0x70e0>
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    809d3e5 <_IO_stdin_used+0x70e1>
insl   (%dx),%es:(%edi)
gs
jae    809d3fd <_IO_stdin_used+0x70f9>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d3f1 <_IO_stdin_used+0x70ed>
jo     809d3f5 <_IO_stdin_used+0x70f1>
je     809d3fe <_IO_stdin_used+0x70fa>
add    %ah,0x75(%edx,%eiz,2)
jae    809d3fb <_IO_stdin_used+0x70f7>
insl   (%dx),%es:(%edi)
gs
jae    809d413 <_IO_stdin_used+0x710f>
popa
addr16
gs
pop    %edi
jae    809d40b <_IO_stdin_used+0x7107>
je     809d407 <_IO_stdin_used+0x7103>
jo     809d40b <_IO_stdin_used+0x7107>
je     809d414 <_IO_stdin_used+0x7110>
add    %ah,0x75(%edx,%eiz,2)
jae    809d411 <_IO_stdin_used+0x710d>
insl   (%dx),%es:(%edi)
gs
jae    809d429 <_IO_stdin_used+0x7125>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d41d <_IO_stdin_used+0x7119>
popa
jne    809d435 <_IO_stdin_used+0x7131>
outsl  %ds:(%esi),(%dx)
pop    %edi
jae    809d439 <_IO_stdin_used+0x7135>
popa
jb     809d43c <_IO_stdin_used+0x7138>
add    %ah,0x75(%edx,%eiz,2)
jae    809d42d <_IO_stdin_used+0x7129>
insl   (%dx),%es:(%edi)
gs
jae    809d445 <_IO_stdin_used+0x7141>
popa
addr16
gs
pop    %edi
jae    809d43d <_IO_stdin_used+0x7139>
je     809d439 <_IO_stdin_used+0x7135>
popa
jne    809d451 <_IO_stdin_used+0x714d>
outsl  %ds:(%esi),(%dx)
pop    %edi
jae    809d455 <_IO_stdin_used+0x7151>
popa
jb     809d458 <_IO_stdin_used+0x7154>
add    %ah,0x75(%edx,%eiz,2)
jae    809d449 <_IO_stdin_used+0x7145>
insl   (%dx),%es:(%edi)
gs
jae    809d461 <_IO_stdin_used+0x715d>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d455 <_IO_stdin_used+0x7151>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
jb     809d460 <_IO_stdin_used+0x715c>
jo     809d469 <_IO_stdin_used+0x7165>
jns    809d3ff <_IO_stdin_used+0x70fb>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d47b <_IO_stdin_used+0x7177>
popa
addr16
gs
pop    %edi
jae    809d473 <_IO_stdin_used+0x716f>
je     809d46f <_IO_stdin_used+0x716b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
jb     809d47a <_IO_stdin_used+0x7176>
jo     809d483 <_IO_stdin_used+0x717f>
jns    809d419 <_IO_stdin_used+0x7115>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809d484 <_IO_stdin_used+0x7180>
insl   (%dx),%es:(%edi)
gs
jae    809d49c <_IO_stdin_used+0x7198>
popa
addr16
gs
pop    %edi
imul   $0x6162615f,0x72(%ebp,%eiz,2),%esi
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
je     809d4a0 <_IO_stdin_used+0x719c>
imul   $0x72,0x65(%esi),%ebp
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d4dc <_IO_stdin_used+0x71d8>
popa
addr16
gs
pop    %edi
imul   $0x6f6c635f,0x72(%ebp,%eiz,2),%esi
jae    809d4dc <_IO_stdin_used+0x71d8>
pop    %edi
arpl   %bp,0x6e(%edi)
je     809d4de <_IO_stdin_used+0x71da>
imul   $0x72,0x65(%esi),%ebp
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d51c <_IO_stdin_used+0x7218>
popa
addr16
gs
pop    %edi
imul   $0x65706f5f,0x72(%ebp,%eiz,2),%esi
outsb  %ds:(%esi),(%dx)
pop    %edi
arpl   %bp,0x6e(%edi)
je     809d51d <_IO_stdin_used+0x7219>
imul   $0x72,0x65(%esi),%ebp
add    %ah,0x75(%edx,%eiz,2)
jae    809d544 <_IO_stdin_used+0x7240>
insl   (%dx),%es:(%edi)
gs
jae    809d55c <_IO_stdin_used+0x7258>
popa
addr16
gs
pop    %edi
imul   $0x7070615f,0x72(%ebp,%eiz,2),%esi
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
imul   $0x5f64,0x65(%eax),%di
popa
jb     809d574 <_IO_stdin_used+0x7270>
popa
jns    809d505 <_IO_stdin_used+0x7201>
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809d56c <_IO_stdin_used+0x7268>
insl   (%dx),%es:(%edi)
gs
jae    809d584 <_IO_stdin_used+0x7280>
popa
addr16
gs
pop    %edi
imul   $0x7070615f,0x72(%ebp,%eiz,2),%esi
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
bound  %esp,0x73(%ecx)
imul   $0x73756264,0x0(%ebx),%esp
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d5a3 <_IO_stdin_used+0x729f>
popa
addr16
gs
pop    %edi
imul   $0x696e695f,0x72(%ebp,%eiz,2),%esi
je     809d59d <_IO_stdin_used+0x7299>
popa
jo     809d5b1 <_IO_stdin_used+0x72ad>
outsb  %gs:(%esi),(%dx)
add    %al,%fs:(%eax)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d5dc <_IO_stdin_used+0x72d8>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
imul   $0x5f64,0x65(%eax),%di
popa
jb     809d5f1 <_IO_stdin_used+0x72ed>
popa
jns    809d582 <_IO_stdin_used+0x727e>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d61c <_IO_stdin_used+0x7318>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
popa
jb     809d62b <_IO_stdin_used+0x7327>
popa
jns    809d61b <_IO_stdin_used+0x7317>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    809d624 <_IO_stdin_used+0x7320>
insl   (%dx),%es:(%edi)
gs
jae    809d63c <_IO_stdin_used+0x7338>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
bound  %esp,0x73(%ecx)
imul   $0x0,0x0(%ebx),%esp
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d65c <_IO_stdin_used+0x7358>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
jae    809d661 <_IO_stdin_used+0x735d>
outsb  %ds:(%si),(%dx)
popa
je     809d672 <_IO_stdin_used+0x736e>
jb     809d664 <_IO_stdin_used+0x7360>
add    %ah,0x75(%edx,%eiz,2)
jae    809d664 <_IO_stdin_used+0x7360>
insl   (%dx),%es:(%edi)
gs
jae    809d67c <_IO_stdin_used+0x7378>
popa
addr16
gs
pop    %edi
imul   $0x6365725f,0x72(%ebp,%eiz,2),%esi
jne    809d689 <_IO_stdin_used+0x7385>
jae    809d67e <_IO_stdin_used+0x737a>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809d684 <_IO_stdin_used+0x7380>
insl   (%dx),%es:(%edi)
gs
jae    809d69c <_IO_stdin_used+0x7398>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809d69d <_IO_stdin_used+0x7399>
je     809d6b9 <_IO_stdin_used+0x73b5>
jo     809d6a7 <_IO_stdin_used+0x73a3>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d6c0 <_IO_stdin_used+0x73bc>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
popa
jb     809d6c4 <_IO_stdin_used+0x73c0>
pop    %edi
je     809d6d9 <_IO_stdin_used+0x73d5>
jo     809d6c7 <_IO_stdin_used+0x73c3>
add    %ah,0x75(%edx,%eiz,2)
jae    809d6c7 <_IO_stdin_used+0x73c3>
insl   (%dx),%es:(%edi)
gs
jae    809d6df <_IO_stdin_used+0x73db>
popa
addr16
gs
pop    %edi
imul   $0x78656e5f,0x72(%ebp,%eiz,2),%esi
je     809d67a <_IO_stdin_used+0x7376>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d6f6 <_IO_stdin_used+0x73f2>
popa
addr16
gs
pop    %edi
imul   $0x7361685f,0x72(%ebp,%eiz,2),%esi
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
js     809d708 <_IO_stdin_used+0x7404>
add    %ah,0x75(%edx,%eiz,2)
jae    809d6f9 <_IO_stdin_used+0x73f5>
insl   (%dx),%es:(%edi)
gs
jae    809d711 <_IO_stdin_used+0x740d>
popa
addr16
gs
pop    %edi
imul   $0x696e695f,0x72(%ebp,%eiz,2),%esi
je     809d6ac <_IO_stdin_used+0x73a8>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d728 <_IO_stdin_used+0x7424>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d71c <_IO_stdin_used+0x7418>
popa
jb     809d727 <_IO_stdin_used+0x7423>
jae    809d721 <_IO_stdin_used+0x741d>
jbe    809d725 <_IO_stdin_used+0x7421>
insb   (%dx),%es:(%edi)
imul   $0x75626400,0x74(%ebx),%esi
jae    809d72d <_IO_stdin_used+0x7429>
insl   (%dx),%es:(%edi)
gs
jae    809d745 <_IO_stdin_used+0x7441>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d739 <_IO_stdin_used+0x7435>
popa
jb     809d744 <_IO_stdin_used+0x7440>
jae    809d6df <_IO_stdin_used+0x73db>
add    %ah,0x75(%edx,%eiz,2)
jae    809d744 <_IO_stdin_used+0x7440>
insl   (%dx),%es:(%edi)
gs
jae    809d75c <_IO_stdin_used+0x7458>
popa
addr16
gs
pop    %edi
popa
jo     809d760 <_IO_stdin_used+0x745c>
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
popa
jb     809d75e <_IO_stdin_used+0x745a>
jae    809d758 <_IO_stdin_used+0x7454>
jbe    809d75c <_IO_stdin_used+0x7458>
insb   (%dx),%es:(%edi)
imul   $0x75626400,0x74(%ebx),%esi
jae    809d764 <_IO_stdin_used+0x7460>
insl   (%dx),%es:(%edi)
gs
jae    809d77c <_IO_stdin_used+0x7478>
popa
addr16
gs
pop    %edi
popa
jo     809d780 <_IO_stdin_used+0x747c>
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
popa
jb     809d77e <_IO_stdin_used+0x747a>
jae    809d719 <_IO_stdin_used+0x7415>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d795 <_IO_stdin_used+0x7491>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d789 <_IO_stdin_used+0x7485>
je     809d7a5 <_IO_stdin_used+0x74a1>
jo     809d793 <_IO_stdin_used+0x748f>
add    %ah,0x75(%edx,%eiz,2)
jae    809d793 <_IO_stdin_used+0x748f>
insl   (%dx),%es:(%edi)
gs
jae    809d7ab <_IO_stdin_used+0x74a7>
popa
addr16
gs
pop    %edi
jne    809d7ac <_IO_stdin_used+0x74a8>
jb     809d7a5 <_IO_stdin_used+0x74a1>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    809d7a6 <_IO_stdin_used+0x74a2>
insl   (%dx),%es:(%edi)
gs
jae    809d7be <_IO_stdin_used+0x74ba>
popa
addr16
gs
pop    %edi
jb     809d7b6 <_IO_stdin_used+0x74b2>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    809d7b7 <_IO_stdin_used+0x74b3>
insl   (%dx),%es:(%edi)
gs
jae    809d7cf <_IO_stdin_used+0x74cb>
popa
addr16
gs
pop    %edi
arpl   %bp,0x70(%edi)
jns    809d765 <_IO_stdin_used+0x7461>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d7e1 <_IO_stdin_used+0x74dd>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     809d7d5 <_IO_stdin_used+0x74d1>
gs
jb     809d7eb <_IO_stdin_used+0x74e7>
outsl  %ds:(%esi),(%dx)
jb     809d7db <_IO_stdin_used+0x74d7>
jo     809d7f0 <_IO_stdin_used+0x74ec>
imul   $0x62640066,0x74(%esi),%ebp
jne    809d7fa <_IO_stdin_used+0x74f6>
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d7ff <_IO_stdin_used+0x74fb>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     809d7f3 <_IO_stdin_used+0x74ef>
gs
jb     809d809 <_IO_stdin_used+0x7505>
outsl  %ds:(%esi),(%dx)
jb     809d79a <_IO_stdin_used+0x7496>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d816 <_IO_stdin_used+0x7512>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     809d80a <_IO_stdin_used+0x7506>
jae    809d816 <_IO_stdin_used+0x7512>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809d818 <_IO_stdin_used+0x7514>
insl   (%dx),%es:(%edi)
gs
jae    809d830 <_IO_stdin_used+0x752c>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     809d824 <_IO_stdin_used+0x7520>
insl   (%dx),%es:(%edi)
gs
je     809d831 <_IO_stdin_used+0x752d>
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
jb     809d833 <_IO_stdin_used+0x752f>
je     809d845 <_IO_stdin_used+0x7541>
jb     809d840 <_IO_stdin_used+0x753c>
add    %ah,0x75(%edx,%eiz,2)
jae    809d837 <_IO_stdin_used+0x7533>
insl   (%dx),%es:(%edi)
gs
jae    809d84f <_IO_stdin_used+0x754b>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     809d843 <_IO_stdin_used+0x753f>
insl   (%dx),%es:(%edi)
gs
je     809d850 <_IO_stdin_used+0x754c>
outsl  %ds:(%esi),(%dx)
fs
pop    %edi
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    809d854 <_IO_stdin_used+0x7550>
insl   (%dx),%es:(%edi)
gs
jae    809d86c <_IO_stdin_used+0x7568>
popa
addr16
gs
pop    %edi
outsb  %ds:(%esi),(%dx)
gs
ja     809d801 <_IO_stdin_used+0x74fd>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d87d <_IO_stdin_used+0x7579>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d871 <_IO_stdin_used+0x756d>
jb     809d879 <_IO_stdin_used+0x7575>
jo     809d882 <_IO_stdin_used+0x757e>
jns    809d877 <_IO_stdin_used+0x7573>
jae    809d87f <_IO_stdin_used+0x757b>
jb     809d885 <_IO_stdin_used+0x7581>
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    809d883 <_IO_stdin_used+0x757f>
insl   (%dx),%es:(%edi)
gs
jae    809d89b <_IO_stdin_used+0x7597>
popa
addr16
gs
pop    %edi
jae    809d893 <_IO_stdin_used+0x758f>
je     809d88f <_IO_stdin_used+0x758b>
jb     809d897 <_IO_stdin_used+0x7593>
jo     809d8a0 <_IO_stdin_used+0x759c>
jns    809d895 <_IO_stdin_used+0x7591>
jae    809d89d <_IO_stdin_used+0x7599>
jb     809d8a3 <_IO_stdin_used+0x759f>
popa
insb   (%dx),%es:(%edi)
add    %ah,0x75(%edx,%eiz,2)
jae    809d8a1 <_IO_stdin_used+0x759d>
insl   (%dx),%es:(%edi)
gs
jae    809d8b9 <_IO_stdin_used+0x75b5>
popa
addr16
gs
pop    %edi
addr16
gs
je     809d8ad <_IO_stdin_used+0x75a9>
jae    809d8b5 <_IO_stdin_used+0x75b1>
jb     809d8bb <_IO_stdin_used+0x75b7>
popa
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esi,%fs:0x73(%ebp)
pop    %edi
insl   (%dx),%es:(%edi)
gs
jae    809d8dd <_IO_stdin_used+0x75d9>
popa
addr16
gs
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
popa
jb     809d8e1 <_IO_stdin_used+0x75dd>
jae    809d8db <_IO_stdin_used+0x75d7>
jbe    809d8df <_IO_stdin_used+0x75db>
insb   (%dx),%es:(%edi)
imul   $0x75626400,0x74(%ebx),%esi
jae    809d8e7 <_IO_stdin_used+0x75e3>
insl   (%dx),%es:(%edi)
gs
jae    809d8ff <_IO_stdin_used+0x75fb>
popa
addr16
gs
pop    %edi
jae    809d8f7 <_IO_stdin_used+0x75f3>
je     809d8f3 <_IO_stdin_used+0x75ef>
jae    809d8fb <_IO_stdin_used+0x75f7>
jb     809d901 <_IO_stdin_used+0x75fd>
popa
insb   (%dx),%es:(%edi)
add    %al,(%eax)
and    %ah,(%eax)
cmp    $0x6e,%al
outsl  %ds:(%esi),(%dx)
fs and %ch,%fs:%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
gs
cmp    $0x22732522,%eax
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %ch,(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809d8dc <_IO_stdin_used+0x75d8>
jb     809d923 <_IO_stdin_used+0x761f>
jo     809d932 <_IO_stdin_used+0x762e>
gs
jae    809d928 <_IO_stdin_used+0x7624>
outsb  %ds:(%esi),(%dx)
je     809d8e6 <_IO_stdin_used+0x75e2>
jo     809d929 <_IO_stdin_used+0x7625>
je     809d932 <_IO_stdin_used+0x762e>
cmp    (%eax),%ah
outsl  %ds:(%esi),(%dx)
jne    809d943 <_IO_stdin_used+0x763f>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     809d952 <_IO_stdin_used+0x764e>
and    %ebp,(%ecx)
add    %al,0x20(%ecx)
push   $0x6c646e61
gs
jb     809d906 <_IO_stdin_used+0x7602>
imul   $0x65726c61,0x20(%ebx),%esi
popa
fs
jns    809d911 <_IO_stdin_used+0x760d>
jb     809d958 <_IO_stdin_used+0x7654>
imul   $0x64657265,0x74(%bp,%di),%esi
and    %ah,0x6f(%esi)
jb     809d920 <_IO_stdin_used+0x761c>
and    $0x41000073,%eax
je     809d97b <_IO_stdin_used+0x7677>
gs
insl   (%dx),%es:(%edi)
jo     809d97f <_IO_stdin_used+0x767b>
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
jne    809d981 <_IO_stdin_used+0x767d>
jb     809d97a <_IO_stdin_used+0x7676>
imul   $0x70207265,0x74(%bp,%di),%esi
popa
je     809d988 <_IO_stdin_used+0x7684>
and    %ch,(%eax)
jo     809d985 <_IO_stdin_used+0x7681>
je     809d98e <_IO_stdin_used+0x768a>
pop    %ebx
xor    %bl,0x20(%ebp)
cmp    $0x20732520,%eax
jo     809d992 <_IO_stdin_used+0x768e>
je     809d99b <_IO_stdin_used+0x7697>
pop    %ebx
xor    %ebx,0x20(%ebp)
cmp    $0x29732520,%eax
and    %dh,0x68(%edi)
imul   $0x6e736920,0x68(%ebx),%esp
daa
je     809d969 <_IO_stdin_used+0x7665>
jb     809d9b0 <_IO_stdin_used+0x76ac>
imul   $0x64657265,0x74(%bp,%di),%esi
or     (%eax),%al
add    %al,(%eax)
add    %al,0x64(%ecx,%ebp,2)
and    %ch,0x6f(%esi)
je     809d980 <_IO_stdin_used+0x767c>
jb     809d9c7 <_IO_stdin_used+0x76c3>
arpl   %sp,0x69(%ebp)
jbe    809d9cc <_IO_stdin_used+0x76c8>
and    %ah,0x20(%ecx)
jb     809d9d1 <_IO_stdin_used+0x76cd>
jo     809d9da <_IO_stdin_used+0x76d6>
jns    809d99e <_IO_stdin_used+0x769a>
and    %dl,0x6f(%eax)
jae    809d9e8 <_IO_stdin_used+0x76e4>
imul   $0x61632065,0x6c(%edx),%esp
jne    809d9f1 <_IO_stdin_used+0x76ed>
gs
jae    809d9a1 <_IO_stdin_used+0x769d>
imul   $0x6564756c,0x63(%esi),%ebp
cmp    (%eax),%ah
je     809d9f4 <_IO_stdin_used+0x76f0>
and    %dh,%gs:0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
je     809d9f9 <_IO_stdin_used+0x76f5>
and    %ah,0x70(%ecx)
jo     809da05 <_IO_stdin_used+0x7701>
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ah,0x64(%ecx,%ebp,2)
and    %ch,0x6f(%esi)
je     809d9c9 <_IO_stdin_used+0x76c5>
jae    809da10 <_IO_stdin_used+0x770c>
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x20(%ecx)
jb     809da17 <_IO_stdin_used+0x7713>
jo     809da20 <_IO_stdin_used+0x771c>
jns    809d9e2 <_IO_stdin_used+0x76de>
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebp)
jae    809da32 <_IO_stdin_used+0x772e>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    809d9e7 <_IO_stdin_used+0x76e3>
jae    809da2e <_IO_stdin_used+0x772a>
arpl   %si,0x72(%ebp)
imul   $0x696c6f70,0x20(%ecx,%edi,2),%esi
arpl   %di,0x20(%ecx)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x20,0x64(%ebp),%esp
je     809da49 <_IO_stdin_used+0x7745>
and    %dh,%gs:0x65(%edx)
jo     809da53 <_IO_stdin_used+0x774f>
jns    809da15 <_IO_stdin_used+0x7711>
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x65(%edx)
jo     809da5e <_IO_stdin_used+0x775a>
jns    809da14 <_IO_stdin_used+0x7710>
je     809da5f <_IO_stdin_used+0x775b>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    809da6f <_IO_stdin_used+0x776b>
and    %ah,0x78(%ebp)
jo     809da69 <_IO_stdin_used+0x7765>
jb     809da67 <_IO_stdin_used+0x7763>
fs
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
jb     809da28 <_IO_stdin_used+0x7724>
je     809da72 <_IO_stdin_used+0x776e>
and    %ch,%gs:0x65(%esi)
je     809da87 <_IO_stdin_used+0x7783>
outsl  %ds:(%esi),(%dx)
jb     809da7e <_IO_stdin_used+0x777a>
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %dh,0x61(%edi)
jae    809da43 <_IO_stdin_used+0x773f>
bound  %esi,0x6f(%edx)
imul   $0x2e,0x6e(%ebp),%esp
add    %al,(%eax)
cs
cs
das
cs
cs
das
bound  %esi,%fs:0x73(%ebp)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x646e6570,%eax
imul   $0x6c61632d,0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
arpl   %ax,%cs:(%eax)
jo     809dab2 <_IO_stdin_used+0x77ae>
outsb  %ds:(%esi),(%dx)
imul   $0x203d2120,%fs:0x67(%esi),%ebp
dec    %esi
push   %ebp
dec    %esp
dec    %esp
add    %dh,0x65(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x6f633e2d,%fs:0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
jo     809dad5 <_IO_stdin_used+0x77d1>
gs
je     809dad1 <_IO_stdin_used+0x77cd>
add    %dh,%fs:0x65(%eax)
outsb  %ds:(%esi),(%dx)
imul   $0x65723e2d,%fs:0x67(%esi),%ebp
jo     809dae7 <_IO_stdin_used+0x77e3>
jns    809da9d <_IO_stdin_used+0x7799>
and    %edi,0x4c554e20
dec    %esp
add    %dh,0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
je     809dae9 <_IO_stdin_used+0x77e5>
jo     809daac <_IO_stdin_used+0x77a8>
and    %edi,0x4c554e20
dec    %esp
add    %ah,0x75(%edx,%eiz,2)
jae    809db04 <_IO_stdin_used+0x7800>
jo     809db0c <_IO_stdin_used+0x7808>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     809db15 <_IO_stdin_used+0x7811>
fs
popa
je     809db1b <_IO_stdin_used+0x7817>
add    %ah,0x75(%edx,%eiz,2)
jae    809db1f <_IO_stdin_used+0x781b>
jo     809db27 <_IO_stdin_used+0x7823>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jae    809db34 <_IO_stdin_used+0x7830>
je     809db30 <_IO_stdin_used+0x782c>
fs
popa
je     809db36 <_IO_stdin_used+0x7832>
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809db44 <_IO_stdin_used+0x7840>
jo     809db4c <_IO_stdin_used+0x7848>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
data16
jb     809db5a <_IO_stdin_used+0x7856>
gs
pop    %edi
fs
popa
je     809db5c <_IO_stdin_used+0x7858>
pop    %edi
jae    809db6a <_IO_stdin_used+0x7866>
outsl  %ds:(%esi),(%dx)
je     809db01 <_IO_stdin_used+0x77fd>
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809db84 <_IO_stdin_used+0x7880>
jo     809db8c <_IO_stdin_used+0x7888>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
gs
pop    %edi
fs
popa
je     809dba0 <_IO_stdin_used+0x789c>
pop    %edi
jae    809dbae <_IO_stdin_used+0x78aa>
outsl  %ds:(%esi),(%dx)
je     809db45 <_IO_stdin_used+0x7841>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jo     809dbb1 <_IO_stdin_used+0x78ad>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x64,(%eax),%eax
bound  %esi,0x73(%ebp)
pop    %edi
jo     809dbc9 <_IO_stdin_used+0x78c5>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jae    809dbe5 <_IO_stdin_used+0x78e1>
gs
popa
insb   (%dx),%es:(%edi)
pop    %edi
jb     809dbdc <_IO_stdin_used+0x78d8>
jo     809dbe5 <_IO_stdin_used+0x78e1>
jns    809db7b <_IO_stdin_used+0x7877>
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809dbe4 <_IO_stdin_used+0x78e0>
jo     809dbec <_IO_stdin_used+0x78e8>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     809dbf5 <_IO_stdin_used+0x78f1>
arpl   %bp,0x6d(%edi)
jo     809dc07 <_IO_stdin_used+0x7903>
gs
je     809dc03 <_IO_stdin_used+0x78ff>
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    809dc04 <_IO_stdin_used+0x7900>
jo     809dc0c <_IO_stdin_used+0x7908>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
arpl   %sp,0x6e(%ecx)
arpl   %sp,0x6c(%ebp)
add    %ah,0x75(%edx,%eiz,2)
jae    809dc1d <_IO_stdin_used+0x7919>
jo     809dc25 <_IO_stdin_used+0x7921>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jae    809dc32 <_IO_stdin_used+0x792e>
je     809dc2e <_IO_stdin_used+0x792a>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809dc3c <_IO_stdin_used+0x7938>
data16
jns    809dbd6 <_IO_stdin_used+0x78d2>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jo     809dc42 <_IO_stdin_used+0x793e>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jne    809dc58 <_IO_stdin_used+0x7954>
jb     809dc51 <_IO_stdin_used+0x794d>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    809dc52 <_IO_stdin_used+0x794e>
jo     809dc5a <_IO_stdin_used+0x7956>
outsb  %ds:(%esi),(%dx)
imul   $0x6c61635f,%fs:0x67(%esi),%ebp
insb   (%dx),%es:(%edi)
pop    %edi
jb     809dc67 <_IO_stdin_used+0x7963>
data16
add    %ch,(%edi,%eiz,2)
jne    809dc71 <_IO_stdin_used+0x796d>
fs
cmp    $0x2f2e2e00,%eax
cs
cs
das
bound  %esi,%fs:0x73(%ebp)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x76726573,%eax
gs
jb     809dc50 <_IO_stdin_used+0x794c>
arpl   %ax,(%eax)
inc    %ecx
fs
fs
jb     809dc8e <_IO_stdin_used+0x798a>
jae    809dc9e <_IO_stdin_used+0x799a>
and    %ah,(%edi)
and    $0x61202773,%eax
insb   (%dx),%es:(%edi)
jb     809dc9a <_IO_stdin_used+0x7996>
popa
fs
jns    809dc59 <_IO_stdin_used+0x7955>
jne    809dcae <_IO_stdin_used+0x79aa>
gs add %dl,%fs:%gs:0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x64(%ecx)
fs
jb     809dcb0 <_IO_stdin_used+0x79ac>
jae    809dcc0 <_IO_stdin_used+0x79bc>
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:(%edi)
and    $0x45002773,%eax
insl   (%dx),%es:(%edi)
jo     809dcd0 <_IO_stdin_used+0x79cc>
jns    809dc7e <_IO_stdin_used+0x797a>
popa
fs
fs
jb     809dcc8 <_IO_stdin_used+0x79c4>
jae    809dcd8 <_IO_stdin_used+0x79d4>
and    %ah,(%edi)
and    $0x73002773,%eax
gs
jb     809dce5 <_IO_stdin_used+0x79e1>
gs
jb     809dc92 <_IO_stdin_used+0x798e>
and    %edi,0x4c554e20
dec    %esp
add    %ch,0x6c(%edi)
fs
pop    %edi
jb     809dce5 <_IO_stdin_used+0x79e1>
data16
arpl   %bp,0x75(%edi)
outsb  %ds:(%esi),(%dx)
je     809dca7 <_IO_stdin_used+0x79a3>
and    %dh,%ds:(%eax)
add    %dl,0x65(%edx)
sub    $0x72746e65,%eax
popa
outsb  %ds:(%esi),(%dx)
je     809dcb6 <_IO_stdin_used+0x79b2>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %dh,0x20(%edi,%ebp,2)
and    $0xa73,%eax
add    %ah,0x75(%edx,%eiz,2)
jae    809dd24 <_IO_stdin_used+0x7a20>
jae    809dd2c <_IO_stdin_used+0x7a28>
jb     809dd3f <_IO_stdin_used+0x7a3b>
gs
jb     809dd2b <_IO_stdin_used+0x7a27>
addr16
gs
je     809dd2f <_IO_stdin_used+0x7a2b>
fs
popa
je     809dd35 <_IO_stdin_used+0x7a31>
add    %ah,0x75(%edx,%eiz,2)
jae    809dd39 <_IO_stdin_used+0x7a35>
jae    809dd41 <_IO_stdin_used+0x7a3d>
jb     809dd54 <_IO_stdin_used+0x7a50>
gs
jb     809dd40 <_IO_stdin_used+0x7a3c>
jae    809dd48 <_IO_stdin_used+0x7a44>
je     809dd44 <_IO_stdin_used+0x7a40>
fs
popa
je     809dd4a <_IO_stdin_used+0x7a46>
add    %ah,0x75(%edx,%eiz,2)
jae    809dd4e <_IO_stdin_used+0x7a4a>
jae    809dd56 <_IO_stdin_used+0x7a52>
jb     809dd69 <_IO_stdin_used+0x7a65>
gs
jb     809dd55 <_IO_stdin_used+0x7a51>
data16
jb     809dd5e <_IO_stdin_used+0x7a5a>
gs
pop    %edi
fs
popa
je     809dd60 <_IO_stdin_used+0x7a5c>
pop    %edi
jae    809dd6e <_IO_stdin_used+0x7a6a>
outsl  %ds:(%esi),(%dx)
je     809dd05 <_IO_stdin_used+0x7a01>
add    %al,(%eax)
add    %ah,0x75(%edx,%eiz,2)
jae    809dd84 <_IO_stdin_used+0x7a80>
jae    809dd8c <_IO_stdin_used+0x7a88>
jb     809dd9f <_IO_stdin_used+0x7a9b>
gs
jb     809dd8b <_IO_stdin_used+0x7a87>
jae    809dd93 <_IO_stdin_used+0x7a8f>
je     809dd8f <_IO_stdin_used+0x7a8b>
popa
jne    809dda7 <_IO_stdin_used+0x7aa3>
push   $0x63656d5f
push   $0x73696e61
insl   (%dx),%es:(%edi)
jae    809dd40 <_IO_stdin_used+0x7a3c>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    809ddac <_IO_stdin_used+0x7aa8>
jb     809ddbf <_IO_stdin_used+0x7abb>
gs
jb     809ddab <_IO_stdin_used+0x7aa7>
jae    809ddb3 <_IO_stdin_used+0x7aaf>
je     809ddaf <_IO_stdin_used+0x7aab>
je     809ddbb <_IO_stdin_used+0x7ab7>
insl   (%dx),%es:(%edi)
outsl  %gs:(%esi),(%dx)
jne    809ddcb <_IO_stdin_used+0x7ac7>
pop    %edi
data16
jne    809ddc9 <_IO_stdin_used+0x7ac5>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    809dd62 <_IO_stdin_used+0x7a5e>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    809ddec <_IO_stdin_used+0x7ae8>
jb     809ddff <_IO_stdin_used+0x7afb>
gs
jb     809ddeb <_IO_stdin_used+0x7ae7>
jae    809ddf3 <_IO_stdin_used+0x7aef>
je     809ddef <_IO_stdin_used+0x7aeb>
ja     809ddf3 <_IO_stdin_used+0x7aef>
je     809ddf7 <_IO_stdin_used+0x7af3>
push   $0x6e75665f
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    809dda0 <_IO_stdin_used+0x7a9c>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    809de0c <_IO_stdin_used+0x7b08>
jb     809de1f <_IO_stdin_used+0x7b1b>
gs
jb     809de0b <_IO_stdin_used+0x7b07>
jae    809de13 <_IO_stdin_used+0x7b0f>
je     809de0f <_IO_stdin_used+0x7b0b>
outsb  %ds:(%esi),(%dx)
gs
ja     809de13 <_IO_stdin_used+0x7b0f>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
pop    %edi
data16
jne    809de30 <_IO_stdin_used+0x7b2c>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %ah,0x75(%edx,%eiz,2)
jae    809de2c <_IO_stdin_used+0x7b28>
jae    809de34 <_IO_stdin_used+0x7b30>
jb     809de47 <_IO_stdin_used+0x7b43>
gs
jb     809de33 <_IO_stdin_used+0x7b2f>
addr16
gs
je     809de37 <_IO_stdin_used+0x7b33>
imul   $0x5f737562,0x64(%eax,%eax,1),%esp
jae    809de47 <_IO_stdin_used+0x7b43>
jb     809de5a <_IO_stdin_used+0x7b56>
gs
jb     809de46 <_IO_stdin_used+0x7b42>
addr16
gs
je     809de4a <_IO_stdin_used+0x7b46>
popa
fs
fs
jb     809de55 <_IO_stdin_used+0x7b51>
jae    809de65 <_IO_stdin_used+0x7b61>
add    %ah,0x75(%edx,%eiz,2)
jae    809de57 <_IO_stdin_used+0x7b53>
jae    809de5f <_IO_stdin_used+0x7b5b>
jb     809de72 <_IO_stdin_used+0x7b6e>
gs
jb     809de5e <_IO_stdin_used+0x7b5a>
addr16
gs
je     809de62 <_IO_stdin_used+0x7b5e>
imul   $0x6e6e6f63,0x5f(%ebx),%esi
arpl   %si,%gs:0x64(%ebp,%eiz,2)
add    %ah,0x75(%edx,%eiz,2)
jae    809de74 <_IO_stdin_used+0x7b70>
jae    809de7c <_IO_stdin_used+0x7b78>
jb     809de8f <_IO_stdin_used+0x7b8b>
gs
jb     809de7b <_IO_stdin_used+0x7b77>
imul   $0x656e6e6f,%fs:0x63(%ebx),%esi
arpl   %si,0x64(%eax,%eax,1)
bound  %esi,0x73(%ebp)
pop    %edi
jae    809de93 <_IO_stdin_used+0x7b8f>
jb     809dea6 <_IO_stdin_used+0x7ba2>
gs
jb     809de92 <_IO_stdin_used+0x7b8e>
jne    809dea3 <_IO_stdin_used+0x7b9f>
jb     809de9c <_IO_stdin_used+0x7b98>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    809de9d <_IO_stdin_used+0x7b99>
jae    809dea5 <_IO_stdin_used+0x7ba1>
jb     809deb8 <_IO_stdin_used+0x7bb4>
gs
jb     809dea4 <_IO_stdin_used+0x7ba0>
jb     809deac <_IO_stdin_used+0x7ba8>
data16
add    %ah,0x75(%edx,%eiz,2)
jae    809dead <_IO_stdin_used+0x7ba9>
jae    809deb5 <_IO_stdin_used+0x7bb1>
jb     809dec8 <_IO_stdin_used+0x7bc4>
gs
jb     809deb4 <_IO_stdin_used+0x7bb0>
insb   (%dx),%es:(%edi)
imul   $0x6c006e65,0x74(%ebx),%esi
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
push   $0x74736f
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
je     809ded1 <_IO_stdin_used+0x7bcd>
jo     809deaa <_IO_stdin_used+0x7ba6>
push   $0x3d74736f
add    %ch,(%eax,%esi,2)
outsl  %ds:(%esi),(%dx)
jb     809deef <_IO_stdin_used+0x7beb>
cmp    $0x61662c00,%eax
insl   (%dx),%es:(%edi)
imul   $0x6f6e2c00,0x3d(%ecx,%edi,2),%ebp
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x66(%ebp)
imul   $0x6e6f6e00,0x3d(%ebp,%eiz,2),%ebp
arpl   %sp,0x2d(%ebp)
je     809defd <_IO_stdin_used+0x7bf9>
jo     809de9c <_IO_stdin_used+0x7b98>
jo     809df0d <_IO_stdin_used+0x7c09>
jb     809df14 <_IO_stdin_used+0x7c10>
add    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x6e6e6163,0x0(%ecx,%edi,2),%ebp
outsl  %ds:(%esi),(%dx)
je     809decf <_IO_stdin_used+0x7bcb>
jae    809df21 <_IO_stdin_used+0x7c1d>
arpl   %bp,%gs:0x66(%ecx)
jns    809ded7 <_IO_stdin_used+0x7bd3>
je     809df30 <_IO_stdin_used+0x7c2c>
outsl  %ds:(%esi),(%dx)
and    %ch,0x66(%edi)
and    %ah,(%edx)
jo     809df22 <_IO_stdin_used+0x7c1e>
je     809df2b <_IO_stdin_used+0x7c27>
and    (%eax),%ah
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%edx)
je     809df39 <_IO_stdin_used+0x7c35>
jo     809df32 <_IO_stdin_used+0x7c2e>
imul   $0x646e6120,0x22(%edx),%esi
and    %ah,(%edx)
popa
bound  %esi,0x74(%ebx)
jb     809df3e <_IO_stdin_used+0x7c3a>
arpl   %si,0x20(%edx,%eiz,1)
popa
je     809df04 <_IO_stdin_used+0x7c00>
je     809df4e <_IO_stdin_used+0x7c4a>
and    %dh,%gs:0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6d(%ecx,%ebp,2)
add    %dh,%gs:0x6e(%ebp)
imul   $0x74736261,0x3a(%eax),%edi
jb     809df5e <_IO_stdin_used+0x7c5a>
arpl   %si,0x0(%ebp,%edi,1)
jne    809df71 <_IO_stdin_used+0x7c6d>
imul   $0x68746170,0x3a(%eax),%edi
cmp    $0x696e7500,%eax
js     809df11 <_IO_stdin_used+0x7c0d>
je     809df80 <_IO_stdin_used+0x7c7c>
jo     809df79 <_IO_stdin_used+0x7c75>
imul   $0x68746170,0x0(%edx),%esi
and    %ch,0x72(%edi)
and    %dh,0x70(%ebp,%ebp,2)
imul   $0x6120726f,%fs:0x20(%edx),%esi
bound  %esi,0x74(%ebx)
jb     809df91 <_IO_stdin_used+0x7c8d>
arpl   %si,0x64(%eax,%eax,1)
bound  %esi,0x73(%ebp)
sub    $0x73797300,%eax
je     809dfa3 <_IO_stdin_used+0x7c9f>
insl   (%dx),%es:(%edi)
add    %dh,%fs:0x79(%ebx)
jae    809dfb9 <_IO_stdin_used+0x7cb5>
gs
insl   (%dx),%es:(%edi)
cmp    %fs:(%eax),%al
cs
cs
das
cs
cs
das
bound  %esi,%fs:0x73(%ebp)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x6e676973,%eax
popa
je     809dfd6 <_IO_stdin_used+0x7cd2>
jb     809dfc8 <_IO_stdin_used+0x7cc4>
arpl   %ax,%cs:(%eax)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    809dfd8 <_IO_stdin_used+0x7cd4>
outsb  %ds:(%si),(%dx)
popa
je     809dfe9 <_IO_stdin_used+0x7ce5>
jb     809dfdb <_IO_stdin_used+0x7cd7>
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
arpl   %si,0x72(%ebp)
jb     809dfea <_IO_stdin_used+0x7ce6>
outsb  %ds:(%esi),(%dx)
je     809dfe7 <_IO_stdin_used+0x7ce3>
je     809e003 <_IO_stdin_used+0x7cff>
jo     809dff1 <_IO_stdin_used+0x7ced>
and    %ch,(%eax)
imul   $0x3d3d2029,0x72(%ebp,%eiz,2),%esi
and    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
inc    %ecx
push   %edx
push   %edx
inc    %ecx
pop    %ecx
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809e012 <_IO_stdin_used+0x7d0e>
cs
data16
jb     809e014 <_IO_stdin_used+0x7d10>
gs
fs
gs
jae    809e01f <_IO_stdin_used+0x7d1b>
je     809e025 <_IO_stdin_used+0x7d21>
jo     809dfe6 <_IO_stdin_used+0x7ce2>
inc    %esp
inc    %edx
jne    809e02f <_IO_stdin_used+0x7d2b>
cs
inc    %ebp
jb     809e032 <_IO_stdin_used+0x7d2e>
outsl  %ds:(%esi),(%dx)
jb     809dff1 <_IO_stdin_used+0x7ced>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    809e028 <_IO_stdin_used+0x7d24>
insb   (%dx),%es:(%edi)
imul   $0x74616e67,0x69(%ebx,%edx,2),%esp
jne    809e044 <_IO_stdin_used+0x7d40>
add    %al,%gs:0x78(%ebp)
popa
arpl   %si,0x79(%esp,%ebp,2)
and    %ch,0x6e(%edi)
and    %ah,%gs:0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     809e051 <_IO_stdin_used+0x7d4d>
gs
je     809e04d <_IO_stdin_used+0x7d49>
and    %dh,0x70(%ecx,%edi,2)
and    %dh,%gs:0x65(%edx)
jno    809e067 <_IO_stdin_used+0x7d63>
imul   $0x6e692064,0x65(%edx),%esi
and    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809e076 <_IO_stdin_used+0x7d72>
jb     809e068 <_IO_stdin_used+0x7d64>
add    %ah,0x75(%edx,%eiz,2)
jae    809e068 <_IO_stdin_used+0x7d64>
je     809e084 <_IO_stdin_used+0x7d80>
jo     809e072 <_IO_stdin_used+0x7d6e>
pop    %edi
imul   $0x696c6176,0x5f(%ebx),%esi
and    %ch,%fs:(%eax)
je     809e093 <_IO_stdin_used+0x7d8f>
jo     809e081 <_IO_stdin_used+0x7d7d>
arpl   %bp,0x64(%edi)
sub    %esp,%gs:(%eax)
jl     809e0a0 <_IO_stdin_used+0x7d9c>
and    %dh,0x70(%ecx,%edi,2)
arpl   %bp,%gs:0x64(%edi)
and    %bh,%gs:0x4244203d
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
dec    %ecx
dec    %esi
push   %esi
inc    %ecx
dec    %esp
dec    %ecx
inc    %esp
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
je     809e0c4 <_IO_stdin_used+0x7dc0>
jo     809e0b2 <_IO_stdin_used+0x7dae>
pop    %edi
imul   $0x746e6f63,0x5f(%ebx),%esi
popa
imul   $0x64282072,0x65(%esi),%ebp
bound  %esi,0x73(%ebp)
pop    %edi
jae    809e0cc <_IO_stdin_used+0x7dc8>
outsb  %ds:(%si),(%dx)
popa
je     809e0dd <_IO_stdin_used+0x7dd9>
jb     809e0cf <_IO_stdin_used+0x7dcb>
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
arpl   %si,0x72(%ebp)
jb     809e0de <_IO_stdin_used+0x7dda>
outsb  %ds:(%esi),(%dx)
je     809e0db <_IO_stdin_used+0x7dd7>
je     809e0f7 <_IO_stdin_used+0x7df3>
jo     809e0e5 <_IO_stdin_used+0x7de1>
and    %ch,(%eax)
imul   $0x2929,0x72(%ebp,%eiz,2),%esi
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
je     809e120 <_IO_stdin_used+0x7e1c>
jo     809e10e <_IO_stdin_used+0x7e0a>
pop    %edi
imul   $0x65786966,0x5f(%ebx),%esi
add    %ah,%fs:0x75(%edx,%eiz,2)
jae    809e117 <_IO_stdin_used+0x7e13>
je     809e133 <_IO_stdin_used+0x7e2f>
jo     809e121 <_IO_stdin_used+0x7e1d>
pop    %edi
imul   $0x69736162,0x5f(%ebx),%esi
arpl   %ax,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
je     809e146 <_IO_stdin_used+0x7e42>
jo     809e134 <_IO_stdin_used+0x7e30>
pop    %edi
imul   $0x746e6f63,0x5f(%ebx),%esi
popa
imul   $0x62640072,0x65(%esi),%ebp
jne    809e154 <_IO_stdin_used+0x7e50>
pop    %edi
jae    809e14d <_IO_stdin_used+0x7e49>
outsb  %ds:(%si),(%dx)
popa
je     809e15e <_IO_stdin_used+0x7e5a>
jb     809e150 <_IO_stdin_used+0x7e4c>
pop    %edi
imul   $0x6365725f,0x72(%ebp,%eiz,2),%esi
jne    809e168 <_IO_stdin_used+0x7e64>
jae    809e15d <_IO_stdin_used+0x7e59>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    809e170 <_IO_stdin_used+0x7e6c>
outsb  %ds:(%si),(%dx)
popa
je     809e181 <_IO_stdin_used+0x7e7d>
jb     809e173 <_IO_stdin_used+0x7e6f>
pop    %edi
imul   $0x7465675f,0x72(%ebp,%eiz,2),%esi
pop    %edi
gs
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809e17f <_IO_stdin_used+0x7e7b>
je     809e19b <_IO_stdin_used+0x7e97>
jo     809e189 <_IO_stdin_used+0x7e85>
add    %dh,0x63(%ebx)
outsl  %ds:(%esi),(%dx)
jo     809e18f <_IO_stdin_used+0x7e8b>
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x64(%ecx)
fs
jb     809e19e <_IO_stdin_used+0x7e9a>
jae    809e1ae <_IO_stdin_used+0x7eaa>
and    %dh,0x70(%ecx,%edi,2)
and    %ch,%gs:(%eax)
gs
js     809e1a6 <_IO_stdin_used+0x7ea2>
insl   (%dx),%es:(%edi)
jo     809e1b4 <_IO_stdin_used+0x7eb0>
gs
jae    809e16b <_IO_stdin_used+0x7e67>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
imul   $0x73657079,0x74(%eax,%eiz,1),%esp
and    %ah,0x72(%ecx)
and    %ah,%gs:(%edx)
je     809e1c4 <_IO_stdin_used+0x7ec0>
jo     809e185 <_IO_stdin_used+0x7e81>
and    %ah,0x6e(%ecx)
and    %ch,%fs:0x6e(%edi)
and    %dl,0x4e(%ebp)
dec    %ecx
pop    %eax
and    %ah,(%edx)
jne    809e1e1 <_IO_stdin_used+0x7edd>
imul   $0x72540029,0x22(%eax),%edi
imul   $0x206f7420,0x64(%ebp),%esp
push   $0x6c646e61
and    %ah,%gs:0x6e(%ecx)
and    %ch,0x6e(%ecx)
jbe    809e1f0 <_IO_stdin_used+0x7eec>
insb   (%dx),%es:(%edi)
imul   $0x77206465,0x74(%ecx,%eiz,2),%esp
popa
je     809e1fe <_IO_stdin_used+0x7efa>
push   $0x6874203b
imul   $0x63746177,0x20(%ebx),%esi
push   $0x6f687320
jne    809e21a <_IO_stdin_used+0x7f16>
and    %ch,%fs:0x61(%eax)
jbe    809e219 <_IO_stdin_used+0x7f15>
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809e225 <_IO_stdin_used+0x7f21>
or     %fs:(%eax),%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
je     809e22e <_IO_stdin_used+0x7f2a>
jo     809e207 <_IO_stdin_used+0x7f03>
add    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x66(%ebp)
imul   $0x2e2f2e2e,0x0(%ebp,%eiz,2),%ebp
cs
das
bound  %esi,%fs:0x73(%ebp)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x63746177,%eax
push   $0x7700632e
popa
je     809e257 <_IO_stdin_used+0x7f53>
push   $0x203d2120
dec    %esi
push   %ebp
dec    %esp
dec    %esp
add    %al,(%eax)
add    %dh,0x69(%eax,%ebp,2)
jae    809e225 <_IO_stdin_used+0x7f21>
ja     809e268 <_IO_stdin_used+0x7f64>
je     809e26c <_IO_stdin_used+0x7f68>
push   $0x6f687320
jne    809e27c <_IO_stdin_used+0x7f78>
and    %ch,%fs:0x61(%eax)
jbe    809e27b <_IO_stdin_used+0x7f77>
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %ch,0x6e(%ecx)
jbe    809e281 <_IO_stdin_used+0x7f7d>
insb   (%dx),%es:(%edi)
imul   $0x57006465,0x74(%ecx,%eiz,2),%esp
popa
je     809e28f <_IO_stdin_used+0x7f8b>
push   $0x20736920
imul   $0x64696c61,0x76(%esi),%ebp
sub    $0x20,%al
imul   $0x6c756f68,0x73(%eax,%eiz,1),%esi
and    %ch,%fs:0x61(%eax)
jbe    809e2ad <_IO_stdin_used+0x7fa9>
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809e2b9 <_IO_stdin_used+0x7fb5>
or     %fs:(%eax),%al
bound  %esi,%fs:0x73(%ebp)
pop    %edi
ja     809e2bf <_IO_stdin_used+0x7fbb>
je     809e2c3 <_IO_stdin_used+0x7fbf>
push   $0x6e61685f
fs
insb   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    809e2cd <_IO_stdin_used+0x7fc9>
ja     809e2d1 <_IO_stdin_used+0x7fcd>
je     809e2d5 <_IO_stdin_used+0x7fd1>
push   $0x7465675f
pop    %edi
outsb  %gs:(%esi),(%dx)
popa
bound  %ebp,0x64(%ebp,%eiz,2)
add    %ah,0x75(%edx,%eiz,2)
jae    809e2e4 <_IO_stdin_used+0x7fe0>
ja     809e2e8 <_IO_stdin_used+0x7fe4>
je     809e2ec <_IO_stdin_used+0x7fe8>
push   $0x7465735f
pop    %edi
fs
popa
je     809e2f4 <_IO_stdin_used+0x7ff0>
add    %ah,0x75(%edx,%eiz,2)
jae    809e2f8 <_IO_stdin_used+0x7ff4>
ja     809e2fc <_IO_stdin_used+0x7ff8>
je     809e300 <_IO_stdin_used+0x7ffc>
push   $0x7465675f
pop    %edi
fs
popa
je     809e308 <_IO_stdin_used+0x8004>
add    %ah,0x75(%edx,%eiz,2)
jae    809e30c <_IO_stdin_used+0x8008>
ja     809e310 <_IO_stdin_used+0x800c>
je     809e314 <_IO_stdin_used+0x8010>
push   $0x7465675f
pop    %edi
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 809e2bd <_IO_stdin_used+0x7fb9>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
ja     809e325 <_IO_stdin_used+0x8021>
je     809e329 <_IO_stdin_used+0x8025>
push   $0x7465675f
pop    %edi
jae    809e33d <_IO_stdin_used+0x8039>
arpl   %bp,0x65(%ebx)
je     809e2d3 <_IO_stdin_used+0x7fcf>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
ja     809e33b <_IO_stdin_used+0x8037>
je     809e33f <_IO_stdin_used+0x803b>
push   $0x7465675f
pop    %edi
jne    809e352 <_IO_stdin_used+0x804e>
imul   $0x64006466,0x5f(%eax),%edi
bound  %esi,0x73(%ebp)
pop    %edi
ja     809e352 <_IO_stdin_used+0x804e>
je     809e356 <_IO_stdin_used+0x8052>
push   $0x7465675f
pop    %edi
data16
add    %al,%fs:0x42(%ebp,%ebp,1)
jne    809e374 <_IO_stdin_used+0x8070>
and    %dh,0x72(%eax,%ebp,2)
gs
popa
fs
jae    809e32a <_IO_stdin_used+0x8026>
ja     809e371 <_IO_stdin_used+0x806d>
jb     809e373 <_IO_stdin_used+0x806f>
and    %ch,0x6e(%ecx)
imul   $0x657a696c,0x61(%ecx,%ebp,2),%esi
and    %ah,%fs:0x66(%ecx)
je     809e384 <_IO_stdin_used+0x8080>
jb     809e341 <_IO_stdin_used+0x803d>
imul   $0x2074,0x73(%edx),%si
jne    809e39c <_IO_stdin_used+0x8098>
imul   $0x65687420,0x67(%esi),%ebp
and    %al,0x42(%ebp,%ebp,1)
jne    809e3a9 <_IO_stdin_used+0x80a5>
and    %ch,0x62(%ecx,%ebp,2)
jb     809e39d <_IO_stdin_used+0x8099>
jb     809e3b7 <_IO_stdin_used+0x80b3>
and    %cl,%cs:0x66(%ecx)
and    %bh,0x6f(%ecx)
jne    809e3b9 <_IO_stdin_used+0x80b5>
and    %ah,0x70(%ecx)
jo     809e3b8 <_IO_stdin_used+0x80b4>
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ah,0x65(%edi,%ebp,2)
jae    809e379 <_IO_stdin_used+0x8075>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809e37d <_IO_stdin_used+0x8079>
imul   $0x796c7463,%fs:0x65(%edx),%esi
and    %ch,0x6e(%ecx)
imul   $0x657a696c,0x61(%ecx,%ebp,2),%esi
and    %dh,0x72(%eax,%ebp,2)
gs
popa
fs
jae    809e399 <_IO_stdin_used+0x8095>
outsl  %ds:(%esi),(%dx)
jb     809e39c <_IO_stdin_used+0x8098>
jne    809e3f1 <_IO_stdin_used+0x80ed>
and    %al,%gs:0x42(%ebp,%ebp,1)
jne    809e3f8 <_IO_stdin_used+0x80f4>
sub    $0x20,%al
imul   $0x70,0x65(%ebp),%esp
and    %ch,0x6e(%ecx)
and    %ch,0x69(%ebp)
outsb  %ds:(%esi),(%dx)
and    %dh,%fs:0x61(%eax,%ebp,2)
je     809e3b9 <_IO_stdin_used+0x80b5>
jae    809e40a <_IO_stdin_used+0x8106>
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x62(%ecx,%ebp,2)
jb     809e404 <_IO_stdin_used+0x8100>
jb     809e41e <_IO_stdin_used+0x811a>
and    %ch,0x72(%edi)
and    %dh,0x6c(%eax)
jne    809e414 <_IO_stdin_used+0x8110>
imul   $0x2079616d,0x20(%esi),%ebp
push   $0x20657661
jne    809e42e <_IO_stdin_used+0x812a>
gs and %al,%fs:%gs:0x42(%ebp,%ebp,1)
jne    809e436 <_IO_stdin_used+0x8132>
and    %ch,0x72(%edi)
and    %ch,0x6e(%ecx)
imul   $0x657a696c,0x61(%ecx,%ebp,2),%esi
and    %dh,%fs:0x72(%eax,%ebp,2)
gs
popa
fs
jae    809e3fb <_IO_stdin_used+0x80f7>
bound  %esp,0x68(%ebp)
imul   $0x756f7920,0x64(%esi),%ebp
jb     809e407 <_IO_stdin_used+0x8103>
bound  %esp,0x63(%ecx)
imul   $0x20,(%esi),%ebp
pop    %ecx
outsl  %ds:(%esi),(%dx)
jne    809e411 <_IO_stdin_used+0x810d>
arpl   %sp,0x6e(%ecx)
and    %ch,0x66(%edi)
je     809e45e <_IO_stdin_used+0x815a>
outsb  %ds:(%esi),(%dx)
and    %ah,0x69(%esi)
js     809e41f <_IO_stdin_used+0x811b>
je     809e469 <_IO_stdin_used+0x8165>
imul   $0x626f7270,0x20(%ebx),%esi
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
and    %ah,0x79(%edx)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x75626420,0x67(%esi),%ebp
jae    809e47b <_IO_stdin_used+0x8177>
imul   $0x68745f74,0x69(%esi),%ebp
jb     809e48a <_IO_stdin_used+0x8186>
popa
fs
jae    809e451 <_IO_stdin_used+0x814d>
sub    %esp,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809e44e <_IO_stdin_used+0x814a>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
addr16 pop %edi
je     809e49f <_IO_stdin_used+0x819b>
jb     809e49e <_IO_stdin_used+0x819a>
popa
fs
jae    809e49c <_IO_stdin_used+0x8198>
imul   $0x20292874,0x69(%esi),%ebp
gs
popa
jb     809e4b4 <_IO_stdin_used+0x81b0>
jns    809e46a <_IO_stdin_used+0x8166>
imul   $0x72756f79,0x20(%esi),%ebp
and    %ch,0x61(%ebp)
imul   $0x656d2029,0x28(%esi),%ebp
je     809e4c5 <_IO_stdin_used+0x81c1>
outsl  %ds:(%esi),(%dx)
fs
sub    $0x20,%al
bound  %esp,0x66(%ebp)
outsl  %ds:(%esi),(%dx)
jb     809e4cc <_IO_stdin_used+0x81c8>
and    %al,0x42(%ebp,%ebp,1)
jne    809e4e0 <_IO_stdin_used+0x81dc>
and    %ch,0x73(%ecx)
and    %dh,0x73(%ebp)
gs fs or %cs:%fs:%gs:(%eax),%al
inc    %esp
inc    %edx
push   %ebp
push   %ebx
pop    %edi
inc    %esi
inc    %ecx
push   %esp
inc    %ecx
dec    %esp
pop    %edi
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
push   %ebx
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    809e4b4 <_IO_stdin_used+0x81b0>
and    $0x203a756c,%eax
add    %cl,0x6f(%esi)
je     809e4be <_IO_stdin_used+0x81ba>
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    809e50a <_IO_stdin_used+0x8206>
push   $0x6d656d20
outsl  %ds:(%esi),(%dx)
jb     809e524 <_IO_stdin_used+0x8220>
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
inc    %esi
inc    %ecx
push   %esp
inc    %ecx
dec    %esp
pop    %edi
push   %edi
inc    %ecx
push   %edx
dec    %esi
dec    %ecx
dec    %esi
inc    %edi
push   %ebx
and    %dh,0x68(%ebx)
outsl  %ds:(%esi),(%dx)
jne    809e531 <_IO_stdin_used+0x822d>
and    %ah,%fs:0x65(%edx)
and    %dh,0x65(%ebx)
je     809e4ee <_IO_stdin_used+0x81ea>
je     809e53f <_IO_stdin_used+0x823b>
and    %dh,(%eax)
and    %ch,0x72(%edi)
and    %dh,(%ecx)
and    %ch,0x66(%ecx)
and    %dh,0x65(%ebx)
je     809e50b <_IO_stdin_used+0x8207>
and    %ch,0x6f(%esi)
je     809e504 <_IO_stdin_used+0x8200>
daa
and    $0x2773,%eax
add    %al,(%eax)
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x73202773,%eax
push   $0x646c756f
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     809e568 <_IO_stdin_used+0x8264>
imul   $0x65682061,0x20(%esi),%ebp
js     809e530 <_IO_stdin_used+0x822c>
jae    809e586 <_IO_stdin_used+0x8282>
jb     809e57d <_IO_stdin_used+0x8279>
outsb  %ds:(%esi),(%dx)
and    %ch,0x66(%bx)
and    %ch,0x6e(%ebp,%eiz,2)
addr16 je 809e588 <_IO_stdin_used+0x8284>
and    %ah,0x6e202c64
outsl  %ds:(%esi),(%dx)
je     809e549 <_IO_stdin_used+0x8245>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 809e597 <_IO_stdin_used+0x8293>
and    %ah,0x77202c64
imul   $0x6f206f6e,0x20(%eax,%ebp,2),%esi
je     809e5a7 <_IO_stdin_used+0x82a3>
gs
jb     809e562 <_IO_stdin_used+0x825e>
je     809e5a9 <_IO_stdin_used+0x82a5>
js     809e5ba <_IO_stdin_used+0x82b6>
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809e5b2 <_IO_stdin_used+0x82ae>
cs
data16
jb     809e5b4 <_IO_stdin_used+0x82b0>
gs
fs
gs
jae    809e5bf <_IO_stdin_used+0x82bb>
je     809e5c5 <_IO_stdin_used+0x82c1>
jo     809e586 <_IO_stdin_used+0x8282>
inc    %esp
inc    %edx
jne    809e5cf <_IO_stdin_used+0x82cb>
cs
inc    %ebp
jb     809e5d2 <_IO_stdin_used+0x82ce>
outsl  %ds:(%esi),(%dx)
jb     809e591 <_IO_stdin_used+0x828d>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    809e5c8 <_IO_stdin_used+0x82c4>
insb   (%dx),%es:(%edi)
imul   $0x6f43656c,0x69(%esi,%eax,2),%esp
outsb  %ds:(%esi),(%dx)
je     809e5d8 <_IO_stdin_used+0x82d4>
outsb  %ds:(%esi),(%dx)
je     809e576 <_IO_stdin_used+0x8272>
add    %al,(%eax)
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x63202773,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     809e5ed <_IO_stdin_used+0x82e9>
imul   $0x766e6920,0x73(%esi),%ebp
popa
insb   (%dx),%es:(%edi)
imul   $0x64207865,0x68(%eax,%eiz,1),%esp
popa
je     809e601 <_IO_stdin_used+0x82fd>
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
push   %ebp
dec    %ecx
inc    %esp
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%edi)
and    $0x63202773,%eax
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
je     809e619 <_IO_stdin_used+0x8315>
imul   $0x20642520,0x73(%esi),%ebp
bound  %edi,0x74(%ecx)
gs
jae    809e5e5 <_IO_stdin_used+0x82e1>
outsl  %ds:(%esi),(%dx)
data16
and    %ch,0x65(%eax)
js     809e5f9 <_IO_stdin_used+0x82f5>
outsb  %gs:(%esi),(%dx)
arpl   %bp,0x64(%edi)
gs and %ah,%fs:%gs:0x74(%ecx,%eiz,2)
popa
and    %ch,0x6e(%ecx)
jae    809e651 <_IO_stdin_used+0x834d>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %ah,0x44000064
sub    $0x20737542,%eax
insb   (%dx),%es:(%edi)
imul   $0x20797261,0x72(%edx),%esp
popa
jo     809e669 <_IO_stdin_used+0x8365>
gs
popa
jb     809e670 <_IO_stdin_used+0x836c>
and    %dh,0x20(%edi,%ebp,2)
bound  %esp,0x20(%ebp)
imul   $0x6572726f,0x63(%esi),%ebp
arpl   %si,0x79(%esp,%ebp,2)
and    %dh,0x65(%ebx)
je     809e634 <_IO_stdin_used+0x8330>
jne    809e686 <_IO_stdin_used+0x8382>
cmp    (%eax),%esp
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     809e689 <_IO_stdin_used+0x8385>
popa
and    %ch,%fs:0x61(%ebp)
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x75(%ebp)
imul   $0x530a7325,0x20(%edx,%edi,1),%esp
gs and %dh,%gs:0x65(%eax,%ebp,2)
and    %ch,0x61(%ebp)
outsb  %ds:(%esi),(%dx)
jne    809e6a6 <_IO_stdin_used+0x83a2>
insb   (%dx),%es:(%edi)
and    %dh,0x61(%eax)
and    %ah,%gs:0x6f(%bp)
jb     809e670 <_IO_stdin_used+0x836c>
bound  %esi,%fs:0x73(%ebp)
sub    $0x64697575,%eax
outsb  %gs:(%si),(%dx)
and    %dh,0x20(%edi,%ebp,2)
arpl   %bp,0x72(%edi)
jb     809e6ca <_IO_stdin_used+0x83c6>
arpl   %si,0x74(%eax,%eiz,1)
push   $0x69207369
jae    809e6e3 <_IO_stdin_used+0x83df>
jne    809e6d7 <_IO_stdin_used+0x83d3>
or     %cs:(%eax),%al
add    %al,(%eax)
add    %ah,0x72(%ecx)
addr16 jne 809e6ea <_IO_stdin_used+0x83e6>
outsb  %gs:(%esi),(%dx)
je     809e6f4 <_IO_stdin_used+0x83f0>
and    %dh,0x20(%edi,%ebp,2)
and    $0x20292873,%eax
ja     809e6f1 <_IO_stdin_used+0x83ed>
jb     809e6f3 <_IO_stdin_used+0x83ef>
and    %ch,0x6e(%ecx)
arpl   %bp,0x72(%edi)
jb     809e6fb <_IO_stdin_used+0x83f7>
arpl   %si,0x20(%esp,%ebp,1)
popa
jae    809e710 <_IO_stdin_used+0x840c>
gs
jb     809e714 <_IO_stdin_used+0x8410>
imul   $0x73252220,0x6e(%edi),%ebp
and    (%eax),%ah
popaw
imul   $0x206e6920,0x64(%ebp,%eiz,2),%ebp
imul   $0x7325,0x20(%ebp,%eiz,2),%bp
and    %ch,0x6e(%ecx,%ebp,2)
and    %ah,%gs:0x540a2e64
push   $0x69207369
jae    809e6ec <_IO_stdin_used+0x83e8>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jb     809e73d <_IO_stdin_used+0x8439>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    809e6f5 <_IO_stdin_used+0x83f1>
popa
and    %ah,0x75(%edx)
and    %ch,0x6e(%bx,%di)
and    %dh,0x6f(%ebx)
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x70(%ecx)
jo     809e753 <_IO_stdin_used+0x844f>
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %dh,0x73(%ebp)
imul   $0x65687420,0x67(%esi),%ebp
and    %al,0x42(%ebp,%ebp,1)
jne    809e771 <_IO_stdin_used+0x846d>
and    %ch,0x62(%ecx,%ebp,2)
jb     809e765 <_IO_stdin_used+0x8461>
jb     809e77f <_IO_stdin_used+0x847b>
or     %cs:(%eax),%al
add    %al,(%eax)
add    %ch,0x6e(%ecx)
jae    809e775 <_IO_stdin_used+0x8471>
jb     809e786 <_IO_stdin_used+0x8482>
pop    %edi
popa
je     809e736 <_IO_stdin_used+0x8432>
cmp    $0x20642520,%eax
jae    809e791 <_IO_stdin_used+0x848d>
jb     809e788 <_IO_stdin_used+0x8484>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%si)
outsb  %ds:(%esi),(%dx)
and    %bh,0x20642520
fs
popa
je     809e790 <_IO_stdin_used+0x848c>
pop    %edi
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,0xa642520
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x20fffc5e(%eax)
popa
cld
jmp    *%eax
pop    %esi
cld
jmp    *(%eax)
popa
cld
jmp    *(%eax)
popa
cld
call   *0x5f(%eax)
cld
incl   -0x7f0003a2(%eax)
pop    %esi
cld
jmp    *(%eax)
popa
cld
jmp    *(%eax)
popa
cld
jmp    *(%eax)
popa
cld
jmp    *(%eax)
popa
cld
push   %eax
pop    %edi
cld
lcall  *0x60(%eax)
cld
jmp    *(%eax)
popa
cld
push   %eax
pop    %edi
cld
jmp    *(%eax)
popa
cld
lcall  *0x60(%eax)
cld
jmp    *%eax
pop    %esi
cld
incl   0x20fffc5e(%eax)
popa
cld
jmp    *(%eax)
popa
cld
jmp    *%eax
pop    %esi
cld
(bad)
cmp    %bl,-0x4(%esi)
jmp    *(%eax)
(bad)
cld
jmp    *0x68fffc63(%eax)
(bad)
cld
jmp    *-0x5f00039d(%eax)
arpl   %di,%sp
dec    %eax
(bad)
cld
decl   (%eax)
arpl   %di,%sp
decl   (%eax)
arpl   %di,%sp
jmp    *-0x5f00039d(%eax)
arpl   %di,%sp
jmp    *-0x5f00039d(%eax)
arpl   %di,%sp
ljmp   *(%eax)
arpl   %di,%sp
ljmp   *0x63(%eax)
cld
jmp    *0x28fffc63(%eax)
arpl   %di,%sp
jmp    *0x68fffc63(%eax)
arpl   %di,%sp
ljmp   *0x62(%eax)
cld
decl   (%eax)
arpl   %di,%sp
jmp    *-0x5f00039d(%eax)
arpl   %di,%sp
ljmp   *0x62(%eax)
cld
call   *%eax
popa
cld
lcall  *(%eax)
data16
cld
decl   0x66(%eax)
cld
pushl  (%eax)
data16
cld
decl   0x66(%eax)
cld
decl   0x66(%eax)
cld
decl   0x66(%eax)
cld
lcall  *(%eax)
data16
cld
lcall  *(%eax)
data16
cld
decl   0x66(%eax)
cld
decl   0x66(%eax)
cld
decl   0x66(%eax)
cld
decl   0x66(%eax)
cld
jmp    *%eax
gs
cld
decl   0x66(%eax)
cld
decl   0x66(%eax)
cld
jmp    *%eax
gs
cld
decl   0x66(%eax)
cld
decl   0x66(%eax)
cld
pushl  (%eax)
data16
cld
lcall  *(%eax)
data16
cld
decl   0x66(%eax)
cld
decl   0x66(%eax)
cld
pushl  (%eax)
data16
cld
(bad)
js     809e8c3 <_IO_stdin_used+0x85bf>
cld
decl   0x67(%eax)
cld
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
incl   0x67(%eax)
cld
(bad)
cmp    %ah,-0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
pushl  (%eax)
addr16 cld
ljmp   *(%eax)
addr16 cld
(bad)
fsubs  -0x4(%edi)
call   *%eax
addr16 cld
dec    %eax
addr16 cld
(bad)
fsubs  -0x4(%edi)
inc    %eax
addr16 cld
(bad)
mov    $0xb0fffc67,%eax
addr16 cld
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
(bad)
fsubs  -0x4(%edi)
ljmp   *-0x5f000399(%eax)
addr16 cld
(bad)
fsubs  -0x4(%edi)
lcall  *-0x6f000399(%eax)
addr16 cld
decl   -0x7f000399(%eax)
addr16 cld
(bad)
js     809ea9d <_IO_stdin_used+0x8799>
cld
pushl  0x67(%eax)
cld
(bad)
fsubs  -0x4(%edi)
ljmp   *0x67(%eax)
cld
jmp    *0x67(%eax)
cld
(bad)
fsubs  -0x4(%edi)
lcall  *0x67(%eax)
cld
(bad)
fsubs  -0x4(%edi)
call   *0x67(%eax)
cld
decl   0x68(%eax)
cld
lcall  *0x69(%eax)
cld
(bad)
js     809eaca <_IO_stdin_used+0x87c6>
cld
lcall  *0x69(%eax)
cld
lcall  *0x69(%eax)
cld
(bad)
mov    $0x48fffc68,%eax
push   $0x6848fffc
cld
lcall  *0x69(%eax)
cld
lcall  *0x69(%eax)
cld
lcall  *0x69(%eax)
cld
lcall  *0x69(%eax)
cld
jmp    *%eax
push   $0x6918fffc
cld
lcall  *0x69(%eax)
cld
jmp    *%eax
push   $0x6958fffc
cld
lcall  *(%eax)
imul   $0xfc6878ff,%esp,%edi
decl   0x68(%eax)
cld
lcall  *0x69(%eax)
cld
lcall  *0x69(%eax)
cld
(bad)
js     809eb1a <_IO_stdin_used+0x8816>
cld
lcall  *(%eax)
push   $0x69e0fffc
cld
pushl  0x6a(%eax)
cld
(bad)
clc
imul   $0xfc6a70ff,%esp,%edi
pushl  0x6a(%eax)
cld
call   *(%eax)
push   $0xfffffffc
jmp    *%eax
imul   $0xfc69e0ff,%esp,%edi
pushl  0x6a(%eax)
cld
pushl  0x6a(%eax)
cld
pushl  0x6a(%eax)
cld
pushl  0x6a(%eax)
cld
ljmp   *(%eax)
push   $0xfffffffc
incl   0x6a(%eax)
cld
pushl  0x6a(%eax)
cld
ljmp   *(%eax)
push   $0xfffffffc
pushl  0x6a(%eax)
cld
incl   0x6a(%eax)
cld
(bad)
clc
imul   $0xfc69e0ff,%esp,%edi
pushl  0x6a(%eax)
cld
pushl  0x6a(%eax)
cld
(bad)
clc
imul   $0xfc69d0ff,%esp,%edi
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
bound  %ebp,0x6f(%edi)
insb   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
add    %ah,0x79(%edx)
je     809ebf5 <_IO_stdin_used+0x88f1>
add    %dh,0x69(%ebp)
outsb  %ds:(%esi),(%dx)
je     809ebc7 <_IO_stdin_used+0x88c3>
add    %dh,%ss:0x69(%ebp)
outsb  %ds:(%esi),(%dx)
je     809ebd0 <_IO_stdin_used+0x88cc>
xor    (%eax),%al
jne    809ec0a <_IO_stdin_used+0x8906>
outsb  %ds:(%esi),(%dx)
je     809ebda <_IO_stdin_used+0x88d6>
xor    $0x0,%al
outsl  %fs:(%esi),(%dx)
jne    809ec0c <_IO_stdin_used+0x8908>
insb   (%dx),%es:(%edi)
add    %ch,%gs:0x62(%edi)
push   $0x65
arpl   %si,0x70(%edi,%ebx,2)
popa
je     809ec20 <_IO_stdin_used+0x891c>
add    %dh,0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
je     809ec35 <_IO_stdin_used+0x8931>
jb     809ec27 <_IO_stdin_used+0x8923>
add    %ah,0x65(%edx)
imul   $0x75727473,0x5f(%bp),%ebp
arpl   %si,0x65(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
fs
pop    %edi
jae    809ec4a <_IO_stdin_used+0x8946>
jb     809ec4d <_IO_stdin_used+0x8949>
arpl   %si,0x62(%eax,%eax,1)
imul   $0x74636964,%gs:0x5f(%bp),%ebp
74
pop    %edi
outsb  %gs:(%esi),(%dx)
je     809ec5c <_IO_stdin_used+0x8958>
jns    809ebec <_IO_stdin_used+0x88e8>
outsb  %gs:(%esi),(%dx)
fs
pop    %edi
imul   $0x746e655f,%fs:0x74(%ebx),%esp
jb     809ec73 <_IO_stdin_used+0x896f>
add    %dh,0x6e(%ebp)
imul   $0x74006466,0x5f(%eax),%edi
jns    809ec76 <_IO_stdin_used+0x8972>
and    %ah,%gs:0x64252073
and    %ch,0x6f(%esi)
je     809ec32 <_IO_stdin_used+0x892e>
popa
and    %ah,0x61(%edx)
jae    809ec81 <_IO_stdin_used+0x897d>
arpl   %sp,(%eax)
je     809ec95 <_IO_stdin_used+0x8991>
jo     809ec83 <_IO_stdin_used+0x897f>
or     (%eax),%al
je     809ec9b <_IO_stdin_used+0x8997>
jo     809ec89 <_IO_stdin_used+0x8985>
and    %ah,0x6f6e2073
je     809ec4c <_IO_stdin_used+0x8948>
popa
and    %ah,0x61(%edx)
jae    809ec9b <_IO_stdin_used+0x8997>
arpl   %sp,(%eax)
je     809ecaf <_IO_stdin_used+0x89ab>
jo     809ec9d <_IO_stdin_used+0x8999>
or     (%eax),%al
add    %al,(%eax)
push   $0xfffc87
xchg   %edi,%esp
jmp    *-0x78(%eax)
cld
call   *-0x78(%eax)
cld
incl   -0x78(%eax)
cld
pushl  (%eax)
mov    %bh,%ah
jmp    *(%eax)
mov    %bh,%ah
call   *(%eax)
mov    %bh,%ah
incl   (%eax)
mov    %bh,%ah
push   %eax
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *%eax
xchg   %edi,%esp
call   *%eax
xchg   %edi,%esp
inc    %eax
xchg   %edi,%esp
pushl  -0x5f000379(%eax)
xchg   %edi,%esp
call   *0x22fffc87(%eax)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *(%edx)
xchg   %edi,%esp
jmp    *%eax
xchg   %edi,%esp
call   *%eax
xchg   %edi,%esp
inc    %eax
xchg   %edi,%esp
pushl  -0x5f000379(%eax)
xchg   %edi,%esp
call   *0x46fffc87(%eax)
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     809ed8a <_IO_stdin_used+0x8a86>
outsb  %ds:(%esi),(%dx)
and    %ah,(%edx)
and    $0x203a2273,%eax
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    809edb0 <_IO_stdin_used+0x8aac>
popa
je     809ed5f <_IO_stdin_used+0x8a5b>
and    0x203a2273,%ah
and    $0x72450073,%eax
jb     809edbb <_IO_stdin_used+0x8ab7>
jb     809ed6e <_IO_stdin_used+0x8a6a>
jb     809edb5 <_IO_stdin_used+0x8ab1>
popa
imul   $0x73252220,%fs:0x67(%esi),%ebp
and    (%edx),%bh
and    %ah,0x25220073
jae    809ed85 <_IO_stdin_used+0x8a81>
and    %ch,0x73(%ecx)
and    %ch,0x6f(%esi)
je     809ed8b <_IO_stdin_used+0x8a87>
popa
and    %dh,0x65(%edx)
addr16 jne 809edde <_IO_stdin_used+0x8ada>
popa
jb     809ed95 <_IO_stdin_used+0x8a91>
imul   $0x6f43,0x0(%ebp,%eiz,2),%bp
jne    809edea <_IO_stdin_used+0x8ae6>
and    %ch,%fs:0x6f(%esi)
je     809eda4 <_IO_stdin_used+0x8aa0>
arpl   %si,0x65(%edx)
popa
je     809edef <_IO_stdin_used+0x8aeb>
and    %ah,0x25203a73
jae    809ed92 <_IO_stdin_used+0x8a8e>
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    809ee02 <_IO_stdin_used+0x8afe>
and    %ch,%fs:0x6f(%esi)
je     809edbc <_IO_stdin_used+0x8ab8>
arpl   %bp,0x6d(%eax)
outsl  %ds:(%esi),(%dx)
and    %ah,%fs:0x25203a73
jae    809eda9 <_IO_stdin_used+0x8aa5>
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    809ee19 <_IO_stdin_used+0x8b15>
and    %ch,%fs:0x6f(%esi)
je     809edd3 <_IO_stdin_used+0x8acf>
ja     809ee27 <_IO_stdin_used+0x8b23>
imul   $0x25206f74,0x20(%ebp,%eiz,2),%esi
jae    809edf9 <_IO_stdin_used+0x8af5>
and    %ah,0x6f430073
jne    809ee33 <_IO_stdin_used+0x8b2f>
and    %ch,%fs:0x6f(%esi)
je     809eded <_IO_stdin_used+0x8ae9>
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    809eddf <_IO_stdin_used+0x8adb>
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    809ee4f <_IO_stdin_used+0x8b4b>
and    %ch,%fs:0x6f(%esi)
je     809ee09 <_IO_stdin_used+0x8b05>
jb     809ee50 <_IO_stdin_used+0x8b4c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0x6f742073
and    %ah,0x25203a73
jae    809edfd <_IO_stdin_used+0x8af9>
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    809ee6d <_IO_stdin_used+0x8b69>
and    %ch,%fs:0x6f(%esi)
je     809ee27 <_IO_stdin_used+0x8b23>
arpl   %si,0x65(%edx)
popa
je     809ee72 <_IO_stdin_used+0x8b6e>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    809ee24 <_IO_stdin_used+0x8b20>
add    %al,0x6f(%ebx)
jne    809ee8b <_IO_stdin_used+0x8b87>
and    %ch,%fs:0x6f(%esi)
je     809ee45 <_IO_stdin_used+0x8b41>
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    809ee41 <_IO_stdin_used+0x8b3d>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
insb   (%dx),%es:(%edi)
gs
je     809eead <_IO_stdin_used+0x8ba9>
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    809ee5f <_IO_stdin_used+0x8b5b>
add    %al,(%eax)
add    %al,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %dh,%gs:0x69(%ebx)
jp     809eec6 <_IO_stdin_used+0x8bc2>
and    %ah,0x6f20756c
data16
and    %ah,(%edx)
and    $0x69202273,%eax
jae    809ee91 <_IO_stdin_used+0x8b8d>
je     809eee2 <_IO_stdin_used+0x8bde>
outsl  %ds:(%esi),(%dx)
and    %ch,0x72(%ecx,%eiz,2)
gs add %al,%cs:%gs:0x6f(%bp,%di)
jne    809eeec <_IO_stdin_used+0x8be8>
and    %ch,%fs:0x6f(%esi)
je     809eea6 <_IO_stdin_used+0x8ba2>
jae    809ef01 <_IO_stdin_used+0x8bfd>
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x72(%eax)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6c696620,0x65(%edx),%edi
and    %ah,%gs:0x25203a73
jae    809ee9e <_IO_stdin_used+0x8b9a>
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    809ef10 <_IO_stdin_used+0x8c0c>
and    %ch,%fs:0x6f(%esi)
je     809eeca <_IO_stdin_used+0x8bc6>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x65(%bx,%si)
jb     809ef22 <_IO_stdin_used+0x8c1e>
imul   $0x736e6f69,0x73(%ebx),%esi
and    %ch,0x66(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x25203a73
jae    809eed6 <_IO_stdin_used+0x8bd2>
add    %dl,0x72(%edi)
imul   $0x6f742067,0x6e(%ecx,%ebp,2),%esi
and    %dh,0x69(%eax)
jo     809ef41 <_IO_stdin_used+0x8c3d>
cmp    (%eax),%ah
and    $0x43000a73,%eax
jb     809ef4a <_IO_stdin_used+0x8c46>
fs outsb %fs:%gs:(%esi),(%dx)
je     809ef53 <_IO_stdin_used+0x8c4f>
popa
insb   (%dx),%es:(%edi)
jae    809ef0e <_IO_stdin_used+0x8c0a>
bound  %edi,0x74(%ecx)
and    %dh,%gs:0x61(%edi)
jae    809ef17 <_IO_stdin_used+0x8c13>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809ef1b <_IO_stdin_used+0x8c17>
outsb  %ds:(%esi),(%dx)
jne    809ef6a <_IO_stdin_used+0x8c66>
add    %bh,(%edi)
aas
aas
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
jo     809ef75 <_IO_stdin_used+0x8c71>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809ef53 <_IO_stdin_used+0x8c4f>
and    %ah,0x6f430073
jne    809ef8d <_IO_stdin_used+0x8c89>
and    %ch,%fs:0x6f(%esi)
je     809ef47 <_IO_stdin_used+0x8c43>
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:0x64(%esi)
and    %ah,0x642f0064
gs
jbe    809ef67 <_IO_stdin_used+0x8c63>
jne    809efac <_IO_stdin_used+0x8ca8>
popa
outsb  %ds:(%esi),(%dx)
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
add    %al,0x6f(%ebx)
jne    809efb0 <_IO_stdin_used+0x8cac>
and    %ch,%fs:0x6f(%esi)
je     809ef6a <_IO_stdin_used+0x8c66>
fs
jne    809efbd <_IO_stdin_used+0x8cb9>
insb   (%dx),%es:(%edi)
imul   $0x66206574,0x61(%ebx),%esp
and    %ah,%fs:0x6f530064
arpl   %bp,0x65(%ebx)
je     809ef81 <_IO_stdin_used+0x8c7d>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
or     (%bx,%si),%al
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809ef9a <_IO_stdin_used+0x8c96>
jb     809efe1 <_IO_stdin_used+0x8cdd>
arpl   %sp,0x69(%ebp)
jbe    809efe6 <_IO_stdin_used+0x8ce2>
fs add %dl,%cs:%fs:0x61(%eax)
jae    809effb <_IO_stdin_used+0x8cf7>
gs and %dh,%fs:%gs:0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809efb2 <_IO_stdin_used+0x8cae>
push   $0x77207361
jb     809f008 <_IO_stdin_used+0x8d04>
outsb  %ds:(%esi),(%dx)
and    %dh,0x79(%si)
jo     809f005 <_IO_stdin_used+0x8d01>
add    %ch,%cs:0x70(%ecx)
jbe    809efda <_IO_stdin_used+0x8cd6>
add    %ch,0x70(%ecx)
jbe    809efe1 <_IO_stdin_used+0x8cdd>
add    %dl,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x64(%ecx)
fs
jb     809f01e <_IO_stdin_used+0x8d1a>
jae    809f02e <_IO_stdin_used+0x8d2a>
and    %ah,0x61(%esi)
insl   (%dx),%es:(%edi)
imul   $0x2a007325,0x20(%ecx,%edi,2),%ebp
add    %ch,(%edi)
je     809f038 <_IO_stdin_used+0x8d34>
jo     809efcd <_IO_stdin_used+0x8cc9>
push   %esp
dec    %ebp
push   %eax
inc    %esp
dec    %ecx
push   %edx
add    %dl,0x50(%ebp,%ecx,2)
add    %dl,0x4d(%ebp,%eax,2)
push   %eax
add    %ch,(%edi)
jbe    809f041 <_IO_stdin_used+0x8d3d>
jb     809f011 <_IO_stdin_used+0x8d0d>
insb   (%dx),%es:(%edi)
imul   $0x73756264,0x2f(%edx),%esp
das
insl   (%dx),%es:(%edi)
popa
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
gs
sub    $0x2f006469,%eax
gs
je     809f05d <_IO_stdin_used+0x8d59>
das
insl   (%dx),%es:(%edi)
popa
arpl   %bp,0x69(%eax)
outsb  %ds:(%esi),(%dx)
gs
sub    $0x58006469,%eax
inc    %esp
inc    %edi
pop    %edi
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
pop    %edi
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
add    %bl,0x44(%eax)
inc    %edi
pop    %edi
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
pop    %edi
inc    %esp
dec    %ecx
push   %edx
push   %ebx
add    %ch,(%edi)
cs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
das
jae    809f094 <_IO_stdin_used+0x8d90>
popa
jb     809f094 <_IO_stdin_used+0x8d90>
add    %ch,(%edi)
jne    809f0a6 <_IO_stdin_used+0x8da2>
jb     809f064 <_IO_stdin_used+0x8d60>
jae    809f09f <_IO_stdin_used+0x8d9b>
popa
jb     809f09f <_IO_stdin_used+0x8d9b>
add    %ch,(%edi)
jne    809f0b1 <_IO_stdin_used+0x8dad>
jb     809f06f <_IO_stdin_used+0x8d6b>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
das
jae    809f0b0 <_IO_stdin_used+0x8dac>
popa
jb     809f0b0 <_IO_stdin_used+0x8dac>
cmp    (%edi),%ch
jne    809f0c2 <_IO_stdin_used+0x8dbe>
jb     809f080 <_IO_stdin_used+0x8d7c>
jae    809f0bb <_IO_stdin_used+0x8db7>
popa
jb     809f0bb <_IO_stdin_used+0x8db7>
cmp    (%eax),%al
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x65732f31,%eax
jb     809f0da <_IO_stdin_used+0x8dd6>
imul   $0x642f0073,0x65(%ebx),%esp
bound  %esi,0x73(%ebp)
sub    $0x79732f31,%eax
jae    809f0e9 <_IO_stdin_used+0x8de5>
gs
insl   (%dx),%es:(%edi)
sub    $0x76726573,%eax
imul   $0x652f0073,0x65(%ebx),%esp
je     809f0e8 <_IO_stdin_used+0x8de4>
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x79732f31,%eax
jae    809f105 <_IO_stdin_used+0x8e01>
gs
insl   (%dx),%es:(%edi)
arpl   %bp,%cs:0x6e(%edi)
data16
add    %ch,(%edi)
gs
je     809f100 <_IO_stdin_used+0x8dfc>
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x65732f31,%eax
jae    809f11c <_IO_stdin_used+0x8e18>
imul   $0x6e6f632e,0x6e(%edi),%ebp
data16
add    %ch,(%esi)
bound  %esi,%fs:0x73(%ebp)
sub    $0x7279656b,%eax
imul   $0x702f0073,0x67(%esi),%ebp
jb     809f134 <_IO_stdin_used+0x8e30>
arpl   %bp,(%edi)
jae    809f12e <_IO_stdin_used+0x8e2a>
insb   (%dx),%es:(%edi)
data16
das
data16
add    %ch,%fs:(%edi)
das
bound  %ebp,0x6e(%ecx)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x6e75616c,%eax
arpl   %bp,0x0(%eax)
das
fs
gs
jbe    809f115 <_IO_stdin_used+0x8e11>
outsb  %ds:(%esi),(%dx)
jne    809f155 <_IO_stdin_used+0x8e51>
insb   (%dx),%es:(%edi)
add    %al,0x53(%ecx,%ecx,2)
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
add    %ch,0x7475612d
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
popa
jne    809f16b <_IO_stdin_used+0x8e67>
arpl   %bp,0x0(%eax)
sub    $0x6e69622d,%eax
popa
jb     809f181 <_IO_stdin_used+0x8e7d>
sub    $0x746e7973,%eax
popa
js     809f110 <_IO_stdin_used+0x8e0c>
sub    $0x6f6c632d,%eax
jae    809f17c <_IO_stdin_used+0x8e78>
sub    $0x65647473,%eax
jb     809f190 <_IO_stdin_used+0x8e8c>
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     809f191 <_IO_stdin_used+0x8e8d>
popa
and    %ah,%fs:0x72(%ebx)
gs fs outsb %fs:%gs:(%esi),(%dx)
je     809f1a0 <_IO_stdin_used+0x8e9c>
popa
insb   (%dx),%es:(%edi)
jae    809f15b <_IO_stdin_used+0x8e57>
bound  %edi,0x74(%ecx)
cmp    %gs:(%eax),%ah
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     809f1b5 <_IO_stdin_used+0x8eb1>
popa
and    %ah,%fs:0x72(%ebx)
gs fs outsb %fs:%gs:(%esi),(%dx)
je     809f1c4 <_IO_stdin_used+0x8ec0>
popa
insb   (%dx),%es:(%edi)
jae    809f17f <_IO_stdin_used+0x8e7b>
bound  %edi,0x74(%ecx)
and    %ch,%gs:(%eax)
jp     809f1cc <_IO_stdin_used+0x8ec8>
jb     809f1d8 <_IO_stdin_used+0x8ed4>
sub    $0x676e656c,%eax
je     809f1d8 <_IO_stdin_used+0x8ed4>
and    %dh,0x65(%edx)
popa
sub    %eax,%fs:(%eax)
add    %dh,0x72(%edi)
outsl  %ds:(%esi),(%dx)
je     809f1e2 <_IO_stdin_used+0x8ede>
and    %bh,0x65(%edx)
jb     809f1f1 <_IO_stdin_used+0x8eed>
and    %ah,0x79(%edx)
je     809f1ec <_IO_stdin_used+0x8ee8>
jae    809f1a9 <_IO_stdin_used+0x8ea5>
ja     809f1fd <_IO_stdin_used+0x8ef9>
imul   $0x72632067,0x6e(%ecx,%ebp,2),%esi
gs fs outsb %fs:%gs:(%esi),(%dx)
je     809f202 <_IO_stdin_used+0x8efe>
popa
insb   (%dx),%es:(%edi)
jae    809f1bd <_IO_stdin_used+0x8eb9>
bound  %edi,0x74(%ecx)
add    %al,%gs:(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
ja     809f222 <_IO_stdin_used+0x8f1e>
imul   $0x64657263,0x20(%ebp,%eiz,2),%esi
outsb  %gs:(%esi),(%dx)
je     809f225 <_IO_stdin_used+0x8f21>
popa
insb   (%dx),%es:(%edi)
jae    809f1e0 <_IO_stdin_used+0x8edc>
bound  %edi,0x74(%ecx)
cmp    %gs:(%eax),%ah
and    $0x73,%eax
add    %ah,0x69642073
jb     809f238 <_IO_stdin_used+0x8f34>
arpl   %si,0x72(%edi,%ebp,2)
jns    809f1f9 <_IO_stdin_used+0x8ef5>
imul   $0x20746f6e,0x20(%ebx),%esi
jo     809f254 <_IO_stdin_used+0x8f50>
imul   $0x74206574,0x61(%esi),%esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x65(%eax,%ebp,2)
and    %dh,0x73(%ebp)
gs
jb     809f1f4 <_IO_stdin_used+0x8ef0>
push   %ebp
jae    809f25c <_IO_stdin_used+0x8f58>
jb     809f219 <_IO_stdin_used+0x8f15>
and    0x75202273,%ah
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%edi)
and    %ch,0x6f(%esi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     809f28b <_IO_stdin_used+0x8f87>
and    %dh,0x20(%edi,%ebp,2)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %dh,%gs:0x61(%eax)
jae    809f296 <_IO_stdin_used+0x8f92>
ja     809f294 <_IO_stdin_used+0x8f90>
jb     809f28b <_IO_stdin_used+0x8f87>
and    %ah,0x6e(%ebp)
je     809f29e <_IO_stdin_used+0x8f9a>
jns    809f238 <_IO_stdin_used+0x8f34>
add    %al,(%eax)
dec    %ecx
je     809f253 <_IO_stdin_used+0x8f4f>
popa
jo     809f2a6 <_IO_stdin_used+0x8fa2>
gs
popa
jb     809f2ad <_IO_stdin_used+0x8fa9>
and    %dh,0x61(%eax,%ebp,2)
je     809f260 <_IO_stdin_used+0x8f5c>
jne    809f2b5 <_IO_stdin_used+0x8fb1>
gs
jb     809f2b3 <_IO_stdin_used+0x8faf>
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x69202273,%eax
jae    809f271 <_IO_stdin_used+0x8f6d>
imul   $0x65726f6d,0x20(%esi),%ebp
and    %dh,0x61(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72672064
outsl  %ds:(%esi),(%dx)
jne    809f2d6 <_IO_stdin_used+0x8fd2>
jae    809f296 <_IO_stdin_used+0x8f92>
or     0x72(%eax),%dl
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x65(%ebp)
imul   $0x74697720,%fs:0x67(%esi),%ebp
push   $0x73756a20
je     809f29e <_IO_stdin_used+0x8f9a>
je     809f2e8 <_IO_stdin_used+0x8fe4>
and    %ah,%gs:0x69(%esi)
jb     809f2f9 <_IO_stdin_used+0x8ff5>
je     809f2a8 <_IO_stdin_used+0x8fa4>
and    $0x72672064,%eax
outsl  %ds:(%esi),(%dx)
jne    809f300 <_IO_stdin_used+0x8ffc>
jae    809f2c0 <_IO_stdin_used+0x8fbc>
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     809f2c2 <_IO_stdin_used+0x8fbe>
addr16 jb 809f314 <_IO_stdin_used+0x9010>
jne    809f317 <_IO_stdin_used+0x9013>
jae    809f2c9 <_IO_stdin_used+0x8fc5>
outsw  %ds:(%esi),(%dx)
jb     809f2cd <_IO_stdin_used+0x8fc9>
jne    809f322 <_IO_stdin_used+0x901e>
gs
jb     809f320 <_IO_stdin_used+0x901c>
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%edx)
and    $0x70202273,%eax
jb     809f327 <_IO_stdin_used+0x9023>
insl   (%dx),%es:(%edi)
popa
jb     809f33b <_IO_stdin_used+0x9037>
and    %al,0x49(%edi)
inc    %esp
and    %ah,0x203a756c
and    $0x46000a73,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     809f345 <_IO_stdin_used+0x9041>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    809f30b <_IO_stdin_used+0x9007>
and    $0x25203a73,%eax
jae    809f2fc <_IO_stdin_used+0x8ff8>
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     809f322 <_IO_stdin_used+0x901e>
data16
insb   (%dx),%es:(%edi)
popa
addr16 jae 809f328 <_IO_stdin_used+0x9024>
data16
jb     809f37a <_IO_stdin_used+0x9076>
insl   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     809f38e <_IO_stdin_used+0x908a>
outsl  %ds:(%esi),(%dx)
jb     809f33d <_IO_stdin_used+0x9039>
and    $0x25203a64,%eax
jae    809f324 <_IO_stdin_used+0x9020>
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    809f395 <_IO_stdin_used+0x9091>
je     809f352 <_IO_stdin_used+0x904e>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x67,0x6e(%ecx),%ebp
and    %ah,0x6c(%esi)
popa
and    %ch,0x66(%bx)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     809f3c7 <_IO_stdin_used+0x90c3>
outsl  %ds:(%esi),(%dx)
jb     809f376 <_IO_stdin_used+0x9072>
and    $0x25203a64,%eax
jae    809f35d <_IO_stdin_used+0x9059>
add    %al,(%eax)
add    %al,0x62(%ecx)
jae    809f3d8 <_IO_stdin_used+0x90d4>
jb     809f3c7 <_IO_stdin_used+0x90c3>
arpl   %si,0x73(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
je     809f390 <_IO_stdin_used+0x908c>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x6f(%edi,%ebp,2)
and    %ch,0x6e(%edi,%ebp,2)
or     (%bx,%si),%al
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x74(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f3bc <_IO_stdin_used+0x90b8>
and    $0x25203a73,%eax
jae    809f3a3 <_IO_stdin_used+0x909f>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    809f415 <_IO_stdin_used+0x9111>
je     809f3d2 <_IO_stdin_used+0x90ce>
jae    809f423 <_IO_stdin_used+0x911f>
arpl   %bp,0x65(%ebx)
je     809f3d9 <_IO_stdin_used+0x90d5>
outsl  %ds:(%esi),(%dx)
jo     809f430 <_IO_stdin_used+0x912c>
imul   $0x22732522,0x6e(%edi),%ebp
cmp    (%eax),%ah
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
bound  %ebp,0x6e(%ecx)
and    %dh,%fs:0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f3fe <_IO_stdin_used+0x90fa>
and    0x203a2273,%ah
and    $0x46000073,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
imul   $0x6f206e65,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f423 <_IO_stdin_used+0x911f>
and    0x203a2273,%ah
and    $0x6f430073,%eax
jne    809f47c <_IO_stdin_used+0x9178>
and    %ch,%fs:0x6f(%esi)
je     809f436 <_IO_stdin_used+0x9132>
jae    809f47d <_IO_stdin_used+0x9179>
je     809f43a <_IO_stdin_used+0x9136>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
fs and %dh,%fs:%gs:(%eax)
aaa
aaa
aaa
and    %ch,0x6e(%edi)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f44e <_IO_stdin_used+0x914a>
and    $0xa73,%eax
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
arpl   %si,0x75(%ecx)
imul   $0x73797320,0x65(%edx),%esi
je     809f4b0 <_IO_stdin_used+0x91ac>
insl   (%dx),%es:(%edi)
and    %dh,%fs:0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f48f <_IO_stdin_used+0x918b>
and    %ah,0x73
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jbe    809f4cd <_IO_stdin_used+0x91c9>
jb     809f4d3 <_IO_stdin_used+0x91cf>
data16
jns    809f48d <_IO_stdin_used+0x9189>
jae    809f4e8 <_IO_stdin_used+0x91e4>
jae    809f4e5 <_IO_stdin_used+0x91e1>
gs
insl   (%dx),%es:(%edi)
and    %dh,%fs:0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f49c <_IO_stdin_used+0x9198>
je     809f4f7 <_IO_stdin_used+0x91f3>
jo     809f4e5 <_IO_stdin_used+0x91e1>
cmp    (%eax),%ah
and    $0x73,%eax
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%ecx)
jb     809f50c <_IO_stdin_used+0x9208>
jns    809f4db <_IO_stdin_used+0x91d7>
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
push   $0x2f74736f
jo     809f537 <_IO_stdin_used+0x9233>
jb     809f53e <_IO_stdin_used+0x923a>
cmp    (%eax),%ah
and    0x73253a73,%ah
and    (%edx),%bh
and    %ah,0x25282073
sub    %eax,%fs:(%eax)
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x74(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f51c <_IO_stdin_used+0x9218>
and    0x73253a73,%ah
and    (%eax),%ah
and    $0x46000073,%eax
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    809f579 <_IO_stdin_used+0x9275>
je     809f536 <_IO_stdin_used+0x9232>
jae    809f587 <_IO_stdin_used+0x9283>
arpl   %bp,0x65(%ebx)
je     809f53d <_IO_stdin_used+0x9239>
outsl  %ds:(%esi),(%dx)
jo     809f594 <_IO_stdin_used+0x9290>
imul   $0x73252220,0x6e(%edi),%ebp
cmp    0x203a2273,%ah
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
bound  %ebp,0x6e(%ecx)
and    %dh,%fs:0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f566 <_IO_stdin_used+0x9262>
and    0x73253a73,%ah
and    (%edx),%bh
and    %ah,0x73
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
imul   $0x6f206e65,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f58f <_IO_stdin_used+0x928b>
and    0x73253a73,%ah
and    (%edx),%bh
and    %ah,0x46000073
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%eax)
outsb  %ds:(%esi),(%dx)
fs
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x72(%ecx)
jb     809f600 <_IO_stdin_used+0x92fc>
jns    809f5db <_IO_stdin_used+0x92d7>
and    %ah,0x73
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     809f619 <_IO_stdin_used+0x9315>
jae    809f625 <_IO_stdin_used+0x9321>
insb   (%dx),%es:(%edi)
jbe    809f61e <_IO_stdin_used+0x931a>
and    %dh,0x6f(%eax)
jb     809f632 <_IO_stdin_used+0x932e>
and    %ah,(%edx)
and    $0x73253a73,%eax
and    (%edx),%bh
and    %ah,0x25282073
jae    809f5f8 <_IO_stdin_used+0x92f4>
add    %ah,(%eax)
and    %al,0x42(%ebp,%ebp,1)
jne    809f64a <_IO_stdin_used+0x9346>
and    %ch,0x6f(%esi)
je     809f5fc <_IO_stdin_used+0x92f8>
bound  %esi,0x69(%ebp)
insb   (%dx),%es:(%edi)
je     809f602 <_IO_stdin_used+0x92fe>
ja     809f64d <_IO_stdin_used+0x9349>
je     809f64e <_IO_stdin_used+0x934a>
and    %ch,0x6e796472
popa
insl   (%dx),%es:(%edi)
imul   $0x75206f73,0x20(%ebx),%esp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     809f66c <_IO_stdin_used+0x9368>
and    %dh,0x72(%eax)
imul   $0x62206120,0x74(%esi),%ebp
popa
arpl   %bp,0x74(%ebx)
jb     809f66e <_IO_stdin_used+0x936a>
arpl   %sp,0xa(%ebp)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    809f684 <_IO_stdin_used+0x9380>
and    %ch,%fs:0x6f(%esi)
je     809f63e <_IO_stdin_used+0x933a>
arpl   %si,0x65(%edx)
popa
je     809f689 <_IO_stdin_used+0x9385>
and    %ah,0x75(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x6c707564,%eax
gs
js     809f651 <_IO_stdin_used+0x934d>
jo     809f69c <_IO_stdin_used+0x9398>
jo     809f69a <_IO_stdin_used+0x9396>
add    %al,(%eax)
add    %al,0x6f(%ebx)
jne    809f6a8 <_IO_stdin_used+0x93a4>
and    %ch,%fs:0x6f(%esi)
je     809f662 <_IO_stdin_used+0x935e>
jae    809f6a9 <_IO_stdin_used+0x93a5>
je     809f666 <_IO_stdin_used+0x9362>
data16
jne    809f6b5 <_IO_stdin_used+0x93b1>
insb   (%dx),%es:(%edi)
sub    $0x6c707564,%eax
gs
js     809f672 <_IO_stdin_used+0x936e>
jo     809f6bd <_IO_stdin_used+0x93b9>
jo     809f6bb <_IO_stdin_used+0x93b7>
and    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
bound  %ebp,0x63(%edi,%ebp,2)
imul   $0x67,0x6e(%ecx),%ebp
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
daa
je     809f68a <_IO_stdin_used+0x9386>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x70(%ebp),%esi
jae    809f6e2 <_IO_stdin_used+0x93de>
arpl   %bp,0x65(%ebx)
je     809f698 <_IO_stdin_used+0x9394>
data16
jb     809f6ea <_IO_stdin_used+0x93e6>
insl   (%dx),%es:(%edi)
and    %ch,0x75(%ecx,%eiz,2)
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x64(%eax)
cmp    (%eax),%esp
insb   (%dx),%es:(%edi)
popa
jne    809f6f8 <_IO_stdin_used+0x93f4>
arpl   %bp,0x64(%eax)
and    %dh,0x75(%ebx)
jo     809f702 <_IO_stdin_used+0x93fe>
outsl  %ds:(%esi),(%dx)
jb     809f709 <_IO_stdin_used+0x9405>
and    %ch,0x6f(%esi)
je     809f6ba <_IO_stdin_used+0x93b6>
arpl   %bp,0x6d(%edi)
jo     809f708 <_IO_stdin_used+0x9404>
insb   (%dx),%es:(%edi)
gs and %ch,%fs:%gs:0x6e(%ecx)
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     809f719 <_IO_stdin_used+0x9415>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809f71d <_IO_stdin_used+0x9419>
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    809f6e3 <_IO_stdin_used+0x93df>
and    $0x25203a73,%eax
jae    809f6d4 <_IO_stdin_used+0x93d0>
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     809f741 <_IO_stdin_used+0x943d>
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     809f704 <_IO_stdin_used+0x9400>
jo     809f747 <_IO_stdin_used+0x9443>
imul   $0x732520,0x3a(%edx),%esi
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsw  %ds:(%esi),(%dx)
jb     809f769 <_IO_stdin_used+0x9465>
sub    %ch,(%ecx)
and    %dh,0x20(%edi,%ebp,2)
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x25203a73
jae    809f710 <_IO_stdin_used+0x940c>
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
gs
js     809f782 <_IO_stdin_used+0x947e>
arpl   %si,0x74(%ebp)
and    %dh,%gs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    809f74a <_IO_stdin_used+0x9446>
and    $0x25203a73,%eax
jae    809f73b <_IO_stdin_used+0x9437>
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     809f7a9 <_IO_stdin_used+0x94a5>
and    %ah,0x20(%ecx)
jo     809f7b2 <_IO_stdin_used+0x94ae>
jo     809f7b0 <_IO_stdin_used+0x94ac>
and    %dh,0x20(%edi,%ebp,2)
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x25203a73
jae    809f75b <_IO_stdin_used+0x9457>
add    %ah,0x65742073
jb     809f7d0 <_IO_stdin_used+0x94cc>
imul   $0x20646574,0x61(%esi),%ebp
popa
bound  %ebp,0x6f(%esi)
jb     809f7dd <_IO_stdin_used+0x94d9>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    809f795 <_IO_stdin_used+0x9491>
ja     809f7e0 <_IO_stdin_used+0x94dc>
je     809f7e1 <_IO_stdin_used+0x94dd>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     809f7ee <_IO_stdin_used+0x94ea>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%di)
jb     809f7fb <_IO_stdin_used+0x94f7>
jb     809f7c8 <_IO_stdin_used+0x94c4>
and    %ah,0x73
and    $0x65742073,%eax
jb     809f808 <_IO_stdin_used+0x9504>
imul   $0x20646574,0x61(%esi),%ebp
popa
bound  %ebp,0x6f(%esi)
jb     809f815 <_IO_stdin_used+0x9511>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    809f7cd <_IO_stdin_used+0x94c9>
ja     809f818 <_IO_stdin_used+0x9514>
je     809f819 <_IO_stdin_used+0x9515>
outsl  %ds:(%esi),(%dx)
jne    809f828 <_IO_stdin_used+0x9524>
and    %ah,0x6e(%ecx)
jns    809f7d9 <_IO_stdin_used+0x94d5>
gs
jb     809f82e <_IO_stdin_used+0x952a>
outsl  %ds:(%esi),(%dx)
jb     809f7df <_IO_stdin_used+0x94db>
insl   (%dx),%es:(%edi)
gs
jae    809f836 <_IO_stdin_used+0x9532>
popa
add    %al,%gs:(%bx,%si)
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     809f840 <_IO_stdin_used+0x953c>
and    %ah,0x75(%ecx)
je     809f845 <_IO_stdin_used+0x9541>
insb   (%dx),%es:(%edi)
popa
jne    809f848 <_IO_stdin_used+0x9544>
arpl   %bp,0x20(%eax)
ja     809f847 <_IO_stdin_used+0x9543>
outsb  %gs:(%esi),(%dx)
and    %dh,0x65(%ebx)
je     809f85b <_IO_stdin_used+0x9557>
imul   $0x6e550000,0x0(%eax,%eax,1),%esp
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     809f864 <_IO_stdin_used+0x9560>
and    %ah,0x75(%ecx)
je     809f869 <_IO_stdin_used+0x9565>
insb   (%dx),%es:(%edi)
popa
jne    809f86c <_IO_stdin_used+0x9568>
arpl   %bp,0x20(%eax)
popa
and    %ah,0x75(%edx,%eiz,2)
jae    809f835 <_IO_stdin_used+0x9531>
fs
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %dh,0x69(%edi)
je     809f87b <_IO_stdin_used+0x9577>
outsl  %ds:(%esi),(%dx)
jne    809f88a <_IO_stdin_used+0x9586>
and    %ah,0x20(%ecx)
and    $0x44,%al
dec    %ecx
push   %ebx
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
and    %ah,0x6f(%esi)
jb     809f846 <_IO_stdin_used+0x9542>
pop    %eax
xor    %esi,(%ecx)
add    %al,(%eax)
add    %ch,(%edi)
jne    809f8b6 <_IO_stdin_used+0x95b2>
jb     809f874 <_IO_stdin_used+0x9570>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
das
jae    809f8b5 <_IO_stdin_used+0x95b1>
popa
jb     809f8b5 <_IO_stdin_used+0x95b1>
cmp    (%edi),%ch
jne    809f8c7 <_IO_stdin_used+0x95c3>
jb     809f885 <_IO_stdin_used+0x9581>
jae    809f8c0 <_IO_stdin_used+0x95bc>
popa
jb     809f8c0 <_IO_stdin_used+0x95bc>
cmp    (%edi),%ch
jne    809f8d2 <_IO_stdin_used+0x95ce>
jb     809f890 <_IO_stdin_used+0x958c>
jae    809f8cb <_IO_stdin_used+0x95c7>
popa
jb     809f8cb <_IO_stdin_used+0x95c7>
cmp    (%edi),%ch
insb   (%dx),%es:(%edi)
imul   $0x6e6e6163,0x0(%edx),%esp
outsl  %ds:(%esi),(%dx)
je     809f893 <_IO_stdin_used+0x958f>
jne    809f8e8 <_IO_stdin_used+0x95e4>
and    %dh,%gs:0x65(%eax,%ebp,2)
and    %ah,(%edx)
je     809f8eb <_IO_stdin_used+0x95e7>
jo     809f8e4 <_IO_stdin_used+0x95e0>
imul   $0x74706f20,0x22(%edx),%esi
imul   $0x726f6620,0x6e(%edi),%ebp
and    %ah,0x6e(%ecx)
and    %ah,0x64(%ecx)
fs
jb     809f8fc <_IO_stdin_used+0x95f8>
jae    809f90c <_IO_stdin_used+0x9608>
and    %dh,0x20(%edi,%ebp,2)
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x74(%eax,%eiz,1)
outsl  %ds:(%esi),(%dx)
sub    $0x20,%al
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
jns    809f8ce <_IO_stdin_used+0x95ca>
imul   $0x61206e61,0x20(%esi),%ebp
fs
fs
jb     809f91e <_IO_stdin_used+0x961a>
jae    809f92e <_IO_stdin_used+0x962a>
and    %dh,0x20(%edi,%ebp,2)
insb   (%dx),%es:(%edi)
imul   $0x6f206e65,0x74(%ebx),%esi
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
daa
je     809f8f2 <_IO_stdin_used+0x95ee>
jae    809f944 <_IO_stdin_used+0x9640>
arpl   %bp,%gs:0x66(%ecx)
jns    809f8fa <_IO_stdin_used+0x95f6>
bound  %ebp,0x74(%edi)
push   $0x61702220
je     809f94c <_IO_stdin_used+0x9648>
and    (%eax),%ah
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:(%edx)
popa
bound  %esi,0x74(%ebx)
jb     809f952 <_IO_stdin_used+0x964e>
arpl   %si,0x20(%edx,%eiz,1)
outsl  %ds:(%esi),(%dx)
jo     809f96c <_IO_stdin_used+0x9668>
imul   $0x6e692073,0x6e(%edi),%ebp
and    %ah,0x6e(%ecx)
and    %ah,0x64(%ecx)
fs
jb     809f96d <_IO_stdin_used+0x9669>
jae    809f97d <_IO_stdin_used+0x9679>
add    %dh,0x61(%eax)
je     809f977 <_IO_stdin_used+0x9673>
and    %ch,0x72(%edi)
and    %ah,0x62(%ecx)
jae    809f98b <_IO_stdin_used+0x9687>
jb     809f97a <_IO_stdin_used+0x9676>
arpl   %si,0x75(%eax,%eax,1)
outsb  %ds:(%esi),(%dx)
imul   $0x636578,0x65(%eax),%edi
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    809f950 <_IO_stdin_used+0x964c>
jo     809f993 <_IO_stdin_used+0x968f>
je     809f99c <_IO_stdin_used+0x9698>
and    %dh,0x70(%ebx)
arpl   %bp,%gs:0x66(%ecx)
imul   $0x67726100,0x64(%ebp),%esp
jbe    809f969 <_IO_stdin_used+0x9665>
jne    809f946 <_IO_stdin_used+0x9642>
jne    809f9b6 <_IO_stdin_used+0x96b2>
imul   $0x3a636578,0x65(%eax),%edi
jo     809f9b2 <_IO_stdin_used+0x96ae>
je     809f9bb <_IO_stdin_used+0x96b7>
cmp    $0x72612c00,%eax
addr16 jbe 809f980 <_IO_stdin_used+0x967c>
jne    809f99a <_IO_stdin_used+0x9696>
and    $0x6f430073,%eax
jne    809f9d0 <_IO_stdin_used+0x96cc>
and    %ch,%fs:0x6f(%esi)
je     809f98a <_IO_stdin_used+0x9686>
addr16
gs
je     809f98e <_IO_stdin_used+0x968a>
jo     809f9d1 <_IO_stdin_used+0x96cd>
jae    809f9e5 <_IO_stdin_used+0x96e1>
ja     809f9e3 <_IO_stdin_used+0x96df>
jb     809f9da <_IO_stdin_used+0x96d6>
and    %ah,0x74(%ecx,%eiz,2)
popa
bound  %esp,0x73(%ecx)
and    %ch,%gs:0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     809f9f3 <_IO_stdin_used+0x96ef>
popa
je     809f9f2 <_IO_stdin_used+0x96ee>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%esi)
jb     809f9b0 <_IO_stdin_used+0x96ac>
push   %ebp
dec    %ecx
inc    %esp
and    %ch,0x66(%edi)
and    %ah,0x75(%ebx)
jb     809fa0d <_IO_stdin_used+0x9709>
outsb  %gs:(%esi),(%dx)
je     809f9bf <_IO_stdin_used+0x96bb>
jo     809fa13 <_IO_stdin_used+0x970f>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    809f9e1 <_IO_stdin_used+0x96dd>
and    %ah,0x4c000a73
dec    %ecx
push   %ebx
push   %esp
inc    %ebp
dec    %esi
pop    %edi
push   %eax
dec    %ecx
inc    %esp
add    %cl,0x53(%ecx,%ecx,2)
push   %esp
inc    %ebp
dec    %esi
pop    %edi
inc    %esi
inc    %esp
push   %ebx
add    %cl,0x4f(%esi)
push   %esp
dec    %ecx
inc    %esi
pop    %ecx
pop    %edi
push   %ebx
dec    %edi
inc    %ebx
dec    %ebx
inc    %ebp
push   %esp
add    %ch,(%edi)
jb     809fa48 <_IO_stdin_used+0x9744>
outsb  %ds:(%esi),(%dx)
das
jae    809fa50 <_IO_stdin_used+0x974c>
jae    809fa4d <_IO_stdin_used+0x9749>
gs
insl   (%dx),%es:(%edi)
fs
das
jae    809fa58 <_IO_stdin_used+0x9754>
jae    809fa55 <_IO_stdin_used+0x9751>
gs
insl   (%dx),%es:(%edi)
das
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
inc    %edx
dec    %esp
dec    %edi
inc    %ebx
dec    %ebx
pop    %edi
dec    %edi
dec    %esi
pop    %edi
inc    %ecx
inc    %edx
dec    %edi
push   %edx
push   %esp
add    %al,(%eax)
add    %al,(%eax)
and    %ah,(%eax)
push   %eax
jb     809fa70 <_IO_stdin_used+0x976c>
arpl   %sp,0x73(%ebp)
jae    809fa26 <_IO_stdin_used+0x9722>
and    $0x7320756c,%eax
insb   (%dx),%es:(%edi)
gs
gs
jo     809fa79 <_IO_stdin_used+0x9775>
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%bp)
jb     809fa37 <_IO_stdin_used+0x9733>
bound  %esp,%fs:(%bx,%si)
popa
je     809fa92 <_IO_stdin_used+0x978e>
popa
arpl   %bp,0xa(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
jb     809fa8e <_IO_stdin_used+0x978a>
cs
data16
jb     809fa90 <_IO_stdin_used+0x978c>
gs
fs
gs
jae    809fa9b <_IO_stdin_used+0x9797>
je     809faa1 <_IO_stdin_used+0x979d>
jo     809fa62 <_IO_stdin_used+0x975e>
inc    %esp
inc    %edx
jne    809faab <_IO_stdin_used+0x97a7>
cs
inc    %ebp
jb     809faae <_IO_stdin_used+0x97aa>
outsl  %ds:(%esi),(%dx)
jb     809fa6d <_IO_stdin_used+0x9769>
inc    %esi
imul   $0x74736978,0x45(%ebp,%eiz,2),%ebp
jae    809fa4a <_IO_stdin_used+0x9746>
add    %al,(%eax)
sub    %bh,%cl
cld
(bad)
call   2109f761 <_end+0x18fe6e11>
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
push   %eax
clc
cld
(bad)
call   3109f791 <_end+0x28fe6e41>
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
decl   (%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
jmp    *%eax
clc
cld
jmp    *%eax
clc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
(bad)
clc
clc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
(bad)
clc
clc
cld
call   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
jmp    *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
push   %eax
clc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
ljmp   *(%eax)
stc
cld
incl   (%eax)
stc
cld
pushl  (%eax)
stc
cld
incl   0x42(%ecx)
inc    %ebx
inc    %esp
inc    %ebp
inc    %esi
inc    %edi
dec    %eax
dec    %ecx
dec    %edx
dec    %ebx
dec    %esp
dec    %ebp
dec    %esi
dec    %edi
push   %eax
push   %ecx
push   %edx
push   %ebx
push   %esp
push   %ebp
push   %esi
push   %edi
pop    %eax
pop    %ecx
pop    %edx
xor    %dh,(%ecx)
xor    (%ebx),%dh
xor    $0x35,%al
ss
aaa
cmp    %bh,(%ecx)
popa
bound  %esp,0x64(%ebx)
gs
addr16 pushw $0x6a69
imul   $0x6f,0x6e(%ebp,%ebp,2),%ebp
jo     809fcc6 <_IO_stdin_used+0x99c2>
jb     809fcca <_IO_stdin_used+0x99c6>
je     809fcce <_IO_stdin_used+0x99ca>
jbe    809fcd2 <_IO_stdin_used+0x99ce>
js     809fcd6 <_IO_stdin_used+0x99d2>
jp     809fc5f <_IO_stdin_used+0x995b>
add    %al,(%eax)
add    %al,%al
(bad)
(bad)
(bad)
fild   0x0(%ecx)
add    %bh,0x43(%edi)
arpl   %bp,0x75(%edi)
insb   (%dx),%es:(%edi)
and    %ch,%fs:0x6f(%esi)
je     809fc96 <_IO_stdin_used+0x9992>
imul   $0x7720,0x64(%esi),%bp
popa
je     809fce2 <_IO_stdin_used+0x99de>
push   $0x20702520
je     809fcf5 <_IO_stdin_used+0x99f1>
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809fcf2 <_IO_stdin_used+0x99ee>
or     (%eax),%al
add    %ah,0x6f(%ebx)
jne    809fd00 <_IO_stdin_used+0x99fc>
and    %ch,%fs:0x6f(%esi)
je     809fcba <_IO_stdin_used+0x99b6>
imul   $0x7420,0x64(%esi),%bp
imul   $0x2074756f,0x65(%ebp),%ebp
and    $0x6f742070,%eax
and    %dh,0x65(%edx)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    809fd18 <_IO_stdin_used+0x9a14>
or     (%eax),%al
add    %al,(%eax)
add    %ch,0x6e(%ecx)
jbe    809fd1d <_IO_stdin_used+0x9a19>
insb   (%dx),%es:(%edi)
imul   $0x65757165,0x72(%eax,%eiz,1),%esp
jae    809fd3b <_IO_stdin_used+0x9a37>
sub    $0x20,%al
jae    809fd3a <_IO_stdin_used+0x9a36>
arpl   %bp,0x65(%ebx)
je     809fcf0 <_IO_stdin_used+0x99ec>
data16
and    %ah,%fs:0x6f6e2064
je     809fcfa <_IO_stdin_used+0x99f6>
outsl  %ds:(%esi),(%dx)
jo     809fd42 <_IO_stdin_used+0x9a3e>
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
push   %ebp
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x73(%edi,%ebp,2)
gs and %dh,%fs:%gs:0x75(%ecx)
outsl  %ds:(%esi),(%dx)
je     809fd53 <_IO_stdin_used+0x9a4f>
jae    809fd10 <_IO_stdin_used+0x9a0c>
imul   $0x6d6d6f63,0x20(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
add    %cl,%gs:0x6f(%esi)
and    %dh,0x6b(%edi,%ebp,2)
outsb  %gs:(%esi),(%dx)
jae    809fd2a <_IO_stdin_used+0x9a26>
outsw  %ds:(%esi),(%dx)
jne    809fd7c <_IO_stdin_used+0x9a78>
and    %ch,%fs:0x6e(%ecx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6e(%ecx,%ebp,2)
add    %al,%gs:0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsw  %fs:(%esi),(%dx)
jo     809fd94 <_IO_stdin_used+0x9a90>
outsb  %ds:(%esi),(%dx)
and    %ah,0x64(%esi)
and    %ah,0x25203a64
jae    809fd3b <_IO_stdin_used+0x9a37>
and    $0xa756c,%eax
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
ja     809fdbe <_IO_stdin_used+0x9aba>
imul   $0x22206f74,0x20(%ebp,%eiz,2),%esi
and    $0x203a2273,%eax
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %bp,0x73(%edi,%ebp,2)
and    %ah,%gs:(%edx)
and    $0x203a2273,%eax
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsw  %ds:(%esi),(%dx)
jb     809fdee <_IO_stdin_used+0x9aea>
and    %ah,0x65(%ecx,%eiz,2)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
and    $0x42440073,%eax
push   %ebp
push   %ebx
pop    %edi
inc    %esp
inc    %ebp
inc    %edx
push   %ebp
inc    %edi
pop    %edi
dec    %edi
push   %ebp
push   %esp
push   %eax
push   %ebp
push   %esp
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    809fe12 <_IO_stdin_used+0x9b0e>
je     809fdcf <_IO_stdin_used+0x9acb>
inc    %edi
dec    %ecx
inc    %esp
and    %dh,0x20(%edi,%ebp,2)
and    $0x203a756c,%eax
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    809fe2f <_IO_stdin_used+0x9b2b>
je     809fdec <_IO_stdin_used+0x9ae8>
push   %ebp
dec    %ecx
inc    %esp
and    %dh,0x20(%edi,%ebp,2)
and    $0x203a756c,%eax
and    $0x61460073,%eax
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
addr16
gs
je     809fe09 <_IO_stdin_used+0x9b05>
data16
and    %ch,%fs:0x6d(%ecx,%ebp,2)
imul   $0x64007325,0x20(%edx,%edi,1),%esi
bound  %esi,0x73(%ebp)
add    %ch,(%edi)
jbe    809fe5f <_IO_stdin_used+0x9b5b>
jb     809fe2f <_IO_stdin_used+0x9b2b>
jb     809fe77 <_IO_stdin_used+0x9b73>
outsb  %ds:(%esi),(%dx)
das
arpl   %bp,0x6e(%edi)
jae    809fe78 <_IO_stdin_used+0x9b74>
insb   (%dx),%es:(%edi)
gs
das
add    %ch,(%edi)
jo     809fe82 <_IO_stdin_used+0x9b7e>
outsl  %ds:(%esi),(%dx)
arpl   %bp,(%edi)
and    $0x632f646c,%eax
insl   (%dx),%es:(%edi)
fs
insb   (%dx),%es:(%edi)
imul   $0x69614600,0x65(%esi),%ebp
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
jb     809fe90 <_IO_stdin_used+0x9b8c>
popa
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,(%edx)
and    $0x203a2273,%eax
and    $0x72470073,%eax
outsl  %ds:(%esi),(%dx)
jne    809feb1 <_IO_stdin_used+0x9bad>
and    %ah,0x6e752073
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x72(%edi)
and    %ah,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
imul   $0x69,(%eax),%esp
je     809fe82 <_IO_stdin_used+0x9b7e>
jne    809fed4 <_IO_stdin_used+0x9bd0>
or     (%eax),%al
add    %al,(%eax)
push   %eax
jb     809fed4 <_IO_stdin_used+0x9bd0>
outsb  %ds:(%esi),(%dx)
je     809fed7 <_IO_stdin_used+0x9bd3>
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%di)
jae    809fee8 <_IO_stdin_used+0x9be4>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    809fe9d <_IO_stdin_used+0x9b99>
push   %eax
dec    %ecx
inc    %esp
cmp    (%eax),%ah
imul   $0x7720746f,%fs:0x6e(%eax,%eiz,1),%esp
77
jb     809fef6 <_IO_stdin_used+0x9bf2>
je     809fef4 <_IO_stdin_used+0x9bf0>
and    %ah,0x6e(%ebp)
outsl  %ds:(%esi),(%dx)
jne    809fefc <_IO_stdin_used+0x9bf8>
push   $0x74796220
gs
jae    809fea7 <_IO_stdin_used+0x9ba3>
add    %al,(%eax)
add    %al,0x6f(%ebx)
jne    809ff10 <_IO_stdin_used+0x9c0c>
and    %ch,%fs:0x6f(%esi)
je     809feca <_IO_stdin_used+0x9bc6>
arpl   %bp,0x64(%eax)
imul   $0x6f742029,0x28(%edx),%esi
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     809feda <_IO_stdin_used+0x9bd6>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    809fec4 <_IO_stdin_used+0x9bc0>
push   %ebp
jae    809ff2c <_IO_stdin_used+0x9c28>
jb     809fee9 <_IO_stdin_used+0x9be5>
daa
and    $0x64202773,%eax
outsl  %ds:(%esi),(%dx)
gs
jae    809fef3 <_IO_stdin_used+0x9bef>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     809fef7 <_IO_stdin_used+0x9bf3>
popa
jo     809ff4a <_IO_stdin_used+0x9c46>
gs
popa
jb     809fefe <_IO_stdin_used+0x9bfa>
je     809ff4f <_IO_stdin_used+0x9c4b>
and    %ah,0x78(%ebp)
imul   $0x6146003f,0x74(%ebx),%esi
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
jb     809ff64 <_IO_stdin_used+0x9c60>
jo     809ff17 <_IO_stdin_used+0x9c13>
jae    809ff6e <_IO_stdin_used+0x9c6a>
jo     809ff6b <_IO_stdin_used+0x9c67>
insb   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     809ff63 <_IO_stdin_used+0x9c5f>
jb     809ff7d <_IO_stdin_used+0x9c79>
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    809ff7a <_IO_stdin_used+0x9c76>
jae    809ff46 <_IO_stdin_used+0x9c42>
and    %ah,0xa73
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    809ff85 <_IO_stdin_used+0x9c81>
je     809ff42 <_IO_stdin_used+0x9c3e>
data16
and    %ch,%fs:0x6d(%ecx,%ebp,2)
imul   $0x7525206f,0x74(%eax,%eiz,1),%esi
cmp    (%eax),%ah
and    $0x73,%eax
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     809ffa9 <_IO_stdin_used+0x9ca5>
jae    809ffba <_IO_stdin_used+0x9cb6>
outsl  %ds:(%esi),(%dx)
jb     809ffae <_IO_stdin_used+0x9caa>
and    %ch,0x6c(%edi)
and    %ah,%fs:0x64(%esi)
and    %ch,0x6d(%ecx,%ebp,2)
imul   $0x7325,0x20(%edx,%edi,1),%esi
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     809ffcd <_IO_stdin_used+0x9cc9>
popa
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    809ff95 <_IO_stdin_used+0x9c91>
and    0x203a2273,%ah
and    $0x73,%eax
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    809fff0 <_IO_stdin_used+0x9cec>
and    %ch,%fs:0x6f(%esi)
je     809ffaa <_IO_stdin_used+0x9ca6>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80a0012 <_IO_stdin_used+0x9d0e>
and    %ah,0x6f(%esi)
jb     809ffbe <_IO_stdin_used+0x9cba>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    809ffc8 <_IO_stdin_used+0x9cc4>
imul   $0x726f7461,0x72(%ebp,%eiz,2),%esi
add    %al,(%eax)
add    %al,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80a0036 <_IO_stdin_used+0x9d32>
and    %dh,0x20(%edi,%ebp,2)
jb     80a0028 <_IO_stdin_used+0x9d24>
popa
and    %ah,%fs:0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    809fff0 <_IO_stdin_used+0x9cec>
outsb  %gs:(%esi),(%dx)
je     80a0046 <_IO_stdin_used+0x9d42>
jns    809ffd6 <_IO_stdin_used+0x9cd2>
das
jb     80a004e <_IO_stdin_used+0x9d4a>
outsb  %ds:(%esi),(%dx)
das
jae    80a0056 <_IO_stdin_used+0x9d52>
jae    80a0053 <_IO_stdin_used+0x9d4f>
gs
insl   (%dx),%es:(%edi)
fs
das
jae    80a004a <_IO_stdin_used+0x9d46>
popa
je     80a005b <_IO_stdin_used+0x9d57>
das
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
je     80a005f <_IO_stdin_used+0x9d5b>
jb     80a0069 <_IO_stdin_used+0x9d65>
imul   $0x61657320,0x65(%esi),%ebp
je     80a0078 <_IO_stdin_used+0x9d74>
and    %ch,0x66(%edi)
and    %dh,0x73(%ebp)
gs
jb     80a002e <_IO_stdin_used+0x9d2a>
and    0x3a22756c,%ah
and    %ah,0x6f430073
jne    80a0088 <_IO_stdin_used+0x9d84>
and    %ch,%fs:0x6f(%esi)
je     80a0042 <_IO_stdin_used+0x9d3e>
addr16
gs
je     80a0046 <_IO_stdin_used+0x9d42>
jae    80a00a1 <_IO_stdin_used+0x9d9d>
jae    80a009e <_IO_stdin_used+0x9d9a>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x74(%ecx,%eiz,2)
popa
bound  %esp,0x73(%ecx)
gs add %al,%cs:%gs:(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
ja     80a00b6 <_IO_stdin_used+0x9db2>
imul   $0x61746164,0x20(%ebp,%eiz,2),%esi
and    %dh,0x20(%edi,%ebp,2)
jo     80a00bb <_IO_stdin_used+0x9db7>
jo     80a00b9 <_IO_stdin_used+0x9db5>
and    %ecx,(%edx)
add    %al,(%eax)
ja     80a00bb <_IO_stdin_used+0x9db7>
imul   $0x20292864,0x69(%eax,%esi,2),%esi
jb     80a00c9 <_IO_stdin_used+0x9dc5>
popa
jo     80a00cc <_IO_stdin_used+0x9dc8>
and    %dh,%fs:0x69(%eax)
and    %ah,%fs:0x68742064
popa
je     80a0095 <_IO_stdin_used+0x9d91>
ja     80a00dc <_IO_stdin_used+0x9dd8>
daa
jbe    80a00df <_IO_stdin_used+0x9ddb>
and    %ch,0x65(%esi)
jbe    80a00e4 <_IO_stdin_used+0x9de0>
jb     80a00a1 <_IO_stdin_used+0x9d9d>
push   $0x64726165
and    %ch,0x66(%edi)
or     (%eax),%al
add    %dh,0x6e(%ebp)
gs
js     80a0101 <_IO_stdin_used+0x9dfd>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %dh,0x61(%edi)
imul   $0x20292864,0x69(%eax,%esi,2),%esi
popaw
imul   $0x6e692065,0x72(%ebp,%esi,2),%ebp
and    %ah,0x68(%ebx)
arpl   %bp,%gs:0x5f(%ebx)
bound  %esp,0x62(%ecx)
jns    80a012a <_IO_stdin_used+0x9e26>
imul   $0x746e6576,0x65(%edi,%ebx,2),%esi
jae    80a00e9 <_IO_stdin_used+0x9de5>
sub    %edi,(%edx)
and    %ah,0x46000a73
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     80a0139 <_IO_stdin_used+0x9e35>
popa
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x68(%ebx)
imul   $0x65706970,0x20(%esp,%eiz,2),%ebp
and    %ch,(%eax)
and    $0x6f002973,%eax
jb     80a0156 <_IO_stdin_used+0x9e52>
cs
data16
jb     80a0158 <_IO_stdin_used+0x9e54>
gs
fs
gs
jae    80a0163 <_IO_stdin_used+0x9e5f>
je     80a0169 <_IO_stdin_used+0x9e65>
jo     80a012a <_IO_stdin_used+0x9e26>
inc    %esp
inc    %edx
jne    80a0173 <_IO_stdin_used+0x9e6f>
cs
inc    %ebp
jb     80a0176 <_IO_stdin_used+0x9e72>
outsl  %ds:(%esi),(%dx)
jb     80a0135 <_IO_stdin_used+0x9e31>
push   %ebx
jo     80a016b <_IO_stdin_used+0x9e67>
ja     80a017a <_IO_stdin_used+0x9e76>
cs
inc    %esi
popa
imul   $0x69614600,0x64(%ebp,%eiz,2),%ebp
insb   (%dx),%es:(%edi)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
jb     80a0185 <_IO_stdin_used+0x9e81>
popa
and    %ah,%fs:0x74(%ecx,%eiz,2)
popa
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x64(%esi)
and    %ah,0x25203a64
jae    80a0141 <_IO_stdin_used+0x9e3d>
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     80a01a9 <_IO_stdin_used+0x9ea5>
popa
and    %ah,%fs:0x72(%ecx)
and    %ah,0x72(%bp)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x64(%esi)
and    %ah,0x25203a64
jae    80a0164 <_IO_stdin_used+0x9e60>
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%ebp)
jae    80a01db <_IO_stdin_used+0x9ed7>
popa
and    %dh,%gs:0x65(%bp,%si)
arpl   %sp,0x69(%ebp)
jbe    80a01d8 <_IO_stdin_used+0x9ed4>
and    %ah,%fs:0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x61(%edx)
bound  %edi,0x73(%ecx)
imul   $0x72702072,0x65(%esp,%esi,2),%esi
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80a0197 <_IO_stdin_used+0x9e93>
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jb     80a0201 <_IO_stdin_used+0x9efd>
popa
and    %dl,%fs:0x49(%eax)
inc    %esp
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x64(%esi)
and    %ah,0x25203a64
jae    80a01bc <_IO_stdin_used+0x9eb8>
add    %al,(%eax)
inc    %edx
popa
bound  %edi,0x73(%ecx)
imul   $0x72702072,0x65(%esp,%esi,2),%esi
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80a01e7 <_IO_stdin_used+0x9ee3>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80a01eb <_IO_stdin_used+0x9ee7>
popa
jbe    80a022f <_IO_stdin_used+0x9f2b>
imul   $0x7420656c,0x62(%ecx,%eiz,2),%ebp
outsl  %ds:(%esi),(%dx)
and    %ah,0x65(%edx)
and    %dh,0x65(%edx)
popa
jo     80a0245 <_IO_stdin_used+0x9f41>
cmp    %fs:(%eax),%esp
jae    80a024d <_IO_stdin_used+0x9f49>
outsl  %ds:(%esi),(%dx)
jne    80a0254 <_IO_stdin_used+0x9f50>
and    %ch,%fs:0x6f(%esi)
je     80a020e <_IO_stdin_used+0x9f0a>
push   $0x65707061
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
add    %al,(%eax)
push   %ebp
outsb  %ds:(%esi),(%dx)
gs
js     80a026d <_IO_stdin_used+0x9f69>
arpl   %si,%gs:0x64(%ebp,%eiz,2)
and    %ah,0x72(%ebp)
jb     80a0276 <_IO_stdin_used+0x9f72>
jb     80a0229 <_IO_stdin_used+0x9f25>
and    $0x6e692064,%eax
and    %dh,0x61(%edi)
imul   $0x20292864,0x69(%eax,%esi,2),%esi
outsw  %ds:(%esi),(%dx)
jb     80a023d <_IO_stdin_used+0x9f39>
bound  %esp,0x62(%ecx)
jns    80a0295 <_IO_stdin_used+0x9f91>
imul   $0x25203a72,0x65(%esp,%esi,2),%esi
jae    80a0236 <_IO_stdin_used+0x9f32>
add    %al,(%eax)
add    %al,(%eax)
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
gs
js     80a02a2 <_IO_stdin_used+0x9f9e>
arpl   %si,0x74(%ebp)
and    %dh,%gs:0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 80a02a9 <_IO_stdin_used+0x9fa5>
insl   (%dx),%es:(%edi)
and    %ah,0x25203a73
jae    80a0251 <_IO_stdin_used+0x9f4d>
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsw  %ds:(%esi),(%dx)
jb     80a02cd <_IO_stdin_used+0x9fc9>
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     80a0289 <_IO_stdin_used+0x9f85>
jo     80a02dd <_IO_stdin_used+0x9fd9>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80a0291 <_IO_stdin_used+0x9f8d>
and    $0x25203a73,%eax
jae    80a0278 <_IO_stdin_used+0x9f74>
push   %eax
jb     80a02ea <_IO_stdin_used+0x9fe6>
arpl   %sp,0x73(%ebp)
jae    80a02a0 <_IO_stdin_used+0x9f9c>
and    $0x78652073,%eax
imul   $0x74697720,0x64(%ebp,%eiz,2),%esi
push   $0x61747320
je     80a0309 <_IO_stdin_used+0xa005>
jae    80a02b6 <_IO_stdin_used+0x9fb2>
and    $0x64,%eax
add    %dl,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80a02c4 <_IO_stdin_used+0x9fc0>
and    $0x78652073,%eax
imul   $0x6572202c,0x64(%ebp,%eiz,2),%esi
popa
jae    80a0323 <_IO_stdin_used+0xa01f>
outsb  %ds:(%esi),(%dx)
and    %dh,0x6e(%ebp)
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,0x61(%esi)
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
arpl   %si,0x65(%edx)
popa
je     80a0335 <_IO_stdin_used+0xa031>
and    %dh,0x69(%eax)
jo     80a033a <_IO_stdin_used+0xa036>
and    %ah,0x6f(%esi)
jb     80a02fa <_IO_stdin_used+0x9ff6>
arpl   %bp,0x6d(%edi)
insl   (%dx),%es:(%edi)
jne    80a034e <_IO_stdin_used+0xa04a>
imul   $0x676e6974,0x61(%ebx),%esp
and    %dh,0x69(%edi)
je     80a0354 <_IO_stdin_used+0xa050>
and    %ah,0x68(%ebx)
imul   $0x636f7270,0x20(%esp,%eiz,2),%ebp
gs
jae    80a036d <_IO_stdin_used+0xa069>
and    %ch,(%eax)
and    $0x6f002973,%eax
jb     80a036a <_IO_stdin_used+0xa066>
cs
data16
jb     80a036c <_IO_stdin_used+0xa068>
gs
fs
gs
jae    80a0377 <_IO_stdin_used+0xa073>
je     80a037d <_IO_stdin_used+0xa079>
jo     80a033e <_IO_stdin_used+0xa03a>
inc    %esp
inc    %edx
jne    80a0387 <_IO_stdin_used+0xa083>
cs
inc    %ebp
jb     80a038a <_IO_stdin_used+0xa086>
outsl  %ds:(%esi),(%dx)
jb     80a0349 <_IO_stdin_used+0xa045>
push   %ebx
jo     80a037f <_IO_stdin_used+0xa07b>
ja     80a038e <_IO_stdin_used+0xa08a>
cs
inc    %esi
outsl  %ds:(%esi),(%dx)
jb     80a0390 <_IO_stdin_used+0xa08c>
inc    %esi
popa
imul   $0x746f4e00,0x64(%ebp,%eiz,2),%ebp
and    %ah,0x6e(%ebp)
outsl  %ds:(%esi),(%dx)
jne    80a039c <_IO_stdin_used+0xa098>
push   $0x6c696620
and    %ah,%gs:0x73(%ebp,%eiz,2)
arpl   %si,0x69(%edx)
jo     80a03b8 <_IO_stdin_used+0xa0b4>
outsl  %ds:(%esi),(%dx)
jb     80a03ba <_IO_stdin_used+0xa0b6>
and    %dh,0x20(%edi,%ebp,2)
arpl   %si,0x65(%edx)
popa
je     80a03b6 <_IO_stdin_used+0xa0b2>
and    %dh,0x69(%eax)
jo     80a03bb <_IO_stdin_used+0xa0b7>
and    %ch,0x6e(%ecx)
and    %ah,0x61(%edx)
bound  %edi,0x73(%ecx)
imul   $0x72702072,0x65(%esp,%esi,2),%esi
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80a0377 <_IO_stdin_used+0xa073>
add    %dl,0x72(%eax)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80a0396 <_IO_stdin_used+0xa092>
and    $0x65722073,%eax
arpl   %sp,0x69(%ebp)
jbe    80a03e5 <_IO_stdin_used+0xa0e1>
and    %dh,%fs:0x69(%ebx)
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ah,0x72500064
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
jae    80a03b4 <_IO_stdin_used+0xa0b0>
and    $0x78652073,%eax
imul   $0x6e626120,0x64(%ebp,%eiz,2),%esi
outsl  %ds:(%esi),(%dx)
jb     80a0411 <_IO_stdin_used+0xa10d>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
jns    80a03a9 <_IO_stdin_used+0xa0a5>
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
outsw  %ds:(%esi),(%dx)
jb     80a0422 <_IO_stdin_used+0xa11e>
and    %ch,(%eax)
and    $0x5f002973,%eax
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jo     80a0434 <_IO_stdin_used+0xa130>
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    %ch,(%ecx)
and    %ah,0x72(%ebp)
jb     80a043d <_IO_stdin_used+0xa139>
jb     80a040a <_IO_stdin_used+0xa106>
and    %ah,0xa73
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
and    %al,0x42(%ebp,%ebp,1)
jne    80a0453 <_IO_stdin_used+0xa14f>
and    %ah,0x64(%ecx)
fs
jb     80a044b <_IO_stdin_used+0xa147>
jae    80a045b <_IO_stdin_used+0xa157>
sub    $0x20,%al
jo     80a0451 <_IO_stdin_used+0xa14d>
jb     80a0451 <_IO_stdin_used+0xa14d>
outsb  %gs:(%esi),(%dx)
je     80a0412 <_IO_stdin_used+0xa10e>
arpl   %bp,0x61(%eax)
jb     80a0458 <_IO_stdin_used+0xa154>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x61(%edi)
jae    80a0420 <_IO_stdin_used+0xa11c>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80a0424 <_IO_stdin_used+0xa120>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80a0470 <_IO_stdin_used+0xa16c>
and    %ah,%fs:0x79(%edx)
and    %dh,0x6f(%edi,%esi,2)
and    %ch,0x65(%eax)
js     80a0438 <_IO_stdin_used+0xa134>
imul   $0x7374,%fs:0x69(%edi),%esp
dec    %ecx
outsb  %ds:(%esi),(%dx)
and    %al,0x42(%ebp,%ebp,1)
jne    80a049b <_IO_stdin_used+0xa197>
and    %ah,0x64(%ecx)
fs
jb     80a0493 <_IO_stdin_used+0xa18f>
jae    80a04a3 <_IO_stdin_used+0xa19f>
sub    $0x20,%al
jo     80a0499 <_IO_stdin_used+0xa195>
jb     80a0499 <_IO_stdin_used+0xa195>
outsb  %gs:(%esi),(%dx)
je     80a045a <_IO_stdin_used+0xa156>
arpl   %bp,0x61(%eax)
jb     80a04a0 <_IO_stdin_used+0xa19c>
arpl   %si,0x72(%ebp,%eiz,2)
and    %dh,0x61(%edi)
jae    80a0468 <_IO_stdin_used+0xa164>
outsw  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80a04b4 <_IO_stdin_used+0xa1b0>
and    %ah,%fs:0x79(%edx)
and    %ah,0x68(%ebx)
popa
jb     80a04ba <_IO_stdin_used+0xa1b6>
arpl   %si,0x72(%ebp,%eiz,2)
jae    80a047f <_IO_stdin_used+0xa17b>
outsl  %ds:(%esi),(%dx)
je     80a04ca <_IO_stdin_used+0xa1c6>
gs
jb     80a0485 <_IO_stdin_used+0xa181>
je     80a04cf <_IO_stdin_used+0xa1cb>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%eax)
js     80a048e <_IO_stdin_used+0xa18a>
imul   $0x7374,%fs:0x69(%edi),%esp
add    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
and    %al,0x42(%ebp,%ebp,1)
jne    80a04f3 <_IO_stdin_used+0xa1ef>
and    %ah,0x64(%ecx)
fs
jb     80a04eb <_IO_stdin_used+0xa1e7>
jae    80a04fb <_IO_stdin_used+0xa1f7>
sub    $0x20,%al
arpl   %bp,0x61(%eax)
jb     80a04f0 <_IO_stdin_used+0xa1ec>
arpl   %si,0x72(%ebp,%eiz,2)
and    %ah,(%edi)
and    $0x73202763,%eax
push   $0x646c756f
and    %ch,0x61(%eax)
jbe    80a0509 <_IO_stdin_used+0xa205>
and    %ah,0x65(%edx)
outsb  %gs:(%esi),(%dx)
and    %ah,0x73(%ebp)
arpl   %sp,0x70(%ecx)
gs or  %fs:%gs:(%eax),%al
add    %dl,0x65(%ebx)
jb     80a052e <_IO_stdin_used+0xa22a>
gs
jb     80a04db <_IO_stdin_used+0xa1d7>
popa
fs
fs
jb     80a0525 <_IO_stdin_used+0xa221>
jae    80a0535 <_IO_stdin_used+0xa231>
and    %ch,0x66(%edi)
and    %dh,0x70(%ecx,%edi,2)
and    %ah,%gs:0x61772073
jae    80a04f2 <_IO_stdin_used+0xa1ee>
insl   (%dx),%es:(%edi)
imul   $0x20676e69,0x73(%ebx),%esi
popa
jb     80a0544 <_IO_stdin_used+0xa240>
jne    80a054c <_IO_stdin_used+0xa248>
outsb  %gs:(%esi),(%dx)
je     80a0503 <_IO_stdin_used+0xa1ff>
and    $0x73,%eax
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    80a0558 <_IO_stdin_used+0xa254>
and    %ch,%fs:0x6f(%esi)
je     80a0512 <_IO_stdin_used+0xa20e>
jo     80a0555 <_IO_stdin_used+0xa251>
jb     80a0569 <_IO_stdin_used+0xa265>
and    %dh,%gs:0x65(%ebx)
jb     80a0572 <_IO_stdin_used+0xa26e>
gs
jb     80a051f <_IO_stdin_used+0xa21b>
popa
fs
fs
jb     80a0569 <_IO_stdin_used+0xa265>
jae    80a0579 <_IO_stdin_used+0xa275>
cmp    (%eax),%ah
and    $0x41000073,%eax
fs
fs
jb     80a0576 <_IO_stdin_used+0xa272>
jae    80a0586 <_IO_stdin_used+0xa282>
and    %ah,0x65(%edi,%ebp,2)
jae    80a0539 <_IO_stdin_used+0xa235>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80a053d <_IO_stdin_used+0xa239>
arpl   %bp,0x6e(%edi)
je     80a0583 <_IO_stdin_used+0xa27f>
imul   $0x6f632061,0x20(%esi),%ebp
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
daa
cmp    $0x68632027,%eax
popa
jb     80a059a <_IO_stdin_used+0xa296>
arpl   %si,0x72(%ebp,%eiz,2)
and    %ch,0x6f(%esi)
je     80a0562 <_IO_stdin_used+0xa25e>
outsw  %ds:(%esi),(%dx)
jne    80a05b4 <_IO_stdin_used+0xa2b0>
and    %ch,%fs:0x72(%edi)
and    %ch,0x61(%eax)
jae    80a056f <_IO_stdin_used+0xa26b>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
and    %dh,0x61(%esi)
insb   (%dx),%es:(%edi)
jne    80a05bc <_IO_stdin_used+0xa2b8>
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     80a05c8 <_IO_stdin_used+0xa2c4>
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%bx,%di)
add    %ch,(%eax,%eax,1)
inc    %ebp
pop    %eax
push   %esp
inc    %ebp
push   %edx
dec    %esi
inc    %ecx
dec    %esp
add    %ch,0x62(%ecx,%ebp,2)
bound  %esi,%fs:0x73(%ebp)
and    %dh,(%ecx)
cs ss xor %edi,%cs:%ss:(%eax)
add    %cl,0x4b(%edi)
and    %al,(%eax)
push   %edx
inc    %ebp
dec    %edx
inc    %ebp
inc    %ebx
push   %esp
inc    %ebp
inc    %esp
add    %al,0x55(%ecx)
push   %esp
dec    %eax
and    %al,(%eax)
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    80a05f7 <_IO_stdin_used+0xa2f3>
insb   (%dx),%es:(%edi)
imul   $0x65207865,0x68(%eax,%eiz,1),%esp
outsb  %ds:(%esi),(%dx)
arpl   %bp,0x64(%edi)
imul   $0x52524500,0x67(%esi),%ebp
dec    %edi
push   %edx
and    %ah,(%edx)
and    $0xa0d2273,%eax
add    %ch,0x72(%edi)
addr16 pop %edi
data16
jb     80a0620 <_IO_stdin_used+0xa31c>
gs
fs
gs
jae    80a062b <_IO_stdin_used+0xa327>
je     80a0631 <_IO_stdin_used+0xa32d>
jo     80a0623 <_IO_stdin_used+0xa31f>
outsb  %gs:(%si),(%dx)
gs
jb     80a062b <_IO_stdin_used+0xa327>
insb   (%dx),%es:(%edi)
add    %al,0x54(%ecx,%eax,2)
inc    %ecx
and    %al,(%eax)
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
or     $0x4741000a,%eax
push   %edx
inc    %ebp
inc    %ebp
pop    %edi
push   %ebp
dec    %esi
dec    %ecx
pop    %eax
pop    %edi
inc    %esi
inc    %esp
or     $0x6e55000a,%eax
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %cl,%fs:0x65(%esi)
gs and %dh,%fs:%gs:0x20(%edi,%ebp,2)
popa
jne    80a0678 <_IO_stdin_used+0xa374>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
and    %ah,%gs:0x69(%esi)
jb     80a0685 <_IO_stdin_used+0xa381>
je     80a0614 <_IO_stdin_used+0xa310>
inc    %edx
inc    %ebp
inc    %edi
dec    %ecx
dec    %esi
or     $0x454e000a,%eax
inc    %edi
dec    %edi
push   %esp
dec    %ecx
inc    %ecx
push   %esp
inc    %ebp
pop    %edi
push   %ebp
dec    %esi
dec    %ecx
pop    %eax
pop    %edi
inc    %esi
inc    %esp
or     $0x4143000a,%eax
dec    %esi
inc    %ebx
inc    %ebp
dec    %esp
or     $0x6d45000a,%eax
jo     80a06b1 <_IO_stdin_used+0xa3ad>
jns    80a065f <_IO_stdin_used+0xa35b>
jae    80a06a6 <_IO_stdin_used+0xa3a2>
jb     80a06b9 <_IO_stdin_used+0xa3b5>
gs
jb     80a0666 <_IO_stdin_used+0xa362>
arpl   %bp,0x61(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,%gs:0x74(%bp,%di)
jb     80a06bd <_IO_stdin_used+0xa3b9>
outsb  %ds:(%esi),(%dx)
add    %al,0x6f(%bp,%di)
jne    80a06c7 <_IO_stdin_used+0xa3c3>
and    %ch,%fs:0x6f(%esi)
je     80a0681 <_IO_stdin_used+0xa37d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
popa
and    %ah,%fs:0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x65(%ecx),%ebp
imul   $0x6f43,0x0(%ebp,%eiz,2),%bp
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80a06e0 <_IO_stdin_used+0xa3dc>
imul   $0x6f6e2064,0x65(%esi),%ebp
outsb  %ds:(%esi),(%dx)
sub    $0x49435341,%eax
dec    %ecx
add    %al,0x55(%ecx)
push   %esp
dec    %eax
add    %al,0x41(%ebx)
dec    %esi
inc    %ebx
inc    %ebp
dec    %esp
add    %al,0x54(%ecx,%eax,2)
inc    %ecx
add    %al,0x45(%edx)
inc    %edi
dec    %ecx
dec    %esi
add    %cl,0x4b(%edi)
add    %al,0x52(%ebp)
push   %edx
dec    %edi
push   %edx
add    %cl,0x45(%esi)
inc    %edi
dec    %edi
push   %esp
dec    %ecx
inc    %ecx
push   %esp
inc    %ebp
pop    %edi
push   %ebp
dec    %esi
dec    %ecx
pop    %eax
pop    %edi
inc    %esi
inc    %esp
add    %al,0x47(%ecx)
push   %edx
inc    %ebp
inc    %ebp
pop    %edi
push   %ebp
dec    %esi
dec    %ecx
pop    %eax
pop    %edi
inc    %esi
inc    %esp
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
inc    %ebx
dec    %edi
dec    %edi
dec    %ebx
dec    %ecx
inc    %ebp
pop    %edi
push   %ebx
dec    %eax
inc    %ecx
xor    %eax,(%eax)
inc    %ecx
dec    %esi
dec    %edi
dec    %esi
pop    %ecx
dec    %ebp
dec    %edi
push   %ebp
push   %ebx
add    %cl,0x65(%esi)
gs
fs
inc    %esp
imul   $0x656e6e6f,0x63(%ebx),%esi
arpl   %si,0x41(%eax,%eax,1)
jne    80a076f <_IO_stdin_used+0xa46b>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
gs add %dl,%fs:%gs:0x61(%edi)
imul   $0x726f4667,0x6e(%ecx,%ebp,2),%esi
inc    %ecx
addr16 jb 80a0779 <_IO_stdin_used+0xa475>
gs
push   %ebp
outsb  %ds:(%esi),(%dx)
imul   $0x61570044,0x46(%eax),%edi
imul   $0x726f4667,0x6e(%ecx,%ebp,2),%esi
push   %edx
gs
push   $0x65
arpl   %si,0x57(%eax,%eax,1)
popa
imul   $0x726f4667,0x6e(%ecx,%ebp,2),%esi
inc    %esp
popa
je     80a079c <_IO_stdin_used+0xa498>
add    %cl,0x65(%esi)
gs
fs
push   %ebx
outsb  %gs:(%esi),(%dx)
fs
inc    %ecx
jne    80a07bb <_IO_stdin_used+0xa4b7>
push   $0x69615700
je     80a07b7 <_IO_stdin_used+0xa4b3>
outsb  %ds:(%esi),(%dx)
addr16 inc %esi
outsl  %ds:(%esi),(%dx)
jb     80a0796 <_IO_stdin_used+0xa492>
imul   $0x74696157,%gs:0x0(%bp),%ebp
74
imul   $0x41726f46,0x67(%esi),%ebp
jne    80a07da <_IO_stdin_used+0xa4d6>
push   $0x6e655300
je     80a078d <_IO_stdin_used+0xa489>
inc    %ecx
push   %ebp
push   %esp
dec    %eax
and    %dh,0x68(%edi)
imul   $0x65707865,0x20(%ebp,%eiz,2),%ebp
arpl   %si,0x6e(%ecx,%ebp,2)
and    %al,0x45(%bp,%si)
inc    %edi
dec    %ecx
dec    %esi
add    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     80a07ad <_IO_stdin_used+0xa4a9>
inc    %esp
inc    %ecx
push   %esp
inc    %ecx
and    %dh,0x68(%edi)
imul   $0x65707865,0x20(%ebp,%eiz,2),%ebp
arpl   %si,0x6e(%ecx,%ebp,2)
and    %al,0x45(%bp,%si)
inc    %edi
dec    %ecx
dec    %esi
add    %dl,0x6e(%ebp)
imul   $0x70204446,0x20(%eax),%edi
popa
jae    80a0827 <_IO_stdin_used+0xa523>
imul   $0x746f6e20,0x67(%esi),%ebp
and    %dh,0x75(%ebx)
jo     80a0830 <_IO_stdin_used+0xa52c>
outsl  %ds:(%esi),(%dx)
jb     80a0837 <_IO_stdin_used+0xa533>
gs
fs
sub    $0x20,%al
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80a07eb <_IO_stdin_used+0xa4e7>
popa
jne    80a0842 <_IO_stdin_used+0xa53e>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
gs and %ch,%fs:%gs:0x72(%edi)
and    %ch,0x74(%edi)
push   $0x69777265
jae    80a084a <_IO_stdin_used+0xa546>
and    %ch,0x6f(%esi)
je     80a080a <_IO_stdin_used+0xa506>
jo     80a085b <_IO_stdin_used+0xa557>
jae    80a0861 <_IO_stdin_used+0xa55d>
imul   $0x4e000065,0x6c(%edx),%esp
outsl  %ds:(%esi),(%dx)
je     80a0818 <_IO_stdin_used+0xa514>
arpl   %si,0x72(%ebp)
jb     80a0862 <_IO_stdin_used+0xa55e>
outsb  %ds:(%esi),(%dx)
je     80a086c <_IO_stdin_used+0xa568>
jns    80a0822 <_IO_stdin_used+0xa51e>
imul   $0x61206e61,0x20(%esi),%ebp
jne    80a087f <_IO_stdin_used+0xa57b>
push   $0x6e6f6320
jbe    80a0877 <_IO_stdin_used+0xa573>
jb     80a0887 <_IO_stdin_used+0xa583>
popa
je     80a0880 <_IO_stdin_used+0xa57c>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %dl,0x65(%ebx)
outsb  %ds:(%esi),(%dx)
je     80a0841 <_IO_stdin_used+0xa53d>
inc    %ecx
push   %ebp
push   %esp
dec    %eax
and    %dh,0x68(%edi)
imul   $0x746f6e61,0x20(%ebp,%eiz,2),%ebp
push   $0x41207265
push   %ebp
push   %esp
dec    %eax
and    %ch,0x6e(%ecx)
and    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 80a08a7 <_IO_stdin_used+0xa5a3>
jae    80a08b7 <_IO_stdin_used+0xa5b3>
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
gs
jb     80a08c2 <_IO_stdin_used+0xa5be>
gs
jb     80a086f <_IO_stdin_used+0xa56b>
imul   $0x7320746f,%fs:0x6e(%eax,%eiz,1),%esp
73
outsb  %gs:(%esi),(%dx)
and    %ah,%fs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80a08c6 <_IO_stdin_used+0xa5c2>
js     80a08d7 <_IO_stdin_used+0xa5d3>
das
dec    %ecx
inc    %esp
das
arpl   %bp,0x61(%eax)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
and    %dh,%gs:0x72(%bx,%si)
outsl  %ds:(%esi),(%dx)
jo     80a08db <_IO_stdin_used+0xa5d7>
jb     80a08e4 <_IO_stdin_used+0xa5e0>
jns    80a087a <_IO_stdin_used+0xa576>
add    %al,(%eax)
push   %ebx
gs
jb     80a08f6 <_IO_stdin_used+0xa5f2>
gs
jb     80a08a3 <_IO_stdin_used+0xa59f>
jae    80a08ea <_IO_stdin_used+0xa5e6>
outsb  %ds:(%esi),(%dx)
je     80a08a8 <_IO_stdin_used+0xa5a4>
imul   $0x64696c61,0x76(%esi),%ebp
and    %ah,0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x65(%ecx),%ebp
arpl   %bp,0x6e(%edi)
je     80a0901 <_IO_stdin_used+0xa5fd>
js     80a0912 <_IO_stdin_used+0xa60e>
add    %al,(%eax)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    80a0910 <_IO_stdin_used+0xa60c>
and    %ch,%fs:0x6f(%esi)
je     80a08ca <_IO_stdin_used+0xa5c6>
jo     80a090d <_IO_stdin_used+0xa609>
jb     80a0921 <_IO_stdin_used+0xa61d>
and    %ah,%gs:0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x65(%ecx),%ebp
dec    %ecx
inc    %esp
and    %ah,0x73(%ecx)
and    %ah,0x6e(%ecx)
and    %ch,0x6e(%ecx)
je     80a0929 <_IO_stdin_used+0xa625>
addr16
gs
jb     80a08c8 <_IO_stdin_used+0xa5c4>
inc    %esp
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
je     80a08ee <_IO_stdin_used+0xa5ea>
push   $0x20657661
je     80a093d <_IO_stdin_used+0xa639>
and    %dh,%gs:0x65(%edx)
jno    80a0950 <_IO_stdin_used+0xa64c>
gs
jae    80a0952 <_IO_stdin_used+0xa64e>
gs and %ah,%fs:%gs:0x6f(%ebx)
outsl  %ds:(%esi),(%dx)
imul   $0x20,0x65(%ecx),%ebp
dec    %ecx
inc    %esp
add    %al,(%eax)
dec    %eax
(bad)
std
pushl  0x62(%eax)
std
incl   -0x7700029e(%eax)
(bad)
std
jmp    *-0x5f00029e(%eax)
(bad)
std
pushl  0x62(%eax)
std
jmp    *0xfffd62(%eax)
(bad)
std
call   *(%eax)
arpl   %di,%bp
pushl  (%eax)
arpl   %di,%bp
pushl  (%eax)
arpl   %di,%bp
(bad)
cmp    %ah,-0x3(%ebx)
pushl  0x63(%eax)
std
pushl  0x63(%eax)
std
lcall  *0x63(%eax)
std
pushl  0x63(%eax)
std
jmp    *%eax
(bad)
std
lcall  *(%eax)
gs
std
jmp    *(%eax)
gs
std
pushl  (%eax)
gs
std
decl   0x65(%eax)
std
jmp    *0x65(%eax)
std
jmp    *0x65(%eax)
std
jmp    *(%eax)
gs
std
jmp    *0x65(%eax)
std
push   %eax
fs
std
pushl  0x65(%ebx)
jb     80a09d2 <_IO_stdin_used+0xa6ce>
gs
jb     80a095f <_IO_stdin_used+0xa65b>
arpl   %bp,0x65(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
je     80a0966 <_IO_stdin_used+0xa662>
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
jae    80a09d7 <_IO_stdin_used+0xa6d3>
jne    80a09e5 <_IO_stdin_used+0xa6e1>
outsl  %fs:(%esi),(%dx)
ja     80a09e3 <_IO_stdin_used+0xa6df>
sub    %ch,(%ecx)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs and %ah,%fs:%gs:0x75(%edx)
je     80a09a3 <_IO_stdin_used+0xa69f>
arpl   %bp,0x6e(%edi)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    80a09af <_IO_stdin_used+0xa6ab>
ja     80a09f6 <_IO_stdin_used+0xa6f2>
jb     80a09f8 <_IO_stdin_used+0xa6f4>
and    %dh,0x74(%ebx)
imul   $0x6576696c,0x20(%esp,%ebp,2),%ebp
and    %dl,%cs:0x69(%eax,%ebp,2)
jae    80a09c5 <_IO_stdin_used+0xa6c1>
jo     80a0a19 <_IO_stdin_used+0xa715>
outsl  %ds:(%esi),(%dx)
bound  %esp,0x62(%ecx)
insb   (%dx),%es:(%edi)
jns    80a09ce <_IO_stdin_used+0xa6ca>
insl   (%dx),%es:(%edi)
gs
popa
outsb  %ds:(%esi),(%dx)
jae    80a09d4 <_IO_stdin_used+0xa6d0>
je     80a0a1e <_IO_stdin_used+0xa71a>
and    %ah,%gs:0x70(%ecx)
jo     80a0a28 <_IO_stdin_used+0xa724>
imul   $0x6e6f6974,0x61(%ebx),%esp
and    %ah,0x64(%ecx,%ebp,2)
and    %ch,0x6f(%esi)
je     80a09ec <_IO_stdin_used+0xa6e8>
fs
jb     80a0a3e <_IO_stdin_used+0xa73a>
jo     80a09f1 <_IO_stdin_used+0xa6ed>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ch,0x74(%ecx)
jae    80a09f9 <_IO_stdin_used+0xa6f5>
jb     80a0a40 <_IO_stdin_used+0xa73c>
data16
gs
jb     80a0a44 <_IO_stdin_used+0xa740>
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
and    %dh,0x20(%edi,%ebp,2)
bound  %esi,0x73(%ebp)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %si,%gs:0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
jae    80a0a25 <_IO_stdin_used+0xa721>
or     (%eax),%al
add    %al,(%eax)
add    %dh,0x70(%ecx,%edi,2)
and    %bh,%gs:(%esi)
cmp    $0x26203020,%eax
and    %dh,%es:0x70(%ecx,%edi,2)
and    %bh,%gs:(%eax,%eiz,1)
dec    %esi
pop    %edi
inc    %edx
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
push   %ebx
add    %dh,0x6e(%ebp)
imul   $0x68746170,0x3a(%eax),%edi
cmp    $0x7261762f,%eax
das
jb     80a0aa2 <_IO_stdin_used+0xa79e>
outsb  %ds:(%esi),(%dx)
das
bound  %esi,%fs:0x73(%ebp)
das
jae    80a0aaf <_IO_stdin_used+0xa7ab>
jae    80a0aac <_IO_stdin_used+0xa7a8>
gs
insl   (%dx),%es:(%edi)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
jae    80a0ab0 <_IO_stdin_used+0xa7ac>
arpl   %bp,0x65(%ebx)
je     80a0a46 <_IO_stdin_used+0xa742>
add    %al,(%eax)
inc    %esp
jns    80a0ab9 <_IO_stdin_used+0xa7b5>
popa
insl   (%dx),%es:(%edi)
imul   $0x73736573,0x20(%ebx),%esp
imul   $0x6f6f6c20,0x6e(%edi),%ebp
imul   $0x20,0x70(%ebp),%esi
jae    80a0ad6 <_IO_stdin_used+0xa7d2>
jo     80a0ad3 <_IO_stdin_used+0xa7cf>
outsl  %ds:(%esi),(%dx)
jb     80a0ada <_IO_stdin_used+0xa7d6>
gs and %ah,%fs:%gs:0x75(%edx)
je     80a0a8d <_IO_stdin_used+0xa789>
popaw
imul   $0x7325203a,0x64(%ebp,%eiz,2),%ebp
or     (%eax),%al
add    %al,(%eax)
add    %al,0x6e(%ecx,%edi,2)
popa
insl   (%dx),%es:(%edi)
imul   $0x73736573,0x20(%ebx),%esp
imul   $0x6f6f6c20,0x6e(%edi),%ebp
imul   $0x20,0x70(%ebp),%esi
jae    80a0b0a <_IO_stdin_used+0xa806>
jo     80a0b07 <_IO_stdin_used+0xa803>
outsl  %ds:(%esi),(%dx)
jb     80a0b0e <_IO_stdin_used+0xa80a>
gs and %ah,%fs:%gs:0x75(%edx)
je     80a0ac1 <_IO_stdin_used+0xa7bd>
popaw
imul   $0x6c697320,0x64(%ebp,%eiz,2),%ebp
outsb  %gs:(%esi),(%dx)
je     80a0b1b <_IO_stdin_used+0xa817>
jns    80a0abb <_IO_stdin_used+0xa7b7>
add    %al,(%eax)
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80a0b2c <_IO_stdin_used+0xa828>
and    %ah,0x74(%ebp,%eiz,2)
gs
jb     80a0b31 <_IO_stdin_used+0xa82d>
imul   $0x65687420,0x65(%esi),%ebp
and    %ah,0x64(%ecx)
fs
jb     80a0b36 <_IO_stdin_used+0xa832>
jae    80a0b46 <_IO_stdin_used+0xa842>
and    %ch,0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ch,0x65(%ebp)
jae    80a0b52 <_IO_stdin_used+0xa84e>
popa
and    %ah,%gs:0x75(%bp,%si)
jae    80a0b07 <_IO_stdin_used+0xa803>
sub    %dh,0x79(%edx,%esi,2)
and    %ah,(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx,%eiz,2)
jae    80a0b23 <_IO_stdin_used+0xa81f>
insb   (%dx),%es:(%edi)
popa
jne    80a0b68 <_IO_stdin_used+0xa864>
arpl   %bp,0x27(%eax)
and    %ah,0x6e(%ecx)
and    %ah,%fs:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx,%eiz,2)
jae    80a0b39 <_IO_stdin_used+0xa835>
fs
popa
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
daa
and    %ah,0x6f(%esi)
jb     80a0b38 <_IO_stdin_used+0xa834>
push   $0x29706c65
add    %al,(%eax)
add    %bl,0x64(%edi)
bound  %esi,0x73(%ebp)
pop    %edi
arpl   %bp,0x65(%eax)
arpl   %bp,0x5f(%ebx)
imul   $0x696c6176,0x5f(%ebx),%esi
fs
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:(%eax)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
sub    %eax,%gs:(%eax)
cs
cs
das
cs
cs
das
bound  %esi,%fs:0x73(%ebp)
das
bound  %esi,%fs:0x73(%ebp)
sub    $0x2e737562,%eax
arpl   %ax,(%eax)
popa
jne    80a0bd2 <_IO_stdin_used+0xa8ce>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
popa
jne    80a0bd1 <_IO_stdin_used+0xa8cd>
arpl   %bp,0x3a(%eax)
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
inc    %ecx
inc    %ebx
push   %esp
dec    %ecx
push   %esi
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %ecx
inc    %esp
inc    %esp
push   %edx
inc    %ebp
push   %ebx
push   %ebx
add    %al,0x55(%edx,%eax,2)
push   %ebx
pop    %edi
inc    %ecx
inc    %ebx
push   %esp
dec    %ecx
push   %esi
inc    %ecx
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %edi
inc    %edx
push   %ebp
push   %ebx
pop    %edi
push   %esp
pop    %ecx
push   %eax
inc    %ebp
add    %dh,0x6e(%ebp)
imul   $0x616e5f65,0x75(%ecx),%esi
insl   (%dx),%es:(%edi)
and    %ah,%gs:(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %dh,0x75(%edx)
insb   (%dx),%es:(%edi)
and    %ah,%gs:(%ecx)
cmp    $0x4c554e20,%eax
dec    %esp
add    %al,(%eax)
add    %al,(%eax)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
jb     80a0c2c <_IO_stdin_used+0xa928>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80a0c30 <_IO_stdin_used+0xa92c>
pop    %edi
insl   (%dx),%es:(%edi)
popa
je     80a0c33 <_IO_stdin_used+0xa92f>
push   $0x75626400
jae    80a0c36 <_IO_stdin_used+0xa932>
bound  %esi,0x73(%ebp)
pop    %edi
popa
fs
fs
pop    %edi
insl   (%dx),%es:(%edi)
popa
je     80a0c46 <_IO_stdin_used+0xa942>
push   $0x0
bound  %esi,%fs:0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
jae    80a0c67 <_IO_stdin_used+0xa963>
popa
jb     80a0c6a <_IO_stdin_used+0xa966>
pop    %edi
jae    80a0c5e <_IO_stdin_used+0xa95a>
jb     80a0c71 <_IO_stdin_used+0xa96d>
imul   $0x5f79625f,0x65(%ebx),%esp
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    80a0c6b <_IO_stdin_used+0xa967>
bound  %esi,0x73(%ebp)
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
push   $0x6f5f7361
ja     80a0c8a <_IO_stdin_used+0xa986>
gs
jb     80a0c1f <_IO_stdin_used+0xa91b>
bound  %esi,%fs:0x73(%ebp)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
jb     80a0c8f <_IO_stdin_used+0xa98b>
insb   (%dx),%es:(%edi)
gs
popa
jae    80a0c94 <_IO_stdin_used+0xa990>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    80a0c99 <_IO_stdin_used+0xa995>
bound  %esi,0x73(%ebp)
pop    %edi
jb     80a0ca5 <_IO_stdin_used+0xa9a1>
jno    80a0cb7 <_IO_stdin_used+0xa9b3>
gs
jae    80a0cb9 <_IO_stdin_used+0xa9b5>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    80a0caf <_IO_stdin_used+0xa9ab>
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     80a0cb7 <_IO_stdin_used+0xa9b3>
imul   $0x5f737562,0x64(%eax,%eax,1),%esp
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     80a0cc7 <_IO_stdin_used+0xa9c3>
jne    80a0cd8 <_IO_stdin_used+0xa9d4>
imul   $0x72657375,0x5f(%eax),%edi
add    %ah,0x75(%edx,%eiz,2)
jae    80a0cd6 <_IO_stdin_used+0xa9d2>
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     80a0cde <_IO_stdin_used+0xa9da>
jne    80a0cef <_IO_stdin_used+0xa9eb>
imul   $0x616e5f65,0x75(%ecx),%esi
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    80a0cef <_IO_stdin_used+0xa9eb>
bound  %esi,0x73(%ebp)
pop    %edi
jae    80a0cfb <_IO_stdin_used+0xa9f7>
je     80a0cf7 <_IO_stdin_used+0xa9f3>
jne    80a0d08 <_IO_stdin_used+0xaa04>
imul   $0x616e5f65,0x75(%ecx),%esi
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x75(%edx,%eiz,2)
jae    80a0d08 <_IO_stdin_used+0xaa04>
bound  %esi,0x73(%ebp)
pop    %edi
jb     80a0d14 <_IO_stdin_used+0xaa10>
imul   $0x69007265,0x74(%bp,%di),%esi
outsb  %ds:(%esi),(%dx)
je     80a0d1f <_IO_stdin_used+0xaa1b>
jb     80a0d2a <_IO_stdin_used+0xaa26>
popa
insb   (%dx),%es:(%edi)
pop    %edi
bound  %esi,0x73(%ebp)
pop    %edi
addr16
gs
je     80a0cc7 <_IO_stdin_used+0xa9c3>
sub    %ch,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
sub    %eax,%gs:(%eax)
pop    %esp
add    %cl,0x6f6c2e00
arpl   %bp,0x0(%ebx)
inc    %ebx
outsl  %ds:(%esi),(%dx)
jne    80a0d48 <_IO_stdin_used+0xaa44>
and    %ch,%fs:0x6f(%esi)
je     80a0d02 <_IO_stdin_used+0xa9fe>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x20(%ebx)
imul   $0x72,0x79(%ebp),%esp
imul   $0x6c696620,0x67(%esi),%ebp
and    %dh,%gs:0x20(%edi,%ebp,2)
popa
fs and %dh,%fs:0x20(%edi,%ebp,2)
imul   $0x65530000,0x0(%eax,%eax,1),%esi
arpl   %si,0x65(%edx)
je     80a0d2b <_IO_stdin_used+0xaa27>
imul   $0x72,0x79(%ebp),%esp
imul   $0x6c696620,0x67(%esi),%ebp
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     80a0d7e <_IO_stdin_used+0xaa7a>
imul   $0x6e6f6e20,0x73(%esi),%ebp
sub    $0x49435341,%eax
dec    %ecx
and    %esp,(%eax)
dec    %ecx
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     80a0d9b <_IO_stdin_used+0xaa97>
outsb  %ds:(%esi),(%dx)
and    %ah,0x78(%di)
imul   $0x20676e69,0x74(%ebx),%esi
arpl   %bp,0x6e(%edi)
je     80a0da8 <_IO_stdin_used+0xaaa4>
outsb  %ds:(%esi),(%dx)
je     80a0db9 <_IO_stdin_used+0xaab5>
or     (%eax),%al
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
fs
gs
insb   (%dx),%es:(%edi)
gs
je     80a0dbd <_IO_stdin_used+0xaab9>
and    %ch,0x63(%edi,%ebp,2)
imul   $0x66,(%eax),%esp
imul   $0xa732520,0x3a(%ebp,%eiz,2),%ebp
add    %dh,0x65(%edx)
je     80a0de1 <_IO_stdin_used+0xaadd>
jb     80a0ddc <_IO_stdin_used+0xaad8>
imul   $0x20642520,0x67(%esi),%ebp
bound  %esi,0x74(%ebp)
and    %ah,0x72(%ebp)
jb     80a0dec <_IO_stdin_used+0xaae8>
jb     80a0d9f <_IO_stdin_used+0xaa9b>
jo     80a0df0 <_IO_stdin_used+0xaaec>
imul   $0x25207265,0x74(%esi),%ebp
jo     80a0daa <_IO_stdin_used+0xaaa6>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ah,%gs:0xa73
push   %ebp
outsb  %ds:(%esi),(%dx)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80a0e0c <_IO_stdin_used+0xab08>
and    %ah,0x72(%ebx)
gs
popa
je     80a0e09 <_IO_stdin_used+0xab05>
and    %al,0x75(%edx,%eax,2)
jae    80a0dca <_IO_stdin_used+0xaac6>
imul   $0x72,0x79(%ebp),%esp
imul   $0x65687720,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %dh,0x65(%ebx)
je     80a0e30 <_IO_stdin_used+0xab2c>
imul   $0x766e4900,0x0(%eax,%eax,1),%esp
popa
insb   (%dx),%es:(%edi)
imul   $0x65746e6f,0x63(%eax,%eiz,1),%esp
js     80a0e43 <_IO_stdin_used+0xab3f>
and    %ch,0x6e(%ecx)
and    %ch,0x65(%ebx)
jns    80a0e49 <_IO_stdin_used+0xab45>
imul   $0x65726320,0x67(%esi),%ebp
popa
je     80a0e4a <_IO_stdin_used+0xab46>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %cl,0x6f(%esi)
and    %dh,0x65(%edx)
arpl   %sp,0x6e(%ebp)
je     80a0e1b <_IO_stdin_used+0xab17>
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
jne    80a0e5a <_IO_stdin_used+0xab56>
push   $0x79656b20
and    %ah,0x6f(%esi)
jne    80a0e6b <_IO_stdin_used+0xab67>
and    %ch,%fs:0x6e(%ecx)
and    %ch,0x65(%ebx)
jns    80a0e78 <_IO_stdin_used+0xab74>
imul   $0x6e61202c,0x67(%esi),%ebp
and    %dh,%fs:0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     80a0e87 <_IO_stdin_used+0xab83>
and    %ah,0x72(%ebx)
gs
popa
je     80a0e84 <_IO_stdin_used+0xab80>
and    %ah,0x20(%ecx)
outsb  %ds:(%esi),(%dx)
gs
ja     80a0e46 <_IO_stdin_used+0xab42>
imul   $0x0,0x79(%ebp),%esp
add    %al,(%eax)
xchg   %eax,%ebx
mov    $0xfd,%bh
jmp    *(%edx)
mov    $0xb812fffd,%eax
std
incl   (%edx)
mov    $0xb7e6fffd,%eax
std
ljmp   *(%ecx)
mov    $0xfd,%bh
call   *%esi
mov    $0xfd,%bh
incl   (%eax)
add    %al,(%ecx)
outsl  %ds:(%esi),(%dx)
add    0x3(%ebx),%dh
jae    80a0e55 <_IO_stdin_used+0xab51>
jae    80a0e58 <_IO_stdin_used+0xab54>
jne    80a0e5b <_IO_stdin_used+0xab57>
jae    80a0e5e <_IO_stdin_used+0xab5a>
jae    80a0e61 <_IO_stdin_used+0xab5d>
or     %esi,0x2f(%di)
outsl  %ds:(%esi),(%dx)
jb     80a0ec7 <_IO_stdin_used+0xabc3>
das
data16
jb     80a0ec9 <_IO_stdin_used+0xabc5>
gs
fs
gs
jae    80a0ed4 <_IO_stdin_used+0xabd0>
je     80a0eda <_IO_stdin_used+0xabd6>
jo     80a0e9c <_IO_stdin_used+0xab98>
inc    %esp
inc    %edx
jne    80a0ee4 <_IO_stdin_used+0xabe0>
das
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,0x72(%edi)
addr16
cs
data16
jb     80a0ee4 <_IO_stdin_used+0xabe0>
gs
fs
gs
jae    80a0eef <_IO_stdin_used+0xabeb>
je     80a0ef5 <_IO_stdin_used+0xabf1>
jo     80a0eb6 <_IO_stdin_used+0xabb2>
inc    %esp
inc    %edx
jne    80a0eff <_IO_stdin_used+0xabfb>
cs
dec    %esp
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %bh,0x79(%ecx)
jns    80a0f10 <_IO_stdin_used+0xac0c>
jne    80a0f0e <_IO_stdin_used+0xac0a>
popa
sub    %bh,0x76(%ecx)
sub    %eax,(%eax)
add    %bh,-0x44(%eax)
std
lcall  *-0x44(%eax)
std
inc    %eax
mov    $0xbc30fffd,%edx
std
jmp    *%eax
mov    $0xbac0fffd,%ebx
std
dec    %eax
mov    $0xbac0fffd,%ebx
std
lcall  *-0x44(%eax)
std
inc    %eax
mov    $0xbac0fffd,%edx
std
inc    %eax
mov    $0xbac0fffd,%edx
std
jmp    *0x78fffdbb(%eax)
mov    $0xbac0fffd,%esp
std
jmp    *-0x1f000245(%eax)
mov    $0xbc78fffd,%ebx
std
pushl  (%eax)
mov    $0xbc58fffd,%esp
std
(bad)
clc
mov    $0xbac0fffd,%edx
std
pushl  (%eax)
mov    $0xbcc0fffd,%esp
std
incl   0x6f(%ebx)
jne    80a0f74 <_IO_stdin_used+0xac70>
and    %ch,%fs:0x6f(%esi)
je     80a0f2e <_IO_stdin_used+0xac2a>
jb     80a0f75 <_IO_stdin_used+0xac71>
popa
and    %ch,%fs:0x6f(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
data16
jb     80a0f8b <_IO_stdin_used+0xac87>
insl   (%dx),%es:(%edi)
and    %dh,0x6f(%ebx)
arpl   %bp,0x65(%ebx)
je     80a0f45 <_IO_stdin_used+0xac41>
sub    %ah,0x64(%esi)
cmp    $0x296425,%eax
add    %al,(%eax)
add    %cl,0x6f(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x73(%ebp)
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     80a0f5e <_IO_stdin_used+0xac5a>
insl   (%dx),%es:(%edi)
popa
je     80a0fa5 <_IO_stdin_used+0xaca1>
push   $0x6361202c
arpl   %sp,0x73(%ebp)
jae    80a0f6c <_IO_stdin_used+0xac68>
fs outsb %fs:%gs:(%esi),(%dx)
imul   $0x64662820,0x64(%ebp),%esp
cmp    $0x296425,%eax
add    %al,0x6f(%ebx)
jne    80a0fcc <_IO_stdin_used+0xacc8>
and    %ch,%fs:0x6f(%esi)
je     80a0f86 <_IO_stdin_used+0xac82>
jb     80a0fcd <_IO_stdin_used+0xacc9>
popa
and    %ch,%fs:0x6f(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
data16
jb     80a0fe3 <_IO_stdin_used+0xacdf>
insl   (%dx),%es:(%edi)
and    %ah,0x69(%esi)
insb   (%dx),%es:(%edi)
and    %ah,%gs:0x73
inc    %esi
popa
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
jae    80a0ff1 <_IO_stdin_used+0xaced>
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x6f(%esi)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x20(%ebp)
sub    %ah,0x64(%esi)
cmp    $0x3a296425,%eax
and    %ah,0x62720073
add    %ch,(%edi)
bound  %esi,%fs:0x73(%ebp)
pop    %edi
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x2d(%ebp)
add    %ch,(%edi)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
arpl   %sp,0x0(%ebp)
inc    %ebp
jb     80a102d <_IO_stdin_used+0xad29>
outsl  %ds:(%esi),(%dx)
jb     80a0fde <_IO_stdin_used+0xacda>
ja     80a1028 <_IO_stdin_used+0xad24>
outsb  %gs:(%esi),(%dx)
and    %dh,0x79(%edx,%esi,2)
imul   $0x206f7420,0x67(%esi),%ebp
ja     80a1030 <_IO_stdin_used+0xad2c>
je     80a1034 <_IO_stdin_used+0xad30>
push   $0x20646620
and    $0x25203a64,%eax
jae    80a0fe7 <_IO_stdin_used+0xace3>
add    %al,(%eax)
add    %ah,0x64(%esi)
and    %ah,0x6e652064
popa
bound  %ebp,0x64(%ebp,%eiz,2)
and    %ah,0x65(%edx)
outsw  %ds:(%esi),(%dx)
jb     80a1059 <_IO_stdin_used+0xad55>
and    %ch,0x74(%ecx)
and    %dh,0x61(%edi)
jae    80a101c <_IO_stdin_used+0xad18>
popa
fs fs gs or %fs:%gs:(%eax),%al
add    %cl,0x6e(%ecx)
jae    80a107d <_IO_stdin_used+0xad79>
data32 imul $0x6e65,0x69(%ebx),%sp
je     80a1031 <_IO_stdin_used+0xad2d>
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     80a1090 <_IO_stdin_used+0xad8c>
and    %dh,0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x61(%bx)
je     80a1089 <_IO_stdin_used+0xad85>
push   $0x726f6620
and    %ah,0x64(%esi)
and    %ah,0xa64
dec    %ebp
imul   $0x72726520,0x63(%ebx),%esi
outsl  %ds:(%esi),(%dx)
jb     80a105f <_IO_stdin_used+0xad5b>
ja     80a10a9 <_IO_stdin_used+0xada5>
outsb  %gs:(%esi),(%dx)
and    %dh,0x79(%edx,%esi,2)
imul   $0x206f7420,0x67(%esi),%ebp
ja     80a10b1 <_IO_stdin_used+0xadad>
je     80a10b5 <_IO_stdin_used+0xadb1>
push   $0x20646620
and    $0x25203a64,%eax
jae    80a1068 <_IO_stdin_used+0xad64>
add    %al,(%eax)
inc    %ebp
jb     80a10d5 <_IO_stdin_used+0xadd1>
outsl  %ds:(%esi),(%dx)
jb     80a1086 <_IO_stdin_used+0xad82>
ja     80a10d0 <_IO_stdin_used+0xadcc>
outsb  %gs:(%esi),(%dx)
and    %dh,0x79(%edx,%esi,2)
imul   $0x206f7420,0x67(%esi),%ebp
jb     80a10dc <_IO_stdin_used+0xadd8>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    80a10e0 <_IO_stdin_used+0xaddc>
and    %ah,0x64(%esi)
and    %ah,0x25203a64
jae    80a1090 <_IO_stdin_used+0xad8c>
add    %al,(%eax)
data16
and    %ah,%fs:0x64612064
fs gs and %ah,%fs:%gs:0x6e(%ecx)
and    %dh,%fs:0x65(%eax,%ebp,2)
outsb  %ds:(%esi),(%dx)
and    %ah,0x64(%ecx)
fs gs and %ah,%fs:%gs:0x67(%ecx)
popa
imul   $0x42000000,0xa(%esi),%ebp
popa
and    %ah,%fs:0x64(%esi)
.byte 0x20
.byte 0x25
or     %fs:(%eax),%al
add    %ebx,(%ebx)
add    (%ebx),%edi
xor    %ch,(%esi)
add    %al,(%eax)
lds    0xbf180000,%eax
cli
decl   0x0(%esi,%ebp,1)
add    %bh,0x28fffaca(%eax)
je     80a10d3 <_IO_stdin_used+0xadcf>
add    %ch,%ah
lret   $0xfffa
pusha
je     80a10db <_IO_stdin_used+0xadd7>
add    %ah,(%ebx,%ecx,8)
cli
pushl  0x0(%esp,%esi,2)
add    %bl,-0x6(%ebx,%ecx,8)
decl   -0x6bffff8c(%eax)
lret
cli
decl   0x1(%esi,%edi,1)
add    %bl,%al
int3
cli
lcall  *-0x28980000(%esp,%esi,2)
cli
pushl  0x2e(%eax)
add    %al,(%eax)
cwtl
xlat   %ds:(%ebx)
cli
call   *-0x27ffffd2(%eax)
xlat   %ds:(%ebx)
cli
pushl  0x800002e(%eax)
fdivr  %st(2),%st
call   *%eax
add    %al,%cs:(%eax)
cmp    %bl,%al
cli
push   %eax
add    %al,%cs:(%eax)
push   $0x10fffad8
das
add    %al,(%eax)
cmp    %bl,%cl
cli
decl   0x0(%edi,%ebp,1)
add    %bh,%al
(bad)
jmp    *-0x23880000(%edi,%ebp,1)
cli
(bad)
fsubrl (%edi)
add    %al,(%eax)
or     %bl,%ch
cli
decl   (%eax)
xor    %al,(%eax)
add    %cl,-0x23(%eax)
cli
ljmp   *(%eax)
xor    %al,(%eax)
add    %bh,0x54fffadd(%eax)
xor    %al,(%eax)
add    %cl,(%eax)
fdivrp %st,%st(2)
incl   -0x17ffffd0(%eax)
jecxz  80a1161 <_IO_stdin_used+0xae5d>
(bad)
fdivs  (%eax)
add    %al,(%eax)
or     %ah,%dh
cli
pushl  (%eax)
xor    %eax,(%eax)
add    %ch,-0x5f000518(%eax)
xor    %eax,(%eax)
add    %bh,-0x17000517(%eax)
xor    %eax,(%eax)
add    %cl,%al
jmp    3a071184 <_end+0x31fb8834>
add    %al,(%eax)
or     %ch,%dl
cli
lcall  *(%edx,%esi,1)
add    %al,(%eax)
call   7d0a0c84 <_end+0x74fe8334>
xor    (%eax),%al
add    %bh,%al
jmp    80a1199 <_IO_stdin_used+0xae95>
decl   0x68000032(%eax)
in     (%dx),%al
cli
pushl  -0x11280000(%edx,%esi,1)
cli
decl   (%ebx,%esi,1)
add    %al,(%eax)
sub    %dh,%al
cli
jmp    *0x33(%eax)
add    %al,(%eax)
enter  $0xfaf1,$0xff
mov    $0x33,%ah
add    %al,(%eax)
pop    %eax
repnz cli
(bad)
in     (%dx),%al
xor    (%eax),%eax
add    %bh,0x5cfffafe(%eax)
xor    $0x0,%al
add    %ch,-0x4f000501(%eax)
xor    $0x0,%al
add    %ch,%al
add    %bh,%bl
(bad)
call   a00a1219 <_end+0x97fe88c9>
add    %edi,%ebx
decl   0x1e80000(,%esi,1)
sti
decl   0x35(%eax)
add    %al,(%eax)
enter  $0xfb02,$0xff
mov    %dh,0x3480000
sti
inc    %eax
xor    $0x3980000,%eax
sti
call   *%esp
xor    $0x4080000,%eax
sti
decl   (%esi,%esi,1)
add    %al,(%eax)
sbb    %al,(%ebx,%edi,8)
jmp    *(%eax)
add    %al,%ss:(%eax)
dec    %eax
add    $0xfb,%al
(bad)
cmp    %dh,(%esi)
add    %al,(%eax)
or     %al,0x369cfffb
add    %al,(%eax)
sbb    %al,(%esi)
sti
jmp    *%esp
add    %al,%ss:(%eax)
sub    %al,(%esi)
sti
(bad)
clc
add    %al,%ss:(%eax)
dec    %eax
push   %es
sti
decl   (%edi,%esi,1)
add    %al,(%eax)
mov    %al,(%esi)
sti
(bad)
cmp    %dh,(%edi)
add    %al,(%eax)
mov    $0x50fffb06,%eax
aaa
add    %al,(%eax)
fadds  (%esi)
sti
jmp    *0x0(%edi,%esi,1)
add    %bl,(%eax)
or     %bh,%bl
ljmp   *0xae80000(%edi,%esi,1)
sti
push   %esp
aaa
add    %al,(%eax)
clc
adc    %bl,%bh
decl   0x0(%eax,%edi,1)
add    %bh,-0x6b0004eb(%eax)
cmp    %al,(%eax)
add    %cl,%al
adc    $0x38a8fffb,%eax
add    %al,(%eax)
sub    %dl,(%esi)
sti
(bad)
fdivrs (%eax)
add    %al,(%eax)
pop    %eax
push   %ss
sti
(bad)
clc
cmp    %al,(%eax)
add    %cl,0x18fffb16(%eax)
cmp    %eax,(%eax)
add    %bh,0x38fffb16(%eax)
cmp    %eax,(%eax)
add    %ch,%al
push   %ss
sti
lcall  *0x39(%eax)
add    %al,(%eax)
sbb    %dl,(%edi)
sti
(bad)
js     80a12eb <_IO_stdin_used+0xafe7>
add    %al,(%eax)
test   $0x17,%al
sti
jmp    *0x19d80000(%ecx,%edi,1)
sti
call   *(%eax)
cmp    (%eax),%al
add    %ch,%al
sbb    %bl,%bh
call   *0x3a(%eax)
add    %al,(%eax)
clc
sbb    %bl,%bh
jmp    *0x0(%edx,%edi,1)
add    %bl,-0x670004e5(%eax)
cmp    (%eax),%al
add    %ch,-0x530004e5(%eax)
cmp    (%eax),%al
add    %ch,(%eax)
sbb    $0x3af4fffb,%eax
add    %al,(%eax)
cmp    %bl,0x3b08fffb
add    %al,(%eax)
dec    %eax
sbb    $0x3b1cfffb,%eax
add    %al,(%eax)
pop    %eax
sbb    $0x3b30fffb,%eax
add    %al,(%eax)
js     80a1323 <_IO_stdin_used+0xb01f>
sti
incl   0x0(%ebx,%edi,1)
add    %cl,0x58fffb1d(%eax)
cmp    (%eax),%eax
add    %bl,0x6cfffb1d(%eax)
cmp    (%eax),%eax
add    %ch,-0x7f0004e3(%eax)
cmp    (%eax),%eax
add    %bh,-0x6b0004e3(%eax)
cmp    (%eax),%eax
add    %cl,%al
sbb    $0x3ba8fffb,%eax
add    %al,(%eax)
fcomps 0x3bbcfffb
add    %al,(%eax)
call   d90a0e5e <_end+0xd0fe850e>
cmp    (%eax),%eax
add    %bh,%al
sbb    $0x3be4fffb,%eax
add    %al,(%eax)
or     %bl,(%esi)
sti
(bad)
clc
cmp    (%eax),%eax
add    %bl,(%eax)
push   %ds
sti
decl   (%esp,%edi,1)
add    %al,(%eax)
sub    %bl,(%esi)
sti
jmp    *(%eax)
cmp    $0x0,%al
add    %bh,(%eax)
push   %ds
sti
pushl  (%esp,%edi,1)
add    %al,(%eax)
dec    %eax
push   %ds
sti
decl   0x3c(%eax)
add    %al,(%eax)
pop    %eax
push   %ds
sti
lcall  *0x0(%esp,%edi,1)
add    %ch,0x1e(%eax)
sti
pushl  0x3c(%eax)
add    %al,(%eax)
js     80a13a4 <_IO_stdin_used+0xb0a0>
sti
incl   0x1e880000(%esp,%edi,1)
sti
lcall  *-0x67ffffc4(%eax)
push   %ds
sti
ljmp   *0x1ea80000(%esp,%edi,1)
sti
inc    %eax
cmp    $0x0,%al
add    %bh,-0x2b0004e2(%eax)
cmp    $0x0,%al
add    %cl,%al
push   %ds
sti
(bad)
call   d00a13f1 <_end+0xc7fe8aa1>
pop    %ds
sti
pushl  (%eax)
cmp    $0x21b80000,%eax
sti
decl   -0x77ffffc3(%eax)
sub    %ebx,%edi
jmp    *%eax
cmp    $0x2c780000,%eax
sti
ljmp   *(%eax)
add    %al,%ds:(%eax)
dec    %eax
cs
sti
incl   -0x47ffffc2(%eax)
xor    $0x3ed8fffb,%eax
add    %al,(%eax)
sub    %dh,(%esi)
sti
decl   (%edi,%edi,1)
add    %al,(%eax)
mov    %dh,(%esi)
sti
incl   0x0(%edi,%edi,1)
add    %bl,(%eax)
cmp    %bh,%bl
decl   -0x67ffffc1(%eax)
dec    %ebx
sti
jmp    *%eax
aas
add    %al,(%eax)
call   2d0a0f54 <_end+0x24fe8604>
inc    %eax
add    %al,(%eax)
cmp    %cl,-0x1(%ebx,%edi,8)
push   $0xb8000040
dec    %esp
sti
inc    %eax
inc    %eax
add    %al,(%eax)
or     %cl,-0x5(%esi)
push   %esp
inc    %eax
add    %al,(%eax)
fcoms  -0x5(%ecx)
jmp    *0x41(%eax)
add    %al,(%eax)
js     80a1481 <_IO_stdin_used+0xb17d>
sti
(bad)
mov    $0x88000041,%eax
push   %ebx
sti
dec    %esp
inc    %ecx
add    %al,(%eax)
test   $0x53,%al
sti
jmp    *%eax
inc    %ecx
add    %al,(%eax)
clc
push   %ebx
sti
decl   (%edx,%eax,2)
add    %al,(%eax)
dec    %eax
popa
sti
ljmp   *0x42(%eax)
add    %al,(%eax)
push   $0xd4fffb65
inc    %edx
add    %al,(%eax)
push   $0x14fffb6d
inc    %ebx
add    %al,(%eax)
clc
insl   (%dx),%es:(%edi)
sti
pushl  (%eax)
inc    %ebx
add    %al,(%eax)
or     %ch,-0x5(%esi)
incl   0x0(%ebx,%eax,2)
add    %bl,(%eax)
outsb  %ds:(%esi),(%dx)
sti
lcall  *0x43(%eax)
add    %al,(%eax)
sub    %ch,-0x5(%esi)
ljmp   *0x0(%ebx,%eax,2)
add    %bh,(%eax)
outsb  %ds:(%esi),(%dx)
sti
incl   0x48000043(%eax)
outsb  %ds:(%esi),(%dx)
sti
call   *0x6e580000(%ebx,%eax,2)
sti
ljmp   *0x68000043(%eax)
outsb  %ds:(%esi),(%dx)
sti
(bad)
mov    $0x88000043,%esp
outsb  %ds:(%esi),(%dx)
sti
call   *%eax
inc    %ebx
add    %al,(%eax)
test   $0x6e,%al
sti
jmp    *%esp
inc    %ebx
add    %al,(%eax)
enter  $0xfb6e,$0xff
clc
inc    %ebx
add    %al,(%eax)
fsubrs -0x5(%esi)
decl   (%esp,%eax,2)
add    %al,(%eax)
call   290a1037 <_end+0x20fe86e7>
inc    %esp
add    %al,(%eax)
clc
outsb  %ds:(%esi),(%dx)
sti
pushl  (%esp,%eax,2)
add    %al,(%eax)
sbb    %ch,-0x5(%edi)
lcall  *0x44(%eax)
add    %al,(%eax)
cmp    %ch,-0x5(%edi)
ljmp   *0x0(%esp,%eax,2)
add    %bl,(%eax)
jb     80a14e2 <_IO_stdin_used+0xb1de>
jmp    *0x72380000(%esp,%eax,2)
sti
(bad)
mov    $0x58000044,%eax
jb     80a14f2 <_IO_stdin_used+0xb1ee>
dec    %esp
inc    %esp
add    %al,(%eax)
mov    %dh,-0x5(%edx)
jmp    *%esp
inc    %esp
add    %al,(%eax)
mov    $0x4fffb72,%eax
inc    %ebp
add    %al,(%eax)
clc
jb     80a150a <_IO_stdin_used+0xb206>
pushl  (%eax)
inc    %ebp
add    %al,(%eax)
or     %dh,-0x5(%ebx)
incl   0x0(%ebp,%eax,2)
add    %bh,(%eax)
jae    80a151a <_IO_stdin_used+0xb216>
jmp    *0x0(%ebp,%eax,2)
add    %bl,-0x5700048d(%eax)
inc    %ebp
add    %al,(%eax)
enter  $0xfb73,$0xff
enter  $0x45,$0x0
call   e90a10ac <_end+0xe0fe875c>
inc    %ebp
add    %al,(%eax)
sub    %dh,-0x1(%ebx,%edi,8)
or     $0x46,%al
add    %al,(%eax)
pop    %eax
je     80a1542 <_IO_stdin_used+0xb23e>
ljmp   *(%esi,%eax,2)
add    %al,(%eax)
clc
je     80a154a <_IO_stdin_used+0xb246>
pushl  0x0(%esi,%eax,2)
add    %bh,(%eax)
jne    80a1552 <_IO_stdin_used+0xb24e>
call   *0x75680000(%esi,%eax,2)
sti
pushl  0x75980000(%esi,%eax,2)
sti
call   *%esp
inc    %esi
add    %al,(%eax)
enter  $0xfb75,$0xff
hlt
inc    %esi
add    %al,(%eax)
dec    %eax
jbe    80a1572 <_IO_stdin_used+0xb26e>
lcall  *(%eax)
inc    %edi
add    %al,(%eax)
mov    $0x6cfffb76,%eax
inc    %edi
add    %al,(%eax)
call   950a10ff <_end+0x8cfe87af>
inc    %edi
add    %al,(%eax)
sbb    %dh,-0x5(%edi)
ljmp   *0x78580000(%edi,%eax,2)
sti
jmp    *%esp
inc    %edi
add    %al,(%eax)
push   $0xf8fffb78
inc    %edi
add    %al,(%eax)
cwtl
jns    80a15a2 <_IO_stdin_used+0xb29e>
(bad)
cmp    %cl,0x0(%eax)
add    %bh,0x50fffb79(%eax)
dec    %eax
add    %al,(%eax)
enter  $0xfb7d,$0xff
pushf
dec    %eax
add    %al,(%eax)
sub    %bh,-0x5(%esi)
dec    %eax
dec    %eax
add    %al,(%eax)
test   $0x7e,%al
sti
push   %esp
dec    %eax
add    %al,(%eax)
enter  $0xfb7e,$0xff
or     $0x49,%al
add    %al,(%eax)
call   290a1157 <_end+0x20fe8807>
dec    %ecx
add    %al,(%eax)
pop    %eax
jg     80a15da <_IO_stdin_used+0xb2d6>
pushl  0x0(%ecx,%ecx,2)
add    %ch,0x7f(%eax)
sti
decl   0x78000049(%eax)
jg     80a15ea <_IO_stdin_used+0xb2e6>
lcall  *0x7fb80000(%ecx,%ecx,2)
sti
(bad)
mov    $0xe8000049,%esp
jg     80a15fa <_IO_stdin_used+0xb2f6>
call   *%esp
dec    %ecx
add    %al,(%eax)
or     %al,0x49ecfffb(%eax)
add    %al,(%eax)
cmp    %al,0x4a04fffb(%eax)
add    %al,(%eax)
push   $0x1cfffb80
dec    %edx
add    %al,(%eax)
cwtl
cmp    $0xff,%bl
xor    $0x4a,%al
add    %al,(%eax)
mov    $0x4cfffb80,%eax
dec    %edx
add    %al,(%eax)
call   750a11b1 <_end+0x6cfe8861>
dec    %edx
add    %al,(%eax)
sub    %al,0x4a8cfffb(%ecx)
add    %al,(%eax)
push   $0xb8fffb81
dec    %edx
add    %al,(%eax)
mov    %al,0x4af8fffb(%edx)
add    %al,(%eax)
or     %al,0x4b24fffb(%ebx)
add    %al,(%eax)
dec    %eax
cmp    $0xffffffff,%ebx
inc    %esp
dec    %ebx
add    %al,(%eax)
js     80a15e1 <_IO_stdin_used+0xb2dd>
sti
lcall  *0x0(%ebx,%ecx,2)
add    %bh,0x7cfffb83(%eax)
dec    %ebx
add    %al,(%eax)
fadds  0x4b94fffb(%ebx)
add    %al,(%eax)
sbb    %al,0x4bb4ff(%ebx,%edi,8)
add    %cl,-0x7c(%eax)
sti
dec    %esp
dec    %ebx
add    %al,(%eax)
mov    %al,0x4becff(%ebx,%edi,8)
add    %ch,0x4fffb84(%eax)
dec    %esp
add    %al,(%eax)
mov    %al,0x4c5cfffb(%edi)
add    %al,(%eax)
test   $0x87,%al
sti
pushl  0x0(%esp,%ecx,2)
add    %ch,-0x78(%eax)
sti
ljmp   *-0x77780000(%esp,%ecx,2)
sti
inc    %esp
dec    %esp
add    %al,(%eax)
cwtl
mov    %bh,%bl
(bad)
fmuls  0x0(%eax,%eax,1)
test   $0x88,%al
sti
(bad)
in     (%dx),%al
dec    %esp
add    %al,(%eax)
call   4d0a1252 <_end+0x44fe8902>
dec    %ebp
add    %al,(%eax)
test   $0x8a,%al
sti
decl   -0x74780000(%ebp,%ecx,2)
sti
dec    %eax
dec    %ebp
add    %al,(%eax)
js     80a166a <_IO_stdin_used+0xb366>
sti
incl   (%esi,%ecx,2)
add    %al,(%eax)
cmp    %dl,0x4e44fffb(%eax)
add    %al,(%eax)
sbb    %dl,0x4e7cfffb(%ecx)
add    %al,(%eax)
pop    %eax
xchg   %eax,%edx
sti
(bad)
call   d00a174b <_end+0xc7fe8dfb>
xchg   %eax,%edx
sti
jmp    *(%eax)
dec    %edi
add    %al,(%eax)
cmp    %dl,0x4f4cfffb(%ebx)
add    %al,(%eax)
js     80a16a3 <_IO_stdin_used+0xb39f>
sti
(bad)
mov    $0x8800004f,%eax
xchg   %eax,%esi
sti
call   *(%eax)
push   %eax
add    %al,(%eax)
cwtl
xchg   %eax,%esi
sti
jmp    *(%eax,%edx,2)
add    %al,(%eax)
test   $0x96,%al
sti
(bad)
cmp    %dl,0x0(%eax)
add    %ch,(%eax)
xchg   %eax,%edi
sti
pushl  0x50(%eax)
add    %al,(%eax)
test   $0x98,%al
sti
(bad)
fcoml  0x0(%eax)
add    %cl,-0x67(%eax)
sti
lcall  *(%eax)
push   %ecx
add    %al,(%eax)
clc
mov    0x5188fffb,%al
add    %al,(%eax)
test   $0xa1,%al
sti
(bad)
fcoml  0x0(%ecx)
add    %bl,-0x5e(%eax)
sti
lcall  *(%eax)
push   %edx
add    %al,(%eax)
call   590a1303 <_end+0x50fe89b3>
push   %edx
add    %al,(%eax)
pop    %eax
movsl  %ds:(%esi),%es:(%edi)
sti
ljmp   *-0x17ffffae(%eax)
movsl  %ds:(%esi),%es:(%edi)
sti
inc    %eax
push   %edx
add    %al,(%eax)
cmp    %ah,0x5314fffb(%edi)
add    %al,(%eax)
mov    %ch,0x536cfffb(%ecx)
add    %al,(%eax)
or     %ch,0x53acfffb(%ebp)
add    %al,(%eax)
dec    %eax
lods   %ds:(%esi),%eax
sti
inc    %esp
push   %ebx
add    %al,(%eax)
js     80a1743 <_IO_stdin_used+0xb43f>
sti
jmp    *%esp
push   %ebx
add    %al,(%eax)
test   $0xae,%al
sti
jmp    *(%eax)
push   %esp
add    %al,(%eax)
push   $0x78fffbaf
push   %esp
add    %al,(%eax)
sbb    %dh,0x54d0fffb(%ecx)
add    %al,(%eax)
test   $0xb2,%al
sti
ljmp   *(%eax)
push   %ebp
add    %al,(%eax)
js     80a1772 <_IO_stdin_used+0xb46e>
sti
incl   0x38000055(%eax)
mov    $0xfb,%dh
(bad)
fcoms  0x0(%ebp)
add    %bh,%al
mov    $0xfb,%bh
pushl  (%eax)
push   %esi
add    %al,(%eax)
mov    $0x88fffbb9,%eax
push   %esi
add    %al,(%eax)
or     %bh,0x56c8ff(%ebx,%edi,8)
add    %bh,-0x43(%eax)
sti
decl   (%edi,%edx,2)
add    %al,(%eax)
call   590a13af <_end+0x50fe8a5f>
push   %edi
add    %al,(%eax)
dec    %eax
sar    $0xff,%bl
test   $0x57,%al
add    %al,(%eax)
call   ed0a13c1 <_end+0xe4fe8a71>
push   %edi
add    %al,(%eax)
cmp    %al,%dl
sti
(bad)
cmp    $0x58,%al
add    %al,(%eax)
test   $0xc3,%al
sti
call   *-0x3b680000(%eax,%ebx,2)
sti
(bad)
call   600a1875 <_end+0x57fe8f25>
(bad)
inc    %esp
pop    %ecx
add    %al,(%eax)
cmp    %al,%dh
sti
decl   -0x37e80000(%ecx,%ebx,2)
sti
dec    %esp
pop    %ecx
add    %al,(%eax)
sbb    %cl,%dl
sti
call   *(%eax)
pop    %edx
add    %al,(%eax)
mov    $0x7cfffbcc,%eax
pop    %edx
add    %al,(%eax)
enter  $0xfbcd,$0xff
mov    $0x5a,%ah
add    %al,(%eax)
cwtl
into
sti
(bad)
in     (%dx),%al
pop    %edx
add    %al,(%eax)
push   $0x24fffbcf
pop    %ebx
add    %al,(%eax)
test   $0xd0,%al
sti
lcall  *0x0(%ebx,%ebx,2)
add    %bh,%al
sar    %ebx
dec    %eax
pop    %ebx
add    %al,(%eax)
call   290a1444 <_end+0x20fe8af4>
pop    %esp
add    %al,(%eax)
clc
sar    %cl,%ebx
pushl  (%esp,%ebx,2)
add    %al,(%eax)
mov    $0x64fffbd4,%eax
pop    %esp
add    %al,(%eax)
clc
aam    $0xfb
incl   -0x2a980000(%esp,%ebx,2)
sti
(bad)
mov    $0xf800005c,%eax
(bad)
sti
(bad)
clc
pop    %esp
add    %al,(%eax)
sbb    %dl,%bh
sti
call   *(%eax)
pop    %ebp
add    %al,(%eax)
sub    %dl,%bh
sti
jmp    *-0x28c80000(,%ebx,2)
sti
(bad)
cmp    %bl,0x0(%ebp)
add    %cl,-0x29(%eax)
sti
decl   0x0(%ebp,%ebx,2)
add    %ch,-0x7b000429(%eax)
pop    %ebp
add    %al,(%eax)
clc
xlat   %ds:(%ebx)
sti
pushl  0x800005d(%eax)
fdivr  %st(3),%st
inc    %esp
pop    %ebp
add    %al,(%eax)
sub    %bl,%al
sti
(bad)
fcomps 0x0(%ebp)
add    %bl,-0x28(%eax)
sti
push   %eax
pop    %ebp
add    %al,(%eax)
test   $0xd8,%al
sti
lcall  *(%esi,%ebx,2)
add    %al,(%eax)
push   $0x5cfffbd9
pop    %esi
add    %al,(%eax)
fcomp  %st(1)
sti
pushl  0x4800005e(%eax)
(bad)
(bad)
call   f00a1963 <_end+0xe7fe9013>
(bad)
(bad)
cmp    $0x5f,%al
add    %al,(%eax)
push   $0x90fffbdb
pop    %edi
add    %al,(%eax)
call   c50a14f4 <_end+0xbcfe8ba4>
pop    %edi
add    %al,(%eax)
or     %bl,%ah
sti
call   *%eax
pop    %edi
add    %al,(%eax)
sub    %bl,%ah
sti
jmp    *%esp
pop    %edi
add    %al,(%eax)
test   $0xdc,%al
sti
call   *(%eax,%eiz,2)
add    %al,(%eax)
mov    $0x28fffbdc,%eax
pusha
add    %al,(%eax)
fcomp  %st(4)
sti
(bad)
cmp    $0x60,%al
add    %al,(%eax)
call   590a1525 <_end+0x50fe8bd5>
pusha
add    %al,(%eax)
enter  $0xfbdd,$0xff
mov    %ah,0x0(%eax)
add    %bl,-0x22(%eax)
sti
ljmp   *-0x21280000(%eax,%eiz,2)
sti
call   *%eax
pusha
add    %al,(%eax)
call   ed0a1547 <_end+0xe4fe8bf7>
pusha
add    %al,(%eax)
sbb    %bl,%bh
sti
incl   (%ecx,%eiz,2)
add    %al,(%eax)
dec    %eax
(bad)
jmp    *(%ecx,%eiz,2)
add    %al,(%eax)
cwtl
(bad)
call   *0x61(%eax)
add    %al,(%eax)
call   850a1568 <_end+0x7cfe8c18>
popa
add    %al,(%eax)
cmp    %ah,%al
sti
ljmp   *-0x47ffff9f(%eax)
loopne 80a1992 <_IO_stdin_used+0xb68e>
call   *%esp
popa
add    %al,(%eax)
fsub   %st(0),%st
sti
(bad)
in     (%dx),%al
popa
add    %al,(%eax)
call   90a1589 <_end+0xfe8c39>
bound  %eax,(%eax)
add    %bh,(%eax)
loope  80a19aa <_IO_stdin_used+0xb6a6>
(bad)
cmp    %ah,0x0(%edx)
add    %bh,-0x1e(%eax)
sti
(bad)
js     80a1a1c <_IO_stdin_used+0xb718>
add    %al,(%eax)
js     80a19a2 <_IO_stdin_used+0xb69e>
sti
call   *%eax
bound  %eax,(%eax)
add    %ch,-0xf00041c(%eax)
bound  %eax,(%eax)
add    %bl,(%eax)
out    %eax,$0xfb
pushl  (%eax)
arpl   %ax,(%eax)
add    %cl,(%eax)
ljmp   $0x0,$0x6370fffb
call   b90a15cb <_end+0xb0fe8c7b>
arpl   %ax,(%eax)
add    %cl,(%eax)
jmp    80a19e2 <_IO_stdin_used+0xb6de>
call   *%eax
arpl   %ax,(%eax)
add    %bl,(%eax)
jmp    80a19ea <_IO_stdin_used+0xb6e6>
jmp    *%esp
arpl   %ax,(%eax)
add    %ch,(%eax)
jmp    80a19f2 <_IO_stdin_used+0xb6ee>
(bad)
clc
arpl   %ax,(%eax)
add    %bh,(%eax)
jmp    80a19fa <_IO_stdin_used+0xb6f6>
decl   (%esp,%eiz,2)
add    %al,(%eax)
cwtl
jmp    80a1a02 <_IO_stdin_used+0xb6fe>
ljmp   *(%eax)
add    %al,%fs:(%eax)
enter  $0xfbeb,$0xff
inc    %eax
add    %al,%fs:(%eax)
call   5d0a1604 <_end+0x54fe8cb4>
add    %al,%fs:(%eax)
or     %ch,%ah
sti
ljmp   *0x64(%eax)
add    %al,(%eax)
push   $0x8cfffbec
add    %al,%fs:(%eax)
call   dd0a161d <_end+0xd4fe8ccd>
add    %al,%fs:(%eax)
clc
in     (%dx),%al
sti
(bad)
call   100a1aa1 <_end+0x7fe9151>
in     (%dx),%eax
sti
(bad)
cld
add    %al,%fs:(%eax)
pop    %eax
in     (%dx),%eax
sti
lcall  *(%eax)
add    %al,%gs:(%eax)
test   $0xee,%al
sti
decl   0x65(%eax)
add    %al,(%eax)
enter  $0xfbee,$0xff
pop    %esp
add    %al,%gs:(%eax)
call   790a164f <_end+0x70fe8cff>
add    %al,%gs:(%eax)
cmp    %dh,%al
sti
jmp    *-0x27ffff9b(%eax)
repnz sti
(bad)
fsubs  0x0(%ebp)
add    %cl,%al
repz sti
call   *(%eax)
data16
add    %al,(%eax)
clc
hlt
sti
(bad)
cmp    %ah,0x0(%esi)
add    %ch,(%eax)
cmc
sti
call   *0x66(%eax)
add    %al,(%eax)
or     %dh,%dh
sti
decl   -0x9d80000(%esi,%eiz,2)
sti
jmp    *0x38000066(%eax)
idiv   %bl
pushl  -0x9b80000(%esi,%eiz,2)
sti
dec    %eax
data16
add    %al,(%eax)
mov    %dh,%dh
sti
jmp    *%eax
data16
add    %al,(%eax)
enter  $0xfbf6,$0xff
or     $0x67,%al
add    %al,(%eax)
js     80a1ab5 <_IO_stdin_used+0xb7b1>
sti
(bad)
cmp    $0x67,%al
add    %al,(%eax)
mov    $0x5cfffbf7,%eax
add    %al,(%bx,%si)
call   910a16c8 <_end+0x88fe8d78>
add    %al,(%bx,%si)
sbb    %bh,%al
sti
ljmp   *0x68000067(%eax)
clc
sti
dec    %esp
add    %al,(%bx,%si)
test   $0xf8,%al
sti
(bad)
clc
add    %al,(%bx,%si)
fdivr  %st(0),%st
sti
jmp    *(%eax,%ebp,2)
add    %al,(%eax)
push   $0x48fffbf9
push   $0xfa680000
sti
lcall  *-0x5880000(%eax,%ebp,2)
sti
pushl  -0x27ffff98(%eax)
cli
sti
(bad)
fsubrl 0x0(%eax)
add    %cl,0xfffbfb(%eax)
imul   $0xfbfba800,(%eax),%eax
call   *(%ecx,%ebp,2)
add    %al,(%eax)
clc
sti
sti
decl   0x69(%eax)
add    %al,(%eax)
call   a50a172d <_end+0x9cfe8ddd>
imul   $0xfbfd7800,(%eax),%eax
jmp    *%esp
imul   $0xfbff9800,(%eax),%eax
jmp    *(%edx,%ebp,2)
add    %al,(%eax)
sub    %al,(%ecx)
cld
jmp    *0x0(%edx,%ebp,2)
add    %cl,-0x430003fe(%eax)
push   $0x0
add    %bl,0x4(%eax)
cld
(bad)
cld
push   $0x0
add    %cl,0xa(%eax)
cld
ljmp   *0x0(%ebx,%ebp,2)
add    %bh,0xb(%eax)
cld
call   *-0x77ffff95(%eax)
or     %esp,%edi
jmp    *0xba80000(%ebx,%ebp,2)
cld
(bad)
mov    $0xd800006b,%eax
or     %esp,%edi
call   *%esp
imul   $0x0,(%eax),%eax
call   f10a1794 <_end+0xe8fe8e44>
imul   $0x0,(%eax),%eax
clc
or     %esp,%edi
(bad)
cld
imul   $0x0,(%eax),%eax
sbb    %cl,(%esp,%edi,8)
call   *(%esp,%ebp,2)
add    %al,(%eax)
cmp    %cl,(%esp,%edi,8)
ljmp   *(%esp,%ebp,2)
add    %al,(%eax)
enter  $0xfc0c,$0xff
je     80a1c16 <_IO_stdin_used+0xb912>
add    %al,(%eax)
push   $0xacfffc0d
insb   (%dx),%es:(%edi)
add    %al,(%eax)
enter  $0xfc0d,$0xff
lock insb (%dx),%es:(%edi)
add    %al,(%eax)
pop    %eax
push   %cs
cld
lcall  *0xe980000(,%ebp,2)
cld
(bad)
cmp    $0x6d,%al
add    %al,(%eax)
enter  $0xfc0e,$0xff
push   $0x1800006d
paddb  %mm7,%mm7
lods   %ds:(%esi),%al
insl   (%dx),%es:(%edi)
add    %al,(%eax)
call   f10a17f0 <_end+0xe8fe8ea0>
insl   (%dx),%es:(%edi)
add    %al,(%eax)
js     80a1bfa <_IO_stdin_used+0xb8f6>
cld
ljmp   *(%esi,%ebp,2)
add    %al,(%eax)
test   $0x14,%al
cld
incl   0x0(%esi,%ebp,2)
add    %bh,0x58fffc14(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
fcoms  (%esp,%edi,8)
ljmp   *0x0(%esi,%ebp,2)
add    %bh,%al
adc    $0xfc,%al
incl   0x3800006e(%eax)
adc    $0x6eacfffc,%eax
add    %al,(%eax)
js     80a1c2b <_IO_stdin_used+0xb927>
cld
(bad)
fsubrs 0x0(%esi)
add    %bh,0x4fffc15(%eax)
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
clc
adc    $0x6f30fffc,%eax
add    %al,(%eax)
sbb    %dl,(%esi)
cld
incl   0x0(%edi,%ebp,2)
add    %ch,(%eax)
push   %ss
cld
lcall  *0x6f(%eax)
add    %al,(%eax)
mov    %dl,(%esi)
cld
call   *-0x57ffff91(%eax)
pop    %ss
cld
(bad)
call   100a1cbc <_end+0x7fe936c>
and    $0xfc,%al
incl   0x0(%eax,%esi,2)
add    %bl,-0x730003dc(%eax)
jo     80a1c5b <_IO_stdin_used+0xb957>
add    %ch,-0x5f0003dc(%eax)
jo     80a1c63 <_IO_stdin_used+0xb95f>
add    %bh,%al
and    $0xfc,%al
jmp    *%esp
jo     80a1c6b <_IO_stdin_used+0xb967>
add    %bl,0x20fffc25(%eax)
jno    80a1c73 <_IO_stdin_used+0xb96f>
add    %ch,(%eax)
es
cld
ljmp   *0x71(%eax)
add    %al,(%eax)
mov    %ch,(%ecx)
cld
ljmp   *0x8000071(%eax)
sub    %ah,%bh
(bad)
call   700a1cfe <_end+0x67fe93ae>
sub    %esp,%edi
ljmp   *(%eax)
jb     80a1c93 <_IO_stdin_used+0xb98f>
add    %bl,0x48fffc2b(%eax)
jb     80a1c9b <_IO_stdin_used+0xb997>
add    %bh,0x68fffc2b(%eax)
jb     80a1ca3 <_IO_stdin_used+0xb99f>
add    %bl,(%eax)
sub    $0xfc,%al
call   *0x2c680000(%edx,%esi,2)
cld
dec    %esp
jb     80a1cb3 <_IO_stdin_used+0xb9af>
add    %bh,-0xf0003d4(%eax)
jb     80a1cbb <_IO_stdin_used+0xb9b7>
add    %cl,(%eax)
cs
cld
decl   0x73(%eax)
add    %al,(%eax)
mov    $0xccfffc31,%eax
jae    80a1ccb <_IO_stdin_used+0xb9c7>
add    %bh,%al
xor    %edi,%esp
jmp    *%eax
jae    80a1cd3 <_IO_stdin_used+0xb9cf>
add    %bh,0x33(%eax)
cld
(bad)
cmp    $0x74,%al
add    %al,(%eax)
js     80a1d12 <_IO_stdin_used+0xba0e>
cld
dec    %esp
je     80a1ce3 <_IO_stdin_used+0xb9df>
add    %bh,-0x70003cc(%eax)
je     80a1ceb <_IO_stdin_used+0xb9e7>
add    %cl,(%eax)
xor    $0x7524fffc,%eax
add    %al,(%eax)
cmp    %dh,0x7550fffc
add    %al,(%eax)
mov    $0x88fffc35,%eax
jne    80a1d03 <_IO_stdin_used+0xb9ff>
add    %cl,(%eax)
ss
cld
inc    %eax
jne    80a1d0b <_IO_stdin_used+0xba07>
add    %ch,0x36(%eax)
cld
(bad)
in     (%dx),%al
jne    80a1d13 <_IO_stdin_used+0xba0f>
add    %ch,%al
ss
cld
jmp    *(%esi,%esi,2)
add    %al,(%eax)
sbb    %dh,(%edi)
cld
call   *0x76(%eax)
add    %al,(%eax)
mov    %dh,(%edi)
cld
incl   0x38480000(%esi,%esi,2)
cld
(bad)
fdivs  0x0(%esi)
add    %cl,0x4fffc38(%eax)
ja     80a1d3b <_IO_stdin_used+0xba37>
add    %bl,0x18fffc38(%eax)
ja     80a1d43 <_IO_stdin_used+0xba3f>
add    %ch,(%eax)
cmp    %edi,%esp
lcall  *0x0(%edi,%esi,2)
add    %bl,0x39(%eax)
cld
(bad)
jl     80a1dc9 <_IO_stdin_used+0xbac5>
add    %al,(%eax)
mov    $0xb8fffc39,%eax
ja     80a1d5b <_IO_stdin_used+0xba57>
add    %bh,%al
cmp    %edi,%esp
jmp    *%esp
ja     80a1d63 <_IO_stdin_used+0xba5f>
add    %ch,(%eax)
cmp    %ah,%bh
incl   (%eax,%edi,2)
add    %al,(%eax)
push   $0x24fffc3a
js     80a1d73 <_IO_stdin_used+0xba6f>
add    %ch,0x50fffc3a(%eax)
js     80a1d7b <_IO_stdin_used+0xba77>
add    %bl,%al
cmp    %ah,%bh
pushl  0x78(%eax)
add    %al,(%eax)
mov    %bh,(%ebx)
cld
ljmp   *0x8000078(%eax)
cmp    $0xfc,%al
(bad)
fdivrl 0x0(%eax)
add    %bl,0x3c(%eax)
cld
call   *(%eax)
jns    80a1d9b <_IO_stdin_used+0xba97>
add    %bl,%al
cmp    $0x7950fffc,%eax
add    %al,(%eax)
sbb    %bh,(%esi)
cld
pushl  0x79(%eax)
add    %al,(%eax)
pop    %eax
ds
cld
jmp    *0x42180000(%ecx,%edi,2)
cld
jmp    *%esp
jns    80a1dbb <_IO_stdin_used+0xbab7>
add    %cl,0x42(%eax)
cld
call   *(%eax)
jp     80a1dc3 <_IO_stdin_used+0xbabf>
add    %bh,0x42(%eax)
cld
pushl  (%eax)
jp     80a1dcb <_IO_stdin_used+0xbac7>
add    %bh,0x50fffc42(%eax)
jp     80a1dd3 <_IO_stdin_used+0xbacf>
add    %cl,0x43(%eax)
cld
decl   0x43e80000(%edx,%edi,2)
cld
call   *%eax
jp     80a1de3 <_IO_stdin_used+0xbadf>
add    %bh,0x44(%eax)
cld
call   *(%ebx,%edi,2)
add    %al,(%eax)
or     %al,-0x4(%ebp)
lcall  *0x7b(%eax)
add    %al,(%eax)
test   $0x45,%al
cld
call   *0x6800007b(%eax)
inc    %esi
cld
(bad)
call   100a1e80 <_end+0x7fe9530>
inc    %edi
cld
jmp    *(%eax)
jl     80a1e0b <_IO_stdin_used+0xbb07>
add    %bl,0x58fffc47(%eax)
jl     80a1e13 <_IO_stdin_used+0xbb0f>
add    %bh,0x48(%eax)
cld
call   *0x49080000(%esp,%edi,2)
cld
(bad)
fdivrs 0x0(%eax,%eax,1)
enter  $0xfc49,$0xff
and    %bh,0x0(%ebp)
add    %cl,0x68fffc4a(%eax)
jge    80a1e33 <_IO_stdin_used+0xbb2f>
add    %ch,(%eax)
dec    %ebx
cld
(bad)
mov    $0xc800007d,%esp
dec    %ebx
cld
call   *(%eax)
jle    80a1e43 <_IO_stdin_used+0xbb3f>
add    %cl,0x58fffc4c(%eax)
jle    80a1e4b <_IO_stdin_used+0xbb47>
add    %ch,(%eax)
dec    %ebp
cld
decl   0x800007e(%eax)
dec    %esi
cld
jmp    *%eax
jle    80a1e5b <_IO_stdin_used+0xbb57>
add    %ch,%al
dec    %esi
cld
(bad)
cmp    %bh,0x0(%edi)
add    %bh,%al
dec    %edi
cld
call   *-0x37ffff81(%eax)
push   %eax
cld
dec    %eax
jg     80a1e73 <_IO_stdin_used+0xbb6f>
add    %cl,%al
push   %edx
cld
decl   (%eax)
addb   $0x0,(%eax)
or     %dl,-0x4(%ebx)
incl   -0x80(%eax)
add    %al,(%eax)
fcoms  -0x4(%ebx)
pushl  0x0(%eax,%eax,4)
add    %bh,-0x4f0003ac(%eax)
addb   $0x0,(%eax)
test   $0x55,%al
cld
push   %eax
addb   $0x0,(%eax)
call   310a1af6 <_end+0x28fe91a6>
addl   $0xfc565800,(%eax)
call   *0x0(%ecx,%eax,4)
add    %ch,%al
push   %esi
cld
decl   0x57780000(%ecx,%eax,4)
cld
(bad)
mov    $0x68000081,%eax
pop    %eax
cld
push   %eax
addl   $0xfc594800,(%eax)
ljmp   *(%edx,%eax,4)
add    %al,(%eax)
mov    %bl,-0x4(%edx)
incl   0x5b380000(%edx,%eax,4)
cld
dec    %esp
(bad)
add    %al,(%eax)
sbb    %bl,-0x4(%ebp)
jmp    *(%ebx,%eax,4)
add    %al,(%eax)
call   810a1b46 <_end+0x78fe91f6>
addl   $0x0,(%eax)
clc
pusha
cld
(bad)
mov    $0xf8000083,%eax
arpl   %di,%sp
jmp    *(%esp,%eax,4)
add    %al,(%eax)
cmp    %ah,-0x4(%esi)
jmp    *0x0(%esp,%eax,4)
add    %bh,-0x6300039a(%eax)
test   %al,(%eax)
add    %cl,%al
addr16 cld
(bad)
fadds  -0x3971800(%eax,%eax,1)
call   *0x69680000(,%eax,4)
cld
decl   -0x7b(%eax)
add    %al,(%eax)
fsubrs -0x4(%ecx)
incl   -0x47ffff7b(%eax)
push   $0xfffffffc
(bad)
faddl  0x6b080000(%ebp)
cld
decl   (%eax)
xchg   %al,(%eax)
add    %bh,(%eax)
imul   $0xffffffff,%esp,%edi
xor    $0x86,%al
add    %al,(%eax)
cwtl
imul   $0xffffffff,%esp,%edi
insb   (%dx),%es:(%edi)
xchg   %al,(%eax)
add    %bh,0x6c(%eax)
cld
(bad)
mov    $0x88000086,%eax
jno    80a1f53 <_IO_stdin_used+0xbc4f>
call   *(%edi,%eax,4)
add    %al,(%eax)
cmp    %dh,-0x4(%edx)
lcall  *0x0(%edi,%eax,4)
add    %bl,%al
jb     80a1f63 <_IO_stdin_used+0xbc5f>
jmp    *0x73280000(%edi,%eax,4)
cld
call   *%eax
xchg   %eax,(%eax)
add    %bl,(%eax)
je     80a1f73 <_IO_stdin_used+0xbc6f>
decl   (%eax,%ecx,4)
add    %al,(%eax)
cwtl
je     80a1f7b <_IO_stdin_used+0xbc77>
incl   -0x78(%eax)
add    %al,(%eax)
fdivrs -0x4(%edx)
ljmp   *0x7c080000(%eax,%ecx,4)
cld
(bad)
in     (%dx),%al
mov    %al,(%eax)
add    %ch,0x1cfffc7c(%eax)
mov    %eax,(%eax)
add    %cl,0x7d(%eax)
cld
decl   0x0(%ecx,%ecx,4)
add    %ch,(%eax)
jle    80a1fa3 <_IO_stdin_used+0xbc9f>
jmp    *0x7ef80000(%ecx,%ecx,4)
cld
(bad)
fmull  0x7f880000(%ecx)
cld
call   *(%edx,%ecx,4)
add    %al,(%eax)
sub    %al,-0x75b30004(%eax)
add    %al,(%eax)
dec    %eax
cmp    $0x8ab8ff,%esp
add    %bl,0x24fffc82(%eax)
mov    (%eax),%eax
add    %bl,0x6cfffc83(%eax)
mov    (%eax),%eax
add    %bh,%al
test   %bh,%ah
pushl  -0x79f80000(%ebx,%ecx,4)
cld
(bad)
cld
mov    (%eax),%eax
add    %bh,-0x79(%eax)
cld
incl   0x0(%esp,%ecx,4)
add    %bl,-0x6f000378(%eax)
mov    %es,(%eax)
add    %bl,%al
mov    %edi,%esp
(bad)
call   300a2091 <_end+0x27fe9741>
mov    %esp,%edi
pushl  (%eax)
lea    (%eax),%eax
add    %ch,-0x75(%eax)
cld
call   *-0x73(%eax)
add    %al,(%eax)
fmuls  -0x72830004(%ebx)
add    %al,(%eax)
clc
mov    %?,%esp
inc    %esp
lea    (%eax),%eax
add    %bh,-0x3000373(%eax)
lea    (%eax),%eax
add    %bl,%al
(bad)
cld
call   *(%eax)
mov    (%eax),%es
add    %ch,-0x72(%eax)
cld
decl   -0x72(%eax)
add    %al,(%eax)
clc
mov    %esp,%?
decl   -0x70780000(%esi,%ecx,4)
cld
inc    %esp
mov    (%eax),%es
add    %bl,(%eax)
nop
cld
decl   (%eax)
popl   (%eax)
add    %ch,0x40fffc90(%eax)
popl   (%eax)
add    %bh,(%eax)
xchg   %eax,%ecx
cld
incl   -0x6e380000(%edi,%ecx,4)
cld
(bad)
mov    $0x5800008f,%esp
xchg   %eax,%edx
cld
incl   (%eax)
nop
add    %al,(%eax)
call   4d0a1d0b <_end+0x44fe93bb>
nop
add    %al,(%eax)
ja     80a2011 <_IO_stdin_used+0xbd0d>
cld
decl   -0x77ffff70(%eax)
xchg   %eax,%ebx
cld
lcall  *-0x6c280000(%eax,%edx,4)
cld
(bad)
mov    $0xe8000090,%esp
xchg   %eax,%ebx
cld
call   *%eax
nop
add    %al,(%eax)
sub    %dl,0x90fcff(%esp,%edi,8)
add    %bh,-0x6c(%eax)
cld
ljmp   *(%eax)
xchg   %eax,%ecx
add    %al,(%eax)
cwtl
xchg   %eax,%esp
cld
(bad)
cmp    $0x91,%al
add    %al,(%eax)
mov    $0x50fffc94,%eax
xchg   %eax,%ecx
add    %al,(%eax)
or     %dl,-0x6e7b0004(%ebp)
add    %al,(%eax)
pop    %eax
xchg   %eax,%ebp
cld
inc    %eax
xchg   %eax,%ecx
add    %al,(%eax)
mov    $0xd4fffc95,%eax
xchg   %eax,%ecx
add    %al,(%eax)
enter  $0xfc95,$0xff
call   e00a216e <_end+0xd7fe981e>
xchg   %eax,%ebp
cld
(bad)
cld
xchg   %eax,%ecx
add    %al,(%eax)
call   190a1d7e <_end+0x10fe942e>
xchg   %eax,%edx
add    %al,(%eax)
clc
xchg   %eax,%ebp
cld
jmp    *(%edx,%edx,4)
add    %al,(%eax)
or     %dl,-0x6dc70004(%esi)
add    %al,(%eax)
test   $0x96,%al
cld
pushl  -0x6e(%eax)
add    %al,(%eax)
fcoms  -0x6d7b0004(%esi)
add    %al,(%eax)
clc
xchg   %eax,%esi
cld
lcall  *-0x27ffff6e(%eax)
xchg   %eax,%edi
cld
(bad)
fcoml  -0x67980000(%edx)
cld
call   *(%ebx,%edx,4)
add    %al,(%eax)
enter  $0xfc98,$0xff
inc    %eax
xchg   %eax,%ebx
add    %al,(%eax)
sbb    %bl,-0x6c930004(%ecx)
add    %al,(%eax)
js     80a20cf <_IO_stdin_used+0xbdcb>
cld
ljmp   *0x58000093(%eax)
lcall  $0x0,$0x93f0fffc
mov    $0x48fffc9c,%eax
xchg   %eax,%esp
add    %al,(%eax)
sub    %bl,-0x6b930004(%ebp)
add    %al,(%eax)
test   $0x9d,%al
cld
lcall  *0x68000094(%eax)
sahf
cld
call   *%eax
xchg   %eax,%esp
add    %al,(%eax)
fcomps -0x6b0b0004(%esi)
add    %al,(%eax)
cwtl
lahf
cld
(bad)
cmp    $0x95,%al
add    %al,(%eax)
dec    %eax
mov    0x9594fffc,%al
add    %al,(%eax)
mov    $0xf0fffca1,%eax
xchg   %eax,%ebp
add    %al,(%eax)
clc
mov    0x961cfffc,%eax
add    %al,(%eax)
cmp    %ah,-0x69b70004(%edx)
add    %al,(%eax)
mov    %ah,-0x698b0004(%edx)
add    %al,(%eax)
cwtl
mov    %al,0x9688fffc
add    %al,(%eax)
fsubs  -0x695b0004(%edx)
add    %al,(%eax)
pop    %eax
mov    %eax,0x96e0fffc
add    %al,(%eax)
clc
mov    %eax,0x971cfffc
add    %al,(%eax)
clc
movsb  %ds:(%esi),%es:(%edi)
cld
pushl  0x0(%edi,%edx,4)
add    %cl,-0x4f00035b(%eax)
xchg   %eax,%edi
add    %al,(%eax)
clc
movsl  %ds:(%esi),%es:(%edi)
cld
push   %esp
xchg   %eax,%edi
add    %al,(%eax)
cwtl
cmpsb  %es:(%edi),%ds:(%esi)
cld
ljmp   *(%eax,%ebx,4)
add    %al,(%eax)
cmp    %ah,-0x67930004(%edi)
add    %al,(%eax)
js     80a218d <_IO_stdin_used+0xbe89>
cld
incl   -0x47ffff68(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
cld
call   *-0x57f80000(%eax,%ebx,4)
cld
dec    %esp
cwtl
add    %al,(%eax)
cmp    %ch,-0x67130004(%eax)
add    %al,(%eax)
dec    %eax
test   $0xfc,%al
incl   (%eax)
cltd
add    %al,(%eax)
push   $0x14fffca8
cltd
add    %al,(%eax)
mov    $0x40fffca8,%eax
cltd
add    %al,(%eax)
call   5d0a1ec9 <_end+0x54fe9579>
cltd
add    %al,(%eax)
js     80a21cf <_IO_stdin_used+0xbecb>
cld
call   *-0x55780000(%ecx,%ebx,4)
cld
dec    %esp
cltd
add    %al,(%eax)
fsubrs -0x66070004(%edx)
add    %al,(%eax)
or     %ch,0x9a64ff(%esp,%edi,8)
add    %cl,-0x54(%eax)
cld
incl   -0x53780000(%edx,%ebx,4)
cld
jmp    *-0x52580000(%edx,%ebx,4)
cld
(bad)
cld
lcall  $0xfffc,$0xae080000
and    %bl,-0x51980000(%ebx)
cld
decl   0x0(%ebx,%ebx,4)
add    %ch,0x60fffcae(%eax)
fwait
add    %al,(%eax)
cmp    %dh,0x9bd0ff(%esp,%edi,8)
add    %cl,-0xb00034c(%eax)
fwait
add    %al,(%eax)
test   $0xb4,%al
cld
decl   (%eax)
pushf
add    %al,(%eax)
enter  $0xfcb4,$0xff
sbb    $0x9c,%al
add    %al,(%eax)
sbb    %dh,-0x63b70004(%ebp)
add    %al,(%eax)
mov    %dh,-0x63830004(%ebp)
add    %al,(%eax)
clc
mov    $0xfc,%ch
pushl  -0x17ffff64(%eax)
mov    $0xfc,%dh
(bad)
call   900a2351 <_end+0x87fe9a01>
mov    $0xfc,%bh
jmp    *(%eax)
popf
add    %al,(%eax)
fdivrs -0x629b0004(%ebx)
add    %al,(%eax)
sub    %bh,-0x62430004(%ebp)
add    %al,(%eax)
cwtl
mov    $0x9e10fffc,%esi
add    %al,(%eax)
clc
mov    $0x9e4cfffc,%esi
add    %al,(%eax)
sub    %al,%al
cld
(bad)
mov    $0x9800009e,%esp
sar    $0xff,%ah
lock sahf
add    %al,(%eax)
fadd   %st(0),%st
cld
decl   (%eax)
lahf
add    %al,(%eax)
dec    %eax
ret    $0xfffc
fs
lahf
add    %al,(%eax)
pop    %eax
(bad)
movsb  %ds:(%esi),%es:(%edi)
lahf
add    %al,(%eax)
call   ed0a1fce <_end+0xe4fe967e>
lahf
add    %al,(%eax)
cwtl
int3
cld
(bad)
cmp    $0xa0,%al
add    %al,(%eax)
cmp    %cl,%ch
cld
call   *0x580000a0(%eax)
iret
cld
jmp    *-0x2fe80000(%eax,%eiz,4)
cld
jmp    *%esp
mov    0xd0a80000,%al
cld
jmp    *(%eax)
mov    0xd0d80000,%eax
cld
incl   -0x5f(%eax)
add    %al,(%eax)
sbb    %dl,%cl
cld
jmp    *0x0(%ecx,%eiz,4)
add    %bl,-0x2f(%eax)
cld
decl   -0x57ffff5f(%eax)
sar    %esp
(bad)
mov    $0xf80000a1,%esp
sar    %esp
(bad)
call   500a23fe <_end+0x47fe9aae>
sar    %cl,%ah
call   *(%edx,%eiz,4)
add    %al,(%eax)
cwtl
sar    %cl,%ah
incl   -0x5e(%eax)
add    %al,(%eax)
call   750a2043 <_end+0x6cfe96f3>
mov    %al,0xd3380000
cld
lcall  *-0x77ffff5e(%eax)
sar    %cl,%esp
inc    %esp
mov    %al,0xd3d80000
cld
push   %eax
mov    %al,0xd4380000
cld
jmp    *(%ebx,%eiz,4)
add    %al,(%eax)
enter  $0xfcd5,$0xff
jo     80a233d <_IO_stdin_used+0xc039>
add    %al,(%eax)
sub    %dl,%dh
cld
pushl  -0x29480000(%ebx,%eiz,4)
cld
push   %eax
mov    %eax,0xd7180000
cld
lcall  *(%esp,%eiz,4)
add    %al,(%eax)
mov    $0x58fffcd7,%eax
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
dec    %eax
fdivr  %st(4),%st
decl   -0x27480000(%esp,%eiz,4)
cld
dec    %eax
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
mov    $0x24fffcda,%eax
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
test   $0xdb,%al
cld
decl   -0x7ffff5b(%eax)
(bad)
call   *%eax
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
sbb    %bl,%ch
cld
ljmp   *(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
mov    %bl,%ch
cld
jmp    *0x0(%esi,%eiz,4)
add    %ch,0x78fffcdd(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
enter  $0xfcdd,$0xff
mov    %fs,-0x21980000(%esi)
cld
(bad)
mov    $0xe80000a6,%esp
fdivrp %st,%st(4)
push   %esp
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
cmp    %bl,%bh
cld
ljmp   *(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
test   $0xdf,%al
cld
jmp    *0x0(%edi,%eiz,4)
add    %ch,%al
(bad)
call   *0x580000a7(%eax)
loopne 80a242b <_IO_stdin_used+0xc127>
(bad)
mov    $0x380000a7,%esp
loope  80a2433 <_IO_stdin_used+0xc12f>
(bad)
in     (%dx),%al
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
enter  $0xfce1,$0xff
sbb    %ch,-0x1d580000(%eax)
cld
jmp    *-0x58(%eax)
add    %al,(%eax)
mov    %ah,%ah
cld
(bad)
mov    $0x680000a8,%eax
out    %al,$0xfc
jmp    *(%ecx,%ebp,4)
add    %al,(%eax)
sub    %ah,%bh
cld
jmp    *-0x57(%eax)
add    %al,(%eax)
cwtl
out    %eax,$0xfc
decl   -0x17380000(%ecx,%ebp,4)
cld
jmp    *%esp
test   $0xe9780000,%eax
cld
jmp    *(%eax)
stos   %al,%es:(%edi)
add    %al,(%eax)
sub    %ch,%dl
cld
lcall  *0x0(%edx,%ebp,4)
add    %bl,%al
ljmp   $0x0,$0xaa98fffc
clc
out    %al,(%dx)
cld
(bad)
fsubrl -0x10280000(%edx)
cld
pushl  (%ebx,%ebp,4)
add    %al,(%eax)
mov    %dh,%al
cld
(bad)
jl     80a244d <_IO_stdin_used+0xc149>
add    %al,(%eax)
pop    %eax
icebp
cld
(bad)
mov    $0x380000ab,%eax
repnz cld
incl   (%eax)
lods   %ds:(%esi),%al
add    %al,(%eax)
sub    %dh,%bl
cld
lcall  *-0x54(%eax)
add    %al,(%eax)
dec    %eax
hlt
cld
call   *-0x47ffff54(%eax)
hlt
cld
dec    %eax
lods   %ds:(%esi),%al
add    %al,(%eax)
test   $0xf5,%al
cld
jmp    *(%eax)
lods   %ds:(%esi),%eax
add    %al,(%eax)
cwtl
idiv   %ah
(bad)
js     80a2487 <_IO_stdin_used+0xc183>
add    %al,(%eax)
clc
stc
cld
(bad)
mov    $0x180000ad,%eax
cld
cld
(bad)
call   b00a259a <_end+0xa7fe9c4a>
(bad)
cld
incl   -0x52(%eax)
add    %al,(%eax)
fdivr  %st(7),%st
cld
(bad)
js     80a24a8 <_IO_stdin_used+0xc1a4>
add    %al,(%eax)
clc
add    %bh,%ch
pushl  0x680000ae(%eax)
add    %ebp,%edi
decl   (%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
call   3d0a2214 <_end+0x34fe98c4>
scas   %es:(%edi),%eax
add    %al,(%eax)
mov    %al,0xaf64ff(,%edi,8)
add    %bl,0x6(%eax)
std
(bad)
mov    $0xc80000af,%esp
push   %es
std
(bad)
call   800a25dc <_end+0x77fe9c8c>
pop    %es
std
lcall  *(%eax)
mov    $0x0,%al
add    %bh,%al
pop    %es
std
incl   0x0(%eax,%esi,4)
add    %bl,%al
or     %bh,%ch
decl   0x9680000(%eax,%esi,4)
std
pushl  -0x37ffff50(%eax)
or     %edi,%ebp
(bad)
in     (%dx),%al
mov    $0x0,%al
add    %bl,0x34fffd0a(%eax)
mov    $0x0,%cl
add    %bh,0xb(%eax)
std
(bad)
jl     80a2513 <_IO_stdin_used+0xc20f>
add    %al,(%eax)
or     %cl,0xb1a0ff(,%edi,8)
add    %ch,0xc(%eax)
std
(bad)
fdivl  0xd480000(%ecx)
std
jmp    *(%edx,%esi,4)
add    %al,(%eax)
fmuls  0xb248fffd
add    %al,(%eax)
pop    %eax
push   %cs
std
incl   -0x47ffff4e(%eax)
push   %cs
std
(bad)
mov    $0x980000b2,%esp
paddw  %mm7,%mm7
add    $0xb3,%al
add    %al,(%eax)
sub    %dl,(%eax)
std
ljmp   *(%eax)
mov    $0x0,%bl
add    %cl,(%eax)
adc    %edi,%ebp
pushl  -0x4d(%eax)
add    %al,(%eax)
cwtl
adc    %edi,%ebp
call   *0x12780000(%ebx,%esi,4)
std
(bad)
fdivl  0x13080000(%ebx)
std
incl   (%eax)
mov    $0x0,%ah
add    %bl,(%eax)
adc    $0xfd,%al
lcall  *-0x4c(%eax)
add    %al,(%eax)
or     %dl,(%esi)
std
dec    %eax
mov    $0x0,%ah
add    %ch,(%eax)
pop    %ss
std
jmp    *(%eax)
mov    $0x0,%ch
add    %ch,0x44fffd17(%eax)
mov    $0x0,%ch
add    %ch,0x18(%eax)
std
pushl  0x0(%ebp,%esi,4)
add    %ch,(%eax)
sbb    %edi,%ebp
jmp    *0x1a080000(%ebp,%esi,4)
std
call   *(%eax)
mov    $0x0,%dh
add    %bh,0x58fffd1a(%eax)
mov    $0x0,%dh
add    %ch,0x1b(%eax)
std
jmp    *0x180000b6(%eax)
sbb    $0xfd,%al
(bad)
call   500a26cb <_end+0x47fe9d7b>
sbb    $0xb754fffd,%eax
add    %al,(%eax)
pop    %eax
sbb    $0xb768fffd,%eax
add    %al,(%eax)
or     %bl,(%esi)
std
jmp    *0x180000b7(%eax)
push   %ds
std
pushl  0x1e980000(%edi,%esi,4)
std
(bad)
in     (%dx),%al
mov    $0x0,%bh
add    %bh,0xfffd1e(%eax)
mov    $0x1ec80000,%eax
std
call   *(%eax,%edi,4)
add    %al,(%eax)
dec    %eax
pop    %ds
std
incl   -0x48(%eax)
add    %al,(%eax)
js     80a2675 <_IO_stdin_used+0xc371>
std
lcall  *-0x48(%eax)
add    %al,(%eax)
or     %ah,(%ebx)
std
jmp    *%eax
mov    $0x23280000,%eax
std
push   %esp
mov    $0x23580000,%eax
std
call   *(%ecx,%edi,4)
add    %al,(%eax)
mov    %ah,(%ebx)
std
pushl  (%ecx,%edi,4)
add    %al,(%eax)
mov    $0x54fffd23,%eax
mov    $0x23c80000,%ecx
std
ljmp   *-0x47(%eax)
add    %al,(%eax)
fsubs  (%ebx)
std
(bad)
jl     80a264b <_IO_stdin_used+0xc347>
add    %al,(%eax)
clc
and    %ebp,%edi
call   *0x80000b9(%eax)
and    $0xfd,%al
jmp    *0x24280000(%ecx,%edi,4)
std
(bad)
mov    $0x380000b9,%eax
and    $0xfd,%al
dec    %esp
mov    $0x24480000,%ecx
std
jmp    *%eax
mov    $0x24680000,%ecx
std
push   %esp
mov    $0x24a80000,%ecx
std
call   *(%edx,%edi,4)
add    %al,(%eax)
sbb    %ah,0xba40fffd
add    %al,(%eax)
clc
and    $0xba7cfffd,%eax
add    %al,(%eax)
js     80a2704 <_IO_stdin_used+0xc400>
std
jmp    *0x180000ba(%eax)
daa
std
call   *%eax
mov    $0x27680000,%edx
std
jmp    *%esp
mov    $0x28f80000,%edx
std
(bad)
cmp    $0xbb,%al
add    %al,(%eax)
push   $0x94fffd2a
mov    $0x2b480000,%ebx
std
(bad)
fdivrl 0x2b980000(%ebx)
std
call   *(%esp,%edi,4)
add    %al,(%eax)
or     %ch,0xbc40ff(,%edi,8)
add    %ch,0x7cfffd2c(%eax)
mov    $0x2f680000,%esp
std
call   *%esp
mov    $0x30580000,%esp
std
incl   -0x43(%eax)
add    %al,(%eax)
enter  $0xfd30,$0xff
test   %bh,0x30d80000(%ebp)
std
lcall  *0x780000bd(%eax)
xor    %ch,%bh
push   %eax
mov    $0x33d80000,%ebp
std
incl   0x0(%esi,%edi,4)
add    %cl,(%eax)
xor    $0xfd,%al
jmp    *0x0(%esi,%edi,4)
add    %bh,(%eax)
xor    $0xfd,%al
call   *0x580000be(%eax)
cmp    %bh,%ch
(bad)
call   b00a282b <_end+0xa7fe9edb>
cmp    %bh,%ch
decl   (%eax)
mov    $0x38e80000,%edi
std
(bad)
cmp    $0xbf,%al
add    %al,(%eax)
pop    %eax
cmp    %ch,%bh
ljmp   *-0x57ffff41(%eax)
cmp    %ch,%bh
(bad)
in     (%dx),%al
mov    $0x3ae80000,%edi
std
lcall  *(%eax)
rolb   $0x0,(%eax)
clc
cmp    %ch,%bh
ljmp   *(%eax,%eax,8)
add    %al,(%eax)
sbb    %bh,(%ebx)
std
incl   -0x40(%eax)
add    %al,(%eax)
sub    %bh,(%ebx)
std
call   *0x0(%eax,%eax,8)
add    %bh,(%eax)
cmp    %ebp,%edi
ljmp   *-0x40(%eax)
add    %al,(%eax)
dec    %eax
cmp    %ebp,%edi
(bad)
jl     80a277a <_IO_stdin_used+0xc476>
add    %al,(%eax)
js     80a27f9 <_IO_stdin_used+0xc4f5>
std
ljmp   *-0x77ffff40(%eax)
cmp    %ebp,%edi
(bad)
mov    $0x80000c0,%esp
cmp    $0xfd,%al
(bad)
cld
rolb   $0x0,(%eax)
cmp    %bh,0xc128ff(,%edi,8)
add    %cl,0x3c(%eax)
std
(bad)
cmp    $0xc1,%al
add    %al,(%eax)
fdivrs 0xc170ff(,%edi,8)
add    %cl,0x3d(%eax)
std
lcall  *0x3df80000(%ecx,%eax,8)
std
jmp    *%esp
roll   $0x0,(%eax)
push   $0x10fffd3e
ret    $0x0
clc
ds
std
call   *0x0(%edx,%eax,8)
add    %bh,%al
aas
std
decl   0x40680000(%edx,%eax,8)
std
(bad)
mov    $0xe80000c2,%eax
inc    %eax
std
jmp    *%esp
ret    $0x0
mov    %al,-0x3(%ecx)
call   *(%ebx,%eax,8)
add    %al,(%eax)
push   $0x54fffd42
ret
add    %al,(%eax)
clc
inc    %edx
std
decl   0x480000c3(%eax)
inc    %ebx
std
dec    %esp
ret
add    %al,(%eax)
enter  $0xfd43,$0xff
adc    $0xc4,%al
add    %al,(%eax)
cwtl
inc    %esp
std
lcall  *0x0(%esp,%eax,8)
add    %bh,(%eax)
inc    %ebp
std
call   *0x45880000(%esp,%eax,8)
std
inc    %eax
les    (%eax),%eax
add    %bh,-0x1f0002bb(%eax)
les    (%eax),%eax
add    %cl,%al
inc    %ebp
std
push   %esp
les    (%eax),%eax
add    %bh,%al
inc    %ebp
std
call   *0x46380000(,%eax,8)
std
(bad)
cmp    %al,%ch
add    %al,(%eax)
push   $0x50fffd46
lds    (%eax),%eax
add    %ch,0x74fffd46(%eax)
lds    (%eax),%eax
add    %bh,-0x770002ba(%eax)
lds    (%eax),%eax
add    %cl,%al
inc    %esi
std
lcall  *0x46f80000(%ebp,%eax,8)
std
pushl  -0x17ffff3b(%eax)
dec    %eax
std
decl   (%eax)
movb   $0x0,(%eax)
sbb    %cl,-0x3(%ecx)
ljmp   *(%eax)
movb   $0x0,(%eax)
cmp    %cl,-0x3(%ecx)
decl   -0x3a(%eax)
add    %al,(%eax)
mov    %cl,-0x3(%ecx)
incl   0x80000c6(%eax)
dec    %edx
std
(bad)
mov    $0x880000c6,%esp
dec    %edx
std
(bad)
clc
movb   $0x0,(%eax)
clc
dec    %edx
std
ljmp   *(%edi,%eax,8)
add    %al,(%eax)
push   $0x60fffd4b
movl   $0xfd4be800,(%eax)
call   *0x4f180000(%edi,%eax,8)
std
(bad)
in     (%dx),%al
movl   $0xfd4fb800,(%eax)
ljmp   *(%eax)
enter  $0x0,$0x68
push   %eax
std
pushl  0x0(%eax,%ecx,8)
add    %cl,0x51(%eax)
std
pushl  -0x27ffff38(%eax)
push   %ecx
std
(bad)
clc
enter  $0x0,$0x68
push   %edx
std
pushl  (%eax)
leave
add    %al,(%eax)
or     %dl,-0x3(%ebx)
jmp    *-0x37(%eax)
add    %al,(%eax)
test   $0x53,%al
std
pushl  0x54380000(%ecx,%ecx,8)
std
jmp    *%eax
leave
add    %al,(%eax)
dec    %eax
push   %ebp
std
pushl  (%edx,%ecx,8)
add    %al,(%eax)
pop    %eax
push   %esi
std
decl   0x180000ca(%eax)
push   %edi
std
call   *%esp
lret   $0x0
pop    %eax
push   %edi
std
push   %esp
lret   $0x0
enter  $0xfd57,$0xff
and    %cl,%bl
add    %al,(%eax)
test   $0x58,%al
std
ljmp   *-0x35(%eax)
add    %al,(%eax)
dec    %eax
pop    %ecx
std
jmp    *0x180000cb(%eax)
pop    %edx
std
(bad)
fmul   %st,%st(3)
add    %al,(%eax)
mov    $0x10fffd5a,%eax
int3
add    %al,(%eax)
push   $0x68fffd5c
int3
add    %al,(%eax)
mov    %bl,-0x3(%esi)
inc    %eax
int3
add    %al,(%eax)
cmp    %ah,-0x3(%edx)
pushl  (%eax)
int    $0x0
add    %cl,-0x7b00029d(%eax)
int    $0x0
add    %bl,-0x6700029d(%eax)
int    $0x0
add    %ch,0x65(%eax)
std
incl   (%esi,%ecx,8)
add    %al,(%eax)
mov    $0x74fffd68,%eax
into
add    %al,(%eax)
enter  $0xfd68,$0xff
mov    %cl,%dh
add    %al,(%eax)
clc
push   $0xcea8fffd
add    %al,(%eax)
cwtl
imul   $0xcef0ff,%ebp,%edi
add    %bl,(%eax)
push   $0xfffffffd
ljmp   *(%eax)
iret
add    %al,(%eax)
mov    %ch,-0x3(%edx)
call   *0x0(%edi,%ecx,8)
add    %cl,(%eax)
imul   $0xffffffff,%ebp,%edi
or     $0x0,%bh
add    %bl,-0x37000295(%eax)
iret
add    %al,(%eax)
mov    $0xdcfffd6b,%eax
iret
add    %al,(%eax)
pop    %eax
insb   (%dx),%es:(%edi)
std
jmp    *(%eax,%edx,8)
add    %al,(%eax)
or     %ch,-0x3(%ebp)
(bad)
jl     80a29da <_IO_stdin_used+0xc6d6>
add    %al,(%eax)
test   $0x6d,%al
std
dec    %eax
rolb   (%eax)
add    %cl,0x6e(%eax)
std
call   *(%ecx,%edx,8)
add    %al,(%eax)
cwtl
outsb  %ds:(%esi),(%dx)
std
pushl  (%ecx,%edx,8)
add    %al,(%eax)
test   $0x6e,%al
std
decl   -0x2f(%eax)
add    %al,(%eax)
mov    $0x5cfffd6e,%eax
roll   (%eax)
add    %bl,%al
outsb  %ds:(%esi),(%dx)
std
pushl  -0x2f(%eax)
add    %al,(%eax)
clc
outsb  %ds:(%esi),(%dx)
std
call   *0x280000d1(%eax)
jo     80a2a44 <_IO_stdin_used+0xc740>
(bad)
call   b00a2b1e <_end+0xa7fea1ce>
jo     80a2a4c <_IO_stdin_used+0xc748>
call   *(%edx,%edx,8)
add    %al,(%eax)
clc
jo     80a2a54 <_IO_stdin_used+0xc750>
decl   -0x2e(%eax)
add    %al,(%eax)
or     %dh,-0x3(%ecx)
lcall  *0x0(%edx,%edx,8)
add    %bl,(%eax)
jno    80a2a64 <_IO_stdin_used+0xc760>
pushl  -0x2e(%eax)
add    %al,(%eax)
dec    %eax
jno    80a2a6c <_IO_stdin_used+0xc768>
call   *-0x57ffff2e(%eax)
jno    80a2a74 <_IO_stdin_used+0xc770>
dec    %eax
rolb   %cl,(%eax)
add    %bh,(%eax)
jb     80a2a7c <_IO_stdin_used+0xc778>
pushl  (%eax)
roll   %cl,(%eax)
add    %cl,0x64fffd72(%eax)
roll   %cl,(%eax)
add    %ch,0x7cfffd72(%eax)
roll   %cl,(%eax)
add    %bh,-0x6f00028e(%eax)
roll   %cl,(%eax)
add    %cl,(%eax)
jae    80a2a9c <_IO_stdin_used+0xc798>
inc    %esp
roll   %cl,(%eax)
add    %cl,0x73(%eax)
std
jmp    *%esp
roll   %cl,(%eax)
add    %ch,0x1cfffd73(%eax)
aam    $0x0
add    %cl,(%eax)
je     80a2ab4 <_IO_stdin_used+0xc7b0>
call   *0x0(%esp,%edx,8)
add    %ch,0x74(%eax)
std
incl   -0x37ffff2c(%eax)
je     80a2ac4 <_IO_stdin_used+0xc7c0>
ljmp   *0x75080000(%esp,%edx,8)
std
(bad)
fcom   %st(4)
add    %al,(%eax)
dec    %eax
jne    80a2ad4 <_IO_stdin_used+0xc7d0>
incl   0x75880000(,%edx,8)
std
pushl  (%eax)
aad    $0x0
add    %cl,%al
jne    80a2ae4 <_IO_stdin_used+0xc7e0>
lcall  *0x0(%ebp,%edx,8)
add    %cl,(%eax)
jbe    80a2aec <_IO_stdin_used+0xc7e8>
decl   0x680000d5(%eax)
jbe    80a2af4 <_IO_stdin_used+0xc7f0>
inc    %eax
aad    $0x0
add    %ch,-0x1300028a(%eax)
aad    $0x0
add    %cl,(%eax)
ja     80a2b04 <_IO_stdin_used+0xc800>
lcall  *(%eax)
(bad)
add    %al,(%eax)
pop    %eax
ja     80a2b0c <_IO_stdin_used+0xc808>
incl   0x0(%esi,%edx,8)
add    %bh,0x70fffd77(%eax)
(bad)
add    %al,(%eax)
clc
ja     80a2b1c <_IO_stdin_used+0xc818>
lcall  *0x7b380000(%esi,%edx,8)
std
(bad)
(bad)
add    %al,(%eax)
pop    %eax
jnp    80a2b2c <_IO_stdin_used+0xc828>
(bad)
cld
(bad)
add    %al,(%eax)
cmp    %bh,-0x3(%ebp)
ljmp   *-0x29(%eax)
add    %al,(%eax)
mov    %bh,-0x3(%esi)
ljmp   *-0x7ffff29(%eax)
jg     80a2b44 <_IO_stdin_used+0xc840>
incl   (%eax)
fadds  (%eax)
add    %cl,(%eax)
cmp    $0xff,%ch
adc    $0xd8,%al
add    %al,(%eax)
sub    %al,-0x27d30003(%eax)
add    %al,(%eax)
mov    %al,-0x27a70003(%eax)
add    %al,(%eax)
test   $0x80,%al
std
(bad)
js     80a2b42 <_IO_stdin_used+0xc83e>
add    %al,(%eax)
js     80a2aef <_IO_stdin_used+0xc7eb>
std
ljmp   *-0x77ffff28(%eax)
cmp    $0xd8bcff,%ebp
add    %cl,-0x7c(%eax)
std
call   *(%eax)
flds   (%eax)
add    %cl,0x30fffd84(%eax)
flds   (%eax)
add    %bh,0x50fffd84(%eax)
flds   (%eax)
add    %cl,%al
test   %bh,%ch
jmp    *0x0(%ecx,%ebx,8)
add    %cl,(%eax)
test   %edi,%ebp
lcall  *-0x57ffff27(%eax)
test   %edi,%ebp
push   %eax
flds   (%eax)
add    %bh,%al
test   %edi,%ebp
lcall  *(%edx,%ebx,8)
add    %al,(%eax)
pop    %eax
xchg   %bh,%ch
call   *-0x26(%eax)
add    %al,(%eax)
mov    $0x88fffd86,%eax
fiaddl (%eax)
add    %bh,%al
mov    %bh,%ch
jmp    *%eax
fiaddl (%eax)
add    %ch,0x18fffd89(%eax)
fildl  (%eax)
add    %bl,%al
mov    %edi,%ebp
(bad)
cmp    %bl,%bl
add    %al,(%eax)
or     %cl,-0x24a70003(%edx)
add    %al,(%eax)
cmp    %cl,-0x24870003(%edx)
add    %al,(%eax)
push   $0x98fffd8a
fildl  (%eax)
add    %bh,-0x47000276(%eax)
fildl  (%eax)
add    %cl,(%eax)
mov    %ebp,%edi
(bad)
fcomp  %st(3)
add    %al,(%eax)
sbb    %cl,-0x24130003(%ebx)
add    %al,(%eax)
sub    %cl,-0x23ff0003(%ebx)
add    %al,(%eax)
cwtl
mov    %ebp,%edi
incl   0x0(%esp,%ebx,8)
add    %cl,(%eax)
mov    %?,%ebp
decl   -0x67ffff24(%eax)
mov    %?,%ebp
(bad)
(bad)
add    %al,(%eax)
enter  $0xfd8c,$0xff
lock faddl (%eax)
add    %bh,(%eax)
(bad)
std
pushl  -0x72980000(,%ebx,8)
std
decl   -0x23(%eax)
add    %al,(%eax)
cwtl
(bad)
std
ljmp   *-0x23(%eax)
add    %al,(%eax)
mov    $0x7cfffd8d,%eax
fldl   (%eax)
add    %ch,%al
(bad)
std
lcall  *-0x71d80000(%ebp,%ebx,8)
std
(bad)
mov    $0x480000dd,%esp
mov    %ebp,%?
call   *%eax
fldl   (%eax)
add    %bh,-0x72(%eax)
std
(bad)
cld
fldl   (%eax)
add    %cl,(%eax)
(bad)
std
ljmp   *(%eax)
fiadd  (%eax)
add    %cl,-0x71(%eax)
std
call   *0x0(%esi,%ebx,8)
add    %bl,-0x7f000271(%eax)
fiadd  (%eax)
add    %bl,-0x70(%eax)
std
(bad)
mov    $0x680000de,%esp
nop
std
call   *%eax
fiadd  (%eax)
add    %cl,(%eax)
xchg   %eax,%ecx
std
decl   (%edi,%ebx,8)
add    %al,(%eax)
sub    %dl,0xdf7cff(%ebp,%edi,8)
add    %bh,%al
xchg   %eax,%esi
std
call   *%esp
fild   (%eax)
add    %cl,(%eax)
lcall  $0x0,$0xe02cfffd
push   $0x6cfffd9c
loopne 80a2cc3 <_IO_stdin_used+0xc9bf>
add    %ch,-0x63(%eax)
std
inc    %eax
loopne 80a2ccb <_IO_stdin_used+0xc9c7>
add    %bh,(%eax)
sahf
std
lcall  *(%eax)
loope  80a2cd3 <_IO_stdin_used+0xc9cf>
add    %cl,%al
lahf
std
pushl  -0x1f(%eax)
add    %al,(%eax)
mov    $0xb0fffda1,%eax
loope  80a2ce3 <_IO_stdin_used+0xc9df>
add    %ch,(%eax)
mov    %eax,0xe21cfffd
add    %al,(%eax)
cmp    %ah,-0x1dcf0003(%ebx)
add    %al,(%eax)
dec    %eax
mov    %eax,0xe244fffd
add    %al,(%eax)
push   $0x58fffda3
loop   80a2d03 <_IO_stdin_used+0xc9ff>
add    %bl,%al
mov    %eax,0xe27cfffd
add    %al,(%eax)
call   990a2ab4 <_end+0x90fea164>
loop   80a2d13 <_IO_stdin_used+0xca0f>
add    %cl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
std
jmp    *-0x5bd80000(%edx,%eiz,8)
std
(bad)
mov    $0x480000e2,%eax
movsb  %ds:(%esi),%es:(%edi)
std
(bad)
fsub   %st(2),%st
add    %al,(%eax)
js     80a2cd3 <_IO_stdin_used+0xc9cf>
std
pushl  (%eax)
jecxz  80a2d33 <_IO_stdin_used+0xca2f>
add    %bh,%al
movsl  %ds:(%esi),%es:(%edi)
std
lcall  *0x0(%ebx,%eiz,8)
add    %cl,-0x5a(%eax)
std
call   *-0x67ffff1d(%eax)
cmpsb  %es:(%edi),%ds:(%esi)
std
dec    %esp
jecxz  80a2d4b <_IO_stdin_used+0xca47>
add    %bl,%al
cmpsb  %es:(%edi),%ds:(%esi)
std
(bad)
in     (%dx),%al
jecxz  80a2d53 <_IO_stdin_used+0xca4f>
add    %bh,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
std
call   *(%eax)
in     $0x0,%al
add    %ch,0x34fffda7(%eax)
in     $0x0,%al
add    %cl,(%eax)
test   $0xfd,%al
lcall  *-0x1c(%eax)
add    %al,(%eax)
push   $0x7cfffda8
in     $0x0,%al
add    %cl,%al
test   $0xfd,%al
jmp    *0x480000e4(%eax)
test   $0xe4ccfffd,%eax
add    %al,(%eax)
mov    $0xf8fffda9,%eax
in     $0x0,%al
add    %cl,-0x56(%eax)
std
jmp    *-0x1b(%eax)
add    %al,(%eax)
cwtl
stos   %al,%es:(%edi)
std
call   *-0x54f80000(%ebp,%eiz,8)
std
(bad)
mov    $0xd80000e5,%eax
stos   %eax,%es:(%edi)
std
incl   (%esi,%eiz,8)
add    %al,(%eax)
or     %ch,0xe618ff(%ebp,%edi,8)
add    %bl,-0x53(%eax)
std
lcall  *-0x1a(%eax)
add    %al,(%eax)
clc
lods   %ds:(%esi),%eax
std
jmp    *0x180000e6(%eax)
scas   %es:(%edi),%al
std
pushl  -0x51280000(%esi,%eiz,8)
std
push   %esp
out    %al,$0x0
add    %bh,%al
scas   %es:(%edi),%al
std
decl   (%eax)
out    %eax,$0x0
add    %bl,-0x51(%eax)
std
(bad)
cmp    $0xe7,%al
add    %al,(%eax)
cwtl
scas   %es:(%edi),%eax
std
ljmp   *-0x19(%eax)
add    %al,(%eax)
or     %dh,-0x185f0003(%eax)
add    %al,(%eax)
call   e10a2ba9 <_end+0xd8fea259>
out    %eax,$0x0
add    %bh,%al
mov    $0xfd,%al
(bad)
in     (%dx),%al
out    %eax,$0x0
add    %bl,0x28fffdb1(%eax)
call   b9d22e0e <_end+0xb1c6a4be>
std
(bad)
cmp    $0xe8,%al
add    %al,(%eax)
dec    %eax
mov    $0xfd,%dl
(bad)
js     80a2e02 <_IO_stdin_used+0xcafe>
add    %al,(%eax)
js     80a2dd0 <_IO_stdin_used+0xcacc>
std
lcall  *-0x37ffff18(%eax)
mov    $0xfd,%dl
inc    %esp
call   bae22e2e <_end+0xb2d6a4de>
std
(bad)
fsubr  %st(0),%st
add    %al,(%eax)
sbb    %dh,-0x16fb0003(%ebx)
add    %al,(%eax)
sub    %dh,-0x16e70003(%ebx)
add    %al,(%eax)
cmp    %dh,-0x16d30003(%ebx)
add    %al,(%eax)
dec    %eax
mov    $0xfd,%bl
incl   -0x17(%eax)
add    %al,(%eax)
mov    $0x78fffdb3,%eax
jmp    bc022e5e <_end+0xb3f6a50e>
std
call   *-0x4bc80000(%ecx,%ebp,8)
std
pushl  0x780000e9(%eax)
mov    $0xfd,%ah
dec    %esp
jmp    bcd22e76 <_end+0xb4c6a526>
std
push   %eax
jmp    bd222e7e <_end+0xb516a52e>
std
call   *(%edx,%ebp,8)
add    %al,(%eax)
push   $0x38fffdb5
ljmp   $0xfffd,$0xb5f80000
sub    $0x0,%dl
add    %cl,-0x3700024a(%eax)
ljmp   $0xfffd,$0xb6b80000
call   f00a2f8f <_end+0xe7fea63f>
mov    $0xfd,%dh
decl   (%eax)
jmp    80a2eab <_IO_stdin_used+0xcba7>
add    %ch,0x60fffdb9(%eax)
jmp    80a2eb3 <_IO_stdin_used+0xcbaf>
add    %cl,-0x46(%eax)
std
lcall  *-0x45880000(%ebx,%ebp,8)
std
(bad)
mov    $0xe80000eb,%eax
mov    $0xebecfffd,%edx
add    %al,(%eax)
cmp    %bh,-0x13e70003(%ebx)
add    %al,(%eax)
dec    %eax
mov    $0xec2cfffd,%ebx
add    %al,(%eax)
or     %bh,0xec64ff(%ebp,%edi,8)
add    %bh,-0x44(%eax)
std
call   *-0x42f80000(%esp,%ebp,8)
std
inc    %esp
in     (%dx),%al
add    %al,(%eax)
push   $0x4fffdbd
in     (%dx),%eax
add    %al,(%eax)
test   $0xbd,%al
std
(bad)
cmp    %ch,%ch
add    %al,(%eax)
pop    %eax
mov    $0xed90fffd,%esi
add    %al,(%eax)
mov    $0xd4fffdbe,%eax
in     (%dx),%eax
add    %al,(%eax)
or     %bh,-0x11ff0003(%edi)
add    %al,(%eax)
push   $0x34fffdbf
out    %al,(%dx)
add    %al,(%eax)
test   $0xc2,%al
std
decl   -0x3c880000(%esi,%ebp,8)
std
dec    %esp
out    %al,(%dx)
add    %al,(%eax)
call   90a2cfc <_end+0xfea3ac>
out    %eax,(%dx)
add    %al,(%eax)
cwtl
(bad)
std
incl   -0x11(%eax)
add    %al,(%eax)
test   $0xc4,%al
std
call   *0x0(%edi,%ebp,8)
add    %bh,0x68fffdc4(%eax)
out    %eax,(%dx)
add    %al,(%eax)
sbb    %al,%ch
std
jmp    *0x580000ef(%eax)
(bad)
int3
out    %eax,(%dx)
add    %al,(%eax)
cwtl
(bad)
hlt
out    %eax,(%dx)
add    %al,(%eax)
fadd   %st(5),%st
std
jmp    *(%eax)
lock add %al,(%eax)
pop    %eax
(bad)
std
lcall  *0x0(%eax,%esi,8)
add    %cl,%al
(bad)
std
lcall  *0x280000f0(%eax)
(bad)
std
(bad)
mov    $0x880000f0,%esp
(bad)
std
jmp    *%esp
lock add %al,(%eax)
mov    $0x10fffdc7,%eax
icebp
add    %al,(%eax)
or     %cl,%al
std
decl   -0xf(%eax)
add    %al,(%eax)
dec    %eax
enter  $0xfffd,$0x74
icebp
add    %al,(%eax)
pop    %eax
enter  $0xfffd,$0x88
icebp
add    %al,(%eax)
push   $0x9cfffdc8
icebp
add    %al,(%eax)
test   $0xc8,%al
std
call   *%eax
icebp
add    %al,(%eax)
clc
enter  $0xfffd,$0xfc
icebp
add    %al,(%eax)
sbb    %cl,%cl
std
call   *(%eax)
repnz add %al,(%eax)
cmp    %cl,%cl
std
jmp    *(%edx,%esi,8)
add    %al,(%eax)
js     80a2fa7 <_IO_stdin_used+0xcca3>
std
lcall  *-0xe(%eax)
add    %al,(%eax)
enter  $0xfdc9,$0xff
nop
repnz add %al,(%eax)
sbb    %cl,%dl
std
dec    %eax
repnz add %al,(%eax)
mov    %cl,%dl
std
lcall  *(%ebx,%esi,8)
add    %al,(%eax)
mov    $0x30fffdca,%eax
repz add %al,(%eax)
or     %cl,%bl
std
jmp    *0x0(%ebx,%esi,8)
add    %ch,(%eax)
lret
std
(bad)
js     80a3005 <_IO_stdin_used+0xcd01>
add    %al,(%eax)
enter  $0xfdcc,$0xff
(bad)
repz add %al,(%eax)
clc
int3
std
jmp    *%esp
repz add %al,(%eax)
dec    %eax
int    $0xfd
call   *(%eax)
hlt
add    %al,(%eax)
mov    %dl,%al
std
call   *-0x2f380000(%esp,%esi,8)
std
ljmp   *0x80000f4(%eax)
sar    %cl,%ebp
(bad)
call   900a3139 <_end+0x87fea7e9>
sar    %cl,%ebp
decl   -0x2b780000(,%esi,8)
std
jmp    *0x0(%ebp,%esi,8)
add    %ch,-0x3f00022b(%eax)
cmc
add    %al,(%eax)
fcom   %st(5)
std
call   *%esp
cmc
add    %al,(%eax)
dec    %eax
(bad)
std
decl   (%eax)
testb  $0x0,(%eax)
sub    %dl,%bh
std
lcall  *(%esi,%esi,8)
add    %al,(%eax)
call   650a2e51 <_end+0x5cfea501>
testb  $0x0,(%eax)
fcomp  %st(1)
std
(bad)
fdiv   %st,%st(6)
add    %al,(%eax)
call   f90a2e62 <_end+0xf0fea512>
testb  $0x0,(%eax)
cmp    %bl,%dl
std
ljmp   *(%edi,%esi,8)
add    %al,(%eax)
push   $0x40fffdda
testl  $0xfdda9800,(%eax)
call   *0x0(%edi,%esi,8)
add    %cl,%al
(bad)
pushl  0x0(%edi,%esi,8)
add    %bh,%al
(bad)
call   *-0x24d80000(%edi,%esi,8)
std
pushl  -0x24980000(%edi,%esi,8)
std
jmp    *%eax
testl  $0xfddbb800,(%eax)
call   *(%eax,%edi,8)
add    %al,(%eax)
sub    %bl,%ah
std
decl   -0x8(%eax)
add    %al,(%eax)
mov    %bl,%ah
std
pushl  0x0(%eax,%edi,8)
add    %cl,(%eax)
(bad)
jmp    *-0x22b80000(%eax,%edi,8)
std
(bad)
fdivr  %st(0),%st
add    %al,(%eax)
sbb    %bl,%dh
std
jmp    *(%eax)
stc
add    %al,(%eax)
dec    %eax
fdivrp %st,%st(5)
pushl  (%ecx,%edi,8)
add    %al,(%eax)
pop    %eax
fdivrp %st,%st(5)
decl   -0x7(%eax)
add    %al,(%eax)
mov    %bl,%dh
std
ljmp   *-0x7(%eax)
add    %al,(%eax)
cwtl
fdivrp %st,%st(5)
(bad)
jl     80a310b <_IO_stdin_used+0xce07>
add    %al,(%eax)
mov    $0x90fffdde,%eax
stc
add    %al,(%eax)
enter  $0xfdde,$0xff
movsb  %ds:(%esi),%es:(%edi)
stc
add    %al,(%eax)
dec    %eax
(bad)
jmp    *%eax
stc
add    %al,(%eax)
or     %ah,%al
std
pushl  (%edx,%edi,8)
add    %al,(%eax)
pop    %eax
loopne 80a3134 <_IO_stdin_used+0xce30>
pushl  -0x6(%eax)
add    %al,(%eax)
fsub   %st(0),%st
std
ljmp   *-0x67ffff06(%eax)
loope  80a3144 <_IO_stdin_used+0xce40>
call   *(%eax)
sti
add    %al,(%eax)
sbb    %ah,%dl
std
jmp    *0x0(%ebx,%edi,8)
add    %bh,-0x1e(%eax)
std
lcall  *-0x57ffff05(%eax)
loop   80a315c <_IO_stdin_used+0xce58>
(bad)
mov    $0xd80000fb,%eax
loop   80a3164 <_IO_stdin_used+0xce60>
dec    %esp
sti
add    %al,(%eax)
sbb    %ah,%bl
std
(bad)
clc
sti
add    %al,(%eax)
pop    %eax
jecxz  80a3174 <_IO_stdin_used+0xce70>
jmp    *(%esp,%edi,8)
add    %al,(%eax)
call   810a2f64 <_end+0x78fea614>
cld
add    %al,(%eax)
clc
jecxz  80a3184 <_IO_stdin_used+0xce80>
decl   -0x1b880000(%esp,%edi,8)
std
call   *%eax
cld
add    %al,(%eax)
mov    $0x4fffde4,%eax
std
add    %al,(%eax)
pop    %eax
in     $0xfd,%eax
(bad)
cmp    $0xfd,%al
add    %al,(%eax)
mov    $0x68fffde5,%eax
std
add    %al,(%eax)
clc
in     $0xfd,%eax
decl   0x380000fd(%eax)
out    %al,$0xfd
ljmp   *0x680000fd(%eax)
out    %al,$0xfd
dec    %esp
std
add    %al,(%eax)
js     80a31ac <_IO_stdin_used+0xcea8>
std
jmp    *%eax
std
add    %al,(%eax)
mov    %ah,%dh
std
push   %esp
std
add    %al,(%eax)
mov    $0xcfffde6,%eax
incb   (%eax)
add    %cl,(%eax)
out    %eax,$0xfd
incl   -0x2(%eax)
add    %al,(%eax)
mov    %ah,%bh
std
(bad)
js     80a31e8 <_IO_stdin_used+0xcee4>
add    %al,(%eax)
fsub   %st(7),%st
std
lcall  *0x280000fe(%eax)
call   6c331f7 <_init-0x1419db5>
add    %al,(%eax)
js     80a31e6 <_IO_stdin_used+0xcee2>
std
(bad)
in     (%dx),%al
incb   (%eax)
add    %ch,0x4fffde8(%eax)
incl   (%eax)
add    %ch,(%eax)
jmp    74b320f <_init-0xb99d9d>
add    %al,(%eax)
pop    %eax
jmp    76b3217 <_init-0x999d95>
add    %al,(%eax)
enter  $0xfde9,$0xff
cwtl
incl   (%eax)
add    %cl,(%eax)
ljmp   $0x0,$0xffc4fffd
cmp    %ch,%dl
std
(bad)
call   700a3334 <_end+0x67fea9e4>
ljmp   $0x1,$0x4fffd
dec    %eax
jmp    80a323c <_IO_stdin_used+0xcf38>
(bad)
cmp    $0x0,%al
add    %eax,(%eax)
cwtl
jmp    80a3244 <_IO_stdin_used+0xcf40>
lcall  *0x1(%eax,%eax,1)
add    %cl,%al
jmp    80a324c <_IO_stdin_used+0xcf48>
(bad)
js     80a3252 <_IO_stdin_used+0xcf4e>
add    %eax,(%eax)
mov    $0xe4fffdec,%eax
add    %al,(%ecx)
add    %bl,-0x13(%eax)
std
pushl  (%ecx,%eax,1)
add    %eax,(%eax)
fsubr  %st(6),%st
std
call   *0x18000101(%eax)
out    %eax,(%dx)
std
pushl  -0x37fffeff(%eax)
out    %eax,(%dx)
std
(bad)
clc
add    %eax,(%ecx)
add    %bh,(%eax)
lock std
ljmp   *(%edx,%eax,1)
add    %eax,(%eax)
cwtl
lock std
call   *0x1(%edx,%eax,1)
add    %ch,%al
lock std
decl   0x38000102(%eax)
icebp
std
pushl  -0xe07ffff(%edx,%eax,1)
std
(bad)
cld
add    (%ecx),%al
add    %bh,-0xe(%eax)
std
pushl  (%eax)
add    (%ecx),%eax
add    %bl,%al
repnz std
ljmp   *0x1(%ebx,%eax,1)
add    %bh,(%eax)
repz std
ljmp   *-0x67fffefd(%eax)
repz std
jmp    *%esp
add    (%ecx),%eax
add    %ch,%al
repz std
decl   (%eax)
add    $0x1,%al
add    %bl,-0xc(%eax)
std
pushl  (%eax)
add    $0x1,%al
add    %cl,-0xb(%eax)
std
ljmp   *0x4(%eax)
add    %eax,(%eax)
call   b10a30d6 <_end+0xa8fea786>
add    $0x1,%al
add    %ch,%al
idiv   %ebp
(bad)
call   600a33f1 <_end+0x57feaaa1>
clc
std
jmp    *-0x767ffff(,%eax,1)
std
incl   0x5(%eax)
add    %eax,(%eax)
fdivr  %st(0),%st
std
lcall  *0x1(%ebp,%eax,1)
add    %cl,-0x6b000206(%eax)
add    $0xfad80001,%eax
std
dec    %eax
add    $0xfb180001,%eax
std
(bad)
call   b00a3422 <_end+0xa7feaad2>
std
std
ljmp   *0x1(%esi,%eax,1)
add    %ch,-0x270001ff(%eax)
push   %es
add    %eax,(%eax)
sub    %al,(%edx)
(bad)
call   *(%eax)
pop    %es
add    %eax,(%eax)
call   550a313b <_end+0x4cfea7eb>
pop    %es
add    %eax,(%eax)
push   $0x84fffe03
pop    %es
add    %eax,(%eax)
clc
add    %esi,%edi
(bad)
mov    $0x48000107,%esp
add    $0xfe,%al
(bad)
call   c00a345c <_end+0xb7feab0c>
add    $0xfe,%al
(bad)
cmp    $0x8,%al
add    %eax,(%eax)
sbb    %al,0x878fffe
add    %eax,(%eax)
cwtl
push   %es
(bad)
ljmp   *-0x7fffef8(%eax)
push   %es
(bad)
dec    %esp
or     %al,(%ecx)
add    %ch,%al
pop    %es
(bad)
decl   (%ecx,%ecx,1)
add    %eax,(%eax)
clc
pop    %es
(bad)
jmp    *(%eax)
or     %eax,(%ecx)
add    %bl,%al
or     %bh,%dh
(bad)
js     80a3393 <_IO_stdin_used+0xd08f>
add    %eax,(%eax)
or     %cl,(%ecx)
(bad)
lcall  *0x68000109(%eax)
or     %edi,%esi
call   *%esp
or     %eax,(%ecx)
add    %bh,%al
or     %edi,%esi
call   *(%edx,%ecx,1)
add    %eax,(%eax)
sbb    %cl,(%edx)
(bad)
pushl  (%edx,%ecx,1)
add    %eax,(%eax)
cmp    %cl,(%edx)
(bad)
call   *0x1(%edx,%ecx,1)
add    %bl,0xa(%eax)
(bad)
pushl  0x1(%edx,%ecx,1)
add    %ch,-0x5f0001f6(%eax)
or     (%ecx),%al
add    %bl,%al
or     %dh,%bh
inc    %eax
or     (%ecx),%al
add    %bh,%al
or     %dh,%bh
jmp    *%eax
or     (%ecx),%al
add    %bh,0xb(%eax)
(bad)
decl   (%ebx,%ecx,1)
add    %eax,(%eax)
mov    %cl,(%ebx)
(bad)
jmp    *(%eax)
or     (%ecx),%eax
add    %bl,0x34fffe0b(%eax)
or     (%ecx),%eax
add    %ch,0x48fffe0b(%eax)
or     (%ecx),%eax
add    %bl,%al
or     %esi,%edi
ljmp   *0xb(%eax)
add    %eax,(%eax)
cmp    %cl,(%esi,%edi,8)
lcall  *0xc880001(%ebx,%ecx,1)
(bad)
call   *%eax
or     (%ecx),%eax
add    %bh,(%eax)
or     $0xc08fffe,%eax
add    %eax,(%eax)
enter  $0xfe0d,$0xff
cmp    $0xc,%al
add    %eax,(%eax)
call   610a322e <_end+0x58fea8de>
or     $0x1,%al
add    %bl,(%eax)
push   %cs
(bad)
(bad)
js     80a3436 <_IO_stdin_used+0xd132>
add    %eax,(%eax)
clc
paddd  %mm7,%mm7
in     $0xc,%al
add    %eax,(%eax)
enter  $0xfe10,$0xff
cmp    $0xd,%al
add    %eax,(%eax)
js     80a344f <_IO_stdin_used+0xd14b>
(bad)
incl   0x15580001(%ebp,%ecx,1)
(bad)
inc    %esp
or     $0x15780001,%eax
(bad)
(bad)
fmuls  0x15980001
(bad)
(bad)
in     (%dx),%al
or     $0x16280001,%eax
(bad)
pushl  (%esi,%ecx,1)
add    %eax,(%eax)
pop    %eax
push   %ss
(bad)
call   *0x1(%esi,%ecx,1)
add    %ch,-0x7f0001ea(%eax)
push   %cs
add    %eax,(%eax)
cmp    %bl,(%ecx)
(bad)
pushl  0x800010e(%eax)
sbb    %dh,%bh
push   %eax
push   %cs
add    %eax,(%eax)
fcomps (%edx)
(bad)
lcall  *0x1(%edi,%ecx,1)
add    %cl,0x1b(%eax)
(bad)
call   *0x1b780001(%edi,%ecx,1)
(bad)
pushl  0x1c180001(%edi,%ecx,1)
(bad)
decl   (%eax)
adc    %al,(%ecx)
add    %cl,%al
sbb    $0xfe,%al
decl   0x10(%eax)
add    %eax,(%eax)
test   $0x1d,%al
(bad)
jmp    *-0x47fffef0(%eax)
pop    %ds
(bad)
jmp    *%esp
adc    %al,(%ecx)
add    %ch,(%eax)
and    %esi,%edi
ljmp   *(%eax)
adc    %eax,(%ecx)
add    %bl,(%eax)
and    $0x11acfffe,%eax
add    %eax,(%eax)
sbb    %ch,(%eax)
(bad)
push   %eax
adc    %eax,(%ecx)
add    %bl,0x28(%eax)
(bad)
call   *(%eax)
adc    (%ecx),%al
add    %cl,0x2f(%eax)
(bad)
call   *0x1(%edx,%edx,1)
add    %cl,0x74fffe2f(%eax)
adc    (%ecx),%al
add    %bl,(%eax)
xor    %edi,%esi
inc    %eax
adc    (%ecx),%al
add    %ch,0x32(%eax)
(bad)
incl   (%eax)
adc    (%ecx),%eax
add    %bl,%al
xor    %dh,%bh
jmp    *(%ebx,%edx,1)
add    %eax,(%eax)
push   $0x60fffe33
adc    (%ecx),%eax
add    %ch,-0x7f0001cd(%eax)
adc    (%ecx),%eax
add    %bh,-0x6b0001cd(%eax)
adc    (%ecx),%eax
add    %cl,0x35(%eax)
(bad)
(bad)
in     (%dx),%al
adc    (%ecx),%eax
add    %bl,0x18fffe35(%eax)
adc    $0x1,%al
add    %cl,%al
xor    $0x1438fffe,%eax
add    %eax,(%eax)
clc
xor    $0x1458fffe,%eax
add    %eax,(%eax)
sbb    %dh,(%esi)
(bad)
(bad)
js     80a3556 <_IO_stdin_used+0xd252>
add    %eax,(%eax)
call   c90a337f <_end+0xc0feaa2f>
adc    $0x1,%al
add    %bh,%al
ss
(bad)
call   *%esp
adc    $0x1,%al
add    %cl,(%eax)
aaa
(bad)
(bad)
call   400a3671 <_end+0x37fead21>
aaa
(bad)
decl   (%eax)
adc    $0x37a80001,%eax
(bad)
pushl  0x38380001(,%edx,1)
(bad)
jmp    *0x1(%ebp,%edx,1)
add    %cl,0x38(%eax)
(bad)
(bad)
js     80a358f <_IO_stdin_used+0xd28b>
add    %eax,(%eax)
test   $0x39,%al
(bad)
(bad)
mov    $0xe8000115,%esp
cmp    %esi,%edi
push   %esp
adc    $0x40080001,%eax
(bad)
(bad)
cmp    %dl,(%esi)
add    %eax,(%eax)
fadds  -0x2(%eax)
lcall  *0x1(%esi,%edx,1)
add    %bl,(%eax)
inc    %edx
(bad)
ljmp   *0x78000116(%eax)
inc    %edx
(bad)
call   *%esp
push   %ss
add    %eax,(%eax)
sbb    %al,-0x2(%ebx)
call   *(%edi,%edx,1)
add    %eax,(%eax)
dec    %eax
inc    %ebx
(bad)
incl   0x17(%eax)
add    %eax,(%eax)
js     80a3601 <_IO_stdin_used+0xd2fd>
(bad)
ljmp   *0x1(%edi,%edx,1)
add    %bl,-0x730001bd(%eax)
pop    %ss
add    %eax,(%eax)
mov    $0xacfffe43,%eax
pop    %ss
add    %eax,(%eax)
fadds  -0x2(%ebx)
dec    %esp
pop    %ss
add    %eax,(%eax)
clc
inc    %ebx
(bad)
(bad)
in     (%dx),%al
pop    %ss
add    %eax,(%eax)
test   $0x44,%al
(bad)
ljmp   *(%eax,%ebx,1)
add    %eax,(%eax)
fadds  -0x1(%esi,%edi,8)
pop    %eax
sbb    %al,(%ecx)
add    %cl,(%eax)
inc    %ebp
(bad)
(bad)
js     80a3612 <_IO_stdin_used+0xd30e>
add    %eax,(%eax)
or     %al,-0x2(%esi)
(bad)
mov    $0x28000118,%eax
inc    %esi
(bad)
(bad)
fcomps (%eax)
add    %eax,(%eax)
js     80a3654 <_IO_stdin_used+0xd350>
(bad)
(bad)
clc
sbb    %al,(%ecx)
add    %bh,0x50fffe47(%eax)
sbb    %eax,(%ecx)
add    %ch,-0x6f0001b4(%eax)
sbb    %eax,(%ecx)
add    %ch,%al
dec    %esp
(bad)
(bad)
mov    $0x18000119,%esp
dec    %ebp
(bad)
(bad)
call   500a374e <_end+0x47feadfe>
dec    %ebp
(bad)
decl   (%eax)
sbb    (%ecx),%al
add    %bh,0x4d(%eax)
(bad)
pushl  (%edx,%ebx,1)
add    %eax,(%eax)
enter  $0xfe4d,$0xff
pusha
sbb    (%ecx),%al
add    %bl,-0x5f0001b1(%eax)
sbb    (%ecx),%al
add    %cl,%al
dec    %edi
(bad)
inc    %eax
sbb    (%ecx),%al
add    %bh,%al
dec    %edi
(bad)
jmp    *%eax
sbb    (%ecx),%al
add    %cl,0x50(%eax)
(bad)
decl   (%ebx,%ebx,1)
add    %eax,(%eax)
js     80a36be <_IO_stdin_used+0xd3ba>
(bad)
ljmp   *(%ebx,%ebx,1)
add    %eax,(%eax)
call   610a34c9 <_end+0x58feab79>
sbb    (%ecx),%eax
add    %bh,(%eax)
push   %ecx
(bad)
(bad)
js     80a369d <_IO_stdin_used+0xd399>
add    %eax,(%eax)
sbb    %dl,-0x2(%edx)
pushl  0x52680001(%ebx,%ebx,1)
(bad)
call   *%esp
sbb    (%ecx),%eax
add    %bh,%al
push   %ebx
(bad)
decl   (%esp,%ebx,1)
add    %eax,(%eax)
sub    %dl,-0x1(%esi,%edi,8)
cmp    %bl,(%ecx,%eax,1)
add    %cl,0x64fffe54(%eax)
sbb    $0x1,%al
add    %ch,%al
push   %esp
(bad)
call   *0x6800011c(%eax)
push   %ebp
(bad)
(bad)
mov    $0xb800011c,%esp
push   %ebp
(bad)
(bad)
fcompl (%ecx,%eax,1)
add    %bh,(%eax)
push   %esi
(bad)
decl   (%eax)
sbb    $0x56b80001,%eax
(bad)
pushl  0x58280001(,%ebx,1)
(bad)
incl   -0x47fffee3(%eax)
pop    %ecx
(bad)
inc    %eax
sbb    $0x5ad80001,%eax
(bad)
lcall  *(%eax)
push   %ds
add    %eax,(%eax)
enter  $0xfe5b,$0xff
pop    %eax
push   %ds
add    %eax,(%eax)
clc
pop    %esp
(bad)
lcall  *0x6800011e(%eax)
pop    %esi
(bad)
(bad)
fcomps (%esi)
add    %eax,(%eax)
pop    %eax
pusha
(bad)
lcall  *(%eax)
pop    %ds
add    %eax,(%eax)
fsubs  -0x2(%eax)
decl   0x1f(%eax)
add    %eax,(%eax)
cmp    %ah,-0x2(%ecx)
pushl  0x1(%edi,%ebx,1)
add    %bl,-0x5f00019f(%eax)
pop    %ds
add    %eax,(%eax)
enter  $0xfe61,$0xff
rcrb   $0x1,(%edi)
add    %bh,(%eax)
(bad)
(bad)
(bad)
fcompl (%edi)
add    %eax,(%eax)
push   $0xfcfffe62
pop    %ds
add    %eax,(%eax)
fsubs  -0x1(%esi,%edi,8)
inc    %eax
and    %al,(%ecx)
add    %bl,-0x7700019b(%eax)
and    %al,(%ecx)
add    %bl,0x66(%eax)
(bad)
call   *%eax
and    %al,(%ecx)
add    %bh,%al
data16
(bad)
decl   (%ecx,%eiz,1)
add    %eax,(%eax)
js     80a37c5 <_IO_stdin_used+0xd4c1>
(bad)
call   *0x21(%eax)
add    %eax,(%eax)
or     %ch,-0x2(%eax)
decl   0x68880001(%ecx,%eiz,1)
(bad)
jmp    *-0x47fffedf(%eax)
push   $0x21c0fffe
add    %eax,(%eax)
fsubrs -0x2(%eax)
jmp    *%eax
and    %eax,(%ecx)
add    %cl,0x38fffe69(%eax)
and    (%ecx),%al
add    %bh,(%eax)
push   $0xfffffffe
call   *0x68000122(%eax)
push   $0xfffffffe
pushl  -0x67fffede(%eax)
push   $0xfffffffe
call   *%eax
and    (%ecx),%al
add    %cl,%al
push   $0xfffffffe
push   %eax
and    (%ecx),%al
add    %bh,%al
push   $0xfffffffe
call   *(%eax)
and    (%ecx),%eax
add    %ch,(%eax)
imul   $0xffffffff,%esi,%edi
xor    %ah,(%ebx)
add    %eax,(%eax)
pop    %eax
imul   $0xffffffff,%esi,%edi
push   %eax
and    (%ecx),%eax
add    %ch,0x7cfffe6b(%eax)
and    (%ecx),%eax
add    %ch,-0x43000194(%eax)
and    (%ecx),%eax
add    %bl,0x14fffe6d(%eax)
and    $0x1,%al
add    %bh,(%eax)
outsb  %ds:(%esi),(%dx)
(bad)
incl   0x1(%esp)
add    %cl,0x6e(%eax)
(bad)
lcall  *0x24(%eax)
add    %eax,(%eax)
mov    $0x8cfffe6e,%eax
and    $0x1,%al
add    %cl,(%eax)
jo     80a37f5 <_IO_stdin_used+0xd4f1>
jmp    *%esp
and    $0x1,%al
add    %cl,0x70(%eax)
(bad)
call   *(%eax)
and    $0x71280001,%eax
(bad)
call   *0x25(%eax)
add    %eax,(%eax)
mov    $0x98fffe71,%eax
and    $0x72580001,%eax
(bad)
(bad)
in     (%dx),%al
and    $0x72a80001,%eax
(bad)
lcall  *(%eax)
add    %eax,%es:(%eax)
mov    $0x2cfffe72,%eax
add    %eax,%es:(%eax)
enter  $0xfe72,$0xff
inc    %eax
add    %eax,%es:(%eax)
clc
jb     80a3835 <_IO_stdin_used+0xd531>
jmp    *0x26(%eax)
add    %eax,(%eax)
js     80a38b1 <_IO_stdin_used+0xd5ad>
(bad)
pushl  0x79a80001(%esi,%eiz,1)
(bad)
(bad)
clc
add    %eax,%es:(%eax)
clc
jns    80a384d <_IO_stdin_used+0xd549>
ljmp   *(%edi,%eiz,1)
add    %eax,(%eax)
js     80a38d0 <_IO_stdin_used+0xd5cc>
(bad)
pushl  0x27(%eax)
add    %eax,(%eax)
push   $0xb0fffe7c
daa
add    %eax,(%eax)
sbb    %al,0x2808fffe(%ecx)
add    %eax,(%eax)
enter  $0xfe82,$0xff
pusha
sub    %al,(%ecx)
add    %bh,-0x4700017b(%eax)
sub    %al,(%ecx)
add    %bl,-0x79(%eax)
(bad)
ljmp   *(%eax)
sub    %eax,(%ecx)
add    %ch,0x54fffe87(%eax)
sub    %eax,(%ecx)
add    %ch,(%eax)
mov    %edi,%esi
inc    %eax
sub    %eax,(%ecx)
add    %ch,%al
mov    %edi,%esi
incl   (%eax)
sub    (%ecx),%al
add    %bh,%al
mov    %dh,%bh
(bad)
cmp    %ch,(%edx)
add    %eax,(%eax)
js     80a3831 <_IO_stdin_used+0xd52d>
(bad)
(bad)
jl     80a38d4 <_IO_stdin_used+0xd5d0>
add    %eax,(%eax)
cwtl
mov    %esi,%edi
lcall  *-0x7427ffff(%edx,%ebp,1)
(bad)
(bad)
mov    $0x6800012a,%esp
mov    %?,%esi
jmp    *%eax
sub    (%ecx),%al
add    %bl,0xfffe8c(%eax)
sub    (%ecx),%eax
add    %bl,(%eax)
(bad)
(bad)
pushl  (%ebx,%ebp,1)
add    %eax,(%eax)
dec    %eax
(bad)
(bad)
call   *0x1(%ebx,%ebp,1)
add    %ch,(%eax)
mov    %esi,%?
lcall  *-0x71b7ffff(%ebx,%ebp,1)
(bad)
pushl  0x1800012b(%eax)
(bad)
(bad)
(bad)
call   d00a3a20 <_end+0xc7feb0d0>
(bad)
(bad)
ljmp   *(%eax)
sub    $0x1,%al
add    %cl,%al
nop
(bad)
call   *-0x7fffed4(%eax)
nop
(bad)
(bad)
mov    $0x1800012c,%esp
xchg   %eax,%ecx
(bad)
call   *%eax
sub    $0x1,%al
add    %bh,(%eax)
xchg   %eax,%ecx
(bad)
jmp    *%esp
sub    $0x1,%al
add    %ch,-0x6f(%eax)
(bad)
incl   -0x6e67ffff(,%ebp,1)
(bad)
jmp    *-0x6e37ffff(,%ebp,1)
(bad)
incl   0x1(%ebp,%ebp,1)
add    %bh,%al
xchg   %eax,%ecx
(bad)
jmp    *0x1(%ebp,%ebp,1)
add    %ch,(%eax)
xchg   %eax,%edx
(bad)
incl   -0x6dc7ffff(%ebp,%ebp,1)
(bad)
lcall  *0x3800012d(%eax)
xchg   %eax,%ebx
(bad)
push   %esp
sub    $0x95d80001,%eax
(bad)
jmp    *0x2e(%eax)
add    %eax,(%eax)
sbb    %dl,0x2eb8fffe(%edi)
add    %eax,(%eax)
test   $0x97,%al
(bad)
incl   (%eax)
das
add    %eax,(%eax)
fcoms  0x2f20fffe(%edi)
add    %eax,(%eax)
test   $0x99,%al
(bad)
jmp    *0x2f(%eax)
add    %eax,(%eax)
clc
cltd
(bad)
incl   0x6800012f(%eax)
lcall  $0x1,$0x2facfffe
mov    $0xccfffe9a,%eax
das
add    %eax,(%eax)
js     80a3931 <_IO_stdin_used+0xd62d>
(bad)
call   *(%eax,%esi,1)
add    %eax,(%eax)
call   490a383c <_end+0x40feaeec>
xor    %al,(%ecx)
add    %bl,-0x64(%eax)
(bad)
ljmp   *0x1(%eax,%esi,1)
add    %ch,-0x67000164(%eax)
xor    %al,(%ecx)
add    %ch,(%eax)
popf
(bad)
call   *%esp
xor    %al,(%ecx)
add    %bl,(%eax)
sahf
(bad)
call   *(%ecx,%esi,1)
add    %eax,(%eax)
push   $0x34fffe9e
xor    %eax,(%ecx)
add    %ch,(%eax)
lahf
(bad)
pushl  0x1(%ecx,%esi,1)
add    %bh,-0x1b00015f(%eax)
xor    %eax,(%ecx)
add    %ch,%al
mov    0x3210fffe,%eax
add    %eax,(%eax)
sbb    %ah,0x323cfffe(%edx)
add    %eax,(%eax)
js     80a3991 <_IO_stdin_used+0xd68d>
(bad)
call   *-0x5c77ffff(%edx,%esi,1)
(bad)
ljmp   *-0x57fffece(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
incl   (%eax)
xor    (%ecx),%eax
add    %cl,(%eax)
movsl  %ds:(%esi),%es:(%edi)
(bad)
ljmp   *(%ebx,%esi,1)
add    %eax,(%eax)
cmp    %ah,0x334cfffe(%ebp)
add    %eax,(%eax)
or     %ah,0x338cfffe(%esi)
add    %eax,(%eax)
dec    %eax
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
(bad)
mov    $0xc8000133,%eax
cmpsl  %es:(%edi),%ds:(%esi)
(bad)
call   *(%eax)
xor    $0x1,%al
add    %bl,(%eax)
test   $0xfe,%al
pushl  (%esp,%esi,1)
add    %eax,(%eax)
mov    %ch,0x3474fffe(%esi)
add    %eax,(%eax)
test   $0xae,%al
(bad)
decl   -0x17fffecc(%eax)
scas   %es:(%edi),%al
(bad)
pushl  -0x5077ffff(%esp,%esi,1)
(bad)
(bad)
cld
xor    $0x1,%al
add    %ch,(%eax)
mov    $0xfe,%al
incl   0x1(%ebp,%esi,1)
add    %bl,-0x50(%eax)
(bad)
pushl  0x35(%eax)
add    %eax,(%eax)
dec    %eax
mov    $0xfe,%cl
pushl  -0x47fffecb(%eax)
mov    $0xfe,%cl
(bad)
call   600a3baa <_end+0x57feb25a>
mov    $0xfe,%dl
jmp    *(%eax)
add    %eax,%ss:(%eax)
fdivs  0x3658fffe(%edx)
add    %eax,(%eax)
pop    %eax
mov    $0xfe,%bl
ljmp   *-0x4c47ffff(%esi,%esi,1)
(bad)
jmp    *%eax
add    %eax,%ss:(%eax)
mov    %dh,0x13738ff(%esi,%edi,8)
add    %bh,(%eax)
mov    $0xfe,%ch
pushl  0x1(%edi,%esi,1)
add    %ch,%al
mov    $0xfe,%dh
dec    %esp
aaa
add    %eax,(%eax)
push   $0xf8fffeb7
aaa
add    %eax,(%eax)
cmp    %bh,0x384cfffe(%eax)
add    %eax,(%eax)
js     80a3a76 <_IO_stdin_used+0xd772>
(bad)
incl   -0x77fffec8(%eax)
mov    $0x3894fffe,%eax
add    %eax,(%eax)
sbb    %bh,0x38e8fffe(%ecx)
add    %eax,(%eax)
enter  $0xfebe,$0xff
sub    $0x39,%al
add    %eax,(%eax)
dec    %eax
mov    $0x3964fffe,%edi
add    %eax,(%eax)
sbb    %al,%al
(bad)
lcall  *-0x3fd7ffff(%ecx,%edi,1)
(bad)
pushl  0x38000139(%eax)
sar    $0xff,%dh
les    (%ecx),%edi
add    %eax,(%eax)
dec    %eax
sar    $0xff,%dh
fdivrs (%ecx)
add    %eax,(%eax)
pop    %eax
sar    $0xff,%dh
in     (%dx),%al
cmp    %eax,(%ecx)
add    %ch,-0x40(%eax)
(bad)
incl   (%eax)
cmp    (%ecx),%al
add    %bh,-0x40(%eax)
(bad)
call   *(%edx,%edi,1)
add    %eax,(%eax)
clc
sar    $0xff,%dh
pop    %esp
cmp    (%ecx),%al
add    %cl,-0x6700013f(%eax)
cmp    (%ecx),%al
add    %ch,(%eax)
ret    $0xfffe
fdivrs (%edx)
add    %eax,(%eax)
push   $0xf8fffec2
cmp    (%ecx),%al
add    %ch,0x18fffec2(%eax)
cmp    (%ecx),%eax
add    %bl,(%eax)
ret
(bad)
decl   0x3b(%eax)
add    %eax,(%eax)
dec    %eax
(bad)
(bad)
jmp    *0x4800013b(%eax)
(bad)
hlt
cmp    (%ecx),%eax
add    %bl,%al
(bad)
cmp    $0x3c,%al
add    %eax,(%eax)
push   $0x78fffec6
cmp    $0x1,%al
add    %cl,-0x39(%eax)
(bad)
jmp    *%esp
cmp    $0x1,%al
add    %bl,0x3cfffec8(%eax)
cmp    $0xca480001,%eax
(bad)
inc    %eax
cmp    $0xca880001,%eax
(bad)
call   *%esp
cmp    $0xcb180001,%eax
(bad)
call   *(%esi,%edi,1)
add    %eax,(%eax)
test   $0xcb,%al
(bad)
decl   -0x2ee7ffff(%esi,%edi,1)
(bad)
(bad)
cld
add    %eax,%ds:(%eax)
clc
sar    %esi
call   *0x1(%edi,%edi,1)
add    %cl,(%eax)
aam    $0xfe
inc    %eax
aas
add    %eax,(%eax)
mov    $0x4fffed4,%eax
inc    %eax
add    %eax,(%eax)
dec    %eax
aad    $0xfe
incl   0x40(%eax)
add    %eax,(%eax)
cmp    %dl,%bh
(bad)
inc    %eax
inc    %eax
add    %eax,(%eax)
fcomp  %st(0)
(bad)
decl   (%eax)
inc    %ecx
add    %eax,(%eax)
sbb    %bl,%dh
(bad)
jmp    *0x41(%eax)
add    %eax,(%eax)
fcomp  %st(6)
(bad)
call   *-0x17fffebf(%eax)
fdivrp %st,%st(6)
jmp    *-0x2027ffff(%ecx,%eax,2)
(bad)
jmp    *%eax
inc    %ecx
add    %eax,(%eax)
mov    %ah,%al
(bad)
jmp    *(%eax)
inc    %edx
add    %eax,(%eax)
call   610a3ae1 <_end+0x58feb191>
inc    %edx
add    %eax,(%eax)
call   a10a3aec <_end+0x98feb19c>
inc    %edx
add    %eax,(%eax)
or     %ah,%ah
(bad)
ljmp   *-0x1bb7ffff(%edx,%eax,2)
(bad)
dec    %esp
inc    %edx
add    %eax,(%eax)
push   $0xe0fffee4
inc    %edx
add    %eax,(%eax)
js     80a3c0a <_IO_stdin_used+0xd906>
(bad)
push   %esp
inc    %edx
add    %eax,(%eax)
cwtl
in     $0xfe,%al
decl   (%eax)
inc    %ebx
add    %eax,(%eax)
fsub   %st(4),%st
(bad)
pushl  (%ebx,%eax,2)
add    %eax,(%eax)
sub    %ah,%ch
(bad)
lcall  *0x1(%ebx,%eax,2)
add    %cl,%al
in     $0xfe,%eax
decl   0x18000143(%eax)
out    %al,$0xfe
pushl  -0x47fffebd(%eax)
out    %al,$0xfe
(bad)
faddl  0x1(%ebx)
add    %bh,%al
out    %al,$0xfe
decl   (%eax)
inc    %esp
add    %eax,(%eax)
or     %ah,%bh
(bad)
lcall  *(%esp,%eax,2)
add    %eax,(%eax)
cmp    %ah,%bh
(bad)
(bad)
cmp    %al,0x0(%ecx,%eax,1)
mov    %ah,%bh
(bad)
lcall  *0x1(%esp,%eax,2)
add    %ch,0x70fffee7(%eax)
inc    %esp
add    %eax,(%eax)
mov    $0x84fffee7,%eax
inc    %esp
add    %eax,(%eax)
or     %ch,%al
(bad)
pushl  0x78000144(%eax)
call   4cef3c98 <_end+0x44e3b348>
add    %eax,(%eax)
or     %ch,%cl
(bad)
lcall  *-0x1647ffff(,%eax,2)
(bad)
pushl  0x45(%eax)
add    %eax,(%eax)
cmp    %ch,%dl
(bad)
lcall  *-0x1567ffff(%ebp,%eax,2)
(bad)
call   *%esp
inc    %ebp
add    %eax,(%eax)
sub    %ch,%ch
(bad)
ljmp   *(%esi,%eax,2)
add    %eax,(%eax)
sub    %dh,%dl
(bad)
ljmp   *0x1(%esi,%eax,2)
add    %cl,-0xe(%eax)
(bad)
incl   0x68000146(%eax)
repnz (bad)
call   *-0xcb7ffff(%esi,%eax,2)
(bad)
(bad)
in     (%dx),%al
inc    %esi
add    %eax,(%eax)
call   2d0a3bdc <_end+0x24feb28c>
inc    %edi
add    %eax,(%eax)
sbb    %dh,%dh
(bad)
(bad)
jl     80a3d39 <_IO_stdin_used+0xda35>
add    %eax,(%eax)
fdiv   %st(7),%st
(bad)
call   *%esp
inc    %edi
add    %eax,(%eax)
sbb    %bh,%dl
(bad)
ljmp   *(%eax,%ecx,2)
add    %eax,(%eax)
dec    %eax
cld
(bad)
incl   -0x187ffff(%eax,%ecx,2)
(bad)
push   %eax
dec    %eax
add    %eax,(%eax)
js     80a3d16 <_IO_stdin_used+0xda12>
(bad)
pushl  0x1(%ecx,%ecx,2)
add    %bh,0x1(%eax)
(bad)
(bad)
mov    $0x78000149,%esp
add    %bh,%bh
incl   (%edx,%ecx,2)
add    %eax,(%eax)
call   410a3c33 <_end+0x38feb2e3>
dec    %edx
add    %eax,(%eax)
mov    $0xa8ffff0d,%eax
dec    %edx
add    %eax,(%eax)
enter  $0xff0d,$0xff
mov    $0x6800014a,%esp
push   %cs
(bad)
(bad)
clc
dec    %edx
add    %eax,(%eax)
cwtl
(bad)
jmp    *(%ebx,%ecx,2)
add    %eax,(%eax)
or     %dl,(%ebx)
(bad)
call   *0x13a80001(%ebx,%ecx,2)
(bad)
call   *%esp
dec    %ebx
add    %eax,(%eax)
fcoms  (%ebx)
(bad)
push   %esp
dec    %ebx
add    %eax,(%eax)
pop    %eax
adc    $0xff,%al
decl   0x4c(%eax)
add    %eax,(%eax)
fcoms  0x4c88ffff
add    %eax,(%eax)
cmp    %dl,(%esi)
(bad)
(bad)
mov    $0x4800014c,%esp
push   %ss
(bad)
call   *%eax
dec    %esp
add    %eax,(%eax)
pop    %eax
pop    %ss
(bad)
call   *(%eax)
dec    %ebp
add    %eax,(%eax)
sub    %bl,(%eax)
(bad)
jmp    *0x1(%ebp,%ecx,2)
add    %bh,(%eax)
sbb    %bh,%bh
(bad)
js     80a3def <_IO_stdin_used+0xdaeb>
add    %eax,(%eax)
mov    %bl,(%eax)
(bad)
jmp    *0x18d80001(%ebp,%ecx,2)
(bad)
call   *%eax
dec    %ebp
add    %eax,(%eax)
sub    %bl,(%ecx)
(bad)
(bad)
cld
dec    %ebp
add    %eax,(%eax)
push   $0x28ffff19
dec    %esi
add    %eax,(%eax)
mov    %bl,(%ecx)
(bad)
decl   0x4e(%eax)
add    %eax,(%eax)
js     80a3de8 <_IO_stdin_used+0xdae4>
(bad)
pushl  0x4800014e(%eax)
sbb    $0x4ef4ffff,%eax
add    %eax,(%eax)
push   $0x48ffff1e
dec    %edi
add    %eax,(%eax)
mov    $0x74ffff1e,%eax
dec    %edi
add    %eax,(%eax)
push   $0xb4ffff20
dec    %edi
add    %eax,(%eax)
clc
and    %bh,%bh
(bad)
cld
dec    %edi
add    %eax,(%eax)
pop    %eax
and    %edi,%edi
ljmp   *(%eax,%edx,2)
add    %eax,(%eax)
enter  $0xff27,$0xff
pushf
push   %eax
add    %eax,(%eax)
js     80a3e36 <_IO_stdin_used+0xdb32>
(bad)
push   %eax
push   %eax
add    %eax,(%eax)
fsubrs (%eax)
(bad)
lcall  *(%ecx,%edx,2)
add    %eax,(%eax)
clc
sub    %bh,%bh
pushl  (%eax)
push   %ecx
add    %eax,(%eax)
pop    %eax
sub    %edi,%edi
jmp    *0x1(%ecx,%edx,2)
add    %cl,-0x5b0000d4(%eax)
push   %ecx
add    %eax,(%eax)
or     %ch,0x51e0ffff
add    %eax,(%eax)
clc
cs
(bad)
decl   0x1(%edx,%edx,2)
add    %bl,(%eax)
xor    %bh,%bh
decl   0x31280001(%edx,%edx,2)
(bad)
jmp    *%eax
push   %edx
add    %eax,(%eax)
pop    %eax
xor    %edi,%edi
jmp    *(%eax)
push   %ebx
add    %eax,(%eax)
test   $0x33,%al
(bad)
call   *0x1(%ebx,%edx,2)
add    %bh,0x68ffff33(%eax)
push   %ebx
add    %eax,(%eax)
push   $0xb0ffff34
push   %ebx
add    %eax,(%eax)
test   $0x34,%al
(bad)
jmp    *%esp
push   %ebx
add    %eax,(%eax)
clc
inc    %edi
(bad)
lcall  *(%esp,%edx,2)
add    %eax,(%eax)
cmp    %cl,-0x1(%eax)
pushl  (%eax)
push   %esp
add    %eax,(%eax)
enter  $0xff49,$0xff
test   %dl,0x0(%ecx,%eax,1)
sbb    %cl,-0x1(%edi,%edi,8)
les    0x0(%ecx,%eax,1),%edx
fmuls  -0x1(%edi,%edi,8)
or     $0x55,%al
add    %eax,(%eax)
sbb    %cl,-0x1(%ebp)
(bad)
cmp    %dl,0x1(%ebp)
add    %bl,%al
dec    %ebp
(bad)
(bad)
js     80a3f07 <_IO_stdin_used+0xdc03>
add    %eax,(%eax)
pop    %eax
dec    %esi
(bad)
pushl  0x38000155(%eax)
dec    %edi
(bad)
incl   (%esi,%edx,2)
add    %eax,(%eax)
enter  $0xff4f,$0xff
cmp    $0x56,%al
add    %eax,(%eax)
fcoms  -0x1(%eax)
call   *-0x67fffeaa(%eax)
push   %ecx
(bad)
(bad)
mov    $0x8000156,%esp
push   %edx
(bad)
(bad)
clc
push   %esi
add    %eax,(%eax)
sbb    %dl,-0x1(%edx)
decl   (%edi,%edx,2)
add    %eax,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     80a3f03 <_IO_stdin_used+0xdbff>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
les    0xba0fffa(%eax),%edx
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     80a3f23 <_IO_stdin_used+0xdc1f>
js     80a3f21 <_IO_stdin_used+0xdc1d>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sbb    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,%al
test   $0xfa,%al
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
push   $0xc341080e
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
add    %ch,0x3bfffa(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jne    80a3f71 <_IO_stdin_used+0xdc6d>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,0x20000000(%eax)
test   $0x2bfffa,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,0x30000000(%eax)
test   $0x2bfffa,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
add    %al,-0x57(%eax)
cli
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,%al
add    %al,(%eax)
add    %dl,-0x57(%eax)
cli
dec    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb9,0x2400e45
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %bl,(%ecx,%eax,1)
add    %al,(%eax)
in     $0xa9,%al
cli
(bad)
mov    $0x2,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x77700e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
in     $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
je     80a4063 <_IO_stdin_used+0xdd5f>
add    %al,(%eax)
dec    %esp
lods   %ds:(%esi),%al
cli
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jb     80a4086 <_IO_stdin_used+0xdd82>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%esi),%ebp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %eax,(%eax)
add    %dl,0x84fffa(%esp,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
ja     80a40c3 <_IO_stdin_used+0xddbf>
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
fadds  (%ecx)
add    %al,(%eax)
clc
lods   %ds:(%esi),%al
cli
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
imul   $0x8,(%esi),%ecx
inc    %ecx
ret
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,%al
add    %eax,(%eax)
add    %bl,(%eax)
lods   %ds:(%esi),%eax
cli
jmp    *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%esi),%edi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,(%edx,%eax,1)
add    %al,(%eax)
pop    %esp
lods   %ds:(%esi),%eax
cli
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ecx),%esp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dl,0x2(%eax)
add    %al,(%eax)
subb   $0x0,0x5d5fffa(%ebp)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
mov    $0x41140e0a,%ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
xchg   %eax,%edx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ch,0x8000002(%eax)
mov    $0xfa,%bl
call   *0x2
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1900e43
(bad)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
add    (%ecx),%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%ebp
add    %al,(%eax)
add    (%eax),%eax
add    %dl,%al
mov    $0xfa,%ah
call   *0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
sbb    %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,0x3(%eax)
add    %al,(%eax)
add    %dh,0x106fffa(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
push   %esi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    $0xa,%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bh,-0x37fffffd(%eax)
mov    $0xfa,%bh
incl   0x0
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
int3
add    (%eax),%eax
add    %al,%ah
mov    $0xfa,%bh
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jo     80a42dd <_IO_stdin_used+0xdfd9>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ch,%ah
add    (%eax),%eax
add    %ah,%ah
mov    $0xfa,%bh
(bad)
fiadd  (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x3300e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%esp,%eax,1)
add    %ch,-0x6(%ecx,%edi,4)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x4(%eax)
add    %al,(%eax)
push   $0x6cfffab9
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %edx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
dec    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %al,-0x46540000(%esp,%eax,1)
cli
jmp    *0x2(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc9,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
faddl  (%eax,%eax,1)
add    %al,%ah
mov    $0x143fffa,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%esp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dh,(%eax)
add    $0xbcc00000,%eax
cli
call   *0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx),%esp
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
test   %al,0xbe0c0000
cli
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edx
or     (%esi),%cl
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ecx),%esi
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x6c,%al
add    %al,(%eax)
add    %bh,-0x419c0000(%ebp,%eax,1)
cli
lcall  *0xc(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
fiadd  (%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
movsb  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
sub    $0x6,%al
add    %al,(%eax)
push   %esp
lret   $0xfffa
call   80a4525 <_IO_stdin_used+0xe221>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa6,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ecx),%ebp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
addb   $0x0,(%esi)
add    %dh,%al
lret   $0xfffa
cmp    $0x1,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%ebx)
or     $0x100e0a01,%eax
inc    %esi
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bh,-0x7fffffa(%eax)
lret
cli
ljmp   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,-0x3ff1b9fe(%ebx)
and    %dh,0xa(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bl,%ah
push   %es
add    %al,(%eax)
test   %cl,%ah
cli
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf5a8fc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %cl,-0x39(%ebx)
push   %cs
add    $0x48,%al
or     -0x3d(%ebp),%ebx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
sbb    %al,(%edi)
add    %al,(%eax)
cwtl
int3
cli
call   *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbe,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
pop    %eax
pop    %es
add    %al,(%eax)
cmp    %cl,%ch
cli
(bad)
jle    80a464e <_IO_stdin_used+0xe34a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
pop    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
nop
pop    %es
add    %al,(%eax)
or     $0xfa,%ch
incl   0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pop    %es
add    %al,(%eax)
mov    $0x6afffacd,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
pop    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
faddl  (%edi)
add    %al,(%eax)
hlt
int    $0xfa
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
lock pop %es
add    %al,(%eax)
lock int $0xfa
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %ah,0xe(%ebp)
add    $0x0,%al
pusha
add    %al,(%eax)
add    %cl,(%eax)
or     %al,(%eax)
add    %cl,(%eax)
into
cli
(bad)
mov    $0x0,%ebx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %al,(%edx)
dec    %ecx
or     (%esi),%cl
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%ecx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebp),%ecx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%esp
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %ch,0x0(%eax,%ecx,1)
add    %ah,-0x6(%esi,%ecx,8)
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edx),%esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x8,%ah
add    %al,(%eax)
sub    $0xcf,%al
cli
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
or     %al,(%eax)
add    %ch,(%eax)
iret
cli
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,%ah
or     %al,(%eax)
add    %dh,(%edi,%ecx,8)
cli
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
or     %cl,(%ecx)
add    %al,(%eax)
dec    %eax
iret
cli
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
push   %ebx
push   %cs
and    %bl,0xe(%edx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
and    %cl,(%ecx)
add    %al,(%eax)
pusha
iret
cli
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %dh,(%ecx,%ecx,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
iret
cli
(bad)
cmp    $0x1,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4504(%ebx)
add    0xa(%ebx),%dh
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%eax
add    %bh,0x0(%ecx,%ecx,1)
add    %ah,-0x6(%eax,%edx,8)
dec    %esp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %al,%ah
or     %eax,(%eax)
add    %ch,%ah
sar    %cl,%dl
decl   (%edx)
or     %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x75,0x1800e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
add    %fs:(%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %bl,(%edx,%ecx,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
(bad)
pushl  0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
or     %fs:(%eax),%al
add    %bl,0x5fffa(,%ebx,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
js     80a4970 <_IO_stdin_used+0xe66c>
add    %al,(%eax)
sbb    %bl,%ch
cli
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
js     80a4985 <_IO_stdin_used+0xe681>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
test   $0xa,%al
add    %al,(%eax)
dec    %eax
(bad)
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,%al
or     (%eax),%al
add    %bl,-0x23(%eax)
cli
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,%al
or     (%eax),%al
add    %ch,-0x23(%eax)
cli
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,(%eax)
or     (%eax),%eax
add    %bh,-0x23(%eax)
cli
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,(%eax)
or     (%eax),%eax
add    %cl,0x25fffadd(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,0xb(%eax)
add    %al,(%eax)
cwtl
(bad)
incl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
ja     80a4a5f <_IO_stdin_used+0xe75b>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
je     80a4a6d <_IO_stdin_used+0xe769>
add    %al,(%eax)
cld
(bad)
jmp    *0x2
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
loopne 80a4ad9 <_IO_stdin_used+0xe7d5>
add    %al,(%eax)
rcr    $0xfa,%bh
call   *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x5c,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
and    %cl,(%eax,%eax,1)
add    %dl,0x10fffae0(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,(%esp,%ecx,1)
add    %al,(%eax)
mov    %fs,%eax
cli
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xec34110(%esi,%ecx,1),%dl
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
push   $0xf800000c
loopne 80a4b55 <_IO_stdin_used+0xe851>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %bh,0x0(%esp,%ecx,1)
add    %dh,%ah
loopne 80a4b69 <_IO_stdin_used+0xe865>
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
dec    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
push   %esi
add    %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,%ah
or     $0x0,%al
add    %ch,(%edx,%eiz,8)
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%al
or     $0x0,%al
add    %ch,(%eax)
loop   80a4bc5 <_IO_stdin_used+0xe8c1>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%ah
or     $0x0,%al
add    %ah,(%edx,%eiz,8)
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
or     $0xe2200000,%eax
cli
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x1dd40000(,%ecx,1)
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
or     $0xe2280000,%eax
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x1ddc0000(,%ecx,1)
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0xd(%eax)
add    %al,(%eax)
and    %ah,%dl
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp,%ecx,1)
add    %bl,(%edx,%eiz,8)
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0xd(%eax)
add    %al,(%eax)
sbb    %ah,%dl
cli
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,-0x1dec0000(%ebp,%ecx,1)
cli
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x1000000d(%eax)
loop   80a4c8d <_IO_stdin_used+0xe989>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x1df40000(%ebp,%ecx,1)
cli
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
or     $0xe2080000,%eax
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
or     $0xe2040000,%eax
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
or     $0xe2000000,%eax
cli
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%esi,%ecx,1)
add    %al,(%eax)
cld
loope  80a4cf1 <_IO_stdin_used+0xe9ed>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
push   %cs
add    %al,(%eax)
clc
loope  80a4d05 <_IO_stdin_used+0xea01>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%esi,%ecx,1)
add    %al,(%eax)
hlt
loope  80a4d19 <_IO_stdin_used+0xea15>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0xe(%eax)
add    %al,(%eax)
lock loope 80a4d2d <_IO_stdin_used+0xea29>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esi,%ecx,1)
add    %ch,%ah
loope  80a4d41 <_IO_stdin_used+0xea3d>
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0xe(%eax)
add    %al,(%eax)
call   140a483e <_end+0xbfebeee>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x0(%esi,%ecx,1)
add    %ah,%ah
loope  80a4d69 <_IO_stdin_used+0xea65>
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x1ffffff2(%eax)
loope  80a4d7d <_IO_stdin_used+0xea79>
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x1e240000(%esi,%ecx,1)
cli
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %bh,-0x27fffff2(%eax)
loope  80a4da5 <_IO_stdin_used+0xeaa1>
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %al,(%eax)
sldt   (%eax)
nop
loop   80a4ded <_IO_stdin_used+0xeae9>
push   %eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x8,0x3600e45
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bl,0xf(%eax)
add    %al,(%eax)
sub    %ah,%ah
cli
inc    %edx
or     %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
pop    %edi
add    $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
jg     80a4e8e <_IO_stdin_used+0xeb8a>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%eax
add    %dh,-0x5ffffff1(%eax)
in     (%dx),%eax
cli
(bad)
ljmp   $0xe41,$0x0
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x43100e0a(%ebx),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
push   %esp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %bh,%al
sldt   (%eax)
dec    %eax
out    %al,(%dx)
cli
dec    %ebp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
push   %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
dec    %edx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,0x10(%eax)
add    %al,(%eax)
shr    $0xfa,%bh
pushl  0x7(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e43
decb   (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
push   %edx
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%esi
add    %al,(%eax)
add    %ch,-0x27fffff0(%eax)
idiv   %dl
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%eax),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
fcoml  (%eax)
add    %al,(%eax)
adc    $0xf7,%al
cli
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%ecx,%edx,1)
add    %al,(%eax)
cmp    $0xf7,%al
cli
incl   0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2900e46
dec    %esp
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x11(%eax)
add    %al,(%eax)
mov    %bh,%al
cli
pushl  0x13(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x3800e48
dec    %esi
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%eax
add    %al,(%eax)
mov    $0x11,%al
add    %al,(%eax)
mov    $0xb,%al
sti
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dh,%ah
adc    %eax,(%eax)
add    %bh,0x4bfffb(%ebx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
arpl   %cx,(%edx)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %bh,(%eax)
adc    (%eax),%al
add    %cl,%al
or     %ebx,%edi
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
jae    80a514f <_IO_stdin_used+0xee4b>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx,%ecx,1),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ecx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,-0xfffffee(%eax)
or     %ebx,%edi
decl   0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    (%edi),%edi
add    %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %al,%ah
adc    (%eax),%al
add    %cl,0x3c8fffb(,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffc6,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,(%eax)
adc    (%eax),%eax
add    %dh,0x10(%eax)
sti
call   *0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcd,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    %dl,(%ebx)
add    %al,(%eax)
mov    $0x8fffb11,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x11b40000(%ebx,%edx,1)
sti
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,-0x3fffffed(%eax)
adc    %edi,%ebx
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
dec    %eax
push   %cs
and    %bh,0xe(%esi)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %bl,%ah
adc    (%eax),%eax
add    %ah,%ah
adc    %edi,%ebx
decl   0xd(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x700e4304(%ebx)
add    0xa(%eax),%ah
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %esp
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%ebp
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   $0x38000000
adc    $0x0,%al
add    %bl,%al
push   %ds
sti
lcall  *(%edi)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    $0x0,%al
add    %cl,0x7f7fffb(%edx,%eiz,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x67,0x1800e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    %al,(%eax)
add    %al,(%eax)
in     $0x14,%al
add    %al,(%eax)
dec    %esp
sub    %bl,%bh
decl   0x43000000(%eax,%eax,1)
push   %cs
and    %al,(%edx)
dec    %ecx
or     (%esi),%cl
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
add    %dl,0x2ac00000
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x2abc0000(,%edx,1)
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
adc    $0x2ab80000,%eax
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x2ab40000(,%edx,1)
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x15(%eax)
add    %al,(%eax)
mov    $0x2a,%al
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp,%edx,1)
add    %ch,0x8fffb(%edx,%ebp,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
js     80a547b <_IO_stdin_used+0xf177>
add    %al,(%eax)
test   $0x2a,%al
sti
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x2aa40000(%ebp,%edx,1)
sti
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x4fffffeb(%eax)
sub    %bl,%bh
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x2abc0000(%ebp,%edx,1)
sti
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
adc    $0x2ac80000,%eax
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,%ah
adc    $0x2ac40000,%eax
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
adc    $0x2ac00000,%eax
sti
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %al,(%esi,%edx,1)
add    %al,(%eax)
mov    $0x17fffb2a,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
dec    %esi
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
sub    %dl,(%esi)
add    %al,(%eax)
mov    $0x15fffb2a,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cmp    $0x16,%al
add    %al,(%eax)
les    (%edx),%ebp
sti
call   *%esp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ebx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi,%edx,1)
add    %ch,-0x5(%ebp,%ebp,1)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x78000016(%eax)
sub    $0x1afffb,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pushf
push   %ss
add    %al,(%eax)
test   %ch,0x26fffb
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%edx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x16,%ah
add    %al,(%eax)
pushf
sub    $0x22fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
pop    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,%ah
push   %ss
add    %al,(%eax)
lods   %ds:(%esi),%al
sub    $0x39fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edi)
add    %al,(%eax)
shrb   $0x0,0x5fffb
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x17,%al
add    %al,(%eax)
mov    $0x24fffb2d,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dh,(%edi,%edx,1)
add    %al,(%eax)
int3
sub    $0x5bfffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
imul   $0xc341100e,(%edx),%ecx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edx),%edx
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,0x17(%eax)
add    %al,(%eax)
call   2b0a519a <_end+0x22fec84a>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bl,-0x7ffffe9(%eax)
sub    $0x18fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0x4(%esi,%ecx,1)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,0x17(%eax)
cs
sti
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
fcoml  (%edi)
add    %al,(%eax)
adc    $0x2e,%al
sti
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bh,%ah
pop    %ss
add    %al,(%eax)
and    $0x2e,%al
sti
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     80a5713 <_IO_stdin_used+0xf40f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
inc    %esp
sbb    %al,(%eax)
add    %bh,-0x5(%esi,%ebp,1)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
imul   $0xec34108,(%esi),%ecx
add    $0x1c,%al
add    %al,(%eax)
add    %ah,0x0(%eax,%ebx,1)
add    %bl,0x22fffb(%esi,%ebp,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
pop    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,0x2eac0000(%eax,%ebx,1)
sti
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,0x2ebc0000(%eax,%ebx,1)
sti
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %al,%ah
sbb    %al,(%eax)
add    %cl,%ah
cs
sti
(bad)
jge    80a57ba <_IO_stdin_used+0xf4b6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%ebx),%dh
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ch,%al
sbb    %al,(%eax)
add    %ch,(%eax)
das
sti
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x7e300e43
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cmp    $0x19,%al
add    %al,(%eax)
inc    %esp
das
sti
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,0x0(%ecx,%ebx,1)
add    %dl,-0x5(%edi,%ebp,1)
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bh,0x0(%ecx,%ebx,1)
add    %ah,-0x5(%edi,%ebp,1)
pushl  (%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
add    %al,%ch
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x306c0000(%ecx,%ebx,1)
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
enter  $0x19,$0x0
push   $0x27fffb30
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xf,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
or     %bl,(%edx)
add    %al,(%eax)
pop    %eax
xor    %edi,%ebx
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %dl,0x4(%esi,%ecx,1)
add    %cl,0x0(%eax)
add    %al,(%eax)
and    %bl,(%edx)
add    %al,(%eax)
pusha
xor    %edi,%ebx
incl   0x4
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    (%esi),%eax
add    (%edx),%cl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sbb    (%eax),%al
add    %ah,0x59fffb(,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x5800001a(%eax)
xor    $0x7cfffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xa(%ebp),%bl
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
les    (%edx),%ebx
add    %al,(%eax)
lods   %ds:(%esi),%al
xor    $0x1ffffb,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%ebx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
fcompl (%edx)
add    %al,(%eax)
mov    $0x35,%ah
sti
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
lock sbb (%eax),%al
add    %al,%al
xor    $0x6ffffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5e300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%esi
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %esp
sbb    (%eax),%eax
add    %bl,%ah
xor    $0x8fffb,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pop    %eax
sbb    (%eax),%eax
add    %bl,%al
xor    $0x9fffb,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
sbb    (%eax),%eax
add    %dl,%ah
xor    $0x36fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ch,0xa(%edx)
push   %cs
add    $0x43,%al
or     0xe(%ebp),%eax
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
mov    %ds,(%ebx)
add    %al,(%eax)
hlt
xor    $0x21fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%ebp)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    (%eax),%eax
add    %cl,(%esi,%esi,1)
sti
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x1400001b,%esp
ss
sti
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
aam    $0x1b
add    %al,(%eax)
sub    $0x36,%al
sti
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
sbb    (%eax),%eax
add    %al,-0x5(%esi,%esi,1)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
add    $0x1c,%al
add    %al,(%eax)
pop    %esp
ss
sti
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%ebx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
sbb    $0x1c,%al
add    %al,(%eax)
fs
ss
sti
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,(%esp,%ebx,1)
add    %al,(%eax)
je     80a5b64 <_IO_stdin_used+0xf860>
sti
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edx,%ecx,1)
add    $0x49,%al
or     0xe(%ebp),%eax
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pop    %esp
sbb    $0x0,%al
add    %dl,0x38fffb(%esi,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %bl,(%eax,%eax,1)
add    %ch,0x19fffb36(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xa,0x61300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,%al
sbb    $0x0,%al
add    %cl,0x74fffb37(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
insb   (%dx),%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
hlt
sbb    $0x0,%al
add    %bl,%ah
aaa
sti
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jno    80a5c05 <_IO_stdin_used+0xf901>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %dl,0x37fc0000(,%ebx,1)
sti
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0x4(%esi,%ecx,1)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0x1d,%al
add    %al,(%eax)
adc    $0x38,%al
sti
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jno    80a5c3d <_IO_stdin_used+0xf939>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %cl,0x0(%ebp,%ebx,1)
add    %dh,(%eax,%edi,1)
sti
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%ebx)
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
fs
sbb    $0x383c0000,%eax
sti
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jno    80a5c75 <_IO_stdin_used+0xf971>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %al,0x385c0000(%ebp,%ebx,1)
sti
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0x4(%esi,%ecx,1)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pushf
sbb    $0x38740000,%eax
sti
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jno    80a5cad <_IO_stdin_used+0xf9a9>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bh,0x38940000(%ebp,%ebx,1)
sti
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%ebx)
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dl,%ah
sbb    $0x389c0000,%eax
sti
call   *%ecx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbf,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jae    80a5d08 <_IO_stdin_used+0xfa04>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
sub    $0x1e,%al
add    %al,(%eax)
and    $0x3b,%al
sti
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%ebx)
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
inc    %esp
push   %ds
add    %al,(%eax)
sub    $0x3b,%al
sti
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dh,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %bh,0x0(%esi,%ebx,1)
add    %dh,0x1efffb(%ebx,%edi,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
push   %ds
add    %al,(%eax)
mov    $0x8fffb3b,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,-0x47ffffe2(%eax)
cmp    %ebx,%edi
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,0x3bb40000(%esi,%ebx,1)
sti
pushl  0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5c300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
in     (%dx),%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,(%edi,%ebx,1)
add    %al,(%eax)
pushf
cmp    $0xfb,%al
(bad)
mov    $0x0,%ebp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
test   %ecx,(%esi)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
pop    %esp
pop    %ds
add    %al,(%eax)
adc    $0x3d,%al
sti
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc2,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bl,-0x47ffffe1(%eax)
cmp    $0xedfffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdd,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dl,%ah
pop    %ds
add    %al,(%eax)
insb   (%dx),%es:(%edi)
ds
sti
pushl  0x3(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2f,0x3500e43
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
adc    $0x20,%al
add    %al,(%eax)
in     (%dx),%al
inc    %ecx
sti
call   *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
ret
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %cl,0x0(%eax,%eiz,1)
add    %dl,0x13afffb(%edx,%eax,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6f,0x2700e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
mov    0x46140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    $0x68000020,%eax
inc    %ebx
sti
ljmp   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%eax),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,%al
and    %al,(%eax)
add    %ah,0x61fffb43(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%edi),%al
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x42,%al
or     0xe(%ebp),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
push   $0x1c000000
and    %eax,(%eax)
add    %ah,%ah
inc    %ebx
sti
(bad)
add    %ds:(%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x60400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
dec    %edi
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %cl,-0x47ffffdf(%eax)
inc    %ebp
sti
decl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffad,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
loopne 80a60ef <_IO_stdin_used+0xfdeb>
add    %al,(%eax)
jo     80a6118 <_IO_stdin_used+0xfe14>
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
and    %eax,(%eax)
add    %ch,-0x5(%esi,%eax,2)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
or     %ah,(%edx)
add    %al,(%eax)
push   $0x79fffb46
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%esi),%esp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %al,0x22(%eax)
add    %al,(%eax)
mov    $0x46,%al
sti
(bad)
jl     80a6137 <_IO_stdin_used+0xfe33>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff99,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ch,0x47c40000(%edx,%eiz,1)
sti
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff81,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x6c,%al
add    %al,(%eax)
add    %ch,%al
and    (%eax),%al
add    %ch,(%eax)
dec    %eax
sti
ljmp   *0x7(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
movsb  %ds:(%esi),%es:(%edi)
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
dec    %ebp
add    $0x43140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %bl,0x23(%eax)
add    %al,(%eax)
push   $0xa2fffb4f
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,0x4fc40000(%ebx,%eiz,1)
sti
ljmp   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %esp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%esp
push   %cs
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
call   400a62fc <_end+0x37fed9ac>
push   %eax
sti
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1b9fc(%ebx)
addb   $0x2,(%edx)
jae    80a6302 <_IO_stdin_used+0xfffe>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %ah,(%eax)
and    $0x0,%al
add    %dl,0x6efffb50(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8b00e48
lret
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
ja     80a6356 <_IO_stdin_used+0x10052>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
js     80a638a <_IO_stdin_used+0x10086>
add    %al,(%eax)
test   $0x52,%al
sti
decl   0x0(%ebp)
inc    %ebx
push   %cs
xor    %al,(%edx)
mov    %ecx,(%esi)
add    $0x50,%al
add    %al,(%eax)
add    %dl,0x20000024(%eax)
push   %ebx
sti
decl   0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dl,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     (%edx),%eax
fimul  (%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4b,%al
or     0xe(%ebx),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ah,%ah
and    $0x0,%al
add    %bl,(%esp,%edx,2)
sti
decl   0x2(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%ebx),%eax
roll   $0xa,(%ecx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cmp    $0x25,%al
add    %al,(%eax)
adc    $0x56,%al
sti
pushl  0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff96,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
jl     80a648f <_IO_stdin_used+0x1018b>
add    %al,(%eax)
push   %esp
pop    %ecx
sti
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0x4(%esi,%ecx,1)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
and    $0x597c0000,%eax
sti
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,0x598c0000(%ebp,%eiz,1)
sti
ljmp   *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ecx),%bl
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
xchg   %ecx,(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,%al
and    $0x5a800000,%eax
sti
(bad)
mov    $0x0,%ebp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x63300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
dec    %ebp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,0x26(%eax)
add    %al,(%eax)
call   b80a6097 <_end+0xaffed747>
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
movsl  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x40000026(%eax)
pop    %esp
sti
incl   0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,%al
add    %al,%es:(%eax)
js     80a6647 <_IO_stdin_used+0x10343>
sti
dec    %edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x53,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    $0x43140e0a,%edi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dl,0x27(%eax)
add    %al,(%eax)
lock pop %esi
sti
pushl  0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
stos   %eax,%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ch,0x58000027(%eax)
pusha
sti
pushl  0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
stos   %eax,%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,%al
popa
sti
(bad)
mov    $0x1,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
cltd
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
sub    %al,(%eax)
add    %ch,(%eax)
arpl   %di,%bx
incl   0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1d00e46
jae    80a6776 <_IO_stdin_used+0x10472>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax),%eax
add    %al,(%eax)
cwtl
sub    %al,(%eax)
add    %bh,(%eax)
gs
sti
ljmp   *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
adc    %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bl,%ah
sub    %al,(%eax)
add    %ah,-0x5(%esi,%eiz,2)
ljmp   *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e46
adc    %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,(%eax)
sub    %eax,(%eax)
add    %dl,0x5bfffb67(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffca,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
js     80a688f <_IO_stdin_used+0x1058b>
add    %al,(%eax)
cwtl
push   $0x94fffb
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff86,0x2500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %dh,0x68fc0000(%ecx,%ebp,1)
sti
decl   0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x45,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %cl,(%edx,%ebp,1)
add    %al,(%eax)
hlt
imul   $0x162ff,%ebx,%edi
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x55,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
dec    %ebp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
sub    %fs:(%eax),%al
add    %cl,(%ebx,%ebp,2)
sti
(bad)
ljmp   $0xe41,$0x0
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffc9,0x2700e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bl,0x0(%eax)
add    %al,(%eax)
mov    $0xa800002a,%eax
imul   $0xffffffff,%ebx,%edi
mov    $0x0,%bl
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
push   %esp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ebp
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,(%ebx,%ebp,1)
add    %al,(%eax)
or     $0x6c,%al
sti
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
jge    80a6a2b <_IO_stdin_used+0x10727>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
dec    %edi
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
pop    %esp
sub    (%eax),%eax
add    %ah,0x1d5fffb(%esp,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x68,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %bl,0x6e440000(%ebx,%ebp,1)
sti
push   %esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2800e46
push   %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0xe0000000
sub    (%eax),%eax
add    %al,(%eax)
jo     80a6ace <_IO_stdin_used+0x107ca>
lcall  *0x2(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x79600e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
stc
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
dec    %esp
sub    $0x0,%al
add    %dh,(%edx,%esi,2)
sti
decl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0x430c0e0a(%edi),%bh
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%esi
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %al,0x730c0000(%esp,%ebp,1)
sti
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    %ecx,(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%esp
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bh,0x73a40000(%esp,%ebp,1)
sti
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
mov    %ecx,(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%esp
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dh,%ah
sub    $0x0,%al
add    %bh,(%esp,%esi,2)
sti
(bad)
cmp    $0x1,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x2c000000
sub    $0x75440000,%eax
sti
decl   0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x63500e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
movsl  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bl,0x2800002d(%eax)
jbe    80a6c86 <_IO_stdin_used+0x10982>
(bad)
in     (%dx),%al
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
lock sub $0x77c00000,%eax
sti
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
add    $0x2e,%al
add    %al,(%eax)
mov    $0xb4fffb77,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbcf7f2(%edx,%ecx,1),%al
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%ebx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
xor    $0x2e,%al
add    %al,(%eax)
dec    %esp
js     80a6d22 <_IO_stdin_used+0x10a1e>
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xc341080e
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %dl,0x0(%esi,%ebp,1)
add    %ch,-0x5(%eax,%edi,2)
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x4c,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,-0x57ffffd2(%eax)
js     80a6d76 <_IO_stdin_used+0x10a72>
decl   0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x55,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
enter  $0x2e,$0x0
clc
jns    80a6db6 <_IO_stdin_used+0x10ab2>
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
loopne 80a6dfc <_IO_stdin_used+0x10af8>
add    %al,(%eax)
add    %bh,-0x5(%edx)
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
add    %al,%cs:(%eax)
cld
jns    80a6de2 <_IO_stdin_used+0x10ade>
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
das
add    %al,(%eax)
clc
jns    80a6df6 <_IO_stdin_used+0x10af2>
incl   0x0
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sbb    $0x2f,%al
add    %al,(%eax)
hlt
jns    80a6e0a <_IO_stdin_used+0x10b06>
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebp),%esp
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
push   %esp
das
add    %al,(%eax)
sbb    $0x7a,%al
sti
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x4000002f(%eax)
jp     80a6e6e <_IO_stdin_used+0x10b6a>
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x7a3c0000(%edi,%ebp,1)
sti
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
test   $0x2f,%al
add    %al,(%eax)
dec    %eax
jp     80a6e96 <_IO_stdin_used+0x10b92>
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0x4(%esi,%ecx,1)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,%al
das
add    %al,(%eax)
pusha
jp     80a6eae <_IO_stdin_used+0x10baa>
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
das
add    %al,(%eax)
test   %bh,-0x5(%edx)
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %ch,(%eax,%esi,1)
add    %al,(%eax)
add    $0x7b,%al
sti
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x46,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
xorb   $0x0,(%eax)
add    %ah,(%eax)
jnp    80a6f6e <_IO_stdin_used+0x10c6a>
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4504(%ebx)
push   %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %bh,0x58000030(%eax)
jnp    80a6fa6 <_IO_stdin_used+0x10ca2>
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6d,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
or     $0x31,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
jnp    80a6ffa <_IO_stdin_used+0x10cf6>
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x52,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x31(%eax)
add    %al,(%eax)
sarb   -0x5(%ebx)
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
inc    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    %?,(%ecx)
add    %al,(%eax)
and    $0x7c,%al
sti
lcall  *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x30000031(%eax)
jl     80a708e <_IO_stdin_used+0x10d8a>
lcall  *0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x31,%ah
add    %al,(%eax)
cmp    $0x7c,%al
sti
(bad)
jl     80a70aa <_IO_stdin_used+0x10da6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%edx,%ecx,1),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%eax),%ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%ah
xor    %eax,(%eax)
add    %cl,0x8fffb(%esp,%edi,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
clc
xor    %eax,(%eax)
add    %cl,0x1afffb7c(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%edx,%esi,1)
add    %al,(%eax)
xchg   %eax,%esp
jl     80a70fa <_IO_stdin_used+0x10df6>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
and    %dh,(%edx)
add    %al,(%eax)
nop
jl     80a710e <_IO_stdin_used+0x10e0a>
(bad)
fiadd  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %cl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
mov    $0xc3410c0e,%edi
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bl,0x32(%eax)
add    %al,(%eax)
cmp    %bh,-0x5(%ebp)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%ebx),%ah
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bh,0x0(%edx,%esi,1)
add    %ah,0x7ffffb(%ebp,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%edi),%dh
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    0x32,%al
jle    80a718e <_IO_stdin_used+0x10e8a>
decl   0x0
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x32,%ah
add    %al,(%eax)
cld
jge    80a71a2 <_IO_stdin_used+0x10e9e>
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,%ah
xor    (%eax),%al
add    %cl,(%esi,%edi,2)
sti
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,%ah
xor    (%eax),%al
add    %bl,(%esi,%edi,2)
sti
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%esi)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
xor    (%eax),%eax
add    %al,0x7e(%eax)
sti
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%esi)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ebx,%esi,1)
add    %ah,-0x5(%esi,%edi,2)
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
imul   $0xc346080e,(%edx),%ecx
push   %cs
add    $0x45,%al
or     0xe(%edx),%edx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x33(%eax)
add    %al,(%eax)
mov    %bh,-0x5(%esi)
(bad)
jns    80a726e <_IO_stdin_used+0x10f6a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
adc    %bl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
xor    (%eax),%eax
add    %bl,%ah
jle    80a7292 <_IO_stdin_used+0x10f8e>
lcall  *0x0
inc    %ebx
push   %cs
and    %bl,0xe(%ecx)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    $0xe4000033,%esp
jle    80a72aa <_IO_stdin_used+0x10fa6>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
(bad)
xor    (%eax),%eax
add    %ah,%al
jle    80a72be <_IO_stdin_used+0x10fba>
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %cl,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx),%ebp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
or     %dh,(%eax,%eax,1)
add    %bh,%al
jle    80a72f6 <_IO_stdin_used+0x10ff2>
(bad)
add    %eax,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffea,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,0x34(%eax)
add    %al,(%eax)
clc
jg     80a7336 <_IO_stdin_used+0x11032>
(bad)
cld
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
inc    %edi
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    0xa0000034,%al
cmp    $0x2dff,%ebx
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %al,%al
xor    $0x0,%al
add    %dh,0x65fffb81(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff8,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
add    %dh,0x83e00000
sti
(bad)
jmp    80a73fb <_IO_stdin_used+0x110f7>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x30,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
inc    %eax
xor    $0x86900000,%eax
sti
call   *%ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8a,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
xorb   $0xfb,0x87300000
lcall  *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,0x30000035(%eax)
xchg   %edi,%ebx
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x78d40000(%ebp,%esi,1)
sti
incl   0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%al
xor    $0x87280000,%eax
sti
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,%ah
xor    $0x87240000,%eax
sti
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xa(%eax)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
clc
xor    $0x87680000,%eax
sti
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
adc    %dh,(%esi)
add    %al,(%eax)
addb   $0x0,0x1dfffb(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%esi,%esi,1)
add    %al,(%eax)
mov    %es,0x1dfffb(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cmp    %dh,(%esi)
add    %al,(%eax)
cwtl
xchg   %edi,%ebx
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %bl,0x0(%esi,%esi,1)
add    %dl,%ah
xchg   %edi,%ebx
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %al,%ss:(%eax)
or     $0x88,%al
sti
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x8000036(%eax)
mov    %bh,%bl
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,%ah
add    %al,%ss:(%eax)
add    $0x88,%al
sti
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
call   400a760f <_end+0x37feecbf>
mov    %bh,%bl
decl   0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4802(%ebx)
dec    %esp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
lret   $0xe0a
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
aaa
add    %al,(%eax)
pop    %eax
mov    %edi,%ebx
call   *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%edi,%esi,1)
add    %al,(%eax)
fs
mov    %edi,%ebx
call   *0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
aaa
add    %al,(%eax)
jo     80a75bb <_IO_stdin_used+0x112b7>
sti
incl   0x1(%edi)
add    %al,(%eax)
add    %dl,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
push   %eax
add    0xa(%edi),%ah
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
jo     80a7695 <_IO_stdin_used+0x11391>
add    %al,(%eax)
nop
mov    %bl,%bh
call   *0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0x41100e0a(%ebx),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
test   $0x37,%al
add    %al,(%eax)
clc
mov    %?,%ebx
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xa(%ebx),%ah
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x43,%al
or     0xa(%eax),%esp
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%esi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
loopne 80a7705 <_IO_stdin_used+0x11401>
add    %al,(%eax)
mov    $0x8d,%al
sti
jmp    *(%esi)
add    %eax,(%eax)
add    %al,(%eax)
dec    %ebp
push   %cs
or     %al,0x400e4302(%ebx)
jns    80a76f1 <_IO_stdin_used+0x113ed>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
push   %cs
inc    %eax
addl   $0x0,(%edx)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
or     %bh,(%eax)
add    %al,(%eax)
mov    $0x23fffb8e,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
and    %bh,(%eax)
add    %al,(%eax)
rorb   0xd5fffb(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x48,(%ebx)
push   %cs
xor    %cl,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jb     80a7741 <_IO_stdin_used+0x1143d>
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
pop    %esp
cmp    %al,(%eax)
add    %dh,-0x5(%edi,%ecx,4)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x38(%eax)
add    %al,(%eax)
orb    $0x0,0x5fffb(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,-0x70840000(%eax,%edi,1)
sti
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
cwtl
cmp    %al,(%eax)
add    %bh,-0x71(%eax)
sti
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
push   %ebp
push   %cs
and    %dl,0xe(%ebp)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x38,%al
add    %al,(%eax)
mov    0x34fffb8f,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ch,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
fdivrl (%eax)
add    %al,(%eax)
mov    $0x8f,%ah
sti
ljmp   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
jnp    80a77ef <_IO_stdin_used+0x114eb>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
or     $0x39,%al
add    %al,(%eax)
xor    $0x90,%al
sti
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ch,(%ecx,%edi,1)
add    %al,(%eax)
push   %esp
nop
sti
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4602(%ebx)
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
cmp    %eax,(%eax)
add    %bl,-0x70(%eax)
sti
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
pusha
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bh,0x39(%eax)
add    %al,(%eax)
push   $0x4ffffb90
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
js     80a7885 <_IO_stdin_used+0x11581>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
pushf
cmp    %eax,(%eax)
add    %dl,0x33fffb(%eax,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,%al
cmp    %eax,(%eax)
add    %ch,0x2efffb90(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,%ah
cmp    %eax,(%eax)
add    %ch,0x87fffb(%eax,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xa(%edx),%dh
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x49,%al
or     0x0(%eax),%edx
add    %al,(%eax)
sbb    %bh,(%edx)
add    %al,(%eax)
sbb    %dl,0xfdfffb(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc6,0x2300e45
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%ebx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%edx,%edi,1)
add    %al,%ah
xchg   %eax,%ecx
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %al,-0x3fffffc6(%eax)
xchg   %eax,%ecx
sti
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0xe(%edx,%ecx,1),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
cmp    (%eax),%al
add    %dh,%ah
xchg   %eax,%ecx
sti
jmp    *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0x200e4302(%ebx)
add    0x41080e0a(%eax),%cl
ret
push   %cs
add    $0x43,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,%al
cmp    (%eax),%al
add    %al,0x1afffb92(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,%ah
cmp    (%eax),%al
add    %cl,0x4cfffb(%edx,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xe(%edx),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %bl,(%eax)
cmp    (%eax),%eax
add    %ch,-0x1700046e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa6,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ecx),%ebp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %ch,0x0(%ebx,%edi,1)
add    %al,-0x5(%ebx,%edx,4)
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%ecx),%dh
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x3b,%ah
add    %al,(%eax)
mov    %ss,0x213fffb(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
hlt
cmp    (%eax),%eax
add    %ch,-0x5(%ebp,%edx,4)
decl   0x1(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x62400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,(%esp,%edi,1)
add    %al,(%eax)
mov    $0x56fffb96,%esp
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8b,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %?,(%eax,%eax,1)
add    %al,%ah
xchg   %eax,%edi
sti
dec    %esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %cl,%ah
cmp    $0x0,%al
add    %dl,-0x5(%ecx,%ebx,4)
(bad)
jmp    80a7bca <_IO_stdin_used+0x118c6>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x68,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
out    %eax,$0xa
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
cmp    $0x3d,%al
add    %al,(%eax)
aam    $0x9e
sti
ljmp   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    %ch,%dl
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,0x3d(%eax)
add    %al,(%eax)
loopne 80a7bf1 <_IO_stdin_used+0x118ed>
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebp,%edi,1)
add    %bl,%ah
lahf
sti
lcall  *0x0
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %cl,-0x17ffffc3(%eax)
lahf
sti
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xa(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x60040000(%ebp,%edi,1)
sti
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x7ffffc3(%eax)
lahf
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
int3
cmp    $0x9ff40000,%eax
sti
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%ecx)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
in     $0x3d,%al
add    %al,(%eax)
cld
lahf
sti
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %dl,0xe(%ebp)
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %bh,%ah
cmp    $0xa0040000,%eax
sti
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%esp
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,%ds:(%eax)
dec    %esp
mov    0x98fffb,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
pusha
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,0x0(%esi,%edi,1)
add    %dh,0x59fffb(%eax,%eiz,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4504(%ebx)
jp     80a7d93 <_IO_stdin_used+0x11a8f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %al,%al
add    %al,%ds:(%eax)
shlb   0x90fffb(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
xchg   %cl,(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
in     (%dx),%al
add    %al,%ds:(%eax)
xor    $0xa1,%al
sti
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
jne    80a7dfd <_IO_stdin_used+0x11af9>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,(%edi,%edi,1)
add    %al,(%eax)
push   %esp
mov    0x25fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
push   %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
cmp    %bh,(%edi)
add    %al,(%eax)
pop    %eax
mov    0x45fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
data16
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bh,0x0(%edi,%edi,1)
add    %ah,-0x5(%ecx,%eiz,4)
dec    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffba,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %bh,-0x7ffffc1(%eax)
mov    0x48afffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
or     %eax,(%edx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
cld
aas
add    %al,(%eax)
inc    %esp
cmpsb  %es:(%edi),%ds:(%esi)
sti
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x40,%al
add    %al,(%eax)
pop    %esp
cmpsb  %es:(%edi),%ds:(%esi)
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
inc    %eax
add    %al,(%eax)
pop    %eax
cmpsb  %es:(%edi),%ds:(%esi)
sti
lcall  *0x0
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,2)
add    %al,(%eax)
cmpsb  %es:(%edi),%fs:(%esi)
sti
call   *0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,0x40(%eax)
add    %al,(%eax)
jo     80a7ee8 <_IO_stdin_used+0x11be4>
sti
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
jl     80a7faa <_IO_stdin_used+0x11ca6>
add    %al,(%eax)
test   %ah,0x3afffb(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
test   $0x40,%al
add    %al,(%eax)
cwtl
cmpsb  %es:(%edi),%ds:(%esi)
sti
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
aam    $0x40
add    %al,(%eax)
lods   %ds:(%esi),%al
cmpsb  %es:(%edi),%ds:(%esi)
sti
(bad)
cmp    (%eax),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%ecx)
add    %al,%al
cmpsb  %es:(%edi),%ds:(%esi)
sti
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%eax,2)
add    %al,(%eax)
int3
cmpsb  %es:(%edi),%ds:(%esi)
sti
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sub    %al,0x0(%ecx)
add    %cl,%al
cmpsb  %es:(%edi),%ds:(%esi)
sti
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ah,0x41(%eax)
add    %al,(%eax)
lock cmpsb %es:(%edi),%ds:(%esi)
sti
call   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
mov    $0xb8000041,%eax
cmpsl  %es:(%edi),%ds:(%esi)
sti
lcall  *0xc(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2800e46
mov    (%edx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
xor    %eax,0x43140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,(%edx,%eax,2)
add    %al,(%eax)
mov    $0x87fffbb3,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,0x0(%edx,%eax,2)
add    %al,(%esp,%esi,4)
sti
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
jo     80a81a0 <_IO_stdin_used+0x11e9c>
add    %al,(%eax)
add    %dh,0x47ff(%ebx,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jb     80a8187 <_IO_stdin_used+0x11e83>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,-0x4bf40000(%edx,%eax,2)
sti
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%ebx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%ebx
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %dh,%al
inc    %edx
add    %al,(%eax)
jo     80a8196 <_IO_stdin_used+0x11e92>
sti
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
cmp    %al,0x0(%ebx)
add    %bh,0x5cfffbb4(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb2,0x3700e43
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
js     80a82a9 <_IO_stdin_used+0x11fa5>
add    %al,(%eax)
fdivs  0x7afffb(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x18000043,%eax
mov    $0x156fffb,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc6,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
clc
inc    %ebx
add    %al,(%eax)
cmp    %bh,0x2ffffb(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x1c,%al
add    %al,(%eax)
add    %bl,(%eax)
inc    %esp
add    %al,(%eax)
dec    %eax
mov    $0x19fffb,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,(%eax)
inc    %esp
add    %al,(%eax)
dec    %eax
mov    $0x5efffb,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
dec    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
fs
inc    %esp
add    %al,(%eax)
jl     80a830f <_IO_stdin_used+0x1200b>
sti
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %ah,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%edx
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
pushf
inc    %esp
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x4afffb,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    0x8(%esi,%ecx,1),%al
inc    %ecx
ret
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %al,%al
inc    %esp
add    %al,(%eax)
sarb   $0x0,0x148fffb(%ecx)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe4,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%esi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %bl,(%eax)
inc    %ebp
add    %al,(%eax)
mov    $0xaefffbba,%eax
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1900e43
fisttp (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
lcall  $0xc343,$0x140e0a01
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,-0x421c0000(%ebp,%eax,2)
sti
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %al,0x0(%eax,%eax,1)
add    %dh,0x10000045(%eax)
mov    $0x17ffffb,%esi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0x460c0e0a(%edi),%bh
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
xchg   %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edi),%edx
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
clc
inc    %ebp
add    %al,(%eax)
mov    %dl,-0x6(%esi)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%esi,%eax,2)
add    %al,(%eax)
xor    $0xbf,%al
sti
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xe(%edx,%ecx,1),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,(%eax)
inc    %esi
add    %al,(%eax)
test   %dl,-0x6(%esi)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dl,(%eax)
add    %al,(%eax)
add    %al,0x0(%esi,%eax,2)
add    %ch,0x38fffa56(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x46(%eax)
add    %al,(%eax)
int3
push   %esi
cli
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %ch,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
inc    %esi
add    %al,(%eax)
xor    $0x58,%al
cli
lcall  *0x9(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0x41c30a59,%eax
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,-0x405c0000(%esi,%eax,2)
sti
pushl  0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
enter  $0x46,$0x0
mov    $0x43fffbbf,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ch,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
hlt
inc    %esi
add    %al,(%eax)
fdivrl 0x24fffb(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xe(%edx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
and    %al,0x0(%edi)
add    %ah,%al
mov    $0x7ffffb,%edi
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%ecx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
inc    %edi
add    %al,(%eax)
sub    %al,%al
sti
incl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
nop
inc    %edi
add    %al,(%eax)
inc    %eax
sar    $0xff,%bl
push   %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
imul   $0xe,(%edx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edi),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x74000047,%esp
sar    $0xff,%bl
jno    80a86b2 <_IO_stdin_used+0x123ae>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
jo     80a86d3 <_IO_stdin_used+0x123cf>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
hlt
inc    %edi
add    %al,(%eax)
mov    $0x2cfffbc0,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
and    %cl,0x0(%eax)
add    %al,%al
sar    $0xff,%bl
push   $0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%esi),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %dl,0x0(%eax,%ecx,2)
add    %bh,%ah
sar    $0xff,%bl
mov    $0x0,%cl
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7a500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,0x68000048(%eax)
sar    $0xff,%ebx
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
aam    $0x48
add    %al,(%eax)
jl     80a8787 <_IO_stdin_used+0x12483>
sti
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
call   800a8821 <_end+0x77fefed1>
sar    $0xff,%ebx
xchg   %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jp     80a87ff <_IO_stdin_used+0x124fb>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,(%ecx,%ecx,2)
add    %al,(%eax)
(bad)
and    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,0x0(%ecx,%ecx,2)
add    %dl,%ah
sar    $0xff,%ebx
pop    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,-0x7ffffb7(%eax)
sar    $0xff,%ebx
aaa
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x49,%ah
add    %al,(%eax)
or     $0xc2,%al
sti
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
imul   $0xec34108,(%esi),%ecx
add    $0x1c,%al
add    %al,(%eax)
add    %dl,%ah
dec    %ecx
add    %al,(%eax)
sbb    $0xc2,%al
sti
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jno    80a88e5 <_IO_stdin_used+0x125e1>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,%ah
dec    %ecx
add    %al,(%eax)
cmp    $0xc2,%al
sti
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    %cl,0x0(%edx)
add    %dl,-0x3e(%eax)
sti
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
imul   $0xec34108,(%esi),%ecx
add    $0x34,%al
add    %al,(%eax)
add    %al,0x4a(%eax)
add    %al,(%eax)
pusha
ret    $0xfffb
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,0x4a(%eax)
add    %al,(%eax)
fadd   %st(2),%st
sti
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%edx),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
dec    %edx
add    %al,(%eax)
and    $0xc3,%al
sti
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
jg     80a89c7 <_IO_stdin_used+0x126c3>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
loopne 80a8a18 <_IO_stdin_used+0x12714>
add    %al,(%eax)
inc    %eax
ret
sti
pushl  0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x57500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    %cl,0x0(%ebx)
add    %al,0x37fffbc4(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jno    80a8a31 <_IO_stdin_used+0x1272d>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %al,0x4b(%eax)
add    %al,(%eax)
mov    0x3afffbc4,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
je     80a8aad <_IO_stdin_used+0x127a9>
add    %al,(%eax)
lods   %ds:(%esi),%al
(bad)
sti
pushl  0x3(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5,0x3600e4e
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %dh,-0x37d40000(%ebx,%ecx,2)
sti
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xe(%edx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
loopne 80a8b19 <_IO_stdin_used+0x12815>
add    %al,(%eax)
xor    %cl,%al
sti
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,(%eax)
dec    %esp
add    %al,(%eax)
inc    %eax
enter  $0xfffb,$0x33
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,(%eax)
dec    %esp
add    %al,(%eax)
pusha
enter  $0xfffb,$0x90
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%esi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
pop    %esp
dec    %esp
add    %al,(%eax)
mov    $0xc8,%ah
sti
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80a8b73 <_IO_stdin_used+0x1286f>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %ah,0x1000004c(%eax)
leave
sti
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80a8bb7 <_IO_stdin_used+0x128b3>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %ah,%ah
dec    %esp
add    %al,(%eax)
pop    %esp
leave
sti
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80a8bfb <_IO_stdin_used+0x128f7>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ch,(%eax)
dec    %ebp
add    %al,(%eax)
test   $0xc9,%al
sti
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x4d(%eax)
add    %al,(%eax)
adc    %cl,%dl
sti
(bad)
mov    $0x0,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x7800004d,%eax
lret   $0xfffb
xchg   %eax,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dh,%al
dec    %ebp
add    %al,(%eax)
loopne 80a8cac <_IO_stdin_used+0x129a8>
sti
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jnp    80a8d07 <_IO_stdin_used+0x12a03>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
sub    %cl,0x0(%esi)
add    %bh,(%eax)
lret
sti
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pusha
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ah,0x0(%esi,%ecx,2)
add    %bl,%ah
lret
sti
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jns    80a8d7b <_IO_stdin_used+0x12a77>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %ch,0x2800004e(%eax)
int3
sti
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebp),%ah
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dh,%al
dec    %esi
add    %al,(%eax)
mov    0xb7fffbcc,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebp),%ah
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %bh,(%eax)
dec    %edi
add    %al,(%eax)
sbb    %cl,%ch
sti
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    %cs,0x0(%edi)
add    %ah,-0x5(%ebp,%ecx,8)
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %ah,%al
dec    %edi
add    %al,(%eax)
mov    $0xcd,%al
sti
pushl  0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
sub    %dl,0x0(%eax)
add    %ch,(%eax)
into
sti
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x50(%eax)
add    %al,(%eax)
cwtl
into
sti
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x20000050(%eax)
iret
sti
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %cl,(%eax)
push   %ecx
add    %al,(%eax)
test   $0xcf,%al
sti
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x59,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pusha
push   %ecx
add    %al,(%eax)
pusha
sar    %bl
dec    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    -0x3cbef3f2(%edx,%ecx,1),%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,-0x7ffffaf(%eax)
sar    %bl
push   %edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffde,0x3400e4e
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
fcoms  0x0(%ecx)
add    %bh,0x34fffbd2(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
adc    %dl,0x0(%edx)
add    %al,%al
sar    %cl,%bl
inc    %ecx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    -0x3cbceff2(%esi),%ah
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
inc    %esp
push   %edx
add    %al,(%eax)
pop    %esp
sar    %cl,%ebx
call   *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcb,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %al,0x52(%eax)
aam    $0xfb
push   %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffc4,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
rclb   $0x0,0x0(%edx)
mov    $0xd4,%al
sti
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebp
push   %cs
and    %ah,0xa(%eax)
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
clc
push   %edx
add    %al,(%eax)
mov    $0x62fffbd4,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %edx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
and    $0x53,%al
add    %al,(%eax)
cld
aam    $0xfb
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%esi),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x0(%ebx,%edx,2)
add    %dl,-0x5(%ebp,%edx,8)
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
je     80a9273 <_IO_stdin_used+0x12f6f>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    %dl,0x0(%ebx)
add    %bh,-0x1200042b(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%ah
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %al,%al
push   %ebx
add    %al,(%eax)
jo     80a9288 <_IO_stdin_used+0x12f84>
sti
(bad)
faddl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pusha
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
imul   $0xc,(%esi),%ecx
inc    %ebx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,%ah
push   %ebx
add    %al,(%eax)
adc    $0xd7,%al
sti
pushl  (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x48,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,0x0(%esp,%edx,2)
add    %bh,%ah
xlat   %ds:(%ebx)
sti
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%ecx
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,-0x279c0000(%esp,%edx,2)
sti
(bad)
fldl   (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
push   $0x41140e0a
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
hlt
push   %esp
add    %al,(%eax)
in     (%dx),%al
fsincos
inc    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
pop    %ebp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
dec    %eax
push   %ebp
add    %al,(%eax)
push   $0xefffbda
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x1900e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0x88000000
push   %ebp
add    %al,(%eax)
cmp    %bl,%ch
sti
push   %ebx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa1,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
hlt
push   %ebp
add    %al,(%eax)
int3
(bad)
pushl  0x2
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdb,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
xor    $0x56,%al
add    %al,(%eax)
int3
loope  80a9522 <_IO_stdin_used+0x1321e>
(bad)
jl     80a952a <_IO_stdin_used+0x13226>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ebp)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %esi
add    %al,(%eax)
adc    $0xe2,%al
sti
decl   0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
popa
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edx,%ecx,1),%esi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ebp)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
test   $0x56,%al
add    %al,(%eax)
call   260a917f <_end+0x1dff082f>
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
popa
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ebp)
push   %cs
add    $0x47,%al
or     (%eax),%esi
add    %al,(%eax)
add    %ah,%ah
push   %esi
add    %al,(%eax)
int3
jecxz  80a95d2 <_IO_stdin_used+0x132ce>
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x10(%esi,%ecx,1),%ah
inc    %ebx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
sbb    %dl,0x0(%edi)
add    %bl,(%eax)
in     $0xfb,%al
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ebp
or     (%esi),%cl
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x58,%al
add    %al,(%eax)
add    %dl,0x57(%eax)
add    %al,(%eax)
push   %eax
in     $0xfb,%al
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%esi),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,-0x1b2c0000(%edi,%edx,2)
sti
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ch,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
fcoms  0x0(%edi)
add    %bh,%al
in     $0xfb,%al
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
add    $0x58,%al
add    %al,(%eax)
cld
in     $0xfb,%al
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %bh,(%eax,%ebx,2)
add    %al,(%eax)
and    $0xe5,%al
sti
call   *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pusha
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%esp
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x4a,%al
or     0xa(%ecx),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %cl,-0x47ffffa8(%eax)
in     $0xfb,%eax
incl   (%edx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
add    %ecx,%es:(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
add    (%ebx),%eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ah,%ah
pop    %eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
ljmp   $0x0,$0xa1fffb
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4a,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %ch,(%ecx,%ebx,2)
add    %al,(%eax)
aam    $0xea
sti
lcall  *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
je     80a98bb <_IO_stdin_used+0x135b7>
add    %al,(%eax)
sub    $0xeb,%al
sti
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dh,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
mov    0x50000059,%al
jmp    80a988e <_IO_stdin_used+0x1358a>
(bad)
in     (%dx),%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd6,0x2500e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %bl,%ah
pop    %ecx
add    %al,(%eax)
add    $0xec,%al
sti
(bad)
jnp    80a98d2 <_IO_stdin_used+0x135ce>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x10(%esi,%ecx,1),%ch
inc    %esi
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   $0x10000000
pop    %edx
add    %al,(%eax)
push   %eax
in     (%dx),%al
sti
pushl  (%ebx)
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffee,0x2700e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx,%ecx,1),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
(bad)  (%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
jl     80a99c4 <_IO_stdin_used+0x136c0>
add    %al,(%eax)
and    $0xf2,%al
sti
ljmp   *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7a,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
mov    $0x1400005a,%esp
repz sti
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x4c,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
pop    %edx
add    %al,(%eax)
test   %dh,%bl
sti
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x4c,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,(%ebx,%ebx,2)
add    %al,(%eax)
hlt
repz sti
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
je     80a9abd <_IO_stdin_used+0x137b9>
add    %al,(%eax)
jl     80a9a5a <_IO_stdin_used+0x13756>
sti
dec    %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    -0x3cbef3f2(%edx,%ecx,1),%al
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ch,-0xaec0000(%ebx,%ebx,2)
sti
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ah,%ah
pop    %ebx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
cmc
sti
call   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %bl,(%esp,%ebx,2)
add    %al,(%eax)
aam    $0xf5
sti
lcall  *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff89,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   $0x88000000
pop    %esp
add    %al,(%eax)
mov    %dh,%dh
sti
decl   0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbc,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x49,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %dh,%ah
pop    %esp
add    %al,(%eax)
insb   (%dx),%es:(%edi)
idiv   %ebx
(bad)
std
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%eax
add    %bh,-0x7dc0000(,%ebx,2)
sti
lcall  *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%esi),%dh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%eax
add    %al,-0x6c40000(%ebp,%ebx,2)
sti
incl   0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%eax
add    %cl,%ah
pop    %ebp
add    %al,(%eax)
add    $0xfa,%al
sti
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%ecx),%bh
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax),%ecx
add    %al,(%eax)
adc    $0x5e,%al
add    %al,(%eax)
sub    $0xfb,%al
sti
lcall  *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%ebx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
pusha
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,0x5e(%eax)
add    %al,(%eax)
add    %bh,%ah
sti
pushl  (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,-0x17ffffa2(%eax)
cld
sti
decl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%ah
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
add    %bl,0x0(%edi)
add    %dh,%al
std
sti
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,(%eax)
pop    %edi
add    %al,(%eax)
adc    %bh,%dh
sti
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %cl,0x0(%edi,%ebx,2)
add    %dl,-0x5(%esi,%edi,8)
lcall  *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
xchg   %eax,%esp
pop    %edi
add    %al,(%eax)
sub    $0xff,%al
sti
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%ah
pop    %edi
add    %al,(%eax)
mov    $0xff,%ah
sti
lcall  *0x0
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
loopne 80a9f2d <_IO_stdin_used+0x13c29>
add    %al,(%eax)
sar    $0xfb,%bh
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %bl,(%eax)
pusha
add    %al,(%eax)
sbb    %al,(%eax)
cld
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80a9f2f <_IO_stdin_used+0x13c2b>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,0x0(%eax,%eiz,2)
add    %ah,-0x4(%eax,%eax,1)
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dl,0xbc0000(%eax,%eiz,2)
cld
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80a9fab <_IO_stdin_used+0x13ca7>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,%al
pusha
add    %al,(%eax)
or     %al,(%ecx)
cld
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dl,(%eax)
popa
add    %al,(%eax)
pusha
add    %edi,%esp
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80aa027 <_IO_stdin_used+0x13d23>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dl,0x0(%ecx,%eiz,2)
add    %ch,0x8cfffc(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %cl,0x2040000(%ecx,%eiz,2)
cld
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80aa0a3 <_IO_stdin_used+0x13d9f>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dl,%al
popa
add    %al,(%eax)
push   %eax
add    %ah,%bh
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80aa0e7 <_IO_stdin_used+0x13de3>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dl,(%edx,%eiz,2)
add    %al,(%eax)
pushf
add    %ah,%bh
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jge    80aa12b <_IO_stdin_used+0x13e27>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,0x62(%eax)
add    %al,(%eax)
out    %eax,$0x2
cld
incl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
bound  %eax,(%eax)
add    %ah,%ah
add    %ah,%bh
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
jl     80aa17d <_IO_stdin_used+0x13e79>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,0x3140000(%edx,%eiz,2)
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x10000062(%eax)
add    %esp,%edi
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
int3
bound  %eax,(%eax)
add    %ah,(%ebx,%eax,1)
cld
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bl,0xa(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bh,%al
bound  %eax,(%eax)
add    %cl,0x3(%eax)
cld
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,(%ebx,%eiz,2)
add    %al,(%eax)
push   %esp
add    %esp,%edi
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
arpl   %ax,(%eax)
add    %ah,0x3(%eax)
cld
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jns    80aa23b <_IO_stdin_used+0x13f37>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,0x0(%ebx,%eiz,2)
add    %bh,-0x4(%ebx,%eax,1)
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,-0x6fffff9d(%eax)
add    %esp,%edi
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
arpl   %ax,(%eax)
add    %bl,%ah
add    %esp,%edi
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x27ffff9d(%eax)
add    %esp,%edi
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,%ah
arpl   %ax,(%eax)
add    %dl,%ah
add    %esp,%edi
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
arpl   %ax,(%eax)
add    %dl,%al
add    %esp,%edi
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%ah
arpl   %ax,(%eax)
add    %cl,%ah
add    %esp,%edi
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
or     %ah,0x0(%eax,%eax,1)
enter  $0xfc03,$0xff
lahf
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,%fs:(%eax)
xor    %al,(%esp,%edi,8)
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0(%esp,%eiz,2)
add    %cl,-0x4(%esp,%eax,1)
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
push   $0x58000064
add    $0xfc,%al
(bad)
faddl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jl     80aa375 <_IO_stdin_used+0x14071>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%ebp
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x41,%al
or     0xa(%eax),%esp
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x44,%al
or     0xa(%ebp),%ebp
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
add    %al,%fs:(%eax)
hlt
add    $0xfc,%al
decl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jo     80aa3c3 <_IO_stdin_used+0x140bf>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
in     $0x64,%al
add    %al,(%eax)
dec    %esp
add    $0x53fffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,%gs:(%eax)
addb   $0x0,0x4cfffc
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ah,0xa(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bh,0x5a40000(,%eiz,2)
cld
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%esp
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %bh,0x65(%eax)
add    %al,(%eax)
enter  $0xfc05,$0xff
roll   %cl,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%dl
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %al,%al
add    %al,%gs:(%eax)
pusha
push   %es
cld
lcall  *0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x28,0x3300e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x47,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
data16
add    %al,(%eax)
push   $0x68fffc08
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x44,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
cmp    $0x66,%al
add    %al,(%eax)
mov    $0x8,%ah
cld
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xe(%edx,%ecx,1)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
push   $0x8000066
or     %edi,%esp
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0xa(%edx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,-0x6fffff9a(%eax)
or     %edi,%esp
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
pusha
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %al,%ah
data16
add    %al,(%eax)
fmull  (%ecx)
cld
pushl  0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jle    80aa5db <_IO_stdin_used+0x142d7>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,(%edi,%eiz,2)
add    %al,(%eax)
push   %esp
or     %ah,%bh
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
pop    %eax
add    %al,(%eax)
add    %ah,0x0(%edi,%eiz,2)
add    %ch,0x161fffc(%edx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
dec    %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
shlb   $0x0,0x0(%edi)
rorb   $0xfc,(%ebx)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec66d04(%esi)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ch,%ah
add    %al,(%bx,%si)
aam    $0xb
cld
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec67304(%esi)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bl,(%eax)
push   $0xbe80000
cld
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec67d04(%esi)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,0x0(%eax,%ebp,2)
add    %cl,(%esp,%ecx,1)
cld
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,0x68(%eax)
add    %al,(%eax)
or     %cl,(%esp,%edi,8)
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec66c02(%esi)
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%ebp,2)
add    %ch,(%esp,%ecx,1)
cld
(bad)
jge    80aa76a <_IO_stdin_used+0x14466>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x71,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %dh,0x70000068(%eax)
or     $0xfc,%al
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ch,%ah
push   $0xcd40000
cld
push   %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
inc    %esp
imul   $0xfc0d7c00,(%eax),%eax
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x71,0x2400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %al,-0x2fffff97(%eax)
or     $0x68fffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
push   %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx),%esi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %al,%ah
imul   $0xfc0dfc00,(%eax),%eax
call   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebp),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cld
imul   $0xfc0e6400,(%eax),%eax
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x39f583fc(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%esp
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%edx,%ebp,2)
add    %al,(%eax)
les    (%esi),%ecx
cld
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x6a(%eax)
add    %al,(%eax)
lock push %cs
cld
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
fs
push   $0x0
add    %bl,(%edi,%ecx,1)
cld
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%ebp)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
pushf
push   $0x0
add    %dh,(%edi,%ecx,1)
cld
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,0xf440000(%edx,%ebp,2)
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
push   $0x0
add    %al,0xf(%eax)
cld
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,%ah
push   $0x0
add    %cl,-0x4(%edi,%ecx,1)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x0,(%eax),%eax
jo     80aaa11 <_IO_stdin_used+0x1470d>
cld
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
and    $0x6b,%al
add    %al,(%eax)
mov    %cs,(%edi)
cld
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
imul   $0x0,%fs:(%eax),%eax
fmull  (%edi)
cld
decl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edx),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x10b40000(%ebx,%ebp,2)
cld
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xc(%esi,%ecx,1)
inc    %ebx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0xc8000000
imul   $0x0,(%eax),%eax
fcoms  (%eax)
cld
jmp    *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
dec    %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
xor    $0x6c,%al
add    %al,(%eax)
pushf
adc    %edi,%esp
pushl  0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%esi)
outsl  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,0x0(%esp,%ebp,2)
add    %bh,0x35fffc(%ecx,%edx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%esi)
outsl  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %dh,0x0(%esp,%ebp,2)
add    %bl,%ah
adc    %edi,%esp
lcall  *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8f,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,%ah
insb   (%dx),%es:(%edi)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    %ah,%bh
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xe(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
lock insb (%dx),%es:(%edi)
add    %al,(%eax)
loopne 80aabf4 <_IO_stdin_used+0x148f0>
cld
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x13140000(,%ebp,2)
cld
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dh,(%eax)
insl   (%dx),%es:(%edi)
add    %al,(%eax)
inc    %eax
adc    %esp,%edi
incl   0x5(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x4f,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
and    (%ecx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x6000006d(%eax)
sbb    %bh,%ah
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%edx),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
les    0x0(%ebp),%ebp
add    %cl,0x1ffffc(%eax,%ebx,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fsubrs 0x0(%ebp)
add    %bl,0x13fffc18(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,%ah
insl   (%dx),%es:(%edi)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    %bh,%ah
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
enter  $0xfc18,$0xff
push   $0x0
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xe(%esi),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
dec    %esp
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    $0x19,%al
cld
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xe(%edi),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
subb   $0x0,0x0(%esi)
inc    %eax
sbb    %edi,%esp
jmp    *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xf800006e,%eax
sbb    %edi,%esp
call   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %eax
or     (%esi),%cl
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edi),%esi
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dh,%al
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
pusha
sbb    %ah,%bh
incl   0x4(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
test   $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,(%edi,%ebp,2)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
push   %ds
cld
decl   0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xfffffffc,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %cl,0x1f640000(%edi,%ebp,2)
cld
jmp    *0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x1800e43
aaa
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x14(%esi,%ecx,1),%ecx
inc    %esi
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,%al
outsl  %ds:(%esi),(%dx)
add    %al,(%eax)
andb   $0xfc,(%eax)
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x46,0x2500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x6c,%al
add    %al,(%eax)
add    %bl,(%eax,%esi,2)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %bh,%ah
jmp    *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e43
inc    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
pop    %ebp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
mov    %?,0x0(%eax)
add    %ah,-0x4(%ecx,%eiz,1)
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%esi),%ah
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
(bad)
jo     80aafaf <_IO_stdin_used+0x14cab>
add    %ah,0x33fffc21(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ch,0xe(%edi)
add    $0x0,%al
pop    %eax
add    %al,(%eax)
add    %bl,%al
jo     80aafc7 <_IO_stdin_used+0x14cc3>
add    %cl,%al
and    %edi,%esp
ljmp   *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa690204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %ebp
or     %dh,%al
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%esi
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,(%ecx,%esi,2)
add    %al,(%eax)
fsubl  (%edx)
cld
incl   (%edx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x70500e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
je     80ab0d3 <_IO_stdin_used+0x14dcf>
add    %al,(%eax)
lods   %ds:(%esi),%al
and    $0x90fffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x39f59dfc(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%esi
(bad)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,0x25fc0000(%ecx,%esi,2)
cld
ljmp   *0x6(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5e700e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%ebx),%eax
ret
add    (%edx),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
or     $0x72,%al
add    %al,(%eax)
push   %esp
sub    $0xfc,%al
lcall  *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7a,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x72(%eax)
add    %al,(%eax)
mov    0x17fffc2c,%al
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
je     80ab1d4 <_IO_stdin_used+0x14ed0>
add    %al,(%eax)
lods   %ds:(%esi),%al
cs
cld
(bad)
mov    $0x0,%ebp
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa460204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%esi
(bad)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0x72,%ah
add    %al,(%eax)
sub    $0x2f,%al
cld
call   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa630204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     -0x3a(%eax),%ebx
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,%al
jb     80ab1df <_IO_stdin_used+0x14edb>
add    %al,0x30fffc2f(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dl,(%eax)
jae    80ab1ff <_IO_stdin_used+0x14efb>
add    %dl,0x3cfffc2f(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x39f58ffe(%esi)
push   %cs
add    $0x47,%al
or     -0x3a(%ebx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xor    $0x73,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
das
cld
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x39f58ffe(%esi)
push   %cs
add    $0x47,%al
or     -0x3a(%ebx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
pop    %eax
jae    80ab247 <_IO_stdin_used+0x14f43>
add    %cl,%al
das
cld
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jnp    80ab273 <_IO_stdin_used+0x14f6f>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x2fe40000(%ebx,%esi,2)
cld
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x8000073,%eax
xor    %bh,%ah
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
in     $0x73,%al
add    %al,(%eax)
sub    $0x30,%al
cld
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
adc    %dh,0x0(%eax,%eax,1)
push   %eax
xor    %bh,%ah
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
cmp    $0x74,%al
add    %al,(%eax)
je     80ab35e <_IO_stdin_used+0x1505a>
cld
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
push   $0x98000074
xor    %bh,%ah
decl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
je     80ab383 <_IO_stdin_used+0x1507f>
add    %bh,0x48fffc(%eax,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
(bad)
je     80ab3af <_IO_stdin_used+0x150ab>
add    %ah,%al
xor    %bh,%ah
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%eax),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %dh,%ah
je     80ab3e3 <_IO_stdin_used+0x150df>
add    %cl,(%ecx,%esi,1)
cld
decl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    %dh,%dl
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
nop
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x75(%eax)
add    %al,(%eax)
push   %eax
xor    %ah,%bh
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jl     80ab457 <_IO_stdin_used+0x15153>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%esi),%eax
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %al,0x326c0000(%ebp,%esi,2)
cld
incl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2500e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %al,%al
jne    80ab4af <_IO_stdin_used+0x151ab>
add    %al,%al
xor    %ah,%bh
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jne    80ab4cd <_IO_stdin_used+0x151c9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,%ah
jne    80ab4db <_IO_stdin_used+0x151d7>
add    %dh,%ah
xor    %ah,%bh
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff81,0x2400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %ch,(%eax)
jbe    80ab517 <_IO_stdin_used+0x15213>
add    %bl,0x33(%eax)
cld
incl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%edx),%ch
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
pop    %esp
jbe    80ab54b <_IO_stdin_used+0x15247>
add    %dh,0x65fffc(%ebx,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x58,%al
add    %al,(%eax)
add    %bl,-0x17ffff8a(%eax)
xor    %esp,%edi
(bad)
std
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jp     80ab5af <_IO_stdin_used+0x152ab>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
fisttpll (%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,0x0(%eax)
add    %al,(%eax)
hlt
jbe    80ab5e3 <_IO_stdin_used+0x152df>
add    %cl,0xe6fffc(%ebp,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
insb   (%dx),%es:(%edi)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%ebx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%edx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %bl,0x77(%eax)
add    %al,(%eax)
sbb    %dh,(%esi)
cld
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bl,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,0x20000077(%eax)
ss
cld
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb7,0x2500e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
clc
ja     80ab6e7 <_IO_stdin_used+0x153e3>
add    %ch,%al
ss
cld
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4404(%esi)
addl   $0x5e,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,(%eax,%edi,2)
add    %al,(%eax)
sbb    $0x37,%al
cld
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x78(%eax)
add    %al,(%eax)
sub    %dh,(%edi)
cld
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
pop    %esp
js     80ab74b <_IO_stdin_used+0x15447>
add    %dh,(%edi,%esi,1)
cld
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    %?,0x0(%eax)
add    %ah,0x71fffc(%edi,%esi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %al,%ah
js     80ab7b3 <_IO_stdin_used+0x154af>
add    %ch,%ah
aaa
cld
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jg     80ab7df <_IO_stdin_used+0x154db>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,%al
js     80ab7e7 <_IO_stdin_used+0x154e3>
add    %cl,(%eax)
cmp    %bh,%ah
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x63,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,(%ecx,%edi,2)
add    %al,(%eax)
cmp    $0x38,%al
cld
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pusha
jns    80ab84f <_IO_stdin_used+0x1554b>
add    %dl,0x38(%eax)
cld
jmp    *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    %?,0x0(%ecx)
add    %dl,0xd2fffc(%eax,%edi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xa(%ebx),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x39440000(%ecx,%edi,2)
cld
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xa(%edx),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x49,%al
or     0xe(%ebx),%edi
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
inc    %esp
add    %al,(%eax)
add    %ch,%al
jns    80ab8d7 <_IO_stdin_used+0x155d3>
add    %ch,-0x2b0003c7(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%ch
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,(%eax)
jp     80ab91f <_IO_stdin_used+0x1561b>
add    %al,0x3a(%eax)
cld
(bad)
flds   (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcc,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x88000000
jp     80ab977 <_IO_stdin_used+0x15673>
add    %cl,%al
cmp    %esp,%edi
(bad)
fild   (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x43,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,%ah
jp     80ab9e3 <_IO_stdin_used+0x156df>
add    %bh,0xb4fffc(,%edi,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dh,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
jnp    80aba1f <_IO_stdin_used+0x1571b>
add    %al,%al
cmp    $0x65fffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %bl,0x0(%ebx,%edi,2)
add    %al,(%esi,%edi,1)
cld
ljmp   *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc1,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0x7b,%ah
add    %al,(%eax)
fdivrl (%esi)
cld
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %edi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
lock jnp 80abadf <_IO_stdin_used+0x157db>
add    %dl,0x3f(%eax)
cld
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %edi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
sub    $0x7c,%al
add    %al,(%eax)
les    (%edi),%edi
cld
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %edi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %ch,0x7c(%eax)
add    %al,(%eax)
cmp    %al,-0x4(%eax)
jmp    *(%eax)
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
lea    (%ecx),%eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,0x44140000(%esp,%edi,2)
cld
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e43
data16
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %al,0x449c0000(,%edi,2)
cld
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%esi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,0x0(%ebp,%edi,2)
add    %al,0xc1fffc(,%eax,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %esi
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
push   %esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,-0x67ffff83(%eax)
inc    %ebp
cld
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,%al
jge    80abcbf <_IO_stdin_used+0x159bb>
add    %dh,(%eax)
inc    %esi
cld
(bad)
out    %eax,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0x41100e0a(%esi),%dl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
sub    %bh,0x0(%esi)
add    %cl,%al
inc    %esi
cld
call   *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%edx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pusha
jle    80abd4f <_IO_stdin_used+0x15a4b>
add    %dh,0x6efffc47(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bl,-0x17ffff82(%eax)
inc    %edi
cld
(bad)
ljmp   $0xe41,$0x0
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x63,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,%al
jle    80abddf <_IO_stdin_used+0x15adb>
add    %al,-0x1d0003b8(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7a,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
dec    %eax
jg     80abe37 <_IO_stdin_used+0x15b33>
add    %bl,(%eax)
dec    %ecx
cld
lcall  *0x3(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
mov    %bh,0x0(%edi)
add    %bh,(%eax)
dec    %esp
cld
lcall  *(%edx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
or     %gs:(%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bh,0x2800007f(%eax)
dec    %esi
cld
decl   0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x68,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
adc    (%ecx),%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
adc    %al,0x50600000(%eax)
cld
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebp),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
dec    %eax
addb   $0x0,(%eax)
pop    %eax
push   %ecx
cld
call   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %al,0x40000080(%eax)
push   %edx
cld
ljmp   *0x2(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1d00e46
pop    %ecx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
into
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,%al
addb   $0x0,(%eax)
pop    %eax
push   %esp
cld
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
add    $0x81,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %esp
cld
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
ja     80ac011 <_IO_stdin_used+0x15d0d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,(%ecx,%eax,4)
add    %al,(%eax)
sbb    $0x55,%al
cld
inc    %edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffca,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    %es,0x56940000(%ecx)
cld
ljmp   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x42,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xd8000081,%eax
push   %esi
cld
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
jle    80ac0c5 <_IO_stdin_used+0x15dc1>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
call   600ac15a <_end+0x57ff380a>
push   %edi
cld
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,0xe(%ebx,%eax,8)
add    $0x42,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %dl,(%edx,%eax,4)
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %edi
cld
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bl,0x0(%edx,%eax,4)
add    %al,-0x4(%eax,%ebx,2)
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edi
add    %al,(%eax)
add    %al,-0x4fffff7e(%eax)
pop    %eax
cld
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %bh,0x58d40000(%edx,%eax,4)
cld
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%eax
add    %al,(%ebx,%eax,4)
add    %al,(%eax)
pop    %esp
pop    %ecx
cld
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %cl,0x0(%ebx,%eax,4)
add    %dh,%ah
pop    %ecx
cld
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edi
add    %al,(%eax)
add    %dh,-0x7d(%eax)
add    %al,(%eax)
pusha
pop    %edx
cld
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %ch,0x5a840000(%ebx,%eax,4)
cld
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dh,%ah
addl   $0x0,(%eax)
sbb    $0x5b,%al
cld
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
sbb    %al,-0x3a47800(%eax,%eax,1)
(bad)
jge    80ac30e <_IO_stdin_used+0x1600a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
push   %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
push   %eax
test   %al,(%eax)
add    %dl,%al
pop    %ebx
cld
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %cl,0x5bf40000(%esp,%eax,4)
cld
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,%ah
test   %al,(%eax)
add    %cl,0x8afffc(%esp,%ebx,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%eax
add    %bh,%al
test   %al,(%eax)
add    %bh,%al
pop    %esp
cld
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %al,-0x7b(%eax)
add    %al,(%eax)
nop
pop    %ebp
cld
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%eax
add    %ah,0x0(%ebp,%eax,4)
add    %bh,%ah
pop    %ebp
cld
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ch,0x5e940000(%ebp,%eax,4)
cld
decl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xa(%ebp),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,%al
test   %eax,(%eax)
add    %al,(%eax)
pop    %edi
cld
decl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9e,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ch,(%eax)
xchg   %al,(%eax)
add    %bh,-0x170003a1(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
push   %es
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,0x38000086(%eax)
popa
cld
lcall  *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6c,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,%al
xchg   %al,(%eax)
add    %al,(%eax)
(bad)
cld
(bad)
jp     80ac5e6 <_IO_stdin_used+0x162e2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%ebx)
jae    80ac5fd <_IO_stdin_used+0x162f9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
adc    $0x87,%al
add    %al,(%eax)
pop    %esp
(bad)
cld
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
jae    80ac621 <_IO_stdin_used+0x1631d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
inc    %esp
xchg   %eax,(%eax)
add    %ch,%ah
(bad)
cld
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
jae    80ac651 <_IO_stdin_used+0x1634d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x74000000
xchg   %eax,(%eax)
add    %bh,-0x4(%ebx,%eiz,2)
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x71400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%esp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %ah,%al
xchg   %eax,(%eax)
add    %dh,%al
arpl   %di,%sp
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%ebx)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%eax
add    %ch,(%eax)
mov    %al,(%eax)
add    %bl,0x64(%eax)
cld
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%ebx)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%eax
add    %dh,-0x78(%eax)
add    %al,(%eax)
shlb   $0xaa,-0x1(%esp,%edi,8)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%ebx)
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
mov    $0x28000088,%eax
gs
cld
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7d500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
imul   $0xe,(%edx),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
and    $0x89,%al
add    %al,(%eax)
in     (%dx),%al
gs
cld
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cmp    %cl,0x65e80000(%ecx)
cld
ljmp   *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0x41100e0a(%edx),%al
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x77(%eax)
add    %al,(%eax)
pusha
data16
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
test   %cl,0x665c0000(%ecx)
cld
(bad)
jge    80ac87a <_IO_stdin_used+0x16576>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%ah
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,0x66a40000(%ecx,%ecx,4)
cld
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
mov    %eax,(%eax)
add    %dh,0x9fffc66(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,%ah
mov    %eax,(%eax)
add    %ch,0x74fffc(%esi,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax,%eax,1),%edx
add    %al,(%eax)
adc    %cl,0x67000000(%edx)
cld
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%ebp)
add    $0x0,%al
test   %al,(%eax)
add    %al,(%eax)
sub    %cl,0x67180000(%edx)
cld
decl   0x3(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
test   %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
imul   $0x46140e0a,(%ecx),%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0x8a,%al
add    %al,(%eax)
and    %ch,-0x4(%edx)
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
les    0x6a2c0000(%edx),%ecx
cld
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,%ah
mov    (%eax),%al
add    %bh,(%edx,%ebp,2)
cld
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,(%ebx,%ecx,4)
add    %al,(%eax)
dec    %esp
push   $0xfffffffc
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,(%ebx,%ecx,4)
add    %al,(%eax)
pop    %esp
push   $0xfffffffc
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cmp    %cl,0x6a580000(%ebx)
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ebx,%ecx,4)
add    %dl,-0x4(%edx,%ebp,2)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x75(%eax)
add    %al,(%eax)
pusha
push   $0xfffffffc
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx,%ecx,4)
add    %bl,-0x4(%edx,%ebp,2)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x6800008b(%eax)
push   $0xfffffffc
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,0x6a640000(%ebx,%ecx,4)
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x6000008b(%eax)
push   $0xfffffffc
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
les    0x6a6c0000(%ebx),%ecx
cld
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,%ah
mov    (%eax),%eax
add    %cl,0x6bfffc(%edx,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
mov    %es,(%eax)
add    %dl,%al
push   $0xfffffffc
(bad)
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xe(%edx,%ecx,1),%dh
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
mov    %es,(%eax)
add    %dh,-0x4(%ebx,%ebp,2)
(bad)
jp     80acb42 <_IO_stdin_used+0x1683e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jae    80acb59 <_IO_stdin_used+0x16855>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
jo     80acaea <_IO_stdin_used+0x167e6>
add    %al,(%eax)
shrb   -0x4(%ebx)
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %esi
push   %cs
adc    %al,-0x3cf580fc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    0x4000008c,%al
insb   (%dx),%es:(%edi)
cld
decl   0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %dh,0x6c7c0000(%esp,%ecx,4)
cld
incl   0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff86,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
test   $0x43140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %cl,0x6db40000(,%ecx,4)
cld
jmp    *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff95,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebp),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ah,0x0(%ebp,%ecx,4)
add    %cl,%ah
outsb  %ds:(%esi),(%dx)
cld
call   *%edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x700e4304(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%dh
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
lods   %ds:(%esi),%al
lea    (%eax),%eax
add    %ah,-0x4(%edi,%ebp,2)
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dl,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%esi),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
in     $0x8d,%al
add    %al,(%eax)
jl     80acd45 <_IO_stdin_used+0x16a41>
cld
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebp
push   %cs
and    %al,(%edx)
pop    %esp
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
mov    (%eax),%es
add    %al,%al
outsl  %ds:(%esi),(%dx)
cld
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7c,0x2300e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,0x0(%esi,%ecx,4)
add    %ah,(%eax,%esi,2)
cld
(bad)
mov    $0x2,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x3500e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    (%eax),%es
add    %cl,0xecfffc(%edx,%esi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff96,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dl,(%eax)
popl   (%eax)
add    %dl,(%eax)
jae    80acdff <_IO_stdin_used+0x16afb>
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
jp     80ace27 <_IO_stdin_used+0x16b23>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,0x0(%edi,%ecx,4)
add    %bh,(%ebx,%esi,2)
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %ch,-0x71(%eax)
add    %al,(%eax)
cmp    %dh,-0x4(%ebx)
call   *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe5,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
rorb   $0xfc,0x74800000(%edi)
lcall  *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa5,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
pushf
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
adc    $0x90,%al
add    %al,(%eax)
mov    %?,-0x4(%ebp)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%esi)
pop    %ebp
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,(%eax,%edx,4)
add    %al,(%eax)
pushf
jne    80acf23 <_IO_stdin_used+0x16c1f>
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,-0x70(%eax)
add    %al,(%eax)
mov    0x1cfffc75,%al
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1a00e46
out    %al,(%dx)
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%esi),%edx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x68000090,%eax
jns    80acfa7 <_IO_stdin_used+0x16ca3>
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %ecx
or     (%esi),%cl
add    $0x44,%al
or     0xe(%ebp),%eax
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,%al
nop
add    %al,(%eax)
cwtl
jns    80acfc7 <_IO_stdin_used+0x16cc3>
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jno    80acff3 <_IO_stdin_used+0x16cef>
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
or     $0x91,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
jns    80acffb <_IO_stdin_used+0x16cf7>
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x21,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x14(%esi,%ecx,1),%esp
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %bh,-0x6f(%eax)
add    %al,(%eax)
test   $0x7a,%al
cld
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
or     %gs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edi),%edx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,0x7ab40000(%ecx,%edx,4)
cld
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
call   d00ad16a <_end+0xc7ff481a>
jp     80ad0d7 <_IO_stdin_used+0x16dd3>
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
xchg   %eax,%ecx
add    %al,(%eax)
les    -0x4(%edx),%edi
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
xchg   %eax,%edx
add    %al,(%eax)
sarb   -0x4(%edx)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%edx,%edx,4)
add    %al,(%eax)
int3
jp     80ad113 <_IO_stdin_used+0x16e0f>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
xchg   %eax,%edx
add    %al,(%eax)
enter  $0xfc7a,$0xff
or     $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
dec    %esp
xchg   %eax,%edx
add    %al,(%eax)
les    -0x4(%edx),%edi
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
js     80ad0f8 <_IO_stdin_used+0x16df4>
add    %al,(%eax)
enter  $0xfc7a,$0xff
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
mov    %ss,0x7ac40000(%edx)
cld
(bad)
jp     80ad182 <_IO_stdin_used+0x16e7e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
int3
xchg   %eax,%edx
add    %al,(%eax)
add    $0x7b,%al
cld
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xe(%edx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
clc
xchg   %eax,%edx
add    %al,(%eax)
or     %bh,-0x4(%ebx)
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
or     $0x93,%al
add    %al,(%eax)
add    $0x7b,%al
cld
decl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x10(%esi,%ecx,1),%bh
inc    %ebx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
inc    %eax
xchg   %eax,%ebx
add    %al,(%eax)
pusha
jnp    80ad22f <_IO_stdin_used+0x16f2b>
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %ch,0x0(%ebx,%edx,4)
add    %ah,0xaffffc(%ebx,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
dec    %ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,0x7c0c0000(%ebx,%edx,4)
cld
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
or     %gs:(%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
loopne 80ad261 <_IO_stdin_used+0x16f5d>
add    %al,(%eax)
push   %eax
jl     80ad2cf <_IO_stdin_used+0x16fcb>
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jne    80ad2f7 <_IO_stdin_used+0x16ff3>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ah,(%esp,%edx,4)
add    %al,(%eax)
pushf
jl     80ad313 <_IO_stdin_used+0x1700f>
(bad)
clc
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ecx),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x0(%esp,%edx,4)
add    %ah,-0x4(%ebp,%edi,2)
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,-0x57ffff6c(%eax)
jge    80ad377 <_IO_stdin_used+0x17073>
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jb     80ad395 <_IO_stdin_used+0x17091>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x94,%ah
add    %al,(%eax)
cld
jge    80ad3a3 <_IO_stdin_used+0x1709f>
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
in     $0x94,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
jle    80ad3d3 <_IO_stdin_used+0x170cf>
call   *%ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
and    $0x95,%al
add    %al,(%eax)
or     $0x7f,%al
cld
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%eax),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bl,-0x6b(%eax)
add    %al,(%eax)
push   $0x45fffc7f
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bl,0x7f740000(%ebp,%edx,4)
cld
(bad)
jl     80ad492 <_IO_stdin_used+0x1718e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x49,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %ah,%ah
xchg   %eax,%ebp
add    %al,(%eax)
lods   %ds:(%esi),%al
jg     80ad4d3 <_IO_stdin_used+0x171cf>
inc    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%esi),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
sub    $0x96,%al
add    %al,(%eax)
xor    $0x80,%al
cld
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebp),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi,%edx,4)
add    %bl,0x41fffc(%eax,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
nop
xchg   %eax,%esi
add    %al,(%eax)
rolb   $0x0,0x2afffc(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,-0x2fffff6a(%eax)
cmp    $0xff,%ah
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
les    -0x7f340000(%esi),%edx
cld
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ah,%ah
xchg   %eax,%esi
add    %al,(%eax)
faddl  0x36fffc(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x39f598fe(%esi)
push   %cs
add    $0x48,%al
or     -0x3a(%ebp),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
or     %dl,-0x7f080000(%edi)
cld
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%ebx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
and    %dl,-0x7ef00000(%edi)
cld
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x39f598fe(%esi)
push   %cs
add    $0x48,%al
or     -0x3a(%ebp),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %esp
xchg   %eax,%edi
add    %al,(%eax)
sub    $0x81,%al
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x69(%eax)
add    %al,(%eax)
sub    %al,0x8fffc(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
xchg   %eax,%edi
add    %al,(%eax)
and    $0x81,%al
cld
jmp    *0x0
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %al,0x40000097(%eax)
cmp    $0x1ecff,%esp
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
jp     80ad6b4 <_IO_stdin_used+0x173b0>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
fcoms  -0x7d280000(%edi)
cld
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,%al
xchg   %eax,%edi
add    %al,(%eax)
call   290ad36f <_end+0x20ff4a1f>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,(%eax)
cwtl
add    %al,(%eax)
call   4e0ad38f <_end+0x45ff4a3f>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
push   %eax
cwtl
add    %al,(%eax)
add    %al,0x73fffc(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x65,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,-0x7cbc0000(%eax,%ebx,4)
cld
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x65,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %cl,%al
cwtl
add    %al,(%eax)
mov    %al,0x6bfffc(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ecx),%ah
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
cld
cwtl
add    %al,(%eax)
les    0x6bfffc(%ebx),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ecx),%ah
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
xor    %bl,-0x7c000000(%ecx)
cld
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ecx),%ch
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,0x0(%ecx,%ebx,4)
add    %cl,-0x4(%esp,%eax,4)
ljmp   *0x3
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
in     (%dx),%eax
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
pop    %eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bh,-0x78dc0000(%ecx,%ebx,4)
cld
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
dec    %eax
add    %al,(%eax)
add    %bh,%al
cltd
add    %al,(%eax)
mov    %al,0xa2fffc(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
inc    %esp
lcall  $0xfffc,$0x87ec0000
fiaddl (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %edx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%eax
add    %al,-0x6fffff66(%eax)
mov    %bh,%ah
decl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
enter  $0x9a,$0x0
fmuls  0x8afffc(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
add    %bl,-0x76d00000(%ebx)
cld
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
add    0xa(%ebx),%dl
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dh,(%eax)
fwait
add    %al,(%eax)
mov    0x9efffc89,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %al,-0x76140000(%ebx,%ebx,4)
cld
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
jg     80ada9b <_IO_stdin_used+0x17797>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    $0x9b,%al
add    %al,(%eax)
push   %eax
mov    %ah,%bh
call   *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9d,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
pop    %ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %al,(%esp,%ebx,4)
add    %al,(%eax)
or     $0x8b,%al
cld
call   *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9d,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
pop    %ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %bl,-0x64(%eax)
add    %al,(%eax)
enter  $0xfc8b,$0xff
mov    $0x0,%ah
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebp),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
pushf
add    %al,(%eax)
cmp    $0x8c,%al
cld
pushl  (%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %al,%ah
pushf
add    %al,(%eax)
pop    %esp
mov    %?,%esp
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
push   $0xa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %dh,%al
pushf
add    %al,(%eax)
mov    0xd7fffc8c,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%cl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cmp    %bl,-0x72c80000(%ebp)
cld
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%ebp),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,-0x63(%eax)
add    %al,(%eax)
mov    0xc6fffc8d,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffb8,0x2400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %ch,-0x71cc0000(%ebp,%ebx,4)
cld
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%edx),%dl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ah,%al
popf
add    %al,(%eax)
mov    0xa7fffc8e,%al
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x68300e43
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%ebx),%eax
or     (%ecx),%al
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,(%eax)
sahf
add    %al,(%eax)
clc
(bad)
cld
jmp    *(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x11,0x3400e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
rorb   $0xe,(%edx)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %dl,-0x3fffff62(%eax)
xchg   %eax,%ecx
cld
ljmp   *0x3(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e4e
ja     80adda6 <_IO_stdin_used+0x17aa2>
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
lea    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx,%ecx,1),%ebp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
add    %bl,-0x6b000000(%edi)
cld
incl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%esi),%esp
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
push   %esp
lahf
add    %al,(%eax)
cld
xchg   %eax,%ebp
cld
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
push   $0x68000000
lahf
add    %al,(%eax)
clc
xchg   %eax,%ebp
cld
inc    %edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdd,0x2600e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%ebp
add    %dl,%ah
lahf
add    %al,(%eax)
pop    %esp
xchg   %eax,%edi
cld
decl   0x0(%ebx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
stos   %al,%es:(%edi)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %esp
mov    0x9a3c0000,%al
cld
decl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
mov    0x9a380000,%al
cld
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
fs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %bh,-0x60(%eax)
add    %al,(%eax)
dec    %eax
lcall  $0x0,$0x99fffc
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
add    0xa(%ebx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%edx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
shlb   $0xfc,-0x65600000(%eax)
(bad)
js     80adfb6 <_IO_stdin_used+0x17cb2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
push   %ebp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebp),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,%al
mov    0x9ae80000,%al
cld
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ah,(%ecx,%eiz,4)
add    %al,(%eax)
sub    $0x9b,%al
cld
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
addr16 push %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %dl,-0x5f(%eax)
add    %al,(%eax)
sbbb   $0x0,0x8ffffc(%ebx)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
push   $0x43100e0a
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
cwtl
mov    0x9bc80000,%eax
cld
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %ch,-0x642c0000(%ecx,%eiz,4)
cld
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%esi)
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%ecx
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,%ah
mov    0x9c2c0000,%eax
cld
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%eax
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%edi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %cl,0x0(%edx,%eiz,4)
add    %al,0x9cfffc(%esp,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
dec    %eax
add    %al,(%eax)
add    %bl,-0x27ffff5e(%eax)
pushf
cld
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edx),%ebx
push   %cs
or     $0x44,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
in     $0xa2,%al
add    %al,(%eax)
sub    $0x9d,%al
cld
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
jns    80ae1f5 <_IO_stdin_used+0x17ef1>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,(%ebx,%eiz,4)
add    %al,(%eax)
pop    %esp
popf
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
mov    %eax,0x9d580000
cld
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sub    $0xa3,%al
add    %al,(%eax)
push   %esp
popf
cld
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
mov    %eax,0x9d600000
cld
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
dec    %edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ah,-0x5d(%eax)
add    %al,(%eax)
pusha
popf
cld
jmp    *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb0,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x380000a3(%eax)
sahf
cld
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
insb   (%dx),%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,%ah
mov    %eax,0x9e8c0000
cld
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
jg     80ae2ff <_IO_stdin_used+0x17ffb>
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
test   $0x9e,%al
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,(%esp,%eiz,4)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sahf
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
inc    %eax
movsb  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
mov    0x2afffc9e,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%esi)
fs
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %ah,-0x5c(%eax)
add    %al,(%eax)
mov    $0x9e,%al
cld
call   *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx),%esi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,%fs:(%eax)
add    %bl,-0x27ffff5c(%eax)
sahf
cld
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x66300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%esp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
add    %ah,-0x61000000(%ebp)
cld
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jge    80ae41b <_IO_stdin_used+0x18117>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
xor    $0xa5,%al
add    %al,(%eax)
sbb    $0x9f,%al
cld
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xe(%eax)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
and    $0x9f,%al
cld
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
pusha
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
and    %bl,0x49fffc(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
jb     80ae47b <_IO_stdin_used+0x18177>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
cmp    $0x9f,%al
cld
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
insl   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dh,-0x60a40000(%ebp,%eiz,4)
cld
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
movsl  %ds:(%esi),%es:(%edi)
add    %al,(%eax)
test   %bl,0x5dfffc(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
and    $0xa6,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
lahf
cld
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     80ae531 <_IO_stdin_used+0x1822d>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,-0x5a(%eax)
add    %al,(%eax)
loopne 80ae4e1 <_IO_stdin_used+0x181dd>
cld
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     80ae55d <_IO_stdin_used+0x18259>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x0(%esi,%eiz,4)
add    %dl,(%eax,%eiz,4)
cld
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,0x280000a6(%eax)
mov    0x3dfffc,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,%ah
cmpsb  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
cmp    $0xa0,%al
cld
(bad)
cmp    $0x0,%eax
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
push   %eax
mov    0x3dfffc,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,(%edi,%eiz,4)
add    %al,(%eax)
mov    %fs:0x3afffc,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e5302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%eax),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pop    %eax
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
js     80ae5ea <_IO_stdin_used+0x182e6>
cld
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
nop
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
mov    0x3dfffca0,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,-0x5f4c0000(%edi,%eiz,4)
cld
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
js     80ae6c9 <_IO_stdin_used+0x183c5>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,%al
cmpsl  %es:(%edi),%ds:(%esi)
add    %al,(%eax)
call   560ae37d <_end+0x4dff5a2d>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%ebp,4)
add    %al,(%eax)
or     $0xa1,%al
cld
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4802(%ebx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %al,-0x58(%eax)
add    %al,(%eax)
inc    %eax
mov    0x3dfffc,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
test   $0x0,%al
add    %dl,-0x4(%ecx,%eiz,4)
(bad)
cmp    $0x3,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2c,0x3700e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
lods   %ds:(%esi),%al
test   $0x0,%al
add    %dl,-0x4(%esp,%eiz,4)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %cl,%ah
test   $0x0,%al
add    %dl,-0x4(%esp,%eiz,4)
(bad)
fiaddl (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3c,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cmp    %ch,-0x5a380000(%ecx)
cld
incl   0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %bh,-0x57(%eax)
add    %al,(%eax)
fsubs  0x166fffc(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x79600e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %ebp
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
shrb   -0x58100000(%ecx)
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
in     $0xa9,%al
add    %al,(%eax)
in     (%dx),%al
cmpsl  %es:(%edi),%ds:(%esi)
cld
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edx)
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
cld
test   $0xa7f40000,%eax
cld
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    %ch,-0x57d80000(%edx)
cld
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%esi)
pop    %edx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %cl,-0x56(%eax)
add    %al,(%eax)
sub    %ch,0xc5fffc(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
stos   %eax,%es:(%edi)
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
js     80ae910 <_IO_stdin_used+0x1860c>
add    %al,(%eax)
enter  $0xfca8,$0xff
push   %cs
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
mov    %gs,-0x573c0000(%edx)
cld
(bad)
mov    $0x2,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xa,0x61400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
loopne 80ae978 <_IO_stdin_used+0x18674>
add    %al,(%eax)
xor    %ch,0x3efffc(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4802(%ebx)
jae    80ae9f1 <_IO_stdin_used+0x186ed>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,(%eax)
stos   %eax,%es:(%edi)
add    %al,(%eax)
push   %eax
stos   %eax,%es:(%edi)
cld
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ah,(%eax)
stos   %eax,%es:(%edi)
add    %al,(%eax)
pusha
stos   %eax,%es:(%edi)
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,(%ebx,%ebp,4)
add    %al,(%eax)
pop    %esp
stos   %eax,%es:(%edi)
cld
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
popa
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%esi),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ch,-0x55(%eax)
add    %al,(%eax)
push   $0xa0fffcab
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x5c300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
push   %esi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
shrb   $0xfc,-0x54500000(%ebx)
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %ch,%ah
stos   %eax,%es:(%edi)
add    %al,(%eax)
aam    $0xab
cld
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0x10(%esi,%ecx,1),%cl
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
and    %ch,-0x3540000(%eax,%eax,1)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xc(%esi,%ecx,1),%ebp
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bl,-0x54(%eax)
add    %al,(%eax)
sub    %ch,0x235ff(%esp,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x67500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
or     (%ecx),%al
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xac,%al
add    %al,(%eax)
adc    %ch,0xa3fffc(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
call   900aec85 <_end+0x87ff6335>
scas   %es:(%edi),%al
cld
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,(%eax)
lods   %ds:(%esi),%eax
add    %al,(%eax)
cwtl
scas   %es:(%edi),%al
cld
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,(%eax)
lods   %ds:(%esi),%eax
add    %al,(%eax)
test   $0xae,%al
cld
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,-0x53(%eax)
add    %al,(%eax)
mov    $0x23fffcae,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,-0x53(%eax)
add    %al,(%eax)
enter  $0xfcae,$0xff
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4e02(%ebx)
jb     80aec79 <_IO_stdin_used+0x18975>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,-0x7ffff53(%eax)
scas   %es:(%edi),%al
cld
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
jb     80aec99 <_IO_stdin_used+0x18995>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %ch,0x280000ad(%eax)
scas   %es:(%edi),%eax
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x50dc0000(%ebp,%ebp,4)
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
shrb   -0x50e00000(%ebp)
cld
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
bound  %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ebp
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %dl,(%esi,%ebp,4)
add    %al,(%eax)
dec    %esp
scas   %es:(%edi),%eax
cld
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
bound  %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ebp
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %bl,-0x52(%eax)
add    %al,(%eax)
js     80aecf9 <_IO_stdin_used+0x189f5>
cld
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6c300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%eax),%edi
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
scas   %es:(%edi),%al
add    %al,(%eax)
mov    $0xaf,%ah
cld
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,%al
scas   %es:(%edi),%al
add    %al,(%eax)
shrb   0x6ffffc(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
bound  %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%esi
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %al,(%edi,%ebp,4)
add    %al,(%eax)
cld
scas   %es:(%edi),%eax
cld
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sbb    %ch,-0x4fe80000(%edi)
cld
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,(%eax)
scas   %es:(%edi),%eax
add    %al,(%eax)
sub    %dh,0x1dfffc(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
dec    %esp
scas   %es:(%edi),%eax
add    %al,(%eax)
xor    $0xb0,%al
cld
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,0x0(%edi,%ebp,4)
add    %al,-0x4(%eax,%esi,4)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,-0x4f9c0000(%edi,%ebp,4)
cld
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,0x700000af(%eax)
mov    $0xfc,%al
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bl,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
int3
scas   %es:(%edi),%eax
add    %al,(%eax)
je     80aee6e <_IO_stdin_used+0x18b6a>
cld
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
jl     80aeee3 <_IO_stdin_used+0x18bdf>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,%al
scas   %es:(%edi),%eax
add    %al,(%eax)
fdivs  0x3bfffc(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
and    $0xb0,%al
add    %al,(%eax)
in     (%dx),%al
mov    $0xfc,%al
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
push   %eax
mov    $0x0,%al
add    %dl,(%eax)
mov    $0xfc,%cl
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
inc    %eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    %?,-0x4e6c0000(%eax)
cld
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,-0x6fffff50(%eax)
mov    $0xfc,%cl
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
inc    %eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bl,%ah
mov    $0x0,%al
add    %dh,%ah
mov    $0xfc,%cl
lcall  *0x3
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x6a500e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%ebx),%eax
mov    %eax,0x140e0a01
inc    %esi
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,0x0(%ecx,%esi,4)
add    %ah,0x2c7fffc(%esp,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffef,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,-0x48e40000(%ecx,%esi,4)
cld
decl   (%ecx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x17,0x3700e4e
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
arpl   %cx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
cld
mov    $0x0,%cl
add    %dl,%ah
mov    $0x25afffc,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x67,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %bh,(%edx,%esi,4)
add    %al,(%eax)
hlt
mov    $0xf9fffc,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7a400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%ebp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,-0x5fffff4e(%eax)
mov    $0xcbfffc,%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%ecx),%ah
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%ebp
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebp),%edx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %ch,%al
mov    $0x0,%dl
add    %bl,(%eax)
mov    $0x184fffc,%ebp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0x3400e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
dec    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
mov    $0x0,%bl
add    %dl,-0x42(%eax)
cld
(bad)
out    %al,(%dx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc9,0x3500e4e
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
xorb   $0xfc,-0x40000000(%ebx)
ljmp   *0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
lds    (%edx),%ecx
push   %cs
adc    $0x44,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%ebx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,%ah
mov    $0x0,%bl
add    %al,(%ecx,%eax,8)
cld
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %dh,-0x33f0000(%eax,%eax,1)
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%esp,%esi,4)
add    %al,(%eax)
cld
sar    $0xff,%ah
sbb    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sub    %dh,-0x33ef800(%eax,%eax,1)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    0xe(%eax),%dl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
mov    $0x0,%ah
add    %dl,-0x4(%ecx,%eax,8)
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x4c(%eax)
add    %al,(%eax)
push   %eax
sar    $0xff,%esp
adc    (%eax),%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     80af316 <_IO_stdin_used+0x19012>
add    %al,(%eax)
pop    %esp
sar    $0xff,%esp
push   %ds
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    %dh,-0x33e9800(%eax,%eax,1)
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
dec    %edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %ch,0x680000b4(%eax)
sar    $0xff,%esp
and    (%ecx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb0,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0x0,%ch
add    %al,-0x3e(%eax)
cld
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
insb   (%dx),%es:(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %ch,-0x3d6c0000(,%esi,4)
cld
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
jg     80af447 <_IO_stdin_used+0x19143>
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,-0x4b(%eax)
add    %al,(%eax)
mov    $0xc2,%al
cld
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x42,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,-0x3d3c0000(%ebp,%esi,4)
cld
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%esi)
imul   $0x8,(%esi),%ecx
inc    %ecx
(bad)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bh,-0x3d1c0000(%ebp,%esi,4)
cld
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
pop    %ecx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
loopne 80af483 <_IO_stdin_used+0x1917f>
add    %al,(%eax)
and    %al,%bl
cld
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
add    $0xb6,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
ret
cld
lcall  *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
pop    %ecx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
sub    %dh,-0x3c580000(%esi)
cld
lcall  *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
pop    %ecx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
dec    %esp
mov    $0x0,%dh
add    %ah,%ah
ret
cld
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
pop    %ecx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
jo     80af514 <_IO_stdin_used+0x19210>
add    %al,(%eax)
and    %al,%ah
cld
(bad)
js     80af566 <_IO_stdin_used+0x19262>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dh,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,-0x3b8c0000(%esi,%esi,4)
cld
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ah,0x0(%eax,%eax,1)
add    %cl,%al
mov    $0x0,%dh
add    %bh,-0x7900033c(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x66300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%esp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edi),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
xor    %dh,-0x3b200000(%edi)
cld
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jge    80af64b <_IO_stdin_used+0x19347>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x0(%edi,%esi,4)
add    %bh,%ah
(bad)
cld
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
dec    %eax
add    %al,(%eax)
add    %cl,0x480000b7(%eax)
(bad)
ret    $0x0
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%edx
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edx,%ecx,1),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
aam    $0xb7
add    %al,(%eax)
int3
(bad)
and    $0x0,%eax
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
call   f00af790 <_end+0xe7ff6e40>
(bad)
inc    %edi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %ch,(%eax)
mov    $0xc6f80000,%eax
cld
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%ecx),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%esi),%ebp
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
jo     80af716 <_IO_stdin_used+0x19412>
add    %al,(%eax)
push   %eax
(bad)
cld
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
test   %bh,-0x38a40000(%eax)
cld
(bad)
mov    $0x0,%esp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
les    -0x38240000(%eax),%edi
cld
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,%al
mov    $0xc7e80000,%eax
cld
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%esi)
add    0xe(%eax),%cl
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
or     $0xb9,%al
add    %al,(%eax)
adc    $0xc8,%al
cld
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cmp    %bh,-0x37d80000(%ecx)
cld
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
jo     80af817 <_IO_stdin_used+0x19513>
add    %al,(%eax)
pusha
enter  $0xfffc,$0xd8
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0x41100e0a(%esi),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x80000b9(%eax)
leave
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,-0x36fc0000(%ecx,%edi,4)
cld
call   *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,%al
mov    $0xc9680000,%ecx
cld
ljmp   *0x0
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %cl,(%edx,%edi,4)
add    %al,(%eax)
test   %cl,%cl
cld
(bad)
jp     80af902 <_IO_stdin_used+0x195fe>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa540204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     -0x3a(%edi),%edx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,-0x46(%eax)
add    %al,(%eax)
enter  $0xfcc9,$0xff
and    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%esi)
pop    %esi
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ch,-0x46(%eax)
add    %al,(%eax)
fmul   %st(1),%st
cld
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
inc    %eax
jp     80af97e <_IO_stdin_used+0x1967a>
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xc9fc0000,%edx
cld
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %ch,-0x7ffff46(%eax)
leave
cld
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
aam    $0xba
add    %al,(%eax)
or     $0xca,%al
cld
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%al
mov    $0xca080000,%edx
cld
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
mov    $0xca040000,%edx
cld
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    %bh,-0x36000000(%ebx)
cld
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
inc    %eax
add    0xa(%edx),%bl
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %cl,-0x45(%eax)
add    %al,(%eax)
cmp    %cl,%dl
cld
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebx,%edi,4)
add    %bl,-0x4(%edx,%ecx,8)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax)
add    %al,(%eax)
add    %al,-0x7fffff45(%eax)
lret   $0xfffc
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %dh,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,-0x355c0000(%ebx,%edi,4)
cld
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%esi)
add    0xe(%esi),%al
or     %al,-0x3a(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
sarb   $0xfc,-0x35300000(%ebx)
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4302(%esi)
add    0xe(%esi),%al
or     %al,-0x3a(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
in     $0xbb,%al
add    %al,(%eax)
cld
lret   $0xfffc
dec    %esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x400e4302(%esi)
add    0xe(%esi),%al
or     %al,-0x3a(%ebx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,(%eax)
mov    $0xcb280000,%esp
cld
incl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%esi)
add    0xa(%ebp),%ah
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,-0x44(%eax)
add    %al,(%eax)
jo     80afb0d <_IO_stdin_used+0x19809>
cld
incl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%esi)
add    0xa(%ebp),%ah
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%eax
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cwtl
mov    $0xcbb80000,%esp
cld
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,-0x37ffff44(%eax)
lret
cld
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %bl,%al
mov    $0xcbd80000,%esp
cld
(bad)
mov    $0x2,%esp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff93,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%ebx),%eax
addb   $0xa,(%ecx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
xor    %bh,-0x31c00000(%ebp)
cld
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x22c0e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %ch,0x0(%ebp,%edi,4)
add    %ah,0x29fffc(%esi,%ecx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xec66302(%esi)
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %cl,-0x47ffff43(%eax)
into
cld
ljmp   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%esi)
add    0xe(%ecx),%ah
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
mov    $0xf40000bd,%esp
into
cld
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ecx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%al
mov    $0xcf180000,%ebp
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cld
mov    $0xcf140000,%ebp
cld
pushl  0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
add    0xa(%esi),%dl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ecx),%esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%esp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
xor    $0xbe,%al
add    %al,(%eax)
pushf
iret
cld
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
inc    %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
fs
mov    $0xcfdc0000,%esi
cld
decl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
imul   $0xc3410c0e,(%edx),%ecx
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
xchg   %eax,%esp
mov    $0xd03c0000,%esi
cld
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x41,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
aam    $0xbe
add    %al,(%eax)
pop    %esp
sar    %ah
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     80afdef <_IO_stdin_used+0x19aeb>
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %cl,(%eax)
mov    $0xd0680000,%edi
cld
jmp    *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %ah,-0x41(%eax)
add    %al,(%eax)
rcl    $0xfc,%al
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jg     80afe77 <_IO_stdin_used+0x19b73>
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,-0x2f240000(%edi,%edi,4)
cld
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %dh,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
sarb   -0x2f000000(%edi)
cld
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %al,(%eax,%eax,8)
add    %al,(%eax)
sub    $0xd1,%al
cld
(bad)
add    %ds:(%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e4e
jmp    491f0d25 <_end+0x411383d5>
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
rorl   (%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
pop    %esp
rolb   $0x0,(%eax)
adc    $0xd4,%al
cld
dec    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff82,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
pushf
rolb   $0x0,(%eax)
movsb  %ds:(%esi),%es:(%edi)
aam    $0xfc
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%ebx),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
rol    %al
add    %al,(%eax)
loopne 80aff96 <_IO_stdin_used+0x19c92>
cld
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x7a300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
roll   $0x0,(%eax)
push   %eax
aad    $0xfc
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%ecx,%eax,8)
add    %al,(%eax)
dec    %esp
aad    $0xfc
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
cmp    %al,%cl
add    %al,(%eax)
dec    %eax
aad    $0xfc
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%esi)
jae    80b0045 <_IO_stdin_used+0x19d41>
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebp),%eax
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
or     %al,-0x3a(%ebx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
jo     80b001f <_IO_stdin_used+0x19d1b>
add    %al,(%eax)
jo     80b0037 <_IO_stdin_used+0x19d33>
cld
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%ecx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
pushf
roll   $0x0,(%eax)
test   %dl,%ch
cld
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x39f59efe(%esi)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
(bad)
push   %cs
add    $0x45,%al
or     -0x3a(%eax),%ecx
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %al,%ah
roll   $0x0,(%eax)
pushf
aad    $0xfc
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
lock roll $0x0,(%eax)
mov    $0xd5,%al
cld
(bad)
jle    80b00e6 <_IO_stdin_used+0x19de2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %edx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
sub    $0xc2,%al
add    %al,(%eax)
hlt
aad    $0xfc
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%eax
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,-0x3e(%eax)
add    %al,(%eax)
sub    %dl,%dh
cld
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jae    80b0175 <_IO_stdin_used+0x19e71>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
and    $0x0,%al
add    %al,(%eax)
mov    %es,%edx
add    %al,(%eax)
fs
(bad)
cld
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x39f592fe(%esi)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%edx
(bad)
push   %cs
add    $0x45,%al
or     0xe(%esi,%eax,8),%edx
add    $0x28,%al
add    %al,(%eax)
add    %dh,-0x29640000(%edx,%eax,8)
cld
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%edx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
loopne 80b0190 <_IO_stdin_used+0x19e8c>
add    %al,(%eax)
mov    0x4ffffcd6,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%esi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%ecx
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
sbb    %al,%bl
add    %al,(%eax)
mov    $0x3efffcd6,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %dh,0xe(%esi)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %esp
ret
add    %al,(%eax)
int3
(bad)
cld
incl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x3d(%eax)
add    %al,(%eax)
enter  $0xfcd6,$0xff
push   %cs
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebx,%eax,8)
add    %al,%ah
(bad)
cld
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jbe    80b0287 <_IO_stdin_used+0x19f83>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,-0x2fffff3d(%eax)
(bad)
cld
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%ecx)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
int3
ret
add    %al,(%eax)
hlt
(bad)
cld
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,%al
ret
add    %al,(%eax)
add    %dl,%bh
cld
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,%ah
ret
add    %al,(%eax)
or     $0xd7,%al
cld
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sub    %al,%ah
add    %al,(%eax)
sbb    %dl,%bh
cld
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
pusha
les    (%eax),%eax
add    %dh,(%eax)
xlat   %ds:(%ebx)
cld
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %bl,0x480000c4(%eax)
xlat   %ds:(%ebx)
cld
ljmp   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x43,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%ah
les    (%eax),%eax
add    %ah,-0x4(%edi,%edx,8)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
add    %al,%ch
add    %al,(%eax)
adc    $0xfc,%bh
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0x10(%esi,%ecx,1),%al
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
xor    $0xc5,%al
add    %al,(%eax)
pushf
xlat   %ds:(%ebx)
cld
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %cl,-0x3b(%eax)
add    %al,(%eax)
test   $0xd7,%al
cld
lcall  *0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9e,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
popa
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0xfffff3b(%eax)
fdivr  %st(4),%st
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,-0x26f40000(%ebp,%eax,8)
cld
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jns    80b04c1 <_IO_stdin_used+0x1a1bd>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ecx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,-0x20000000(%eax)
lds    (%eax),%eax
add    %dh,(%eax)
frndint
pushl  (%edx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x71,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
or     %fs:(%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
cld
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ah,0x0(%esi,%eax,8)
add    %ch,%ah
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
js     80b052c <_IO_stdin_used+0x1a228>
add    %al,(%eax)
sbb    %bl,%ah
cld
(bad)
cmp    (%edx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8d,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    $0x180000c6,%eax
fdivrp %st,%st(4)
(bad)
jle    80b05ae <_IO_stdin_used+0x1a2aa>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x39f58dfe(%esi)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ebx
(bad)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,%ah
movb   $0x0,(%eax)
je     80b05ac <_IO_stdin_used+0x1a2a8>
cld
push   %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffff95,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%esi),%edi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %dh,(%edi,%eax,8)
add    %al,(%eax)
sbb    $0xdf,%al
cld
lcall  *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x46100e0a(%ebx),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%esi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x1fffff39(%eax)
(bad)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,-0x20040000(%edi,%eax,8)
cld
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%esi),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
fadd   %st(7),%st
add    %al,(%eax)
cmp    %ah,%al
cld
(bad)
fild   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
in     (%dx),%al
movl   $0xfce10400,(%eax)
pushl  0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x56,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
jl     80b0716 <_IO_stdin_used+0x1a412>
add    %al,(%eax)
sub    $0xc8,%al
add    %al,(%eax)
test   %ah,%dl
cld
push   %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%eax),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebp),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%eax),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%ebx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
enter  $0x0,$0xf4
loop   80b079b <_IO_stdin_used+0x1a497>
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %al,%al
enter  $0x0,$0xf0
loop   80b07af <_IO_stdin_used+0x1a4ab>
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x7f300e43
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
cld
enter  $0x0,$0x4
jecxz  80b07eb <_IO_stdin_used+0x1a4e7>
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
leave
add    %al,(%eax)
and    %ah,%bl
cld
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    $0xc9,%al
add    %al,(%eax)
cmp    $0xe3,%al
cld
jmp    *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,0x0(%ecx,%ecx,8)
add    %cl,-0x4(%ebx,%eiz,8)
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,0x0(%ecx,%ecx,8)
add    %bl,-0x4(%ebx,%eiz,8)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %al,-0x1c940000(%ecx,%ecx,8)
cld
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
data16
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %dh,-0x7fffff37(%eax)
jecxz  80b089f <_IO_stdin_used+0x1a59b>
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jg     80b08cb <_IO_stdin_used+0x1a5c7>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,%ah
leave
add    %al,(%eax)
pushf
jecxz  80b08d3 <_IO_stdin_used+0x1a5cf>
jmp    *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%edx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
sbb    %cl,%dl
add    %al,(%eax)
fsub   %st(3),%st
cld
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
inc    %esp
lret   $0x0
or     $0xe4,%al
cld
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
dec    %esp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
je     80b092c <_IO_stdin_used+0x1a628>
add    %al,(%eax)
pop    %esp
in     $0xfc,%al
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jne    80b098f <_IO_stdin_used+0x1a68b>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %ch,0x680000ca(%eax)
in     $0xfc,%al
inc    %ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%esp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dh,%al
lret   $0x0
lock in $0xfc,%al
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%ebx,%ecx,8)
add    %al,(%eax)
or     $0xe5,%al
cld
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sbb    %cl,%bl
add    %al,(%eax)
or     %ah,%ch
cld
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,(%eax)
lret
add    %al,(%eax)
sbb    %ah,%ch
cld
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
dec    %esp
lret
add    %al,(%eax)
adc    $0xe5,%al
cld
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x35(%eax)
add    %al,(%eax)
and    %ah,%ch
cld
decl   (%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ebx,%ecx,8)
add    %bl,0x7dfffc(,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x71,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %dh,0x600000cb(%eax)
in     $0xfc,%eax
(bad)
mov    $0x0,%esi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x56300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edi
add    %al,(%eax)
add    %al,(%esp,%ecx,8)
add    %al,(%eax)
int3
in     $0xfc,%eax
call   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x40,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %al,-0x34(%eax)
add    %al,(%eax)
loopne 80b0b17 <_IO_stdin_used+0x1a813>
cld
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4804(%ebx)
or     %fs:(%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
add    %al,%fs:(%eax)
add    %bh,-0x34(%eax)
add    %al,(%eax)
sub    %ah,%dh
cld
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%edx),%ebp
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %ah,%al
int3
add    %al,(%eax)
and    $0xfc,%dh
(bad)
js     80b0bd6 <_IO_stdin_used+0x1a8d2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x56300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0x14(%esi,%ecx,1),%edi
inc    %esi
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
xor    $0xcd,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
out    %al,$0xfc
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%eax),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
push   $0xd80000cd
out    %al,$0xfc
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,-0x17ffff33(%eax)
out    %al,$0xfc
jmp    *0x0
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,-0x18fc0000(%ebp,%ecx,8)
cld
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
enter  $0xcd,$0x0
sbb    %ah,%bh
cld
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dh,%ah
int    $0x0
add    %ch,(%edi,%eiz,8)
cld
incl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %esi
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x60300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%edx
add    %al,(%eax)
add    %cl,-0x32(%eax)
add    %al,(%eax)
push   $0xbfffce7
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
pop    %esp
into
add    %al,(%eax)
fs
out    %eax,$0xfc
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pop    %edx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0x10(%esi,%ecx,1),%edi
inc    %esi
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %ah,-0x5fffff32(%eax)
out    %eax,$0xfc
(bad)
cmp    %eax,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
push   $0xc643100e
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
aam    $0xce
add    %al,(%eax)
lods   %ds:(%esi),%al
out    %eax,$0xfc
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%esi),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,(%edi,%ecx,8)
add    %al,(%eax)
adc    $0xe8,%al
cld
call   *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cmp    %cl,%bh
add    %al,(%eax)
dec    %eax
call   83d0e2a <_end+0x3184da>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
imul   $0x8,(%esi),%ecx
inc    %ecx
ret
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,-0x31(%eax)
add    %al,(%eax)
push   $0x34fffce8
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
outsb  %ds:(%esi),(%dx)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %bh,-0x31(%eax)
add    %al,(%eax)
mov    %ch,%al
cld
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x39f5a6fe(%esi)
push   %cs
add    $0x46,%al
or     -0x3a(%ebx),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pushf
iret
add    %al,(%eax)
xchg   %eax,%esp
call   81c0e8e <_end+0x10853e>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    $0xcf,%al
add    %al,(%eax)
nop
call   8190ea2 <_end+0xd8552>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
(bad)
iret
add    %al,(%eax)
mov    %gs,%eax
cld
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ah,0xe(%esi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
fmul   %st,%st(7)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
call   8510ece <_end+0x45857e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jns    80b0ef7 <_IO_stdin_used+0x1abf3>
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    %dl,%al
add    %al,(%eax)
shr    $0xfc,%al
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
data16
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
dec    %eax
rolb   (%eax)
add    %cl,(%eax)
jmp    8510f3a <_end+0x4585ea>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%esi)
jge    80b0f59 <_IO_stdin_used+0x1ac55>
or     %al,-0x3a(%ebx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,-0x30(%eax)
add    %al,(%eax)
cmp    %ch,%cl
cld
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%esi)
jnp    80b0f79 <_IO_stdin_used+0x1ac75>
or     %al,-0x3a(%ebx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %cl,0x680000d0(%eax)
jmp    85b0f7a <_end+0x4f862a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%esi)
add    0xe(%ebx),%al
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    $0x840000d0,%esp
jmp    8370fae <_end+0x2b865e>
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0x4(%esi,%ecx,1)
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,%ah
rolb   (%eax)
add    %bl,0x7ffffc(%ecx,%ebp,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6f,0x2400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,(%eax)
roll   (%eax)
add    %ah,%al
jmp    83c1002 <_end+0x3086b2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dh,(%eax)
roll   (%eax)
add    %dh,%al
jmp    87a1022 <_end+0x6e86d2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dl,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%esi),%edi
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
push   $0x280000d1
ljmp   $0x0,$0x38fffc
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %ch,0xe(%esi)
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%esp
roll   (%eax)
add    %bh,(%edx,%ebp,8)
cld
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x39f5aefe(%esi)
push   %cs
add    $0x46,%al
or     0xe(%esi,%eax,8),%ecx
add    $0x0,%al
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
mov    $0x480000d1,%eax
ljmp   $0x0,$0x28fffc
add    %al,0xe(%ecx)
or     %al,0xec66202(%esi)
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
aam    $0xd1
add    %al,(%eax)
pop    %esp
ljmp   $0x0,$0xd5fffc
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%esi)
add    0xa(%eax),%bl
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
or     $0xd2,%al
add    %al,(%eax)
add    $0xeb,%al
cld
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jnp    80b111d <_IO_stdin_used+0x1ae19>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %ch,(%edx,%edx,8)
add    %al,(%eax)
xor    $0xeb,%al
cld
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec66102(%esi)
add    $0x0,%al
add    %ch,0x0(%eax)
add    %al,(%eax)
dec    %eax
rolb   %cl,(%eax)
add    %cl,-0x15(%eax)
cld
jmp    *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%ecx
add    %dh,-0x14340000(%edx,%edx,8)
cld
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa510204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     -0x3a(%edx,%ecx,1),%edx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%esp
(bad)
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,0x0(%eax)
add    %al,(%eax)
add    $0xd3,%al
add    %al,(%eax)
sbb    $0xec,%al
cld
pushl  0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
add    %bl,%bh
or     (%esi),%cl
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%esi),%edx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%esi),%esi
push   %cs
adc    %al,-0x3a(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
pusha
roll   %cl,(%eax)
add    %al,-0x13(%eax)
cld
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4302(%ebx)
jns    80b1271 <_IO_stdin_used+0x1af6d>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %al,0x600000d3(%eax)
in     (%dx),%eax
cld
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%ebx),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %esi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %cl,%al
roll   %cl,(%eax)
add    %cl,%al
in     (%dx),%eax
cld
jmp    *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
add    0xa(%edi),%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%ecx
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
cld
roll   %cl,(%eax)
add    %al,(%esi,%ebp,8)
cld
call   *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
jge    80b130b <_IO_stdin_used+0x1b007>
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,(%esp,%edx,8)
add    %al,(%eax)
cmp    $0xee,%al
cld
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
add    0x10(%esi,%ecx,1),%al
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
pop    %eax
aam    $0x0
add    %bl,-0x12(%eax)
cld
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xec67a04(%esi)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %al,-0x11840000(%esp,%edx,8)
cld
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x43100e0a(%edx),%cl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%eax),%ebx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
int3
aam    $0x0
add    %dh,%ah
out    %al,(%dx)
cld
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%ch
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
add    %dl,%ch
add    %al,(%eax)
inc    %eax
out    %eax,(%dx)
cld
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
push   %ebx
or     %dh,%al
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ecx),%esi
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     -0x3a(%ebp),%eax
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
cmp    $0xd5,%al
add    %al,(%eax)
fs
out    %eax,(%dx)
cld
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa490204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     -0x3a(%ecx),%eax
push   %cs
or     $0x46,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bh,-0x2b(%eax)
add    %al,(%eax)
mov    %ch,%bh
cld
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa4c0204(%esi)
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     -0x3a(%ebp),%eax
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %dh,-0x10540000(%ebp,%edx,8)
cld
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x39f590fe(%esi)
push   %cs
add    $0x48,%al
or     -0x3a(%esi),%eax
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
fcom   %st(5)
add    %al,(%eax)
fsubr  %st(7),%st
cld
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa4e0202(%esi)
(bad)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
(bad)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
add    %dl,%dh
add    %al,(%eax)
and    %dh,%al
cld
(bad)
call   80b14f9 <_IO_stdin_used+0x1b1f5>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0x41100e0a(%eax),%ah
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
cmp    %dl,%dh
add    %al,(%eax)
fdiv   %st(0),%st
cld
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x57,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
js     80b153c <_IO_stdin_used+0x1b238>
add    %al,(%eax)
cmp    %dh,%cl
cld
(bad)
clc
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffaf,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
mov    $0xf80000d6,%eax
repnz cld
jmp    *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
push   $0x80ec60a
inc    %ecx
(bad)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%ecx
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebp),%edx
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebx
add    %al,(%eax)
add    %dh,%ah
(bad)
add    %al,(%eax)
sub    $0xf3,%al
cld
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec66f02(%esi)
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
xlat   %ds:(%ebx)
add    %al,(%eax)
push   %eax
repz cld
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xec66f02(%esi)
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sub    $0xd7,%al
add    %al,(%eax)
je     80b1611 <_IO_stdin_used+0x1b30d>
cld
ljmp   *0x1(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x1c0e4304(%esi)
je     80b1643 <_IO_stdin_used+0x1b33f>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
xlat   %fs:(%ebx)
add    %al,(%eax)
in     (%dx),%al
hlt
cld
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
jae    80b1673 <_IO_stdin_used+0x1b36f>
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%esi),%eax
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cwtl
xlat   %ds:(%ebx)
add    %al,(%eax)
or     %dh,%ch
cld
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jns    80b16a9 <_IO_stdin_used+0x1b3a5>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x80,%al
add    %al,(%eax)
add    %bh,0x280000d7(%eax)
cmc
cld
decl   0x2(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1a00e46
lds    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%eax),%ebx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
dec    %eax
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
inc    %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax),%ebp
add    %al,(%eax)
cmp    $0xd8,%al
add    %al,(%eax)
xor    $0xf7,%al
cld
(bad)
cli
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff93,0x3600e4e
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
test   $0xd8,%al
add    %al,(%eax)
enter  $0xfcfa,$0xff
jns    80b179e <_IO_stdin_used+0x1b49a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%esi)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%edi
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
loopne 80b17a6 <_IO_stdin_used+0x1b4a2>
add    %al,(%eax)
adc    %bh,%bl
cld
(bad)
mov    $0x0,%edi
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %ecx
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%edi
push   %cs
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
sbb    $0xd9,%al
add    %al,(%eax)
xchg   %eax,%esp
sti
cld
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ah,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%edx),%edi
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
push   %esp
flds   (%eax)
add    %bl,%ah
sti
cld
incl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%esi),%esi
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
mov    %ds,%ecx
add    %al,(%eax)
xor    $0xfc,%al
cld
incl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0x0(%eax),%edx
add    %al,(%eax)
mov    $0x580000d9,%eax
cld
cld
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x56300e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edi),%ebx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
or     $0xda,%al
add    %al,(%eax)
je     80b18fa <_IO_stdin_used+0x1b5f6>
cld
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x50,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %cl,-0x26(%eax)
add    %al,(%eax)
cwtl
cld
cld
pushl  0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %esi
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa013803,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x44,%al
or     (%eax),%esp
add    %al,(%eax)
add    %bh,-0x26(%eax)
add    %al,(%eax)
call   690b166a <_end+0x60ff8d1a>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
add    0xe(%edx),%bl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pushf
fiaddl (%eax)
add    %ah,(%esi,%edi,8)
cld
(bad)
call   80b1995 <_IO_stdin_used+0x1b691>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff98,0x2600e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
(bad)
add    %al,(%eax)
aam    $0xfe
cld
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %dh,%al
fiaddl (%eax)
add    %dl,%al
(bad)
cld
(bad)
fildl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9c,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
dec    %eax
fildl  (%eax)
add    %bl,-0x1(%eax)
cld
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ch,-0x25(%eax)
add    %al,(%eax)
push   $0x56fffcff
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,-0x740000(%ebx,%ebx,8)
cld
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
in     $0xdb,%al
add    %al,(%eax)
fdivr  %st,%st(7)
cld
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,(%esp,%ebx,8)
add    %al,(%eax)
fdivr  %st,%st(7)
cld
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ah,(%esp,%ebx,8)
add    %al,(%eax)
fdivr  %st,%st(7)
cld
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %al,0x0(%esp,%ebx,8)
add    %bl,%ah
(bad)
cld
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dh,0xe(%esi)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
jo     80b1b3a <_IO_stdin_used+0x1b836>
add    %al,(%eax)
add    %al,(%eax)
std
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,0x100000dc(%eax)
add    %bh,%ch
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,0x100000dc(%eax)
add    %bh,%ch
pushl  0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bl,%ah
faddl  (%eax)
add    %ah,-0x3(%eax,%eax,1)
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,%al
faddl  (%eax)
add    %ah,0x0(%eax)
std
decl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x5c0000(,%ebx,8)
std
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sbb    %bl,%ch
add    %al,(%eax)
pop    %eax
add    %bh,%ch
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %bh,(%eax)
fldl   (%eax)
add    %ch,0x0(%eax)
std
lcall  *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0x10(%esi,%ecx,1),%al
inc    %ecx
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
fldl   (%eax)
add    %dl,0x48fffd(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
jae    80b1c87 <_IO_stdin_used+0x1b983>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    0xb00000dd,%al
add    %bh,%ch
jmp    *0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,%al
fldl   (%eax)
add    %ch,(%eax)
add    %edi,%ebp
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
sbb    %al,(%eax)
add    %al,(%eax)
or     $0xde,%al
add    %al,(%eax)
test   %al,(%ecx)
std
lcall  *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    %bl,%dh
add    %al,(%eax)
mov    %al,(%ecx)
std
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %cl,-0x22(%eax)
add    %al,(%eax)
cwtl
add    %edi,%ebp
call   *%ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e43
xlat   %ds:(%ebx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%esi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,0x30c0000(%esi,%ebx,8)
std
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2400e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,(%edi,%ebx,8)
add    %al,(%eax)
test   %al,(%ebx)
std
ljmp   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %edi,0xa(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edx),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   %esp
fild   (%eax)
add    %ch,%ah
add    %ebp,%edi
call   *%edx
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4a,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,0x78c0000(%edi,%ebx,8)
std
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,-0x67ffff21(%eax)
pop    %es
std
lcall  *0x0
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %bh,0x7a40000(%edi,%ebx,8)
std
decl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
push   $0x43100e0a
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
inc    %edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
add    $0xe0,%al
add    %al,(%eax)
in     (%dx),%al
pop    %es
std
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
push   %edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,(%eax,%eiz,8)
add    %al,(%eax)
cld
pop    %es
std
decl   0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
loopne 80b1f3f <_IO_stdin_used+0x1bc3b>
add    %ah,(%eax)
or     %bh,%ch
incl   0x2(%ebp)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %esp
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa016403,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x42,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
and    $0x0,%al
add    %al,-0x300002f6(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0xc0000000
loopne 80b1faf <_IO_stdin_used+0x1bcab>
add    %dl,(%eax)
or     %ebp,%edi
call   *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x61300e4e
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%ebp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
sub    $0xe1,%al
add    %al,(%eax)
je     80b2029 <_IO_stdin_used+0x1bd25>
std
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%esi)
push   %cs
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ecx),%ebp
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
fs
loope  80b2053 <_IO_stdin_used+0x1bd4f>
add    %ch,0x28fffd(%ebx,%ecx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %al,0xbbc0000(%ecx,%eiz,8)
std
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6d,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4c,%al
or     0xe(%eax),%ecx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
fsub   %st(1),%st
add    %al,(%eax)
or     %cl,0xaeff(,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6e300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bl,(%eax)
loop   80b2107 <_IO_stdin_used+0x1be03>
add    %bh,0xc(%eax)
std
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
jo     80b2140 <_IO_stdin_used+0x1be3c>
add    %al,(%eax)
add    %cl,0x203fffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
push   %cs
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dh,0xecc0000(%edx,%eiz,8)
std
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2900e46
jp     80b21c9 <_IO_stdin_used+0x1bec5>
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
addb   $0x0,(%eax)
add    %bh,%al
loop   80b21e7 <_IO_stdin_used+0x1bee3>
add    %bh,%al
adc    %edi,%ebp
jmp    *%ecx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9f,0x2400e4e
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
push   %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esi
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
jl     80b224d <_IO_stdin_used+0x1bf49>
add    %al,(%eax)
fs
adc    %ebp,%edi
incl   (%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e4e
add    %cx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
shl    $0x0,%bl
add    %ah,(%eax)
push   %ss
std
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jp     80b22d1 <_IO_stdin_used+0x1bfcd>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %ah,%al
jecxz  80b22cf <_IO_stdin_used+0x1bfcb>
add    %al,0x16(%eax)
std
(bad)
ljmp   $0xe41,$0x6
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2e00e46
movsl  %ds:(%esi),%es:(%edi)
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
and    $0xe4,%al
add    %al,(%eax)
in     (%dx),%al
sbb    $0xfd,%al
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
insl   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
add    %al,(%eax)
add    %al,0x0(%esp,%eiz,8)
add    %cl,0x188fffd(,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xe(%edx,%ecx,1),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
rorb   (%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
nop
in     $0x0,%al
add    %dl,0x1e(%eax)
std
incl   0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
in     $0xa,%al
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esp
add    %al,(%eax)
add    %dl,%al
in     $0x0,%al
add    %ah,0x1f(%eax)
std
pushl  0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
dec    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
hlt
in     $0x0,%al
add    %ch,0x8ffffd(%edi,%ebx,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2400e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,(%eax)
in     $0x0,%eax
add    %al,(%eax)
and    %bh,%ch
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ebx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,-0x1b(%eax)
add    %al,(%eax)
and    %ah,(%eax)
std
call   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x0(%ebp,%eiz,8)
add    %bl,(%eax,%eiz,1)
std
incl   0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x55600e4e
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
jae    80b2497 <_IO_stdin_used+0x1c193>
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x540000e5,%esp
and    %edi,%ebp
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %dh,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
call   800b25be <_end+0x77ff9c6e>
and    %edi,%ebp
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,(%eax)
out    %al,$0x0
add    %cl,0x2afffd21(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,(%eax)
out    %al,$0x0
add    %bl,0x19fffd21(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %cl,-0x1a(%eax)
add    %al,(%eax)
cwtl
and    %edi,%ebp
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
push   %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
jnp    80b2572 <_IO_stdin_used+0x1c26e>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %dl,0x200000e6(%eax)
and    %ch,%bh
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x221c0000(%esi,%eiz,8)
std
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x180000e6,%eax
and    %ch,%bh
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %esi
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x28,%al
add    %al,(%eax)
add    %bl,%al
out    %al,$0x0
add    %ch,(%eax)
and    %ch,%bh
ljmp   *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
pop    %esi
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
add    $0xe7,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
and    %ch,%bh
decl   0x0(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%edi)
addl   $0x46,(%ebx)
push   %cs
mov    $0x1,%al
add    0xa(%edx),%ch
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%edi,%eiz,8)
add    %al,(%eax)
int3
and    %ch,%bh
incl   0x0
add    %al,(%eax)
add    %al,0x0(%eax)
add    %al,(%eax)
dec    %eax
out    %eax,$0x0
add    %cl,%al
and    %ch,%bh
lcall  *0x1(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x2e00e51
or     %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    %fs,%edi
add    %al,(%eax)
in     $0x23,%al
std
(bad)
cmp    (%edx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
add    0xa(%edx),%ch
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,0x0(%eax)
add    %al,(%eax)
(bad)
out    %eax,$0x0
add    %ch,%ah
and    $0x419fffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x3,0x2f00e51
inc    %edx
add    (%edx),%cl
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
or     %ch,%al
add    %al,(%eax)
enter  $0xfd29,$0xff
rolb   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4e02(%ebx)
add    0x41080e0a(%edx),%al
ret
push   %cs
add    $0x41,%al
or     0x0(%eax),%ecx
add    %al,(%eax)
sub    $0xe8,%al
add    %al,(%eax)
je     80b2748 <_IO_stdin_used+0x1c444>
std
(bad)
cmp    %al,(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
dec    %ebx
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
js     80b274e <_IO_stdin_used+0x1c44a>
add    %al,(%eax)
push   $0x5cfffd2b
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ch,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
call   33a72796 <_end+0x2b9b9e46>
std
lcall  *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6a,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
in     $0xe8,%al
add    %al,(%eax)
cld
sub    %ebp,%edi
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
adc    %ch,%cl
add    %al,(%eax)
add    %ch,0x2aff(,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
cmp    $0xe9,%al
add    %al,(%eax)
add    $0x2c,%al
std
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,0x0(%ecx,%ebp,8)
add    %al,(%esp,%ebp,1)
std
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bh,0x0(%ecx,%ebp,8)
add    %al,(%esp,%ebp,1)
std
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %bl,0x2c040000(%ecx,%ebp,8)
std
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bh,0x2c040000(%ecx,%ebp,8)
std
ljmp   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
cld
jmp    347f28ee <_end+0x2c739f9e>
std
ljmp   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sub    %ch,%dl
add    %al,(%eax)
js     80b2946 <_IO_stdin_used+0x1c642>
std
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %cl,-0x16(%eax)
add    %al,(%eax)
mov    %ch,0xfdff(,%edi,8)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffb8,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
mov    %ch,%dl
add    %al,(%eax)
dec    %eax
sub    $0x20fffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,0x480000ea(%eax)
sub    $0x47fffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
jbe    80b29b9 <_IO_stdin_used+0x1c6b5>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %cl,%al
ljmp   $0xfffd,$0x2d780000
cmp    (%ecx),%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8b,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
and    %ch,%bl
add    %al,(%eax)
pusha
cs
std
(bad)
call   80b2a1d <_IO_stdin_used+0x1c719>
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e43
test   %cl,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ah,-0x15(%eax)
add    %al,(%eax)
adc    %dh,(%ebx)
std
(bad)
cmp    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%ebx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    %gs,%ebx
add    %al,(%eax)
and    $0x33,%al
std
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
mov    $0x280000eb,%eax
xor    %ebp,%edi
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bl,%al
jmp    80b2ac7 <_IO_stdin_used+0x1c7c3>
add    %bh,(%eax)
xor    %ebp,%edi
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
add    $0xec,%al
add    %al,(%eax)
cmp    $0x33,%al
std
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %esp
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
xor    %ch,%ah
add    %al,(%eax)
pusha
xor    %ebp,%edi
call   *%eax
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x70400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jo     80b2b4a <_IO_stdin_used+0x1c846>
add    %al,(%eax)
lock xor $0xfd,%al
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,0xec(%eax)
xor    $0x2efffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
pop    %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dh,0x100000ec(%eax)
xor    $0x46fffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
fsubr  %st,%st(4)
add    %al,(%eax)
xor    $0x35,%al
std
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %edi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %bh,%ah
in     (%dx),%al
add    %al,(%eax)
inc    %esp
xor    $0x63fffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %ebx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
sub    %ch,%ch
add    %al,(%eax)
mov    %dh,0x4cfffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
jnp    80b2c39 <_IO_stdin_used+0x1c935>
or     %al,-0x3d(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %cl,-0x13(%eax)
add    %al,(%eax)
mov    $0xdcfffd35,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
mov    $0xa,%cl
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
test   %ch,%ch
add    %al,(%eax)
pop    %esp
ss
std
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jge    80b2c95 <_IO_stdin_used+0x1c991>
or     %al,0xe(%ebx,%eax,8)
add    $0x34,%al
add    %al,(%eax)
add    %ah,0x368c0000(%ebp,%ebp,8)
std
decl   0x1(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
add    -0x3cbeeff2(%edx,%ecx,1),%bl
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,%ah
in     (%dx),%eax
add    %al,(%eax)
in     $0x37,%al
std
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
out    %al,(%dx)
add    %al,(%eax)
call   640b2a34 <_end+0x5bffa0e4>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
arpl   %cx,(%edx)
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,(%esi,%ebp,8)
add    %al,(%eax)
sbb    $0x38,%al
std
lcall  *0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
arpl   %cx,(%edx)
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x48,%al
or     0xe(%ecx),%ebx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,-0x12(%eax)
add    %al,(%eax)
push   %eax
cmp    %bh,%ch
(bad)
jl     80b2d56 <_IO_stdin_used+0x1ca52>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
add    0xa(%ebp),%dl
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x46,%al
or     0xe(%eax),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
mov    %gs,%esi
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
cmp    %bh,%ch
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jge    80b2d9d <_IO_stdin_used+0x1ca99>
or     %al,0xe(%ebx,%eax,8)
add    $0x28,%al
add    %al,(%eax)
add    %ch,0x38d40000(%esi,%ebp,8)
std
(bad)
jl     80b2da2 <_IO_stdin_used+0x1ca9e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
add    0xa(%ebp),%dl
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x46,%al
or     0xe(%eax),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
fsubr  %st(6),%st
add    %al,(%eax)
sub    %bh,(%ecx)
std
(bad)
jl     80b2dce <_IO_stdin_used+0x1caca>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4e02(%ebx)
add    0xe(%edx,%ecx,1),%dl
or     %al,-0x3d(%esi)
push   %cs
add    $0x47,%al
or     0xe(%eax),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
dec    %eax
add    %al,(%eax)
add    %al,(%edi,%ebp,8)
add    %al,(%eax)
jl     80b2e2f <_IO_stdin_used+0x1cb2b>
std
ljmp   *0x1(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,-0x6ff1b9fc(%ebx)
add    %eax,(%edx)
pop    %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
xchg   %eax,%edx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   %eax
out    %eax,(%dx)
add    %al,(%eax)
mov    0x8afffd3a,%al
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa0,0x2500e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dl,-0xfffff11(%eax)
cmp    %ebp,%edi
lcall  *(%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1e00e46
popa
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
lea    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ebx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
call   c00b2fc8 <_end+0xb7ffa678>
cmp    $0xfd,%al
jmp    *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
mov    $0xa,%bl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sub    %dh,%al
add    %al,(%eax)
push   $0x2cfffd3d
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
int3
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
push   $0x580000f0
ds
std
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
movsb  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
test   $0xf0,%al
add    %al,(%eax)
mov    %bh,(%edi)
std
jmp    *%esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1f00e46
xchg   %eax,%ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
call   400b30c9 <_end+0x37ffa779>
inc    %ecx
std
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
data16
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
sbb    %dh,%cl
add    %al,(%eax)
mov    %al,-0x3(%ecx)
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x7ff1b1fe(%ebx)
add    %esi,0xa(%esi)
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x47,%al
or     0xe(%ebx),%eax
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
sub    %al,(%eax)
add    %al,(%eax)
inc    %esp
icebp
add    %al,(%eax)
mov    $0x56fffd41,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jae    80b3051 <_IO_stdin_used+0x1cd4d>
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x45,%al
or     0xe(%edi),%ecx
or     %al,-0x3d(%esi)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
jo     80b304f <_IO_stdin_used+0x1cd4b>
add    %al,(%eax)
lock inc %ecx
std
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
pop    %esp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %dl,0xf1(%eax)
inc    %edx
std
ljmp   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
icebp
add    %al,(%eax)
push   %esp
inc    %edx
std
jmp    *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %ebp
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x40,%al
add    %al,(%eax)
add    %cl,%ah
icebp
add    %al,(%eax)
fs
inc    %edx
std
jmp    *0x2(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1800e43
jl     80b30e1 <_IO_stdin_used+0x1cddd>
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %dl,(%eax)
repnz add %al,(%eax)
nop
inc    %esp
std
(bad)
mov    $0x0,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%eax
add    %bl,-0xe(%eax)
add    %al,(%eax)
or     %al,-0x3(%ebp)
(bad)
mov    $0x0,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
outsl  %ds:(%esi),(%dx)
or     (%esi),%cl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %ah,-0x7fffff0e(%eax)
inc    %ebp
std
call   *0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7c,0x2500e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %bl,%ah
repnz add %al,(%eax)
in     $0x45,%al
std
(bad)
jnp    80b31d2 <_IO_stdin_used+0x1cece>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
jg     80b31f3 <_IO_stdin_used+0x1ceef>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edi),%ebx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %ah,(%eax)
repz add %al,(%eax)
and    %al,-0x3(%esi)
decl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff80,0x2300e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,0x0(%ebx,%esi,8)
add    %dh,-0x3(%esi,%eax,2)
pushl  0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
jo     80b3251 <_IO_stdin_used+0x1cf4d>
add    %al,(%eax)
loopne 80b32a8 <_IO_stdin_used+0x1cfa4>
std
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
push   %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,-0xfffff0d(%eax)
inc    %esi
std
lcall  *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %dh,-0xfffff0d(%eax)
inc    %esi
std
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff81,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,(%eax)
hlt
add    %al,(%eax)
dec    %eax
inc    %edi
std
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff81,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
pusha
hlt
add    %al,(%eax)
mov    0x23fffd47,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %edi
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x1c,%al
add    %al,(%eax)
add    %al,-0x4fffff0c(%eax)
inc    %edi
std
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %esi
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x1c,%al
add    %al,(%eax)
add    %ah,-0x3fffff0c(%eax)
inc    %edi
std
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %esi
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x1c,%al
add    %al,(%eax)
add    %al,%al
hlt
add    %al,(%eax)
rolb   -0x3(%edi)
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %esi
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x1c,%al
add    %al,(%eax)
add    %ah,%al
hlt
add    %al,(%eax)
loopne 80b3419 <_IO_stdin_used+0x1d115>
std
jmp    *(%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4e02(%ebx)
dec    %esi
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x1c,%al
add    %al,(%eax)
add    %al,(%eax)
cmc
add    %al,(%eax)
lock inc %edi
std
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
push   %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,(%eax)
cmc
add    %al,(%eax)
add    %cl,-0x3(%eax)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
dec    %esp
cmc
add    %al,(%eax)
and    $0x48,%al
std
(bad)
sti
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcd,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,0x48e40000(%ebp,%esi,8)
std
(bad)
out    %eax,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff9e,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    $0x0,%al
add    %al,(%eax)
in     $0xf5,%al
add    %al,(%eax)
jl     80b351f <_IO_stdin_used+0x1d21b>
std
lcall  *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
pop    %eax
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0xf6,%al
add    %al,(%eax)
in     (%dx),%al
dec    %ecx
std
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
testb  $0x0,(%eax)
call   6c0b3266 <_end+0x63ffa916>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ecx),%bl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %bl,0x0(%esi,%esi,8)
add    %ah,(%edx,%ecx,2)
std
decl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0xf6,%ah
add    %al,(%eax)
sbb    $0x4b,%al
std
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%eax)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
loopne 80b35c4 <_IO_stdin_used+0x1d2c0>
add    %al,(%eax)
xor    %cl,-0x3(%ebx)
(bad)
fildl  (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
inc    %esp
add    %al,(%eax)
add    %ah,(%eax)
testl  $0xfd4bd000,(%eax)
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%ecx),%dl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax),%edx
add    %al,(%eax)
push   $0x180000f7
dec    %esp
std
jmp    *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x66,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%esp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,0x4c640000(%edi,%esi,8)
std
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%eax)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
call   900b37d0 <_end+0x87ffae80>
dec    %esp
std
decl   (%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,%ah
testl  $0xfd4c8400,(%eax)
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    %bh,%al
add    %al,(%eax)
orb    $0x21,-0x1(%ebp,%edi,8)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
push   %eax
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %dh,(%eax)
clc
add    %al,(%eax)
nop
dec    %esp
std
pushl  0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4d,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
test   %bh,%al
add    %al,(%eax)
mov    $0x2efffd4c,%esp
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x5800e46
pop    %ebx
add    (%edx),%ecx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
enter  $0xf8,$0x0
test   $0x52,%al
std
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx),%al
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
inc    %eax
add    %al,(%eax)
add    %bh,%ah
clc
add    %al,(%eax)
les    -0x3(%edx),%edx
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
data16
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebp),%ebp
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %al,-0x7(%eax)
add    %al,(%eax)
add    %dl,-0x3(%ebx)
jmp    *%esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffbe,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %al,-0x4fffff07(%eax)
push   %esp
std
jmp    *0x41000000(%esp,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x78,0x3600e43
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
xchg   %eax,%ebx
add    %ecx,(%edx)
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,%al
stc
add    %al,(%eax)
or     %bl,-0x3(%ecx)
jmp    *0x1(%ecx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,(%eax)
cli
add    %al,(%eax)
pusha
pop    %edx
std
jmp    *%ebp
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa9,0x2500e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %cl,-0x7ffff06(%eax)
pop    %esp
std
lcall  *0x1(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xa(%ebp),%ah
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
orb    $0xe,(%edx)
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%esi),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%edi
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
clc
cli
add    %al,(%eax)
sub    %bl,-0x3(%esi)
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xe(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   $0x24000000
sti
add    %al,(%eax)
dec    %esp
pop    %esi
std
pushl  0x1(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff85,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
inc    %esi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
nop
sti
add    %al,(%eax)
pusha
pop    %edi
std
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
sar    %bl
add    %al,(%eax)
loopne 80b3b21 <_IO_stdin_used+0x1d81d>
std
incl   (%edx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
push   %ecx
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %cl,(%eax)
cld
add    %al,(%eax)
mov    $0x7efffd60,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
imul   $0xe,(%edx),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%esi),%edi
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,0x0(%esp,%edi,8)
add    %dh,%ah
pusha
std
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,0x0(%esp,%edi,8)
add    %dh,%ah
pusha
std
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
popa
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %cl,0x61140000(%esp,%edi,8)
std
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xe(%edx,%ecx,1),%dh
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0xfc,%al
add    %al,(%eax)
andb   $0xff,-0x3(%ecx)
xor    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x30,%al
add    %al,(%eax)
add    %dl,%al
cld
add    %al,(%eax)
nop
popa
std
pushl  0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1aefc(%ebx)
add    (%edx),%al
pop    %ebx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %al,0x61dc0000(,%edi,8)
std
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
addr16 push %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x44,%al
add    %al,(%eax)
add    %ah,0x61ec0000(,%edi,8)
std
call   *%ebx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4e04(%ebx)
add    0xa(%ecx),%bl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp,%edi,8)
add    %al,0x1bfffd(%edx,%eiz,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%ch
add    %dl,-0x3d00029e(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x7ff1bcfc(%ebx)
add    %eax,(%edx)
jbe    80b3c99 <_IO_stdin_used+0x1d995>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x280000fd,%eax
arpl   %di,%bp
ljmp   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x74400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ah,0x0(%eax,%eax,1)
add    %bh,%al
std
add    %al,(%eax)
cwtl
arpl   %di,%bp
(bad)
cli
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6e,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebx),%edi
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,-0x2(%eax)
add    %al,(%eax)
xor    %ah,-0x1(%ebp,%edi,8)
sub    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xc(%esi,%ecx,1)
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
mov    %?,%esi
add    %al,(%eax)
xor    $0x64,%al
std
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x400000fe(%eax)
fs
std
lcall  *0x0
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
mov    $0xfe,%ah
add    %al,(%eax)
dec    %esp
fs
std
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,%ah
incb   (%eax)
add    %bl,-0x3(%esp,%eiz,2)
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,%ah
incb   (%eax)
add    %ch,-0x3(%esp,%eiz,2)
pushl  (%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dl,(%edi,%edi,8)
add    %al,(%eax)
jl     80b3e6a <_IO_stdin_used+0x1db66>
std
ljmp   *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
bound  %ecx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,(%edi,%edi,8)
add    %al,(%eax)
mov    %fs,-0x1(%ebp,%edi,8)
and    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
dec    %edi
push   %cs
or     %al,0xe(%ebx,%eax,8)
add    $0x10,%al
add    %al,(%eax)
add    %dl,0x0(%edi,%edi,8)
add    %bl,0x3fffd(%esp,%eiz,2)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %ch,-0x1(%eax)
add    %al,(%eax)
cwtl
fs
std
(bad)
cld
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%ecx),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
imul   $0xc341100e,(%edx),%ecx
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
push   $0xc4000000
incl   (%eax)
add    %bh,0x295fffd(,%eiz,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x25,0x3600e4e
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%esi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0x0(%eax,%eax,1),%edx
add    %dh,(%eax)
add    %al,(%ecx)
add    %dh,0x67(%eax)
std
(bad)
cmp    $0x1,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
push   %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %cl,0x58000100(%eax)
push   $0x86fffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xa(%ebx),%bl
push   %cs
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
rolb   (%eax)
add    %eax,(%eax)
mov    0x30fffd68,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   $0xe
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %dh,%al
add    %al,(%ecx)
add    %dh,-0x2f000298(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x70400e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
xor    %al,(%ecx)
add    %eax,(%eax)
inc    %eax
push   $0xfffffffd
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jge    80b4041 <_IO_stdin_used+0x1dd3d>
or     %al,0xe(%ebx,%eax,8)
add    $0x28,%al
add    %al,(%eax)
add    %dl,0x1(%eax)
add    %eax,(%eax)
jo     80b40ac <_IO_stdin_used+0x1dda8>
std
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x300e4e02(%ebx)
add    0xa(%esi),%al
push   %cs
or     %al,-0x3d(%esi)
push   %cs
add    $0x45,%al
or     0xe(%eax),%ecx
or     %al,-0x3d(%ebx)
push   %cs
add    $0x0,%al
sbb    $0x0,%al
add    %al,(%eax)
jl     80b406b <_IO_stdin_used+0x1dd67>
add    %eax,(%eax)
mov    $0x6a,%ah
std
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
jge    80b408d <_IO_stdin_used+0x1dd89>
or     %al,0xe(%ebx,%eax,8)
add    $0x44,%al
add    %al,(%eax)
add    %bl,0x6ae40001(%ecx,%eax,1)
std
pushl  0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0x46100e0a(%ecx),%bl
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%eax),%ecx
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
in     $0x1,%al
add    %eax,(%eax)
pop    %esp
imul   $0xffffffff,%ebp,%edi
imul   $0x41000000,(%eax),%eax
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    (%ecx),%al
add    %ah,0x69fffd6b(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
pop    %edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %bh,(%edx,%eax,1)
add    %eax,(%eax)
in     $0x6b,%al
std
decl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,0x2(%eax)
add    %eax,(%eax)
or     %ch,-0x1(%ebp,%edi,8)
addb   $0x0,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x63,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %ah,0x6c4c0001(%edx,%eax,1)
std
jmp    *%esi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x49,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
in     $0x2,%al
add    %eax,(%eax)
cld
insb   (%dx),%es:(%edi)
std
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
add    $0x3,%al
add    %eax,(%eax)
sub    $0x6d,%al
std
(bad)
mov    $0x0,%ebp
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4604(%esi)
addl   $0xffffff98,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %al,0x1(%ebx,%eax,1)
add    %ch,0x281fffd(%ebp,%ebp,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x58,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
(bad)  (%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
stos   %eax,%es:(%edi)
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    $0x3,%ah
add    %eax,(%eax)
int3
outsl  %ds:(%esi),(%dx)
std
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%esi)
dec    %ebp
or     (%esi),%cl
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edi),%ecx
or     %al,-0x3a(%ebx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %ah,%al
add    (%ecx),%eax
add    %dl,%al
outsl  %ds:(%esi),(%dx)
std
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%esi)
dec    %ebp
or     (%esi),%cl
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edi),%ecx
or     %al,-0x3a(%ebx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %cl,(%esp,%eax,1)
add    %eax,(%eax)
aam    $0x6f
std
jmp    *0x1(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffda,0x2500e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
push   %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x1(%esp,%eax,1)
add    %bl,%ah
jo     80b4354 <_IO_stdin_used+0x1e050>
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %bh,0x4(%eax)
add    %eax,(%eax)
fdivs  -0x3(%eax)
lcall  *(%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x57400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
arpl   %cx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
rolb   (%ecx,%eax,1)
add    %ah,0x5efffd71(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
push   %esi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cld
add    $0x1,%al
add    %dl,%ah
jno    80b43ec <_IO_stdin_used+0x1e0e8>
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4302(%esi)
gs
push   %cs
or     %al,0xe(%esi,%eax,8)
add    $0x3c,%al
add    %al,(%eax)
add    %bl,0x71e40001(,%eax,1)
std
dec    %edi
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffa5,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
pop    %esp
add    $0x72740001,%eax
std
incl   0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,-0x77fffefb(%eax)
jb     80b4478 <_IO_stdin_used+0x1e174>
pushl  0x1(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
jbe    80b449b <_IO_stdin_used+0x1e197>
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ecx),%edi
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edx),%ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%esp
add    %al,(%eax)
add    %ah,%al
add    $0x73b00001,%eax
std
decl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%ebp),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
add    $0x6,%al
add    %eax,(%eax)
fdivl  -0x3(%ebx)
ljmp   *0x6(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%edx
add    %al,(%eax)
add    %al,0x1(%esi,%eax,1)
add    %cl,(%edx,%edi,2)
std
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x6(%eax)
add    %eax,(%eax)
sbb    %bh,-0x3(%edx)
pushl  (%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4e02(%ebx)
dec    %esp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%edi),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %al,0x7a2c0001(%esi,%eax,1)
std
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
add    0xa(%edi),%ah
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx),%esp
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %cl,%ah
push   %es
add    %eax,(%eax)
test   %bh,-0x3(%edx)
lcall  *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
add    0xa(%ebp),%al
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %ebp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%edi,%eax,1)
add    %eax,(%eax)
fdivrl -0x3(%edx)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %eax
pop    %es
add    %eax,(%eax)
loopne 80b46ac <_IO_stdin_used+0x1e3a8>
std
(bad)
out    %al,(%dx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffde,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
addb   $0x1,(%edi)
add    %dl,0x6dfffd7b(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx),%esp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
mov    $0xc8000107,%eax
jnp    80b46a8 <_IO_stdin_used+0x1e3a4>
lcall  *0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
lock pop %es
add    %eax,(%eax)
xor    %bh,-0x1(%ebp,%edi,8)
jl     80b46e6 <_IO_stdin_used+0x1e3e2>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%cl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %dl,0x0(%eax)
add    %al,(%eax)
sub    %cl,(%eax)
add    %eax,(%eax)
js     80b4796 <_IO_stdin_used+0x1e492>
std
pushl  0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x58,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,0x1(%eax,%ecx,1)
add    %ah,0x54fffd(%esp,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x110e4304(%esi)
add    0xe(%ebp),%al
adc    %al,-0x3a(%ebx)
push   %cs
or     $0x44,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
push   %esp
add    %al,(%eax)
add    %dh,-0x2ffffef8(%eax)
jl     80b47a0 <_IO_stdin_used+0x1e49c>
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff92,0x2300e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edi),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
or     %cl,(%ecx)
add    %eax,(%eax)
dec    %eax
jge    80b47f8 <_IO_stdin_used+0x1e4f4>
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff91,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x54,%al
add    %al,(%eax)
add    %al,0x1(%ecx,%ecx,1)
add    %bh,0x1affffd(%ebp,%edi,2)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x18,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,0x7f140001(%ecx,%ecx,1)
std
pushl  0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xa(%edx),%al
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
push   %eax
add    %al,(%eax)
add    %cl,%al
or     %eax,(%ecx)
add    %ch,0x7f(%eax)
std
dec    %ebp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %bl,(%edx,%ecx,1)
add    %eax,(%eax)
in     $0x7f,%al
std
(bad)
add    %al,%ds:(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     80b4937 <_IO_stdin_used+0x1e633>
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0xa(%eax)
add    %eax,(%eax)
lock jg 80b4940 <_IO_stdin_used+0x1e63c>
incl   (%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
or     %fs:(%ecx),%al
add    %ch,%ah
jg     80b4954 <_IO_stdin_used+0x1e650>
incl   0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x6b,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%eax
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax)
add    %al,(%eax)
mov    $0x2800010a,%eax
cmp    $0xff,%ch
scas   %es:(%edi),%al
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
testl  $0x41140e0a,(%ebx)
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cld
or     (%ecx),%al
add    %dl,0x7afffd(%ebp,%eax,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0xa(%eax),%bl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
xor    $0xb,%al
add    %eax,(%eax)
faddl  0xd0fffd(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x500e4304(%ebx)
add    0xa(%esi),%dh
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x1(%ebx,%ecx,1)
add    %dh,-0x3(%esi,%eax,4)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,0x7000010b(%eax)
xchg   %bh,%ch
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x7993ffff(%ebx,%ecx,1)
std
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,0x6800010b(%eax)
xchg   %bh,%ch
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,-0x799bffff(%ebx,%ecx,1)
std
incl   (%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,%al
or     (%ecx),%eax
add    %ah,-0x7a(%eax)
std
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %ah,%ah
or     (%ecx),%eax
add    %bl,-0x3(%esi,%eax,4)
(bad)
jns    80b4ada <_IO_stdin_used+0x1e7d6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%dl
adc    %cl,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%ebx),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
sub    $0xc,%al
add    %eax,(%eax)
xchg   %eax,%esp
xchg   %bh,%ch
decl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %dl,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%esp
push   %cs
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
push   $0xe800010c
xchg   %bh,%ch
call   *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x52,0x2300e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
test   $0xc,%al
add    %eax,(%eax)
dec    %eax
xchg   %edi,%ebp
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %cl,%al
or     $0x1,%al
add    %ch,-0x79(%eax)
std
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x2c,%al
add    %al,(%eax)
add    %ch,%al
or     $0x1,%al
add    %cl,0x6dfffd87(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edi
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %bl,(%eax)
or     $0x87c80001,%eax
std
ljmp   *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x59500e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
imul   $0xc343140e,(%edx),%ecx
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %dh,0xd(%eax)
add    %eax,(%eax)
mov    0xfafffd88,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x55400e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
ret
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %al,%ah
or     $0x894c0001,%eax
std
incl   0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
push   %ebp
or     (%esi),%cl
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ecx),%ebx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
or     $0xe,%al
add    %eax,(%eax)
xchg   %eax,%esp
mov    %edi,%ebp
incl   0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %dl,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edx
push   %cs
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
dec    %eax
push   %cs
add    %eax,(%eax)
call   da0b4ac6 <_end+0xd1ffc176>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x55600e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pusha
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,0xe(%esi,%eax,8)
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %dh,-0x75a3ffff(%esi,%ecx,1)
std
decl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffcc,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
pop    %esp
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
add    %al,0xc000000(%eax)
sgdtl  (%eax)
push   %esp
mov    %ebp,%edi
ljmp   *0x1(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xa,0x6d600e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx,%ecx,1),%ecx
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
push   %cs
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,-0x7ffffef1(%eax)
mov    %?,%ebp
pushl  0x0
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sgdtl  (%eax)
lods   %ds:(%esi),%al
mov    %?,%ebp
decl   0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x54,0x2400e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
in     $0xf,%al
add    %eax,(%eax)
cld
mov    %?,%ebp
incl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
outsb  %ds:(%esi),(%dx)
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx),%eax
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,(%eax,%edx,1)
add    %eax,(%eax)
inc    %eax
(bad)
stc
incl   0x0(%ecx,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x29,0x3500e4e
add    %ecx,(%esi)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bl,0x1(%eax,%edx,1)
add    %dl,0x565fffd(,%ecx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e43
pop    %ebx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
jp     80b4f91 <_IO_stdin_used+0x1ec8d>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
inc    %eax
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %cl,%ah
adc    %al,(%ecx)
add    %dl,(%edx,%edx,4)
std
jmp    *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
imul   $0xe,(%edx),%ecx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ebx),%eax
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x49,%al
or     0xe(%edx,%ecx,1),%edx
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   $0x24000000
adc    %eax,(%ecx)
add    %bl,0x207fffd(%edx,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x51,0x2700e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
inc    %eax
add    %al,(%eax)
add    %dl,0x40000111(%eax)
xchg   %eax,%esp
std
ljmp   *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    0xa(%esi),%cl
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4c,%al
or     0xa(%ebp),%ecx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x4a,%al
or     0xe(%edx,%ecx,1),%ecx
or     %al,-0x3d(%esi)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bh,(%eax)
add    %al,(%eax)
add    %dl,%ah
adc    %eax,(%ecx)
add    %ch,0x86fffd(%esp,%edx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
dec    %edx
or     (%esi),%cl
or     $0x46,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%edx),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
jl     80b50fa <_IO_stdin_used+0x1edf6>
add    %al,(%eax)
adc    %dl,(%edx)
add    %eax,(%eax)
add    %dl,0x1e5fffd(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    0xa(%esi),%bl
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edi
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%edx,%ecx,1),%ebx
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edx),%esp
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%esi),%ecx
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %dl,0x70000112(%eax)
xchg   %eax,%esi
std
call   *0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jae    80b51a7 <_IO_stdin_used+0x1eea3>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
movsl  %ds:(%esi),%es:(%edi)
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0x0(%eax,%eax,1),%edx
add    %bl,%al
adc    (%ecx),%al
add    %cl,%al
xchg   %eax,%edi
std
pushl  (%ebx)
add    $0x41000000,%eax
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
bound  %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
push   %esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
xor    %dl,(%ebx)
add    %eax,(%eax)
mov    $0x9c,%al
std
(bad)
mov    $0x0,%esp
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
xor    %al,(%edx)
xchg   %eax,%esp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
pusha
adc    (%ecx),%eax
add    %al,-0x63(%eax)
std
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %dh,0x1(%ebx,%edx,1)
add    %bh,0xe6fffd(,%ebx,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dl,0xa(%edi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x410c0e0a,%eax
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
mov    $0x13,%al
add    %eax,(%eax)
lock popf
std
ljmp   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x70,0x2400e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
xor    $0x0,%al
add    %al,(%eax)
lock adc (%ecx),%eax
add    %ah,-0x62(%eax)
std
call   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jnp    80b5307 <_IO_stdin_used+0x1f003>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
sub    %dl,(%ecx,%eax,1)
add    %cl,-0xc000262(%eax)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1800e43
mov    0x41140e0a,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edx
add    %al,(%eax)
add    %ch,0x14(%eax)
add    %eax,(%eax)
dec    %eax
mov    0x1ffffd,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
jl     80b537e <_IO_stdin_used+0x1f07a>
add    %eax,(%eax)
push   %esp
mov    0x33fffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
insl   (%dx),%es:(%edi)
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bl,-0x5e8bffff(%esp,%edx,1)
std
call   *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x7ffffeec(%eax)
mov    0x9fffd,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
les    (%ecx,%eax,1),%edx
add    %bh,-0x3(%ecx,%eiz,4)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %bl,%al
adc    $0x1,%al
add    %cl,0x40fffda1(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x47,%al
or     0xe(%esi),%edx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %ah,(%eax,%eax,1)
add    %al,(%eax)
add    $0x15,%al
add    %eax,(%eax)
pushf
mov    0x4cfffd,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,-0x3cf5a2fe(%ebx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%ebx
ret
push   %cs
add    $0x48,%al
or     -0x3d(%esi),%eax
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ch,-0x5e3bffff(,%edx,1)
std
call   *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dl,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax,%eax,1),%esp
add    %al,(%eax)
pop    %eax
adc    $0xa2380001,%eax
std
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x3cf5a2fe(%ebx)
push   %cs
add    $0x42,%al
or     0xa(%eax),%ebx
ret
push   %cs
add    $0x48,%al
or     -0x3d(%esi),%eax
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %al,0x60000115(%eax)
mov    %al,0x95fffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %dl,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ch,-0x5d2bffff(%ebp,%edx,1)
std
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%eax)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fcoms  0xa2e80001
std
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %ch,%ah
adc    $0xa2e40001,%eax
std
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0xec36302(%ebx)
add    $0x0,%al
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,(%eax)
push   %ss
add    %eax,(%eax)
clc
mov    %al,0x46fffd
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
add    0xe(%eax),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
sub    $0x16,%al
add    %eax,(%eax)
and    $0xa3,%al
std
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
push   %ss
add    %eax,(%eax)
xor    %ah,0xffffd(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
push   %esp
push   %ss
add    %eax,(%eax)
sub    $0xa3,%al
std
incl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %ch,0xe(%ebp)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adcb   $0x1,(%esi)
add    %dl,-0x5d(%eax)
std
ljmp   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4e04(%ebx)
add    0xe(%edx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
mov    $0x16,%ah
add    %eax,(%eax)
mov    %fs,0x88fffd(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jns    80b55cb <_IO_stdin_used+0x1f2c7>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ch,%ah
push   %ss
add    %eax,(%eax)
in     $0xa3,%al
std
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x77300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,0x17(%eax)
add    %eax,(%eax)
inc    %eax
movsb  %ds:(%esi),%es:(%edi)
std
(bad)
jns    80b5636 <_IO_stdin_used+0x1f332>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
jp     80b564d <_IO_stdin_used+0x1f349>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edi),%esi
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
pop    %ss
add    %eax,(%eax)
xchg   %eax,%esp
movsb  %ds:(%esi),%es:(%edi)
std
lcall  *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4e04(%ebx)
jne    80b5683 <_IO_stdin_used+0x1f37f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,-0x5b43ffff(%edi,%edx,1)
std
decl   0x2(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x69,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
cld
pop    %ss
add    %eax,(%eax)
hlt
cmpsb  %es:(%edi),%ds:(%esi)
std
push   %esi
add    $0x0,%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2f,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%edx
add    %al,(%eax)
add    %bh,(%eax,%ebx,1)
add    %eax,(%eax)
mov    $0xab,%ah
std
call   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x18(%eax)
add    %eax,(%eax)
shrb   $0x0,0x16fffd(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %ah,0x1(%eax,%ebx,1)
add    %cl,%ah
stos   %eax,%es:(%edi)
std
call   *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x64,0x2400e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
mov    $0x54000118,%esp
lods   %ds:(%esi),%al
std
call   *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %dh,%ah
sbb    %al,(%ecx)
add    %bh,0x22efffd(%esp,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffd5,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%esi),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,0x1(%ecx,%ebx,1)
add    %dl,0x1bffffd(%esi,%ebp,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe8,0x2500e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebx),%ecx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ah,-0x5003ffff(%ecx,%ebx,1)
std
pushl  (%edx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2c,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %dl,0x0(%eax,%eax,1)
add    %bh,%ah
sbb    %eax,(%ecx)
add    %ah,%ah
mov    $0xfd,%cl
jmp    *(%edx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1c,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
push   %esp
sbb    (%ecx),%al
add    %bh,0x22bfffd(%ebx,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     -0x40000000(%eax),%eax
sbb    (%ecx),%al
add    %al,-0x200024b(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1b,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%edi),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ecx),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,0x0(%eax,%eax,1)
add    %al,0x1(%ebx,%ebx,1)
add    %bh,%ah
mov    $0xfd,%dh
(bad)
cld
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
test   %cl,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     0xa(%ebp),%ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,0x0(%eax,%eax,1)
add    %cl,-0x484bffff(%ebx,%ebx,1)
std
push   %esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
orb    $0xe,(%edx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%ebp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ecx),%edi
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax)
add    %al,(%eax)
add    %dl,%ah
sbb    (%ecx),%eax
add    %ch,-0x3(%eax,%edi,4)
jmp    *0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xe(%ecx),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %cl,(%eax)
sbb    $0x1,%al
add    %ch,-0x2f000248(%eax)
or     (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1b00e51
mov    $0x140e0a02,%esi
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%ebx),%eax
mov    $0x1,%al
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
js     80b5b82 <_IO_stdin_used+0x1f87e>
add    %eax,(%eax)
or     %al,%bl
std
decl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %cl,-0x3cfbffff(%esp,%ebx,1)
std
lcall  *0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff8c,0x2300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %cl,%al
sbb    $0x1,%al
add    %ch,-0x3d(%eax)
std
ljmp   *(%edi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%ebp
add    %dh,%ah
sbb    $0x1,%al
add    %ch,-0x3(%esp,%eax,8)
ljmp   *0x3(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x3600e4e
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
ja     80b5c29 <_IO_stdin_used+0x1f925>
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
pop    %ebx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
fs
sbb    $0xc76c0001,%eax
std
lcall  *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x67300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sbb    $0xc7cc0001,%eax
std
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
gs
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %al,%ah
sbb    $0xc7dc0001,%eax
std
(bad)
jle    80b5cba <_IO_stdin_used+0x1f9b6>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x45,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%ecx),%esp
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
sbb    %bl,(%esi)
add    %eax,(%eax)
or     %cl,%al
std
(bad)
jns    80b5d0f <_IO_stdin_used+0x1fa0b>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x2,0x1a00e46
xchg   %eax,%esp
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%esi
add    %al,(%eax)
add    %bl,0x1e(%eax)
add    %eax,(%eax)
dec    %eax
leave
std
call   *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%ebx),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
mov    %ds,(%esi)
add    %eax,(%eax)
je     80b5d47 <_IO_stdin_used+0x1fa43>
std
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    0x7000011e,%al
leave
std
incl   (%ebx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e51
in     $0xe,%eax
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ah,%al
push   %ds
add    %eax,(%eax)
inc    %eax
lret   $0xfffd
lds    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff96,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%eax
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,(%edi,%ebx,1)
add    %eax,(%eax)
mov    $0xbfffdca,%esp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %cl,0x1f(%eax)
add    %eax,(%eax)
mov    $0x41fffdca,%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
je     80b5e81 <_IO_stdin_used+0x1fb7d>
add    %eax,(%eax)
fmul   %st,%st(2)
std
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
mov    0x11f,%al
lret
std
incl   0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
int3
pop    %ds
add    %eax,(%eax)
and    $0xcb,%al
std
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%ebp)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
clc
pop    %ds
add    %eax,(%eax)
cmp    %cl,%bl
std
jmp    *(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x64,%al
add    %al,(%eax)
add    %bl,(%eax)
and    %al,(%ecx)
add    %bh,(%eax)
lret
std
(bad)
ljmp   $0xe41,$0x0
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffff81,0x2300e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x40,%al
add    %al,(%eax)
add    %al,-0x3ffffee0(%eax)
lret
std
inc    %edx
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
add    $0x140e0a01,%eax
inc    %ebx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %al,%ah
and    %al,(%ecx)
add    %cl,-0x3(%esi,%ecx,8)
call   *(%ecx)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x79400e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%esi),%ebp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,(%eax)
and    %eax,(%ecx)
add    %bl,(%eax)
iret
std
incl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%ecx)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
inc    %esp
and    %eax,(%ecx)
add    %bh,(%edi,%ecx,8)
std
ljmp   *0x41000000(%ecx,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1c00e46
out    %al,(%dx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0x0(%eax,%eax,1),%eax
add    %al,-0x2f53ffff(%ecx,%eiz,1)
std
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%edx,%ecx,1),%bl
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
int3
and    %eax,(%ecx)
add    %dh,%ah
sar    %ch
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x39f584fc(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %bh,%ah
and    %eax,(%ecx)
add    %ah,(%ecx,%edx,8)
std
jmp    *0x6(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1e00e46
orb    $0xe,(%edx)
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
push   %eax
add    %al,(%eax)
add    %ch,0x1(%edx,%eiz,1)
add    %ah,(%edi,%edx,8)
std
jmp    *0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x77700e43
push   %cs
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%edx,%ecx,1),%ebx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %al,%al
and    (%ecx),%al
add    %al,0x54fffdd7(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
jnp    80b61cd <_IO_stdin_used+0x1fec9>
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edx),%ecx
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ch,%ah
and    (%ecx),%al
add    %dh,0x15fffd(%edi,%edx,8)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
add    %ah,(%ebx)
add    %eax,(%eax)
rcl    $0xfd,%bh
lcall  *0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ebp),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
xor    $0x23,%al
add    %eax,(%eax)
in     (%dx),%al
xlat   %ds:(%ebx)
std
ljmp   *(%ecx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0xffffffcb,0x2700e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%eax),%eax
cmp    %al,(%eax)
add    %al,(%eax)
je     80b6285 <_IO_stdin_used+0x1ff81>
add    %eax,(%eax)
(bad)
std
(bad)
jge    80b626a <_IO_stdin_used+0x1ff66>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x71,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x68,%al
add    %al,(%eax)
add    %dh,0x20000123(%eax)
(bad)
jmp    *%ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffb,0x2600e4e
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
push   %ecx
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sbb    $0x24,%al
add    %eax,(%eax)
movsb  %ds:(%esi),%es:(%edi)
fdivr  %st,%st(5)
jmp    *(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffba,0x2600e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %eax
add    %al,(%eax)
add    %bl,0x1(%esp)
add    %al,0x108fffd(%ebp,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x59500e43
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
rorl   (%esi)
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x24,%al
add    %eax,(%eax)
inc    %eax
fdivrp %st,%st(5)
jmp    *(%ebx)
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x76,0x2600e4e
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
lock and $0x1,%al
add    %dh,(%eax)
loopne 80b63e0 <_IO_stdin_used+0x200dc>
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
jne    80b640b <_IO_stdin_used+0x20107>
adc    %al,-0x3d(%esi)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x1fb3ffff(,%eiz,1)
std
incl   0x0
add    %al,(%eax)
add    %al,0x0(%eax,%eax,1)
add    %bh,(%eax)
and    $0xe0480001,%eax
std
jmp    *0x0(%esi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4e04(%ebx)
add    0xa(%edx),%dl
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%ebx),%ebp
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
andb   $0xfd,0xe0b00001
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
pushw  %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x45,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x25,%ah
add    %eax,(%eax)
mov    $0x4cfffde0,%esp
adc    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x4ff1b9fc(%esi)
add    %eax,(%ebx)
aas
adc    (%esi),%ecx
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
and    $0xf3d40001,%eax
std
pushl  0x0
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
add    %ah,(%esi)
add    %eax,(%eax)
add    %dh,%ah
std
incl   0x1(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe7,0x2400e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    (%esi),%ecx
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
cmp    $0x0,%al
add    %al,(%eax)
push   %esp
add    %eax,%es:(%eax)
cmp    $0xf5,%al
std
incl   0x2(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
or     0x0(%eax,%eax,1),%eax
add    %dl,-0x8b3ffff(%esi,%eiz,1)
std
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x6ff1b1fc(%ebx)
add    %esi,0xe(%edx,%ecx,1)
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%ebx),%ebx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %bl,%ah
add    %eax,%es:(%eax)
(bad)
idiv   %ebp
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xe(%esi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
or     %ah,(%edi)
add    %eax,(%eax)
fdiv   %st(7),%st
std
(bad)
mov    $0x0,%edx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x6c00e46
stos   %eax,%es:(%edi)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
dec    %eax
daa
add    %eax,(%eax)
pop    %eax
clc
std
(bad)
jnp    80b663e <_IO_stdin_used+0x2033a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%ebp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %al,-0x5ffffed9(%eax)
clc
std
jmp    *%eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
mov    %ecx,(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%ebp),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%edx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebp),%edx
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dl,%ah
daa
add    %eax,(%eax)
sub    $0xf9,%al
std
decl   0x0(%ebx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
push   %ecx
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%eax),%ebp
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x50,%al
add    %al,(%eax)
add    %cl,(%eax,%ebp,1)
add    %eax,(%eax)
test   %bh,%cl
std
decl   (%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
mov    %ecx,(%edx)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xa(%edx),%ebp
push   %cs
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     0xa(%eax),%ecx
push   %cs
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ecx),%esp
or     $0x45,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %ah,0x28(%eax)
add    %eax,(%eax)
inc    %eax
cli
std
pushl  0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x4e,(%ebx)
push   %cs
and    %bh,0xa(%ecx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%edi
add    %al,(%eax)
add    %cl,-0x52bffff(%eax,%ebp,1)
std
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %cl,%al
sub    %al,(%ecx)
add    %cl,(%eax)
sti
std
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,%ah
sub    %al,(%ecx)
add    %al,(%ebx,%edi,8)
std
call   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4e02(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
lock out %eax,$0x4
.byte 0x8
shl    %bh
add    $0x8,%al
add    %al,(%eax)
push   %ss
mov    $0x80809,%ebx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
nop
mov    $0x6,%bl
or     %al,(%eax)
add    %al,(%eax)
add    %dl,0x1e0806bb(%eax)
mov    $0x70809,%ebx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
lock mov $0x6,%dl
or     %al,(%eax)
add    %al,(%eax)
add    %al,-0x4d(%eax)
push   %es
or     %ah,%bh
rorl   $0x8,(%ecx)
push   %es
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
mov    $0x6,%ah
or     %dl,-0x4d(%eax)
push   %es
or     %al,-0x43(%eax)
push   %es
or     %ch,(%edx)
mov    $0x50809,%ebx
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
jo     80b7c28 <_IO_stdin_used+0x21924>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,%al
mov    $0xebf00806,%esp
or     %ecx,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0xb2,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,%al
mov    $0xbb3b0806,%esp
or     %ecx,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
jo     80b7c58 <_IO_stdin_used+0x21954>
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0xebd40806,%ebp
or     %ecx,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0xb2,%al
push   %es
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
mov    $0xbb480806,%ebp
or     %ecx,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
nop
mov    $0xbb530806,%ebx
or     %ecx,(%eax)
nop
mov    $0xd89b0806,%ebx
or     %ecx,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     %eax,(%eax)
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
shrb   0x7(%edx)
or     %al,(%eax)
push   $0x7
or     %al,(%eax)
mov    0xad200807,%al
pop    %es
or     %al,%al
lahf
pop    %es
or     %ah,(%eax)
scas   %es:(%edi),%al
pop    %es
or     %al,%al
stos   %al,%es:(%edi)
pop    %es
or     %dl,(%eax)
mov    0x9ee00807,%eax
pop    %es
or     %al,(%eax)
add    %al,(%eax)
add    %cl,0x80a06(%esi)
add    %al,(%eax)
add    %dl,0x1080a06(%ebx)
add    %al,(%eax)
add    %bl,0x2080a06(%edx)
add    %al,(%eax)
add    %bl,0x3080a06(%edi)
add    %al,(%eax)
add    %al,0x4080a05(%ebx)
add    %al,(%eax)
add    %ah,0x5080a06(%ebp)
add    %al,(%eax)
add    %ch,0x6080a06(%eax)
add    %al,(%eax)
add    %ch,0x8080a06(%esi)
add    %al,(%eax)
add    %al,%al
push   %es
or     (%eax),%cl
or     %eax,(%eax)
add    %al,(%eax)
addr16 add $0xe7f0080a,%eax
or     %cl,(%eax)
rcl    %al
or     %cl,(%eax)
nop
(bad)
or     %cl,(%eax)
loopne 80b7d8a <_IO_stdin_used+0x21a86>
or     %cl,(%eax)
lock rorb (%eax)
or     %cl,%dh
push   %es
or     (%eax),%cl
pusha
fmull  (%eax)
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
rorl   %cl,(%eax)
or     %al,(%eax)
(bad)
or     %cl,(%eax)
nop
jmp    80b85ee <stderr+0x24e>
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
loopne 80b7dc0 <_IO_stdin_used+0x21abc>
or     %cl,(%eax)
fild   (%esi)
or     (%eax),%cl
rcr    %bl
or     %cl,(%eax)
add    %dl,%cl
or     %cl,(%eax)
mov    $0xd1,%al
or     %cl,(%eax)
adc    %dl,%cl
or     %cl,(%eax)
and    %dl,%cl
or     %cl,(%eax)
jmp    813884b <_end+0x7fefb>
add    %al,(%eax)
add    %bh,%al
push   %es
or     (%eax),%cl
add    %al,(%eax)
add    %al,(%eax)
push   %es
pop    %es
or     (%eax),%cl
jo     80b7e3b <_IO_stdin_used+0x21b37>
or     %cl,(%eax)
sbb    $0x7,%al
or     (%eax),%cl
add    %bl,%bl
or     %cl,(%eax)
sub    $0x80a07,%eax
out    %al,$0x8
or     %bh,(%edi,%eax,1)
or     (%eax),%cl
add    %al,(%eax)
add    %al,(%eax)
dec    %ecx
pop    %es
or     (%eax),%cl
shl    %cl
or     %cl,(%eax)
sub    $0xc0080a07,%eax
in     $0x8,%al
or     %bl,0x7(%ecx)
or     (%eax),%cl
mov    $0xe2,%al
or     %cl,(%eax)
pop    %esp
push   %cs
or     (%eax),%cl
sbb    $0x0,%al
add    %al,(%eax)
and    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
js     80b7ea8 <_IO_stdin_used+0x21ba4>
or     (%eax),%cl
sbb    (%eax),%eax
add    %al,(%eax)
and    (%eax),%eax
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
xchg   %eax,%ebx
push   %cs
or     (%eax),%cl
or     $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
lock jb 80b7ec2 <_IO_stdin_used+0x21bbe>
or     %ah,(%eax)
jbe    80b7ec6 <_IO_stdin_used+0x21bc2>
or     %dh,-0x4e(%eax)
pop    %es
or     %dh,0x58(%eax)
or     %cl,(%eax)
inc    %eax
popl   (%edi)
.byte 0x8
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
daa
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %bh,%bh
add    %eax,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
add    %ah,0x1000002(%ebp)
add    %al,(%eax)
add    %bh,%dh
add    (%eax),%al
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,%al
add    $0x0,%al
add    %al,(%ecx)
add    %al,(%eax)
add    %dh,%dh
add    $0x0,%al
add    %cl,(%eax,%eax,1)
add    %al,(%eax)
lods   %ds:(%esi),%al
iret
add    $0x8,%al
or     $0xe4000000,%eax
bound  %ecx,(%ecx)
or     %bl,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
jl     80b7f26 <_IO_stdin_used+0x21c22>
or     %bl,(%ebx)
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
adc    $0x7c,%al
or     (%eax),%ecx
sbb    $0x0,%al
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
enter  $0x4a3,$0x8
push   %es
add    %al,(%eax)
add    %ch,-0x77(%eax)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
and    %eax,%es:(%eax)
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
orb    $0x8,(%ebx)
add    (%eax),%al
add    %al,(%eax)
enter  $0x5,$0x0
adc    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %ah,%ah
leave
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
mov    $0x120804c9,%esp
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
add    %al,(%eax)
add    %cl,(%eax)
add    %al,(%eax)
add    %bh,%dh
(bad)
ljmp   *0x3c(%edi)
enter  $0x804,$0xff
(bad)
ljmp   *0x5(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x12(%edi)
les    (%eax,%ecx,1),%eax
int3
jle    80b800e <_IO_stdin_used+0x21d0a>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,%dh
iret
add    $0x8,%al
(bad)
iret
add    $0x8,%al
push   %es
rolb   (%eax,%ecx,1)
push   %ss
rolb   (%eax,%ecx,1)
rolb   %es:(%eax,%ecx,1)
rolb   %ss:(%eax,%ecx,1)
inc    %esi
rolb   (%eax,%ecx,1)
push   %esi
rolb   (%eax,%ecx,1)
data16
rolb   (%eax,%ecx,1)
jbe    80b8002 <_IO_stdin_used+0x21cfe>
add    $0x8,%al
xchg   %dl,%al
add    $0x8,%al
xchg   %eax,%esi
rolb   (%eax,%ecx,1)
cmpsb  %es:(%edi),%ds:(%esi)
rolb   (%eax,%ecx,1)
mov    $0xd0,%dh
add    $0x8,%al
(bad)
rolb   (%eax,%ecx,1)
(bad)
rolb   (%eax,%ecx,1)
out    %al,$0xd0
add    $0x8,%al
not    %al
add    $0x8,%al
push   %es
roll   (%eax,%ecx,1)
push   %ss
roll   (%eax,%ecx,1)
roll   %es:(%eax,%ecx,1)
roll   %ss:(%eax,%ecx,1)
inc    %esi
roll   (%eax,%ecx,1)
push   %esi
roll   (%eax,%ecx,1)
rolw   (%eax,%ecx,1)
jbe    80b8043 <_IO_stdin_used+0x21d3f>
add    $0x8,%al
xchg   %dl,%cl
add    $0x8,%al
xchg   %eax,%esi
roll   (%eax,%ecx,1)
cmpsb  %es:(%edi),%ds:(%esi)
roll   (%eax,%ecx,1)
mov    $0xd1,%dh
add    $0x8,%al
(bad)
roll   (%eax,%ecx,1)
(bad)
roll   (%eax,%ecx,1)
out    %al,$0xd1
add    $0x8,%al
not    %cl
add    $0x8,%al
push   %es
rolb   %cl,(%eax,%ecx,1)
push   %ss
rolb   %cl,(%eax,%ecx,1)
rolb   %cl,%es:(%eax,%ecx,1)
rolb   %cl,%ss:(%eax,%ecx,1)
inc    %esi
rolb   %cl,(%eax,%ecx,1)
push   %esi
rolb   %cl,(%eax,%ecx,1)
data16
rolb   %cl,(%eax,%ecx,1)
jbe    80b8084 <_IO_stdin_used+0x21d80>
add    $0x8,%al
xchg   %dl,%dl
add    $0x8,%al
xchg   %eax,%esi
rolb   %cl,(%eax,%ecx,1)
cmpsb  %es:(%edi),%ds:(%esi)
rolb   %cl,(%eax,%ecx,1)
mov    $0xd2,%dh
add    $0x8,%al
(bad)
rolb   %cl,(%eax,%ecx,1)
(bad)
rolb   %cl,(%eax,%ecx,1)
out    %al,$0xd2
add    $0x8,%al
not    %dl
add    $0x8,%al
push   %es
roll   %cl,(%eax,%ecx,1)
push   %ss
roll   %cl,(%eax,%ecx,1)
roll   %cl,%es:(%eax,%ecx,1)
roll   %cl,%ss:(%eax,%ecx,1)
inc    %esi
roll   %cl,(%eax,%ecx,1)
push   %esi
roll   %cl,(%eax,%ecx,1)
rolw   %cl,(%eax,%ecx,1)
jbe    80b80c5 <_IO_stdin_used+0x21dc1>
add    $0x8,%al
xchg   %dl,%bl
add    $0x8,%al
xchg   %eax,%esi
roll   %cl,(%eax,%ecx,1)
cmpsb  %es:(%edi),%ds:(%esi)
roll   %cl,(%eax,%ecx,1)
mov    $0xd3,%dh
add    $0x8,%al
(bad)
roll   %cl,(%eax,%ecx,1)
(bad)
roll   %cl,(%eax,%ecx,1)
out    %al,$0xd3
add    $0x8,%al
not    %bl
add    $0x8,%al
push   %es
aam    $0x4
or     %dl,(%esi)
aam    $0x4
or     %ah,(%esi)
aam    $0x4
or     %dh,(%esi)
aam    $0x4
or     %al,-0x2c(%esi)
add    $0x8,%al
push   %esi
aam    $0x4
or     %ah,-0x2c(%esi)
add    $0x8,%al
jbe    80b8106 <_IO_stdin_used+0x21e02>
add    $0x8,%al
xchg   %dl,%ah
add    $0x8,%al
xchg   %eax,%esi
aam    $0x4
or     %ah,-0x49f7fb2c(%esi)
aam    $0x4
or     %al,%dh
aam    $0x4
or     %dl,%dh
aam    $0x4
or     %ah,%dh
aam    $0x4
or     %dh,%dh
aam    $0x4
or     %al,(%esi)
aad    $0x4
or     %dl,(%esi)
aad    $0x4
or     %ah,(%esi)
aad    $0x4
or     %dh,(%esi)
aad    $0x4
or     %al,-0x2b(%esi)
add    $0x8,%al
push   %esi
aad    $0x4
or     %ah,-0x2b(%esi)
add    $0x8,%al
jbe    80b8147 <_IO_stdin_used+0x21e43>
add    $0x8,%al
xchg   %dl,%ch
add    $0x8,%al
xchg   %eax,%esi
aad    $0x4
or     %ah,-0x49f7fb2b(%esi)
aad    $0x4
or     %al,%dh
aad    $0x4
or     %dl,%dh
aad    $0x4
or     %ah,%dh
aad    $0x4
or     %dh,%dh
aad    $0x4
or     %al,(%esi)
(bad)
add    $0x8,%al
push   %ss
(bad)
add    $0x8,%al
es
(bad)
add    $0x8,%al
ss
(bad)
add    $0x8,%al
inc    %esi
(bad)
add    $0x8,%al
push   %esi
(bad)
add    $0x8,%al
data16
(bad)
add    $0x8,%al
jbe    80b8188 <_IO_stdin_used+0x21e84>
add    $0x8,%al
xchg   %dl,%dh
add    $0x8,%al
xchg   %eax,%esi
(bad)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
(bad)
add    $0x8,%al
mov    $0xd6,%dh
add    $0x8,%al
(bad)
(bad)
add    $0x8,%al
(bad)
(bad)
add    $0x8,%al
out    %al,$0xd6
add    $0x8,%al
not    %dh
add    $0x8,%al
push   %es
xlat   %ds:(%ebx)
add    $0x8,%al
push   %ss
xlat   %ds:(%ebx)
add    $0x8,%al
xlat   %es:(%ebx)
add    $0x8,%al
xlat   %ss:(%ebx)
add    $0x8,%al
inc    %esi
xlat   %ds:(%ebx)
add    $0x8,%al
push   %esi
xlat   %ds:(%ebx)
add    $0x8,%al
data16
xlat   %ds:(%ebx)
add    $0x8,%al
jbe    80b81c9 <_IO_stdin_used+0x21ec5>
add    $0x8,%al
xchg   %dl,%bh
add    $0x8,%al
xchg   %eax,%esi
xlat   %ds:(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xlat   %ds:(%ebx)
add    $0x8,%al
mov    $0xd7,%dh
add    $0x8,%al
(bad)
xlat   %ds:(%ebx)
add    $0x8,%al
(bad)
xlat   %ds:(%ebx)
add    $0x8,%al
out    %al,$0xd7
add    $0x8,%al
not    %bh
add    $0x8,%al
push   %es
fadds  (%eax,%ecx,1)
push   %ss
fadds  (%eax,%ecx,1)
fadds  %es:(%eax,%ecx,1)
fadds  %ss:(%eax,%ecx,1)
inc    %esi
fadds  (%eax,%ecx,1)
push   %esi
fadds  (%eax,%ecx,1)
data16
fadds  (%eax,%ecx,1)
jbe    80b820a <_IO_stdin_used+0x21f06>
add    $0x8,%al
xchg   %bl,%al
add    $0x8,%al
xchg   %eax,%esi
fadds  (%eax,%ecx,1)
cmpsb  %es:(%edi),%ds:(%esi)
fadds  (%eax,%ecx,1)
mov    $0xd8,%dh
add    $0x8,%al
(bad)
fadds  (%eax,%ecx,1)
(bad)
fadds  (%eax,%ecx,1)
out    %al,$0xd8
add    $0x8,%al
neg    %al
add    $0x8,%al
push   %es
flds   (%eax,%ecx,1)
push   %ss
flds   (%eax,%ecx,1)
flds   %es:(%eax,%ecx,1)
flds   %ss:(%eax,%ecx,1)
inc    %esi
flds   (%eax,%ecx,1)
push   %esi
flds   (%eax,%ecx,1)
data16
flds   (%eax,%ecx,1)
jbe    80b824b <_IO_stdin_used+0x21f47>
add    $0x8,%al
xchg   %bl,%cl
add    $0x8,%al
xchg   %eax,%esi
flds   (%eax,%ecx,1)
cmpsb  %es:(%edi),%ds:(%esi)
flds   (%eax,%ecx,1)
mov    $0xd9,%dh
add    $0x8,%al
(bad)
flds   (%eax,%ecx,1)
(bad)
flds   (%eax,%ecx,1)
out    %al,$0xd9
add    $0x8,%al
neg    %cl
add    $0x8,%al
push   %es
fiaddl (%eax,%ecx,1)
push   %ss
fiaddl (%eax,%ecx,1)
fiaddl %es:(%eax,%ecx,1)
fiaddl %ss:(%eax,%ecx,1)
inc    %esi
fiaddl (%eax,%ecx,1)
push   %esi
fiaddl (%eax,%ecx,1)
data16
fiaddl (%eax,%ecx,1)
jbe    80b828c <_IO_stdin_used+0x21f88>
add    $0x8,%al
xchg   %bl,%dl
add    $0x8,%al
xchg   %eax,%esi
fiaddl (%eax,%ecx,1)
cmpsb  %es:(%edi),%ds:(%esi)
fiaddl (%eax,%ecx,1)
mov    $0xda,%dh
add    $0x8,%al
(bad)
fiaddl (%eax,%ecx,1)
(bad)
fiaddl (%eax,%ecx,1)
out    %al,$0xda
add    $0x8,%al
neg    %dl
add    $0x8,%al
push   %es
fildl  (%eax,%ecx,1)
push   %ss
fildl  (%eax,%ecx,1)
fildl  %es:(%eax,%ecx,1)
fildl  %ss:(%eax,%ecx,1)
inc    %esi
fildl  (%eax,%ecx,1)
push   %esi
fildl  (%eax,%ecx,1)
data16
fildl  (%eax,%ecx,1)
add    %eax,(%eax)
add    %al,(%eax)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x9(%ebx,%ebp,2)
or     %al,%al
(bad)
or     %bh,-0x74(%eax)
or     %ecx,(%eax)
je     80b82bb <_IO_stdin_used+0x21fb7>
or     %ecx,(%eax)
mov    0x8098f,%al
add    %al,(%eax)
add    %bh,%bh
(bad)
(bad)
(bad)
js     80b8330 <_IO_stdin_used+0x2202c>
or     %ecx,(%eax)
lcall  $0x0,$0x10809e4
add    %bh,%bh
(bad)
(bad)
jmp    *%eax
rorb   $0x8,(%eax)
jo     80b8320 <_IO_stdin_used+0x2201c>
or     %cl,(%eax)
add    %al,%dl
or     %cl,(%eax)
mov    0x400808bf,%al
rorb   $0x8,(%eax)
adc    %al,%cl
or     %cl,(%eax)
add    (%eax),%al
add    %al,(%eax)
(bad)
(bad)
(bad)
call   *-0x7ff7f6a3(%eax)
pusha
or     %ecx,(%eax)
lock pop %edi
or     %ecx,(%eax)
adc    %bl,0x9(%edi)
or     %dl,-0x2ff7f6a2(%eax)
pop    %ebp
or     %ecx,(%eax)
xor    $0x39,%al
cmp    %esp,0x30(%edx)
cmp    %esp,0x36(%edx)
xor    0x61(%ebx),%esp
xor    $0x36396233,%eax
xor    (%eax),%esi
xor    %edi,%gs:(%ecx)
ss xor %esi,%ss:(%esi)
gs xor %esi,%fs:%gs:(%eax)
xor    $0x63,%al
aaa
aaa
xor    %dh,0x2e316637
fs bound %esi,%fs:%gs:0x67(%ebp)
add    %al,(%eax)
add    %al,(%eax)
jbe    8a <_init-0x804cf22>
addr16
.byte 0x19
