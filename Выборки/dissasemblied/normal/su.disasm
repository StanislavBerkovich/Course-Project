das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %bl,%dl
call   ce62830b <_end+0xc65d2de3>
clc
mov    -0x63(%ebx),%es
mov    %al,0xb461f40c
adc    $0x45,%al
movsb  %ds:(%esi),%es:(%edi)
scas   %es:(%edi),%al
.byte 0xff
add    (%eax),%eax
add    %al,(%eax)
data16
add    %al,(%eax)
add    %al,(%eax,%eax,1)
add    %al,(%eax)
pop    %es
add    %al,(%eax)
add    %cl,0x0(%eax)
add    %al,(%eax)
lock and %ecx,0x1080438(%edi,%ecx,1)
addb   $0x0,(%eax,%eax,1)
data16
add    %al,(%eax)
add    %ch,0x0(%ebx)
add    %al,(%eax)
jo     80481d6 <_init-0x1116>
add    %al,(%eax)
inc    %edx
inc    %ebp
aad    $0xec
mov    $0x287c92e3,%edx
sbb    $0x89c41c8c,%eax
add    $0xa3dda790,%eax
imul   $0xffffffb9,%esp,%eax
pushf
inc    %eax
cmp    %dh,%dl
mov    (%esp,%ebp,4),%ebx
dec    %ebx
jecxz  80481b8 <_init-0x1134>
fdivs  0x58(%ecx)
sbb    $0xb9,%al
(bad)
icebp
push   %cs
ljmp   $0xf7c4,$0x320eefd3
adc    -0x4c0b9fbf(%esi),%al
.byte 0xa2
notl   (%edx)
pop    %ebp
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     (%eax,%eax,1),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %eax,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x3(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ljmp   $0x0,$0x2
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x3(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,0x1
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    $0x0,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%ah
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
or     %eax,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %es
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ebx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ecx)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x1(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %es:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dh
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x3(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%edx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x3(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
data16
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ecx)
add    $0x0,%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x0(%ebx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
ret    $0x2
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x3
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x1(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
aam    $0x1
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lcall  $0x0,$0x3
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,(%edi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%ah
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,%cl
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,0x1(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lahf
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%ah
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x2(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
push   %eax
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x1(%ebp)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%ecx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dh
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
movb   $0x0,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,0x0(%edx,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    0x3,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,%ch
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%eax,%eax,1)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x1(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ecx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%cl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    (%eax),%eax
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %edx
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ah
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%ebx)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%ebx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %esi
add    $0x0,%al
add    %al,0x80514(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %bl,(%eax)
add    %dh,%ah
add    %al,(%eax)
add    %ch,(%eax)
push   %ebp
add    $0x8,%eax
add    %dl,(%eax)
add    %bl,(%ecx)
add    %dl,%bh
add    (%eax),%al
add    %al,%al
adc    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
cmp    %eax,(%eax,%eax,1)
add    %al,0x4080514(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bh,(%edx)
add    $0x0,%al
add    %al,0x4080514(%eax)
add    %al,(%eax)
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bh,(%eax)
add    $0x0,%al
add    %al,0x4080514(%eax)
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dl,0x3(%eax)
add    %al,(%eax)
test   %dl,0x408(,%eax,1)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,(%edi)
add    %eax,(%eax)
add    %bl,%ah
fildl  (%eax,%ecx,1)
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
lldt   0x4(%ebp)
add    %al,(%eax)
adcb   $0x0,0x8(,%eax,1)
adc    %al,(%eax)
sbb    %eax,(%eax)
dec    %eax
add    $0x0,%al
add    %ch,%ah
xchg   %eax,%edx
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
or     (%eax),%eax
inc    %edx
add    $0x0,%al
add    %al,%ah
fildl  (%eax,%ecx,1)
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
push   %cs
add    %bh,0x1(%esi)
add    %al,(%eax)
mov    0x4080514,%al
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %bl,(%ebx)
add    %eax,(%eax)
add    %al,-0x6b(%eax)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
dec    %ecx
add    (%eax),%eax
add    %al,%ah
adc    $0x5,%al
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
add    %ch,0x62(%ecx,%ebp,2)
jo     80489b7 <_init-0x935>
insl   (%dx),%es:(%edi)
jae,pn 80489c9 <_init-0x923>
xor    %al,%cs:(%eax)
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
fs
gs
jb     80489cb <_init-0x921>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    80489f6 <_init-0x8f6>
popa
jb     80489f9 <_init-0x8f3>
pop    %edi
pop    %edi
add    %bl,0x4a(%edi)
jbe    80489eb <_init-0x901>
push   %edx
imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
6c
popa
jae    8048a0c <_init-0x8e0>
gs
jae    804899c <_init-0x950>
pop    %edi
dec    %ecx
push   %esp
dec    %ebp
pop    %edi
jb     8048a08 <_init-0x8e4>
imul   $0x4d547265,0x74(%bp,%di),%esi
inc    %ebx
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
gs
push   %esp
popa
bound  %ebp,0x0(%ebp,%eiz,2)
jo     8048a19 <_init-0x8d3>
insl   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     8048a22 <_init-0x8ca>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    8048a26 <_init-0x8c6>
jae    8048a36 <_init-0x8b6>
imul   $0x6d617000,0x6e(%edi),%ebp
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
jae    8048a38 <_init-0x8b4>
jae    8048a48 <_init-0x8a4>
imul   $0x6d617000,0x6e(%edi),%ebp
pop    %edi
jae    8048a44 <_init-0x8a8>
je     8048a40 <_init-0x8ac>
imul   $0x6d617000,0x6d(%ebp,%eiz,2),%esi
pop    %edi
addr16
gs
je     8048a4d <_init-0x89f>
imul   $0x6d617000,0x6d(%ebp,%eiz,2),%esi
pop    %edi
jae    8048a5e <_init-0x88e>
je     8048a5e <_init-0x88e>
jb     8048a62 <_init-0x88a>
add    %dh,%fs:0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
jae    8048a79 <_init-0x873>
popa
jb     8048a7c <_init-0x870>
add    %dh,0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
jae    8048a83 <_init-0x869>
jb     8048a76 <_init-0x876>
jb     8048a85 <_init-0x867>
outsl  %ds:(%esi),(%dx)
jb     8048a16 <_init-0x8d6>
jo     8048a79 <_init-0x873>
insl   (%dx),%es:(%edi)
pop    %edi
popa
arpl   %sp,0x74(%ebx)
pop    %edi
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%di)
je     8048a24 <_init-0x8c8>
jo     8048a87 <_init-0x865>
insl   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     8048a91 <_init-0x85b>
outsb  %ds:(%esi),(%dx)
jbe    8048a9b <_init-0x851>
imul   $0x6d617000,0x74(%ebx),%esi
pop    %edi
arpl   %bp,0x61(%eax)
jne    8048ab0 <_init-0x83c>
push   $0x6b6f74
jo     8048aa4 <_init-0x848>
insl   (%dx),%es:(%edi)
pop    %edi
outsb  %gs:(%esi),(%dx)
add    %dh,%fs:0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
popa
jne    8048ac4 <_init-0x828>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
add    %ch,%gs:0x62(%ecx,%ebp,2)
jo     8048ac0 <_init-0x82c>
insl   (%dx),%es:(%edi)
pop    %edi
insl   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%ebx),%esi
xor    %al,(%eax)
insl   (%dx),%es:(%edi)
imul   $0x6e6f635f,0x63(%ebx),%esi
jbe    8048a75 <_init-0x877>
insb   (%dx),%es:(%edi)
imul   $0x2e6f732e,0x63(%edx),%esp
add    %bl,%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048af9 <_init-0x7f3>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %dh,0x65(%ebx)
je     8048b07 <_init-0x7e5>
imul   $0x6f6f7268,0x63(%eax,%eax,1),%esp
je     8048a9c <_init-0x850>
data16
data16
insb   (%dx),%es:(%edi)
jne    8048b14 <_init-0x7d8>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jo     8048b20 <_init-0x7cc>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x65,(%eax),%eax
js     8048b23 <_init-0x7c9>
je     8048abc <_init-0x830>
jae    8048b23 <_init-0x7c9>
je     8048b2c <_init-0x7c0>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x74(%ebx)
jb     8048b38 <_init-0x7b4>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     8048b3b <_init-0x7b1>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     8048b4b <_init-0x7a1>
arpl   %bp,0x72(%eax)
add    %dh,0x61(%edi)
imul   $0x7274735f,0x5f(%eax,%eax,1),%esi
fs
jne    8048b5a <_init-0x792>
add    %dh,0x65(%eax)
jb     8048b61 <_init-0x78b>
outsl  %ds:(%esi),(%dx)
jb     8048af2 <_init-0x7fa>
arpl   %sp,%fs:0x65(%edi)
je     8048b6c <_init-0x780>
gs
js     8048b6f <_init-0x77d>
add    %ah,0x65(%edi)
je     8048b70 <_init-0x77c>
ja     8048b77 <_init-0x775>
imul   $0x6774696e,0x69(%eax,%eax,1),%esp
jb     8048b7b <_init-0x771>
jne    8048b7e <_init-0x76e>
jae    8048b10 <_init-0x7dc>
addr16
gs
je     8048b89 <_init-0x763>
jae    8048b7b <_init-0x771>
jb     8048b8b <_init-0x761>
push   $0x6c6c65
jae    8048b88 <_init-0x764>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048b96 <_init-0x756>
arpl   %si,0x79(%eax)
add    %ah,0x6f(%esi)
jb     8048b9b <_init-0x751>
add    %dh,0x69(%ebx)
addr16 jo 8048ba8 <_init-0x744>
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x61(%ebp)
jae    8048ba7 <_init-0x745>
add    %dh,0x69(%ebx)
imul   $0x6573,0x6c(%si),%bp
je     8048b48 <_init-0x7a4>
pop    %edi
pop    %edi
jae    8048bc0 <_init-0x72c>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x6c6c6165,0x72(%eax,%eax,1),%ebp
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
data16
jae    8048bdd <_init-0x70f>
outsb  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048bdd <_init-0x70f>
jb     8048bdf <_init-0x70d>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %ah,0x65(%edi)
je     8048be3 <_init-0x709>
imul   $0x6c6c69,0x6b(%eax,%eax,1),%esp
pop    %edi
pop    %edi
popa
jae    8048bf3 <_init-0x6f9>
gs
jb     8048bf7 <_init-0x6f5>
pop    %edi
popaw
imul   $0x7770646e,0x65(%eax,%eax,1),%ebp
outsb  %gs:(%esi),(%dx)
je     8048b92 <_init-0x75a>
jae    8048c08 <_init-0x6e4>
jb     8048c0a <_init-0x6e2>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
add    %ch,0x73(%ecx)
popa
je     8048c12 <_init-0x6da>
jns    8048ba0 <_init-0x74c>
gs
js     8048c08 <_init-0x6e4>
arpl   %bp,0x0(%ebp,%eiz,2)
data16
addr16
gs
je     8048c1f <_init-0x6cd>
add    %ah,0x65(%edi)
je     8048c21 <_init-0x6cb>
ja     8048c21 <_init-0x6cb>
popa
insl   (%dx),%es:(%edi)
add    %dh,0x74(%ebx)
jb     8048c26 <_init-0x6c6>
outsb  %gs:(%esi),(%dx)
add    %dh,0x69(%ebx)
addr16
gs
insl   (%dx),%es:(%edi)
jo     8048c38 <_init-0x6b4>
jns    8048c39 <_init-0x6b3>
gs
je     8048bc9 <_init-0x723>
outsl  %ds:(%esi),(%dx)
jo     8048c31 <_init-0x6bb>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ch,0x65(%di)
insl   (%dx),%es:(%edi)
jae    8048c3b <_init-0x6b1>
je     8048bd8 <_init-0x714>
pop    %edi
pop    %edi
gs
jb     8048c4f <_init-0x69d>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x64686300,0x6e(%edi),%ebp
imul   $0x79735f5f,0x0(%edx),%esi
jae    8048c61 <_init-0x68b>
outsl  %ds:(%esi),(%dx)
addr16 pop %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x79(%esp,%esi,2)
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
data16
jo     8048c7b <_init-0x671>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
imul   $0x65736464,0x61(%edi),%esp
je     8048c1c <_init-0x6d0>
addr16
gs
je     8048c90 <_init-0x65c>
ja     8048c97 <_init-0x655>
imul   $0x64747300,0x72(%edi,%ebx,2),%esp
outsl  %ds:(%esi),(%dx)
jne    8048ca1 <_init-0x64b>
add    %ah,0x70(%esi)
jne    8048ca6 <_init-0x646>
arpl   %ax,(%eax)
data16
jo     8048cac <_init-0x640>
je     8048cac <_init-0x640>
add    %ah,0x6e(%ebp)
fs
jne    8048cb2 <_init-0x63a>
gs
jb     8048cb5 <_init-0x637>
push   $0x6c6c65
data16
arpl   %bp,0x73(%edi,%ebp,2)
add    %ah,%gs:0x6e(%ebp)
fs
jae    8048cc3 <_init-0x629>
outsb  %gs:(%esi),(%dx)
je     8048c57 <_init-0x695>
insl   (%dx),%es:(%edi)
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jne    8048ccd <_init-0x61f>
popa
jae    8048cce <_init-0x61e>
add    %dh,0x74(%ebx)
jb     8048ccb <_init-0x621>
popa
jae    8048cd0 <_init-0x61c>
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
jae    8048ce7 <_init-0x605>
jb     8048ce3 <_init-0x609>
arpl   %si,0x79(%eax)
pop    %edi
arpl   %bp,0x6b(%eax)
add    %ah,0x65(%edi)
je     8048ce8 <_init-0x604>
imul   $0x7974635f,0x5f(%eax,%eax,1),%esp
jo     8048cf0 <_init-0x5fc>
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     8048cfb <_init-0x5f1>
outsb  %ds:(%esi),(%dx)
jbe    8048c99 <_init-0x653>
outsl  %ds:(%esi),(%dx)
jo     8048d10 <_init-0x5dc>
popa
jb     8048d06 <_init-0x5e6>
add    %dh,0x74(%ebx)
fs
gs
jb     8048d18 <_init-0x5d4>
add    %ah,0x6c(%ecx)
popa
jb     8048d19 <_init-0x5d3>
add    %bl,0x5f(%edi)
jae    8048d1f <_init-0x5cd>
jo     8048d25 <_init-0x5c7>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x67,(%eax),%eax
gs
je     8048d2c <_init-0x5c0>
outsl  %ds:(%esi),(%dx)
imul   $0x75746567,0x0(%bp),%ebp
imul   $0x76636578,0x65(%eax,%eax,1),%esp
add    %ah,%gs:0x65(%edi)
je     8048d46 <_init-0x5a6>
jo     8048d4d <_init-0x59f>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x65(%bx)
je     8048d53 <_init-0x599>
ja     8048d53 <_init-0x599>
popa
insl   (%dx),%es:(%edi)
pop    %edi
jb     8048cea <_init-0x602>
imul   $0x6f,0x6e(%ebp,%eiz,2),%bp
jae    8048d5c <_init-0x590>
addr16 popa
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
add    %dh,0x61(%edi)
imul   $0x6f6c0064,0x69(%eax,%esi,2),%esi
arpl   %sp,0x6c(%ecx)
je     8048d73 <_init-0x579>
insl   (%dx),%es:(%edi)
add    %dh,%gs:0x74(%ebx)
jb     8048d74 <_init-0x578>
push   $0x65730072
je     8048d8d <_init-0x55f>
jae    8048d7f <_init-0x56d>
jb     8048d8f <_init-0x55d>
push   $0x6c6c65
pop    %edi
pop    %edi
jae    8048d99 <_init-0x553>
jb     8048d8a <_init-0x562>
jo     8048da2 <_init-0x54a>
pop    %edi
arpl   %bp,0x6b(%eax)
add    %dh,0x65(%ebx)
je     8048da5 <_init-0x547>
imul   $0x6e65706f,0x66(%eax,%eax,1),%esp
ss
xor    $0x0,%al
bound  %ebp,0x6e(%ecx)
fs
je     8048da8 <_init-0x544>
js     8048db9 <_init-0x533>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x65636361,0x0(%esi),%ebp
jae    8048dc5 <_init-0x527>
add    %dh,0x65(%ebx)
je     8048dbe <_init-0x52e>
imul   $0x6d637274,0x73(%eax,%eax,1),%esp
jo     8048d61 <_init-0x58b>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     8048de1 <_init-0x50b>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x72726566,0x0(%esi),%ebp
outsl  %ds:(%esi),(%dx)
jb     8048d7a <_init-0x572>
arpl   %bp,0x73(%edi,%ebp,2)
gs
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %ah,0x72(%bp)
gs add %bl,%gs:0x5f(%edi)
outsb  %gs:(%esi),(%dx)
jbe    8048df7 <_init-0x4f5>
jb     8048dff <_init-0x4ed>
outsb  %ds:(%esi),(%dx)
add    %bl,0x66(%edi)
imul   $0x6e695f00,0x69(%esi),%ebp
imul   $0x74616465,0x5f(%eax,%eax,1),%esi
popa
add    %bl,0x5f(%edi)
bound  %esi,0x73(%ebx)
pop    %edi
jae    8048e21 <_init-0x4cb>
popa
jb     8048e24 <_init-0x4c8>
add    %cl,0x42(%ecx,%ecx,2)
push   %eax
inc    %ecx
dec    %ebp
pop    %edi
dec    %ebp
dec    %ecx
push   %ebx
inc    %ebx
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
dec    %esp
dec    %ecx
inc    %edx
push   %eax
inc    %ecx
dec    %ebp
pop    %edi
xor    %ebp,(%esi)
xor    %al,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x2000200,%eax
add    %al,(%edx)
add    %al,(%esi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
pop    %es
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
push   %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
pop    %es
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    $0x0,%al
add    $0x2000300,%eax
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%eax,%eax,1)
add    $0x0,%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
or     %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    %eax,(%eax)
add    (%eax),%al
or     %al,(%eax)
add    (%eax),%al
add    %eax,(%eax)
add    %eax,(%eax)
or     (%ecx),%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
shrb   0x93f(%eax)
or     %al,(%eax)
popa
add    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0x2f(%eax)
push   $0x4000004
add    %dh,0x4(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
push   %es
add    %ah,0x10000001
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x90000,0xd(%ecx),%ebp
jl     8048f52 <_init-0x39a>
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
adc    $0x69,%al
imul   $0x486,0x70000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x60000,%eax
nop
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%edx)
imul   $0x50000,(%ecx),%ecx
lcall  $0x0,$0x10000004
add    %dh,0x69(%ecx,%ebx,1)
or     %eax,(%eax)
add    %al,(%ebx)
add    %ah,0x10000004(%esi)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
mov    $0x4,%dl
add    %al,(%eax)
add    %al,(%eax)
cld
syscall
or     %al,(%esi)
sub    $0x14800000,%eax
add    $0x6b0508,%eax
add    %al,0x6c050805(%esp,%edx,1)
add    %al,(%eax)
mov    0x5080514,%al
jno    8048fc3 <_init-0x329>
add    %al,%al
adc    $0x5,%al
or     %al,0xc4000068
adc    $0x5,%al
.byte 0x8
.byte 0x5
jae    8048fd3 <_init-0x319>
or     $0x10,%al
add    $0x10708,%eax
add    %dl,(%eax)
adc    %al,0x20708
add    %dl,(%eax,%edx,1)
add    $0x30708,%eax
add    %bl,(%eax)
adc    %al,0x40708
add    %bl,(%eax,%edx,1)
add    $0x50708,%eax
add    %ah,(%eax)
adc    %al,0x60708
add    %ah,(%eax,%edx,1)
add    $0x80708,%eax
add    %ch,(%eax)
adc    %al,0x90708
add    %ch,(%eax,%edx,1)
add    $0xa0708,%eax
add    %dh,(%eax)
adc    %al,0xb0708
add    %dh,(%eax,%edx,1)
add    $0xc0708,%eax
add    %bh,(%eax)
adc    %al,0xd0708
add    %bh,(%eax,%edx,1)
add    $0xe0708,%eax
add    %al,0x10(%eax)
add    $0xf0708,%eax
add    %al,0x5(%eax,%edx,1)
or     %al,(%edi)
adc    %al,(%eax)
add    %cl,0x10(%eax)
add    $0x110708,%eax
add    %cl,0x5(%eax,%edx,1)
or     %al,(%edi)
adc    (%eax),%al
add    %dl,0x10(%eax)
add    $0x130708,%eax
add    %dl,0x5(%eax,%edx,1)
or     %al,(%edi)
adc    $0x0,%al
add    %bl,0x10(%eax)
add    $0x150708,%eax
add    %bl,0x5(%eax,%edx,1)
or     %al,(%edi)
push   %ss
add    %al,(%eax)
pusha
adc    %al,0x170708
add    %ah,0x5(%eax,%edx,1)
or     %al,(%edi)
sbb    %al,(%eax)
add    %ch,0x10(%eax)
add    $0x190708,%eax
add    %ch,0x5(%eax,%edx,1)
or     %al,(%edi)
sbb    (%eax),%al
add    %dh,0x10(%eax)
add    $0x1b0708,%eax
add    %dh,0x5(%eax,%edx,1)
or     %al,(%edi)
sbb    $0x0,%al
add    %bh,0x10(%eax)
add    $0x1d0708,%eax
add    %bh,0x5(%eax,%edx,1)
or     %al,(%edi)
push   %ds
add    %al,(%eax)
adcb   $0x5,(%eax)
or     %al,(%edi)
pop    %ds
add    %al,(%eax)
test   %dl,(%eax)
add    $0x200708,%eax
add    %cl,0x7080510(%eax)
and    %eax,(%eax)
add    %cl,0x22070805(%eax,%edx,1)
add    %al,(%eax)
nop
adc    %al,0x230708
add    %dl,0x72070805(%eax,%edx,1)
add    %al,(%eax)
cwtl
adc    %al,0x240708
add    %bl,0x25070805(%eax,%edx,1)
add    %al,(%eax)
mov    0x7080510,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
adc    %al,0x270708
add    %ch,0x7080510(%eax)
sub    %al,(%eax)
add    %ch,0x29070805(%eax,%edx,1)
add    %al,(%eax)
mov    $0x10,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%edx,1)
add    %al,(%eax)
mov    $0x7080510,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%edx,1)
add    %al,(%eax)
rclb   $0x5,(%eax)
or     %al,(%edi)
add    %al,%cs:(%eax)
les    (%eax),%edx
add    $0x2f0708,%eax
add    %cl,%al
adc    %al,0x300708
add    %cl,%ah
adc    %al,0x310708
add    %dl,%al
adc    %al,0x320708
add    %dl,%ah
adc    %al,0x330708
add    %bl,%al
adc    %al,0x340708
add    %bl,%ah
adc    %al,0x350708
add    %ah,%al
adc    %al,0x360708
add    %ah,%ah
adc    %al,0x370708
add    %ch,%al
adc    %al,0x380708
add    %ch,%ah
adc    %al,0x390708
add    %dh,%al
adc    %al,0x3a0708
add    %dh,%ah
adc    %al,0x3b0708
add    %bh,%al
adc    %al,0x3c0708
add    %bh,%ah
adc    %al,0x3d0708
add    %al,(%eax)
adc    %eax,0x3e0708
add    %al,(%ecx,%edx,1)
add    $0x3f0708,%eax
add    %cl,(%eax)
adc    %eax,0x400708
add    %cl,(%ecx,%edx,1)
add    $0x410708,%eax
add    %dl,(%eax)
adc    %eax,0x420708
add    %dl,(%ecx,%edx,1)
add    $0x430708,%eax
add    %bl,(%eax)
adc    %eax,0x440708
add    %bl,(%ecx,%edx,1)
add    $0x450708,%eax
add    %ah,(%eax)
adc    %eax,0x460708
add    %ah,(%ecx,%edx,1)
add    $0x470708,%eax
add    %ch,(%eax)
adc    %eax,0x480708
add    %ch,(%ecx,%edx,1)
add    $0x490708,%eax
add    %dh,(%eax)
adc    %eax,0x4a0708
add    %dh,(%ecx,%edx,1)
add    $0x4b0708,%eax
add    %bh,(%eax)
adc    %eax,0x4c0708
add    %bh,(%ecx,%edx,1)
add    $0x4d0708,%eax
add    %al,0x11(%eax)
add    $0x4e0708,%eax
add    %al,0x5(%ecx,%edx,1)
or     %al,(%edi)
dec    %edi
add    %al,(%eax)
dec    %eax
adc    %eax,0x500708
add    %cl,0x5(%ecx,%edx,1)
or     %al,(%edi)
push   %ecx
add    %al,(%eax)
push   %eax
adc    %eax,0x520708
add    %dl,0x5(%ecx,%edx,1)
or     %al,(%edi)
push   %ebx
add    %al,(%eax)
pop    %eax
adc    %eax,0x550708
add    %bl,0x5(%ecx,%edx,1)
or     %al,(%edi)
push   %esi
add    %al,(%eax)
pusha
adc    %eax,0x570708
add    %ah,0x5(%ecx,%edx,1)
or     %al,(%edi)
pop    %eax
add    %al,(%eax)
push   $0x7080511
pop    %ecx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    %eax,0x5a0708
add    %dh,0x11(%eax)
add    $0x5c0708,%eax
add    %dh,0x5(%ecx,%edx,1)
or     %al,(%edi)
pop    %ebp
add    %al,(%eax)
js     80492bf <_init-0x2d>
add    $0x5e0708,%eax
add    %bh,0x5(%ecx,%edx,1)
or     %al,(%edi)
pop    %edi
add    %al,(%eax)
adcb   $0x5,(%ecx)
or     %al,(%edi)
pusha
add    %al,(%eax)
test   %dl,(%ecx)
add    $0x610708,%eax
add    %cl,0x7080511(%eax)
bound  %eax,(%eax)
add    %cl,0x63070805(%ecx,%edx,1)
add    %al,(%eax)
nop
adc    %eax,0x640708
add    %dl,0x65070805(%ecx,%edx,1)
push   %ebx
sub    $0x8,%esp
call   804ab70 <__ctype_b_loc@plt+0x1230>
add    $0x7d0b,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     804930a <_init+0x1e>
call   80495e0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8051004
jmp    *0x8051008
add    %al,(%eax)
jmp    *0x805100c
push   $0x0
jmp    8049310 <_init+0x24>
jmp    *0x8051010
push   $0x8
jmp    8049310 <_init+0x24>
jmp    *0x8051014
push   $0x10
jmp    8049310 <_init+0x24>
jmp    *0x8051018
push   $0x18
jmp    8049310 <_init+0x24>
jmp    *0x805101c
push   $0x20
jmp    8049310 <_init+0x24>
jmp    *0x8051020
push   $0x28
jmp    8049310 <_init+0x24>
jmp    *0x8051024
push   $0x30
jmp    8049310 <_init+0x24>
jmp    *0x8051028
push   $0x38
jmp    8049310 <_init+0x24>
jmp    *0x805102c
push   $0x40
jmp    8049310 <_init+0x24>
jmp    *0x8051030
push   $0x48
jmp    8049310 <_init+0x24>
jmp    *0x8051034
push   $0x50
jmp    8049310 <_init+0x24>
jmp    *0x8051038
push   $0x58
jmp    8049310 <_init+0x24>
jmp    *0x805103c
push   $0x60
jmp    8049310 <_init+0x24>
jmp    *0x8051040
push   $0x68
jmp    8049310 <_init+0x24>
jmp    *0x8051044
push   $0x70
jmp    8049310 <_init+0x24>
jmp    *0x8051048
push   $0x78
jmp    8049310 <_init+0x24>
jmp    *0x805104c
push   $0x80
jmp    8049310 <_init+0x24>
jmp    *0x8051050
push   $0x88
jmp    8049310 <_init+0x24>
jmp    *0x8051054
push   $0x90
jmp    8049310 <_init+0x24>
jmp    *0x8051058
push   $0x98
jmp    8049310 <_init+0x24>
jmp    *0x805105c
push   $0xa0
jmp    8049310 <_init+0x24>
jmp    *0x8051060
push   $0xa8
jmp    8049310 <_init+0x24>
jmp    *0x8051064
push   $0xb0
jmp    8049310 <_init+0x24>
jmp    *0x8051068
push   $0xb8
jmp    8049310 <_init+0x24>
jmp    *0x805106c
push   $0xc0
jmp    8049310 <_init+0x24>
jmp    *0x8051070
push   $0xc8
jmp    8049310 <_init+0x24>
jmp    *0x8051074
push   $0xd0
jmp    8049310 <_init+0x24>
jmp    *0x8051078
push   $0xd8
jmp    8049310 <_init+0x24>
jmp    *0x805107c
push   $0xe0
jmp    8049310 <_init+0x24>
jmp    *0x8051080
push   $0xe8
jmp    8049310 <_init+0x24>
jmp    *0x8051084
push   $0xf0
jmp    8049310 <_init+0x24>
jmp    *0x8051088
push   $0xf8
jmp    8049310 <_init+0x24>
jmp    *0x805108c
push   $0x100
jmp    8049310 <_init+0x24>
jmp    *0x8051090
push   $0x108
jmp    8049310 <_init+0x24>
jmp    *0x8051094
push   $0x110
jmp    8049310 <_init+0x24>
jmp    *0x8051098
push   $0x118
jmp    8049310 <_init+0x24>
jmp    *0x805109c
push   $0x120
jmp    8049310 <_init+0x24>
jmp    *0x80510a0
push   $0x128
jmp    8049310 <_init+0x24>
jmp    *0x80510a4
push   $0x130
jmp    8049310 <_init+0x24>
jmp    *0x80510a8
push   $0x138
jmp    8049310 <_init+0x24>
jmp    *0x80510ac
push   $0x140
jmp    8049310 <_init+0x24>
jmp    *0x80510b0
push   $0x148
jmp    8049310 <_init+0x24>
jmp    *0x80510b4
push   $0x150
jmp    8049310 <_init+0x24>
jmp    *0x80510b8
push   $0x158
jmp    8049310 <_init+0x24>
jmp    *0x80510bc
push   $0x160
jmp    8049310 <_init+0x24>
jmp    *0x80510c0
push   $0x168
jmp    8049310 <_init+0x24>
jmp    *0x80510c4
push   $0x170
jmp    8049310 <_init+0x24>
jmp    *0x80510c8
push   $0x178
jmp    8049310 <_init+0x24>
jmp    *0x80510cc
push   $0x180
jmp    8049310 <_init+0x24>
jmp    *0x80510d0
push   $0x188
jmp    8049310 <_init+0x24>
jmp    *0x80510d4
push   $0x190
jmp    8049310 <_init+0x24>
jmp    *0x80510d8
push   $0x198
jmp    8049310 <_init+0x24>
jmp    *0x80510dc
push   $0x1a0
jmp    8049310 <_init+0x24>
jmp    *0x80510e0
push   $0x1a8
jmp    8049310 <_init+0x24>
jmp    *0x80510e4
push   $0x1b0
jmp    8049310 <_init+0x24>
jmp    *0x80510e8
push   $0x1b8
jmp    8049310 <_init+0x24>
jmp    *0x80510ec
push   $0x1c0
jmp    8049310 <_init+0x24>
jmp    *0x80510f0
push   $0x1c8
jmp    8049310 <_init+0x24>
jmp    *0x80510f4
push   $0x1d0
jmp    8049310 <_init+0x24>
jmp    *0x80510f8
push   $0x1d8
jmp    8049310 <_init+0x24>
jmp    *0x80510fc
push   $0x1e0
jmp    8049310 <_init+0x24>
jmp    *0x8051100
push   $0x1e8
jmp    8049310 <_init+0x24>
jmp    *0x8051104
push   $0x1f0
jmp    8049310 <_init+0x24>
jmp    *0x8051108
push   $0x1f8
jmp    8049310 <_init+0x24>
jmp    *0x805110c
push   $0x200
jmp    8049310 <_init+0x24>
jmp    *0x8051110
push   $0x208
jmp    8049310 <_init+0x24>
jmp    *0x8051114
push   $0x210
jmp    8049310 <_init+0x24>
jmp    *0x8051118
push   $0x218
jmp    8049310 <_init+0x24>
jmp    *0x805111c
push   $0x220
jmp    8049310 <_init+0x24>
jmp    *0x8051120
push   $0x228
jmp    8049310 <_init+0x24>
jmp    *0x8051124
push   $0x230
jmp    8049310 <_init+0x24>
jmp    *0x8051128
push   $0x238
jmp    8049310 <_init+0x24>
jmp    *0x805112c
push   $0x240
jmp    8049310 <_init+0x24>
jmp    *0x8051130
push   $0x248
jmp    8049310 <_init+0x24>
jmp    *0x8051134
push   $0x250
jmp    8049310 <_init+0x24>
jmp    *0x8051138
push   $0x258
jmp    8049310 <_init+0x24>
jmp    *0x805113c
push   $0x260
jmp    8049310 <_init+0x24>
jmp    *0x8051140
push   $0x268
jmp    8049310 <_init+0x24>
jmp    *0x8051144
push   $0x270
jmp    8049310 <_init+0x24>
jmp    *0x8051148
push   $0x278
jmp    8049310 <_init+0x24>
jmp    *0x805114c
push   $0x280
jmp    8049310 <_init+0x24>
jmp    *0x8051150
push   $0x288
jmp    8049310 <_init+0x24>
jmp    *0x8051154
push   $0x290
jmp    8049310 <_init+0x24>
jmp    *0x8051158
push   $0x298
jmp    8049310 <_init+0x24>
jmp    *0x805115c
push   $0x2a0
jmp    8049310 <_init+0x24>
jmp    *0x8051160
push   $0x2a8
jmp    8049310 <_init+0x24>
jmp    *0x8051164
push   $0x2b0
jmp    8049310 <_init+0x24>
jmp    *0x8051168
push   $0x2b8
jmp    8049310 <_init+0x24>
jmp    *0x805116c
push   $0x2c0
jmp    8049310 <_init+0x24>
jmp    *0x8051170
push   $0x2c8
jmp    8049310 <_init+0x24>
jmp    *0x8051174
push   $0x2d0
jmp    8049310 <_init+0x24>
jmp    *0x8051178
push   $0x2d8
jmp    8049310 <_init+0x24>
jmp    *0x805117c
push   $0x2e0
jmp    8049310 <_init+0x24>
jmp    *0x8051180
push   $0x2e8
jmp    8049310 <_init+0x24>
jmp    *0x8051184
push   $0x2f0
jmp    8049310 <_init+0x24>
jmp    *0x8051188
push   $0x2f8
jmp    8049310 <_init+0x24>
jmp    *0x805118c
push   $0x300
jmp    8049310 <_init+0x24>
jmp    *0x8051190
push   $0x308
jmp    8049310 <_init+0x24>
jmp    *0x8051194
push   $0x310
jmp    8049310 <_init+0x24>
push   %edi
push   %esi
mov    %edx,%esi
push   %ebx
mov    %eax,%ebx
sub    $0x20,%esp
mov    %eax,(%esp)
movl   $0x8053500,0xc(%esp)
movl   $0x8051500,0x8(%esp)
movl   $0x0,0x4(%esp)
call   804c940 <__ctype_b_loc@plt+0x3000>
movl   $0x804df8a,(%esp)
call   804d5f0 <__ctype_b_loc@plt+0x3cb0>
test   %al,%al
je     8049a3b <__ctype_b_loc@plt+0xfb>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     80499ca <__ctype_b_loc@plt+0x8a>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     80499cc <__ctype_b_loc@plt+0x8c>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
jmp    80499cc <__ctype_b_loc@plt+0x8c>
xor    %edi,%edi
cmpb   $0x0,0x8053500
mov    $0x804df86,%edx
mov    $0x8053500,%ecx
mov    $0x8051500,%eax
mov    %ebx,0xc(%esp)
cmove  %edx,%ecx
cmpb   $0x0,0x8051500
mov    %ecx,0x14(%esp)
movl   $0x804df9b,0x8(%esp)
cmove  %edx,%eax
mov    %esi,%edx
cmp    $0x1,%dl
sbb    %edx,%edx
not    %edx
add    $0x6,%edx
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %edx,(%esp)
call   80497b0 <__syslog_chk@plt>
test   %edi,%edi
je     8049a3b <__ctype_b_loc@plt+0xfb>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %edi,(%esp)
call   80493c0 <free@plt>
call   8049650 <closelog@plt>
movl   $0x1,(%esp)
call   80495f0 <exit@plt>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
mov    %esp,%ebp
push   %edi
push   %esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x30,%esp
mov    0xc(%ebp),%ebx
movl   $0x804e0b8,(%esp)
mov    0x8(%ebp),%esi
call   8049580 <getenv@plt>
movl   $0x804e1ab,0x4(%esp)
movl   $0x6,(%esp)
test   %eax,%eax
setne  %al
movzbl %al,%eax
mov    %eax,0x80514ec
call   80497f0 <setlocale@plt>
movl   $0x804e0c9,0x4(%esp)
movl   $0x804e0db,(%esp)
call   80498a0 <bindtextdomain@plt>
movl   $0x804e0db,(%esp)
call   80494e0 <textdomain@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804ba30 <__ctype_b_loc@plt+0x20f0>
mov    %eax,0x8055524
call   80494a0 <getuid@plt>
movl   $0x0,(%esp)
test   %eax,%eax
sete   %dl
mov    %dl,0x8055510
mov    %edx,0x2c(%esp)
mov    %eax,0x805550c
call   8049670 <ttyname@plt>
movl   $0x0,(%esp)
mov    %eax,%edi
mov    %eax,0x8055514
call   80498c0 <isatty@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     8049b97 <__ctype_b_loc@plt+0x257>
test   %edi,%edi
je     8049b97 <__ctype_b_loc@plt+0x257>
call   804bfd0 <__ctype_b_loc@plt+0x2690>
test   %eax,%eax
mov    %eax,%edi
je     804a639 <__ctype_b_loc@plt+0xcf9>
movl   $0x1fff,0x8(%esp)
mov    (%eax),%eax
movl   $0x8051500,(%esp)
mov    %eax,0x4(%esp)
call   8049740 <strncpy@plt>
mov    %edi,(%esp)
movb   $0x0,0x80534ff
call   804dae0 <__ctype_b_loc@plt+0x41a0>
movl   $0x50,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804e0e2,(%esp)
call   8049850 <openlog@plt>
movl   $0x0,0x10(%esp)
movl   $0x80511c0,0xc(%esp)
movl   $0x804e0e5,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
call   8049630 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     8049bec <__ctype_b_loc@plt+0x2ac>
sub    $0x63,%eax
cmp    $0x10,%eax
ja     8049be2 <__ctype_b_loc@plt+0x2a2>
nop
jmp    *0x804e208(,%eax,4)
test   %dl,%dl
je     804a706 <__ctype_b_loc@plt+0xdc6>
movl   $0x804df86,0x8055514
08
jmp    8049b0a <__ctype_b_loc@plt+0x1ca>
mov    0x80514c4,%eax
mov    %eax,0x8055504
jmp    8049b5e <__ctype_b_loc@plt+0x21e>
movb   $0x0,0x8051220
jmp    8049b5e <__ctype_b_loc@plt+0x21e>
movb   $0x1,0x8055508
jmp    8049b5e <__ctype_b_loc@plt+0x21e>
xor    %eax,%eax
call   804ac50 <__ctype_b_loc@plt+0x1310>
mov    0x80514c4,%eax
mov    %eax,0x8055500
jmp    8049b5e <__ctype_b_loc@plt+0x21e>
mov    $0x2,%eax
call   804ac50 <__ctype_b_loc@plt+0x1310>
mov    0x80514a0,%eax
cmp    %eax,%esi
jle    8049cc6 <__ctype_b_loc@plt+0x386>
mov    (%ebx,%eax,4),%edx
lea    0x0(,%eax,4),%ecx
cmpb   $0x2d,(%edx)
jne    8049e33 <__ctype_b_loc@plt+0x4f3>
cmpb   $0x0,0x1(%edx)
jne    8049e33 <__ctype_b_loc@plt+0x4f3>
lea    0x1(%eax),%edx
cmp    %edx,%esi
movb   $0x1,0x8055508
mov    %edx,0x80514a0
jle    8049cc6 <__ctype_b_loc@plt+0x386>
mov    0x4(%ebx,%ecx,1),%ecx
cmpb   $0x2d,(%ecx)
jne    8049e31 <__ctype_b_loc@plt+0x4f1>
cmpb   $0x2d,0x1(%ecx)
jne    8049e31 <__ctype_b_loc@plt+0x4f1>
cmpb   $0x0,0x2(%ecx)
jne    8049e31 <__ctype_b_loc@plt+0x4f1>
add    $0x2,%eax
cmp    %eax,%esi
mov    %eax,%edi
mov    %eax,0x80514a0
jle    8049cc6 <__ctype_b_loc@plt+0x386>
mov    (%ebx,%edi,4),%eax
lea    0x0(,%edi,4),%ecx
mov    %ecx,0x2c(%esp)
cmpb   $0x2d,(%eax)
je     8049cc6 <__ctype_b_loc@plt+0x386>
lea    0x1(%edi),%edx
movl   $0x1fff,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x8053500,(%esp)
mov    %edx,0x80514a0
mov    %edx,0x28(%esp)
call   8049740 <strncpy@plt>
mov    0x28(%esp),%edx
movb   $0x0,0x80554ff
mov    0x2c(%esp),%ecx
cmp    %edx,%esi
jle    8049cc6 <__ctype_b_loc@plt+0x386>
mov    0x4(%ebx,%ecx,1),%eax
cmpb   $0x2d,(%eax)
jne    8049cc6 <__ctype_b_loc@plt+0x386>
cmpb   $0x2d,0x1(%eax)
jne    8049cc6 <__ctype_b_loc@plt+0x386>
cmpb   $0x0,0x2(%eax)
jne    8049cc6 <__ctype_b_loc@plt+0x386>
add    $0x2,%edi
mov    %edi,0x80514a0
cmpb   $0x0,0x8053500
je     804a43c <__ctype_b_loc@plt+0xafc>
cmp    0x80514a0,%esi
sete   0x8055509
cmpl   $0x0,0x8055500
je     8049cf0 <__ctype_b_loc@plt+0x3b0>
movb   $0x0,0x8055509
call   804ba60 <__ctype_b_loc@plt+0x2120>
movl   $0x80514e8,0xc(%esp)
movl   $0x8051224,0x8(%esp)
movl   $0x8053500,0x4(%esp)
movl   $0x804e0e2,(%esp)
call   8049350 <pam_start@plt>
test   %eax,%eax
mov    %eax,%esi
jne    804a9eb <__ctype_b_loc@plt+0x10ab>
mov    0x8055514,%eax
movl   $0x3,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x80514e8,%eax
mov    %eax,(%esp)
call   8049390 <pam_set_item@plt>
test   %eax,%eax
mov    %eax,%esi
je     8049e3a <__ctype_b_loc@plt+0x4fa>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804a8f4 <__ctype_b_loc@plt+0xfb4>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a8f4 <__ctype_b_loc@plt+0xfb4>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e138,0x8(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
mov    0x8055524,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e00f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049470 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
jmp    804a847 <__ctype_b_loc@plt+0xf07>
mov    %edx,%eax
mov    %eax,%edi
jmp    8049c5d <__ctype_b_loc@plt+0x31d>
mov    0x80514e8,%eax
movl   $0x8051500,0x8(%esp)
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   8049390 <pam_set_item@plt>
test   %eax,%eax
mov    %eax,%esi
jne    8049d4b <__ctype_b_loc@plt+0x40b>
call   804b360 <__ctype_b_loc@plt+0x1a20>
cmpl   $0x0,0x8055504
mov    %eax,0x2c(%esp)
je     804a547 <__ctype_b_loc@plt+0xc07>
cmpb   $0x0,0x8055510
je     804a402 <__ctype_b_loc@plt+0xac2>
mov    0x8055504,%eax
test   %eax,%eax
je     804a52e <__ctype_b_loc@plt+0xbee>
cmpb   $0x0,(%eax)
jne    8049ea0 <__ctype_b_loc@plt+0x560>
movl   $0x804e149,0x8055504
08
mov    0x8055514,%eax
movl   $0x8053500,0xc(%esp)
movl   $0x8051500,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,(%esp)
call   804c940 <__ctype_b_loc@plt+0x3000>
movl   $0x804df8a,(%esp)
call   804d5f0 <__ctype_b_loc@plt+0x3cb0>
test   %al,%al
jne    804a34f <__ctype_b_loc@plt+0xa0f>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804c020 <__ctype_b_loc@plt+0x26e0>
test   %eax,%eax
jne    804a9a8 <__ctype_b_loc@plt+0x1068>
mov    0x80514e8,%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   80498d0 <pam_setcred@plt>
movl   $0x0,0x4(%esp)
test   %eax,%eax
mov    %eax,%esi
jne    804a954 <__ctype_b_loc@plt+0x1014>
mov    0x80514e8,%eax
mov    %eax,(%esp)
call   8049900 <pam_open_session@plt>
test   %eax,%eax
mov    %eax,%esi
jne    804a751 <__ctype_b_loc@plt+0xe11>
call   804ad20 <__ctype_b_loc@plt+0x13e0>
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804c210 <__ctype_b_loc@plt+0x28d0>
test   %eax,%eax
jne    804a745 <__ctype_b_loc@plt+0xe05>
cmpb   $0x0,0x8051220
je     8049f5a <__ctype_b_loc@plt+0x61a>
cmpb   $0x0,0x8055508
jne    804a56a <__ctype_b_loc@plt+0xc2a>
mov    0x8051480,%esi
mov    (%esi),%eax
test   %eax,%eax
je     8049f81 <__ctype_b_loc@plt+0x641>
xchg   %ax,%ax
mov    %eax,(%esp)
add    $0x4,%esi
movl   $0x0,0x4(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    (%esi),%eax
test   %eax,%eax
jne    8049f68 <__ctype_b_loc@plt+0x628>
mov    0x2c(%esp),%ecx
mov    $0x804e09c,%edx
mov    $0x804e091,%eax
cmpl   $0x0,0x8(%ecx)
cmovne %edx,%eax
mov    %eax,(%esp)
call   804d5b0 <__ctype_b_loc@plt+0x3c70>
test   %eax,%eax
mov    %eax,%esi
je     804a504 <__ctype_b_loc@plt+0xbc4>
movl   $0x3d,0x4(%esp)
mov    %eax,(%esp)
call   8049660 <strchr@plt>
test   %eax,%eax
je     804a5f3 <__ctype_b_loc@plt+0xcb3>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
movl   $0x804e1a0,(%esp)
call   8049580 <getenv@plt>
test   %eax,%eax
je     8049ff4 <__ctype_b_loc@plt+0x6b4>
movl   $0x0,0x4(%esp)
movl   $0x804e1a4,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    0x8055518,%eax
cmpb   $0x0,0x8051220
mov    %eax,0x8051480
jne    804a2d2 <__ctype_b_loc@plt+0x992>
cmpb   $0x0,0x8055509
jne    804a022 <__ctype_b_loc@plt+0x6e2>
call   8049620 <setsid@plt>
add    $0x1,%eax
je     804a8b8 <__ctype_b_loc@plt+0xf78>
call   8049810 <endpwent@plt>
call   8049760 <endspent@plt>
lea    0x0(%esi,%eiz,1),%esi
call   8049650 <closelog@plt>
cmpb   $0x0,0x8055508
je     804a291 <__ctype_b_loc@plt+0x951>
movl   $0x804e1b9,(%esp)
call   804d5b0 <__ctype_b_loc@plt+0x3c70>
test   %eax,%eax
mov    %eax,%esi
je     804a625 <__ctype_b_loc@plt+0xce5>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %esi,%edi
repnz scas %es:(%edi),%al
neg    %ecx
mov    %ecx,(%esp)
call   804cf90 <__ctype_b_loc@plt+0x3650>
movb   $0x2d,(%eax)
mov    %eax,0x28(%esp)
add    $0x1,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049550 <strcpy@plt>
cmpb   $0x0,0x8055509
jne    804a2b2 <__ctype_b_loc@plt+0x972>
mov    0x80514a0,%eax
lea    (%ebx,%eax,4),%ebx
mov    0x8055500,%eax
test   %eax,%eax
je     804a0ac <__ctype_b_loc@plt+0x76c>
movl   $0x804e1c1,-0x8(%ebx)
sub    $0x8,%ebx
mov    %eax,0x4(%ebx)
cmpl   $0x0,0x80514ec
je     804a162 <__ctype_b_loc@plt+0x822>
mov    (%ebx),%eax
cmpb   $0x2d,(%eax)
jne    804a489 <__ctype_b_loc@plt+0xb49>
cmpb   $0x63,0x1(%eax)
jne    804a489 <__ctype_b_loc@plt+0xb49>
cmpb   $0x0,0x2(%eax)
jne    804a489 <__ctype_b_loc@plt+0xb49>
lea    0x4(%ebx),%esi
mov    $0x1,%ecx
mov    %ebx,0x20(%esp)
mov    %esi,%edx
xor    %eax,%eax
mov    %ecx,%ebx
jmp    804a0f8 <__ctype_b_loc@plt+0x7b8>
or     $0xffffffff,%ecx
add    $0x4,%edx
repnz scas %es:(%edi),%al
not    %ecx
add    %ecx,%ebx
mov    (%edx),%edi
test   %edi,%edi
jne    804a0ec <__ctype_b_loc@plt+0x7ac>
mov    %ebx,%eax
mov    %eax,(%esp)
mov    %ebx,0x24(%esp)
mov    0x20(%esp),%ebx
call   804cf90 <__ctype_b_loc@plt+0x3650>
mov    %ebx,0x20(%esp)
movb   $0x0,(%eax)
mov    %eax,%ebx
jmp    804a141 <__ctype_b_loc@plt+0x801>
xor    %eax,%eax
or     $0xffffffff,%ecx
mov    %ebx,%edi
add    $0x4,%esi
repnz scas %es:(%edi),%al
not    %ecx
movw   $0x20,-0x1(%ebx,%ecx,1)
mov    -0x4(%esi),%eax
add    %ebx,%ecx
mov    %ecx,(%esp)
mov    %eax,0x4(%esp)
call   8049550 <strcpy@plt>
cmpl   $0x0,(%esi)
jne    804a11b <__ctype_b_loc@plt+0x7db>
mov    0x24(%esp),%eax
mov    %ebx,%edx
mov    0x20(%esp),%ebx
add    $0x1,%edx
movb   $0x0,-0x2(%edx,%eax,1)
mov    %edx,0x4(%ebx)
movl   $0x0,0x8(%ebx)
mov    0x28(%esp),%eax
mov    0x8055504,%esi
mov    %eax,-0x4(%ebx)
mov    0x8051480,%eax
mov    %esi,(%esp)
mov    %eax,0x24(%esp)
mov    %eax,0x8(%esp)
lea    -0x4(%ebx),%eax
mov    %eax,0x4(%esp)
call   80496b0 <execve@plt>
call   8049730 <__errno_location@plt>
mov    (%eax),%edi
movl   $0x5,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x28(%esp)
call   8049780 <access@plt>
test   %eax,%eax
jne    804a2a7 <__ctype_b_loc@plt+0x967>
xor    %edi,%edi
jmp    804a1b5 <__ctype_b_loc@plt+0x875>
add    $0x1,%edi
cmpl   $0x0,-0x4(%ebx,%edi,4)
jne    804a1b2 <__ctype_b_loc@plt+0x872>
lea    0xc(,%edi,4),%ecx
mov    %ecx,(%esp)
mov    %ecx,0x1c(%esp)
call   804cf90 <__ctype_b_loc@plt+0x3650>
movl   $0x804e150,(%eax)
movl   $0x804e1c4,0x4(%eax)
mov    %esi,(%esp)
mov    %eax,0x20(%esp)
call   804d010 <__ctype_b_loc@plt+0x36d0>
mov    0x20(%esp),%edx
mov    0x1c(%esp),%ecx
mov    %eax,0x8(%edx)
movl   $0x0,-0x4(%edx,%ecx,1)
jmp    804a208 <__ctype_b_loc@plt+0x8c8>
mov    -0x8(%ebx,%edi,4),%eax
mov    %eax,0x4(%edx,%edi,4)
sub    $0x1,%edi
cmp    $0x1,%edi
jne    804a1fd <__ctype_b_loc@plt+0x8bd>
mov    0x24(%esp),%eax
mov    %edx,0x4(%esp)
movl   $0x804e149,(%esp)
mov    %eax,0x8(%esp)
call   80496b0 <execve@plt>
mov    0x28(%esp),%edi
mov    0x8055504,%esi
mov    (%edi),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e1c6,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
mov    %ebx,(%edi)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <__ctype_b_loc@plt+0x41a0>
call   8049730 <__errno_location@plt>
cmpl   $0x2,(%eax)
sete   %al
movzbl %al,%eax
lea    -0xc(%ebp),%esp
add    $0x7e,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8055504,%eax
mov    %eax,(%esp)
call   804ba30 <__ctype_b_loc@plt+0x20f0>
mov    %eax,0x28(%esp)
jmp    804a081 <__ctype_b_loc@plt+0x741>
mov    0x28(%esp),%eax
mov    %edi,(%eax)
jmp    804a225 <__ctype_b_loc@plt+0x8e5>
mov    0x8051480,%eax
mov    %eax,0x8(%esp)
mov    0x28(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x8055504,%eax
mov    %eax,(%esp)
call   804c5c0 <__ctype_b_loc@plt+0x2c80>
jmp    804a26c <__ctype_b_loc@plt+0x92c>
mov    0x80514e8,%eax
mov    %eax,(%esp)
call   80494f0 <pam_getenvlist@plt>
test   %eax,%eax
mov    %eax,%esi
jne    804a2fa <__ctype_b_loc@plt+0x9ba>
jmp    804a300 <__ctype_b_loc@plt+0x9c0>
movl   $0x0,0x4(%esp)
add    $0x4,%esi
mov    %eax,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    (%esi),%eax
test   %eax,%eax
jne    804a2e7 <__ctype_b_loc@plt+0x9a7>
cmpb   $0x0,0x8051220
je     804a00b <__ctype_b_loc@plt+0x6cb>
cmpb   $0x0,0x8055508
mov    0x2c(%esp),%edi
je     804a498 <__ctype_b_loc@plt+0xb58>
mov    0x18(%edi),%eax
mov    0x8055504,%esi
cmp    %esi,%eax
je     804a33e <__ctype_b_loc@plt+0x9fe>
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    %esi,(%esp)
call   804d010 <__ctype_b_loc@plt+0x36d0>
mov    %eax,0x18(%edi)
mov    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804c340 <__ctype_b_loc@plt+0x2a00>
jmp    804a00b <__ctype_b_loc@plt+0x6cb>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804a608 <__ctype_b_loc@plt+0xcc8>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804a38d <__ctype_b_loc@plt+0xa4d>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
cmpb   $0x0,0x8053500
mov    $0x804df86,%ecx
mov    $0x8053500,%edx
mov    $0x8051500,%eax
movl   $0x804e153,0x8(%esp)
cmove  %ecx,%edx
cmpb   $0x0,0x8051500
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
cmove  %ecx,%eax
mov    %eax,0x10(%esp)
mov    0x8055514,%eax
movl   $0x6,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
test   %esi,%esi
je     8049ed9 <__ctype_b_loc@plt+0x599>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
jmp    8049ed9 <__ctype_b_loc@plt+0x599>
mov    0x2c(%esp),%eax
mov    0x18(%eax),%esi
call   8049610 <setusershell@plt>
call   8049360 <getusershell@plt>
test   %eax,%eax
je     804a4e9 <__ctype_b_loc@plt+0xba9>
cmpb   $0x23,(%eax)
xchg   %ax,%ax
je     804a40e <__ctype_b_loc@plt+0xace>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049340 <strcmp@plt>
test   %eax,%eax
jne    804a40e <__ctype_b_loc@plt+0xace>
call   8049400 <endusershell@plt>
jmp    8049e84 <__ctype_b_loc@plt+0x544>
movl   $0x804e0ee,(%esp)
call   8049320 <getpwnam@plt>
test   %eax,%eax
je     804a456 <__ctype_b_loc@plt+0xb16>
cmpl   $0x0,0x8(%eax)
je     804a60f <__ctype_b_loc@plt+0xccf>
movl   $0x0,(%esp)
call   8049380 <getpwuid@plt>
test   %eax,%eax
je     804a85d <__ctype_b_loc@plt+0xf1d>
movl   $0x2000,0x8(%esp)
mov    (%eax),%eax
movl   $0x8053500,(%esp)
mov    %eax,0x4(%esp)
call   8049790 <__strcpy_chk@plt>
jmp    8049cd3 <__ctype_b_loc@plt+0x393>
movl   $0x804e1c1,-0x4(%ebx)
sub    $0x4,%ebx
jmp    804a0d8 <__ctype_b_loc@plt+0x798>
mov    0x14(%edi),%eax
movl   $0x804e736,(%esp)
mov    %eax,0x4(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    (%edi),%eax
movl   $0x804e1ac,(%esp)
mov    %eax,0x4(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    (%edi),%eax
movl   $0x804e1b1,(%esp)
mov    %eax,0x4(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    0x8055504,%eax
movl   $0x804e766,(%esp)
mov    %eax,0x4(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
jmp    804a00b <__ctype_b_loc@plt+0x6cb>
call   8049400 <endusershell@plt>
movl   $0x0,0x8055504
00
movb   $0x1,0x8051220
jmp    8049e84 <__ctype_b_loc@plt+0x544>
mov    0x2c(%esp),%ecx
mov    $0x804e0a5,%edx
mov    $0x804deb4,%eax
cmpl   $0x0,0x8(%ecx)
movl   $0x0,0x4(%esp)
cmovne %edx,%eax
mov    %eax,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
jmp    8049fd0 <__ctype_b_loc@plt+0x690>
mov    0x2c(%esp),%eax
mov    0x18(%eax),%eax
test   %eax,%eax
mov    %eax,0x8055504
je     8049e96 <__ctype_b_loc@plt+0x556>
jmp    8049e91 <__ctype_b_loc@plt+0x551>
cmpb   $0x0,0x8051220
jne    8049e77 <__ctype_b_loc@plt+0x537>
movl   $0x804e766,(%esp)
call   8049580 <getenv@plt>
mov    %eax,0x8055504
jmp    8049e77 <__ctype_b_loc@plt+0x537>
movl   $0x804e188,(%esp)
call   8049580 <getenv@plt>
test   %eax,%eax
je     804a58a <__ctype_b_loc@plt+0xc4a>
mov    %eax,0x4(%esp)
movl   $0x804e188,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
movl   $0x804e183,(%esp)
call   8049580 <getenv@plt>
test   %eax,%eax
je     804a5aa <__ctype_b_loc@plt+0xc6a>
mov    %eax,0x4(%esp)
movl   $0x804e183,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
movl   $0x804e18d,(%esp)
call   8049580 <getenv@plt>
test   %eax,%eax
je     804a5ca <__ctype_b_loc@plt+0xc8a>
mov    %eax,0x4(%esp)
movl   $0x804e18d,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
movl   $0x804e195,(%esp)
call   8049580 <getenv@plt>
test   %eax,%eax
je     8049f81 <__ctype_b_loc@plt+0x641>
mov    %eax,0x4(%esp)
movl   $0x804e195,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
jmp    8049f81 <__ctype_b_loc@plt+0x641>
mov    %esi,0x4(%esp)
movl   $0x804e097,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
jmp    8049fd0 <__ctype_b_loc@plt+0x690>
xor    %esi,%esi
jmp    804a38d <__ctype_b_loc@plt+0xa4d>
movl   $0x746f6f72,0x8053500
74
movb   $0x0,0x8053504
jmp    8049cd3 <__ctype_b_loc@plt+0x393>
mov    0x8055504,%eax
mov    %eax,(%esp)
call   804ba30 <__ctype_b_loc@plt+0x20f0>
mov    %eax,%esi
jmp    804a058 <__ctype_b_loc@plt+0x718>
movl   $0x5,0x8(%esp)
mov    0x8055524,%ebx
movl   $0x804defc,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804a92a <__ctype_b_loc@plt+0xfea>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a92a <__ctype_b_loc@plt+0xfea>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x805550c,%eax
movl   $0x804df24,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
mov    0x8055514,%eax
mov    $0x1,%edx
call   8049950 <__ctype_b_loc@plt+0x10>
mov    0x8055524,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804ded8,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0x1,(%esp)
call   80495f0 <exit@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804aaad <__ctype_b_loc@plt+0x116d>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804aaad <__ctype_b_loc@plt+0x116d>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e16e,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
mov    0x8055524,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e00f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049470 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
mov    0x80514e8,%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   80498d0 <pam_setcred@plt>
mov    %esi,0x4(%esp)
mov    0x80514e8,%eax
mov    %eax,(%esp)
call   8049480 <pam_end@plt>
jmp    804a745 <__ctype_b_loc@plt+0xe05>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804a8d3 <__ctype_b_loc@plt+0xf93>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a8d3 <__ctype_b_loc@plt+0xf93>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
movl   $0x804e0f3,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804a6df <__ctype_b_loc@plt+0xd9f>
mov    0x8055524,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804df5c,0x4(%esp)
jmp    804a71c <__ctype_b_loc@plt+0xddc>
movl   $0x804e0f3,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804a6f7 <__ctype_b_loc@plt+0xdb7>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e138,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    8049dd6 <__ctype_b_loc@plt+0x496>
mov    0x805550c,%eax
movl   $0x804df24,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804a6f7 <__ctype_b_loc@plt+0xdb7>
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804a9b5 <__ctype_b_loc@plt+0x1075>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804a9b5 <__ctype_b_loc@plt+0x1075>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e15e,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    8049daa <__ctype_b_loc@plt+0x46a>
movl   $0x1a,0x4(%esp)
jmp    804a84b <__ctype_b_loc@plt+0xf0b>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e15e,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    8049dd6 <__ctype_b_loc@plt+0x496>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804aae3 <__ctype_b_loc@plt+0x11a3>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804aae3 <__ctype_b_loc@plt+0x11a3>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,0xc(%esp)
movl   $0x804e10b,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    0x8055524,%edi
movl   $0x5,0x8(%esp)
movl   $0x804e11f,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
jmp    804a745 <__ctype_b_loc@plt+0xe05>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e16e,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804a7dc <__ctype_b_loc@plt+0xe9c>
mov    %esi,0xc(%esp)
movl   $0x804e10b,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    0x8055524,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e11f,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
jmp    804a745 <__ctype_b_loc@plt+0xe05>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804dbc0
push   $0x804db50
push   %ecx
push   %esi
push   $0x8049a50
call   80496a0 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8051483,%eax
sub    $0x8051480,%eax
cmp    $0x6,%eax
ja     804ab90 <__ctype_b_loc@plt+0x1250>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804ab8f <__ctype_b_loc@plt+0x124f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8051480,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8051480,%eax
sub    $0x8051480,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    804abc9 <__ctype_b_loc@plt+0x1289>
ret
mov    $0x0,%edx
test   %edx,%edx
je     804abc8 <__ctype_b_loc@plt+0x1288>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8051480,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x80514c8
jne    804ac0c <__ctype_b_loc@plt+0x12cc>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   804ab80 <__ctype_b_loc@plt+0x1240>
movb   $0x1,0x80514c8
leave
repz ret
xchg   %ax,%ax
mov    0x8050f00,%eax
test   %eax,%eax
je     804ac38 <__ctype_b_loc@plt+0x12f8>
mov    $0x0,%eax
test   %eax,%eax
je     804ac38 <__ctype_b_loc@plt+0x12f8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8050f00,(%esp)
call   *%eax
leave
jmp    804abb0 <__ctype_b_loc@plt+0x1270>
nop
jmp    804abb0 <__ctype_b_loc@plt+0x1270>
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x80514e4
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x14,%esp
mov    0x8051484,%esi
test   %eax,%eax
movl   $0x5,0x8(%esp)
movl   $0x804dbe0,0x4(%esp)
movl   $0x0,(%esp)
cmove  0x80514c0,%esi
call   8049470 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049920 <fputs@plt>
mov    %ebx,(%esp)
call   80495f0 <exit@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x80514e0,%eax
test   %eax,%eax
je     804acf9 <__ctype_b_loc@plt+0x13b9>
neg    %eax
movl   $0x9,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <kill@plt>
mov    0x8051484,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804dfa6,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049920 <fputs@plt>
movl   $0xff,(%esp)
call   80495f0 <exit@plt>
mov    0x8051484,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804dd9c,0x4(%esp)
jmp    804acd5 <__ctype_b_loc@plt+0x1395>
jmp    804ad20 <__ctype_b_loc@plt+0x13e0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %esi
push   %ebx
sub    $0x134,%esp
call   80497c0 <fork@plt>
test   %eax,%eax
mov    %eax,0x80514e0
je     804ae4f <__ctype_b_loc@plt+0x150f>
add    $0x1,%eax
je     804ae58 <__ctype_b_loc@plt+0x1518>
lea    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   80496e0 <sigfillset@plt>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,(%esp)
call   80493b0 <sigprocmask@plt>
test   %eax,%eax
jne    804b1b2 <__ctype_b_loc@plt+0x1872>
cmpl   $0x0,0x80514e4
je     804af27 <__ctype_b_loc@plt+0x15e7>
mov    0x8051484,%eax
movl   $0xa,(%esp)
mov    %eax,0x4(%esp)
call   8049820 <fputc@plt>
mov    0x8051484,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804dde4,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049920 <fputs@plt>
mov    0x80514e4,%eax
mov    %eax,0x4(%esp)
mov    0x80514e0,%eax
neg    %eax
mov    %eax,(%esp)
call   8049600 <kill@plt>
mov    0x80514e8,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049720 <pam_close_session@plt>
test   %eax,%eax
mov    %eax,%ebx
jne    804b0cc <__ctype_b_loc@plt+0x178c>
mov    0x80514e8,%eax
movl   $0x4,0x4(%esp)
mov    %eax,(%esp)
call   80498d0 <pam_setcred@plt>
mov    0x80514e8,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8049480 <pam_end@plt>
cmpl   $0x0,0x80514e4
jne    804b06a <__ctype_b_loc@plt+0x172a>
mov    0xa4(%esp),%ecx
mov    %ecx,%edx
movzbl %ch,%eax
and    $0x7f,%edx
lea    0x80(%edx),%ecx
test   %edx,%edx
cmovne %ecx,%eax
mov    %eax,(%esp)
call   80495f0 <exit@plt>
add    $0x134,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
mov    0x8055524,%ebx
movl   $0x804dfb3,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804b200 <__ctype_b_loc@plt+0x18c0>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b200 <__ctype_b_loc@plt+0x18c0>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x8055504,%eax
movl   $0x804dfcf,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
call   8049650 <closelog@plt>
movl   $0x1,(%esp)
call   80495f0 <exit@plt>
lea    0xa8(%esp),%eax
mov    %eax,(%esp)
lea    0xa4(%esp),%esi
movl   $0x804ac40,0xa4(%esp)
08
call   80497d0 <sigemptyset@plt>
mov    %ebx,(%esp)
movl   $0x0,0x128(%esp)
00
call   80497d0 <sigemptyset@plt>
movl   $0xf,0x4(%esp)
mov    %ebx,(%esp)
call   80496d0 <sigaddset@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
movl   $0xe,0x4(%esp)
mov    %ebx,(%esp)
call   80496d0 <sigaddset@plt>
test   %eax,%eax
je     804b22a <__ctype_b_loc@plt+0x18ea>
movl   $0x5,0x8(%esp)
mov    0x8055524,%ebx
movl   $0x804ddc4,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0xf,0x80514e4
00
cmpl   $0x0,0x80514e4
je     804b00f <__ctype_b_loc@plt+0x16cf>
jmp    804ad7c <__ctype_b_loc@plt+0x143c>
xchg   %ax,%ax
cmpb   $0x7f,0xa4(%esp)
jne    804b038 <__ctype_b_loc@plt+0x16f8>
call   8049570 <getpid@plt>
movl   $0x13,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <kill@plt>
movl   $0x12,0x4(%esp)
mov    %ebx,(%esp)
call   8049600 <kill@plt>
movl   $0x2,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xffffffff,(%esp)
call   8049520 <waitpid@plt>
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    804afe0 <__ctype_b_loc@plt+0x16a0>
call   8049730 <__errno_location@plt>
cmpl   $0x4,(%eax)
je     804b04a <__ctype_b_loc@plt+0x170a>
cmpl   $0x0,0x80514e4
je     804add7 <__ctype_b_loc@plt+0x1497>
jmp    804ad7c <__ctype_b_loc@plt+0x143c>
cmpl   $0x14,0x80514e4
jne    804b038 <__ctype_b_loc@plt+0x16f8>
mov    0x80514e0,%eax
movl   $0x13,0x4(%esp)
mov    %eax,(%esp)
call   8049600 <kill@plt>
jmp    804b00f <__ctype_b_loc@plt+0x16cf>
movl   $0x804aca0,0x4(%esp)
movl   $0xe,(%esp)
call   8049430 <signal@plt>
movl   $0x2,(%esp)
call   8049460 <alarm@plt>
lea    0xa4(%esp),%eax
mov    %eax,(%esp)
call   80494d0 <wait@plt>
mov    0x8051484,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e017,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049920 <fputs@plt>
jmp    804ae2d <__ctype_b_loc@plt+0x14ed>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804b278 <__ctype_b_loc@plt+0x1938>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804b278 <__ctype_b_loc@plt+0x1938>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x80514e8,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804dff9,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
mov    0x80514e8,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
mov    0x8055524,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e00f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049470 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
jmp    804adf6 <__ctype_b_loc@plt+0x14b6>
movl   $0x5,0x8(%esp)
mov    0x8055524,%ebx
movl   $0x804dfe1,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0xf,0x80514e4
00
jmp    804ad7c <__ctype_b_loc@plt+0x143c>
mov    0x8055504,%eax
movl   $0x804dfcf,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804af16 <__ctype_b_loc@plt+0x15d6>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0xf,(%esp)
call   8049890 <sigaction@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
cmpb   $0x0,0x8055509
je     804b2ae <__ctype_b_loc@plt+0x196e>
movl   $0x0,0x8(%esp)
mov    %ebx,0x4(%esp)
movl   $0x1,(%esp)
call   80493b0 <sigprocmask@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
jmp    804afd0 <__ctype_b_loc@plt+0x1690>
mov    0x80514e8,%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804dff9,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804b157 <__ctype_b_loc@plt+0x1817>
movl   $0x2,0x4(%esp)
mov    %ebx,(%esp)
call   80496d0 <sigaddset@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
movl   $0x3,0x4(%esp)
mov    %ebx,(%esp)
call   80496d0 <sigaddset@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
movl   $0x14,0x4(%esp)
mov    %ebx,(%esp)
call   80496d0 <sigaddset@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x2,(%esp)
call   8049890 <sigaction@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8049890 <sigaction@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
movl   $0x0,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x14,(%esp)
call   8049890 <sigaction@plt>
test   %eax,%eax
jne    804af87 <__ctype_b_loc@plt+0x1647>
jmp    804b253 <__ctype_b_loc@plt+0x1913>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x8053500,(%esp)
call   804cd30 <__ctype_b_loc@plt+0x33f0>
test   %eax,%eax
mov    %eax,%ebx
je     804b611 <__ctype_b_loc@plt+0x1cd1>
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   8049430 <signal@plt>
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   8049430 <signal@plt>
mov    0x80514e8,%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   80498e0 <pam_authenticate@plt>
movl   $0x0,0x4(%esp)
test   %eax,%eax
mov    %eax,%esi
jne    804b882 <__ctype_b_loc@plt+0x1f42>
mov    0x80514e8,%eax
mov    %eax,(%esp)
call   8049860 <pam_acct_mgmt@plt>
test   %eax,%eax
mov    %eax,%esi
je     804b414 <__ctype_b_loc@plt+0x1ad4>
cmpb   $0x0,0x8055510
jne    804b550 <__ctype_b_loc@plt+0x1c10>
cmp    $0xc,%eax
jne    804b8de <__ctype_b_loc@plt+0x1f9e>
mov    0x80514e8,%eax
movl   $0x20,0x4(%esp)
mov    %eax,(%esp)
call   8049450 <pam_chauthtok@plt>
test   %eax,%eax
mov    %eax,%esi
jne    804b6db <__ctype_b_loc@plt+0x1d9b>
lea    0x2c(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x80514e8,%eax
movl   $0x2,0x4(%esp)
mov    %eax,(%esp)
call   8049830 <pam_get_item@plt>
test   %eax,%eax
mov    %eax,%esi
jne    804b7e1 <__ctype_b_loc@plt+0x1ea1>
mov    0x2c(%esp),%eax
movl   $0x8053500,(%esp)
mov    %eax,0x4(%esp)
call   8049340 <strcmp@plt>
test   %eax,%eax
je     804b516 <__ctype_b_loc@plt+0x1bd6>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804b5e0 <__ctype_b_loc@plt+0x1ca0>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b5e0 <__ctype_b_loc@plt+0x1ca0>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x2c(%esp),%eax
movl   $0x8053500,0xc(%esp)
movl   $0x804de80,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x6,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
mov    0x2c(%esp),%eax
movl   $0x1fff,0x8(%esp)
movl   $0x8053500,(%esp)
mov    %eax,0x4(%esp)
call   8049740 <strncpy@plt>
movl   $0x8053500,(%esp)
movb   $0x0,0x80554ff
call   804cd30 <__ctype_b_loc@plt+0x33f0>
test   %eax,%eax
mov    %eax,%ebx
je     804b611 <__ctype_b_loc@plt+0x1cd1>
movl   $0x0,0x4(%esp)
movl   $0x2,(%esp)
call   8049430 <signal@plt>
movl   $0x0,0x4(%esp)
movl   $0x3,(%esp)
call   8049430 <signal@plt>
mov    0x18(%ebx),%edx
mov    %ebx,%eax
cmpb   $0x2a,(%edx)
je     804b5b0 <__ctype_b_loc@plt+0x1c70>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    %eax,0x4(%esp)
mov    0x80514e8,%eax
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
mov    0x8055524,%esi
movl   $0x5,0x8(%esp)
movl   $0x804e05b,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%edi
call   8049470 <dcgettext@plt>
mov    %edi,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
jmp    804b414 <__ctype_b_loc@plt+0x1ad4>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    %ebx,0x1c(%esp)
call   804c760 <__ctype_b_loc@plt+0x2e20>
call   8049810 <endpwent@plt>
call   8049760 <endspent@plt>
mov    0x1c(%esp),%eax
mov    %eax,(%esp)
call   804dae0 <__ctype_b_loc@plt+0x41a0>
call   804b360 <__ctype_b_loc@plt+0x1a20>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x2c(%esp),%eax
movl   $0x8053500,0xc(%esp)
movl   $0x804de80,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x10(%esp)
movl   $0x6,(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804b4dd <__ctype_b_loc@plt+0x1b9d>
movl   $0x5,0x8(%esp)
movl   $0x804de10,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
movl   $0x8053500,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804b942 <__ctype_b_loc@plt+0x2002>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804b942 <__ctype_b_loc@plt+0x2002>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
movl   $0x8053500,0xc(%esp)
movl   $0x804e028,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
mov    0x8055514,%eax
mov    $0x1,%edx
call   8049950 <__ctype_b_loc@plt+0x10>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804b96b <__ctype_b_loc@plt+0x202b>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804b96b <__ctype_b_loc@plt+0x202b>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e06d,0x8(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %edi,(%esp)
call   80493c0 <free@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
mov    0x8055524,%edi
movl   $0x5,0x8(%esp)
movl   $0x804e00f,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%ebp
call   8049470 <dcgettext@plt>
mov    %ebp,0x10(%esp)
mov    %edi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049480 <pam_end@plt>
mov    0x8(%ebx),%eax
xor    %edx,%edx
test   %eax,%eax
mov    0x8055514,%eax
sete   %dl
call   8049950 <__ctype_b_loc@plt+0x10>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804b9d7 <__ctype_b_loc@plt+0x2097>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804b9d7 <__ctype_b_loc@plt+0x2097>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
movl   $0x804de30,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %edi,(%esp)
call   80493c0 <free@plt>
mov    0x8055524,%eax
movl   $0x804de54,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
jmp    804b7bc <__ctype_b_loc@plt+0x1e7c>
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804b9a1 <__ctype_b_loc@plt+0x2061>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804b9a1 <__ctype_b_loc@plt+0x2061>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e046,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    804b73a <__ctype_b_loc@plt+0x1dfa>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804b9f8 <__ctype_b_loc@plt+0x20b8>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804b9f8 <__ctype_b_loc@plt+0x20b8>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e07f,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    804b73a <__ctype_b_loc@plt+0x1dfa>
movl   $0x8053500,0xc(%esp)
movl   $0x804e028,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804b6cc <__ctype_b_loc@plt+0x1d8c>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e06d,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804b766 <__ctype_b_loc@plt+0x1e26>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e046,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804b766 <__ctype_b_loc@plt+0x1e26>
movl   $0x804de30,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804b857 <__ctype_b_loc@plt+0x1f17>
mov    0x80514e8,%eax
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80494b0 <pam_strerror@plt>
movl   $0x804e07f,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804b766 <__ctype_b_loc@plt+0x1e26>
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8049800 <strrchr@plt>
test   %eax,%eax
lea    0x1(%eax),%edx
cmove  %ebx,%edx
add    $0x18,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
sub    $0x1c,%esp
movl   $0x40,(%esp)
call   804cf90 <__ctype_b_loc@plt+0x3650>
mov    %eax,0x8055518
movl   $0x0,(%eax)
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x54(%esp),%ebx
mov    0x50(%esp),%edi
test   %ebx,%ebx
mov    %edi,(%esp)
je     804bc08 <__ctype_b_loc@plt+0x22c8>
call   8049680 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049680 <strlen@plt>
lea    (%esi,%eax,1),%ebp
lea    0x2(%ebp),%edx
add    $0x1,%ebp
mov    %edx,(%esp)
mov    %edx,0x24(%esp)
call   804cf90 <__ctype_b_loc@plt+0x3650>
mov    0x24(%esp),%edx
mov    %ebx,0x18(%esp)
mov    %edi,0x14(%esp)
movl   $0x804e24c,0x10(%esp)
movl   $0xffffffff,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,%esi
mov    %eax,(%esp)
call   8049330 <__snprintf_chk@plt>
cmp    %eax,%ebp
jne    804bca2 <__ctype_b_loc@plt+0x2362>
movl   $0x3d,0x4(%esp)
mov    %esi,(%esp)
call   8049660 <strchr@plt>
test   %eax,%eax
je     804bc1b <__ctype_b_loc@plt+0x22db>
sub    %esi,%eax
mov    %eax,%ebx
mov    0x805551c,%eax
test   %eax,%eax
mov    %eax,0x24(%esp)
je     804bc2b <__ctype_b_loc@plt+0x22eb>
mov    0x8055518,%eax
xor    %ebp,%ebp
mov    %ebp,%edi
mov    %eax,0x28(%esp)
lea    0x0(%esi),%esi
lea    0x0(,%edi,4),%eax
mov    %eax,0x2c(%esp)
mov    0x28(%esp),%eax
mov    (%eax,%edi,4),%ebp
mov    %ebx,0x8(%esp)
mov    %esi,(%esp)
mov    %ebp,0x4(%esp)
call   80498b0 <strncmp@plt>
test   %eax,%eax
jne    804bb6b <__ctype_b_loc@plt+0x222b>
movzbl 0x0(%ebp,%ebx,1),%eax
test   %al,%al
je     804bbe0 <__ctype_b_loc@plt+0x22a0>
cmp    $0x3d,%al
je     804bbe0 <__ctype_b_loc@plt+0x22a0>
add    $0x1,%edi
cmp    0x24(%esp),%edi
jne    804bb38 <__ctype_b_loc@plt+0x21f8>
mov    0x24(%esp),%ecx
mov    0x28(%esp),%ebx
lea    0x1(%ecx),%edx
mov    %ecx,%eax
shl    $0x2,%eax
test   $0xf,%dl
mov    %edx,0x805551c
mov    %esi,(%ebx,%ecx,4)
je     804bba8 <__ctype_b_loc@plt+0x2268>
mov    0x8055518,%eax
movl   $0x0,(%eax,%edx,4)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
add    $0x44,%eax
mov    %eax,0x4(%esp)
mov    0x8055518,%eax
mov    %eax,(%esp)
call   8049590 <realloc@plt>
test   %eax,%eax
je     804bc46 <__ctype_b_loc@plt+0x2306>
mov    0x8055518,%ecx
cmp    %ecx,0x8051480
je     804bc14 <__ctype_b_loc@plt+0x22d4>
mov    %eax,0x8055518
mov    0x805551c,%edx
jmp    804bb97 <__ctype_b_loc@plt+0x2257>
nop
mov    %edi,%eax
mov    %ebp,%edi
cmp    %eax,0x24(%esp)
jbe    804bb74 <__ctype_b_loc@plt+0x2234>
mov    %edi,(%esp)
call   80493c0 <free@plt>
mov    0x8055518,%eax
mov    0x2c(%esp),%ecx
mov    %esi,(%eax,%ecx,1)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   804d010 <__ctype_b_loc@plt+0x36d0>
mov    %eax,%esi
jmp    804baf8 <__ctype_b_loc@plt+0x21b8>
mov    %eax,0x8051480
jmp    804bbd2 <__ctype_b_loc@plt+0x2292>
mov    %esi,0x50(%esp)
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    80493c0 <free@plt>
mov    0x8055518,%eax
mov    $0x1,%edx
movl   $0x1,0x805551c
00
mov    %esi,(%eax)
jmp    804bb92 <__ctype_b_loc@plt+0x2252>
movl   $0x5,0x8(%esp)
mov    0x8051484,%ebx
movl   $0x804e26d,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049920 <fputs@plt>
mov    0x805551c,%eax
mov    0x8055518,%edx
sub    $0x1,%eax
mov    %eax,0x805551c
mov    (%edx,%eax,4),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    0x8055518,%eax
mov    0x805551c,%edx
jmp    804bb97 <__ctype_b_loc@plt+0x2257>
movl   $0x804e32e,0xc(%esp)
movl   $0x64,0x8(%esp)
movl   $0x804e252,0x4(%esp)
movl   $0x804e258,(%esp)
call   8049930 <__assert_fail@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
mov    0x450(%esp),%eax
mov    0x454(%esp),%edi
movl   $0x1,0x1c(%esp)
test   %eax,%eax
jle    804bde5 <__ctype_b_loc@plt+0x24a5>
nop
mov    (%edi),%ebx
mov    %ebx,(%esp)
call   8049680 <strlen@plt>
cmp    $0x3ff,%eax
ja     804bdd4 <__ctype_b_loc@plt+0x2494>
movl   $0x3d,0x4(%esp)
mov    %ebx,(%esp)
call   8049660 <strchr@plt>
test   %eax,%eax
mov    %eax,0x18(%esp)
je     804be12 <__ctype_b_loc@plt+0x24d2>
mov    0x8051260,%ebp
mov    $0x8051260,%esi
test   %ebp,%ebp
jne    804bd5d <__ctype_b_loc@plt+0x241d>
jmp    804be00 <__ctype_b_loc@plt+0x24c0>
lea    0x0(%esi),%esi
add    $0x4,%esi
mov    (%esi),%ebp
test   %ebp,%ebp
je     804be00 <__ctype_b_loc@plt+0x24c0>
mov    %ebp,(%esp)
call   8049680 <strlen@plt>
mov    %ebp,0x4(%esp)
mov    %ebx,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <strncmp@plt>
test   %eax,%eax
jne    804bd50 <__ctype_b_loc@plt+0x2410>
mov    0x18(%esp),%ebp
lea    0x2c(%esp),%eax
movl   $0x400,0xc(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
sub    %ebx,%ebp
mov    %ebp,0x8(%esp)
call   8049770 <__strncpy_chk@plt>
movb   $0x0,0x2c(%esp,%ebp,1)
movl   $0x5,0x8(%esp)
movl   $0x804e2a5,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
lea    0x2c(%esp),%edx
mov    %edx,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80497a0 <__printf_chk@plt>
add    $0x4,%edi
subl   $0x1,0x450(%esp)
jne    804bd08 <__ctype_b_loc@plt+0x23c8>
mov    0x42c(%esp),%eax
xor    %gs:0x14,%eax
jne    804be69 <__ctype_b_loc@plt+0x2529>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,0x4(%esp)
mov    %ebx,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
jmp    804bdd4 <__ctype_b_loc@plt+0x2494>
mov    0x1c(%esp),%eax
movl   $0x804e283,0x10(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
mov    %eax,0x14(%esp)
lea    0x2c(%esp),%eax
movl   $0x400,0x4(%esp)
mov    %eax,(%esp)
call   8049330 <__snprintf_chk@plt>
cmp    $0x3ff,%eax
jg     804be6e <__ctype_b_loc@plt+0x252e>
mov    (%edi),%eax
addl   $0x1,0x1c(%esp)
mov    %eax,0x4(%esp)
lea    0x2c(%esp),%eax
mov    %eax,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
jmp    804bdd4 <__ctype_b_loc@plt+0x2494>
call   8049490 <__stack_chk_fail@plt>
movl   $0x804e326,0xc(%esp)
movl   $0xce,0x8(%esp)
movl   $0x804e252,0x4(%esp)
movl   $0x804e287,(%esp)
call   8049930 <__assert_fail@plt>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x8051480,%edi
mov    (%edi),%esi
test   %esi,%esi
je     804bf99 <__ctype_b_loc@plt+0x2659>
mov    %edi,0xc(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x8051260,%ebx
mov    $0x8051260,%ebp
test   %ebx,%ebx
jne    804bee6 <__ctype_b_loc@plt+0x25a6>
jmp    804bfb8 <__ctype_b_loc@plt+0x2678>
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebp
mov    0x0(%ebp),%ebx
test   %ebx,%ebx
je     804bfb8 <__ctype_b_loc@plt+0x2678>
mov    %ebx,(%esp)
call   8049680 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <strncmp@plt>
test   %eax,%eax
jne    804bed8 <__ctype_b_loc@plt+0x2598>
mov    0xc(%esp),%eax
mov    (%eax),%esi
test   %esi,%esi
je     804bf23 <__ctype_b_loc@plt+0x25e3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
test   %edx,%edx
jne    804bf10 <__ctype_b_loc@plt+0x25d0>
mov    0xc(%esp),%eax
mov    (%eax),%esi
subl   $0x4,0xc(%esp)
addl   $0x4,0xc(%esp)
test   %esi,%esi
jne    804bec0 <__ctype_b_loc@plt+0x2580>
mov    (%edi),%esi
test   %esi,%esi
je     804bf99 <__ctype_b_loc@plt+0x2659>
nop
mov    0x8051240,%ebx
mov    $0x8051240,%ebp
test   %ebx,%ebx
je     804bfb2 <__ctype_b_loc@plt+0x2672>
mov    %ebx,(%esp)
call   8049680 <strlen@plt>
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   80498b0 <strncmp@plt>
test   %eax,%eax
jne    804bfa8 <__ctype_b_loc@plt+0x2668>
movl   $0x2f,0x4(%esp)
mov    %esi,(%esp)
call   8049660 <strchr@plt>
test   %eax,%eax
je     804bfa8 <__ctype_b_loc@plt+0x2668>
mov    (%edi),%esi
test   %esi,%esi
je     804bf8f <__ctype_b_loc@plt+0x264f>
mov    %edi,%eax
nop
mov    0x4(%eax),%edx
add    $0x4,%eax
mov    %edx,-0x4(%eax)
test   %edx,%edx
jne    804bf80 <__ctype_b_loc@plt+0x2640>
mov    (%edi),%esi
sub    $0x4,%edi
add    $0x4,%edi
test   %esi,%esi
jne    804bf38 <__ctype_b_loc@plt+0x25f8>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
add    $0x4,%ebp
mov    0x0(%ebp),%ebx
test   %ebx,%ebx
jne    804bf47 <__ctype_b_loc@plt+0x2607>
mov    0x4(%edi),%esi
jmp    804bf92 <__ctype_b_loc@plt+0x2652>
nop
mov    0xc(%esp),%eax
mov    0x4(%eax),%esi
jmp    804bf28 <__ctype_b_loc@plt+0x25e8>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x14,%esp
call   8049370 <getlogin@plt>
mov    %eax,%ebx
call   80494a0 <getuid@plt>
test   %ebx,%ebx
mov    %eax,%esi
je     804bfec <__ctype_b_loc@plt+0x26ac>
cmpb   $0x0,(%ebx)
jne    804c000 <__ctype_b_loc@plt+0x26c0>
mov    %esi,(%esp)
call   804ce60 <__ctype_b_loc@plt+0x3520>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    %ebx,(%esp)
call   804cd30 <__ctype_b_loc@plt+0x33f0>
test   %eax,%eax
je     804bfec <__ctype_b_loc@plt+0x26ac>
cmp    %esi,0x8(%eax)
jne    804bfec <__ctype_b_loc@plt+0x26ac>
jmp    804bff4 <__ctype_b_loc@plt+0x26b4>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
mov    0xc(%ebx),%eax
mov    %eax,(%esp)
call   80495b0 <setgid@plt>
cmp    $0xffffffff,%eax
je     804c05d <__ctype_b_loc@plt+0x271d>
mov    0xc(%ebx),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80494c0 <initgroups@plt>
cmp    $0xffffffff,%eax
je     804c10e <__ctype_b_loc@plt+0x27ce>
xor    %eax,%eax
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049730 <__errno_location@plt>
mov    (%eax),%edi
movl   $0x804e335,(%esp)
call   8049510 <perror@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804c196 <__ctype_b_loc@plt+0x2856>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804c196 <__ctype_b_loc@plt+0x2856>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %edi,(%esp)
call   80495d0 <strerror@plt>
mov    %eax,0x14(%esp)
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0xc(%ebx),%eax
movl   $0x804e350,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
call   8049650 <closelog@plt>
mov    $0xffffffff,%eax
jmp    804c056 <__ctype_b_loc@plt+0x2716>
call   8049730 <__errno_location@plt>
mov    (%eax),%edi
movl   $0x804e33c,(%esp)
call   8049510 <perror@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804c1d0 <__ctype_b_loc@plt+0x2890>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804c1d0 <__ctype_b_loc@plt+0x2890>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %edi,(%esp)
call   80495d0 <strerror@plt>
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
movl   $0x804e378,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804c0e7 <__ctype_b_loc@plt+0x27a7>
mov    %edi,(%esp)
call   80495d0 <strerror@plt>
mov    %eax,0x14(%esp)
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0xc(%ebx),%eax
movl   $0x804e350,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804c0ff <__ctype_b_loc@plt+0x27bf>
mov    %edi,(%esp)
call   80495d0 <strerror@plt>
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
movl   $0x804e378,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804c0ff <__ctype_b_loc@plt+0x27bf>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x30(%esp),%ebx
mov    0x8(%ebx),%eax
mov    %eax,(%esp)
call   8049840 <setuid@plt>
test   %eax,%eax
jne    804c230 <__ctype_b_loc@plt+0x28f0>
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
call   8049730 <__errno_location@plt>
mov    (%eax),%edi
movl   $0x804e347,(%esp)
call   8049510 <perror@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804c2d9 <__ctype_b_loc@plt+0x2999>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804c2d9 <__ctype_b_loc@plt+0x2999>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %edi,(%esp)
call   80495d0 <strerror@plt>
mov    %eax,0x14(%esp)
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x8(%ebx),%eax
movl   $0x804e3a0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
call   8049650 <closelog@plt>
mov    $0xffffffff,%eax
jmp    804c229 <__ctype_b_loc@plt+0x28e9>
mov    %edi,(%esp)
call   80495d0 <strerror@plt>
mov    %eax,0x14(%esp)
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x8(%ebx),%eax
movl   $0x804e3a0,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804c2ca <__ctype_b_loc@plt+0x298a>
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804c020 <__ctype_b_loc@plt+0x26e0>
test   %eax,%eax
js     804c338 <__ctype_b_loc@plt+0x29f8>
mov    %ebx,(%esp)
call   804c210 <__ctype_b_loc@plt+0x28d0>
sar    $0x1f,%eax
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0xffffffff,%eax
jmp    804c32f <__ctype_b_loc@plt+0x29ef>
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049440 <chdir@plt>
cmp    $0xffffffff,%eax
je     804c428 <__ctype_b_loc@plt+0x2ae8>
mov    0x14(%ebx),%eax
mov    %eax,0x4(%esp)
movl   $0x804e736,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    0x18(%ebx),%eax
test   %eax,%eax
je     804c410 <__ctype_b_loc@plt+0x2ad0>
cmpb   $0x0,(%eax)
je     804c410 <__ctype_b_loc@plt+0x2ad0>
mov    %eax,0x4(%esp)
movl   $0x804e766,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    (%ebx),%eax
movl   $0x804e1ac,(%esp)
mov    %eax,0x4(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    (%ebx),%eax
movl   $0x804e1b1,(%esp)
mov    %eax,0x4(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
mov    0x8(%ebx),%ecx
mov    $0x804e09c,%edx
mov    $0x804e091,%eax
test   %ecx,%ecx
cmovne %edx,%eax
mov    %eax,(%esp)
call   804d5b0 <__ctype_b_loc@plt+0x3c70>
test   %eax,%eax
mov    %eax,%esi
je     804c4a0 <__ctype_b_loc@plt+0x2b60>
movl   $0x3d,0x4(%esp)
mov    %eax,(%esp)
call   8049660 <strchr@plt>
test   %eax,%eax
je     804c488 <__ctype_b_loc@plt+0x2b48>
mov    %esi,(%esp)
movl   $0x0,0x4(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
movl   $0x8051298,0x18(%ebx)
mov    $0x8051298,%eax
jmp    804c384 <__ctype_b_loc@plt+0x2a44>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x804e3c4,(%esp)
call   804d5f0 <__ctype_b_loc@plt+0x3cb0>
test   %al,%al
je     804c4c8 <__ctype_b_loc@plt+0x2b88>
movl   $0x804e3e7,(%esp)
call   8049440 <chdir@plt>
cmp    $0xffffffff,%eax
je     804c4c8 <__ctype_b_loc@plt+0x2b88>
movl   $0x5,0x8(%esp)
movl   $0x804e410,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %eax,(%esp)
call   80495c0 <puts@plt>
mov    $0x80512a2,%eax
movl   $0x80512a2,0x14(%ebx)
jmp    804c360 <__ctype_b_loc@plt+0x2a20>
lea    0x0(%esi),%esi
mov    %esi,0x4(%esp)
movl   $0x804e097,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
mov    0x8(%ebx),%edx
mov    $0x804deb4,%eax
movl   $0x0,0x4(%esp)
test   %edx,%edx
mov    $0x804e0a5,%edx
cmovne %edx,%eax
mov    %eax,(%esp)
call   804ba80 <__ctype_b_loc@plt+0x2140>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x14(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x804e3d1,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804c590 <__ctype_b_loc@plt+0x2c50>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804c590 <__ctype_b_loc@plt+0x2c50>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x804e3ec,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
call   8049650 <closelog@plt>
movl   $0x1,(%esp)
call   80495f0 <exit@plt>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x804e3ec,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804c57f <__ctype_b_loc@plt+0x2c3f>
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
mov    0x450(%esp),%ebx
mov    %gs:0x14,%ecx
mov    %ecx,0x42c(%esp)
xor    %ecx,%ecx
mov    0x454(%esp),%eax
mov    0x458(%esp),%edx
test   %ebx,%ebx
je     804c6b8 <__ctype_b_loc@plt+0x2d78>
test   %eax,%eax
lea    0x2c(%esp),%edi
je     804c708 <__ctype_b_loc@plt+0x2dc8>
mov    %edx,0xc(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
mov    %edx,0x1c(%esp)
call   80497e0 <execle@plt>
call   8049730 <__errno_location@plt>
mov    (%eax),%esi
mov    %eax,%ebp
movl   $0x5,0x4(%esp)
mov    %ebx,(%esp)
call   8049780 <access@plt>
mov    0x1c(%esp),%edx
test   %eax,%eax
je     804c6d0 <__ctype_b_loc@plt+0x2d90>
movl   $0x5,0x8(%esp)
movl   $0x804dfcf,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0x14(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x10(%esp)
call   8049330 <__snprintf_chk@plt>
mov    %esi,0x0(%ebp)
mov    %edi,(%esp)
call   8049510 <perror@plt>
mov    %esi,%eax
mov    0x42c(%esp),%ecx
xor    %gs:0x14,%ecx
jne    804c753 <__ctype_b_loc@plt+0x2e13>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
call   8049730 <__errno_location@plt>
movl   $0x16,(%eax)
mov    $0x16,%eax
jmp    804c695 <__ctype_b_loc@plt+0x2d55>
lea    0x0(%esi),%esi
mov    %edx,0x14(%esp)
movl   $0x0,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x804e1c4,0x8(%esp)
movl   $0x804e150,0x4(%esp)
movl   $0x804e149,(%esp)
call   80497e0 <execle@plt>
mov    0x0(%ebp),%esi
jmp    804c644 <__ctype_b_loc@plt+0x2d04>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
mov    %edx,0x1c(%esp)
call   804ba30 <__ctype_b_loc@plt+0x20f0>
movl   $0x804e435,0x10(%esp)
movl   $0x400,0xc(%esp)
movl   $0x1,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
mov    %eax,0x14(%esp)
call   8049330 <__snprintf_chk@plt>
mov    %edi,%eax
mov    0x1c(%esp),%edx
movb   $0x0,0x42b(%esp)
jmp    804c603 <__ctype_b_loc@plt+0x2cc3>
call   8049490 <__stack_chk_fail@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%ebx
mov    0x14(%ebx),%esi
cmpb   $0x2f,(%esi)
jne    804c85d <__ctype_b_loc@plt+0x2f1d>
mov    %esi,(%esp)
call   8049440 <chdir@plt>
test   %eax,%eax
jne    804c796 <__ctype_b_loc@plt+0x2e56>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   8049560 <chroot@plt>
test   %eax,%eax
jne    804c796 <__ctype_b_loc@plt+0x2e56>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
mov    0x14(%ebx),%esi
movl   $0x5,0x8(%esp)
movl   $0x804e47c,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80497a0 <__printf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804c8e1 <__ctype_b_loc@plt+0x2fa1>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804c8e1 <__ctype_b_loc@plt+0x2fa1>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x804e4a4,0x8(%esp)
mov    %eax,0xc(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %esi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
call   8049650 <closelog@plt>
movl   $0x1,(%esp)
call   80495f0 <exit@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e439,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   80497a0 <__printf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804c90f <__ctype_b_loc@plt+0x2fcf>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804c90f <__ctype_b_loc@plt+0x2fcf>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x804e458,0x8(%esp)
mov    %eax,0xc(%esp)
jmp    804c820 <__ctype_b_loc@plt+0x2ee0>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x804e4a4,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804c84c <__ctype_b_loc@plt+0x2f0c>
mov    (%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x14(%ebx),%eax
movl   $0x804e458,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x4,(%esp)
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804c84c <__ctype_b_loc@plt+0x2f0c>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x4c,%esp
mov    0x64(%esp),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
mov    %esi,%eax
test   %al,%al
je     804c9c0 <__ctype_b_loc@plt+0x3080>
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804cc30 <__ctype_b_loc@plt+0x32f0>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804cc30 <__ctype_b_loc@plt+0x32f0>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x68(%esp),%eax
movl   $0x804e4ca,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x6,(%esp)
mov    %eax,0x10(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
jmp    804ca1a <__ctype_b_loc@plt+0x30da>
lea    0x0(%esi,%eiz,1),%esi
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804cbf8 <__ctype_b_loc@plt+0x32b8>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804cbf8 <__ctype_b_loc@plt+0x32b8>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    0x68(%esp),%eax
movl   $0x804e4e5,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x5,(%esp)
mov    %eax,0x10(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
movl   $0x804e4fc,(%esp)
call   804d5b0 <__ctype_b_loc@plt+0x3c70>
test   %eax,%eax
mov    %eax,%ebx
je     804cb20 <__ctype_b_loc@plt+0x31e0>
call   80496f0 <getgid@plt>
movl   $0x3f,(%esp)
mov    %eax,%edi
call   80498f0 <umask@plt>
test   %edi,%edi
mov    %eax,%ebp
jne    804cb28 <__ctype_b_loc@plt+0x31e8>
mov    %ebx,(%esp)
movl   $0x804e523,0x4(%esp)
call   8049500 <fopen64@plt>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   80498f0 <umask@plt>
test   %ebx,%ebx
je     804cb20 <__ctype_b_loc@plt+0x31e0>
lea    0x3c(%esp),%edi
mov    %edi,(%esp)
call   8049420 <time@plt>
mov    %edi,(%esp)
call   8049640 <localtime@plt>
mov    %esi,%ecx
mov    0x68(%esp),%esi
cmp    $0x1,%cl
mov    0x6c(%esp),%ecx
sbb    %edx,%edx
and    $0x2,%edx
add    $0x2b,%edx
mov    %ecx,0x28(%esp)
mov    0x60(%esp),%ecx
mov    %esi,0x24(%esp)
mov    %edx,0x1c(%esp)
mov    %ecx,0x20(%esp)
mov    0x4(%eax),%edx
mov    %edx,0x18(%esp)
mov    0x8(%eax),%edx
mov    %edx,0x14(%esp)
mov    0xc(%eax),%edx
mov    %edx,0x10(%esp)
mov    0x10(%eax),%eax
movl   $0x804e554,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0xc(%esp)
call   8049880 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   80493a0 <fflush@plt>
mov    %ebx,(%esp)
call   8049750 <fileno@plt>
mov    %eax,(%esp)
call   8049690 <fsync@plt>
mov    %ebx,(%esp)
call   8049410 <fclose@plt>
add    $0x4c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%esp)
call   80495b0 <setgid@plt>
test   %eax,%eax
jne    804cc68 <__ctype_b_loc@plt+0x3328>
mov    %ebx,(%esp)
movl   $0x804e523,0x4(%esp)
call   8049500 <fopen64@plt>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   80498f0 <umask@plt>
mov    %edi,(%esp)
call   80495b0 <setgid@plt>
test   %eax,%eax
je     804ca84 <__ctype_b_loc@plt+0x3144>
movl   $0x804e335,(%esp)
call   8049510 <perror@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804cd05 <__ctype_b_loc@plt+0x33c5>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804cd05 <__ctype_b_loc@plt+0x33c5>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %edi,0xc(%esp)
movl   $0x804e528,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
movl   $0x1,(%esp)
call   80495f0 <exit@plt>
mov    0x68(%esp),%eax
movl   $0x804e4e5,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x5,(%esp)
mov    %eax,0x10(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804ca37 <__ctype_b_loc@plt+0x30f7>
lea    0x0(%esi,%eiz,1),%esi
mov    0x68(%esp),%eax
movl   $0x804e4ca,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x6,(%esp)
mov    %eax,0x10(%esp)
mov    0x6c(%esp),%eax
mov    %eax,0xc(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804ca37 <__ctype_b_loc@plt+0x30f7>
lea    0x0(%esi,%eiz,1),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804cce0 <__ctype_b_loc@plt+0x33a0>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%edi
je     804cce0 <__ctype_b_loc@plt+0x33a0>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,0xc(%esp)
movl   $0x804e507,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x6,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %edi,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %edi,(%esp)
call   80493c0 <free@plt>
jmp    804ca6a <__ctype_b_loc@plt+0x312a>
nop
mov    %ebx,0xc(%esp)
movl   $0x804e507,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x6,(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804ca6a <__ctype_b_loc@plt+0x312a>
mov    %edi,0xc(%esp)
movl   $0x804e528,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804cbec <__ctype_b_loc@plt+0x32ac>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x1c,(%esp)
call   80495a0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804ce14 <__ctype_b_loc@plt+0x34d4>
mov    $0x100,%ebx
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,0x2c(%esp)
call   8049590 <realloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804ce14 <__ctype_b_loc@plt+0x34d4>
call   8049730 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   80493d0 <getpwnam_r@plt>
test   %eax,%eax
jne    804cdad <__ctype_b_loc@plt+0x346d>
cmp    %esi,0x2c(%esp)
je     804cdf0 <__ctype_b_loc@plt+0x34b0>
cmpl   $0x22,(%edi)
jne    804cdd0 <__ctype_b_loc@plt+0x3490>
cmp    $0x3fffffff,%ebx
ja     804cdc0 <__ctype_b_loc@plt+0x3480>
shl    $0x2,%ebx
jmp    804cd58 <__ctype_b_loc@plt+0x3418>
nop
cmp    $0xffffffff,%ebx
je     804cdd0 <__ctype_b_loc@plt+0x3490>
mov    $0xffffffff,%ebx
jmp    804cd58 <__ctype_b_loc@plt+0x3418>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   80493c0 <free@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804da10 <__ctype_b_loc@plt+0x40d0>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   80493c0 <free@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x804e57c,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
movl   $0x804e58f,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0xd,(%esp)
call   80495f0 <exit@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
movl   $0x1c,(%esp)
call   80495a0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     804cf44 <__ctype_b_loc@plt+0x3604>
mov    $0x100,%ebx
xor    %ebp,%ebp
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
mov    %ebx,0x4(%esp)
movl   $0x0,0x2c(%esp)
call   8049590 <realloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804cf44 <__ctype_b_loc@plt+0x3604>
call   8049730 <__errno_location@plt>
movl   $0x0,(%eax)
mov    %eax,%edi
lea    0x2c(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x50(%esp),%eax
mov    %ebx,0xc(%esp)
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8049870 <getpwuid_r@plt>
test   %eax,%eax
jne    804cedd <__ctype_b_loc@plt+0x359d>
cmp    %esi,0x2c(%esp)
je     804cf20 <__ctype_b_loc@plt+0x35e0>
cmpl   $0x22,(%edi)
jne    804cf00 <__ctype_b_loc@plt+0x35c0>
cmp    $0x3fffffff,%ebx
ja     804cef0 <__ctype_b_loc@plt+0x35b0>
shl    $0x2,%ebx
jmp    804ce88 <__ctype_b_loc@plt+0x3548>
nop
cmp    $0xffffffff,%ebx
je     804cf00 <__ctype_b_loc@plt+0x35c0>
mov    $0xffffffff,%ebx
jmp    804ce88 <__ctype_b_loc@plt+0x3548>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,(%esp)
call   80493c0 <free@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
add    $0x3c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    %esi,(%esp)
call   804da10 <__ctype_b_loc@plt+0x40d0>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   80493c0 <free@plt>
mov    %esi,(%esp)
call   80493c0 <free@plt>
add    $0x3c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x804e57c,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
movl   $0x804e599,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0xd,(%esp)
call   80495f0 <exit@plt>
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   80495a0 <malloc@plt>
test   %eax,%eax
je     804cfab <__ctype_b_loc@plt+0x366b>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
call   8049730 <__errno_location@plt>
mov    (%eax),%eax
mov    %eax,(%esp)
call   80495d0 <strerror@plt>
mov    0x8055524,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e5a4,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8049470 <dcgettext@plt>
mov    %esi,0x10(%esp)
mov    %ebx,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0xd,(%esp)
call   80495f0 <exit@plt>
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8049680 <strlen@plt>
add    $0x1,%eax
mov    %eax,(%esp)
call   804cf90 <__ctype_b_loc@plt+0x3650>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049550 <strcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x14,%esp
mov    0x80512e0,%edx
test   %edx,%edx
je     804d080 <__ctype_b_loc@plt+0x3740>
mov    $0x80512e0,%ebx
jmp    804d061 <__ctype_b_loc@plt+0x3721>
add    $0x8,%ebx
mov    (%ebx),%edx
test   %edx,%edx
je     804d080 <__ctype_b_loc@plt+0x3740>
mov    %esi,0x4(%esp)
mov    %edx,(%esp)
call   8049340 <strcmp@plt>
test   %eax,%eax
jne    804d058 <__ctype_b_loc@plt+0x3718>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
movl   $0x5,0x8(%esp)
movl   $0x804e5c8,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804d138 <__ctype_b_loc@plt+0x37f8>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d138 <__ctype_b_loc@plt+0x37f8>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,0xc(%esp)
movl   $0x804e608,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %esi,0xc(%esp)
movl   $0x804e608,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   80497b0 <__syslog_chk@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
push   %esi
push   %ebx
sub    $0x14,%esp
cmpb   $0x0,0x8055520
je     804d1b0 <__ctype_b_loc@plt+0x3870>
mov    0x20(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
mov    %eax,%ebx
je     804d27a <__ctype_b_loc@plt+0x393a>
mov    0x24(%esp),%eax
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d1b8 <__ctype_b_loc@plt+0x3878>
mov    0x4(%ebx),%eax
test   %eax,%eax
je     804d1a2 <__ctype_b_loc@plt+0x3862>
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    %esi,0x4(%ebx)
xor    %eax,%eax
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
call   804d290 <__ctype_b_loc@plt+0x3950>
jmp    804d16e <__ctype_b_loc@plt+0x382e>
nop
movl   $0x5,0x8(%esp)
mov    0x8051484,%ebx
movl   $0x804e628,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8049920 <fputs@plt>
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804d25e <__ctype_b_loc@plt+0x391e>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d25e <__ctype_b_loc@plt+0x391e>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
movl   $0x804e654,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
mov    $0xffffffff,%eax
jmp    804d1a7 <__ctype_b_loc@plt+0x3867>
movl   $0x804e654,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x3,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    $0xffffffff,%eax
jmp    804d1a7 <__ctype_b_loc@plt+0x3867>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x43c,%esp
movl   $0x804e704,0x4(%esp)
movl   $0x80512c0,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x42c(%esp)
xor    %eax,%eax
call   8049500 <fopen64@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d43d <__ctype_b_loc@plt+0x3afd>
movb   $0x1,0x8055520
lea    0x2c(%esp),%edi
lea    0x0(%esi),%esi
mov    %esi,0x8(%esp)
movl   $0x400,0x4(%esp)
mov    %edi,(%esp)
call   80493f0 <fgets@plt>
test   %eax,%eax
je     804d406 <__ctype_b_loc@plt+0x3ac6>
mov    %edi,%ebx
mov    (%ebx),%edx
add    $0x4,%ebx
lea    -0x1010101(%edx),%eax
not    %edx
and    %edx,%eax
and    $0x80808080,%eax
je     804d2f6 <__ctype_b_loc@plt+0x39b6>
mov    %eax,%edx
shr    $0x10,%edx
test   $0x8080,%eax
cmove  %edx,%eax
lea    0x2(%ebx),%edx
cmove  %edx,%ebx
add    %al,%al
sbb    $0x3,%ebx
sub    %edi,%ebx
sub    $0x1,%ebx
js     804d34b <__ctype_b_loc@plt+0x3a0b>
call   8049940 <__ctype_b_loc@plt>
mov    (%eax),%edx
jmp    804d340 <__ctype_b_loc@plt+0x3a00>
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1,%ebx
cmp    $0xffffffff,%ebx
je     804d34b <__ctype_b_loc@plt+0x3a0b>
movsbl (%edi,%ebx,1),%eax
testb  $0x20,0x1(%edx,%eax,2)
jne    804d338 <__ctype_b_loc@plt+0x39f8>
movb   $0x0,0x2d(%esp,%ebx,1)
mov    %edi,%edx
jmp    804d35b <__ctype_b_loc@plt+0x3a1b>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
movzbl (%edx),%eax
mov    %edx,%ebx
movsbl %al,%ecx
cmp    $0x20,%ecx
je     804d358 <__ctype_b_loc@plt+0x3a18>
cmp    $0x9,%ecx
je     804d358 <__ctype_b_loc@plt+0x3a18>
cmp    $0x23,%al
je     804d2d8 <__ctype_b_loc@plt+0x3998>
test   %al,%al
je     804d2d8 <__ctype_b_loc@plt+0x3998>
cmp    $0x20,%ecx
je     804d3aa <__ctype_b_loc@plt+0x3a6a>
cmp    $0x9,%ecx
je     804d3aa <__ctype_b_loc@plt+0x3a6a>
lea    0x1(%edx),%eax
jmp    804d398 <__ctype_b_loc@plt+0x3a58>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%eax
cmp    $0x9,%ecx
je     804d3aa <__ctype_b_loc@plt+0x3a6a>
movsbl (%eax),%ecx
mov    %eax,%ebx
test   %cl,%cl
je     804d2d8 <__ctype_b_loc@plt+0x3998>
cmp    $0x20,%ecx
jne    804d390 <__ctype_b_loc@plt+0x3a50>
movb   $0x0,(%ebx)
lea    0x1(%ebx),%eax
jmp    804d3bb <__ctype_b_loc@plt+0x3a7b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%ecx
mov    %eax,%ebp
mov    %ecx,%ebx
and    $0xfffffffd,%ebx
cmp    $0x20,%bl
je     804d3b8 <__ctype_b_loc@plt+0x3a78>
cmp    $0x9,%cl
je     804d3b8 <__ctype_b_loc@plt+0x3a78>
test   %cl,%cl
je     804d3f1 <__ctype_b_loc@plt+0x3ab1>
cmp    $0x22,%cl
je     804d3f1 <__ctype_b_loc@plt+0x3ab1>
lea    0x1(%eax),%ecx
jmp    804d3e8 <__ctype_b_loc@plt+0x3aa8>
lea    0x0(%esi),%esi
add    $0x1,%ecx
cmp    $0x22,%bl
je     804d3f1 <__ctype_b_loc@plt+0x3ab1>
movzbl (%ecx),%ebx
mov    %ecx,%ebp
test   %bl,%bl
jne    804d3e0 <__ctype_b_loc@plt+0x3aa0>
movb   $0x0,0x0(%ebp)
mov    %eax,0x4(%esp)
mov    %edx,(%esp)
call   804d160 <__ctype_b_loc@plt+0x3820>
jmp    804d2d8 <__ctype_b_loc@plt+0x3998>
mov    %esi,(%esp)
call   80493e0 <ferror@plt>
test   %eax,%eax
jne    804d4df <__ctype_b_loc@plt+0x3b9f>
mov    %esi,(%esp)
call   8049410 <fclose@plt>
mov    0x42c(%esp),%eax
xor    %gs:0x14,%eax
jne    804d4da <__ctype_b_loc@plt+0x3b9a>
add    $0x43c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8049730 <__errno_location@plt>
mov    (%eax),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804d541 <__ctype_b_loc@plt+0x3c01>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d541 <__ctype_b_loc@plt+0x3c01>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,(%esp)
call   80495d0 <strerror@plt>
movl   $0x80512c0,0xc(%esp)
movl   $0x804e680,0x8(%esp)
mov    %eax,0x10(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
call   80497b0 <__syslog_chk@plt>
mov    %ebx,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
movl   $0x1,(%esp)
call   80495f0 <exit@plt>
call   8049490 <__stack_chk_fail@plt>
call   8049730 <__errno_location@plt>
mov    (%eax),%esi
movl   $0x0,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
test   %eax,%eax
je     804d576 <__ctype_b_loc@plt+0x3c36>
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d576 <__ctype_b_loc@plt+0x3c36>
movl   $0x804df99,0x4(%esp)
movl   $0x6,(%esp)
call   80497f0 <setlocale@plt>
mov    %esi,(%esp)
call   80495d0 <strerror@plt>
movl   $0x80512c0,0xc(%esp)
movl   $0x804e6a8,0x8(%esp)
mov    %eax,0x10(%esp)
jmp    804d4a2 <__ctype_b_loc@plt+0x3b62>
mov    %esi,(%esp)
call   80495d0 <strerror@plt>
movl   $0x80512c0,0xc(%esp)
movl   $0x804e680,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804d4ce <__ctype_b_loc@plt+0x3b8e>
mov    %esi,(%esp)
call   80495d0 <strerror@plt>
movl   $0x80512c0,0xc(%esp)
movl   $0x804e6a8,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x2,(%esp)
mov    %eax,0x10(%esp)
call   80497b0 <__syslog_chk@plt>
jmp    804d4ce <__ctype_b_loc@plt+0x3b8e>
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
cmpb   $0x0,0x8055520
je     804d5d0 <__ctype_b_loc@plt+0x3c90>
mov    0x10(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
je     804d5d8 <__ctype_b_loc@plt+0x3c98>
mov    0x4(%eax),%eax
add    $0xc,%esp
ret
call   804d290 <__ctype_b_loc@plt+0x3950>
jmp    804d5bc <__ctype_b_loc@plt+0x3c7c>
nop
xor    %eax,%eax
lea    0x0(%esi),%esi
jmp    804d5cc <__ctype_b_loc@plt+0x3c8c>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
cmpb   $0x0,0x8055520
je     804d630 <__ctype_b_loc@plt+0x3cf0>
mov    0x20(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
je     804d648 <__ctype_b_loc@plt+0x3d08>
mov    0x4(%eax),%eax
test   %eax,%eax
je     804d648 <__ctype_b_loc@plt+0x3d08>
movl   $0x804e706,0x4(%esp)
mov    %eax,(%esp)
call   80496c0 <strcasecmp@plt>
test   %eax,%eax
sete   %al
add    $0x1c,%esp
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d290 <__ctype_b_loc@plt+0x3950>
mov    0x20(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
jne    804d609 <__ctype_b_loc@plt+0x3cc9>
lea    0x0(%esi),%esi
xor    %eax,%eax
add    $0x1c,%esp
ret
xchg   %ax,%ax
push   %ebx
sub    $0x38,%esp
cmpb   $0x0,0x8055520
je     804d698 <__ctype_b_loc@plt+0x3d58>
mov    0x40(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
mov    %eax,%ebx
je     804d6ac <__ctype_b_loc@plt+0x3d6c>
mov    0x4(%eax),%eax
mov    0x44(%esp),%edx
test   %eax,%eax
je     804d68f <__ctype_b_loc@plt+0x3d4f>
lea    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d950 <__ctype_b_loc@plt+0x4010>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     804d6b8 <__ctype_b_loc@plt+0x3d78>
add    $0x38,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
call   804d290 <__ctype_b_loc@plt+0x3950>
mov    0x40(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
mov    %eax,%ebx
jne    804d66c <__ctype_b_loc@plt+0x3d2c>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
nop
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e6d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    %ebx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
cmpb   $0x0,0x8055520
mov    0x40(%esp),%esi
mov    0x44(%esp),%edi
je     804d7b8 <__ctype_b_loc@plt+0x3e78>
mov    %esi,%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
mov    %eax,%ebx
je     804d795 <__ctype_b_loc@plt+0x3e55>
mov    0x4(%eax),%eax
mov    %edi,%edx
test   %eax,%eax
je     804d797 <__ctype_b_loc@plt+0x3e57>
lea    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d950 <__ctype_b_loc@plt+0x4010>
test   %eax,%eax
jne    804d7a0 <__ctype_b_loc@plt+0x3e60>
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e6d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
mov    %edi,%edx
add    $0x30,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
mov    0x2c(%esp),%edx
test   %edx,%edx
js     804d755 <__ctype_b_loc@plt+0x3e15>
add    $0x30,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
call   804d290 <__ctype_b_loc@plt+0x3950>
jmp    804d72b <__ctype_b_loc@plt+0x3deb>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
cmpb   $0x0,0x8055520
je     804d818 <__ctype_b_loc@plt+0x3ed8>
mov    0x40(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
mov    %eax,%ebx
je     804d82c <__ctype_b_loc@plt+0x3eec>
mov    0x4(%eax),%eax
mov    0x44(%esp),%edx
test   %eax,%eax
je     804d80f <__ctype_b_loc@plt+0x3ecf>
lea    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d950 <__ctype_b_loc@plt+0x4010>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     804d838 <__ctype_b_loc@plt+0x3ef8>
add    $0x38,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
call   804d290 <__ctype_b_loc@plt+0x3950>
mov    0x40(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
mov    %eax,%ebx
jne    804d7ec <__ctype_b_loc@plt+0x3eac>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
nop
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e6d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    %ebx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x38,%esp
cmpb   $0x0,0x8055520
je     804d8d8 <__ctype_b_loc@plt+0x3f98>
mov    0x40(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
mov    %eax,%ebx
je     804d8ec <__ctype_b_loc@plt+0x3fac>
mov    0x4(%eax),%eax
mov    0x44(%esp),%edx
test   %eax,%eax
je     804d8cf <__ctype_b_loc@plt+0x3f8f>
lea    0x2c(%esp),%edx
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d9b0 <__ctype_b_loc@plt+0x4070>
mov    0x2c(%esp),%edx
test   %eax,%eax
je     804d8f8 <__ctype_b_loc@plt+0x3fb8>
add    $0x38,%esp
mov    %edx,%eax
pop    %ebx
ret
xchg   %ax,%ax
call   804d290 <__ctype_b_loc@plt+0x3950>
mov    0x40(%esp),%eax
call   804d040 <__ctype_b_loc@plt+0x3700>
test   %eax,%eax
mov    %eax,%ebx
jne    804d8ac <__ctype_b_loc@plt+0x3f6c>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
nop
mov    0x4(%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e6d0,0x4(%esp)
movl   $0x0,(%esp)
call   8049470 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    %ebx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %ecx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    0x8051484,%eax
mov    %eax,(%esp)
call   8049880 <__fprintf_chk@plt>
mov    0x44(%esp),%edx
add    $0x38,%esp
pop    %ebx
mov    %edx,%eax
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x24,%esp
call   8049730 <__errno_location@plt>
mov    0x30(%esp),%ebx
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049910 <strtol@plt>
xor    %edx,%edx
cmpb   $0x0,(%ebx)
je     804d99e <__ctype_b_loc@plt+0x405e>
mov    0x1c(%esp),%ecx
cmpb   $0x0,(%ecx)
jne    804d99e <__ctype_b_loc@plt+0x405e>
cmpl   $0x22,(%esi)
je     804d99e <__ctype_b_loc@plt+0x405e>
mov    0x34(%esp),%edx
mov    %eax,(%edx)
mov    $0x1,%edx
add    $0x24,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
push   %ebx
sub    $0x24,%esp
call   8049730 <__errno_location@plt>
mov    0x30(%esp),%ebx
movl   $0x0,(%eax)
mov    %eax,%esi
lea    0x1c(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebx,(%esp)
call   8049530 <strtoll@plt>
xor    %ecx,%ecx
cmpb   $0x0,(%ebx)
je     804d9f7 <__ctype_b_loc@plt+0x40b7>
mov    0x1c(%esp),%ebx
cmpb   $0x0,(%ebx)
jne    804d9f7 <__ctype_b_loc@plt+0x40b7>
cmpl   $0x22,(%esi)
je     804d9f7 <__ctype_b_loc@plt+0x40b7>
test   %edx,%edx
je     804da00 <__ctype_b_loc@plt+0x40c0>
add    $0x24,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
ret
nop
mov    0x34(%esp),%edx
mov    $0x1,%cl
mov    %eax,(%edx)
add    $0x24,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
ret
push   %esi
push   %ebx
sub    $0x14,%esp
movl   $0x1c,(%esp)
mov    0x20(%esp),%esi
call   80495a0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804dace <__ctype_b_loc@plt+0x418e>
mov    0x8(%esi),%eax
mov    %eax,0x8(%ebx)
mov    0xc(%esi),%eax
mov    %eax,0xc(%ebx)
mov    (%esi),%eax
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,(%ebx)
je     804dac6 <__ctype_b_loc@plt+0x4186>
mov    0x4(%esi),%eax
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x4(%ebx)
je     804dabc <__ctype_b_loc@plt+0x417c>
mov    0x10(%esi),%eax
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x10(%ebx)
je     804dab1 <__ctype_b_loc@plt+0x4171>
mov    0x14(%esi),%eax
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x14(%ebx)
je     804daa6 <__ctype_b_loc@plt+0x4166>
mov    0x18(%esi),%eax
mov    %eax,(%esp)
call   8049710 <__strdup@plt>
test   %eax,%eax
mov    %eax,0x18(%ebx)
je     804da9b <__ctype_b_loc@plt+0x415b>
add    $0x14,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
ret
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    %ebx,(%esp)
call   80493c0 <free@plt>
add    $0x14,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    0x4(%ebx),%esi
test   %esi,%esi
je     804db21 <__ctype_b_loc@plt+0x41e1>
mov    %esi,(%esp)
call   8049680 <strlen@plt>
movl   $0x0,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
call   8049700 <memset@plt>
mov    0x4(%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    0x10(%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    0x14(%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    0x18(%ebx),%eax
mov    %eax,(%esp)
call   80493c0 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x14,%esp
pop    %ebx
pop    %esi
jmp    80493c0 <free@plt>
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   804ab70 <__ctype_b_loc@plt+0x1230>
add    $0x34a5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0x104(%ebx),%esi
call   80492ec <_init>
lea    -0x108(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804dba9 <__ctype_b_loc@plt+0x4269>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0x108(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804db88 <__ctype_b_loc@plt+0x4248>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804dbc0 <__ctype_b_loc@plt+0x4280>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
push   %ebx
sub    $0x8,%esp
call   804ab70 <__ctype_b_loc@plt+0x1230>
add    $0x3433,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %ebp
jae    804dc44 <_IO_stdin_used+0x68>
cmp    %gs:(%bx,%si),%ah
jae    804dc5e <_IO_stdin_used+0x82>
and    %bl,0x6f(%ebx)
jo     804dc62 <_IO_stdin_used+0x86>
imul   $0x5b205d73,0x6e(%edi),%ebp
dec    %esp
dec    %edi
inc    %edi
dec    %ecx
dec    %esi
pop    %ebp
or     (%edx),%cl
dec    %edi
jo     804dc74 <_IO_stdin_used+0x98>
imul   $0x200a3a73,0x6e(%edi),%ebp
and    %ch,0x2d202c63
sub    $0x6d6d6f63,%eax
popa
outsb  %ds:(%esi),(%dx)
and    %al,%fs:0x4f(%ebx)
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x61(%eax)
jae    804dc9d <_IO_stdin_used+0xc1>
and    %al,0x4f(%ebx)
dec    %ebp
dec    %ebp
inc    %ecx
dec    %esi
inc    %esp
and    %dh,0x20(%edi,%ebp,2)
je     804dca0 <_IO_stdin_used+0xc4>
and    %ch,%gs:0x6e(%ecx)
jbe    804dcad <_IO_stdin_used+0xd1>
imul   $0x20,0x64(%ebp),%esp
jae    804dcac <_IO_stdin_used+0xd0>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ch,0x2d202c68
sub    $0x706c6568,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     804dcda <_IO_stdin_used+0xfe>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ch,0x65(%ebp)
jae    804dcf1 <_IO_stdin_used+0x115>
popa
and    %ah,%gs:0x6e(%bx,%di)
and    %ah,%fs:0x78(%ebp)
imul   $0x202c2d20,0x20(%edx,%ecx,1),%esi
sub    $0x2d202c6c,%eax
sub    $0x69676f6c,%eax
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
insl   (%dx),%es:(%edi)
popa
imul   $0x74,0x20(%ebp),%esp
push   $0x68732065
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
and    %ah,0x20(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x6c656873,0x20(%bp),%ebp
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ch,0x2d202c6d
jo     804dcfd <_IO_stdin_used+0x121>
or     (%eax),%ah
and    %ch,0x6572702d
jae    804dd40 <_IO_stdin_used+0x164>
jb     804dd53 <_IO_stdin_used+0x177>
gs
sub    $0x69766e65,%eax
jb     804dd54 <_IO_stdin_used+0x178>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804dd0b <_IO_stdin_used+0x12f>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x20(%edi,%ebp,2)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804dd19 <_IO_stdin_used+0x13d>
jb     804dd60 <_IO_stdin_used+0x184>
jae    804dd62 <_IO_stdin_used+0x186>
je     804dd1f <_IO_stdin_used+0x143>
outsb  %gs:(%esi),(%dx)
jbe    804dd6c <_IO_stdin_used+0x190>
jb     804dd74 <_IO_stdin_used+0x198>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804dd2b <_IO_stdin_used+0x14f>
jbe    804dd6e <_IO_stdin_used+0x192>
jb     804dd78 <_IO_stdin_used+0x19c>
popa
bound  %ebp,0x73(%ebp,%eiz,2)
sub    $0x20,%al
popa
outsb  %ds:(%esi),(%dx)
or     %fs:(%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x65(%ebx)
gs
jo     804dd5f <_IO_stdin_used+0x183>
je     804dda9 <_IO_stdin_used+0x1cd>
and    %dh,%gs:0x61(%ebx)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%ah
and    %ch,0x2d202c73
sub    $0x6c656873,%eax
insb   (%dx),%es:(%edi)
and    %dl,0x48(%ebx)
inc    %ebp
dec    %esp
dec    %esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x73(%ebp)
and    %dl,%gs:0x48(%ebx)
inc    %ebp
dec    %esp
dec    %esp
and    %ch,0x6e(%ecx)
jae    804ddf0 <_IO_stdin_used+0x214>
gs
popa
and    %ch,%fs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x66(%ebp,%eiz,2)
popa
jne    804ddf9 <_IO_stdin_used+0x21d>
je     804ddaf <_IO_stdin_used+0x1d3>
imul   $0x73736170,0x20(%esi),%ebp
ja     804ddfc <_IO_stdin_used+0x220>
or     (%edx),%cl
add    %al,(%eax)
and    %ch,(%esi)
cs ja,pn 804de03 <_IO_stdin_used+0x227>
imul   $0x6f662067,0x6e(%ecx,%ebp,2),%esi
jb     804ddcc <_IO_stdin_used+0x1f0>
arpl   %bp,0x69(%eax)
insb   (%dx),%es:(%edi)
and    %dh,%fs:0x20(%edi,%ebp,2)
je     804de1c <_IO_stdin_used+0x240>
jb     804de26 <_IO_stdin_used+0x24a>
imul   $0xa2e6574,0x61(%esi),%ebp
add    %al,(%eax)
add    %al,(%eax)
and    $0x73203a73,%eax
imul   $0x6d206c61,0x6e(%edi),%esp
popa
jae    804de3e <_IO_stdin_used+0x262>
imul   $0x6c616d20,0x67(%esi),%ebp
data16
jne    804de4b <_IO_stdin_used+0x26f>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
push   %ebx
gs
jae    804de5b <_IO_stdin_used+0x27f>
imul   $0x72657420,0x6e(%edi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x2c646574,0x61(%esi),%ebp
and    %dh,0x72(%ebp,%eiz,2)
insl   (%dx),%es:(%edi)
imul   $0x676e6974,0x61(%esi),%ebp
and    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
cs cs add %al,%cs:(%eax)
add    %al,(%eax)
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x61(%eax)
jae    804de8a <_IO_stdin_used+0x2ae>
ja     804de7d <_IO_stdin_used+0x2a1>
and    %ah,0x6e(%ebp)
je     804de90 <_IO_stdin_used+0x2b4>
jns    804de40 <_IO_stdin_used+0x264>
outsw  %ds:(%esi),(%dx)
jb     804de44 <_IO_stdin_used+0x268>
jne    804de99 <_IO_stdin_used+0x2bd>
gs
jb     804de49 <_IO_stdin_used+0x26d>
daa
and    $0xa2773,%eax
add    %dh,0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
addr16
gs
je     804de97 <_IO_stdin_used+0x2bb>
imul   $0x6e69203a,0x6d(%ebp,%eiz,2),%esi
je     804dea7 <_IO_stdin_used+0x2cb>
jb     804deb2 <_IO_stdin_used+0x2d6>
popa
insb   (%dx),%es:(%edi)
and    %dl,0x41(%eax)
dec    %ebp
and    %ah,0x72(%ebp)
jb     804debe <_IO_stdin_used+0x2e2>
jb     804de5b <_IO_stdin_used+0x27f>
add    %al,(%eax)
add    %ah,0x49203a73
outsb  %ds:(%esi),(%dx)
je     804dec1 <_IO_stdin_used+0x2e5>
jb     804decc <_IO_stdin_used+0x2f0>
popa
insb   (%dx),%es:(%edi)
and    %dl,0x41(%eax)
dec    %ebp
and    %ah,0x72(%ebp)
jb     804ded8 <_IO_stdin_used+0x2fc>
jb     804de8b <_IO_stdin_used+0x2af>
jb     804ded2 <_IO_stdin_used+0x2f6>
je     804dee1 <_IO_stdin_used+0x305>
imul   $0x20676e69,0x76(%ebp),%esp
jne    804deeb <_IO_stdin_used+0x30f>
gs
jb     804dee9 <_IO_stdin_used+0x30d>
popa
insl   (%dx),%es:(%edi)
or     %gs:(%eax),%al
inc    %ebx
push   $0x65676e61
and    %dh,0x73(%ebp)
gs
jb     804deac <_IO_stdin_used+0x2d0>
data16
jb     804defe <_IO_stdin_used+0x322>
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x74202773,%eax
outsl  %ds:(%esi),(%dx)
and    %ah,(%edi)
and    $0x61202773,%eax
jae    804dec1 <_IO_stdin_used+0x2e5>
jb     804df08 <_IO_stdin_used+0x32c>
jno    804df1a <_IO_stdin_used+0x33e>
gs
jae    804df1c <_IO_stdin_used+0x340>
gs and %ah,%fs:%gs:0x79(%edx)
and    %dl,0x41(%eax)
dec    %ebp
add    %al,(%eax)
add    %dl,0x41(%eax)
push   %esp
dec    %eax
cmp    $0x6962732f,%eax
outsb  %ds:(%esi),(%dx)
cmp    (%edi),%ch
bound  %ebp,0x6e(%ecx)
cmp    (%edi),%ch
jne    804df3a <_IO_stdin_used+0x35e>
jb     804def8 <_IO_stdin_used+0x31c>
jae    804df2d <_IO_stdin_used+0x351>
imul   $0x7273752f,0x3a(%esi),%ebp
das
bound  %ebp,0x6e(%ecx)
add    %al,(%eax)
and    $0x6d203a73,%eax
jne    804df52 <_IO_stdin_used+0x376>
je     804df01 <_IO_stdin_used+0x325>
bound  %esp,0x20(%ebp)
jb     804df5b <_IO_stdin_used+0x37f>
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%esi)
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
and    %ah,0x20(%ecx)
je     804df56 <_IO_stdin_used+0x37a>
jb     804df60 <_IO_stdin_used+0x384>
imul   $0xa6c,0x61(%esi),%ebp
add    %al,(%eax)
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804df27 <_IO_stdin_used+0x34b>
fs
gs
je     804df70 <_IO_stdin_used+0x394>
jb     804df7a <_IO_stdin_used+0x39e>
imul   $0x756f7920,0x65(%esi),%ebp
jb     804df36 <_IO_stdin_used+0x35a>
jne    804df8b <_IO_stdin_used+0x3af>
gs
jb     804df3b <_IO_stdin_used+0x35f>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
gs or  %cs:%gs:(%eax),%al
add    %al,(%eax)
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804df4b <_IO_stdin_used+0x36f>
fs
gs
je     804df94 <_IO_stdin_used+0x3b8>
jb     804df9e <_IO_stdin_used+0x3c2>
imul   $0x65687420,0x65(%esi),%ebp
and    %dh,0x73(%ebp)
gs
jb     804df5e <_IO_stdin_used+0x382>
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
and    %ch,%gs:0x66(%edi)
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
gs
jb     804df71 <_IO_stdin_used+0x395>
sub    %dl,0x49(%ebp)
inc    %esp
and    %ah,0x29756c
add    %ah,0x43203a73
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804df87 <_IO_stdin_used+0x3ab>
fs
jb     804dfd9 <_IO_stdin_used+0x3fd>
jo     804df8c <_IO_stdin_used+0x3b0>
je     804dfd6 <_IO_stdin_used+0x3fa>
and    %ah,%gs:0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
je     804dfe7 <_IO_stdin_used+0x40b>
outsl  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0x72657420,0x67(%esi),%ebp
insl   (%dx),%es:(%edi)
imul   $0x3f000a6c,0x61(%esi),%ebp
aas
aas
add    %dl,0x59(%ebx)
push   %ebx
dec    %esp
dec    %edi
inc    %edi
pop    %edi
push   %ebx
push   %ebp
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %al,0x0(%ebx)
sub    $0x20732520,%eax
and    $0x73253a73,%eax
add    %ah,(%eax)
cs cs imul $0x6c,%cs:0x6c(%ecx),%ebp
gs fs or %cs:%fs:%gs:(%eax),%al
and    $0x43203a73,%eax
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804dfde <_IO_stdin_used+0x402>
outsw  %ds:(%esi),(%dx)
jb     804e02d <_IO_stdin_used+0x451>
and    %dh,0x73(%ebp)
gs
jb     804dfe8 <_IO_stdin_used+0x40c>
jae    804e032 <_IO_stdin_used+0x456>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     (%eax),%al
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804dff6 <_IO_stdin_used+0x41a>
gs
js     804e03e <_IO_stdin_used+0x462>
arpl   %si,0x74(%ebp)
and    %ah,%gs:0x73250073
cmp    (%eax),%ah
jae    804e050 <_IO_stdin_used+0x474>
outsb  %ds:(%si),(%dx)
popa
insb   (%dx),%es:(%edi)
and    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
data16
jne    804e060 <_IO_stdin_used+0x484>
arpl   %si,0x6f(%ecx,%ebp,2)
outsb  %ds:(%esi),(%dx)
or     (%eax),%al
jo     804e05c <_IO_stdin_used+0x480>
insl   (%dx),%es:(%edi)
pop    %edi
arpl   %bp,0x73(%edi,%ebp,2)
gs
pop    %edi
jae    804e06a <_IO_stdin_used+0x48e>
jae    804e07a <_IO_stdin_used+0x49e>
imul   $0x7325203a,0x6e(%edi),%ebp
add    %ah,0x25203a73
jae    804e020 <_IO_stdin_used+0x444>
add    %ah,(%eax)
cs cs je,pn 804e082 <_IO_stdin_used+0x4a6>
jb     804e08c <_IO_stdin_used+0x4b0>
imul   $0x2e646574,0x61(%esi),%ebp
or     (%eax),%al
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %dh,0x61(%eax)
jae    804e0a2 <_IO_stdin_used+0x4c6>
ja     804e095 <_IO_stdin_used+0x4b9>
and    %ah,0x6e(%ebp)
je     804e0a8 <_IO_stdin_used+0x4cc>
jns    804e058 <_IO_stdin_used+0x47c>
outsw  %ds:(%esi),(%dx)
jb     804e05c <_IO_stdin_used+0x480>
jne    804e0b1 <_IO_stdin_used+0x4d5>
gs
jb     804e061 <_IO_stdin_used+0x485>
daa
and    $0x70002773,%eax
popa
insl   (%dx),%es:(%edi)
pop    %edi
popa
jne    804e0c1 <_IO_stdin_used+0x4e5>
push   $0x69746e65
arpl   %sp,0x74(%ecx)
cmp    %gs:(%eax),%ah
and    $0x73250073,%eax
cmp    (%eax),%ah
and    $0x49280a73,%eax
outsb  %ds:(%si),(%dx)
outsl  %ds:(%esi),(%dx)
jb     804e0ce <_IO_stdin_used+0x4f2>
sub    %ecx,%fs:(%edx)
add    %dh,0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
arpl   %bp,0x61(%eax)
jne    804e0ea <_IO_stdin_used+0x50e>
push   $0x3a6b6f74
and    %ah,0x61700073
insl   (%dx),%es:(%edi)
pop    %edi
popa
arpl   %sp,0x74(%ebx)
pop    %edi
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%di)
je     804e0c7 <_IO_stdin_used+0x4eb>
and    %ah,0x4e450073
push   %esi
pop    %edi
push   %ebx
push   %ebp
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %al,0x4e(%ebp)
push   %esi
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
add    %dl,0x41(%eax)
push   %esp
dec    %eax
cmp    $0x6e69622f,%eax
cmp    (%edi),%ch
jne    804e125 <_IO_stdin_used+0x549>
jb     804e0e3 <_IO_stdin_used+0x507>
bound  %ebp,0x6e(%ecx)
add    %dl,0x55(%ebx)
pop    %edi
dec    %esi
dec    %edi
pop    %edi
push   %ebx
dec    %eax
inc    %ebp
dec    %esp
dec    %esp
pop    %edi
inc    %ecx
push   %edx
inc    %edi
push   %ebx
add    %ch,(%edi)
jne    804e13f <_IO_stdin_used+0x563>
jb     804e0fd <_IO_stdin_used+0x521>
jae    804e138 <_IO_stdin_used+0x55c>
popa
jb     804e138 <_IO_stdin_used+0x55c>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %dh,%gs:0x68(%ebx)
popa
outsl  %fs:(%esi),(%dx)
ja     804e0e2 <_IO_stdin_used+0x506>
jae    804e159 <_IO_stdin_used+0x57d>
add    %ah,0x3a(%ebx)
push   $0x73706d6c
cmp    (%eax),%al
jb     804e15f <_IO_stdin_used+0x583>
outsl  %ds:(%esi),(%dx)
je     804e0f3 <_IO_stdin_used+0x517>
push   %esp
push   $0x20657265
imul   $0x55206f6e,0x20(%ebx),%esi
dec    %ecx
inc    %esp
and    %dh,(%eax)
and    %dh,0x73(%ebp)
gs
jb     804e138 <_IO_stdin_used+0x55c>
add    %dh,0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
jae    804e185 <_IO_stdin_used+0x5a9>
popa
jb     804e188 <_IO_stdin_used+0x5ac>
cmp    (%eax),%ah
gs
jb     804e18b <_IO_stdin_used+0x5af>
outsl  %ds:(%esi),(%dx)
jb     804e13c <_IO_stdin_used+0x560>
and    $0x73250064,%eax
cmp    (%eax),%ah
jo     804e186 <_IO_stdin_used+0x5aa>
insl   (%dx),%es:(%edi)
pop    %edi
jae    804e19d <_IO_stdin_used+0x5c1>
popa
jb     804e1a0 <_IO_stdin_used+0x5c4>
cmp    (%eax),%ah
gs
jb     804e1a3 <_IO_stdin_used+0x5c7>
outsl  %ds:(%esi),(%dx)
jb     804e154 <_IO_stdin_used+0x578>
and    $0x70000a64,%eax
popa
insl   (%dx),%es:(%edi)
pop    %edi
jae    804e1a3 <_IO_stdin_used+0x5c7>
je     804e19f <_IO_stdin_used+0x5c3>
imul   $0x7325203a,0x6d(%ebp,%eiz,2),%esi
add    %ch,(%edi)
bound  %ebp,0x6e(%ecx)
das
bound  %esp,0x73(%ecx)
push   $0x25202b00
jae    804e178 <_IO_stdin_used+0x59c>
and    $0x73253a73,%eax
add    %dh,0x61(%eax)
insl   (%dx),%es:(%edi)
pop    %edi
jae    804e1c9 <_IO_stdin_used+0x5ed>
je     804e1c9 <_IO_stdin_used+0x5ed>
jb     804e1cd <_IO_stdin_used+0x5f1>
cmp    %fs:(%eax),%ah
and    $0x61700073,%eax
insl   (%dx),%es:(%edi)
pop    %edi
outsl  %ds:(%esi),(%dx)
jo     804e1da <_IO_stdin_used+0x5fe>
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804e1de <_IO_stdin_used+0x602>
jae    804e1ee <_IO_stdin_used+0x612>
imul   $0x7325203a,0x6e(%edi),%ebp
add    %al,0x4f(%ebx)
dec    %esp
dec    %edi
push   %edx
push   %esp
inc    %ebp
push   %edx
dec    %ebp
add    %al,0x53(%ecx,%ecx,2)
push   %eax
dec    %esp
inc    %ecx
pop    %ecx
add    %bl,0x41(%eax)
push   %ebp
push   %esp
dec    %eax
dec    %edi
push   %edx
dec    %ecx
push   %esp
pop    %ecx
add    %cl,0x46(%ecx)
push   %ebx
add    %cl,0x46(%ecx)
push   %ebx
cmp    $0xa0920,%eax
push   %ebp
push   %ebx
inc    %ebp
push   %edx
add    %cl,0x47(%edi,%ecx,2)
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %dl,0x55(%ebx)
pop    %edi
dec    %esi
inc    %ecx
dec    %ebp
inc    %ebp
add    %ch,0x2d0063
inc    %ebx
popa
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e1ed <_IO_stdin_used+0x611>
gs
js     804e235 <_IO_stdin_used+0x659>
arpl   %si,0x74(%ebp)
and    %ah,%gs:0x63000a73
outsl  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
add    %ch,%fs:0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804e1e6 <_IO_stdin_used+0x60a>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x73657270,0x0(%bp),%ebp
gs
jb     804e269 <_IO_stdin_used+0x68d>
gs
sub    $0x69766e65,%eax
jb     804e26a <_IO_stdin_used+0x68e>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804e201 <_IO_stdin_used+0x625>
jae    804e26b <_IO_stdin_used+0x68f>
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %al,(%eax)
rcrl   %cl,-0x641df7fc(%ebx)
add    $0x8,%al
loop   804e1ad <_IO_stdin_used+0x5d1>
add    $0x8,%al
loop   804e1b1 <_IO_stdin_used+0x5d5>
add    $0x8,%al
loop   804e1b5 <_IO_stdin_used+0x5d9>
add    $0x8,%al
int3
fwait
add    $0x8,%al
loop   804e1bd <_IO_stdin_used+0x5e1>
add    $0x8,%al
loop   804e1c1 <_IO_stdin_used+0x5e5>
add    $0x8,%al
loop   804e1c5 <_IO_stdin_used+0x5e9>
add    $0x8,%al
ret
fwait
add    $0x8,%al
mov    $0xe208049b,%edx
fwait
add    $0x8,%al
loop   804e1d5 <_IO_stdin_used+0x5f9>
add    $0x8,%al
mov    $0xe208049b,%edx
fwait
add    $0x8,%al
loop   804e1e1 <_IO_stdin_used+0x605>
add    $0x8,%al
scas   %es:(%edi),%al
fwait
add    $0x8,%al
and    $0x73253d73,%eax
add    %ah,0x6e(%ebp)
jbe    804e284 <_IO_stdin_used+0x6a8>
arpl   %ax,(%eax)
ja     804e2c6 <_IO_stdin_used+0x6ea>
outsb  %gs:(%esi),(%dx)
and    %bh,0x6928203d
outsb  %ds:(%esi),(%dx)
je     804e28e <_IO_stdin_used+0x6b2>
and    %ch,0x6e(%ebp,%eiz,2)
and    %ch,0x6e450031
jbe    804e2da <_IO_stdin_used+0x6fe>
jb     804e2e2 <_IO_stdin_used+0x706>
outsb  %ds:(%esi),(%dx)
insl   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804e299 <_IO_stdin_used+0x6bd>
outsl  %ds:(%esi),(%dx)
jbe    804e2e1 <_IO_stdin_used+0x705>
jb     804e2e4 <_IO_stdin_used+0x708>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804e28c <_IO_stdin_used+0x6b0>
add    %cl,0x64(%ebp,%eiz,1)
add    %dh,0x6c(%edi)
outsb  %gs:(%esi),(%dx)
and    %bh,(%eax,%eiz,1)
sub    %ch,0x6e(%ecx)
je     804e2bc <_IO_stdin_used+0x6e0>
and    %dh,0x69(%ebx)
jp     804e2fd <_IO_stdin_used+0x721>
outsl  %ds:(%esi),(%dx)
data16
sub    %dh,0x61(%esi)
jb     804e308 <_IO_stdin_used+0x72c>
popa
bound  %ebp,0x29(%ebp,%eiz,2)
add    %bl,0x6f(%ecx)
jne    804e2c9 <_IO_stdin_used+0x6ed>
insl   (%dx),%es:(%edi)
popa
jns    804e2cd <_IO_stdin_used+0x6f1>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e2d1 <_IO_stdin_used+0x6f5>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:(%si)
and    $0x4c000a73,%eax
inc    %ecx
dec    %esi
inc    %edi
cmp    $0x4e414c00,%eax
inc    %edi
push   %ebp
inc    %ecx
inc    %edi
inc    %ebp
cmp    $0x5f434c00,%eax
add    %bl,0x52(%edi)
dec    %esp
inc    %esp
pop    %edi
cmp    $0x53414200,%eax
dec    %eax
pop    %edi
inc    %ebp
dec    %esi
push   %esi
cmp    $0x4d4f4800,%eax
inc    %ebp
cmp    $0x53464900,%eax
cmp    $0x42524b00,%eax
pop    %edi
inc    %ebx
dec    %edi
dec    %esi
inc    %esi
cmp    $0x5f444c00,%eax
add    %cl,0x42(%ecx,%ecx,2)
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x49414d00,%eax
dec    %esp
cmp    $0x534c4e00,%eax
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x45485300,%eax
dec    %esp
dec    %esp
cmp    $0x4c485300,%eax
dec    %ecx
inc    %edx
pop    %edi
push   %eax
inc    %ecx
push   %esp
dec    %eax
cmp    $0x74657300,%eax
pop    %edi
outsb  %gs:(%esi),(%dx)
jbe    804e32e <_IO_stdin_used+0x752>
popa
fs fs outsb %fs:%gs:(%esi),(%dx)
jbe    804e335 <_IO_stdin_used+0x759>
jae    804e39c <_IO_stdin_used+0x7c0>
je     804e3a0 <_IO_stdin_used+0x7c4>
imul   $0x6774696e,0x69(%eax,%eax,1),%esp
jb     804e3b2 <_IO_stdin_used+0x7d6>
jne    804e3b5 <_IO_stdin_used+0x7d9>
jae    804e347 <_IO_stdin_used+0x76b>
jae    804e3ae <_IO_stdin_used+0x7d2>
je     804e3c0 <_IO_stdin_used+0x7e4>
imul   $0x64616200,0x0(%eax,%eax,1),%esp
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e3c9 <_IO_stdin_used+0x7ed>
and    %cl,0x44(%ecx)
and    %ah,0x25(%eax)
fs
daa
and    %ah,0x6f(%esi)
jb     804e386 <_IO_stdin_used+0x7aa>
jne    804e3db <_IO_stdin_used+0x7ff>
gs
jb     804e38b <_IO_stdin_used+0x7af>
pusha
and    $0x203a2773,%eax
and    $0xa73,%eax
add    %al,(%eax)
imul   $0x6f726774,0x69(%esi),%ebp
jne    804e3f1 <_IO_stdin_used+0x815>
jae    804e3a3 <_IO_stdin_used+0x7c7>
popaw
imul   $0x726f6620,0x64(%ebp,%eiz,2),%ebp
and    %dh,0x73(%ebp)
gs
jb     804e3b3 <_IO_stdin_used+0x7d7>
pusha
and    $0x203a2773,%eax
and    $0xa73,%eax
add    %al,(%eax)
bound  %esp,0x64(%ecx)
and    %dh,0x73(%ebp)
gs
jb     804e3c9 <_IO_stdin_used+0x7ed>
dec    %ecx
inc    %esp
and    %ah,0x25(%eax)
fs
daa
and    %ah,0x6f(%esi)
jb     804e3d5 <_IO_stdin_used+0x7f9>
jne    804e42a <_IO_stdin_used+0x84e>
gs
jb     804e3da <_IO_stdin_used+0x7fe>
pusha
and    $0x203a2773,%eax
and    $0x44000a73,%eax
inc    %ebp
inc    %esi
inc    %ecx
push   %ebp
dec    %esp
push   %esp
pop    %edi
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
add    %dl,0x6e(%ebp)
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     804e449 <_IO_stdin_used+0x86d>
and    %ah,0x64(%ebx)
and    %dh,0x20(%edi,%ebp,2)
daa
and    $0xa2773,%eax
das
add    %al,(%eax)
add    %al,(%eax)
jne    804e45c <_IO_stdin_used+0x880>
popa
bound  %ebp,0x20(%ebp,%eiz,2)
je     804e464 <_IO_stdin_used+0x888>
and    %ah,0x64(%ebx)
and    %dh,0x20(%edi,%ebp,2)
pusha
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     804e425 <_IO_stdin_used+0x849>
jne    804e47a <_IO_stdin_used+0x89e>
gs
jb     804e42a <_IO_stdin_used+0x84e>
pusha
and    $0xa2773,%eax
dec    %esi
outsl  %ds:(%esi),(%dx)
and    %ah,0x72(%ecx,%ebp,2)
arpl   %si,%gs:0x72(%edi,%ebp,2)
jns    804e449 <_IO_stdin_used+0x86d>
and    %ch,0x67(%edi,%ebp,2)
imul   $0x206e6920,0x67(%bp),%ebp
ja     804e494 <_IO_stdin_used+0x8b8>
je     804e495 <_IO_stdin_used+0x8b9>
and    %cl,0x4f(%eax)
dec    %ebp
inc    %ebp
cmp    $0x252d002f,%eax
jae    804e439 <_IO_stdin_used+0x85d>
dec    %ecx
outsb  %ds:(%esi),(%dx)
jbe    804e49e <_IO_stdin_used+0x8c2>
insb   (%dx),%es:(%edi)
imul   $0x20746f6f,0x72(%eax,%eiz,1),%esp
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    804e470 <_IO_stdin_used+0x894>
daa
and    $0xa2773,%eax
add    %al,(%eax)
imul   $0x64696c61,0x76(%esi),%ebp
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     804e485 <_IO_stdin_used+0x8a9>
pusha
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     804e48e <_IO_stdin_used+0x8b2>
jne    804e4e3 <_IO_stdin_used+0x907>
gs
jb     804e493 <_IO_stdin_used+0x8b7>
pusha
and    $0xa2773,%eax
add    %al,(%eax)
add    %al,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     804e4a2 <_IO_stdin_used+0x8c6>
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %dh,%gs:0x6f(%bp,%si)
outsl  %ds:(%esi),(%dx)
je     804e4ae <_IO_stdin_used+0x8d2>
imul   $0x726f7463,%fs:0x65(%edx),%esi
jns    804e4b8 <_IO_stdin_used+0x8dc>
je     804e509 <_IO_stdin_used+0x92d>
and    %ah,(%edi)
and    $0xa2773,%eax
add    %al,(%eax)
add    %ch,0x6f(%esi)
and    %dh,0x75(%ebx)
bound  %esi,0x79(%ebx)
jae    804e522 <_IO_stdin_used+0x946>
gs
insl   (%dx),%es:(%edi)
and    %dh,0x6f(%edx)
outsl  %ds:(%esi),(%dx)
je     804e4d6 <_IO_stdin_used+0x8fa>
pusha
and    $0x66202773,%eax
outsl  %ds:(%esi),(%dx)
jb     804e4df <_IO_stdin_used+0x903>
jne    804e534 <_IO_stdin_used+0x958>
gs
jb     804e4e4 <_IO_stdin_used+0x908>
pusha
and    $0xa2773,%eax
push   %ebx
jne    804e530 <_IO_stdin_used+0x954>
arpl   %sp,0x73(%ebp)
jae    804e538 <_IO_stdin_used+0x95c>
jne    804e540 <_IO_stdin_used+0x964>
and    %dh,0x75(%ebx)
and    %ah,0x6f(%esi)
jb     804e4fc <_IO_stdin_used+0x920>
and    $0x79622073,%eax
and    %ah,0x41460073
dec    %ecx
dec    %esp
inc    %ebp
inc    %esp
and    %dh,0x75(%ebx)
and    %ah,0x6f(%esi)
jb     804e513 <_IO_stdin_used+0x937>
and    $0x79622073,%eax
and    %ah,0x55530073
dec    %esp
dec    %edi
inc    %edi
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %dh,0x75(%ebx)
and    %dh,0x65(%ebx)
jae    804e581 <_IO_stdin_used+0x9a5>
imul   $0x746f6e20,0x6e(%edi),%ebp
and    %ch,0x67(%edi,%ebp,2)
gs and %dh,%fs:%gs:0x6f(%si)
and    %ah,0x2b610073
add    %al,(%eax)
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
daa
je     804e54e <_IO_stdin_used+0x972>
jae    804e5a7 <_IO_stdin_used+0x9cb>
imul   $0x63616220,0x68(%ebx,%eiz,2),%esi
imul   $0x74,(%eax),%esp
outsl  %ds:(%esi),(%dx)
and    %ah,0x72(%edi)
outsl  %ds:(%esi),(%dx)
jne    804e5b2 <_IO_stdin_used+0x9d6>
and    %ah,0x25(%eax)
fs
daa
and    %ch,0x6e(%ecx)
and    %dh,0x75(%ebx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
add    %al,(%bx,%si)
add    %al,(%eax)
push   %ebx
push   %ebp
and    %ah,0x6432302e
das
and    $0x6432302e,%eax
and    %ah,0x6432302e
cmp    0x6432302e,%ah
and    %ah,0x73252063
and    %ah,0x73252d73
or     (%eax),%al
and    $0x6f203a73,%eax
jne    804e5f7 <_IO_stdin_used+0xa1b>
and    %ch,0x66(%edi)
and    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804e606 <_IO_stdin_used+0xa2a>
or     (%eax),%al
js     804e5f8 <_IO_stdin_used+0xa1c>
gs
je     804e604 <_IO_stdin_used+0xa28>
ja     804e604 <_IO_stdin_used+0xa28>
popa
insl   (%dx),%es:(%edi)
add    %bh,0x67(%eax)
gs
je     804e60e <_IO_stdin_used+0xa32>
ja     804e615 <_IO_stdin_used+0xa39>
imul   $0x203a7325,0x0(%eax,%eax,1),%esp
popaw
imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %ch,%gs:0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804e63a <_IO_stdin_used+0xa5e>
cmp    (%eax),%ah
and    $0xa73,%eax
arpl   %bp,0x6e(%edi)
imul   $0x6172,0x75(%edi),%sp
je     804e63c <_IO_stdin_used+0xa60>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     804e649 <_IO_stdin_used+0xa6d>
jb     804e5fc <_IO_stdin_used+0xa20>
sub    $0x6b6e7520,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
ja     804e653 <_IO_stdin_used+0xa77>
and    %ch,0x74(%ecx)
gs
insl   (%dx),%es:(%edi)
and    %ah,(%edi)
and    $0x28202773,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e65e <_IO_stdin_used+0xa82>
data16
jns    804e618 <_IO_stdin_used+0xa3c>
popa
fs
insl   (%dx),%es:(%edi)
imul   $0x61727473,0x69(%esi),%ebp
je     804e673 <_IO_stdin_used+0xa97>
jb     804e62f <_IO_stdin_used+0xa53>
or     (%eax),%al
jne    804e678 <_IO_stdin_used+0xa9c>
imul   $0x77,0x6f(%esi),%ebp
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     804e684 <_IO_stdin_used+0xaa8>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ch,0x74(%ecx)
gs
insl   (%dx),%es:(%edi)
and    %ah,0x25(%eax)
jae    804e64e <_IO_stdin_used+0xa72>
add    %al,0x6f(%ebx)
jne    804e698 <_IO_stdin_used+0xabc>
and    %ch,%fs:0x6f(%esi)
je     804e652 <_IO_stdin_used+0xa76>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %dh,%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
jb     804e665 <_IO_stdin_used+0xa89>
arpl   %bp,0x6e(%edi)
imul   $0x6e69,0x20(%edi),%sp
outsw  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %ah,0x6f(%ebx)
jne    804e6c4 <_IO_stdin_used+0xae8>
and    %ch,%fs:0x6f(%esi)
je     804e67e <_IO_stdin_used+0xaa2>
popa
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
and    %dh,%gs:0x70(%ebx)
popa
arpl   %sp,0x20(%ebp)
outsw  %ds:(%esi),(%dx)
jb     804e691 <_IO_stdin_used+0xab5>
arpl   %bp,0x6e(%edi)
imul   $0x6e69,0x20(%edi),%sp
outsw  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,(%eax)
arpl   %sp,0x6e(%ecx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e6a7 <_IO_stdin_used+0xacb>
outsl  %ds:(%esi),(%dx)
jo     804e6ef <_IO_stdin_used+0xb13>
outsb  %ds:(%esi),(%dx)
and    %ch,0x67(%edi,%ebp,2)
imul   $0x69666564,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x2520736e,0x6f(%ecx,%ebp,2),%esi
jae    804e6c1 <_IO_stdin_used+0xae5>
pop    %ebx
and    $0x5d73,%eax
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e6cf <_IO_stdin_used+0xaf3>
jb     804e716 <_IO_stdin_used+0xb3a>
popa
and    %ch,%fs:0x67(%edi,%ebp,2)
imul   $0x69666564,0x20(%esi),%ebp
outsb  %ds:(%esi),(%dx)
imul   $0x2520736e,0x6f(%ecx,%ebp,2),%esi
jae    804e6e9 <_IO_stdin_used+0xb0d>
pop    %ebx
and    $0x5d73,%eax
add    %ah,0x6f(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x6172,0x75(%edi),%sp
je     804e744 <_IO_stdin_used+0xb68>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x72(%ebp)
jb     804e751 <_IO_stdin_used+0xb75>
jb     804e704 <_IO_stdin_used+0xb28>
sub    $0x6e616320,%eax
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
je     804e70d <_IO_stdin_used+0xb31>
jo     804e750 <_IO_stdin_used+0xb74>
jb     804e764 <_IO_stdin_used+0xb88>
and    %ah,%gs:0x61762073
insb   (%dx),%es:(%edi)
jne    804e760 <_IO_stdin_used+0xb84>
cmp    (%eax),%ah
daa
and    $0x2773,%eax
add    %dh,0x0(%edx)
jns    804e76d <_IO_stdin_used+0xb91>
jae    804e70a <_IO_stdin_used+0xb2e>
inc    %ebx
dec    %eax
inc    %esi
dec    %esi
pop    %edi
push   %edx
inc    %ebp
push   %ebx
push   %esp
push   %edx
dec    %ecx
inc    %ebx
push   %esp
add    %al,0x4f(%ebx)
dec    %esi
push   %ebx
dec    %edi
dec    %esp
inc    %ebp
pop    %edi
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
push   %ebx
add    %al,0x4f(%ebx)
dec    %esi
push   %ebx
dec    %edi
dec    %esp
inc    %ebp
add    %al,0x52(%ebx)
inc    %ebp
inc    %ecx
push   %esp
inc    %ebp
pop    %edi
dec    %eax
dec    %edi
dec    %ebp
inc    %ebp
add    %al,0x4e(%ebp)
inc    %ebx
push   %edx
pop    %ecx
push   %eax
push   %esp
pop    %edi
dec    %ebp
inc    %ebp
push   %esp
dec    %eax
dec    %edi
inc    %esp
add    %al,0x52(%ebp)
inc    %ecx
push   %ebx
inc    %ebp
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
add    %al,0x41(%esi)
dec    %ecx
dec    %esp
dec    %esp
dec    %edi
inc    %edi
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %al,0x41(%esi)
dec    %ebx
inc    %ebp
pop    %edi
push   %ebx
dec    %eax
inc    %ebp
dec    %esp
dec    %esp
add    %al,0x54(%esi)
dec    %ebp
push   %eax
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %cl,0x55(%eax)
push   %ebx
dec    %eax
dec    %esp
dec    %edi
inc    %edi
dec    %ecx
dec    %esi
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %cl,0x49(%ebx)
dec    %esp
dec    %esp
inc    %ebx
dec    %eax
inc    %ecx
push   %edx
add    %cl,0x47(%edi,%ecx,2)
dec    %ecx
dec    %esi
pop    %edi
push   %edx
inc    %ebp
push   %esp
push   %edx
dec    %ecx
inc    %ebp
push   %ebx
add    %cl,0x47(%edi,%ecx,2)
dec    %ecx
dec    %esi
pop    %edi
push   %esp
dec    %ecx
dec    %ebp
inc    %ebp
dec    %edi
push   %ebp
push   %esp
add    %cl,0x47(%edi,%ecx,2)
pop    %edi
dec    %edi
dec    %ebx
pop    %edi
dec    %esp
dec    %edi
inc    %edi
dec    %ecx
dec    %esi
push   %ebx
add    %cl,0x47(%edi,%ecx,2)
pop    %edi
push   %ebp
dec    %esi
dec    %ebx
inc    %esi
inc    %ecx
dec    %ecx
dec    %esp
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %cl,0x41(%ebp)
dec    %ecx
dec    %esp
pop    %edi
inc    %esp
dec    %ecx
push   %edx
add    %cl,0x41(%ebp)
dec    %ecx
dec    %esp
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %cl,0x41(%ebp)
pop    %eax
pop    %edi
dec    %ebp
inc    %ebp
dec    %ebp
inc    %edx
inc    %ebp
push   %edx
push   %ebx
pop    %edi
push   %eax
inc    %ebp
push   %edx
pop    %edi
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %cl,0x44(%ebp)
xor    $0x5952435f,%eax
push   %eax
push   %esp
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %dl,0x41(%eax)
push   %ebx
push   %ebx
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
pop    %edi
inc    %esp
inc    %ecx
pop    %ecx
push   %ebx
add    %dl,0x41(%eax)
push   %ebx
push   %ebx
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
pop    %edi
inc    %esp
inc    %ecx
pop    %ecx
push   %ebx
add    %dl,0x41(%eax)
push   %ebx
push   %ebx
pop    %edi
push   %edi
inc    %ecx
push   %edx
dec    %esi
pop    %edi
inc    %ecx
inc    %edi
inc    %ebp
add    %dl,0x48(%ebx)
inc    %ecx
pop    %edi
inc    %ebx
push   %edx
pop    %ecx
push   %eax
push   %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
pop    %edi
push   %edx
dec    %edi
push   %ebp
dec    %esi
inc    %esp
push   %ebx
add    %dl,0x48(%ebx)
inc    %ecx
pop    %edi
inc    %ebx
push   %edx
pop    %ecx
push   %eax
push   %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
pop    %edi
push   %edx
dec    %edi
push   %ebp
dec    %esi
inc    %esp
push   %ebx
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
inc    %ebx
dec    %edi
push   %ebp
dec    %esi
push   %esp
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
inc    %ebx
dec    %edi
push   %ebp
dec    %esi
push   %esp
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %dl,0x55(%ebx)
inc    %edx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x59(%ebx)
push   %ebx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %dl,0x59(%ebx)
push   %ebx
pop    %edi
inc    %edi
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x59(%ebx)
push   %ebx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
inc    %ecx
pop    %eax
add    %dl,0x59(%ebx)
push   %ebx
pop    %edi
push   %ebp
dec    %ecx
inc    %esp
pop    %edi
dec    %ebp
dec    %ecx
dec    %esi
add    %dl,0x59(%esp,%edx,2)
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
add    %dl,0x59(%esp,%edx,2)
push   %eax
inc    %ebp
push   %edx
dec    %ebp
add    %dl,0x59(%esp,%edx,2)
push   %esp
pop    %ecx
push   %eax
inc    %ebp
pop    %edi
inc    %esi
dec    %ecx
dec    %esp
inc    %ebp
add    %dl,0x4d(%ebp)
inc    %ecx
push   %ebx
dec    %ebx
add    %dl,0x53(%ebp)
inc    %ebp
push   %edx
inc    %esp
inc    %ebp
dec    %esp
pop    %edi
inc    %ebx
dec    %ebp
inc    %esp
add    %dl,0x53(%ebp)
inc    %ebp
push   %edx
inc    %edi
push   %edx
dec    %edi
push   %ebp
push   %eax
push   %ebx
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %dl,0x59(%ebx)
push   %ebx
dec    %esp
dec    %edi
inc    %edi
pop    %edi
push   %ebx
inc    %edi
pop    %edi
inc    %ebp
dec    %esi
inc    %ecx
inc    %edx
add    %ebx,(%ebx)
add    (%ebx),%edi
dec    %eax
add    %eax,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,%al
test   $0x164ffff,%eax
add    %al,(%eax)
xor    %dh,0x1bcffff(%eax)
add    %al,(%eax)
xor    %dh,0x284ffff(%ecx)
add    %al,(%eax)
and    %al,%bl
(bad)
decl   0x30000001(%eax)
ret
(bad)
lcall  *-0x3c800000(%ecx,%eax,1)
(bad)
jmp    *%eax
add    %eax,(%eax)
add    %al,(%eax)
(bad)
(bad)
(bad)
cld
add    %eax,(%eax)
add    %al,-0x36(%eax)
(bad)
ljmp   *(%edx,%eax,1)
add    %al,(%eax)
adc    %dl,%cl
(bad)
pushl  -0x2ec00000(%edx,%eax,1)
(bad)
call   *%esp
add    (%eax),%al
add    %ah,-0x2f(%eax)
(bad)
(bad)
in     (%dx),%al
add    (%eax),%al
add    %dh,0x5cffffd3(%eax)
add    (%eax),%eax
add    %al,-0x5f00002b(%eax)
add    (%eax),%eax
add    %dh,-0x1f00002a(%eax)
add    (%eax),%eax
add    %al,(%eax)
xlat   %ds:(%ebx)
(bad)
decl   (%esp,%eax,1)
add    %al,(%eax)
lock fdivr %st(7),%st
incl   0x0(%esp,%eax,1)
add    %dh,%al
fcos
(bad)
jl     804e9b6 <_IO_stdin_used+0xdda>
add    %al,(%eax)
and    %bl,%dl
(bad)
jmp    *-0x5ffffffc(%eax)
fdivr  %st,%st(7)
(bad)
in     (%dx),%al
add    $0x0,%al
add    %al,-0x22(%eax)
(bad)
ljmp   *-0x1fe00000(,%eax,1)
(bad)
lcall  *0x5(%eax)
add    %al,(%eax)
adc    %ah,%ah
(bad)
lcall  *0x40000005(%eax)
in     $0xff,%eax
push   %eax
add    $0xe6700000,%eax
(bad)
decl   0x6(%eax)
add    %al,(%eax)
lock out %al,$0xff
pushl  0x0(%esi,%eax,1)
add    %ah,(%eax)
out    %eax,$0xff
call   *-0x17c00000(%esi,%eax,1)
(bad)
(bad)
faddl  (%esi)
add    %al,(%eax)
jo     804e9ef <_IO_stdin_used+0xe13>
(bad)
decl   (%edi,%eax,1)
add    %al,(%eax)
nop
in     (%dx),%al
(bad)
call   *0x7(%eax)
add    %al,(%eax)
shr    %ah
(bad)
ljmp   *0x0(%edi,%eax,1)
add    %dh,(%eax)
in     (%dx),%eax
(bad)
decl   -0x12100000(%edi,%eax,1)
(bad)
inc    %esp
pop    %es
add    %al,(%eax)
mov    $0xee,%al
(bad)
decl   (%eax,%ecx,1)
add    %al,(%eax)
jo     804ea25 <_IO_stdin_used+0xe49>
(bad)
incl   0x0(%eax,%ecx,1)
add    %dh,(%eax)
lock (bad)
(bad)
jl     804ea4a <_IO_stdin_used+0xe6e>
add    %al,(%eax)
nop
lock (bad)
ljmp   *-0xffffff8(%eax)
lock (bad)
jmp    *%eax
or     %al,(%eax)
add    %al,%al
icebp
(bad)
lcall  *(%eax)
or     %eax,(%eax)
add    %dh,(%eax)
repnz (bad)
incl   0x0(%ecx,%ecx,1)
add    %ah,-0x7f00000e(%eax)
or     %eax,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     804ea83 <_IO_stdin_used+0xea7>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
test   %ch,0x640ffff(%eax)
add    %al,(%eax)
add    %cl,(%esi)
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     804eaa3 <_IO_stdin_used+0xec7>
js     804eaa1 <_IO_stdin_used+0xec5>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
adc    %al,(%eax)
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,0xaffffc1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %cl,0x46ffff(%ecx,%eax,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x45,(%ebx)
push   %cs
and    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax,%eax,1)
add    %ch,-0x1(%esi,%ebp,4)
(bad)
cld
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x300e4504(%ebx)
add    %bl,(%eax)
add    %al,(%eax)
add    %bl,-0x68000000(%eax)
sar    $0xff,%edi
jno    804eb0e <_IO_stdin_used+0xf32>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
mov    $0x0,%ah
add    %al,(%eax)
cld
sar    $0xff,%edi
cmp    (%esi),%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x46,(%ebx)
push   %cs
rolb   $0x3,(%edx)
sub    $0xc0e0a01,%eax
inc    %ecx
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,%ah
add    %al,(%eax)
add    %cl,(%eax,%ecx,8)
(bad)
dec    %esi
push   %es
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffe4,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%edx),%eax
mov    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
sub    $0x0,%al
add    %al,(%eax)
cmp    $0x1,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
scas   %es:(%edi),%al
(bad)
(bad)
sti
adc    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x50d4202(%ebp)
dec    %ecx
xchg   %eax,(%ebx)
xchg   %al,(%ebx,%eax,4)
add    $0xa083103,%eax
ret
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
insb   (%dx),%es:(%edi)
add    %eax,(%eax)
add    %dl,-0x1(%esi,%ecx,8)
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %cl,-0x319c0000(%ecx,%eax,1)
(bad)
lcall  *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edx)
add    $0x0,%al
insb   (%dx),%es:(%edi)
add    %al,(%eax)
add    %ah,-0x31940000(%ecx,%eax,1)
(bad)
incl   0x2(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x1a,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     (%edx),%eax
pop    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%edx),%ebx
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %dl,(%edx,%eax,1)
add    %al,(%eax)
dec    %esp
sar    %bh
inc    %edx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8d00e46
and    %eax,(%ecx)
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
pop    %eax
add    (%eax),%al
add    %bl,%al
sar    %edi
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffff5,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
cwtl
add    (%eax),%al
add    %cl,%al
sar    %cl,%bh
incl   0x0(%ebx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ah,0xa(%edx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
les    (%edx),%eax
add    %al,(%eax)
in     (%dx),%al
sar    %cl,%bh
jmp    *%ebx
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
jae    804ed5b <_IO_stdin_used+0x117f>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cld
add    (%eax),%al
add    %ah,0x100ffff(%esp,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
push   %esi
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xor    $0x3,%al
add    %al,(%eax)
insb   (%dx),%es:(%edi)
aad    $0xff
ljmp   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
dec    %eax
add    %al,(%eax)
add    %bl,0x3(%eax)
add    %al,(%eax)
js     804ed9f <_IO_stdin_used+0x11c3>
(bad)
(bad)
jnp    804edd0 <_IO_stdin_used+0x11f4>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
ret    $0xe0a
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
mov    (%edx),%ecx
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%esp
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bh,(%eax,%eax,1)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    (%eax),%eax
add    %ch,0x198ffff(%edi,%edx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x8d00e46
in     $0xa,%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%ebp
add    %al,(%eax)
add    %ah,%ah
add    (%eax),%eax
add    %cl,(%ecx,%ebx,8)
(bad)
(bad)
fldl   (%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %ch,0xa(%esi)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
adc    %al,(%eax,%eax,1)
add    %al,%al
(bad)
(bad)
ljmp   $0xe41,$0x3
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffdc,0x3600e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0x0(%eax,%eax,1),%edx
add    %dl,0x4(%eax)
add    %al,(%eax)
jo     804eea0 <_IO_stdin_used+0x12c4>
(bad)
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   %esp
add    %al,(%eax)
add    %ch,0x48000004(%eax)
(bad)
ljmp   *0x1
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffac,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebp),%ebx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
add    %al,0xe0200000
(bad)
incl   0x0(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %dl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
sub    $0x5,%al
add    %al,(%eax)
je     804ef7e <_IO_stdin_used+0x13a2>
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %cl,0x0(%ebp,%eax,1)
add    %al,0x120ffff(%eax,%eiz,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %ch,0xa(%ebp)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
scas   %es:(%edi),%al
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x46,%al
or     0xe(%ebx),%esp
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
xchg   %eax,%esp
add    $0xe15c0000,%eax
(bad)
jmp    *(%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
inc    %ebp
or     (%esi),%cl
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,%ah
add    $0xe25c0000,%eax
(bad)
lcall  *(%ebx)
add    (%eax),%eax
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x8d00e46
sahf
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sbb    %al,(%eax)
add    %al,(%eax)
or     %al,(%esi)
add    %al,(%eax)
cmp    %ah,%ch
(bad)
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
adc    %bl,0xe(%edx,%ecx,1)
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
and    $0x6,%al
add    %al,(%eax)
pop    %esp
in     $0xff,%eax
lcall  *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dh,0xa(%ebp)
push   %cs
add    $0x48,%al
or     0xe(%ebp),%ebx
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
inc    %esp
push   %es
add    %al,(%eax)
pushf
in     $0xff,%eax
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
jle    804f0d1 <_IO_stdin_used+0x14f5>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
inc    %esp
add    %al,(%eax)
add    %bh,0x0(%esi,%eax,1)
add    %ah,(%esi,%eiz,8)
(bad)
pushl  0x0(%edx)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
add    -0x3cbceff2(%edx,%ecx,1),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%ecx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
les    (%esi),%eax
add    %al,(%eax)
pushf
out    %al,$0xff
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
jle    804f151 <_IO_stdin_used+0x1575>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
xor    $0x0,%al
add    %al,(%eax)
cld
push   %es
add    %al,(%eax)
and    $0xe7,%al
(bad)
pushl  0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x400e4302(%ebx)
jle    804f189 <_IO_stdin_used+0x15ad>
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x43,%al
or     0xa(%ebx),%ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
dec    %ebx
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
xor    $0x7,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
out    %eax,$0xff
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
dec    %esp
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
pusha
pop    %es
add    %al,(%eax)
loopne 804f1b9 <_IO_stdin_used+0x15dd>
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %al,(%edx)
inc    %ebp
or     (%esi),%cl
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x42,%al
or     0xe(%ebx),%ecx
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %bl,0x8000007(%eax)
call   8cbf20d <_end+0xc69ce5>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
orl    $0xc3430c0e,(%edx)
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%esi),%esi
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x28,%al
add    %al,(%eax)
add    %dl,%al
pop    %es
add    %al,(%eax)
mov    0x70ffffe8,%al
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%edx)
fs
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %bh,%ah
pop    %es
add    %al,(%eax)
in     $0xe8,%al
(bad)
jmp    *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %bh,(%eax)
or     %al,(%eax)
add    %bl,(%eax)
jmp    807f2ad <_end+0x29d85>
.byte 0x10
lods   %ds:(%esi),%al
add    $0x8,%al
lock stos %eax,%es:(%edi)
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     (%ecx),%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
and    $0xc000001,%eax
add    %al,(%eax)
add    %ch,%ah
xchg   %eax,%edx
add    $0x8,%al
or     $0xc4000000,%eax
fildl  (%eax,%ecx,1)
sbb    %eax,(%eax)
add    %al,(%eax)
clc
push   %cs
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
cld
push   %cs
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
push   %eax
mov    %eax,(%eax,%ecx,1)
push   %es
add    %al,(%eax)
add    %dl,(%eax)
(bad)
add    $0x8,%al
or     (%eax),%al
add    %al,(%eax)
mov    $0xb000004,%esp
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,0x208
add    %bl,(%eax)
add    (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %dl,%ah
popl   (%eax,%ecx,1)
adc    %eax,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
popl   (%eax,%ecx,1)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *-0xc(%edi)
mov    (%eax,%ecx,1),%es
(bad)
(bad)
ljmp   *0x3(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *0xc(%edi)
mov    (%eax,%ecx,1),%es
add    %al,(%eax)
add    $0xf,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%esi)
xchg   %eax,%ebx
add    $0x8,%al
ss
xchg   %eax,%ebx
add    $0x8,%al
inc    %esi
xchg   %eax,%ebx
add    $0x8,%al
push   %esi
xchg   %eax,%ebx
add    $0x8,%al
xchg   %ax,%bx
add    $0x8,%al
jbe    8050fb5 <_IO_stdin_used+0x33d9>
add    $0x8,%al
xchg   %dl,-0x6c69f7fc(%ebx)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebx
add    $0x8,%al
mov    $0x93,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
(bad)
xchg   %eax,%ebx
add    $0x8,%al
out    %al,$0x93
add    $0x8,%al
notb   -0x6bf9f7fc(%ebx)
add    $0x8,%al
push   %ss
xchg   %eax,%esp
add    $0x8,%al
es
xchg   %eax,%esp
add    $0x8,%al
ss
xchg   %eax,%esp
add    $0x8,%al
inc    %esi
xchg   %eax,%esp
add    $0x8,%al
push   %esi
xchg   %eax,%esp
add    $0x8,%al
xchg   %ax,%sp
add    $0x8,%al
jbe    8050ff6 <_IO_stdin_used+0x341a>
add    $0x8,%al
xchg   %dl,0x4949608(%esp,%eax,1)
or     %ah,-0x49f7fb6c(%esi)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
(bad)
xchg   %eax,%esp
add    $0x8,%al
out    %al,$0x94
add    $0x8,%al
notb   0x4950608(%esp,%eax,1)
or     %dl,(%esi)
xchg   %eax,%ebp
add    $0x8,%al
es
xchg   %eax,%ebp
add    $0x8,%al
ss
xchg   %eax,%ebp
add    $0x8,%al
inc    %esi
xchg   %eax,%ebp
add    $0x8,%al
push   %esi
xchg   %eax,%ebp
add    $0x8,%al
xchg   %ax,%bp
add    $0x8,%al
jbe    8051037 <_IO_stdin_used+0x345b>
add    $0x8,%al
xchg   %dl,-0x6a69f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%ebp
add    $0x8,%al
mov    $0x95,%dh
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
(bad)
xchg   %eax,%ebp
add    $0x8,%al
out    %al,$0x95
add    $0x8,%al
notb   -0x69f9f7fc(%ebp)
add    $0x8,%al
push   %ss
xchg   %eax,%esi
add    $0x8,%al
es
xchg   %eax,%esi
add    $0x8,%al
ss
xchg   %eax,%esi
add    $0x8,%al
inc    %esi
xchg   %eax,%esi
add    $0x8,%al
push   %esi
xchg   %eax,%esi
add    $0x8,%al
xchg   %ax,%si
add    $0x8,%al
jbe    8051078 <_IO_stdin_used+0x349c>
add    $0x8,%al
xchg   %dl,-0x6969f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%esi
add    $0x8,%al
mov    $0x96,%dh
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
(bad)
xchg   %eax,%esi
add    $0x8,%al
out    %al,$0x96
add    $0x8,%al
notb   -0x68f9f7fc(%esi)
add    $0x8,%al
push   %ss
xchg   %eax,%edi
add    $0x8,%al
es
xchg   %eax,%edi
add    $0x8,%al
ss
xchg   %eax,%edi
add    $0x8,%al
inc    %esi
xchg   %eax,%edi
add    $0x8,%al
push   %esi
xchg   %eax,%edi
add    $0x8,%al
xchg   %ax,%di
add    $0x8,%al
jbe    80510b9 <_IO_stdin_used+0x34dd>
add    $0x8,%al
xchg   %dl,-0x6869f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
xchg   %eax,%edi
add    $0x8,%al
mov    $0x97,%dh
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
(bad)
xchg   %eax,%edi
add    $0x8,%al
out    %al,$0x97
add    $0x8,%al
notb   -0x67f9f7fc(%edi)
add    $0x8,%al
push   %ss
cwtl
add    $0x8,%al
es
cwtl
add    $0x8,%al
ss
cwtl
add    $0x8,%al
inc    %esi
cwtl
add    $0x8,%al
push   %esi
cwtl
add    $0x8,%al
cbtw
add    $0x8,%al
jbe    80510fa <_IO_stdin_used+0x351e>
add    $0x8,%al
xchg   %bl,-0x6769f7fc(%eax)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
cwtl
add    $0x8,%al
mov    $0x98,%dh
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
(bad)
cwtl
add    $0x8,%al
out    %al,$0x98
add    $0x8,%al
negb   -0x66f9f7fc(%eax)
add    $0x8,%al
push   %ss
cltd
add    $0x8,%al
es
cltd
add    $0x8,%al
ss
cltd
add    $0x8,%al
inc    %esi
cltd
add    $0x8,%al
fabs
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
arpl   %ax,(%eax)
add    %al,(%eax)
loope  80511b3 <_IO_stdin_used+0x35d7>
add    $0x8,%al
push   $0xe6000000
loope  80511e7 <_IO_stdin_used+0x360b>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%eax,%eax,1)
add    %ch,%ah
loope  80511f7 <_IO_stdin_used+0x361b>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%eax)
add    %al,(%eax)
add    %esp,%edx
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
jae    805120e <_IO_stdin_used+0x3632>
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %eax
xchg   %eax,%ebp
add    $0x8,%al
mov    $0xc30804e2,%ebp
loop   805124b <_IO_stdin_used+0x366f>
or     %cl,%ch
loop   805124f <_IO_stdin_used+0x3673>
or     %al,(%eax)
add    %al,(%eax)
add    %dl,%cl
loop   8051267 <_IO_stdin_used+0x368b>
or     %bl,%al
loop   805126b <_IO_stdin_used+0x368f>
or     %bl,%ch
loop   805126f <_IO_stdin_used+0x3693>
or     %ah,%dl
loop   8051273 <_IO_stdin_used+0x3697>
or     %ch,%al
loop   8051277 <_IO_stdin_used+0x369b>
or     %ch,%ch
loop   805127b <_IO_stdin_used+0x369f>
or     %dh,%bh
loop   805127f <_IO_stdin_used+0x36a3>
or     %bh,%bl
loop   8051283 <_IO_stdin_used+0x36a7>
or     %al,(%ebx,%eiz,8)
add    $0x8,%al
or     %bl,%ah
add    $0x8,%al
(bad)
loop   805128f <_IO_stdin_used+0x36b3>
or     %dl,(%ebx)
jecxz  8051293 <_IO_stdin_used+0x36b7>
or     %bl,(%edx)
jecxz  8051297 <_IO_stdin_used+0x36bb>
or     %al,(%eax)
add    %al,(%eax)
add    %ch,(%edi)
bound  %ebp,0x6e(%ecx)
das
bound  %esp,0x73(%ecx)
push   $0x2f00
add    %al,(%eax)
add    %ch,(%edi)
gs
je     8051327 <_IO_stdin_used+0x374b>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
imul   $0x73666564,0x2e(%bp),%ebp
add    %cl,(%edx)
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax)
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %ah,(%edi)
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %ch,(%edi)
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %al,%ah
jecxz  8051307 <_IO_stdin_used+0x372b>
or     %al,(%eax)
add    %al,(%eax)
add    %bh,(%ebx)
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %bl,0x804(%eax,%eiz,8)
add    %al,(%eax)
xchg   %eax,%ecx
loopne 805131f <_IO_stdin_used+0x3743>
or     %al,(%eax)
add    %al,(%eax)
add    %cl,-0x19(%edx)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
push   %esp
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %ah,-0x19(%ecx)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %ah,-0x18(%edi)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jae    8051332 <_IO_stdin_used+0x3756>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jbe    8051339 <_IO_stdin_used+0x375d>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
test   %esp,%edi
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
mov    %edi,%fs
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
pushf
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %ch,0x804e7(%edx)
add    %al,(%eax)
add    %bh,0x804e7(%eax)
add    %al,(%eax)
add    %cl,%cl
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %dl,%dl
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %bl,%ah
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %dh,%dl
out    %eax,$0x4
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
call   8051baa <optarg+0x6e6>
add    %al,(%eax)
psubsb (%eax,%ecx,1),%mm0
add    %al,(%eax)
add    %al,(%eax)
sbb    $0x804e8,%eax
add    %al,(%eax)
add    %ch,(%ebx)
call   8051bc2 <optarg+0x6fe>
add    %al,(%eax)
inc    %eax
call   8051bca <optarg+0x706>
add    %al,(%eax)
push   %ebp
call   8051bd2 <optarg+0x70e>
add    %al,(%eax)
arpl   %bp,%ax
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
outsl  %ds:(%esi),(%dx)
call   8051be2 <optarg+0x71e>
add    %al,(%eax)
jnp    80513ca <_IO_stdin_used+0x37ee>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
mov    %ebp,%eax
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
xchg   %eax,%ebp
call   8051bfa <optarg+0x736>
add    %al,(%eax)
cld
in     $0x4,%al
or     %al,(%eax)
add    %al,(%eax)
add    %bh,0x804e1(%ecx)
add    %al,(%eax)
add    %ah,0x804e8(%ecx)
add    %al,(%eax)
add    %ch,0x804e8(%ebp)
add    %al,(%eax)
add    %bh,0x804e8(%ecx)
add    %al,(%eax)
add    %al,%ch
call   8051c2a <optarg+0x766>
add    %al,(%eax)
shr    %eax
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
(bad)
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
loop   8051422 <_IO_stdin_used+0x3846>
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
(bad)
call   8051c4a <optarg+0x786>
add    %al,(%eax)
cltd
call   8051c52 <optarg+0x78e>
add    %al,(%eax)
out    %eax,(%dx)
call   8051c5a <optarg+0x796>
add    %al,(%eax)
cmc
call   8051c62 <optarg+0x79e>
add    %al,(%eax)
add    %ebp,%ecx
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
adc    %ebp,%ecx
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
mov    %bh,%bl
add    $0x8,%al
add    %al,(%eax)
add    %al,(%eax)
jae    77 <_init-0x8049275>
add    %al,(%eax)
pop    %edx
mov    %ebp,(%esp,%ecx,4)
