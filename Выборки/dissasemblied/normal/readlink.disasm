das
insb   (%dx),%es:(%edi)
imul   $0x6c2d646c,0x2f(%edx),%esp
imul   $0x6f732e78,0x75(%esi),%ebp
xor    %cs:(%eax),%al
add    $0x0,%al
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    %al,(%eax)
add    %bl,(%eax)
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
inc    %edi
dec    %esi
push   %ebp
add    %cl,0x61dc99f0(%eax)
icebp
std
decl   -0x32(%ecx)
jp     8048219 <strcmp@plt-0xa07>
addr16 ljmp $0xb58b,$0xdef534a5
add    (%eax),%eax
add    %al,(%eax)
cmp    (%eax),%al
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %al,(%eax,%eax,2)
dec    %eax
add    %ah,(%ecx,%ebp,2)
sbb    %edx,(%edx)
cmp    (%eax),%al
add    %al,(%eax)
cmp    (%eax),%eax
add    %al,(%eax)
inc    %ecx
add    %al,(%eax)
add    %ch,(%ecx)
sbb    $0x50bc1c8c,%eax
jbe    8048176 <strcmp@plt-0xaaa>
cmp    %dh,%dl
mov    (%esi,%ecx,8),%ebx
sub    $0x63,%al
jb     804818d <strcmp@plt-0xa93>
dec    %ebx
jecxz  80481a4 <strcmp@plt-0xa7c>
xchg   %eax,%esi
mov    0x62e59789,%al
inc    %ecx
cmc
xor    %esp,%eax
notl   (%edx)
sbb    $0x2,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%ecx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
mov    %al,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x2(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ebp
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%ebx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jp     80482c2 <strcmp@plt-0x95e>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
adc    (%edx),%al
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
popf
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%ecx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,%dh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jo     8048354 <strcmp@plt-0x8cc>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
je     8048362 <strcmp@plt-0x8be>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
test   %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xchg   %eax,%esp
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,(%esi)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x2(%ebp)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
mov    %eax,0x0
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,%bh
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,0x2(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
lods   %ds:(%esi),%eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %al,%al
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%esi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%dh
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%edx,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
in     (%dx),%al
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,%ch
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,%bl
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %bh,0x1(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dh,(%eax,%eax,1)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pop    %eax
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x1(%eax)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
inc    %ecx
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,0x0(%edx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
add    %ss:(%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %bl,%cl
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,(%edx)
add    %eax,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,(%esi)
add    (%eax),%al
add    %dl,(%edx)
add    %al,(%eax)
add    %dl,0x0(%ebx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
pushf
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ch,0x0(%ecx,%eax,1)
add    %dl,(%edx)
add    %al,(%eax)
add    %cl,0x1(%ebp)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
cmp    %al,(%ecx)
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
jbe    8048573 <strcmp@plt-0x6ad>
add    %al,(%eax)
adc    (%eax),%al
add    %al,(%eax)
xlat   %ds:(%ebx)
add    %al,(%eax)
add    %dl,(%edx)
add    %al,(%eax)
add    %ah,(%eax)
add    %eax,(%eax)
add    %al,%al
and    %eax,0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dl,0x2(%ebp)
add    %al,(%eax)
pusha
and    %eax,0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %dl,0x64000001(%esi)
and    %eax,0x408
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ah,0x2(%eax)
add    %al,(%eax)
andb   $0x5,(%ecx)
or     %al,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
sbb    %eax,(%eax)
or     (%eax),%eax
add    %al,(%eax)
in     $0xda,%al
add    $0x8,%al
add    $0x0,%al
add    %al,(%eax)
adc    %eax,(%eax)
verw   -0x80000000(%eax)
and    %eax,0x408
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %ah,%cl
add    %eax,(%eax)
add    %ah,0x21(%eax)
add    $0x408,%eax
add    %ah,(%ecx)
add    %bl,(%ecx)
add    %bl,0x0(%ebx)
add    %al,(%eax)
mov    0x4080521,%al
add    %al,(%eax)
add    %dl,(%ecx)
add    %bl,(%ecx)
add    %ch,0x62(%ecx,%ebp,2)
arpl   %bp,(%esi)
jae    8048687 <strcmp@plt-0x599>
cs add %bl,%cs:%ss:0x49(%edi)
dec    %edi
pop    %edi
jae    8048695 <strcmp@plt-0x58b>
imul   $0x64657375,%fs:0x5f(%esi),%ebp
add    %ah,0x66(%esi)
insb   (%dx),%es:(%edi)
jne    80486a2 <strcmp@plt-0x57e>
push   $0x72747300
arpl   %si,0x79(%eax)
add    %bl,0x5f(%edi)
jb     804869d <strcmp@plt-0x583>
ja     80486ab <strcmp@plt-0x575>
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x72(%eax)
add    %bl,0x5f(%edi)
jo     80486ba <strcmp@plt-0x566>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
gs
je     80486c1 <strcmp@plt-0x55f>
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %ch,%gs:0x62(%ebp)
jb     80486d3 <strcmp@plt-0x54d>
outsl  %ds:(%esi),(%dx)
ja     80486c5 <strcmp@plt-0x55b>
add    %dh,0x74(%ebx)
jb     80486d5 <strcmp@plt-0x54b>
arpl   %bp,0x70(%ebp)
add    %ch,0x70(%edi)
je     80486d8 <strcmp@plt-0x548>
outsb  %ds:(%esi),(%dx)
add    %dh,%fs:0x74(%ebx)
jb     80486e8 <strcmp@plt-0x538>
arpl   %bp,0x72(%eax)
add    %ah,0x67(%ebx,%eiz,2)
gs
je     80486f4 <strcmp@plt-0x52c>
gs
js     80486f7 <strcmp@plt-0x529>
add    %ah,0x72(%ebp)
jb     80486f7 <strcmp@plt-0x529>
jb     804868a <strcmp@plt-0x596>
pop    %edi
pop    %edi
jae    8048702 <strcmp@plt-0x51e>
popa
arpl   %bp,0x5f(%ebx)
arpl   %bp,0x6b(%eax)
pop    %edi
popaw
imul   $0x72707773,0x69(%eax,%eax,1),%ebp
imul   $0x61657200,0x74(%esi),%ebp
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
popa
bound  %ebp,0x72(%edi)
je     80486b2 <strcmp@plt-0x56e>
pop    %edi
gs
js     804871f <strcmp@plt-0x501>
je     80486b8 <strcmp@plt-0x568>
jo     804872c <strcmp@plt-0x4f4>
outsl  %ds:(%esi),(%dx)
addr16 jb 804871f <strcmp@plt-0x501>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6d616e5f,0x6e(%edi),%ebp
add    %bl,%gs:0x5f(%edi)
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
addr16
gs
je     804873b <strcmp@plt-0x4e5>
insl   (%dx),%es:(%edi)
bound  %ebx,0x63(%edi)
jne    8048754 <strcmp@plt-0x4cc>
pop    %edi
insl   (%dx),%es:(%edi)
popa
js     80486e7 <strcmp@plt-0x539>
arpl   %sp,0x6c(%ecx)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
jae    8048764 <strcmp@plt-0x4bc>
jb     804875e <strcmp@plt-0x4c2>
outsb  %gs:(%esi),(%dx)
add    %dh,0x6e(%ebp)
addr16
gs
je     804875e <strcmp@plt-0x4c2>
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
jae    8048766 <strcmp@plt-0x4ba>
je     8048703 <strcmp@plt-0x51d>
pop    %edi
pop    %edi
gs
jb     804877a <strcmp@plt-0x4a6>
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x74(%ecx)
imul   $0x65706f00,0x6e(%edi),%ebp
outsb  %ds:(%esi),(%dx)
ss
xor    $0x0,%al
insl   (%dx),%es:(%edi)
gs
insl   (%dx),%es:(%edi)
arpl   %bp,0x70(%ebp)
add    %bl,0x5f(%edi)
data16
jo     8048799 <strcmp@plt-0x487>
imul   $0x68635f66,0x74(%esi),%ebp
imul   $0x73,(%eax),%eax
je     8048797 <strcmp@plt-0x489>
outsl  %ds:(%esi),(%dx)
jne    80487aa <strcmp@plt-0x476>
add    %ah,0x73(%esi)
gs imul $0x34,%gs:0x36(%edi),%ebp
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
arpl   %si,0x79(%eax)
add    %ah,0x63(%esi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jae    80487b2 <strcmp@plt-0x46e>
add    %ch,0x61(%ebp)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
insl   (%dx),%es:(%edi)
bound  %esi,0x69(%ebx)
outsb  %ds:(%esi),(%dx)
imul   $0x73786c5f,0x5f(%eax,%eax,1),%esi
je     80487c5 <strcmp@plt-0x45b>
je     804879c <strcmp@plt-0x484>
xor    $0x0,%al
pop    %edi
pop    %edi
jne    80487d2 <strcmp@plt-0x44e>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048770 <strcmp@plt-0x4b0>
outsb  %ds:(%esi),(%dx)
insb   (%dx),%es:(%edi)
pop    %edi
insb   (%dx),%es:(%edi)
popa
outsb  %ds:(%esi),(%dx)
imul   $0x5f5f006f,0x66(%bp),%ebp
js     80487f3 <strcmp@plt-0x42d>
je     80487e3 <strcmp@plt-0x43d>
je     80487ba <strcmp@plt-0x466>
xor    $0x0,%al
pop    %edi
pop    %edi
arpl   %si,0x70(%ecx,%edi,2)
gs
pop    %edi
bound  %ebx,0x6c(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %ax,(%eax)
addr16
gs
je     80487fd <strcmp@plt-0x423>
outsb  %ds:(%esi),(%dx)
jbe    804879b <strcmp@plt-0x485>
pop    %edi
pop    %edi
data16
jb     8048805 <strcmp@plt-0x41b>
popa
imul   $0x64747300,%fs:0x67(%esi),%ebp
gs
jb     804881e <strcmp@plt-0x402>
add    %dh,0x65(%edx)
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x63736600,0x6b(%esi),%ebp
popa
outsb  %ds:(%esi),(%dx)
data16
add    %ah,0x65(%edi)
je     8048830 <strcmp@plt-0x3f0>
jo     8048837 <strcmp@plt-0x3e9>
pop    %edi
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
add    %ah,0x69(%bp)
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
add    %ah,0x65(%edi)
je     8048837 <strcmp@plt-0x3e9>
ja     804883a <strcmp@plt-0x3e6>
add    %ah,0x77(%esi)
jb     8048844 <strcmp@plt-0x3dc>
je     8048842 <strcmp@plt-0x3de>
add    %bl,0x5f(%edi)
data16
jo     8048848 <strcmp@plt-0x3d8>
outsb  %ds:(%esi),(%dx)
imul   $0x65736c00,%fs:0x67(%esi),%ebp
imul   $0x34,%gs:(%esi),%esi
add    %dh,0x72(%eax)
outsl  %ds:(%esi),(%dx)
addr16 jb 8048858 <strcmp@plt-0x3c8>
insl   (%dx),%es:(%edi)
pop    %edi
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0x6f68735f,0x6e(%edi),%ebp
jb     804887d <strcmp@plt-0x3a3>
pop    %edi
outsb  %ds:(%esi),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %ah,%gs:0x64(%esi)
outsl  %ds:(%esi),(%dx)
jo     8048879 <strcmp@plt-0x3a7>
outsb  %ds:(%esi),(%dx)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jbe    8048882 <strcmp@plt-0x39e>
add    %ah,0x69(%edx)
outsb  %ds:(%esi),(%dx)
fs
je     8048889 <strcmp@plt-0x397>
js     804889a <strcmp@plt-0x386>
outsl  %fs:(%esi),(%dx)
insl   (%dx),%es:(%edi)
popa
imul   $0x63727473,0x0(%esi),%ebp
insl   (%dx),%es:(%edi)
jo     8048834 <strcmp@plt-0x3ec>
pop    %edi
pop    %edi
insb   (%dx),%es:(%edi)
imul   $0x6174735f,0x63(%edx),%esp
jb     80488b4 <strcmp@plt-0x36c>
pop    %edi
insl   (%dx),%es:(%edi)
popa
imul   $0x766f5f5f,0x0(%esi),%ebp
gs
jb     80488b3 <strcmp@plt-0x36d>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     8048851 <strcmp@plt-0x3cf>
data16
jo     80488c9 <strcmp@plt-0x357>
je     80488c9 <strcmp@plt-0x357>
pop    %edi
jne    80488c7 <strcmp@plt-0x359>
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %bp,0x65(%ebx)
add    %ah,%fs:0x72(%esi)
gs add %bl,%gs:0x5f(%edi)
jo     80488db <strcmp@plt-0x345>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
add    %bl,%gs:0x5f(%edi)
jo     80488e6 <strcmp@plt-0x33a>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%si),(%dx)
popa
insl   (%dx),%es:(%edi)
gs
pop    %edi
data16
jne    80488ea <strcmp@plt-0x336>
insb   (%dx),%es:(%edi)
add    %bl,0x5f(%edi)
arpl   %di,0x61(%eax)
pop    %edi
popa
je     80488ee <strcmp@plt-0x332>
js     80488f4 <strcmp@plt-0x32c>
je     804888d <strcmp@plt-0x393>
pop    %edi
pop    %edi
insl   (%dx),%es:(%di)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
pop    %edi
jae    804890a <strcmp@plt-0x316>
popa
jb     804890d <strcmp@plt-0x313>
pop    %edi
pop    %edi
add    %al,0x4c(%edi)
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%esi),%ebp
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %ebp,(%esi)
xor    (%eax),%eax
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    (%eax),%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    $0x0,%al
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %eax,(%eax)
inc    %edi
dec    %esp
dec    %ecx
inc    %edx
inc    %ebx
pop    %edi
xor    (%esi),%ch
xor    %al,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%eax
add    (%eax),%eax
add    (%eax),%al
add    (%eax),%al
add    $0x0,%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    (%eax),%al
add    $0x6000200,%eax
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000000
add    %al,(%ebx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ebx)
add    %al,(%edi)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,0x2000500
add    %cl,(%eax)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%ecx)
add    %al,(%edx)
add    %al,(%edx)
add    %al,(%edx)
add    %eax,(%eax)
pop    %es
add    %al,(%ecx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%ebx)
imul   $0x80000,0xd(%ecx),%ebp
mov    %es,(%edx)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
je     80489a7 <strcmp@plt-0x279>
imul   $0x70000,(%ecx),%ecx
xchg   %eax,%esi
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x1f(%ebx)
imul   $0x60000,(%ecx),%ecx
mov    %al,0x10000002
add    %al,(%eax)
add    %dl,(%edx)
imul   $0x50000,0xd(%ecx),%ebp
scas   %es:(%edi),%al
add    (%eax),%al
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%ecx,%ebp,2)
imul   $0x2b8,0x40000,%ecx
00
adc    %al,(%eax)
add    %al,(%eax)
adc    %ebp,0x69(%ecx)
or     $0x30000,%eax
ret    $0x2
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
imul   $0x20000,0xd(%ecx),%ebp
int3
add    (%eax),%al
add    %al,(%eax)
add    %al,(%eax)
cld
pop    %ds
add    $0x1c0608,%eax
add    %ah,0x21(%eax)
add    $0x3b0508,%eax
add    %ah,0x5(%ecx,%eiz,1)
or     %al,0x8000003c
and    %eax,0x3d0508
add    %ah,0x5080521(%eax)
inc    %ecx
add    %al,(%eax)
shlb   $0x5,(%ecx)
.byte 0x8
.byte 0x5
cmp    (%eax),%al
or     $0x20,%al
add    $0x10708,%eax
add    %dl,(%eax)
and    %al,0x20708
add    %dl,(%eax,%eiz,1)
add    $0x30708,%eax
add    %bl,(%eax)
and    %al,0x40708
add    %bl,(%eax,%eiz,1)
add    $0x50708,%eax
add    %ah,(%eax)
and    %al,0x60708
add    %ah,(%eax,%eiz,1)
add    $0x70708,%eax
add    %ch,(%eax)
and    %al,0x80708
add    %ch,(%eax,%eiz,1)
add    $0x90708,%eax
add    %dh,(%eax)
and    %al,0xa0708
add    %dh,(%eax,%eiz,1)
add    $0xb0708,%eax
add    %bh,(%eax)
and    %al,0xc0708
add    %bh,(%eax,%eiz,1)
add    $0xd0708,%eax
add    %al,0x20(%eax)
add    $0xe0708,%eax
add    %al,0x5(%eax,%eiz,1)
or     %al,(%edi)
sldt   (%eax)
dec    %eax
and    %al,0x100708
add    %cl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    %eax,(%eax)
add    %dl,0x20(%eax)
add    $0x120708,%eax
add    %dl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    (%eax),%eax
add    %bl,0x20(%eax)
add    $0x140708,%eax
add    %bl,0x5(%eax,%eiz,1)
or     %al,(%edi)
adc    $0x20600000,%eax
add    $0x160708,%eax
add    %ah,0x5(%eax,%eiz,1)
or     %al,(%edi)
pop    %ss
add    %al,(%eax)
push   $0x7080520
sbb    %al,(%eax)
add    %ch,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    %eax,(%eax)
add    %dh,0x20(%eax)
add    $0x1a0708,%eax
add    %dh,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    (%eax),%eax
add    %bh,0x20(%eax)
add    $0x1c0708,%eax
add    %bh,0x5(%eax,%eiz,1)
or     %al,(%edi)
sbb    $0x20800000,%eax
add    $0x1e0708,%eax
add    %al,0x1f070805(%eax,%eiz,1)
add    %al,(%eax)
mov    %ah,(%eax)
add    $0x200708,%eax
add    %cl,0x21070805(%eax,%eiz,1)
add    %al,(%eax)
nop
and    %al,0x220708
add    %dl,0x23070805(%eax,%eiz,1)
add    %al,(%eax)
cwtl
and    %al,0x240708
add    %bl,0x25070805(%eax,%eiz,1)
add    %al,(%eax)
mov    0x7080520,%al
add    %al,%es:(%eax)
movsb  %ds:(%esi),%es:(%edi)
and    %al,0x270708
add    %ch,0x7080520(%eax)
sub    %al,(%eax)
add    %ch,0x29070805(%eax,%eiz,1)
add    %al,(%eax)
mov    $0x20,%al
add    $0x2a0708,%eax
add    %dh,0x2b070805(%eax,%eiz,1)
add    %al,(%eax)
mov    $0x7080520,%eax
sub    $0x0,%al
add    %bh,0x2d070805(%eax,%eiz,1)
add    %al,(%eax)
shlb   $0x5,(%eax)
or     %al,(%edi)
add    %al,%cs:(%eax)
les    (%eax),%esp
add    $0x2f0708,%eax
add    %cl,%al
and    %al,0x300708
add    %cl,%ah
and    %al,0x310708
add    %dl,%al
and    %al,0x320708
add    %dl,%ah
and    %al,0x330708
add    %bl,%al
and    %al,0x340708
add    %bl,%ah
and    %al,0x350708
add    %ah,%al
and    %al,0x360708
add    %ah,%ah
and    %al,0x370708
add    %ch,%al
and    %al,0x380708
add    %ch,%ah
and    %al,0x390708
push   %ebx
sub    $0x8,%esp
call   8049310 <calloc@plt+0x370>
add    $0x9413,%ebx
mov    -0x4(%ebx),%eax
test   %eax,%eax
je     8048c02 <strcmp@plt-0x1e>
call   8048dd0 <__gmon_start__@plt>
add    $0x8,%esp
pop    %ebx
ret
pushl  0x8052004
jmp    *0x8052008
add    %al,(%eax)
jmp    *0x805200c
push   $0x0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052010
push   $0x8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052014
push   $0x10
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052018
push   $0x18
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805201c
push   $0x20
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052020
push   $0x28
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052024
push   $0x30
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052028
push   $0x38
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805202c
push   $0x40
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052030
push   $0x48
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052034
push   $0x50
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052038
push   $0x58
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805203c
push   $0x60
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052040
push   $0x68
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052044
push   $0x70
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052048
push   $0x78
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805204c
push   $0x80
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052050
push   $0x88
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052054
push   $0x90
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052058
push   $0x98
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805205c
push   $0xa0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052060
push   $0xa8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052064
push   $0xb0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052068
push   $0xb8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805206c
push   $0xc0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052070
push   $0xc8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052074
push   $0xd0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052078
push   $0xd8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805207c
push   $0xe0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052080
push   $0xe8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052084
push   $0xf0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052088
push   $0xf8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805208c
push   $0x100
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052090
push   $0x108
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052094
push   $0x110
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x8052098
push   $0x118
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x805209c
push   $0x120
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520a0
push   $0x128
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520a4
push   $0x130
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520a8
push   $0x138
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520ac
push   $0x140
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520b0
push   $0x148
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520b4
push   $0x150
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520b8
push   $0x158
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520bc
push   $0x160
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520c0
push   $0x168
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520c4
push   $0x170
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520c8
push   $0x178
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520cc
push   $0x180
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520d0
push   $0x188
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520d4
push   $0x190
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520d8
push   $0x198
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520dc
push   $0x1a0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520e0
push   $0x1a8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520e4
push   $0x1b0
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520e8
push   $0x1b8
jmp    8048c10 <strcmp@plt-0x10>
jmp    *0x80520ec
push   $0x1c0
jmp    8048c10 <strcmp@plt-0x10>
push   %ebp
mov    %esp,%ebp
push   %edi
xor    %edi,%edi
push   %esi
mov    $0xffffffff,%esi
push   %ebx
and    $0xfffffff0,%esp
sub    $0x30,%esp
mov    0xc(%ebp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804b110 <calloc@plt+0x2170>
movl   $0x804e71d,0x4(%esp)
movl   $0x6,(%esp)
call   8048ee0 <setlocale@plt>
movl   $0x804e0f9,0x4(%esp)
movl   $0x804e0eb,(%esp)
call   8048f30 <bindtextdomain@plt>
movl   $0x804e0eb,(%esp)
call   8048cf0 <textdomain@plt>
movl   $0x8049e40,(%esp)
call   804da80 <calloc@plt+0x4ae0>
mov    0x8(%ebp),%eax
movl   $0x0,0x10(%esp)
movl   $0x804e1c0,0xc(%esp)
movl   $0x804e124,0x8(%esp)
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048e10 <getopt_long@plt>
cmp    $0xffffffff,%eax
je     804916a <calloc@plt+0x1ca>
cmp    $0x6d,%eax
je     8049160 <calloc@plt+0x1c0>
jg     8049078 <calloc@plt+0xd8>
cmp    $0xffffff7e,%eax
je     8049154 <calloc@plt+0x1b4>
jle    804910b <calloc@plt+0x16b>
cmp    $0x65,%eax
nop
je     80490a7 <calloc@plt+0x107>
cmp    $0x66,%eax
jne    80490ff <calloc@plt+0x15f>
mov    $0x1,%esi
jmp    8049010 <calloc@plt+0x70>
lea    0x0(%esi),%esi
cmp    $0x73,%eax
je     80490bf <calloc@plt+0x11f>
lea    0x0(%esi),%esi
jle    8049096 <calloc@plt+0xf6>
cmp    $0x76,%eax
je     80490ae <calloc@plt+0x10e>
cmp    $0x7a,%eax
jne    80490ff <calloc@plt+0x15f>
mov    $0x1,%edi
jmp    8049010 <calloc@plt+0x70>
cmp    $0x6e,%eax
jne    80490ba <calloc@plt+0x11a>
movb   $0x1,0x80521c6
jmp    8049010 <calloc@plt+0x70>
xor    %esi,%esi
jmp    8049010 <calloc@plt+0x70>
movb   $0x1,0x80521c5
jmp    8049010 <calloc@plt+0x70>
cmp    $0x71,%eax
jne    80490ff <calloc@plt+0x15f>
movb   $0x0,0x80521c5
jmp    8049010 <calloc@plt+0x70>
movl   $0x5,0x8(%esp)
movl   $0x804e12d,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048d80 <error@plt>
movl   $0x1,(%esp)
call   80493e0 <calloc@plt+0x440>
cmp    $0xffffff7d,%eax
jne    80490ff <calloc@plt+0x15f>
mov    0x8052108,%eax
movl   $0x0,0x14(%esp)
movl   $0x804e10b,0x10(%esp)
movl   $0x804e0e7,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x80521c0,%eax
movl   $0x804e11b,0x4(%esp)
mov    %eax,(%esp)
call   804cdd0 <calloc@plt+0x3e30>
movl   $0x0,(%esp)
call   8048de0 <exit@plt>
movl   $0x0,(%esp)
call   80493e0 <calloc@plt+0x440>
mov    $0x2,%esi
jmp    8049010 <calloc@plt+0x70>
mov    0x80521a0,%edx
cmp    %edx,0x8(%ebp)
mov    %edx,%eax
jle    80490cb <calloc@plt+0x12b>
mov    0x8(%ebp),%ecx
sub    %edx,%ecx
sub    $0x1,%ecx
jle    80491a4 <calloc@plt+0x204>
cmpb   $0x0,0x80521c6
jne    8049297 <calloc@plt+0x2f7>
cmp    %edx,0x8(%ebp)
mov    %edx,%eax
movb   $0x0,0x80521c6
jle    8049283 <calloc@plt+0x2e3>
mov    %edi,%edx
cmp    $0x1,%dl
sbb    %ecx,%ecx
mov    %ecx,0x24(%esp)
andl   $0xa,0x24(%esp)
movzbl 0x24(%esp),%edx
movl   $0x0,0x2c(%esp)
mov    %ebx,0xc(%ebp)
mov    %dl,0x2b(%esp)
jmp    804921c <calloc@plt+0x27c>
mov    0x80521c0,%eax
mov    %ebx,(%esp)
mov    %eax,0x4(%esp)
call   8048e00 <fputs_unlocked@plt>
cmpb   $0x0,0x80521c6
jne    8049202 <calloc@plt+0x262>
mov    0x80521c0,%eax
mov    0x14(%eax),%ecx
cmp    0x18(%eax),%ecx
jae    80492d6 <calloc@plt+0x336>
lea    0x1(%ecx),%edi
mov    %edi,0x14(%eax)
movzbl 0x2b(%esp),%eax
mov    %al,(%ecx)
mov    %ebx,(%esp)
call   8048c70 <free@plt>
mov    0x80521a0,%eax
add    $0x1,%eax
cmp    %eax,0x8(%ebp)
mov    %eax,0x80521a0
jle    804928b <calloc@plt+0x2eb>
mov    0xc(%ebp),%edx
cmp    $0xffffffff,%esi
mov    (%edx,%eax,4),%edi
je     804926f <calloc@plt+0x2cf>
mov    %esi,0x4(%esp)
mov    %edi,(%esp)
call   8049790 <calloc@plt+0x7f0>
mov    %eax,%ebx
test   %ebx,%ebx
jne    80491ca <calloc@plt+0x22a>
cmpb   $0x0,0x80521c5
movl   $0x1,0x2c(%esp)
je     804920a <calloc@plt+0x26a>
call   8048e80 <__errno_location@plt>
mov    %edi,0xc(%esp)
movl   $0x804e285,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048d80 <error@plt>
jmp    804920a <calloc@plt+0x26a>
movl   $0x3f,0x4(%esp)
mov    %edi,(%esp)
call   80496b0 <calloc@plt+0x710>
mov    %eax,%ebx
jmp    8049235 <calloc@plt+0x295>
movl   $0x0,0x2c(%esp)
mov    0x2c(%esp),%eax
lea    -0xc(%ebp),%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x5,0x8(%esp)
movl   $0x804e078,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
call   8048d80 <error@plt>
mov    0x80521a0,%edx
jmp    8049192 <calloc@plt+0x1f2>
mov    0x24(%esp),%ecx
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048f00 <__overflow@plt>
jmp    8049202 <calloc@plt+0x262>
xor    %ebp,%ebp
pop    %esi
mov    %esp,%ecx
and    $0xfffffff0,%esp
push   %eax
push   %esp
push   %edx
push   $0x804da70
push   $0x804da00
push   %ecx
push   %esi
push   $0x8048fb0
call   8048e50 <__libc_start_main@plt>
hlt
xchg   %ax,%ax
nop
mov    (%esp),%ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
mov    $0x8052163,%eax
sub    $0x8052160,%eax
cmp    $0x6,%eax
ja     8049330 <calloc@plt+0x390>
ret
mov    $0x0,%eax
test   %eax,%eax
je     804932f <calloc@plt+0x38f>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8052160,(%esp)
call   *%eax
leave
ret
lea    0x0(%esi),%esi
mov    $0x8052160,%eax
sub    $0x8052160,%eax
sar    $0x2,%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
jne    8049369 <calloc@plt+0x3c9>
ret
mov    $0x0,%edx
test   %edx,%edx
je     8049368 <calloc@plt+0x3c8>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
mov    %eax,0x4(%esp)
movl   $0x8052160,(%esp)
call   *%edx
leave
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
cmpb   $0x0,0x80521c4
jne    80493ac <calloc@plt+0x40c>
push   %ebp
mov    %esp,%ebp
sub    $0x8,%esp
call   8049320 <calloc@plt+0x380>
movb   $0x1,0x80521c4
leave
repz ret
xchg   %ax,%ax
mov    0x8051f10,%eax
test   %eax,%eax
je     80493d8 <calloc@plt+0x438>
mov    $0x0,%eax
test   %eax,%eax
je     80493d8 <calloc@plt+0x438>
push   %ebp
mov    %esp,%ebp
sub    $0x18,%esp
movl   $0x8051f10,(%esp)
call   *%eax
leave
jmp    8049350 <calloc@plt+0x3b0>
nop
jmp    8049350 <calloc@plt+0x3b0>
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x80521d0,%esi
mov    0x20(%esp),%ebx
movl   $0x5,0x8(%esp)
test   %ebx,%ebx
je     8049434 <calloc@plt+0x494>
movl   $0x804dae8,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0xc(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x8052164,%eax
mov    %eax,(%esp)
call   8048f20 <__fprintf_chk@plt>
mov    %ebx,(%esp)
call   8048de0 <exit@plt>
movl   $0x804db10,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ea0 <__printf_chk@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804db30,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e00 <fputs_unlocked@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804db68,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e00 <fputs_unlocked@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804dd20,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e00 <fputs_unlocked@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804df1c,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e00 <fputs_unlocked@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804df4c,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e00 <fputs_unlocked@plt>
mov    0x80521d0,%eax
mov    %eax,(%esp)
call   8049f10 <calloc@plt+0xf70>
movl   $0x5,0x8(%esp)
movl   $0x804e0a6,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048cd0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x804e0bd,0xc(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ea0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e0d3,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
movl   $0x804df84,0xc(%esp)
movl   $0x804e0e7,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ea0 <__printf_chk@plt>
mov    0x80521c0,%esi
movl   $0x5,0x8(%esp)
movl   $0x804dfac,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e00 <fputs_unlocked@plt>
movl   $0x0,0x4(%esp)
movl   $0x5,(%esp)
call   8048ee0 <setlocale@plt>
test   %eax,%eax
je     8049627 <calloc@plt+0x687>
movl   $0x3,0x8(%esp)
movl   $0x804e0f5,0x4(%esp)
mov    %eax,(%esp)
call   8048f40 <strncmp@plt>
test   %eax,%eax
jne    804966b <calloc@plt+0x6cb>
mov    0x80521d0,%eax
mov    %eax,(%esp)
call   8049f10 <calloc@plt+0xf70>
movl   $0x5,0x8(%esp)
movl   $0x804e034,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048cd0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ea0 <__printf_chk@plt>
jmp    804942c <calloc@plt+0x48c>
mov    0x80521d0,%eax
mov    %eax,(%esp)
call   8049f10 <calloc@plt+0xf70>
movl   $0x5,0x8(%esp)
movl   $0x804dfec,0x4(%esp)
movl   $0x0,(%esp)
mov    %eax,%esi
call   8048cd0 <dcgettext@plt>
mov    %esi,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ea0 <__printf_chk@plt>
jmp    8049627 <calloc@plt+0x687>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
mov    $0x401,%ebx
sub    $0x2c,%esp
mov    0x44(%esp),%eax
mov    0x40(%esp),%ebp
lea    0x1(%eax),%edx
cmp    $0x400,%eax
cmovbe %edx,%ebx
nop
mov    %ebx,(%esp)
call   8048db0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
je     8049718 <calloc@plt+0x778>
mov    %ebx,0x8(%esp)
mov    %eax,0x4(%esp)
mov    %ebp,(%esp)
call   8048d00 <readlink@plt>
test   %eax,%eax
mov    %eax,%edi
js     8049738 <calloc@plt+0x798>
cmp    %edi,%ebx
ja     8049768 <calloc@plt+0x7c8>
mov    %esi,(%esp)
call   8048c70 <free@plt>
cmp    $0x3fffffff,%ebx
ja     8049728 <calloc@plt+0x788>
add    %ebx,%ebx
mov    %ebx,(%esp)
call   8048db0 <malloc@plt>
test   %eax,%eax
mov    %eax,%esi
jne    80496de <calloc@plt+0x73e>
xor    %eax,%eax
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
cmp    $0x7ffffffe,%ebx
ja     8049778 <calloc@plt+0x7d8>
mov    $0x7fffffff,%ebx
jmp    80496d0 <calloc@plt+0x730>
nop
call   8048e80 <__errno_location@plt>
mov    (%eax),%edx
cmp    $0x22,%edx
je     80496f4 <calloc@plt+0x754>
mov    %esi,(%esp)
mov    %edx,0x1c(%esp)
mov    %eax,0x18(%esp)
call   8048c70 <free@plt>
mov    0x18(%esp),%eax
mov    0x1c(%esp),%edx
mov    %edx,(%eax)
xor    %eax,%eax
jmp    804971a <calloc@plt+0x77a>
lea    0x0(%esi),%esi
movb   $0x0,(%esi,%edi,1)
add    $0x2c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8048e80 <__errno_location@plt>
movl   $0xc,(%eax)
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0xac,%esp
mov    0xc4(%esp),%eax
mov    %eax,%edx
and    $0x3,%eax
shr    $0x2,%edx
mov    %edx,%ecx
and    $0x1,%ecx
mov    %cl,0x2b(%esp)
mov    %eax,%ecx
mov    %eax,0x24(%esp)
sub    $0x1,%eax
test   %eax,%ecx
jne    8049d68 <calloc@plt+0xdc8>
mov    0xc0(%esp),%ebx
test   %ebx,%ebx
je     8049d68 <calloc@plt+0xdc8>
mov    0xc0(%esp),%eax
movzbl (%eax),%eax
test   %al,%al
je     8049d80 <calloc@plt+0xde0>
cmp    $0x2f,%al
je     8049c85 <calloc@plt+0xce5>
call   804d180 <calloc@plt+0x41e0>
test   %eax,%eax
mov    %eax,%edi
mov    %eax,0x20(%esp)
je     8049df0 <calloc@plt+0xe50>
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048ec0 <__rawmemchr@plt>
mov    %eax,%ebx
mov    %eax,%esi
sub    %edi,%ebx
cmp    $0xfff,%ebx
mov    %eax,0x1c(%esp)
jle    8049cba <calloc@plt+0xd1a>
mov    0xc0(%esp),%edi
movl   $0x0,0x30(%esp)
movl   $0x0,0x38(%esp)
movl   $0x0,0x34(%esp)
movzbl (%edi),%eax
test   %al,%al
je     8049991 <calloc@plt+0x9f1>
nop
cmp    $0x2f,%al
jne    8049868 <calloc@plt+0x8c8>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edi
movzbl (%edi),%eax
cmp    $0x2f,%al
je     8049858 <calloc@plt+0x8b8>
test   %al,%al
mov    %edi,%ebx
je     804987f <calloc@plt+0x8df>
mov    %edi,%ebx
jmp    8049874 <calloc@plt+0x8d4>
lea    0x0(%esi,%eiz,1),%esi
test   %dl,%dl
je     804987f <calloc@plt+0x8df>
add    $0x1,%ebx
movzbl (%ebx),%edx
cmp    $0x2f,%dl
jne    8049870 <calloc@plt+0x8d0>
cmp    %edi,%ebx
je     8049991 <calloc@plt+0x9f1>
mov    %ebx,%ebp
sub    %edi,%ebp
cmp    $0x1,%ebp
je     8049a60 <calloc@plt+0xac0>
cmp    $0x2,%ebp
je     8049a70 <calloc@plt+0xad0>
cmpb   $0x2f,-0x1(%esi)
mov    %esi,%eax
je     80498ab <calloc@plt+0x90b>
add    $0x1,%eax
movb   $0x2f,(%esi)
lea    (%eax,%ebp,1),%ecx
cmp    %ecx,0x1c(%esp)
ja     80498f6 <calloc@plt+0x956>
mov    0x20(%esp),%ecx
mov    0x1c(%esp),%esi
sub    %ecx,%eax
sub    %ecx,%esi
mov    %eax,0x2c(%esp)
mov    %esi,%eax
add    $0x1000,%eax
cmp    $0x1000,%ebp
lea    0x1(%ebp,%esi,1),%esi
cmovl  %eax,%esi
mov    %esi,0x4(%esp)
mov    %ecx,(%esp)
call   804cf30 <calloc@plt+0x3f90>
mov    %eax,%ecx
add    %eax,%esi
mov    %eax,0x20(%esp)
mov    0x2c(%esp),%eax
mov    %esi,0x1c(%esp)
add    %ecx,%eax
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   8048c80 <memcpy@plt>
cmpl   $0x2,0x24(%esp)
sete   %dl
cmpb   $0x0,0x2b(%esp)
lea    (%eax,%ebp,1),%esi
movb   $0x0,(%esi)
jne    8049a28 <calloc@plt+0xa88>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   8048f70 <__lxstat64@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
setne  %al
test   %al,%al
je     8049a00 <calloc@plt+0xa60>
call   8048e80 <__errno_location@plt>
mov    0x24(%esp),%ecx
test   %ecx,%ecx
mov    (%eax),%edi
je     8049b71 <calloc@plt+0xbd1>
cmp    $0x1,%ecx
je     8049b48 <calloc@plt+0xba8>
movl   $0x0,0x50(%esp)
cmpb   $0x0,(%ebx)
je     8049984 <calloc@plt+0x9e4>
cmpl   $0x2,0x24(%esp)
jne    8049d13 <calloc@plt+0xd73>
mov    %ebx,%edi
movzbl (%edi),%eax
test   %al,%al
jne    8049850 <calloc@plt+0x8b0>
mov    0x20(%esp),%eax
add    $0x1,%eax
cmp    %eax,%esi
ja     8049caa <calloc@plt+0xd0a>
lea    0x1(%esi),%eax
cmp    %eax,0x1c(%esp)
movb   $0x0,(%esi)
je     80499c5 <calloc@plt+0xa25>
mov    0x20(%esp),%ecx
sub    %ecx,%esi
lea    0x1(%esi),%eax
mov    %eax,0x4(%esp)
mov    %ecx,(%esp)
call   804cf30 <calloc@plt+0x3f90>
mov    %eax,0x20(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    0x30(%esp),%ecx
mov    0x20(%esp),%eax
test   %ecx,%ecx
je     8049b3d <calloc@plt+0xb9d>
mov    %ecx,(%esp)
mov    %eax,0x1c(%esp)
call   804a9f0 <calloc@plt+0x1a50>
mov    0x1c(%esp),%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x50(%esp),%eax
and    $0xf000,%eax
cmp    $0xa000,%eax
je     8049ac8 <calloc@plt+0xb28>
cmp    $0x4000,%eax
jne    8049974 <calloc@plt+0x9d4>
mov    %ebx,%edi
jmp    8049986 <calloc@plt+0x9e6>
xchg   %ax,%ax
test   %dl,%dl
jne    804996c <calloc@plt+0x9cc>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x3,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
call   8048f60 <__xstat64@plt>
mov    0x2c(%esp),%edx
test   %eax,%eax
setne  %al
jmp    8049948 <calloc@plt+0x9a8>
xchg   %ax,%ax
cmp    $0x2e,%al
jne    804989d <calloc@plt+0x8fd>
mov    %ebx,%edi
jmp    8049986 <calloc@plt+0x9e6>
nop
cmp    $0x2e,%al
jne    804989d <calloc@plt+0x8fd>
cmpb   $0x2e,0x1(%edi)
jne    804989d <calloc@plt+0x8fd>
mov    0x20(%esp),%eax
mov    %ebx,%edi
add    $0x1,%eax
cmp    %eax,%esi
jbe    8049844 <calloc@plt+0x8a4>
lea    -0x1(%esi),%eax
cmp    %eax,0x20(%esp)
jae    8049e05 <calloc@plt+0xe65>
cmpb   $0x2f,-0x2(%esi)
mov    %eax,%esi
je     8049844 <calloc@plt+0x8a4>
sub    $0x1,%esi
cmp    0x20(%esp),%esi
je     8049984 <calloc@plt+0x9e4>
cmpb   $0x2f,-0x1(%esi)
jne    8049aac <calloc@plt+0xb0c>
mov    %ebx,%edi
jmp    8049986 <calloc@plt+0x9e6>
xchg   %ax,%ax
mov    0x30(%esp),%ecx
test   %ecx,%ecx
je     8049d22 <calloc@plt+0xd82>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %edx,0x2c(%esp)
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a030 <calloc@plt+0x1090>
mov    0x2c(%esp),%edx
test   %al,%al
je     8049b9b <calloc@plt+0xbfb>
test   %dl,%dl
jne    8049984 <calloc@plt+0x9e4>
mov    $0x28,%edi
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804a9f0 <calloc@plt+0x1a50>
call   8048e80 <__errno_location@plt>
mov    %edi,(%eax)
xor    %eax,%eax
add    $0xac,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movzbl (%ebx),%ecx
cmp    $0x2f,%cl
jne    8049b64 <calloc@plt+0xbc4>
lea    0x1(%ebx),%edx
nop
lea    0x0(%esi,%eiz,1),%esi
add    $0x1,%edx
movzbl -0x1(%edx),%ecx
cmp    $0x2f,%cl
je     8049b58 <calloc@plt+0xbb8>
test   %cl,%cl
jne    8049b71 <calloc@plt+0xbd1>
cmp    $0x2,%edi
je     8049984 <calloc@plt+0x9e4>
mov    %eax,0x1c(%esp)
mov    0x34(%esp),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    0x30(%esp),%eax
test   %eax,%eax
mov    0x1c(%esp),%eax
je     8049b39 <calloc@plt+0xb99>
jmp    8049b28 <calloc@plt+0xb88>
lea    0x40(%esp),%eax
mov    %eax,0x8(%esp)
mov    0xc0(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   8049fb0 <calloc@plt+0x1010>
mov    0x6c(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   80496b0 <calloc@plt+0x710>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,%edi
je     8049dd0 <calloc@plt+0xe30>
mov    %eax,(%esp)
call   8048e40 <strlen@plt>
mov    %ebx,(%esp)
mov    %eax,%ebp
call   8048e40 <strlen@plt>
mov    0x38(%esp),%edx
test   %edx,%edx
mov    %eax,%ecx
je     8049ce3 <calloc@plt+0xd43>
lea    0x1(%ebp,%ecx,1),%edx
cmp    %edx,0x38(%esp)
jb     8049da3 <calloc@plt+0xe03>
mov    %ebx,0x4(%esp)
mov    0x34(%esp),%ebx
add    $0x1,%ecx
mov    %ecx,0x8(%esp)
mov    %ebx,%eax
add    %ebp,%eax
mov    %eax,(%esp)
call   8048c60 <memmove@plt>
mov    %ebx,(%esp)
mov    %ebp,0x8(%esp)
mov    %edi,0x4(%esp)
call   8048c80 <memcpy@plt>
cmpb   $0x2f,(%edi)
mov    %eax,%ebx
mov    %eax,0xc0(%esp)
mov    0x20(%esp),%eax
je     8049d98 <calloc@plt+0xdf8>
add    $0x1,%eax
cmp    %eax,%esi
jbe    8049c76 <calloc@plt+0xcd6>
lea    -0x1(%esi),%eax
cmp    %eax,0x20(%esp)
jae    8049e0c <calloc@plt+0xe6c>
cmpb   $0x2f,-0x2(%esi)
mov    %eax,%esi
je     8049c76 <calloc@plt+0xcd6>
sub    $0x1,%esi
cmp    0x20(%esp),%esi
je     8049c76 <calloc@plt+0xcd6>
cmpb   $0x2f,-0x1(%esi)
jne    8049c67 <calloc@plt+0xcc7>
mov    %edi,(%esp)
mov    %ebx,%edi
call   8048c70 <free@plt>
jmp    8049986 <calloc@plt+0x9e6>
movl   $0x1000,(%esp)
call   804cec0 <calloc@plt+0x3f20>
lea    0x1000(%eax),%ecx
mov    %eax,0x20(%esp)
lea    0x1(%eax),%esi
mov    %ecx,0x1c(%esp)
movb   $0x2f,(%eax)
jmp    8049825 <calloc@plt+0x885>
xor    %eax,%eax
cmpb   $0x2f,-0x1(%esi)
sete   %al
sub    %eax,%esi
jmp    80499a0 <calloc@plt+0xa00>
mov    0x20(%esp),%eax
movl   $0x1000,0x4(%esp)
mov    %eax,(%esp)
call   804cf30 <calloc@plt+0x3f90>
mov    %eax,0x20(%esp)
lea    (%eax,%ebx,1),%esi
add    $0x1000,%eax
mov    %eax,0x1c(%esp)
jmp    8049825 <calloc@plt+0x885>
lea    0x1(%ebp,%ecx,1),%eax
cmp    $0x1000,%eax
mov    %ecx,0x2c(%esp)
mov    %eax,%ecx
mov    $0x1000,%eax
cmovae %ecx,%eax
mov    %eax,(%esp)
mov    %eax,0x38(%esp)
call   804cec0 <calloc@plt+0x3f20>
mov    0x2c(%esp),%ecx
mov    %eax,0x34(%esp)
jmp    8049c0a <calloc@plt+0xc6a>
call   8048e80 <__errno_location@plt>
mov    $0x14,%edi
jmp    8049b71 <calloc@plt+0xbd1>
movl   $0x804b0f0,0x10(%esp)
movl   $0x804b0a0,0xc(%esp)
movl   $0x804afe0,0x8(%esp)
movl   $0x0,0x4(%esp)
movl   $0x7,(%esp)
mov    %edx,0x2c(%esp)
call   804a820 <calloc@plt+0x1880>
mov    0x2c(%esp),%edx
test   %eax,%eax
mov    %eax,0x30(%esp)
jne    8049ad4 <calloc@plt+0xb34>
call   804d130 <calloc@plt+0x4190>
nop
call   8048e80 <__errno_location@plt>
movl   $0x16,(%eax)
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   8048e80 <__errno_location@plt>
movl   $0x2,(%eax)
add    $0xac,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x1(%eax),%esi
movb   $0x2f,(%eax)
jmp    8049c76 <calloc@plt+0xcd6>
mov    0x34(%esp),%eax
mov    %edx,0x4(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,(%esp)
call   804cf30 <calloc@plt+0x3f90>
mov    0x2c(%esp),%edx
mov    0x3c(%esp),%ecx
mov    %edx,0x38(%esp)
mov    %eax,0x34(%esp)
jmp    8049c0a <calloc@plt+0xc6a>
test   %dl,%dl
je     8049df7 <calloc@plt+0xe57>
call   8048e80 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    8049984 <calloc@plt+0x9e4>
mov    $0xc,%edi
jmp    8049b10 <calloc@plt+0xb70>
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    8049b3d <calloc@plt+0xb9d>
call   8048e80 <__errno_location@plt>
mov    (%eax),%edi
xchg   %ax,%ax
jmp    8049b10 <calloc@plt+0xb70>
mov    %eax,%esi
jmp    8049844 <calloc@plt+0x8a4>
mov    %eax,%esi
xchg   %ax,%ax
jmp    8049c76 <calloc@plt+0xcd6>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
mov    0x4(%esp),%eax
mov    %eax,0x80521cc
ret
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    %al,0x80521c8
ret
lea    0x0(%esi),%esi
push   %esi
push   %ebx
sub    $0x24,%esp
mov    0x80521c0,%eax
mov    %eax,(%esp)
call   804d1c0 <calloc@plt+0x4220>
test   %eax,%eax
je     8049e69 <calloc@plt+0xec9>
cmpb   $0x0,0x80521c8
je     8049e80 <calloc@plt+0xee0>
call   8048e80 <__errno_location@plt>
cmpl   $0x20,(%eax)
jne    8049e80 <calloc@plt+0xee0>
mov    0x8052164,%eax
mov    %eax,(%esp)
call   804d1c0 <calloc@plt+0x4220>
test   %eax,%eax
jne    8049ed8 <calloc@plt+0xf38>
add    $0x24,%esp
pop    %ebx
pop    %esi
ret
movl   $0x5,0x8(%esp)
movl   $0x804e275,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %eax,%ebx
mov    0x80521cc,%eax
test   %eax,%eax
je     8049ee5 <calloc@plt+0xf45>
mov    %eax,(%esp)
call   804c3f0 <calloc@plt+0x3450>
mov    %eax,%esi
call   8048e80 <__errno_location@plt>
mov    %ebx,0x10(%esp)
mov    %esi,0xc(%esp)
movl   $0x804e281,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048d80 <error@plt>
mov    0x805210c,%eax
mov    %eax,(%esp)
call   8048c50 <_exit@plt>
call   8048e80 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x804e285,0x8(%esp)
mov    (%eax),%eax
movl   $0x0,(%esp)
mov    %eax,0x4(%esp)
call   8048d80 <error@plt>
jmp    8049ed8 <calloc@plt+0xf38>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
mov    0x8(%esp),%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
jne    8049f2b <calloc@plt+0xf8b>
lea    0x0(%esi),%esi
add    $0x1,%eax
movzbl (%eax),%edx
cmp    $0x2f,%dl
je     8049f20 <calloc@plt+0xf80>
mov    %edx,%ecx
xor    %ebx,%ebx
test   %cl,%cl
mov    %eax,%edx
je     8049f59 <calloc@plt+0xfb9>
lea    0x0(%esi),%esi
add    $0x1,%edx
movzbl (%edx),%ecx
test   %cl,%cl
je     8049f59 <calloc@plt+0xfb9>
cmp    $0x2f,%cl
je     8049f60 <calloc@plt+0xfc0>
test   %bl,%bl
je     8049f38 <calloc@plt+0xf98>
mov    %edx,%eax
add    $0x1,%edx
movzbl (%edx),%ecx
xor    %ebx,%ebx
test   %cl,%cl
jne    8049f42 <calloc@plt+0xfa2>
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%ebx
jmp    8049f38 <calloc@plt+0xf98>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048e40 <strlen@plt>
cmp    $0x1,%eax
jbe    8049f8f <calloc@plt+0xfef>
cmpb   $0x2f,-0x1(%ebx,%eax,1)
lea    -0x1(%eax),%edx
je     8049f98 <calloc@plt+0xff8>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x1,%edx
mov    %edx,%eax
jne    8049f85 <calloc@plt+0xfe5>
nop
jmp    8049f8f <calloc@plt+0xfef>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%esi
mov    0x34(%esp),%ebp
mov    0x38(%esp),%edi
test   %esi,%esi
je     804a020 <calloc@plt+0x1080>
movl   $0x14,(%esp)
call   804cec0 <calloc@plt+0x3f20>
mov    %ebp,(%esp)
mov    %eax,%ebx
call   804d100 <calloc@plt+0x4160>
mov    0x5c(%edi),%edx
mov    %eax,(%ebx)
mov    0x58(%edi),%eax
mov    %edx,0x8(%ebx)
mov    0x4(%edi),%edx
mov    %eax,0x4(%ebx)
mov    (%edi),%eax
mov    %ebx,0x4(%esp)
mov    %esi,(%esp)
mov    %edx,0x10(%ebx)
mov    %eax,0xc(%ebx)
call   804ae30 <calloc@plt+0x1e90>
test   %eax,%eax
je     804a028 <calloc@plt+0x1088>
cmp    %ebx,%eax
je     804a020 <calloc@plt+0x1080>
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    804b0f0 <calloc@plt+0x2150>
lea    0x0(%esi),%esi
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
call   804d130 <calloc@plt+0x4190>
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x38,%esp
mov    0x40(%esp),%ecx
mov    0x48(%esp),%ebx
test   %ecx,%ecx
je     804a07a <calloc@plt+0x10da>
mov    0x44(%esp),%eax
mov    0x5c(%ebx),%edx
mov    %eax,0x1c(%esp)
mov    0x58(%ebx),%eax
mov    %edx,0x24(%esp)
mov    0x4(%ebx),%edx
mov    %eax,0x20(%esp)
mov    (%ebx),%eax
mov    %ecx,(%esp)
mov    %edx,0x2c(%esp)
mov    %eax,0x28(%esp)
lea    0x1c(%esp),%eax
mov    %eax,0x4(%esp)
call   804a5d0 <calloc@plt+0x1630>
test   %eax,%eax
setne  %al
add    $0x38,%esp
pop    %ebx
ret
nop
push   %ebp
cmp    $0x9,%eax
push   %edi
push   %esi
push   %ebx
ja     804a0f6 <calloc@plt+0x1156>
mov    $0xb,%ebx
mov    $0xaaaaaaab,%ebp
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    $0x9,%ebx
jbe    804a0ef <calloc@plt+0x114f>
mov    %ebx,%eax
mul    %ebp
shr    %edx
lea    (%edx,%edx,2),%eax
cmp    %eax,%ebx
je     804a0e0 <calloc@plt+0x1140>
mov    $0x10,%edi
mov    $0x9,%esi
mov    $0x3,%ecx
jmp    804a0cd <calloc@plt+0x112d>
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
add    $0x8,%edi
test   %edx,%edx
je     804a0e0 <calloc@plt+0x1140>
add    %edi,%esi
add    $0x2,%ecx
cmp    %ebx,%esi
jb     804a0c0 <calloc@plt+0x1120>
xor    %edx,%edx
mov    %ebx,%eax
div    %ecx
test   %edx,%edx
jne    804a0e8 <calloc@plt+0x1148>
add    $0x2,%ebx
cmp    $0xffffffff,%ebx
jne    804a098 <calloc@plt+0x10f8>
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    $0x3,%ecx
jmp    804a0d6 <calloc@plt+0x1136>
or     $0x1,%eax
cmp    $0xffffffff,%eax
mov    %eax,%ebx
jne    804a08e <calloc@plt+0x10ee>
jmp    804a0e8 <calloc@plt+0x1148>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
xor    %edx,%edx
ror    $0x3,%eax
divl   0x8(%esp)
mov    %edx,%eax
ret
mov    0x8(%esp),%eax
cmp    %eax,0x4(%esp)
sete   %al
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    %eax,%ebx
sub    $0x18,%esp
mov    0x8(%eax),%eax
mov    %edx,(%esp)
mov    %eax,0x4(%esp)
call   *0x18(%ebx)
cmp    0x8(%ebx),%eax
jae    804a152 <calloc@plt+0x11b2>
mov    (%ebx),%edx
add    $0x18,%esp
pop    %ebx
lea    (%edx,%eax,8),%eax
ret
call   8048f50 <abort@plt>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    %ecx,0xc(%esp)
mov    0x30(%esp),%ebp
call   804a130 <calloc@plt+0x1190>
mov    0xc(%esp),%ecx
mov    %eax,%ebx
mov    %eax,(%ecx)
mov    (%eax),%eax
test   %eax,%eax
je     804a1e6 <calloc@plt+0x1246>
cmp    %eax,%edi
je     804a19a <calloc@plt+0x11fa>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
je     804a1df <calloc@plt+0x123f>
mov    (%ebx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     804a1c0 <calloc@plt+0x1220>
mov    0x4(%ebx),%edx
test   %edx,%edx
je     804a218 <calloc@plt+0x1278>
mov    (%edx),%edi
mov    0x4(%edx),%ebp
mov    %edi,(%ebx)
mov    %ebp,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    (%edx),%eax
cmp    %edi,%eax
je     804a1f5 <calloc@plt+0x1255>
mov    %eax,0x4(%esp)
mov    %edi,(%esp)
call   *0x1c(%esi)
test   %al,%al
jne    804a1f0 <calloc@plt+0x1250>
mov    0x4(%ebx),%ebx
mov    0x4(%ebx),%edx
test   %edx,%edx
jne    804a1c8 <calloc@plt+0x1228>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x4(%ebx),%edx
mov    (%edx),%eax
mov    %ebp,%ecx
test   %cl,%cl
je     804a1c0 <calloc@plt+0x1220>
mov    0x4(%edx),%ecx
mov    %ecx,0x4(%ebx)
movl   $0x0,(%edx)
mov    0x24(%esi),%ecx
mov    %ecx,0x4(%edx)
mov    %edx,0x24(%esi)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
movl   $0x0,(%ebx)
jmp    804a1c0 <calloc@plt+0x1220>
mov    (%eax),%edx
mov    %eax,%ecx
cmp    $0x804e2f4,%edx
je     804a2c8 <calloc@plt+0x1328>
flds   0x8(%edx)
flds   0x804e308
fxch   %st(1)
fucomi %st(1),%st
jbe    804a288 <calloc@plt+0x12e8>
flds   0x804e30c
fucomip %st(1),%st
jbe    804a290 <calloc@plt+0x12f0>
flds   0xc(%edx)
flds   0x804e310
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804a298 <calloc@plt+0x12f8>
flds   (%edx)
fldz
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jb     804a2a0 <calloc@plt+0x1300>
faddp  %st,%st(2)
flds   0x4(%edx)
fucomi %st(2),%st
jbe    804a2a8 <calloc@plt+0x1308>
fld1
fucomip %st(1),%st
fstp   %st(0)
jb     804a2b0 <calloc@plt+0x1310>
fucomip %st(1),%st
fstp   %st(0)
mov    $0x1,%eax
jbe    804a2b8 <calloc@plt+0x1318>
jmp    804a2cd <calloc@plt+0x132d>
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
fstp   %st(0)
jmp    804a2b8 <calloc@plt+0x1318>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    804a2b8 <calloc@plt+0x1318>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
jmp    804a2b8 <calloc@plt+0x1318>
xchg   %ax,%ax
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    804a2b8 <calloc@plt+0x1318>
fstp   %st(0)
fstp   %st(0)
fstp   %st(0)
jmp    804a2b8 <calloc@plt+0x1318>
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
movl   $0x804e2f4,(%ecx)
xor    %eax,%eax
ret
lea    0x0(%esi,%eiz,1),%esi
mov    $0x1,%eax
repz ret
nop
push   %ebp
push   %edi
push   %esi
mov    %eax,%esi
push   %ebx
sub    $0x1c,%esp
mov    (%edx),%edi
cmp    0x4(%edx),%edi
mov    %edx,0x4(%esp)
mov    %cl,0xb(%esp)
jae    804a354 <calloc@plt+0x13b4>
mov    (%edi),%ebx
test   %ebx,%ebx
je     804a348 <calloc@plt+0x13a8>
mov    0x4(%edi),%ebp
test   %ebp,%ebp
jne    804a307 <calloc@plt+0x1367>
jmp    804a33a <calloc@plt+0x139a>
nop
mov    0x4(%eax),%ecx
test   %edx,%edx
mov    %ecx,0x4(%ebp)
mov    %ebp,0x4(%eax)
je     804a338 <calloc@plt+0x1398>
mov    %edx,%ebp
mov    0x0(%ebp),%ebx
mov    %esi,%eax
mov    %ebx,%edx
call   804a130 <calloc@plt+0x1190>
mov    0x4(%ebp),%edx
mov    (%eax),%ecx
test   %ecx,%ecx
jne    804a2f8 <calloc@plt+0x1358>
mov    %ebx,(%eax)
addl   $0x1,0xc(%esi)
test   %edx,%edx
movl   $0x0,0x0(%ebp)
mov    0x24(%esi),%eax
mov    %eax,0x4(%ebp)
mov    %ebp,0x24(%esi)
jne    804a305 <calloc@plt+0x1365>
xchg   %ax,%ax
mov    (%edi),%ebx
cmpb   $0x0,0xb(%esp)
movl   $0x0,0x4(%edi)
je     804a368 <calloc@plt+0x13c8>
mov    0x4(%esp),%eax
add    $0x8,%edi
cmp    %edi,0x4(%eax)
ja     804a2e8 <calloc@plt+0x1348>
add    $0x1c,%esp
mov    $0x1,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%edx
mov    %esi,%eax
call   804a130 <calloc@plt+0x1190>
mov    %eax,%edx
mov    (%eax),%eax
test   %eax,%eax
je     804a3b2 <calloc@plt+0x1412>
mov    0x24(%esi),%eax
test   %eax,%eax
je     804a3ba <calloc@plt+0x141a>
mov    0x4(%eax),%ecx
mov    %ecx,0x24(%esi)
mov    0x4(%edx),%ecx
mov    %ebx,(%eax)
mov    %ecx,0x4(%eax)
mov    %eax,0x4(%edx)
mov    0x4(%esp),%eax
add    $0x8,%edi
movl   $0x0,-0x8(%edi)
subl   $0x1,0xc(%eax)
mov    0x4(%esp),%eax
cmp    %edi,0x4(%eax)
ja     804a2e8 <calloc@plt+0x1348>
jmp    804a354 <calloc@plt+0x13b4>
mov    %ebx,(%edx)
addl   $0x1,0xc(%esi)
jmp    804a391 <calloc@plt+0x13f1>
movl   $0x8,(%esp)
mov    %edx,0xc(%esp)
call   8048db0 <malloc@plt>
mov    0xc(%esp),%edx
test   %eax,%eax
jne    804a386 <calloc@plt+0x13e6>
add    $0x1c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x8(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0xc(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%eax
mov    0x10(%eax),%eax
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %esi
push   %ebx
mov    0xc(%esp),%eax
mov    (%eax),%ebx
mov    0x4(%eax),%esi
xor    %eax,%eax
cmp    %esi,%ebx
jae    804a456 <calloc@plt+0x14b6>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%edx
test   %edx,%edx
je     804a44f <calloc@plt+0x14af>
mov    0x4(%ebx),%edx
mov    $0x1,%ecx
test   %edx,%edx
je     804a44a <calloc@plt+0x14aa>
lea    0x0(%esi),%esi
mov    0x4(%edx),%edx
add    $0x1,%ecx
test   %edx,%edx
jne    804a440 <calloc@plt+0x14a0>
cmp    %ecx,%eax
cmovb  %ecx,%eax
add    $0x8,%ebx
cmp    %esi,%ebx
jb     804a428 <calloc@plt+0x1488>
pop    %ebx
pop    %esi
ret
lea    0x0(%esi,%eiz,1),%esi
push   %edi
xor    %edx,%edx
push   %esi
push   %ebx
mov    0x10(%esp),%edi
xor    %ebx,%ebx
mov    (%edi),%ecx
mov    0x4(%edi),%esi
cmp    %esi,%ecx
jae    804a4a1 <calloc@plt+0x1501>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     804a49a <calloc@plt+0x14fa>
mov    0x4(%ecx),%eax
add    $0x1,%ebx
add    $0x1,%edx
test   %eax,%eax
je     804a49a <calloc@plt+0x14fa>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    804a490 <calloc@plt+0x14f0>
add    $0x8,%ecx
cmp    %esi,%ecx
jb     804a478 <calloc@plt+0x14d8>
xor    %eax,%eax
cmp    %ebx,0xc(%edi)
je     804a4ac <calloc@plt+0x150c>
pop    %ebx
pop    %esi
pop    %edi
ret
cmp    %edx,0x10(%edi)
pop    %ebx
pop    %esi
sete   %al
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%eax
mov    0x54(%esp),%ebx
mov    0xc(%eax),%edi
mov    (%eax),%ecx
mov    0x4(%eax),%ebp
mov    0x10(%eax),%esi
mov    %edi,0x24(%esp)
xor    %edi,%edi
cmp    %ebp,%ecx
mov    %esi,0x20(%esp)
mov    0x8(%eax),%esi
jae    804a51e <calloc@plt+0x157e>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%ecx),%eax
test   %eax,%eax
je     804a517 <calloc@plt+0x1577>
mov    0x4(%ecx),%eax
mov    $0x1,%edx
test   %eax,%eax
je     804a512 <calloc@plt+0x1572>
lea    0x0(%esi),%esi
mov    0x4(%eax),%eax
add    $0x1,%edx
test   %eax,%eax
jne    804a508 <calloc@plt+0x1568>
cmp    %edx,%edi
cmovb  %edx,%edi
add    $0x8,%ecx
cmp    %ebp,%ecx
jb     804a4f0 <calloc@plt+0x1550>
mov    0x20(%esp),%eax
mov    %ebx,(%esp)
movl   $0x804e288,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0xc(%esp)
call   8048f20 <__fprintf_chk@plt>
mov    %esi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x804e2a0,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8048f20 <__fprintf_chk@plt>
mov    0x24(%esp),%ecx
xor    %edx,%edx
mov    %edx,0x2c(%esp)
xor    %edx,%edx
mov    %ebx,(%esp)
movl   $0x804e2d0,0x8(%esp)
mov    %ecx,0x28(%esp)
mov    %ecx,0xc(%esp)
fildll 0x28(%esp)
fmuls  0x804e314
mov    %esi,0x28(%esp)
mov    %edx,0x2c(%esp)
movl   $0x1,0x4(%esp)
fildll 0x28(%esp)
fdivrp %st,%st(1)
fstpl  0x10(%esp)
call   8048f20 <__fprintf_chk@plt>
mov    %edi,0xc(%esp)
mov    %ebx,(%esp)
movl   $0x804e2b8,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8048f20 <__fprintf_chk@plt>
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%edi
mov    0x24(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   804a130 <calloc@plt+0x1190>
mov    (%eax),%ecx
mov    %eax,%ebx
test   %ecx,%ecx
jne    804a5fa <calloc@plt+0x165a>
jmp    804a613 <calloc@plt+0x1673>
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
cmp    %ecx,%esi
je     804a622 <calloc@plt+0x1682>
mov    %ecx,0x4(%esp)
mov    %esi,(%esp)
call   *0x1c(%edi)
test   %al,%al
jne    804a620 <calloc@plt+0x1680>
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    804a5f8 <calloc@plt+0x1658>
add    $0x10,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    (%ebx),%ecx
add    $0x10,%esp
mov    %ecx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
sub    $0xc,%esp
mov    0x10(%esp),%eax
mov    0x10(%eax),%edx
test   %edx,%edx
je     804a661 <calloc@plt+0x16c1>
mov    (%eax),%edx
mov    0x4(%eax),%ecx
cmp    %ecx,%edx
jb     804a657 <calloc@plt+0x16b7>
jmp    804a667 <calloc@plt+0x16c7>
lea    0x0(%esi,%eiz,1),%esi
add    $0x8,%edx
cmp    %ecx,%edx
jae    804a667 <calloc@plt+0x16c7>
mov    (%edx),%eax
test   %eax,%eax
je     804a650 <calloc@plt+0x16b0>
add    $0xc,%esp
ret
xor    %eax,%eax
add    $0xc,%esp
ret
call   8048f50 <abort@plt>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%edi
mov    0x14(%esp),%esi
mov    %edi,%eax
mov    %esi,%edx
call   804a130 <calloc@plt+0x1190>
mov    %eax,%ebx
mov    %eax,%ecx
jmp    804a697 <calloc@plt+0x16f7>
lea    0x0(%esi),%esi
mov    0x4(%ecx),%ecx
test   %ecx,%ecx
je     804a6a2 <calloc@plt+0x1702>
cmp    %esi,(%ecx)
jne    804a690 <calloc@plt+0x16f0>
mov    0x4(%ecx),%eax
test   %eax,%eax
jne    804a6bb <calloc@plt+0x171b>
mov    0x4(%edi),%edx
jmp    804a6ae <calloc@plt+0x170e>
nop
mov    (%ebx),%eax
test   %eax,%eax
jne    804a6b7 <calloc@plt+0x1717>
add    $0x8,%ebx
cmp    %edx,%ebx
jb     804a6a8 <calloc@plt+0x1708>
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
pop    %ebx
mov    (%eax),%eax
pop    %esi
pop    %edi
ret
jmp    804a6d0 <calloc@plt+0x1730>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push   %ebp
xor    %eax,%eax
push   %edi
push   %esi
push   %ebx
mov    0x14(%esp),%ebp
mov    0x18(%esp),%esi
mov    0x1c(%esp),%ebx
mov    0x0(%ebp),%edi
cmp    %edi,0x4(%ebp)
jbe    804a728 <calloc@plt+0x1788>
mov    (%edi),%edx
test   %edx,%edx
je     804a71c <calloc@plt+0x177c>
cmp    %eax,%ebx
jbe    804a728 <calloc@plt+0x1788>
mov    %edx,(%esi,%eax,4)
mov    0x4(%edi),%edx
lea    0x1(%eax),%ecx
mov    %ecx,%eax
test   %edx,%edx
je     804a71c <calloc@plt+0x177c>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebx,%eax
je     804a728 <calloc@plt+0x1788>
mov    (%edx),%ecx
add    $0x1,%eax
mov    %ecx,-0x4(%esi,%eax,4)
mov    0x4(%edx),%edx
test   %edx,%edx
jne    804a708 <calloc@plt+0x1768>
add    $0x8,%edi
cmp    %edi,0x4(%ebp)
ja     804a6ea <calloc@plt+0x174a>
lea    0x0(%esi,%eiz,1),%esi
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
xor    %ebx,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    0x30(%esp),%ecx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    (%eax),%eax
cmp    %eax,0x4(%ecx)
mov    %eax,0xc(%esp)
jbe    804a798 <calloc@plt+0x17f8>
mov    0xc(%esp),%ebp
mov    0x0(%ebp),%eax
test   %eax,%eax
jne    804a76b <calloc@plt+0x17cb>
jmp    804a782 <calloc@plt+0x17e2>
lea    0x0(%esi,%eiz,1),%esi
mov    0x0(%ebp),%eax
mov    %edi,0x4(%esp)
mov    %eax,(%esp)
call   *%esi
test   %al,%al
je     804a798 <calloc@plt+0x17f8>
mov    0x4(%ebp),%ebp
add    $0x1,%ebx
test   %ebp,%ebp
jne    804a768 <calloc@plt+0x17c8>
mov    0x30(%esp),%eax
addl   $0x8,0xc(%esp)
mov    0xc(%esp),%edx
cmp    %edx,0x4(%eax)
ja     804a754 <calloc@plt+0x17b4>
lea    0x0(%esi,%eiz,1),%esi
add    $0x1c,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    0xc(%esp),%ebx
mov    0x10(%esp),%esi
movzbl (%ebx),%ecx
test   %cl,%cl
je     804a7e2 <calloc@plt+0x1842>
nop
lea    0x0(%esi,%eiz,1),%esi
movzbl %cl,%eax
mov    %edx,%ecx
shl    $0x5,%ecx
add    $0x1,%ebx
sub    %edx,%ecx
xor    %edx,%edx
add    %ecx,%eax
movzbl (%ebx),%ecx
div    %esi
test   %cl,%cl
jne    804a7c8 <calloc@plt+0x1828>
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
movl   $0x0,(%eax)
movl   $0x3f800000,0x4(%eax)
movl   $0x3f4ccccd,0x8(%eax)
movl   $0x3fb4fdf4,0xc(%eax)
movb   $0x0,0x10(%eax)
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %ebp
mov    $0x804a110,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x2c,%esp
mov    0x48(%esp),%edi
mov    0x4c(%esp),%esi
movl   $0x28,(%esp)
mov    0x44(%esp),%ebx
test   %edi,%edi
cmove  %eax,%edi
test   %esi,%esi
mov    $0x804a120,%eax
cmove  %eax,%esi
call   8048db0 <malloc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804a958 <calloc@plt+0x19b8>
test   %ebx,%ebx
mov    $0x804e2f4,%eax
cmove  %eax,%ebx
mov    %ebx,0x14(%ebp)
lea    0x14(%ebp),%eax
call   804a220 <calloc@plt+0x1280>
test   %al,%al
je     804a941 <calloc@plt+0x19a1>
cmpb   $0x0,0x10(%ebx)
flds   0x8(%ebx)
jne    804a8d0 <calloc@plt+0x1930>
mov    0x40(%esp),%ecx
xor    %ebx,%ebx
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x804e318
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804a938 <calloc@plt+0x1998>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,0x40(%esp)
jmp    804a8d2 <calloc@plt+0x1932>
nop
fstp   %st(0)
mov    0x40(%esp),%eax
call   804a080 <calloc@plt+0x10e0>
cmp    $0x3fffffff,%eax
mov    %eax,%ebx
ja     804a93a <calloc@plt+0x199a>
test   %eax,%eax
mov    %eax,0x8(%ebp)
je     804a941 <calloc@plt+0x19a1>
movl   $0x8,0x4(%esp)
mov    %eax,(%esp)
call   8048fa0 <calloc@plt>
test   %eax,%eax
mov    %eax,0x0(%ebp)
je     804a941 <calloc@plt+0x19a1>
lea    (%eax,%ebx,8),%eax
mov    %eax,0x4(%ebp)
mov    0x50(%esp),%eax
movl   $0x0,0xc(%ebp)
movl   $0x0,0x10(%ebp)
mov    %edi,0x18(%ebp)
mov    %eax,0x20(%ebp)
mov    %ebp,%eax
mov    %esi,0x1c(%ebp)
movl   $0x0,0x24(%ebp)
add    $0x2c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
fstp   %st(0)
movl   $0x0,0x8(%ebp)
mov    %ebp,(%esp)
call   8048c70 <free@plt>
add    $0x2c,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804a92c <calloc@plt+0x198c>
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    804a9d6 <calloc@plt+0x1a36>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
test   %eax,%eax
je     804a9ce <calloc@plt+0x1a2e>
mov    0x4(%edi),%ebx
mov    0x20(%esi),%edx
test   %ebx,%ebx
jne    804a992 <calloc@plt+0x19f2>
jmp    804a9b6 <calloc@plt+0x1a16>
lea    0x0(%esi),%esi
mov    %eax,%ebx
test   %edx,%edx
je     804a9a0 <calloc@plt+0x1a00>
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *%edx
mov    0x20(%esi),%edx
mov    0x4(%ebx),%eax
mov    0x24(%esi),%ecx
movl   $0x0,(%ebx)
test   %eax,%eax
mov    %ecx,0x4(%ebx)
mov    %ebx,0x24(%esi)
jne    804a990 <calloc@plt+0x19f0>
test   %edx,%edx
je     804a9c1 <calloc@plt+0x1a21>
mov    (%edi),%eax
mov    %eax,(%esp)
call   *%edx
movl   $0x0,(%edi)
movl   $0x0,0x4(%edi)
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     804a978 <calloc@plt+0x19d8>
movl   $0x0,0xc(%esi)
movl   $0x0,0x10(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    0x20(%esi),%edx
test   %edx,%edx
je     804aa08 <calloc@plt+0x1a68>
mov    0x10(%esi),%eax
test   %eax,%eax
jne    804aa7a <calloc@plt+0x1ada>
mov    0x4(%esi),%eax
mov    (%esi),%edi
cmp    %eax,%edi
jae    804aa41 <calloc@plt+0x1aa1>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%edi),%eax
test   %eax,%eax
jne    804aa2a <calloc@plt+0x1a8a>
jmp    804aa39 <calloc@plt+0x1a99>
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8048c70 <free@plt>
test   %ebx,%ebx
jne    804aa28 <calloc@plt+0x1a88>
add    $0x8,%edi
cmp    %edi,0x4(%esi)
ja     804aa18 <calloc@plt+0x1a78>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    804aa52 <calloc@plt+0x1ab2>
jmp    804aa61 <calloc@plt+0x1ac1>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8048c70 <free@plt>
test   %ebx,%ebx
jne    804aa50 <calloc@plt+0x1ab0>
mov    (%esi),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    %esi,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048c70 <free@plt>
mov    (%esi),%edi
cmp    0x4(%esi),%edi
jae    804aa41 <calloc@plt+0x1aa1>
lea    0x0(%esi,%eiz,1),%esi
mov    (%edi),%eax
mov    %edi,%ebx
test   %eax,%eax
jne    804aa9a <calloc@plt+0x1afa>
jmp    804aaa7 <calloc@plt+0x1b07>
lea    0x0(%esi),%esi
mov    (%ebx),%eax
mov    %eax,(%esp)
call   *0x20(%esi)
mov    0x4(%ebx),%ebx
test   %ebx,%ebx
jne    804aa98 <calloc@plt+0x1af8>
mov    0x4(%esi),%eax
add    $0x8,%edi
cmp    %edi,%eax
ja     804aa88 <calloc@plt+0x1ae8>
jmp    804aa0b <calloc@plt+0x1a6b>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x50,%esp
mov    0x60(%esp),%esi
mov    0x64(%esp),%eax
mov    0x14(%esi),%edi
cmpb   $0x0,0x10(%edi)
flds   0x8(%edi)
jne    804ab20 <calloc@plt+0x1b80>
xor    %ebx,%ebx
mov    %eax,0x10(%esp)
mov    %ebx,0x14(%esp)
fildll 0x10(%esp)
fdivp  %st,%st(1)
flds   0x804e318
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804ac00 <calloc@plt+0x1c60>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%ecx
mov    %ecx,%eax
jmp    804ab22 <calloc@plt+0x1b82>
fstp   %st(0)
call   804a080 <calloc@plt+0x10e0>
mov    %eax,%ebx
lea    -0x1(%eax),%eax
cmp    $0x3ffffffe,%eax
ja     804ac02 <calloc@plt+0x1c62>
cmp    %ebx,0x8(%esi)
je     804abf0 <calloc@plt+0x1c50>
movl   $0x8,0x4(%esp)
mov    %ebx,(%esp)
call   8048fa0 <calloc@plt>
test   %eax,%eax
mov    %eax,0x28(%esp)
je     804ac02 <calloc@plt+0x1c62>
lea    (%eax,%ebx,8),%eax
xor    %ecx,%ecx
mov    %eax,0x2c(%esp)
mov    0x18(%esi),%eax
mov    %esi,%edx
mov    %ebx,0x30(%esp)
movl   $0x0,0x34(%esp)
movl   $0x0,0x38(%esp)
mov    %eax,0x40(%esp)
mov    0x1c(%esi),%eax
mov    %edi,0x3c(%esp)
mov    %eax,0x44(%esp)
mov    0x20(%esi),%eax
mov    %eax,0x48(%esp)
mov    0x24(%esi),%eax
mov    %eax,0x4c(%esp)
lea    0x28(%esp),%eax
call   804a2d0 <calloc@plt+0x1330>
test   %al,%al
mov    %eax,%ebx
jne    804ac10 <calloc@plt+0x1c70>
mov    0x4c(%esp),%eax
mov    $0x1,%ecx
lea    0x28(%esp),%edx
mov    %eax,0x24(%esi)
mov    %esi,%eax
call   804a2d0 <calloc@plt+0x1330>
test   %al,%al
je     804ac45 <calloc@plt+0x1ca5>
xor    %ecx,%ecx
mov    %esi,%eax
lea    0x28(%esp),%edx
call   804a2d0 <calloc@plt+0x1330>
test   %al,%al
je     804ac45 <calloc@plt+0x1ca5>
mov    0x28(%esp),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
nop
add    $0x50,%esp
mov    $0x1,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
fstp   %st(0)
add    $0x50,%esp
xor    %ebx,%ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    (%esi),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    0x28(%esp),%eax
mov    %eax,(%esi)
mov    0x2c(%esp),%eax
mov    %eax,0x4(%esi)
mov    0x30(%esp),%eax
mov    %eax,0x8(%esi)
mov    0x34(%esp),%eax
mov    %eax,0xc(%esi)
mov    0x4c(%esp),%eax
mov    %eax,0x24(%esi)
add    $0x50,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
call   8048f50 <abort@plt>
lea    0x0(%esi),%esi
push   %edi
push   %esi
push   %ebx
sub    $0x30,%esp
mov    0x44(%esp),%edi
mov    0x40(%esp),%esi
mov    0x48(%esp),%ebx
test   %edi,%edi
je     804add8 <calloc@plt+0x1e38>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   804a160 <calloc@plt+0x11c0>
test   %eax,%eax
je     804ac98 <calloc@plt+0x1cf8>
test   %ebx,%ebx
je     804ad18 <calloc@plt+0x1d78>
mov    %eax,(%ebx)
xor    %eax,%eax
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  0x8(%eax)
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804acd8 <calloc@plt+0x1d38>
jmp    804ad28 <calloc@plt+0x1d88>
lea    0x0(%esi),%esi
fstp   %st(0)
fstp   %st(0)
lea    0x0(%esi,%eiz,1),%esi
mov    0x2c(%esp),%ebx
mov    (%ebx),%eax
test   %eax,%eax
je     804ade0 <calloc@plt+0x1e40>
mov    0x24(%esi),%eax
test   %eax,%eax
je     804adf4 <calloc@plt+0x1e54>
mov    0x4(%eax),%edx
mov    %edx,0x24(%esi)
mov    0x4(%ebx),%edx
mov    %edi,(%eax)
mov    %edx,0x4(%eax)
mov    %eax,0x4(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
add    $0x30,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
add    $0x30,%esp
xor    %eax,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x14(%esi),%eax
call   804a220 <calloc@plt+0x1280>
mov    0x14(%esi),%ecx
xor    %edx,%edx
mov    0x8(%esi),%eax
flds   0x8(%ecx)
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
fld    %st(2)
fmul   %st(2),%st
fxch   %st(1)
fucomip %st(1),%st
fstp   %st(0)
jbe    804acd0 <calloc@plt+0x1d30>
cmpb   $0x0,0x10(%ecx)
fmuls  0xc(%ecx)
jne    804ad78 <calloc@plt+0x1dd8>
fmulp  %st,%st(1)
jmp    804ad7a <calloc@plt+0x1dda>
lea    0x0(%esi),%esi
fstp   %st(1)
flds   0x804e318
fxch   %st(1)
fucomi %st(1),%st
fstp   %st(1)
jae    804ae0a <calloc@plt+0x1e6a>
fnstcw 0x1e(%esp)
mov    %esi,(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
call   804aac0 <calloc@plt+0x1b20>
test   %al,%al
je     804ae0c <calloc@plt+0x1e6c>
movl   $0x0,(%esp)
lea    0x2c(%esp),%ecx
mov    %edi,%edx
mov    %esi,%eax
call   804a160 <calloc@plt+0x11c0>
test   %eax,%eax
je     804acd8 <calloc@plt+0x1d38>
call   8048f50 <abort@plt>
lea    0x0(%esi),%esi
mov    %edi,(%ebx)
mov    $0x1,%eax
addl   $0x1,0x10(%esi)
addl   $0x1,0xc(%esi)
jmp    804ac8e <calloc@plt+0x1cee>
movl   $0x8,(%esp)
call   8048db0 <malloc@plt>
test   %eax,%eax
jne    804acf7 <calloc@plt+0x1d57>
jmp    804ae0c <calloc@plt+0x1e6c>
fstp   %st(0)
mov    $0xffffffff,%eax
jmp    804ac8e <calloc@plt+0x1cee>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
jmp    804ac50 <calloc@plt+0x1cb0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x28,%esp
lea    0x1c(%esp),%eax
mov    0x34(%esp),%ebx
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   804ac50 <calloc@plt+0x1cb0>
cmp    $0xffffffff,%eax
je     804ae68 <calloc@plt+0x1ec8>
test   %eax,%eax
mov    %ebx,%eax
cmove  0x1c(%esp),%eax
add    $0x28,%esp
pop    %ebx
ret
nop
lea    0x0(%esi,%eiz,1),%esi
xor    %eax,%eax
jmp    804ae5e <calloc@plt+0x1ebe>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x50(%esp),%esi
lea    0x2c(%esp),%ecx
mov    0x54(%esp),%edx
movl   $0x1,(%esp)
mov    %esi,%eax
call   804a160 <calloc@plt+0x11c0>
test   %eax,%eax
mov    %eax,%edi
je     804afa8 <calloc@plt+0x2008>
mov    %eax,%ebp
mov    0x2c(%esp),%eax
subl   $0x1,0x10(%esi)
mov    (%eax),%eax
test   %eax,%eax
jne    804aeb8 <calloc@plt+0x1f18>
jmp    804aec8 <calloc@plt+0x1f28>
lea    0x0(%esi),%esi
fstp   %st(0)
lea    0x0(%esi),%esi
add    $0x3c,%esp
mov    %ebp,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
mov    0xc(%esi),%eax
xor    %edx,%edx
xor    %ebx,%ebx
sub    $0x1,%eax
mov    %eax,0xc(%esi)
mov    %eax,0x10(%esp)
mov    %edx,0x14(%esp)
mov    0x8(%esi),%ecx
mov    0x14(%esi),%eax
fildll 0x10(%esp)
mov    %ebx,0x14(%esp)
mov    %ecx,0x10(%esp)
fildll 0x10(%esp)
fmuls  (%eax)
fucomip %st(1),%st
fstp   %st(0)
jbe    804aeb8 <calloc@plt+0x1f18>
lea    0x14(%esi),%eax
call   804a220 <calloc@plt+0x1280>
mov    0x8(%esi),%eax
xor    %edx,%edx
mov    0x14(%esi),%ecx
mov    %edx,0x14(%esp)
xor    %edx,%edx
mov    %eax,0x10(%esp)
mov    0xc(%esi),%eax
fildll 0x10(%esp)
mov    %edx,0x14(%esp)
mov    %eax,0x10(%esp)
fildll 0x10(%esp)
flds   (%ecx)
fmul   %st(2),%st
fucomip %st(1),%st
fstp   %st(0)
jbe    804aeb0 <calloc@plt+0x1f10>
cmpb   $0x0,0x10(%ecx)
fmuls  0x4(%ecx)
je     804afb0 <calloc@plt+0x2010>
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
mov    %eax,0x4(%esp)
mov    %edi,%ebp
mov    %esi,(%esp)
call   804aac0 <calloc@plt+0x1b20>
test   %al,%al
jne    804aeb8 <calloc@plt+0x1f18>
mov    0x24(%esi),%eax
test   %eax,%eax
jne    804af8a <calloc@plt+0x1fea>
lea    0x0(%esi,%eiz,1),%esi
jmp    804af99 <calloc@plt+0x1ff9>
lea    0x0(%esi),%esi
mov    %ebx,%eax
mov    0x4(%eax),%ebx
mov    %eax,(%esp)
call   8048c70 <free@plt>
test   %ebx,%ebx
jne    804af88 <calloc@plt+0x1fe8>
movl   $0x0,0x24(%esi)
mov    %edi,%ebp
jmp    804aeb8 <calloc@plt+0x1f18>
nop
xor    %ebp,%ebp
jmp    804aeb8 <calloc@plt+0x1f18>
nop
fmuls  0x8(%ecx)
fnstcw 0x1e(%esp)
movzwl 0x1e(%esp),%eax
mov    $0xc,%ah
mov    %ax,0x1c(%esp)
fldcw  0x1c(%esp)
fistpll 0x10(%esp)
fldcw  0x1e(%esp)
mov    0x10(%esp),%eax
jmp    804af5f <calloc@plt+0x1fbf>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %esi
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    %esi,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   804d320 <calloc@plt+0x4380>
mov    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
mov    %esi,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %eax,(%esp)
mov    %edx,0x4(%esp)
call   804d8a0 <calloc@plt+0x4900>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
nop
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x8(%eax),%edx
mov    0x4(%eax),%eax
mov    %ecx,0x8(%esp)
movl   $0x0,0xc(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   804d8a0 <calloc@plt+0x4900>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
mov    0x8(%esp),%ecx
mov    0xc(%esp),%ebx
mov    0x4(%ecx),%eax
mov    0x8(%ecx),%edx
xor    0x8(%ebx),%edx
xor    0x4(%ebx),%eax
or     %eax,%edx
je     804b070 <calloc@plt+0x20d0>
xor    %eax,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
mov    0xc(%ecx),%eax
mov    0x10(%ecx),%edx
xor    0x10(%ebx),%edx
xor    0xc(%ebx),%eax
or     %eax,%edx
jne    804b069 <calloc@plt+0x20c9>
mov    (%ebx),%eax
mov    %eax,0xc(%esp)
mov    (%ecx),%eax
mov    %eax,0x8(%esp)
pop    %ebx
jmp    804c640 <calloc@plt+0x36a0>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
mov    0x24(%esp),%esi
mov    0x4(%ebx),%edx
mov    0x8(%ebx),%ecx
xor    0x8(%esi),%ecx
xor    0x4(%esi),%edx
or     %edx,%ecx
je     804b0c8 <calloc@plt+0x2128>
add    $0x14,%esp
pop    %ebx
pop    %esi
ret
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x10(%ebx),%ecx
xor    0x10(%esi),%ecx
xor    0xc(%esi),%edx
or     %edx,%ecx
jne    804b0bf <calloc@plt+0x211f>
mov    (%esi),%eax
mov    %eax,0x4(%esp)
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8048c20 <strcmp@plt>
test   %eax,%eax
sete   %al
jmp    804b0bf <calloc@plt+0x211f>
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    (%ebx),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048c70 <free@plt>
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
test   %ebx,%ebx
je     804b193 <calloc@plt+0x21f3>
movl   $0x2f,0x4(%esp)
mov    %ebx,(%esp)
call   8048ef0 <strrchr@plt>
test   %eax,%eax
je     804b17f <calloc@plt+0x21df>
lea    0x1(%eax),%ebp
mov    %ebp,%ecx
sub    %ebx,%ecx
cmp    $0x6,%ecx
jle    804b17f <calloc@plt+0x21df>
lea    -0x6(%eax),%esi
mov    $0x7,%ecx
mov    $0x804e354,%edi
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %cl
mov    %ecx,%esi
setb   %cl
mov    %esi,%edx
cmp    %cl,%dl
jne    804b17f <calloc@plt+0x21df>
mov    $0x3,%ecx
mov    $0x804e35c,%edi
mov    %ebp,%esi
mov    %ebp,%ebx
repz cmpsb %es:(%edi),%ds:(%esi)
seta   %dl
setb   %cl
cmp    %cl,%dl
jne    804b17f <calloc@plt+0x21df>
lea    0x4(%eax),%ebx
mov    %ebx,0x8052160
mov    %ebx,0x80521d0
mov    %ebx,0x8052180
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
mov    0x8052164,%eax
movl   $0x37,0x8(%esp)
movl   $0x1,0x4(%esp)
movl   $0x804e31c,(%esp)
mov    %eax,0xc(%esp)
call   8048d20 <fwrite@plt>
call   8048f50 <abort@plt>
xchg   %ax,%ax
nop
push   %edi
mov    $0xc,%ecx
push   %ebx
mov    %eax,%ebx
sub    $0x4,%esp
xor    %eax,%eax
mov    %ebx,%edi
cmp    $0x8,%edx
rep stos %eax,%es:(%edi)
je     804b1e1 <calloc@plt+0x2241>
mov    %edx,(%ebx)
add    $0x4,%esp
mov    %ebx,%eax
pop    %ebx
pop    %edi
ret
call   8048f50 <abort@plt>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
mov    %eax,%ebx
sub    $0x10,%esp
movl   $0x5,0x8(%esp)
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %eax,%esi
cmp    %ebx,%esi
je     804b220 <calloc@plt+0x2280>
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
nop
call   804d350 <calloc@plt+0x43b0>
movzbl (%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x55,%dl
jne    804b288 <calloc@plt+0x22e8>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x54,%dl
jne    804b270 <calloc@plt+0x22d0>
movzbl 0x2(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x46,%dl
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x2d,0x3(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x38,0x4(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x0,0x5(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x60,(%esi)
mov    $0x804e36f,%eax
mov    $0x804e360,%edx
cmovne %edx,%eax
jmp    804b218 <calloc@plt+0x2278>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x804e369,%eax
cmp    $0x7,%edi
mov    $0x804e367,%edx
cmovne %edx,%eax
jmp    804b218 <calloc@plt+0x2278>
lea    0x0(%esi),%esi
cmp    $0x47,%dl
jne    804b270 <calloc@plt+0x22d0>
movzbl 0x1(%eax),%edx
and    $0xffffffdf,%edx
cmp    $0x42,%dl
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x31,0x2(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x38,0x3(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x30,0x4(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x33,0x5(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x30,0x6(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x0,0x7(%eax)
jne    804b270 <calloc@plt+0x22d0>
cmpb   $0x60,(%esi)
mov    $0x804e36b,%eax
mov    $0x804e364,%edx
cmovne %edx,%eax
jmp    804b218 <calloc@plt+0x2278>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebp
push   %edi
mov    %edx,%edi
push   %esi
push   %ebx
sub    $0x7c,%esp
mov    %eax,0x30(%esp)
mov    0x9c(%esp),%eax
mov    %ecx,0x20(%esp)
mov    %eax,0x34(%esp)
mov    0xa0(%esp),%eax
mov    %eax,0x48(%esp)
mov    0xa4(%esp),%eax
mov    %eax,0x44(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x6c(%esp)
xor    %eax,%eax
call   8048d30 <__ctype_get_mb_cur_max@plt>
mov    %eax,0x4c(%esp)
mov    0x98(%esp),%eax
shr    %eax
and    $0x1,%eax
cmpl   $0x8,0x94(%esp)
mov    %al,0x2f(%esp)
ja     804bbb8 <calloc@plt+0x2c18>
mov    0x94(%esp),%eax
jmp    *0x804e3c0(,%eax,4)
nop
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl 0x2f(%esp),%eax
xor    %esi,%esi
xor    $0x1,%eax
mov    %al,0x59(%esp)
movzbl 0x58(%esp),%eax
xor    $0x1,%eax
mov    %al,0x5a(%esp)
lea    0x0(%esi),%esi
cmp    0x90(%esp),%esi
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804b9c0 <calloc@plt+0x2a20>
test   %al,%al
je     804b9d3 <calloc@plt+0x2a33>
mov    0x28(%esp),%ecx
test   %ecx,%ecx
setne  %dl
je     804b9a8 <calloc@plt+0x2a08>
cmpb   $0x0,0x58(%esp)
je     804b9a8 <calloc@plt+0x2a08>
mov    0x28(%esp),%eax
add    %esi,%eax
cmp    %eax,0x90(%esp)
jb     804b9a8 <calloc@plt+0x2a08>
mov    0x20(%esp),%eax
mov    %edx,0x38(%esp)
lea    (%eax,%esi,1),%ecx
mov    0x28(%esp),%eax
mov    %ecx,(%esp)
mov    %ecx,0x24(%esp)
mov    %eax,0x8(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0x4(%esp)
call   8048cc0 <memcmp@plt>
mov    0x24(%esp),%ecx
mov    0x38(%esp),%edx
test   %eax,%eax
jne    804ba40 <calloc@plt+0x2aa0>
cmpb   $0x0,0x2f(%esp)
jne    804b5a8 <calloc@plt+0x2608>
movb   $0x1,0x24(%esp)
lea    0x0(%esi,%eiz,1),%esi
movzbl (%ecx),%ebx
cmp    $0x7e,%bl
ja     804b758 <calloc@plt+0x27b8>
movzbl %bl,%eax
jmp    *0x804e3e4(,%eax,4)
xchg   %ax,%ax
cmpl   $0x2,0x94(%esp)
je     804b598 <calloc@plt+0x25f8>
cmpl   $0x3,0x94(%esp)
jne    804b4f8 <calloc@plt+0x2558>
testb  $0x4,0x98(%esp)
je     804b4f8 <calloc@plt+0x2558>
lea    0x2(%esi),%edx
cmp    %edx,0x90(%esp)
jbe    804b4f8 <calloc@plt+0x2558>
mov    0x20(%esp),%eax
cmpb   $0x3f,0x1(%eax,%esi,1)
jne    804b4f8 <calloc@plt+0x2558>
movzbl (%eax,%edx,1),%eax
lea    -0x21(%eax),%ecx
cmp    $0x1d,%cl
mov    %al,0x38(%esp)
ja     804b4f8 <calloc@plt+0x2558>
mov    $0x1,%eax
shl    %cl,%eax
test   $0x380051c1,%eax
je     804b4f8 <calloc@plt+0x2558>
cmpb   $0x0,0x2f(%esp)
jne    804b5a8 <calloc@plt+0x2608>
cmp    %edi,%ebp
jae    804b4be <calloc@plt+0x251e>
mov    0x30(%esp),%eax
movb   $0x3f,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804b4ce <calloc@plt+0x252e>
mov    0x30(%esp),%eax
movb   $0x22,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804b4de <calloc@plt+0x253e>
mov    0x30(%esp),%eax
movb   $0x22,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
cmp    %eax,%edi
jbe    804b4ee <calloc@plt+0x254e>
mov    0x30(%esp),%eax
movb   $0x3f,0x3(%eax,%ebp,1)
movzbl 0x38(%esp),%ebx
add    $0x4,%ebp
mov    %edx,%esi
cmpb   $0x0,0x59(%esp)
je     804b506 <calloc@plt+0x2566>
cmpb   $0x0,0x5a(%esp)
jne    804b52b <calloc@plt+0x258b>
mov    0x34(%esp),%edx
test   %edx,%edx
je     804b52b <calloc@plt+0x258b>
mov    %ebx,%ecx
mov    $0x1,%eax
and    $0x1f,%ecx
mov    %ebx,%edx
shl    %cl,%eax
mov    0x34(%esp),%ecx
shr    $0x5,%dl
movzbl %dl,%edx
test   %eax,(%ecx,%edx,4)
jne    804b532 <calloc@plt+0x2592>
cmpb   $0x0,0x24(%esp)
je     804b548 <calloc@plt+0x25a8>
cmpb   $0x0,0x2f(%esp)
jne    804b5a8 <calloc@plt+0x2608>
cmp    %edi,%ebp
jae    804b545 <calloc@plt+0x25a5>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
add    $0x1,%esi
cmp    %edi,%ebp
jae    804b556 <calloc@plt+0x25b6>
mov    0x30(%esp),%eax
mov    %bl,(%eax,%ebp,1)
add    $0x1,%ebp
jmp    804b398 <calloc@plt+0x23f8>
xchg   %ax,%ax
cmpl   $0x1,0x90(%esp)
setne  %al
cmpl   $0xffffffff,0x90(%esp)
je     804bba8 <calloc@plt+0x2c08>
test   %al,%al
jne    804b4f8 <calloc@plt+0x2558>
test   %esi,%esi
jne    804b4f8 <calloc@plt+0x2558>
cmpl   $0x2,0x94(%esp)
jne    804b4f8 <calloc@plt+0x2558>
nop
cmpb   $0x0,0x2f(%esp)
je     804b4f8 <calloc@plt+0x2558>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x44(%esp),%eax
mov    %edi,%edx
mov    0x20(%esp),%ecx
movl   $0x0,0xc(%esp)
mov    %eax,0x14(%esp)
mov    0x48(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x98(%esp),%eax
and    $0xfffffffd,%eax
mov    %eax,0x8(%esp)
mov    0x94(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x90(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804b2e0 <calloc@plt+0x2340>
mov    0x6c(%esp),%edi
xor    %gs:0x14,%edi
jne    804bcd2 <calloc@plt+0x2d32>
add    $0x7c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    $0x72,%eax
cmpl   $0x2,0x94(%esp)
je     804bc1b <calloc@plt+0x2c7b>
cmpb   $0x0,0x58(%esp)
je     804b4f8 <calloc@plt+0x2558>
mov    %eax,%ebx
jmp    804b532 <calloc@plt+0x2592>
lea    0x0(%esi),%esi
mov    $0x62,%eax
jmp    804b623 <calloc@plt+0x2683>
nop
mov    $0x66,%eax
jmp    804b623 <calloc@plt+0x2683>
nop
mov    $0x76,%eax
jmp    804b623 <calloc@plt+0x2683>
nop
mov    $0x6e,%eax
jmp    804b615 <calloc@plt+0x2675>
nop
mov    $0x74,%eax
jmp    804b615 <calloc@plt+0x2675>
nop
cmpb   $0x0,0x58(%esp)
je     804bb90 <calloc@plt+0x2bf0>
cmpb   $0x0,0x2f(%esp)
jne    804b5a8 <calloc@plt+0x2608>
cmp    %edi,%ebp
jae    804b682 <calloc@plt+0x26e2>
mov    0x30(%esp),%eax
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%esi),%edx
cmp    %edx,0x90(%esp)
lea    0x1(%ebp),%eax
jbe    804b6c8 <calloc@plt+0x2728>
mov    0x20(%esp),%edx
movzbl 0x1(%edx,%esi,1),%edx
mov    %dl,0x38(%esp)
sub    $0x30,%edx
cmp    $0x9,%dl
ja     804b6c8 <calloc@plt+0x2728>
cmp    %eax,%edi
ja     804bc30 <calloc@plt+0x2c90>
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804b6be <calloc@plt+0x271e>
mov    0x30(%esp),%eax
movb   $0x30,0x2(%eax,%ebp,1)
lea    0x3(%ebp),%eax
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,%ebp
mov    $0x30,%ebx
jmp    804b506 <calloc@plt+0x2566>
lea    0x0(%esi,%eiz,1),%esi
mov    $0x61,%eax
jmp    804b623 <calloc@plt+0x2683>
lea    0x0(%esi),%esi
cmpb   $0x0,0x58(%esp)
je     804b6fe <calloc@plt+0x275e>
cmpb   $0x0,0x2f(%esp)
je     804b6fe <calloc@plt+0x275e>
test   %dl,%dl
jne    804b548 <calloc@plt+0x25a8>
mov    %ebx,%eax
jmp    804b615 <calloc@plt+0x2675>
lea    0x0(%esi),%esi
cmpl   $0x2,0x94(%esp)
jne    804b4f8 <calloc@plt+0x2558>
cmpb   $0x0,0x2f(%esp)
jne    804b5a8 <calloc@plt+0x2608>
cmp    %edi,%ebp
jae    804b72d <calloc@plt+0x278d>
mov    0x30(%esp),%eax
movb   $0x27,(%eax,%ebp,1)
lea    0x1(%ebp),%eax
cmp    %eax,%edi
jbe    804b73d <calloc@plt+0x279d>
mov    0x30(%esp),%eax
movb   $0x5c,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%eax
cmp    %eax,%edi
jbe    804b74d <calloc@plt+0x27ad>
mov    0x30(%esp),%eax
movb   $0x27,0x2(%eax,%ebp,1)
add    $0x3,%ebp
jmp    804b4f8 <calloc@plt+0x2558>
lea    0x0(%esi),%esi
cmpl   $0x1,0x4c(%esp)
jne    804ba50 <calloc@plt+0x2ab0>
call   8048f90 <__ctype_b_loc@plt>
movzbl %bl,%edx
movl   $0x1,0x38(%esp)
mov    (%eax),%eax
movzwl (%eax,%edx,2),%edx
shr    $0xe,%dx
xor    $0x1,%edx
and    $0x1,%edx
and    0x58(%esp),%dl
je     804b4f8 <calloc@plt+0x2558>
mov    0x38(%esp),%eax
add    %esi,%eax
mov    %eax,0x38(%esp)
mov    0x30(%esp),%eax
jmp    804b804 <calloc@plt+0x2864>
lea    0x0(%esi),%esi
cmpb   $0x0,0x2f(%esp)
jne    804b5a8 <calloc@plt+0x2608>
cmp    %edi,%ebp
jae    804b7b3 <calloc@plt+0x2813>
movb   $0x5c,(%eax,%ebp,1)
lea    0x1(%ebp),%ecx
cmp    %ecx,%edi
jbe    804b7c6 <calloc@plt+0x2826>
mov    %ebx,%ecx
shr    $0x6,%cl
add    $0x30,%ecx
mov    %cl,0x1(%eax,%ebp,1)
lea    0x2(%ebp),%ecx
cmp    %ecx,%edi
jbe    804b7dc <calloc@plt+0x283c>
mov    %ebx,%ecx
shr    $0x3,%cl
and    $0x7,%ecx
add    $0x30,%ecx
mov    %cl,0x2(%eax,%ebp,1)
and    $0x7,%ebx
add    $0x3,%ebp
add    $0x30,%ebx
add    $0x1,%esi
cmp    %esi,0x38(%esp)
jbe    804b54b <calloc@plt+0x25ab>
cmp    %edi,%ebp
jae    804b7f9 <calloc@plt+0x2859>
mov    %bl,(%eax,%ebp,1)
mov    0x20(%esp),%ebx
add    $0x1,%ebp
movzbl (%ebx,%esi,1),%ebx
test   %dl,%dl
jne    804b7a0 <calloc@plt+0x2800>
cmpb   $0x0,0x24(%esp)
je     804b7e5 <calloc@plt+0x2845>
cmp    %edi,%ebp
jae    804b817 <calloc@plt+0x2877>
movb   $0x5c,(%eax,%ebp,1)
add    $0x1,%ebp
movb   $0x0,0x24(%esp)
jmp    804b7e5 <calloc@plt+0x2845>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804bcd7 <calloc@plt+0x2d37>
test   %edi,%edi
je     804bbdd <calloc@plt+0x2c3d>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804e369,0x3c(%esp)
movb   $0x22,(%eax)
jmp    804b378 <calloc@plt+0x23d8>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804e369,0x3c(%esp)
movl   $0x3,0x94(%esp)
00
jmp    804b378 <calloc@plt+0x23d8>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x1,0x58(%esp)
movl   $0x0,0x28(%esp)
movl   $0x0,0x3c(%esp)
jmp    804b378 <calloc@plt+0x23d8>
lea    0x0(%esi,%eiz,1),%esi
je     804b8ec <calloc@plt+0x294c>
mov    0x94(%esp),%edx
mov    $0x804e373,%eax
call   804b1f0 <calloc@plt+0x2250>
mov    0x94(%esp),%edx
mov    %eax,0x48(%esp)
mov    $0x804e367,%eax
call   804b1f0 <calloc@plt+0x2250>
mov    %eax,0x44(%esp)
xor    %ebp,%ebp
cmpb   $0x0,0x2f(%esp)
jne    804b91a <calloc@plt+0x297a>
mov    0x48(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804b91a <calloc@plt+0x297a>
mov    0x30(%esp),%ecx
lea    0x0(%esi,%eiz,1),%esi
cmp    %edi,%ebp
jae    804b90f <calloc@plt+0x296f>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804b908 <calloc@plt+0x2968>
mov    0x44(%esp),%ebx
mov    %ebx,(%esp)
call   8048e40 <strlen@plt>
mov    %ebx,0x3c(%esp)
movb   $0x1,0x58(%esp)
mov    %eax,0x28(%esp)
jmp    804b378 <calloc@plt+0x23d8>
movb   $0x1,0x2f(%esp)
xor    %ebp,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804e367,0x3c(%esp)
movl   $0x2,0x94(%esp)
00
jmp    804b378 <calloc@plt+0x23d8>
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,0x2f(%esp)
jne    804bcf3 <calloc@plt+0x2d53>
test   %edi,%edi
je     804bbfc <calloc@plt+0x2c5c>
mov    0x30(%esp),%eax
mov    $0x1,%ebp
movb   $0x0,0x58(%esp)
movl   $0x1,0x28(%esp)
movl   $0x804e367,0x3c(%esp)
movb   $0x27,(%eax)
jmp    804b378 <calloc@plt+0x23d8>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
movb   $0x0,0x24(%esp)
lea    (%eax,%esi,1),%ecx
jmp    804b430 <calloc@plt+0x2490>
lea    0x0(%esi,%eiz,1),%esi
mov    0x20(%esp),%eax
cmpb   $0x0,(%eax,%esi,1)
setne  %al
test   %al,%al
jne    804b3b8 <calloc@plt+0x2418>
test   %ebp,%ebp
jne    804b9ec <calloc@plt+0x2a4c>
cmpl   $0x2,0x94(%esp)
jne    804b9ec <calloc@plt+0x2a4c>
cmpb   $0x0,0x2f(%esp)
jne    804b5a8 <calloc@plt+0x2608>
cmpb   $0x0,0x2f(%esp)
jne    804ba22 <calloc@plt+0x2a82>
mov    0x3c(%esp),%eax
test   %eax,%eax
je     804ba22 <calloc@plt+0x2a82>
mov    0x3c(%esp),%edx
movzbl (%edx),%eax
test   %al,%al
je     804ba22 <calloc@plt+0x2a82>
mov    0x30(%esp),%ecx
sub    %ebp,%edx
lea    0x0(%esi,%eiz,1),%esi
cmp    %ebp,%edi
jbe    804ba17 <calloc@plt+0x2a77>
mov    %al,(%ecx,%ebp,1)
add    $0x1,%ebp
movzbl (%edx,%ebp,1),%eax
test   %al,%al
jne    804ba10 <calloc@plt+0x2a70>
cmp    %edi,%ebp
mov    %ebp,%eax
jae    804b5f2 <calloc@plt+0x2652>
mov    0x30(%esp),%edi
movb   $0x0,(%edi,%ebp,1)
jmp    804b5f2 <calloc@plt+0x2652>
lea    0x0(%esi,%eiz,1),%esi
movb   $0x0,0x24(%esp)
jmp    804b430 <calloc@plt+0x2490>
lea    0x0(%esi),%esi
cmpl   $0xffffffff,0x90(%esp)
movl   $0x0,0x64(%esp)
movl   $0x0,0x68(%esp)
je     804bbbd <calloc@plt+0x2c1d>
mov    $0x1,%eax
mov    %bl,0x5b(%esp)
mov    %eax,%ebx
movl   $0x0,0x38(%esp)
mov    %esi,0x50(%esp)
mov    %ebp,0x54(%esp)
mov    %edi,0x40(%esp)
mov    %ecx,0x5c(%esp)
mov    0x20(%esp),%eax
mov    0x38(%esp),%esi
add    0x50(%esp),%esi
lea    (%eax,%esi,1),%edi
lea    0x64(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x90(%esp),%eax
mov    %edi,0x4(%esp)
sub    %esi,%eax
mov    %eax,0x8(%esp)
lea    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048d60 <mbrtowc@plt>
test   %eax,%eax
mov    %eax,%ebp
je     804bc3d <calloc@plt+0x2c9d>
cmp    $0xffffffff,%eax
je     804bc58 <calloc@plt+0x2cb8>
cmp    $0xfffffffe,%eax
je     804bc73 <calloc@plt+0x2cd3>
cmpb   $0x0,0x2f(%esp)
je     804bb1f <calloc@plt+0x2b7f>
cmpl   $0x2,0x94(%esp)
jne    804bb1f <calloc@plt+0x2b7f>
cmp    $0x1,%eax
je     804bb1f <calloc@plt+0x2b7f>
mov    $0x1,%edx
lea    0x0(%esi,%eiz,1),%esi
movzbl (%edi,%edx,1),%eax
sub    $0x5b,%eax
cmp    $0x21,%al
ja     804bb18 <calloc@plt+0x2b78>
movzbl %al,%eax
jmp    *0x804e5e0(,%eax,4)
lea    0x0(%esi),%esi
add    $0x1,%edx
cmp    %ebp,%edx
jne    804bb00 <calloc@plt+0x2b60>
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   8048d10 <iswprint@plt>
test   %eax,%eax
mov    $0x0,%eax
cmove  %eax,%ebx
lea    0x64(%esp),%eax
mov    %eax,(%esp)
add    %ebp,0x38(%esp)
call   8048c90 <mbsinit@plt>
test   %eax,%eax
je     804ba91 <calloc@plt+0x2af1>
mov    %ebx,%eax
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
mov    %eax,%edx
movzbl 0x5b(%esp),%ebx
xor    $0x1,%edx
mov    0x40(%esp),%edi
cmpl   $0x1,0x38(%esp)
jbe    804b783 <calloc@plt+0x27e3>
and    0x58(%esp),%dl
jmp    804b78d <calloc@plt+0x27ed>
lea    0x0(%esi,%eiz,1),%esi
mov    0x40(%esp),%edi
jmp    804b5a8 <calloc@plt+0x2608>
lea    0x0(%esi,%eiz,1),%esi
testb  $0x1,0x98(%esp)
je     804b4f8 <calloc@plt+0x2558>
add    $0x1,%esi
jmp    804b398 <calloc@plt+0x23f8>
xchg   %ax,%ax
mov    0x20(%esp),%eax
cmpb   $0x0,0x1(%eax)
setne  %al
jmp    804b579 <calloc@plt+0x25d9>
call   8048f50 <abort@plt>
mov    0x20(%esp),%eax
mov    %ecx,0x38(%esp)
mov    %eax,(%esp)
call   8048e40 <strlen@plt>
mov    0x38(%esp),%ecx
mov    %eax,0x90(%esp)
jmp    804ba6e <calloc@plt+0x2ace>
movb   $0x1,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804e369,0x3c(%esp)
jmp    804b378 <calloc@plt+0x23d8>
movb   $0x0,0x58(%esp)
mov    $0x1,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804e367,0x3c(%esp)
jmp    804b378 <calloc@plt+0x23d8>
cmpb   $0x0,0x2f(%esp)
je     804b623 <calloc@plt+0x2683>
jmp    804b5a8 <calloc@plt+0x2608>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x30(%esp),%edx
movb   $0x30,(%edx,%eax,1)
jmp    804b6ae <calloc@plt+0x270e>
mov    %ebx,%edx
mov    0x50(%esp),%esi
mov    0x54(%esp),%ebp
xor    $0x1,%edx
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804bb65 <calloc@plt+0x2bc5>
mov    0x50(%esp),%esi
mov    $0x1,%edx
mov    0x54(%esp),%ebp
movzbl 0x5b(%esp),%ebx
mov    0x40(%esp),%edi
jmp    804bb65 <calloc@plt+0x2bc5>
mov    %esi,%edx
mov    %edi,%eax
mov    0x54(%esp),%ebp
cmp    %edx,0x90(%esp)
movzbl 0x5b(%esp),%ebx
mov    0x50(%esp),%esi
mov    0x40(%esp),%edi
mov    0x5c(%esp),%ecx
jbe    804bcc8 <calloc@plt+0x2d28>
cmpb   $0x0,(%eax)
je     804bcc8 <calloc@plt+0x2d28>
mov    %ebp,0x40(%esp)
mov    0x38(%esp),%eax
mov    0x90(%esp),%ebp
jmp    804bcb6 <calloc@plt+0x2d16>
nop
lea    0x0(%esi,%eiz,1),%esi
cmpb   $0x0,(%ecx,%eax,1)
je     804bcc0 <calloc@plt+0x2d20>
add    $0x1,%eax
lea    (%esi,%eax,1),%edx
cmp    %edx,%ebp
ja     804bcb0 <calloc@plt+0x2d10>
mov    0x40(%esp),%ebp
mov    %eax,0x38(%esp)
mov    $0x1,%edx
jmp    804bb65 <calloc@plt+0x2bc5>
call   8048ce0 <__stack_chk_fail@plt>
movb   $0x1,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804e369,0x3c(%esp)
jmp    804b378 <calloc@plt+0x23d8>
movb   $0x0,0x58(%esp)
xor    %ebp,%ebp
movl   $0x1,0x28(%esp)
movl   $0x804e367,0x3c(%esp)
jmp    804b378 <calloc@plt+0x23d8>
nop
push   %ebp
push   %edi
mov    %eax,%edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    %edx,0x1c(%esp)
mov    0x50(%esp),%ebx
mov    %ecx,0x20(%esp)
call   8048e80 <__errno_location@plt>
test   %edi,%edi
mov    0x8052150,%esi
mov    %eax,0x24(%esp)
mov    (%eax),%eax
mov    %eax,0x28(%esp)
js     804be9c <calloc@plt+0x2efc>
cmp    0x805215c,%edi
jb     804bda8 <calloc@plt+0x2e08>
lea    0x1(%edi),%ebp
cmp    $0x1fffffff,%ebp
ja     804bea1 <calloc@plt+0x2f01>
cmp    $0x8052154,%esi
lea    0x0(,%ebp,8),%eax
je     804be70 <calloc@plt+0x2ed0>
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
call   804cf30 <calloc@plt+0x3f90>
mov    %eax,%esi
mov    %eax,0x8052150
mov    0x805215c,%eax
mov    %ebp,%edx
movl   $0x0,0x4(%esp)
sub    %eax,%edx
shl    $0x3,%edx
lea    (%esi,%eax,8),%eax
mov    %edx,0x8(%esp)
mov    %eax,(%esp)
call   8048e60 <memset@plt>
mov    %ebp,0x805215c
mov    0x4(%ebx),%eax
lea    (%esi,%edi,8),%edi
mov    (%edi),%ebp
mov    0x4(%edi),%esi
mov    %eax,0x18(%esp)
lea    0x8(%ebx),%eax
mov    %eax,%ecx
mov    %ebp,%edx
mov    %eax,0x2c(%esp)
mov    0x2c(%ebx),%eax
orl    $0x1,0x18(%esp)
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %ecx,0xc(%esp)
mov    0x1c(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804b2e0 <calloc@plt+0x2340>
cmp    %eax,%ebp
ja     804be57 <calloc@plt+0x2eb7>
lea    0x1(%eax),%ebp
cmp    $0x80521e0,%esi
mov    %ebp,(%edi)
je     804be12 <calloc@plt+0x2e72>
mov    %esi,(%esp)
call   8048c70 <free@plt>
mov    %ebp,(%esp)
call   804cec0 <calloc@plt+0x3f20>
mov    0x1c(%esp),%ecx
mov    %ebp,%edx
mov    %eax,0x4(%edi)
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
mov    0x2c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x18(%esp),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
mov    %esi,%eax
call   804b2e0 <calloc@plt+0x2340>
mov    0x24(%esp),%eax
mov    0x28(%esp),%ecx
mov    %ecx,(%eax)
add    $0x3c,%esp
mov    %esi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %eax,0x4(%esp)
movl   $0x0,(%esp)
call   804cf30 <calloc@plt+0x3f90>
mov    0x8052158,%edx
mov    %eax,%esi
mov    %eax,0x8052150
mov    0x8052154,%eax
mov    %edx,0x4(%esi)
mov    %eax,(%esi)
jmp    804bd7f <calloc@plt+0x2ddf>
call   8048f50 <abort@plt>
call   804d130 <calloc@plt+0x4190>
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
call   8048e80 <__errno_location@plt>
mov    0x20(%esp),%ebx
mov    $0x80522e0,%edx
test   %ebx,%ebx
cmovne %ebx,%edx
mov    (%eax),%edi
mov    %eax,%esi
movl   $0x30,0x4(%esp)
mov    %edx,(%esp)
call   804d0d0 <calloc@plt+0x4130>
mov    %edi,(%esi)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%edx
mov    $0x80522e0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    (%eax),%eax
ret
jmp    804bf10 <calloc@plt+0x2f70>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov    0x4(%esp),%edx
mov    $0x80522e0,%eax
test   %edx,%edx
cmovne %edx,%eax
mov    0x8(%esp),%edx
mov    %edx,(%eax)
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %esi
mov    $0x80522e0,%eax
push   %ebx
mov    0xc(%esp),%ecx
mov    0x10(%esp),%edx
test   %ecx,%ecx
cmovne %ecx,%eax
mov    %edx,%ecx
shr    $0x5,%dl
and    $0x1f,%ecx
movzbl %dl,%edx
lea    (%eax,%edx,4),%ebx
mov    0x14(%esp),%edx
mov    0x8(%ebx),%esi
mov    %esi,%eax
shr    %cl,%eax
xor    %eax,%edx
and    $0x1,%eax
and    $0x1,%edx
shl    %cl,%edx
xor    %esi,%edx
mov    %edx,0x8(%ebx)
pop    %ebx
pop    %esi
ret
nop
mov    0x4(%esp),%edx
mov    $0x80522e0,%eax
mov    0x8(%esp),%ecx
test   %edx,%edx
cmove  %eax,%edx
mov    0x4(%edx),%eax
mov    %ecx,0x4(%edx)
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
mov    $0x80522e0,%ebx
sub    $0x8,%esp
mov    0x10(%esp),%eax
mov    0x14(%esp),%edx
mov    0x18(%esp),%ecx
test   %eax,%eax
cmove  %ebx,%eax
test   %edx,%edx
movl   $0x8,(%eax)
je     804bfc3 <calloc@plt+0x3023>
test   %ecx,%ecx
je     804bfc3 <calloc@plt+0x3023>
mov    %edx,0x28(%eax)
mov    %ecx,0x2c(%eax)
add    $0x8,%esp
pop    %ebx
ret
call   8048f50 <abort@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
mov    $0x80522e0,%eax
push   %esi
push   %ebx
sub    $0x20,%esp
mov    0x40(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8048e80 <__errno_location@plt>
mov    0x38(%esp),%ecx
mov    0x34(%esp),%edx
mov    (%eax),%edi
mov    %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %eax,0x10(%esp)
lea    0x8(%ebx),%eax
mov    %eax,0xc(%esp)
mov    0x4(%ebx),%eax
mov    %eax,0x8(%esp)
mov    (%ebx),%eax
mov    %eax,0x4(%esp)
mov    0x3c(%esp),%eax
mov    %eax,(%esp)
mov    0x30(%esp),%eax
call   804b2e0 <calloc@plt+0x2340>
mov    %edi,(%esi)
add    $0x20,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
push   %ebp
mov    $0x80522e0,%eax
push   %edi
push   %esi
push   %ebx
sub    $0x3c,%esp
mov    0x5c(%esp),%ebx
test   %ebx,%ebx
cmove  %eax,%ebx
call   8048e80 <__errno_location@plt>
mov    0x58(%esp),%edx
lea    0x8(%ebx),%ebp
mov    0x4(%ebx),%esi
mov    0x50(%esp),%ecx
mov    %eax,%edi
mov    (%eax),%eax
mov    %eax,0x24(%esp)
xor    %eax,%eax
test   %edx,%edx
sete   %al
mov    0x54(%esp),%edx
or     %eax,%esi
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %edx,(%esp)
xor    %edx,%edx
mov    %eax,0x4(%esp)
xor    %eax,%eax
call   804b2e0 <calloc@plt+0x2340>
lea    0x1(%eax),%edx
mov    %edx,(%esp)
mov    %edx,0x28(%esp)
mov    %eax,0x2c(%esp)
call   804cec0 <calloc@plt+0x3f20>
mov    0x50(%esp),%ecx
mov    0x28(%esp),%edx
mov    %eax,0x20(%esp)
mov    0x2c(%ebx),%eax
mov    %eax,0x14(%esp)
mov    0x28(%ebx),%eax
mov    %esi,0x8(%esp)
mov    0x54(%esp),%esi
mov    %ebp,0xc(%esp)
mov    %eax,0x10(%esp)
mov    (%ebx),%eax
mov    %esi,(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
call   804b2e0 <calloc@plt+0x2340>
mov    0x24(%esp),%ecx
mov    %ecx,(%edi)
mov    0x58(%esp),%ecx
test   %ecx,%ecx
je     804c0f8 <calloc@plt+0x3158>
mov    0x58(%esp),%edi
mov    0x2c(%esp),%eax
mov    %eax,(%edi)
mov    0x20(%esp),%eax
add    $0x3c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,0x8(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804c030 <calloc@plt+0x3090>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    $0x1,%ebx
sub    $0x10,%esp
mov    0x805215c,%edi
mov    0x8052150,%esi
cmp    $0x1,%edi
jbe    804c173 <calloc@plt+0x31d3>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi,%ebx,8),%eax
add    $0x1,%ebx
mov    %eax,(%esp)
call   8048c70 <free@plt>
cmp    %edi,%ebx
jne    804c160 <calloc@plt+0x31c0>
mov    0x4(%esi),%eax
cmp    $0x80521e0,%eax
je     804c199 <calloc@plt+0x31f9>
mov    %eax,(%esp)
call   8048c70 <free@plt>
movl   $0x100,0x8052154
00
movl   $0x80521e0,0x8052158
08
cmp    $0x8052154,%esi
je     804c1b3 <calloc@plt+0x3213>
mov    %esi,(%esp)
call   8048c70 <free@plt>
movl   $0x8052154,0x8052150
08
movl   $0x1,0x805215c
00
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x80522e0,0x4(%esp)
jmp    804bd10 <calloc@plt+0x2d70>
lea    0x0(%esi),%esi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x80522e0,0x4(%esp)
jmp    804bd10 <calloc@plt+0x2d70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x80522e0,0x4(%esp)
jmp    804bd10 <calloc@plt+0x2d70>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x80522e0,0x4(%esp)
jmp    804bd10 <calloc@plt+0x2d70>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804b1c0 <calloc@plt+0x2220>
mov    0x58(%esp),%edx
mov    $0xffffffff,%ecx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804bd10 <calloc@plt+0x2d70>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
push   %ebx
sub    $0x48,%esp
mov    0x54(%esp),%edx
lea    0x10(%esp),%ebx
mov    %ebx,%eax
call   804b1c0 <calloc@plt+0x2220>
mov    0x5c(%esp),%ecx
mov    0x58(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804bd10 <calloc@plt+0x2d70>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804c250 <calloc@plt+0x32b0>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x28(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x24(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,0x4(%esp)
call   804c280 <calloc@plt+0x32e0>
add    $0x1c,%esp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x48,%esp
mov    0x80522e0,%eax
mov    0x58(%esp),%ecx
mov    %eax,0x10(%esp)
mov    0x80522e4,%eax
mov    %ecx,%edx
and    $0x1f,%ecx
shr    $0x5,%dl
movzbl %dl,%edx
mov    %eax,0x14(%esp)
mov    0x80522e8,%eax
mov    %eax,0x18(%esp)
mov    0x80522ec,%eax
mov    %eax,0x1c(%esp)
mov    0x80522f0,%eax
mov    %eax,0x20(%esp)
mov    0x80522f4,%eax
mov    %eax,0x24(%esp)
mov    0x80522f8,%eax
mov    %eax,0x28(%esp)
mov    0x80522fc,%eax
mov    %eax,0x2c(%esp)
mov    0x8052300,%eax
mov    %eax,0x30(%esp)
mov    0x8052304,%eax
mov    %eax,0x34(%esp)
mov    0x8052308,%eax
mov    0x18(%esp,%edx,4),%ebx
mov    %eax,0x38(%esp)
mov    0x805230c,%eax
mov    %eax,0x3c(%esp)
mov    %ebx,%eax
shr    %cl,%eax
xor    $0x1,%eax
and    $0x1,%eax
shl    %cl,%eax
mov    0x54(%esp),%ecx
xor    %ebx,%eax
mov    %eax,0x18(%esp,%edx,4)
mov    0x50(%esp),%edx
lea    0x10(%esp),%eax
mov    %eax,(%esp)
xor    %eax,%eax
call   804bd10 <calloc@plt+0x2d70>
add    $0x48,%esp
pop    %ebx
ret
sub    $0x1c,%esp
movsbl 0x24(%esp),%eax
movl   $0xffffffff,0x4(%esp)
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804c310 <calloc@plt+0x3370>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
sub    $0x1c,%esp
mov    0x20(%esp),%eax
movl   $0x3a,0x8(%esp)
movl   $0xffffffff,0x4(%esp)
mov    %eax,(%esp)
call   804c310 <calloc@plt+0x3370>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
movl   $0x3a,0x8(%esp)
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804c310 <calloc@plt+0x3370>
add    $0x1c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x48,%esp
mov    0x80522e0,%eax
lea    0x10(%esp),%ebx
mov    %ebx,(%esp)
mov    %eax,0x10(%esp)
mov    0x80522e4,%eax
mov    %eax,0x14(%esp)
mov    0x80522e8,%eax
mov    %eax,0x18(%esp)
mov    0x80522ec,%eax
mov    %eax,0x1c(%esp)
mov    0x80522f0,%eax
mov    %eax,0x20(%esp)
mov    0x80522f4,%eax
mov    %eax,0x24(%esp)
mov    0x80522f8,%eax
mov    %eax,0x28(%esp)
mov    0x80522fc,%eax
mov    %eax,0x2c(%esp)
mov    0x8052300,%eax
mov    %eax,0x30(%esp)
mov    0x8052304,%eax
mov    %eax,0x34(%esp)
mov    0x8052308,%eax
mov    %eax,0x38(%esp)
mov    0x805230c,%eax
mov    %eax,0x3c(%esp)
mov    0x58(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x54(%esp),%eax
mov    %eax,0x4(%esp)
call   804bf90 <calloc@plt+0x2ff0>
mov    0x60(%esp),%ecx
mov    0x5c(%esp),%edx
mov    0x50(%esp),%eax
mov    %ebx,(%esp)
call   804bd10 <calloc@plt+0x2d70>
add    $0x48,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0xffffffff,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804c450 <calloc@plt+0x34b0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x38(%esp),%eax
movl   $0xffffffff,0x10(%esp)
movl   $0x0,(%esp)
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804c450 <calloc@plt+0x34b0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
mov    0x3c(%esp),%eax
movl   $0x0,(%esp)
mov    %eax,0x10(%esp)
mov    0x38(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x30(%esp),%eax
mov    %eax,0x4(%esp)
call   804c450 <calloc@plt+0x34b0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    0xc(%esp),%ecx
mov    0x8(%esp),%edx
movl   $0x8052120,0x4(%esp)
jmp    804bd10 <calloc@plt+0x2d70>
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esp),%edx
xor    %eax,%eax
mov    0x8(%esp),%ecx
movl   $0x8052120,0x4(%esp)
jmp    804bd10 <calloc@plt+0x2d70>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
mov    0x4(%esp),%eax
mov    $0xffffffff,%ecx
mov    0x8(%esp),%edx
movl   $0x8052120,0x4(%esp)
jmp    804bd10 <calloc@plt+0x2d70>
lea    0x0(%esi),%esi
mov    0x4(%esp),%edx
mov    $0xffffffff,%ecx
xor    %eax,%eax
movl   $0x8052120,0x4(%esp)
jmp    804bd10 <calloc@plt+0x2d70>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
sub    $0xdc,%esp
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   8049f10 <calloc@plt+0xf70>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   8049f10 <calloc@plt+0xf70>
mov    %ebx,(%esp)
mov    %eax,%esi
call   8049f70 <calloc@plt+0xfd0>
mov    %esi,(%esp)
mov    %eax,%ebp
call   8049f70 <calloc@plt+0xfd0>
cmp    %eax,%ebp
je     804c698 <calloc@plt+0x36f8>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebp,0x8(%esp)
mov    %esi,0x4(%esp)
mov    %ebx,(%esp)
call   8048cc0 <memcmp@plt>
test   %eax,%eax
jne    804c684 <calloc@plt+0x36e4>
mov    0xf0(%esp),%eax
mov    %eax,(%esp)
call   804d240 <calloc@plt+0x42a0>
mov    %eax,%ebx
mov    0xf4(%esp),%eax
mov    %eax,(%esp)
call   804d240 <calloc@plt+0x42a0>
mov    %ebx,0x4(%esp)
movl   $0x3,(%esp)
mov    %eax,%esi
lea    0x10(%esp),%eax
mov    %eax,0x8(%esp)
call   8048f60 <__xstat64@plt>
test   %eax,%eax
je     804c70d <calloc@plt+0x376d>
call   8048e80 <__errno_location@plt>
mov    %ebx,0xc(%esp)
movl   $0x804e285,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048d80 <error@plt>
lea    0x70(%esp),%eax
mov    %eax,0x8(%esp)
mov    %esi,0x4(%esp)
movl   $0x3,(%esp)
call   8048f60 <__xstat64@plt>
test   %eax,%eax
jne    804c768 <calloc@plt+0x37c8>
mov    0x68(%esp),%ecx
xor    %edi,%edi
mov    0x6c(%esp),%eax
xor    0xcc(%esp),%eax
xor    0xc8(%esp),%ecx
or     %ecx,%eax
je     804c790 <calloc@plt+0x37f0>
mov    %ebx,(%esp)
call   8048c70 <free@plt>
mov    %esi,(%esp)
call   8048c70 <free@plt>
add    $0xdc,%esp
mov    %edi,%eax
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
call   8048e80 <__errno_location@plt>
mov    %esi,0xc(%esp)
movl   $0x804e285,0x8(%esp)
mov    (%eax),%eax
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048d80 <error@plt>
jmp    804c729 <calloc@plt+0x3789>
lea    0x0(%esi),%esi
mov    0x10(%esp),%edx
mov    0x14(%esp),%eax
xor    0x74(%esp),%eax
xor    0x70(%esp),%edx
or     %eax,%edx
sete   %al
mov    %eax,%edi
jmp    804c745 <calloc@plt+0x37a5>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x5c,%esp
mov    0x74(%esp),%eax
mov    0x70(%esp),%esi
mov    0x78(%esp),%edx
mov    0x7c(%esp),%ecx
test   %eax,%eax
mov    0x80(%esp),%ebx
mov    0x84(%esp),%edi
je     804cc68 <calloc@plt+0x3cc8>
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
movl   $0x804e6c4,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f20 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e6d7,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
movl   $0x7dd,0x10(%esp)
movl   $0x804e960,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %eax,0xc(%esp)
call   8048f20 <__fprintf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e734,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e00 <fputs_unlocked@plt>
cmp    $0x9,%edi
ja     804cc90 <calloc@plt+0x3cf0>
jmp    *0x804e938(,%edi,4)
lea    0x0(%esi,%eiz,1),%esi
mov    0x18(%ebx),%edx
mov    0xc(%ebx),%edi
mov    0x1c(%ebx),%ecx
mov    0x10(%ebx),%eax
mov    %edx,0x44(%esp)
mov    0x8(%ebx),%edx
mov    0x14(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e898,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x48(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x38(%esp)
call   8048cd0 <dcgettext@plt>
mov    0x48(%esp),%ecx
mov    0x44(%esp),%edx
mov    %ebp,0x20(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x28(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x24(%esp)
mov    0x40(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x1c(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x14(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
mov    %ecx,0x18(%esp)
call   8048f20 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
mov    0x1c(%ebx),%edx
mov    0x14(%ebx),%eax
mov    0x10(%ebx),%edi
mov    0x20(%ebx),%ecx
mov    %edx,0x48(%esp)
mov    0xc(%ebx),%edx
mov    %eax,0x38(%esp)
mov    0x8(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %edi,0x3c(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e8c8,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x4c(%esp)
mov    %edx,0x40(%esp)
mov    %eax,0x44(%esp)
call   8048cd0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x40(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x3c(%esp),%ecx
mov    %edx,0x18(%esp)
mov    %ecx,0x1c(%esp)
mov    0x44(%esp),%ecx
mov    %ecx,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %esi,(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
call   8048f20 <__fprintf_chk@plt>
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
call   8048f50 <abort@plt>
lea    0x0(%esi),%esi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e6db,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048f20 <__fprintf_chk@plt>
xchg   %ax,%ax
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e6eb,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048f20 <__fprintf_chk@plt>
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e702,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %ebp,0x84(%esp)
mov    %edi,0x80(%esp)
mov    %ebx,0x7c(%esp)
mov    %esi,0x70(%esp)
movl   $0x1,0x74(%esp)
mov    %eax,0x78(%esp)
add    $0x5c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048f20 <__fprintf_chk@plt>
lea    0x0(%esi),%esi
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e800,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x38(%esp)
call   8048cd0 <dcgettext@plt>
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ebx,0xc(%esp)
mov    %edx,0x18(%esp)
movl   $0x1,0x4(%esp)
mov    %eax,0x8(%esp)
mov    %esi,(%esp)
call   8048f20 <__fprintf_chk@plt>
jmp    804c90f <calloc@plt+0x396f>
mov    0x10(%ebx),%ecx
mov    0xc(%ebx),%edx
mov    0x8(%ebx),%ebp
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e820,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x3c(%esp)
mov    %edx,0x38(%esp)
call   8048cd0 <dcgettext@plt>
mov    0x3c(%esp),%ecx
mov    0x38(%esp),%edx
mov    %ebp,0x14(%esp)
mov    %edi,0x10(%esp)
mov    %ecx,0x1c(%esp)
mov    %edx,0x18(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f20 <__fprintf_chk@plt>
jmp    804c90f <calloc@plt+0x396f>
nop
mov    0x14(%ebx),%ecx
mov    0x10(%ebx),%edx
mov    0x4(%ebx),%eax
mov    0xc(%ebx),%ebp
mov    0x8(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e844,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x40(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048cd0 <dcgettext@plt>
mov    0x40(%esp),%ecx
mov    0x3c(%esp),%edx
mov    %ebp,0x18(%esp)
mov    %edi,0x14(%esp)
mov    %ecx,0x20(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f20 <__fprintf_chk@plt>
jmp    804c90f <calloc@plt+0x396f>
xchg   %ax,%ax
mov    0x14(%ebx),%edx
mov    0x18(%ebx),%ecx
mov    0x8(%ebx),%eax
mov    0x10(%ebx),%ebp
mov    %edx,0x40(%esp)
mov    0x4(%ebx),%edx
mov    0xc(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e86c,0x4(%esp)
movl   $0x0,(%esp)
mov    %ecx,0x44(%esp)
mov    %edx,0x3c(%esp)
mov    %eax,0x38(%esp)
call   8048cd0 <dcgettext@plt>
mov    0x44(%esp),%ecx
mov    0x40(%esp),%edx
mov    %ebp,0x1c(%esp)
mov    %edi,0x18(%esp)
mov    %ecx,0x24(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x20(%esp)
mov    0x3c(%esp),%edx
mov    %ebx,0xc(%esp)
mov    %eax,0x8(%esp)
mov    %ecx,0x14(%esp)
mov    %edx,0x10(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f20 <__fprintf_chk@plt>
jmp    804c90f <calloc@plt+0x396f>
lea    0x0(%esi),%esi
mov    %ecx,0x10(%esp)
mov    %edx,0xc(%esp)
movl   $0x804e6d0,0x8(%esp)
movl   $0x1,0x4(%esp)
mov    %esi,(%esp)
call   8048f20 <__fprintf_chk@plt>
jmp    804c801 <calloc@plt+0x3861>
lea    0x0(%esi),%esi
mov    0x10(%ebx),%edi
mov    0x14(%ebx),%eax
mov    0x20(%ebx),%ecx
mov    0x1c(%ebx),%edx
mov    %edi,0x3c(%esp)
mov    0x8(%ebx),%edi
mov    %eax,0x38(%esp)
mov    0xc(%ebx),%eax
mov    0x18(%ebx),%ebp
mov    %ecx,0x4c(%esp)
mov    %edi,0x44(%esp)
mov    0x4(%ebx),%edi
mov    (%ebx),%ebx
movl   $0x5,0x8(%esp)
movl   $0x804e8fc,0x4(%esp)
movl   $0x0,(%esp)
mov    %edx,0x48(%esp)
mov    %eax,0x40(%esp)
call   8048cd0 <dcgettext@plt>
mov    0x4c(%esp),%ecx
mov    0x48(%esp),%edx
mov    %ebp,0x24(%esp)
mov    %ecx,0x2c(%esp)
mov    0x38(%esp),%ecx
mov    %edx,0x28(%esp)
mov    0x3c(%esp),%edx
mov    %ecx,0x20(%esp)
mov    0x40(%esp),%ecx
mov    %edx,0x1c(%esp)
mov    0x44(%esp),%edx
mov    %ecx,0x18(%esp)
mov    %edx,0x14(%esp)
jmp    804c99a <calloc@plt+0x39fa>
mov    %esi,%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
xor    %eax,%eax
mov    0x40(%esp),%edx
mov    (%edx),%ecx
test   %ecx,%ecx
je     804cd3a <calloc@plt+0x3d9a>
nop
add    $0x1,%eax
mov    (%edx,%eax,4),%ecx
test   %ecx,%ecx
jne    804cd30 <calloc@plt+0x3d90>
mov    %eax,0x14(%esp)
mov    0x3c(%esp),%eax
mov    %edx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804c7b0 <calloc@plt+0x3810>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
push   %ebx
xor    %eax,%eax
sub    $0x58,%esp
mov    0x70(%esp),%ebx
lea    0x28(%esp),%ecx
xchg   %ax,%ax
mov    (%ebx,%eax,4),%edx
test   %edx,%edx
mov    %edx,(%ecx,%eax,4)
je     804cd92 <calloc@plt+0x3df2>
add    $0x1,%eax
cmp    $0xa,%eax
jne    804cd80 <calloc@plt+0x3de0>
mov    %eax,0x14(%esp)
mov    0x6c(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %eax,0xc(%esp)
mov    0x68(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x64(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x60(%esp),%eax
mov    %eax,(%esp)
call   804c7b0 <calloc@plt+0x3810>
add    $0x58,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
sub    $0x2c,%esp
lea    0x40(%esp),%eax
mov    %eax,0x10(%esp)
mov    0x3c(%esp),%eax
mov    %eax,0xc(%esp)
mov    0x38(%esp),%eax
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804cd70 <calloc@plt+0x3dd0>
add    $0x2c,%esp
ret
lea    0x0(%esi),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
movl   $0x5,0x8(%esp)
movl   $0x804e71e,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
movl   $0x804e0bd,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ea0 <__printf_chk@plt>
movl   $0x5,0x8(%esp)
movl   $0x804e0d3,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
movl   $0x804df84,0xc(%esp)
movl   $0x804e0e7,0x8(%esp)
movl   $0x1,(%esp)
mov    %eax,0x4(%esp)
call   8048ea0 <__printf_chk@plt>
mov    0x80521c0,%ebx
movl   $0x5,0x8(%esp)
movl   $0x804dfac,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048e00 <fputs_unlocked@plt>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048db0 <malloc@plt>
test   %eax,%eax
je     804ced9 <calloc@plt+0x3f39>
add    $0x18,%esp
pop    %ebx
ret
test   %ebx,%ebx
je     804ced4 <calloc@plt+0x3f34>
lea    0x0(%esi),%esi
call   804d130 <calloc@plt+0x4190>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
xor    %edx,%edx
sub    $0x8,%esp
mov    $0xffffffff,%eax
mov    0x14(%esp),%ecx
mov    0x10(%esp),%ebx
div    %ecx
cmp    %ebx,%eax
jb     804cf19 <calloc@plt+0x3f79>
imul   %ebx,%ecx
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804cec0 <calloc@plt+0x3f20>
call   804d130 <calloc@plt+0x4190>
xchg   %ax,%ax
jmp    804cec0 <calloc@plt+0x3f20>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    0x20(%esp),%eax
test   %ebx,%ebx
je     804cf58 <calloc@plt+0x3fb8>
mov    %ebx,0x4(%esp)
mov    %eax,(%esp)
call   8048da0 <realloc@plt>
test   %eax,%eax
je     804cf6b <calloc@plt+0x3fcb>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi),%esi
test   %eax,%eax
je     804cf40 <calloc@plt+0x3fa0>
mov    %eax,(%esp)
call   8048c70 <free@plt>
add    $0x18,%esp
xor    %eax,%eax
pop    %ebx
ret
test   %ebx,%ebx
je     804cf50 <calloc@plt+0x3fb0>
call   804d130 <calloc@plt+0x4190>
lea    0x0(%esi),%esi
lea    0x0(%edi),%edi
push   %esi
xor    %edx,%edx
push   %ebx
mov    $0xffffffff,%eax
sub    $0x4,%esp
mov    0x18(%esp),%ecx
mov    0x14(%esp),%ebx
mov    0x10(%esp),%esi
div    %ecx
cmp    %ebx,%eax
jb     804cfb3 <calloc@plt+0x4013>
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
add    $0x4,%esp
pop    %ebx
pop    %esi
jmp    804cf30 <calloc@plt+0x3f90>
call   804d130 <calloc@plt+0x4190>
nop
lea    0x0(%esi,%eiz,1),%esi
push   %edi
push   %esi
push   %ebx
mov    0x10(%esp),%esi
mov    0x14(%esp),%edi
mov    0x18(%esp),%ebx
test   %esi,%esi
mov    (%edi),%ecx
je     804d000 <calloc@plt+0x4060>
xor    %edx,%edx
mov    $0xaaaaaaaa,%eax
div    %ebx
cmp    %eax,%ecx
jae    804d018 <calloc@plt+0x4078>
lea    0x1(%ecx),%eax
shr    %eax
add    %eax,%ecx
mov    %ecx,(%edi)
imul   %ebx,%ecx
mov    %esi,0x10(%esp)
mov    %ecx,0x14(%esp)
pop    %ebx
pop    %esi
pop    %edi
jmp    804cf30 <calloc@plt+0x3f90>
xchg   %ax,%ax
test   %ecx,%ecx
jne    804cfe9 <calloc@plt+0x4049>
xor    %edx,%edx
mov    $0x40,%eax
div    %ebx
xor    %ecx,%ecx
test   %eax,%eax
sete   %cl
add    %eax,%ecx
jmp    804cfe9 <calloc@plt+0x4049>
call   804d130 <calloc@plt+0x4190>
lea    0x0(%esi),%esi
push   %ebx
sub    $0x8,%esp
mov    0x10(%esp),%ecx
mov    0x14(%esp),%ebx
test   %ecx,%ecx
mov    (%ebx),%eax
je     804d058 <calloc@plt+0x40b8>
cmp    $0xaaaaaaa9,%eax
ja     804d064 <calloc@plt+0x40c4>
lea    0x1(%eax),%edx
shr    %edx
add    %edx,%eax
mov    %eax,(%ebx)
mov    %eax,0x14(%esp)
mov    %ecx,0x10(%esp)
add    $0x8,%esp
pop    %ebx
jmp    804cf30 <calloc@plt+0x3f90>
nop
lea    0x0(%esi,%eiz,1),%esi
test   %eax,%eax
mov    $0x40,%edx
cmove  %edx,%eax
jmp    804d040 <calloc@plt+0x40a0>
call   804d130 <calloc@plt+0x4190>
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   804cec0 <calloc@plt+0x3f20>
mov    %ebx,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048e60 <memset@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
sub    $0x1c,%esp
mov    0x24(%esp),%eax
mov    %eax,0x4(%esp)
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   8048fa0 <calloc@plt>
test   %eax,%eax
je     804d0bf <calloc@plt+0x411f>
add    $0x1c,%esp
ret
nop
call   804d130 <calloc@plt+0x4190>
lea    0x0(%esi,%eiz,1),%esi
lea    0x0(%edi,%eiz,1),%edi
push   %ebx
sub    $0x18,%esp
mov    0x24(%esp),%ebx
mov    %ebx,(%esp)
call   804cec0 <calloc@plt+0x3f20>
mov    0x20(%esp),%edx
mov    %ebx,0x8(%esp)
mov    %edx,0x4(%esp)
mov    %eax,(%esp)
call   8048c80 <memcpy@plt>
add    $0x18,%esp
pop    %ebx
ret
lea    0x0(%esi,%eiz,1),%esi
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048e40 <strlen@plt>
mov    %ebx,(%esp)
add    $0x1,%eax
mov    %eax,0x4(%esp)
call   804d0d0 <calloc@plt+0x4130>
add    $0x18,%esp
pop    %ebx
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
movl   $0x5,0x8(%esp)
movl   $0x804e98f,0x4(%esp)
movl   $0x0,(%esp)
call   8048cd0 <dcgettext@plt>
mov    0x805210c,%edx
movl   $0x804e285,0x8(%esp)
movl   $0x0,0x4(%esp)
mov    %edx,(%esp)
mov    %eax,0xc(%esp)
call   8048d80 <error@plt>
call   8048f50 <abort@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
sub    $0x18,%esp
movl   $0x0,0x4(%esp)
movl   $0x0,(%esp)
call   8048e20 <getcwd@plt>
test   %eax,%eax
mov    %eax,%ebx
je     804d1a8 <calloc@plt+0x4208>
add    $0x18,%esp
mov    %ebx,%eax
pop    %ebx
ret
lea    0x0(%esi),%esi
call   8048e80 <__errno_location@plt>
cmpl   $0xc,(%eax)
jne    804d19e <calloc@plt+0x41fe>
call   804d130 <calloc@plt+0x4190>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%esi
mov    %esi,(%esp)
call   8048d50 <__fpending@plt>
mov    (%esi),%ebx
mov    %esi,(%esp)
and    $0x20,%ebx
mov    %eax,%edi
call   804d710 <calloc@plt+0x4770>
test   %eax,%eax
setne  %dl
test   %ebx,%ebx
jne    804d200 <calloc@plt+0x4260>
test   %dl,%dl
je     804d1f7 <calloc@plt+0x4257>
test   %edi,%edi
mov    $0xffffffff,%ebx
je     804d220 <calloc@plt+0x4280>
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
test   %dl,%dl
mov    $0xffffffff,%ebx
jne    804d1f7 <calloc@plt+0x4257>
call   8048e80 <__errno_location@plt>
movl   $0x0,(%eax)
add    $0x10,%esp
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi),%esi
call   8048e80 <__errno_location@plt>
xor    %ebx,%ebx
cmpl   $0x9,(%eax)
setne  %bl
add    $0x10,%esp
neg    %ebx
mov    %ebx,%eax
pop    %ebx
pop    %esi
pop    %edi
ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
sub    $0x1c,%esp
mov    0x20(%esp),%eax
mov    %eax,(%esp)
call   804d2b0 <calloc@plt+0x4310>
test   %eax,%eax
je     804d257 <calloc@plt+0x42b7>
add    $0x1c,%esp
ret
call   804d130 <calloc@plt+0x4190>
xchg   %ax,%ax
xchg   %ax,%ax
push   %esi
xor    %eax,%eax
push   %ebx
sub    $0x14,%esp
mov    0x20(%esp),%ebx
cmpb   $0x2f,(%ebx)
mov    %ebx,(%esp)
sete   %al
mov    %eax,%esi
call   8049f10 <calloc@plt+0xf70>
mov    %eax,%ecx
sub    %ebx,%ecx
cmp    %esi,%ecx
jbe    804d2a8 <calloc@plt+0x4308>
cmpb   $0x2f,-0x1(%eax)
lea    -0x1(%ecx),%edx
je     804d29c <calloc@plt+0x42fc>
jmp    804d2a8 <calloc@plt+0x4308>
xchg   %ax,%ax
cmpb   $0x2f,-0x1(%ebx,%edx,1)
lea    -0x1(%edx),%eax
jne    804d2a0 <calloc@plt+0x4300>
mov    %eax,%edx
cmp    %edx,%esi
jb     804d290 <calloc@plt+0x42f0>
add    $0x14,%esp
mov    %edx,%eax
pop    %ebx
pop    %esi
ret
mov    %ecx,%edx
jmp    804d2a0 <calloc@plt+0x4300>
lea    0x0(%esi,%eiz,1),%esi
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%eax
mov    %eax,(%esp)
call   804d260 <calloc@plt+0x42c0>
test   %eax,%eax
mov    %eax,%ebx
sete   %al
mov    %eax,%esi
movzbl %al,%eax
lea    0x1(%ebx),%ebp
add    %ebp,%eax
mov    %eax,(%esp)
call   8048db0 <malloc@plt>
test   %eax,%eax
mov    %eax,%edi
je     804d318 <calloc@plt+0x4378>
mov    0x30(%esp),%eax
mov    %ebx,0x8(%esp)
mov    %edi,(%esp)
mov    %eax,0x4(%esp)
call   8048c80 <memcpy@plt>
mov    %esi,%eax
test   %al,%al
jne    804d310 <calloc@plt+0x4370>
movb   $0x0,(%edi,%ebx,1)
mov    %edi,%eax
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
lea    0x0(%esi),%esi
movb   $0x2e,(%edi,%ebx,1)
mov    %ebp,%ebx
jmp    804d2fc <calloc@plt+0x435c>
xor    %eax,%eax
jmp    804d302 <calloc@plt+0x4362>
xchg   %ax,%ax
xchg   %ax,%ax
mov    0x4(%esp),%edx
movsbl (%edx),%ecx
test   %cl,%cl
je     804d348 <calloc@plt+0x43a8>
xor    %eax,%eax
lea    0x0(%esi),%esi
ror    $0x17,%eax
add    $0x1,%edx
add    %ecx,%eax
movsbl (%edx),%ecx
test   %cl,%cl
jne    804d330 <calloc@plt+0x4390>
xor    %edx,%edx
divl   0x8(%esp)
mov    %edx,%eax
ret
xor    %edx,%edx
jmp    804d345 <calloc@plt+0x43a5>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x9c,%esp
movl   $0xe,(%esp)
mov    %gs:0x14,%eax
mov    %eax,0x8c(%esp)
xor    %eax,%eax
call   8048ed0 <nl_langinfo@plt>
mov    0x8052310,%ebp
test   %eax,%eax
mov    %eax,%ebx
mov    $0x804e71d,%eax
cmove  %eax,%ebx
test   %ebp,%ebp
je     804d41c <calloc@plt+0x447c>
movzbl 0x0(%ebp),%esi
mov    %esi,%eax
test   %al,%al
je     804d3e7 <calloc@plt+0x4447>
mov    %ebx,%edi
mov    %esi,%ebx
jmp    804d3c0 <calloc@plt+0x4420>
nop
mov    %ebp,(%esp)
call   8048e40 <strlen@plt>
lea    0x1(%ebp,%eax,1),%esi
mov    %esi,(%esp)
call   8048e40 <strlen@plt>
lea    0x1(%esi,%eax,1),%ebp
movzbl 0x0(%ebp),%ebx
test   %bl,%bl
je     804d418 <calloc@plt+0x4478>
mov    %ebp,0x4(%esp)
mov    %edi,(%esp)
call   8048c20 <strcmp@plt>
test   %eax,%eax
je     804d3db <calloc@plt+0x443b>
cmp    $0x2a,%bl
jne    804d3a0 <calloc@plt+0x4400>
cmpb   $0x0,0x1(%ebp)
jne    804d3a0 <calloc@plt+0x4400>
mov    %ebp,(%esp)
call   8048e40 <strlen@plt>
lea    0x1(%ebp,%eax,1),%ebx
cmpb   $0x0,(%ebx)
mov    $0x804e9a9,%eax
cmove  %eax,%ebx
mov    0x8c(%esp),%ecx
xor    %gs:0x14,%ecx
mov    %ebx,%eax
jne    804d6dd <calloc@plt+0x473d>
add    $0x9c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,%ebx
jmp    804d3e7 <calloc@plt+0x4447>
movl   $0x804e9af,(%esp)
call   8048d90 <getenv@plt>
test   %eax,%eax
je     804d435 <calloc@plt+0x4495>
cmpb   $0x0,(%eax)
jne    804d643 <calloc@plt+0x46a3>
mov    $0x7,%eax
mov    $0x8,%esi
mov    $0x804e9a0,%ecx
cmpb   $0x2f,(%ecx,%eax,1)
mov    $0x1,%edi
movl   $0x1,0x10(%esp)
je     804d634 <calloc@plt+0x4694>
add    %esi,%edi
lea    0xe(%edi),%eax
mov    %eax,(%esp)
mov    %ecx,0x18(%esp)
call   8048db0 <malloc@plt>
test   %eax,%eax
mov    %eax,0x14(%esp)
je     804d6d3 <calloc@plt+0x4733>
mov    0x18(%esp),%ecx
mov    %esi,0x8(%esp)
mov    %eax,(%esp)
mov    %ecx,0x4(%esp)
call   8048c80 <memcpy@plt>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804d49c <calloc@plt+0x44fc>
mov    0x14(%esp),%eax
movb   $0x2f,(%eax,%esi,1)
mov    0x14(%esp),%eax
mov    $0x73,%ecx
add    %eax,%edi
movl   $0x72616863,(%edi)
movl   $0x2e746573,0x4(%edi)
movl   $0x61696c61,0x8(%edi)
mov    %cx,0xc(%edi)
movl   $0x20000,0x4(%esp)
mov    %eax,(%esp)
call   8048c30 <open64@plt>
test   %eax,%eax
mov    %eax,%edi
js     804d618 <calloc@plt+0x4678>
movl   $0x804e27f,0x4(%esp)
mov    %eax,(%esp)
call   8048df0 <fdopen@plt>
test   %eax,%eax
mov    %eax,%esi
je     804d610 <calloc@plt+0x4670>
movl   $0x0,0x10(%esp)
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804d5f6 <calloc@plt+0x4656>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0x20,%eax
je     804d500 <calloc@plt+0x4560>
lea    -0x9(%eax),%edx
cmp    $0x1,%edx
jbe    804d500 <calloc@plt+0x4560>
cmp    $0x23,%eax
je     804d66d <calloc@plt+0x46cd>
mov    %esi,0x4(%esp)
mov    %eax,(%esp)
call   8048e70 <ungetc@plt>
lea    0x59(%esp),%eax
mov    %eax,0xc(%esp)
lea    0x26(%esp),%eax
mov    %eax,0x8(%esp)
movl   $0x804e9bf,0x4(%esp)
mov    %esi,(%esp)
call   8048e30 <fscanf@plt>
cmp    $0x1,%eax
jle    804d690 <calloc@plt+0x46f0>
lea    0x26(%esp),%eax
mov    %eax,(%esp)
call   8048e40 <strlen@plt>
mov    %eax,0x18(%esp)
lea    0x59(%esp),%eax
mov    %eax,(%esp)
call   8048e40 <strlen@plt>
mov    0x10(%esp),%edx
mov    %eax,%ecx
mov    0x18(%esp),%eax
mov    %ecx,0x1c(%esp)
add    %ecx,%eax
test   %edx,%edx
jne    804d6ae <calloc@plt+0x470e>
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,(%esp)
mov    %ecx,0x10(%esp)
call   8048db0 <malloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
test   %edi,%edi
je     804d6e2 <calloc@plt+0x4742>
mov    0x10(%esp),%ebp
lea    0x26(%esp),%eax
mov    %eax,0x4(%esp)
sub    %ecx,%ebp
mov    %ebp,%eax
sub    0x18(%esp),%eax
lea    -0x2(%edi,%eax,1),%eax
mov    %eax,(%esp)
call   8048d40 <strcpy@plt>
lea    0x59(%esp),%eax
mov    %eax,0x4(%esp)
lea    -0x1(%edi,%ebp,1),%eax
mov    %edi,%ebp
mov    %eax,(%esp)
call   8048d40 <strcpy@plt>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jb     804d50c <calloc@plt+0x456c>
mov    %esi,(%esp)
call   8048eb0 <__uflow@plt>
cmp    $0xffffffff,%eax
je     804d690 <calloc@plt+0x46f0>
jmp    804d515 <calloc@plt+0x4575>
lea    0x0(%esi,%eiz,1),%esi
mov    %edi,(%esp)
call   8048f80 <close@plt>
mov    $0x804e71d,%ebp
mov    0x14(%esp),%eax
mov    %eax,(%esp)
call   8048c70 <free@plt>
mov    %ebp,0x8052310
jmp    804d38f <calloc@plt+0x43ef>
xor    %edi,%edi
movl   $0x0,0x10(%esp)
jmp    804d45b <calloc@plt+0x44bb>
mov    %eax,(%esp)
mov    %eax,0x10(%esp)
call   8048e40 <strlen@plt>
mov    0x10(%esp),%ecx
test   %eax,%eax
mov    %eax,%esi
je     804d634 <calloc@plt+0x4694>
lea    -0x1(%eax),%eax
jmp    804d444 <calloc@plt+0x44a4>
lea    0x0(%esi,%eiz,1),%esi
cmp    $0xffffffff,%eax
je     804d687 <calloc@plt+0x46e7>
mov    0x4(%esi),%eax
cmp    0x8(%esi),%eax
jae    804d6fc <calloc@plt+0x475c>
lea    0x1(%eax),%edx
mov    %edx,0x4(%esi)
movzbl (%eax),%eax
cmp    $0xa,%eax
jne    804d668 <calloc@plt+0x46c8>
cmp    $0xffffffff,%eax
jne    804d500 <calloc@plt+0x4560>
mov    %esi,(%esp)
call   804d710 <calloc@plt+0x4770>
mov    0x10(%esp),%eax
test   %eax,%eax
je     804d618 <calloc@plt+0x4678>
movb   $0x0,0x0(%ebp,%eax,1)
jmp    804d61d <calloc@plt+0x467d>
add    0x10(%esp),%eax
mov    %ebp,(%esp)
lea    0x2(%eax),%ecx
add    $0x3,%eax
mov    %eax,0x4(%esp)
mov    %ecx,0x10(%esp)
call   8048da0 <realloc@plt>
mov    0x1c(%esp),%ecx
mov    %eax,%edi
jmp    804d5ac <calloc@plt+0x460c>
mov    $0x804e71d,%ebp
jmp    804d629 <calloc@plt+0x4689>
call   8048ce0 <__stack_chk_fail@plt>
mov    %ebp,(%esp)
mov    $0x804e71d,%ebp
call   8048c70 <free@plt>
mov    %esi,(%esp)
call   804d710 <calloc@plt+0x4770>
jmp    804d61d <calloc@plt+0x467d>
mov    %esi,(%esp)
call   8048eb0 <__uflow@plt>
jmp    804d682 <calloc@plt+0x46e2>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %edi
push   %esi
push   %ebx
sub    $0x10,%esp
mov    0x20(%esp),%ebx
mov    %ebx,(%esp)
call   8048e90 <fileno@plt>
test   %eax,%eax
js     804d798 <calloc@plt+0x47f8>
mov    %ebx,(%esp)
call   8048dc0 <__freading@plt>
test   %eax,%eax
jne    804d768 <calloc@plt+0x47c8>
mov    %ebx,(%esp)
call   804d7b0 <calloc@plt+0x4810>
test   %eax,%eax
je     804d798 <calloc@plt+0x47f8>
call   8048e80 <__errno_location@plt>
mov    (%eax),%edi
mov    %eax,%esi
mov    %ebx,(%esp)
call   8048ca0 <fclose@plt>
test   %edi,%edi
je     804d75a <calloc@plt+0x47ba>
mov    %edi,(%esi)
mov    $0xffffffff,%eax
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
ret
lea    0x0(%esi,%eiz,1),%esi
mov    %ebx,(%esp)
call   8048e90 <fileno@plt>
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
mov    %eax,(%esp)
call   8048f10 <lseek64@plt>
and    %edx,%eax
cmp    $0xffffffff,%eax
jne    804d732 <calloc@plt+0x4792>
nop
mov    %ebx,0x20(%esp)
add    $0x10,%esp
pop    %ebx
pop    %esi
pop    %edi
jmp    8048ca0 <fclose@plt>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebx
sub    $0x18,%esp
mov    0x20(%esp),%ebx
test   %ebx,%ebx
je     804d7c8 <calloc@plt+0x4828>
mov    %ebx,(%esp)
call   8048dc0 <__freading@plt>
test   %eax,%eax
jne    804d7d8 <calloc@plt+0x4838>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048c40 <fflush@plt>
lea    0x0(%esi),%esi
testl  $0x100,(%ebx)
je     804d7c8 <calloc@plt+0x4828>
mov    %ebx,(%esp)
movl   $0x1,0xc(%esp)
movl   $0x0,0x4(%esp)
movl   $0x0,0x8(%esp)
call   804d810 <calloc@plt+0x4870>
mov    %ebx,0x20(%esp)
add    $0x18,%esp
pop    %ebx
jmp    8048c40 <fflush@plt>
xchg   %ax,%ax
nop
push   %ebp
push   %edi
push   %esi
push   %ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebx
mov    0x34(%esp),%esi
mov    0x38(%esp),%edi
mov    0x3c(%esp),%ebp
mov    0x4(%ebx),%eax
cmp    %eax,0x8(%ebx)
je     804d850 <calloc@plt+0x48b0>
mov    %ebp,0x3c(%esp)
mov    %esi,0x34(%esp)
mov    %edi,0x38(%esp)
mov    %ebx,0x30(%esp)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
jmp    8048cb0 <fseeko64@plt>
nop
lea    0x0(%esi,%eiz,1),%esi
mov    0x10(%ebx),%eax
cmp    %eax,0x14(%ebx)
jne    804d82f <calloc@plt+0x488f>
mov    0x24(%ebx),%eax
test   %eax,%eax
jne    804d82f <calloc@plt+0x488f>
mov    %ebx,(%esp)
call   8048e90 <fileno@plt>
mov    %ebp,0xc(%esp)
mov    %esi,0x4(%esp)
mov    %edi,0x8(%esp)
mov    %eax,(%esp)
call   8048f10 <lseek64@plt>
mov    %eax,%ecx
and    %edx,%ecx
cmp    $0xffffffff,%ecx
je     804d897 <calloc@plt+0x48f7>
andl   $0xffffffef,(%ebx)
mov    %eax,0x4c(%ebx)
xor    %eax,%eax
mov    %edx,0x50(%ebx)
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
or     $0xffffffff,%eax
jmp    804d88f <calloc@plt+0x48ef>
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebp
push   %edi
push   %esi
sub    $0x14,%esp
mov    0x28(%esp),%eax
mov    0x24(%esp),%ecx
mov    0x2c(%esp),%esi
mov    %eax,%edi
mov    %eax,0x4(%esp)
mov    0x30(%esp),%eax
mov    %ecx,0x10(%esp)
mov    %esi,(%esp)
mov    %ecx,0x8(%esp)
test   %eax,%eax
mov    %eax,%edx
mov    %edi,0xc(%esp)
jne    804d8e8 <calloc@plt+0x4948>
cmp    %edi,%esi
jbe    804d920 <calloc@plt+0x4980>
mov    %ecx,%eax
mov    %edi,%edx
div    %esi
mov    %edx,%eax
xor    %edx,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
xchg   %ax,%ax
cmp    %edi,%eax
ja     804d940 <calloc@plt+0x49a0>
bsr    %eax,%ebp
xor    $0x1f,%ebp
jne    804d950 <calloc@plt+0x49b0>
mov    0x8(%esp),%edi
cmp    %edi,(%esp)
ja     804d9e8 <calloc@plt+0x4a48>
mov    0x4(%esp),%edi
sub    %esi,%ecx
sbb    %eax,%edi
mov    %ecx,0x8(%esp)
mov    %edi,0xc(%esp)
mov    0x8(%esp),%eax
mov    0xc(%esp),%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
test   %esi,%esi
mov    %esi,%ebp
jne    804d931 <calloc@plt+0x4991>
mov    $0x1,%eax
xor    %edx,%edx
div    %esi
mov    %eax,%ebp
mov    0x4(%esp),%eax
xor    %edx,%edx
div    %ebp
mov    %ecx,%eax
div    %ebp
jmp    804d8db <calloc@plt+0x493b>
nop
mov    %ecx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
lea    0x0(%esi,%eiz,1),%esi
mov    (%esp),%eax
mov    $0x20,%esi
mov    %ebp,%ecx
sub    %ebp,%esi
shl    %cl,%edx
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
mov    %eax,0x4(%esp)
mov    (%esp),%eax
or     %edx,0x4(%esp)
mov    %edi,%edx
shl    %cl,%eax
mov    %esi,%ecx
mov    %eax,0x8(%esp)
mov    0x10(%esp),%eax
shr    %cl,%edx
mov    %ebp,%ecx
shl    %cl,%edi
mov    %esi,%ecx
shr    %cl,%eax
mov    %ebp,%ecx
or     %edi,%eax
mov    0x10(%esp),%edi
divl   0x4(%esp)
shl    %cl,%edi
mov    %edi,0xc(%esp)
mov    %edx,%edi
mull   0x8(%esp)
cmp    %edx,%edi
mov    %eax,%ecx
mov    %edx,(%esp)
jb     804d9d4 <calloc@plt+0x4a34>
cmp    %eax,0xc(%esp)
jb     804d9d0 <calloc@plt+0x4a30>
mov    0xc(%esp),%eax
sub    %ecx,%eax
sbb    %edx,%edi
mov    %ebp,%ecx
mov    %edi,%edx
shr    %cl,%eax
mov    %esi,%ecx
shl    %cl,%edx
mov    %ebp,%ecx
shr    %cl,%edi
or     %edx,%eax
mov    %edi,%edx
add    $0x14,%esp
pop    %esi
pop    %edi
pop    %ebp
ret
nop
cmp    %edx,%edi
jne    804d9ae <calloc@plt+0x4a0e>
mov    (%esp),%edx
mov    %eax,%ecx
sub    0x8(%esp),%ecx
sbb    0x4(%esp),%edx
jmp    804d9ae <calloc@plt+0x4a0e>
nop
lea    0x0(%esi,%eiz,1),%esi
cmp    0xc(%esp),%eax
jb     804d901 <calloc@plt+0x4961>
jmp    804d911 <calloc@plt+0x4971>
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
nop
push   %ebp
push   %edi
xor    %edi,%edi
push   %esi
push   %ebx
call   8049310 <calloc@plt+0x370>
add    $0x45f5,%ebx
sub    $0x1c,%esp
mov    0x30(%esp),%ebp
lea    -0xf4(%ebx),%esi
call   8048be4 <strcmp@plt-0x3c>
lea    -0xf8(%ebx),%eax
sub    %eax,%esi
sar    $0x2,%esi
test   %esi,%esi
je     804da59 <calloc@plt+0x4ab9>
lea    0x0(%esi),%esi
mov    0x38(%esp),%eax
mov    %ebp,(%esp)
mov    %eax,0x8(%esp)
mov    0x34(%esp),%eax
mov    %eax,0x4(%esp)
call   *-0xf8(%ebx,%edi,4)
add    $0x1,%edi
cmp    %esi,%edi
jne    804da38 <calloc@plt+0x4a98>
add    $0x1c,%esp
pop    %ebx
pop    %esi
pop    %edi
pop    %ebp
ret
jmp    804da70 <calloc@plt+0x4ad0>
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz ret
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
xchg   %ax,%ax
push   %ebx
call   8049310 <calloc@plt+0x370>
add    $0x457a,%ebx
sub    $0x18,%esp
lea    0x104(%ebx),%eax
test   %eax,%eax
je     804dab8 <calloc@plt+0x4b18>
mov    (%eax),%eax
mov    %eax,0x8(%esp)
mov    0x20(%esp),%eax
movl   $0x0,0x4(%esp)
mov    %eax,(%esp)
call   8048d70 <__cxa_atexit@plt>
add    $0x18,%esp
pop    %ebx
ret
xor    %eax,%eax
jmp    804da9b <calloc@plt+0x4afb>
push   %ebx
sub    $0x8,%esp
call   8049310 <calloc@plt+0x370>
add    $0x453b,%ebx
add    $0x8,%esp
pop    %ebx
ret
add    (%eax),%eax
add    %eax,(%eax)
add    (%eax),%al
push   %esp
jb     804db64 <_IO_stdin_used+0x80>
and    %ah,(%edi)
and    $0x2d2d2073,%eax
push   $0x27706c65
and    %ah,0x6f(%esi)
jb     804db1c <_IO_stdin_used+0x38>
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804db65 <_IO_stdin_used+0x81>
and    %ch,0x6e(%ecx)
outsw  %ds:(%esi),(%dx)
jb     804db74 <_IO_stdin_used+0x90>
popa
je     804db73 <_IO_stdin_used+0x8f>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
or     %cs:(%eax),%al
add    %dl,0x73(%ebp)
popa
cmp    %gs:(%bx,%si),%ah
and    $0x4f5b2073,%eax
push   %eax
push   %esp
dec    %ecx
dec    %edi
dec    %esi
pop    %ebp
cs cs and %al,%cs:0x49(%esi)
dec    %esp
inc    %ebp
cs cs or %cs:(%eax),%al
add    %dl,0x72(%eax)
imul   $0x6c617620,0x74(%esi),%ebp
jne    804dba0 <_IO_stdin_used+0xbc>
and    %ch,0x66(%edi)
and    %ah,0x20(%ecx)
jae    804dbbc <_IO_stdin_used+0xd8>
insl   (%dx),%es:(%edi)
bound  %ebp,0x6c(%edi)
imul   $0x6b6e696c,0x20(%ebx),%esp
and    %ch,0x72(%edi)
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x6966206c,0x61(%ebx),%esp
insb   (%dx),%es:(%edi)
and    %ch,%gs:0x61(%esi)
insl   (%dx),%es:(%edi)
or     %gs:(%edx),%cl
add    %ah,(%eax)
and    %ch,0x2d202c66
sub    $0x6f6e6163,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
arpl   %sp,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %ah,0x79(%edx)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804dc08 <_IO_stdin_used+0x124>
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%di)
gs
jb     804dc20 <_IO_stdin_used+0x13c>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0xa6e6920,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
jbe    804dc3b <_IO_stdin_used+0x157>
jb     804dc51 <_IO_stdin_used+0x16d>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804dc4d <_IO_stdin_used+0x169>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804dc03 <_IO_stdin_used+0x11f>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edi)
jbe    804dc53 <_IO_stdin_used+0x16f>
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x65(%edx)
arpl   %si,0x72(%ebp)
jae    804dc65 <_IO_stdin_used+0x181>
jbe    804dc63 <_IO_stdin_used+0x17f>
insb   (%dx),%es:(%edi)
jns    804dc3c <_IO_stdin_used+0x158>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x75(%edx)
je     804dc4a <_IO_stdin_used+0x166>
je     804dc94 <_IO_stdin_used+0x1b0>
and    %ch,%gs:0x73(%ecx,%eiz,2)
je     804dc53 <_IO_stdin_used+0x16f>
arpl   %bp,0x6d(%edi)
jo     804dca7 <_IO_stdin_used+0x1c3>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804dc5d <_IO_stdin_used+0x179>
insl   (%dx),%es:(%edi)
jne    804dcb3 <_IO_stdin_used+0x1cf>
je     804dc62 <_IO_stdin_used+0x17e>
gs
js     804dcae <_IO_stdin_used+0x1ca>
jae    804dcbb <_IO_stdin_used+0x1d7>
or     (%eax),%ah
and    %ch,0x2d202c65
sub    $0x6f6e6163,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
sub    $0x73697865,%eax
je     804dccc <_IO_stdin_used+0x1e8>
outsb  %ds:(%esi),(%dx)
and    %ah,(%bx,%si)
and    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %ah,0x79(%edx)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804dce8 <_IO_stdin_used+0x204>
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%di)
gs
jb     804dd00 <_IO_stdin_used+0x21c>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0xa6e6920,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
jbe    804dd1b <_IO_stdin_used+0x237>
jb     804dd31 <_IO_stdin_used+0x24d>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804dd2d <_IO_stdin_used+0x249>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804dce3 <_IO_stdin_used+0x1ff>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edi)
jbe    804dd33 <_IO_stdin_used+0x24f>
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x65(%edx)
arpl   %si,0x72(%ebp)
jae    804dd45 <_IO_stdin_used+0x261>
jbe    804dd43 <_IO_stdin_used+0x25f>
insb   (%dx),%es:(%edi)
jns    804dd0d <_IO_stdin_used+0x229>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,0x6c(%ecx)
insb   (%dx),%es:(%edi)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804dd7a <_IO_stdin_used+0x296>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804dd83 <_IO_stdin_used+0x29f>
and    %ch,0x75(%ebp)
jae    804dd89 <_IO_stdin_used+0x2a5>
and    %ah,0x78(%ebp)
imul   $0xa,0x74(%ebx),%esi
add    %ah,(%eax)
and    %ch,0x2d202c6d
sub    $0x6f6e6163,%eax
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
sub    $0x7373696d,%eax
imul   $0x20202020,0x67(%esi),%ebp
arpl   %sp,0x6e(%ecx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
and    %ah,0x79(%edx)
and    %ah,0x6f(%esi)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
ja     804ddc0 <_IO_stdin_used+0x2dc>
outsb  %ds:(%esi),(%dx)
and    %ah,0x76(%di)
gs
jb     804ddd8 <_IO_stdin_used+0x2f4>
and    %dh,0x79(%ebx)
insl   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
imul   $0xa6e6920,0x6b(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
gs
jbe    804ddf3 <_IO_stdin_used+0x30f>
jb     804de09 <_IO_stdin_used+0x325>
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804de05 <_IO_stdin_used+0x321>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804ddbb <_IO_stdin_used+0x2d7>
outsl  %ds:(%esi),(%dx)
data16
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x69(%edi)
jbe    804de0b <_IO_stdin_used+0x327>
outsb  %ds:(%esi),(%dx)
and    %ch,0x61(%esi)
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x65(%edx)
arpl   %si,0x72(%ebp)
jae    804de1d <_IO_stdin_used+0x339>
jbe    804de1b <_IO_stdin_used+0x337>
insb   (%dx),%es:(%edi)
jns    804dde5 <_IO_stdin_used+0x301>
or     (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x69(%edi)
je     804de46 <_IO_stdin_used+0x362>
outsl  %ds:(%esi),(%dx)
jne    804de55 <_IO_stdin_used+0x371>
and    %dh,0x65(%edx)
jno    804de5b <_IO_stdin_used+0x377>
imul   $0x746e656d,0x65(%edx),%esi
jae    804de0f <_IO_stdin_used+0x32b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6f(%ebx)
insl   (%dx),%es:(%edi)
jo     804de66 <_IO_stdin_used+0x382>
outsb  %ds:(%esi),(%dx)
outsb  %gs:(%esi),(%dx)
je     804de6f <_IO_stdin_used+0x38b>
and    %ah,0x78(%ebp)
imul   $0x65636e65,0x74(%ebx),%esi
or     (%eax),%ah
and    %ch,0x2d202c6e
sub    $0x6e2d6f6e,%eax
gs
ja     804de82 <_IO_stdin_used+0x39e>
imul   $0x20202020,0x65(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
outsl  %fs:(%esi),(%dx)
and    %ch,0x6f(%esi)
je     804de4e <_IO_stdin_used+0x36a>
outsl  %ds:(%esi),(%dx)
jne    804dea5 <_IO_stdin_used+0x3c1>
jo     804dea8 <_IO_stdin_used+0x3c4>
je     804de55 <_IO_stdin_used+0x371>
je     804de9f <_IO_stdin_used+0x3bb>
and    %dh,%gs:0x61(%edx,%esi,2)
imul   $0x65642067,0x6e(%ecx,%ebp,2),%ebp
insb   (%dx),%es:(%edi)
imul   $0xa726574,0x69(%ebp),%ebp
and    %ah,(%eax)
sub    $0x2d202c71,%eax
sub    $0x65697571,%eax
je     804de86 <_IO_stdin_used+0x3a2>
or     (%eax),%ah
and    %ch,0x2d202c73
sub    $0x656c6973,%eax
outsb  %ds:(%esi),(%dx)
je     804de8a <_IO_stdin_used+0x3a6>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x75(%ebx)
jo     804deef <_IO_stdin_used+0x40b>
jb     804dee6 <_IO_stdin_used+0x402>
jae    804def6 <_IO_stdin_used+0x412>
and    %ch,0x6f(%ebp)
jae    804defc <_IO_stdin_used+0x418>
and    %ah,0x72(%ebp)
jb     804defc <_IO_stdin_used+0x418>
jb     804deaf <_IO_stdin_used+0x3cb>
insl   (%dx),%es:(%edi)
gs
jae    804df06 <_IO_stdin_used+0x422>
popa
addr16
gs
jae    804dea2 <_IO_stdin_used+0x3be>
and    %ah,(%eax)
sub    $0x2d202c76,%eax
sub    $0x62726576,%eax
outsl  %ds:(%esi),(%dx)
jae    804df0c <_IO_stdin_used+0x428>
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %dh,0x65(%edx)
jo     804df2b <_IO_stdin_used+0x447>
jb     804df32 <_IO_stdin_used+0x44e>
and    %ah,0x72(%ebp)
jb     804df32 <_IO_stdin_used+0x44e>
jb     804dee5 <_IO_stdin_used+0x401>
insl   (%dx),%es:(%edi)
gs
jae    804df3c <_IO_stdin_used+0x458>
popa
addr16
gs
jae    804ded8 <_IO_stdin_used+0x3f4>
and    %ah,(%eax)
sub    $0x2d202c7a,%eax
sub    $0x6f72657a,%eax
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
jae    804df55 <_IO_stdin_used+0x471>
jo     804df53 <_IO_stdin_used+0x46f>
jb     804df55 <_IO_stdin_used+0x471>
je     804df5b <_IO_stdin_used+0x477>
and    %ch,0x75(%edi)
je     804df6b <_IO_stdin_used+0x487>
jne    804df71 <_IO_stdin_used+0x48d>
and    %dh,0x69(%edi)
je     804df6a <_IO_stdin_used+0x486>
and    %cl,0x55(%esi)
dec    %esp
and    %dh,0x61(%edx)
je     804df73 <_IO_stdin_used+0x48f>
gs
jb     804df2e <_IO_stdin_used+0x44a>
je     804df78 <_IO_stdin_used+0x494>
popa
outsb  %ds:(%esi),(%dx)
and    %ch,0x65(%esi)
ja     804df83 <_IO_stdin_used+0x49f>
imul   $0x2020000a,0x65(%esi),%ebp
and    %ah,(%eax)
and    %ah,(%eax)
sub    $0x6c65682d,%eax
jo     804df49 <_IO_stdin_used+0x465>
and    %ah,(%eax)
and    %ah,(%eax)
imul   $0x2079616c,%fs:0x70(%ebx),%esi
je     804df9f <_IO_stdin_used+0x4bb>
imul   $0x706c6568,0x20(%ebx),%esi
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x20000000,0x0(%edx,%ecx,1),%esi
and    %ah,(%eax)
and    %ah,(%eax)
and    %ch,0x7265762d
jae    804dfc2 <_IO_stdin_used+0x4de>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,(%eax)
outsl  %ds:(%esi),(%dx)
jne    804dfd4 <_IO_stdin_used+0x4f0>
jo     804dfd7 <_IO_stdin_used+0x4f3>
je     804df84 <_IO_stdin_used+0x4a0>
jbe    804dfcb <_IO_stdin_used+0x4e7>
jb     804dfdb <_IO_stdin_used+0x4f7>
imul   $0x666e6920,0x6e(%edi),%ebp
outsl  %ds:(%esi),(%dx)
jb     804dfdf <_IO_stdin_used+0x4fb>
popa
je     804dfde <_IO_stdin_used+0x4fa>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x6e(%ecx)
and    %ah,%fs:0x78(%ebp)
imul   $0x74680000,0x0(%edx,%ecx,1),%esi
je     804dff8 <_IO_stdin_used+0x514>
cmp    (%edi),%ch
das
ja     804e004 <_IO_stdin_used+0x520>
ja     804dfbd <_IO_stdin_used+0x4d9>
outsb  %ds:(%si),(%dx)
jne    804dfc1 <_IO_stdin_used+0x4dd>
outsl  %ds:(%esi),(%dx)
jb     804dffd <_IO_stdin_used+0x519>
das
jae    804e008 <_IO_stdin_used+0x524>
data16
je     804e013 <_IO_stdin_used+0x52f>
popa
jb     804e004 <_IO_stdin_used+0x520>
das
arpl   %bp,0x72(%edi)
gs
jne    804e01a <_IO_stdin_used+0x536>
imul   $0x65470000,0x2f(%ebx,%esi,2),%ebp
outsb  %ds:(%esi),(%dx)
gs
jb     804e013 <_IO_stdin_used+0x52f>
insb   (%dx),%es:(%edi)
and    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804dfd9 <_IO_stdin_used+0x4f5>
jne    804e02e <_IO_stdin_used+0x54a>
imul   $0x554e4720,0x67(%esi),%ebp
and    %dh,0x6f(%ebx)
data16
je     804e03f <_IO_stdin_used+0x55b>
popa
jb     804e030 <_IO_stdin_used+0x54c>
cmp    (%eax),%ah
cmp    $0x68,%al
je     804e045 <_IO_stdin_used+0x561>
jo     804e00d <_IO_stdin_used+0x529>
das
das
ja     804e04e <_IO_stdin_used+0x56a>
ja     804e007 <_IO_stdin_used+0x523>
outsb  %ds:(%si),(%dx)
jne    804e00b <_IO_stdin_used+0x527>
outsl  %ds:(%esi),(%dx)
jb     804e047 <_IO_stdin_used+0x563>
das
addr16
gs
je     804e04d <_IO_stdin_used+0x569>
gs
insb   (%dx),%es:(%edi)
jo     804e018 <_IO_stdin_used+0x534>
or     %ds:(%eax),%al
push   %edx
gs
jo     804e05f <_IO_stdin_used+0x57b>
jb     804e066 <_IO_stdin_used+0x582>
and    %ah,0x72742073
popa
outsb  %ds:(%esi),(%dx)
jae    804e068 <_IO_stdin_used+0x584>
popa
je     804e068 <_IO_stdin_used+0x584>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
and    %ah,0x75(%edx)
addr16 jae 804e027 <_IO_stdin_used+0x543>
je     804e078 <_IO_stdin_used+0x594>
and    %bh,(%eax,%ebp,2)
je     804e082 <_IO_stdin_used+0x59e>
jo     804e04a <_IO_stdin_used+0x566>
das
das
je     804e086 <_IO_stdin_used+0x5a2>
popa
outsb  %ds:(%esi),(%dx)
jae    804e084 <_IO_stdin_used+0x5a0>
popa
je     804e084 <_IO_stdin_used+0x5a0>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
jo     804e091 <_IO_stdin_used+0x5ad>
outsl  %ds:(%esi),(%dx)
push   $0x65
arpl   %si,0x6f(%esi,%ebp,1)
jb     804e08f <_IO_stdin_used+0x5ab>
das
je     804e090 <_IO_stdin_used+0x5ac>
popa
insl   (%dx),%es:(%edi)
das
or     %ds:(%eax),%al
add    %al,(%eax)
add    %al,0x6f(%esi)
jb     804e058 <_IO_stdin_used+0x574>
arpl   %bp,0x6d(%edi)
jo     804e0a9 <_IO_stdin_used+0x5c5>
gs
je     804e0a5 <_IO_stdin_used+0x5c1>
and    %ah,0x63(%edi,%ebp,2)
jne    804e0b3 <_IO_stdin_used+0x5cf>
outsb  %gs:(%esi),(%dx)
je     804e0ab <_IO_stdin_used+0x5c7>
je     804e0b5 <_IO_stdin_used+0x5d1>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
jb     804e0c7 <_IO_stdin_used+0x5e3>
outsb  %ds:(%esi),(%dx)
cmp    (%eax),%ah
imul   $0x6f63206f,0x66(%esi),%ebp
jb     804e0c3 <_IO_stdin_used+0x5df>
jne    804e0d4 <_IO_stdin_used+0x5f0>
imul   $0x20732527,0x20(%ebx,%esi,2),%ebp
imul   $0x7461636f,0x76(%esi),%ebp
imul   $0xa27,0x6e(%edi),%ebp
add    %al,(%eax)
imul   $0x6e69726f,0x6e(%edi),%esp
and    %ch,(%di)
sub    $0x6e2d6f6e,%eax
gs
ja     804e0f6 <_IO_stdin_used+0x612>
imul   $0x74697720,0x65(%esi),%ebp
push   $0x6c756d20
je     804e101 <_IO_stdin_used+0x61d>
jo     804e106 <_IO_stdin_used+0x622>
and    %ah,%gs:0x72(%ecx)
addr16 jne 804e10e <_IO_stdin_used+0x62a>
outsb  %gs:(%esi),(%dx)
je     804e118 <_IO_stdin_used+0x634>
add    %cl,(%edx)
push   %edx
gs
jo     804e11a <_IO_stdin_used+0x636>
jb     804e121 <_IO_stdin_used+0x63d>
and    %ah,0x75622073
addr16 jae 804e0d6 <_IO_stdin_used+0x5f2>
je     804e127 <_IO_stdin_used+0x643>
and    %ah,0x62000a73
jne    804e127 <_IO_stdin_used+0x643>
sub    $0x65726f63,%eax
jne    804e13b <_IO_stdin_used+0x657>
imul   $0x2e756e67,0x40(%ebx,%esi,2),%ebp
outsl  %ds:(%esi),(%dx)
jb     804e139 <_IO_stdin_used+0x655>
add    %ah,0x6f682073
insl   (%dx),%es:(%edi)
and    %dh,%gs:0x61(%eax)
cmp    %gs:(%bx,%si),%ah
cmp    $0x25,%al
jae    804e123 <_IO_stdin_used+0x63f>
or     (%eax),%al
inc    %edi
dec    %esi
push   %ebp
and    %ah,0x6f(%ebx)
jb     804e154 <_IO_stdin_used+0x670>
jne    804e165 <_IO_stdin_used+0x681>
imul   $0x5f6e65,0x0(%ebx,%esi,2),%ebp
das
jne    804e16f <_IO_stdin_used+0x68b>
jb     804e12d <_IO_stdin_used+0x649>
jae    804e168 <_IO_stdin_used+0x684>
popa
jb     804e168 <_IO_stdin_used+0x684>
das
insb   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:0x69(%ebp,%ebp,2)
je     804e182 <_IO_stdin_used+0x69e>
jns    804e132 <_IO_stdin_used+0x64e>
push   %esi
and    %cl,%cs:0x76(%ebp,%eiz,2)
imul   $0x64616572,0x0(%esi),%ebp
insb   (%dx),%es:(%edi)
imul   $0x6d666500,0x6b(%esi),%ebp
outsb  %ds:(%esi),(%dx)
jno    804e19d <_IO_stdin_used+0x6b9>
jbe    804e1a6 <_IO_stdin_used+0x6c2>
add    %ch,0x69(%ebp)
jae    804e1a4 <_IO_stdin_used+0x6c0>
imul   $0x65706f20,0x67(%esi),%ebp
jb     804e19b <_IO_stdin_used+0x6b7>
outsb  %ds:(%esi),(%dx)
add    %ah,%fs:0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
add    %ah,0x61(%ebx)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
sub    $0x73697865,%eax
je     804e1c6 <_IO_stdin_used+0x6e2>
outsb  %ds:(%esi),(%dx)
add    %ah,0x61(%bp,%di)
outsb  %ds:(%esi),(%dx)
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
imul   $0x657a696c,0x61(%ebx),%esp
sub    $0x7373696d,%eax
imul   $0x2d6f6e00,0x67(%esi),%ebp
outsb  %ds:(%esi),(%dx)
gs
ja     804e1e8 <_IO_stdin_used+0x704>
imul   $0x69757100,0x65(%esi),%ebp
gs
je     804e186 <_IO_stdin_used+0x6a2>
jae    804e1f1 <_IO_stdin_used+0x70d>
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
je     804e18d <_IO_stdin_used+0x6a9>
jbe    804e1f4 <_IO_stdin_used+0x710>
jb     804e1f3 <_IO_stdin_used+0x70f>
outsl  %ds:(%esi),(%dx)
jae    804e1f9 <_IO_stdin_used+0x715>
add    %bh,0x65(%edx)
jb     804e208 <_IO_stdin_used+0x724>
add    %ch,0x65(%eax)
insb   (%dx),%es:(%edi)
jo     804e19f <_IO_stdin_used+0x6bb>
jbe    804e206 <_IO_stdin_used+0x722>
jb     804e216 <_IO_stdin_used+0x732>
imul   $0x0,0x6e(%edi),%ebp
add    %al,(%eax)
cmp    $0x804e1,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%esi)
add    %al,(%eax)
dec    %edx
loope  804e1d7 <_IO_stdin_used+0x6f3>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,0x0(%ebp)
add    %al,(%eax)
pusha
loope  804e1e7 <_IO_stdin_used+0x703>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,0x0(%ebp)
add    %al,(%eax)
jne    804e1d3 <_IO_stdin_used+0x6ef>
add    $0x8,%al
outsb  %ds:(%esi),(%dx)
add    %al,(%eax)
add    %al,0x804e1(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%ecx)
add    %al,(%eax)
xchg   %ah,%cl
add    $0x8,%al
jae    804e21e <_IO_stdin_used+0x73a>
add    %al,(%eax)
(bad)
loope  804e227 <_IO_stdin_used+0x743>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dh,0x0(%esi)
add    %al,(%eax)
xchg   %eax,%ebp
loope  804e237 <_IO_stdin_used+0x753>
or     %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,0x0(%edx)
add    %al,(%eax)
lcall  $0x0,$0x804e1
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%esi)
(bad)
lcall  *0x804e1(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bh,-0x1(%ebp)
(bad)
incl   (%eax)
add    %al,(%eax)
add    %bh,(%eax)
xor    %cs:(%ecx),%dh
add    %dh,0x72(%edi)
imul   $0x6f727265,0x20(%ebp,%eiz,2),%esi
jb     804e281 <_IO_stdin_used+0x79d>
and    $0x25203a73,%eax
jae    804e288 <_IO_stdin_used+0x7a4>
and    (%eax),%esp
outsb  %gs:(%esi),(%dx)
je     804e300 <_IO_stdin_used+0x81c>
imul   $0x2020203a,0x73(%ebp),%esp
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
cmp    (%eax),%ah
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    %ah,(%eax)
and    $0xa756c,%eax
insl   (%dx),%es:(%edi)
popa
js     804e2dc <_IO_stdin_used+0x7f8>
bound  %esi,0x63(%ebp)
imul   $0x20,0x74(%ebp),%esp
insb   (%dx),%es:(%edi)
outsb  %gs:(%esi),(%dx)
addr16 je 804e331 <_IO_stdin_used+0x84d>
cmp    (%eax),%ah
and    $0xa756c,%eax
and    (%eax),%esp
bound  %esi,0x63(%ebp)
imul   $0x73,0x74(%ebp),%esp
and    %dh,0x73(%ebp)
gs cmp %fs:%gs:(%eax),%ah
and    %ah,(%eax)
and    %ah,0x2820756c
and    $0x2566322e,%eax
and    $0xa29,%eax
cmpb   $0xcd,(%edi)
int3
dec    %esp
aas
hlt
std
mov    $0x3f,%ah
add    %al,(%eax)
add    %al,(%eax)
int    $0xcc
int3
cmp    $0x3f666666,%eax
int    $0xcc
mov    %?,(%edi)
add    %al,(%eax)
enter  $0x42,$0x0
orb    $0x20,0x41(%edi)
dec    %esi
push   %ebp
dec    %esp
dec    %esp
and    %ah,0x72(%ecx)
addr16 jbe 804e383 <_IO_stdin_used+0x89f>
xor    %bl,0x20(%ebp)
ja     804e38e <_IO_stdin_used+0x8aa>
jae    804e34f <_IO_stdin_used+0x86b>
jo     804e392 <_IO_stdin_used+0x8ae>
jae    804e3a6 <_IO_stdin_used+0x8c2>
gs and %dh,%fs:%gs:0x72(%eax,%ebp,2)
outsl  %ds:(%esi),(%dx)
jne    804e3a3 <_IO_stdin_used+0x8bf>
push   $0x206e6120
gs
js     804e3a9 <_IO_stdin_used+0x8c5>
arpl   %sp,(%eax)
jae    804e3c1 <_IO_stdin_used+0x8dd>
jae    804e3be <_IO_stdin_used+0x8da>
gs
insl   (%dx),%es:(%edi)
and    %ah,0x61(%ebx)
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
or     %cs:(%eax),%al
das
cs
insb   (%dx),%es:(%edi)
imul   $0x746c002f,0x73(%edx),%esp
sub    $0x9980e200,%eax
add    %ah,0x2700af(%ecx)
and    (%eax),%al
mov    0xe2006507,%eax
sbbb   $0x69,0x6c006000(%eax)
je     804e3de <_IO_stdin_used+0x8fa>
jb     804e3dc <_IO_stdin_used+0x8f8>
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
add    %dh,0x68(%ebx)
gs
insb   (%dx),%es:(%edi)
insb   (%dx),%es:(%edi)
sub    $0x61776c61,%eax
jns    804e402 <_IO_stdin_used+0x91e>
add    %ah,0x0(%ebx)
arpl   %bp,0x6279616d
add    %ah,%gs:0x73(%ebp)
arpl   %sp,0x70(%ecx)
add    %ah,%gs:0x6c(%ebx)
outsl  %ds:(%esi),(%dx)
arpl   %sp,0x6c(%ecx)
add    %al,%gs:(%eax)
add    %al,(%eax)
pop    %eax
mov    $0x4,%bl
or     %bh,(%eax)
mov    $0xb9680804,%ecx
add    $0x8,%al
sub    %bh,-0x4797f7fc(%eax)
add    $0x8,%al
cwtl
mov    $0xb8c00804,%eax
add    $0x8,%al
sarb   $0x4,-0x473ff7fc(%eax)
or     %ah,-0x4a(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
fdivs  -0x49c7f7fc(%esi)
add    $0x8,%al
pop    %eax
mov    $0x4,%dh
or     %dl,-0x4a(%eax)
add    $0x8,%al
dec    %eax
mov    $0x4,%dh
or     %al,-0x4a(%eax)
add    $0x8,%al
adc    %dh,-0x48a7f7fc(%esi)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bl,-0x49(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %cl,-0x76f7fb4b(%ecx)
mov    $0x4,%ch
or     %cl,-0x7ef7fb4b(%ecx)
mov    $0x4,%ch
or     %cl,-0x7f7fb4b(%ecx)
mov    $0x4,%ah
or     %cl,0x80804b5(%ecx)
mov    $0x4,%bh
or     %cl,-0x76f7fb4b(%ecx)
mov    $0x4,%ch
or     %cl,-0x7f7fb4b(%ecx)
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %cl,-0x76f7fb4b(%ecx)
mov    $0x4,%ch
or     %cl,-0x76f7fb4b(%ecx)
mov    $0x4,%ch
or     %cl,-0x4c(%eax)
add    $0x8,%al
pop    %eax
mov    $0x4,%bh
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %cl,-0x17f7fb4b(%ecx)
mov    $0x4,%dh
or     %bh,%al
mov    $0x4,%ah
or     %cl,-0x7f7fb4b(%ecx)
mov    $0x4,%ah
or     %cl,-0x7f7fb4b(%ecx)
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %bh,%al
mov    $0x4,%ah
or     %ah,-0x4b(%eax)
add    $0x8,%al
mov    %esi,-0x4a9ff7fc(%ebp)
add    $0x8,%al
xorl   $0xbb800804,-0x447ff7fc(%ebp)
bb
add    $0x8,%al
sbb    %bh,-0x447ff7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x447ff7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x44e7f7fc(%ebx)
add    $0x8,%al
sbb    %bh,-0x447ff7fc(%ebx)
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
add    (%eax),%al
add    %al,(%eax)
add    (%eax),%eax
add    %al,(%eax)
add    $0x0,%al
add    %al,(%eax)
add    $0x6000000,%eax
add    %al,(%eax)
add    %al,(%edi)
add    %al,(%eax)
add    %dh,-0x1d(%ebp)
add    $0x8,%al
jge    804e689 <_IO_stdin_used+0xba5>
add    $0x8,%al
and    $0x4,%ebx
or     %dl,-0x6df7fb1d(%eax)
jecxz  804e6b7 <_IO_stdin_used+0xbd3>
or     %bl,0x40804e3(%edx)
loope  804e6bf <_IO_stdin_used+0xbdb>
or     %ah,0x804e3(%ecx)
add    %al,(%eax)
add    %ah,0x25282073
jae    804e6f4 <_IO_stdin_used+0xc10>
and    %ah,0x25000a73
jae    804e6f3 <_IO_stdin_used+0xc0f>
and    $0x28000a73,%eax
inc    %ebx
sub    %eax,(%eax)
push   %edi
jb     804e747 <_IO_stdin_used+0xc63>
je     804e754 <_IO_stdin_used+0xc70>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0xa2e73
push   %edi
jb     804e757 <_IO_stdin_used+0xc73>
je     804e764 <_IO_stdin_used+0xc80>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x6e612073
and    %ah,%fs:0xa2e73
push   %edi
jb     804e76e <_IO_stdin_used+0xc8a>
je     804e77b <_IO_stdin_used+0xc97>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e740 <_IO_stdin_used+0xc5c>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
or     0x65(%edx),%dl
jo     804e792 <_IO_stdin_used+0xcae>
jb     804e799 <_IO_stdin_used+0xcb5>
and    %ah,0x75(%edx)
addr16 jae 804e74b <_IO_stdin_used+0xc67>
je     804e79c <_IO_stdin_used+0xcb8>
cmp    (%eax),%ah
and    $0xa73,%eax
or     0x63(%ecx,%ebp,2),%cl
outsb  %gs:(%esi),(%dx)
jae    804e7a1 <_IO_stdin_used+0xcbd>
and    %al,0x50(%edi)
dec    %esp
jbe    804e775 <_IO_stdin_used+0xc91>
sub    (%edx),%edi
and    %al,0x4e(%edi)
push   %ebp
and    %al,0x50(%edi)
dec    %esp
and    %dh,0x65(%esi)
jb     804e7c4 <_IO_stdin_used+0xce0>
imul   $0x6f203320,0x6e(%edi),%ebp
jb     804e77a <_IO_stdin_used+0xc96>
insb   (%dx),%es:(%edi)
popa
je     804e7c3 <_IO_stdin_used+0xcdf>
jb     804e780 <_IO_stdin_used+0xc9c>
cmp    $0x68,%al
je     804e7d8 <_IO_stdin_used+0xcf4>
jo     804e7a0 <_IO_stdin_used+0xcbc>
das
das
outsb  %ds:(%si),(%dx)
jne    804e79a <_IO_stdin_used+0xcb6>
outsl  %ds:(%esi),(%dx)
jb     804e7d6 <_IO_stdin_used+0xcf2>
das
insb   (%dx),%es:(%edi)
imul   $0x7365736e,0x65(%ebx),%esp
das
addr16 jo 804e7e8 <_IO_stdin_used+0xd04>
cs
push   $0x3e6c6d74
or     %cs:0x69(%eax,%ebp,2),%dl
jae    804e7a9 <_IO_stdin_used+0xcc5>
imul   $0x65657266,0x20(%ebx),%esi
and    %dh,0x6f(%ebx)
data16
je     804e80d <_IO_stdin_used+0xd29>
popa
jb     804e7fe <_IO_stdin_used+0xd1a>
cmp    (%eax),%ah
jns    804e80c <_IO_stdin_used+0xd28>
jne    804e7bf <_IO_stdin_used+0xcdb>
popa
jb     804e807 <_IO_stdin_used+0xd23>
and    %ah,0x72(%esi)
gs and %dh,%gs:0x20(%edi,%ebp,2)
arpl   %bp,0x61(%eax)
outsb  %ds:(%esi),(%dx)
and    %ah,%gs:0x6e(%bx,%di)
and    %dh,%fs:0x65(%edx)
imul   $0x75626972,%fs:0x74(%ebx),%esi
je     804e827 <_IO_stdin_used+0xd43>
and    %ch,0x74(%ecx)
or     %cs:0x65(%eax,%ebp,2),%dl
jb     804e831 <_IO_stdin_used+0xd4d>
and    %ch,0x73(%ecx)
and    %cl,0x4f(%esi)
and    %dl,0x41(%edi)
push   %edx
push   %edx
inc    %ecx
dec    %esi
push   %esp
pop    %ecx
sub    $0x20,%al
je     804e84e <_IO_stdin_used+0xd6a>
and    %dh,0x65(%eax,%ebp,2)
and    %ah,0x78(%ebp)
je     804e84d <_IO_stdin_used+0xd69>
outsb  %ds:(%esi),(%dx)
je     804e80b <_IO_stdin_used+0xd27>
jo     804e852 <_IO_stdin_used+0xd6e>
jb     804e85c <_IO_stdin_used+0xd78>
imul   $0x79622064,0x65(%esp,%esi,2),%esi
and    %ch,0x77(%ecx,%eiz,2)
or     %cs:(%edx),%cl
add    %al,(%eax)
push   %edi
jb     804e86c <_IO_stdin_used+0xd88>
je     804e879 <_IO_stdin_used+0xd95>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e83e <_IO_stdin_used+0xd5a>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e88c <_IO_stdin_used+0xda8>
je     804e899 <_IO_stdin_used+0xdb5>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e85e <_IO_stdin_used+0xd7a>
and    %ah,0x250a2c73
jae    804e866 <_IO_stdin_used+0xd82>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e8b0 <_IO_stdin_used+0xdcc>
je     804e8bd <_IO_stdin_used+0xdd9>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e882 <_IO_stdin_used+0xd9e>
and    %ah,0x250a2c73
jae    804e88a <_IO_stdin_used+0xda6>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e8d8 <_IO_stdin_used+0xdf4>
je     804e8e5 <_IO_stdin_used+0xe01>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e8aa <_IO_stdin_used+0xdc6>
and    %ah,0x250a2c73
jae    804e8b2 <_IO_stdin_used+0xdce>
and    %ah,0x25202c73
jae    804e8ba <_IO_stdin_used+0xdd6>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e904 <_IO_stdin_used+0xe20>
je     804e911 <_IO_stdin_used+0xe2d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e8d6 <_IO_stdin_used+0xdf2>
and    %ah,0x250a2c73
jae    804e8de <_IO_stdin_used+0xdfa>
and    %ah,0x25202c73
jae    804e8e6 <_IO_stdin_used+0xe02>
and    %ah,0x610a2c73
outsb  %ds:(%esi),(%dx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e934 <_IO_stdin_used+0xe50>
je     804e941 <_IO_stdin_used+0xe5d>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e906 <_IO_stdin_used+0xe22>
and    %ah,0x250a2c73
jae    804e90e <_IO_stdin_used+0xe2a>
and    %ah,0x25202c73
jae    804e916 <_IO_stdin_used+0xe32>
and    %ah,0x250a2c73
jae    804e91e <_IO_stdin_used+0xe3a>
and    %ah,0x6e(%ecx)
and    %ah,%fs:0xa2e73
push   %edi
jb     804e968 <_IO_stdin_used+0xe84>
je     804e975 <_IO_stdin_used+0xe91>
outsb  %gs:(%esi),(%dx)
and    %ah,0x79(%edx)
and    %ah,0x25202c73
jae    804e93a <_IO_stdin_used+0xe56>
and    %ah,0x250a2c73
jae    804e942 <_IO_stdin_used+0xe5e>
and    %ah,0x25202c73
jae    804e94a <_IO_stdin_used+0xe66>
and    %ah,0x250a2c73
jae    804e952 <_IO_stdin_used+0xe6e>
and    %ah,0x61202c73
outsb  %ds:(%esi),(%dx)
and    %ch,%fs:0x74(%edi)
push   $0x2e737265
or     (%eax),%al
ror    $0x4,%cl
or     %cl,%al
leave
add    $0x8,%al
or     %cl,%dl
add    $0x8,%al
push   %eax
lret   $0x804
test   $0xca,%al
add    $0x8,%al
add    %cl,%bl
add    $0x8,%al
push   $0xe00804cb
lret
add    $0x8,%al
or     $0x4,%al
or     %bl,(%eax)
leave
add    $0x8,%al
inc    %ebx
outsl  %ds:(%esi),(%dx)
jo     804e9dd <_IO_stdin_used+0xef9>
jb     804e9cf <_IO_stdin_used+0xeeb>
addr16 push $0x73252074
and    %ah,0x72462064
gs and %dl,%gs:0x6f(%ebx)
data16
je     804e9f1 <_IO_stdin_used+0xf0d>
popa
jb     804e9e2 <_IO_stdin_used+0xefe>
and    %al,0x6f(%esi)
jne    804e9f0 <_IO_stdin_used+0xf0c>
fs
popa
je     804e9ef <_IO_stdin_used+0xf0b>
outsl  %ds:(%esi),(%dx)
outsb  %ds:(%esi),(%dx)
sub    $0x20,%al
dec    %ecx
outsb  %ds:(%esi),(%dx)
arpl   %bp,(%esi)
add    %ch,0x65(%ebp)
insl   (%dx),%es:(%edi)
outsl  %ds:(%esi),(%dx)
jb     804ea0e <_IO_stdin_used+0xf2a>
and    %ah,0x78(%ebp)
push   $0x74737561
gs add %ch,%fs:%gs:(%edi)
jne    804ea16 <_IO_stdin_used+0xf32>
jb     804e9d4 <_IO_stdin_used+0xef0>
insb   (%dx),%es:(%edi)
imul   $0x49435341,0x0(%edx),%esp
dec    %ecx
add    %al,0x48(%ebx)
inc    %ecx
push   %edx
push   %ebx
inc    %ebp
push   %esp
inc    %ecx
dec    %esp
dec    %ecx
inc    %ecx
push   %ebx
inc    %esp
dec    %ecx
push   %edx
add    %ah,0x20733035
and    $0x733035,%eax
add    %ebx,(%ebx)
add    (%ebx),%edi
mov    %al,(%ebx)
add    %al,(%eax)
jo     804e9d6 <_IO_stdin_used+0xef2>
add    %al,(%eax)
inc    %esp
mov    %al,0x3a4ffff
add    %al,(%eax)
in     $0xa5,%al
(bad)
(bad)
call   1c04e9ec <stdout+0x13ffc82c>
stos   %al,%es:(%edi)
(bad)
dec    %eax
add    (%eax),%eax
add    %ah,%ah
lods   %ds:(%esi),%al
(bad)
lcall  *(%esp,%eax,1)
add    %al,(%eax)
les    0x488ffff(%ebp),%ebp
add    %al,(%eax)
push   %esp
mov    $0xff,%ah
call   *(%eax)
add    $0xb4640000,%eax
(bad)
jmp    *-0x4b8c0000(,%eax,1)
(bad)
(bad)
cmp    %al,0xb5440000
(bad)
jmp    *0x0(%ebp,%eax,1)
add    %ah,0x584ffff(%ebp,%esi,4)
add    %al,(%eax)
in     $0xb5,%al
(bad)
ljmp   *0x64000005(%eax)
mov    $0xff,%dh
incl   (%eax)
push   %es
add    %al,(%eax)
mov    $0xb6,%ah
(bad)
jmp    *(%esi,%eax,1)
add    %al,(%eax)
inc    %esp
mov    $0xff,%bh
jmp    *0x6(%eax)
add    %al,(%eax)
push   %esp
mov    $0xff,%bh
pushl  0x0(%esi,%eax,1)
add    %ah,-0x1(%edi,%esi,4)
decl   -0x6bfffffa(%eax)
mov    $0xff,%bh
ljmp   *-0x47ac0000(%esi,%eax,1)
(bad)
lcall  *(%eax)
pop    %es
add    %al,(%eax)
add    $0xb9,%al
(bad)
ljmp   *(%edi,%eax,1)
add    %al,(%eax)
adc    $0xba,%al
(bad)
incl   0x24000007(%eax)
mov    $0x794ffff,%edx
add    %al,(%eax)
xor    $0xba,%al
(bad)
ljmp   *0x44000007(%eax)
mov    $0x7bcffff,%edx
add    %al,(%eax)
xchg   %eax,%esp
mov    $0x7e0ffff,%edx
add    %al,(%eax)
hlt
mov    $0x81cffff,%edx
add    %al,(%eax)
add    $0xbc,%al
(bad)
lcall  *0x8(%eax)
add    %al,(%eax)
fs
mov    $0x8a0ffff,%esp
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0x8c0ffff,%esp
add    %al,(%eax)
add    $0xbd,%al
(bad)
(bad)
cld
or     %al,(%eax)
add    %ah,-0x1(%ebp,%edi,4)
pushl  (%ecx,%ecx,1)
add    %al,(%eax)
in     $0xbd,%al
(bad)
pushl  0x9(%eax)
add    %al,(%eax)
and    $0xbe,%al
(bad)
call   *-0x41ac0000(%ecx,%ecx,1)
(bad)
ljmp   *-0x6bfffff7(%eax)
mov    $0xa00ffff,%edi
add    %al,(%eax)
and    $0xc0,%al
(bad)
pushl  (%edx,%ecx,1)
add    %al,(%eax)
hlt
sar    $0xff,%bh
insb   (%dx),%es:(%edi)
or     (%eax),%al
add    %al,0xadcffff(%edx,%eax,8)
add    %al,(%eax)
push   %esp
(bad)
(bad)
(bad)
cmp    %cl,(%ebx)
add    %al,(%eax)
fs
(bad)
(bad)
decl   0x0(%ebx,%ecx,1)
add    %ah,0xb70ffff(%esp,%eax,8)
add    %al,(%eax)
adc    $0xc6,%al
(bad)
pushl  0x5400000b(%eax)
(bad)
(bad)
(bad)
fmull  (%ebx)
add    %al,(%eax)
test   %al,%dh
(bad)
push   %esp
or     (%eax),%eax
add    %dl,%ah
(bad)
(bad)
lcall  *(%eax)
or     $0x0,%al
add    %ah,(%edi,%eax,8)
(bad)
incl   0x0(%esp,%ecx,1)
add    %al,-0x1(%edi,%eax,8)
jmp    *0x0(%esp,%ecx,1)
add    %dh,%ah
(bad)
(bad)
jmp    *-0x37dc0000(%esp,%ecx,1)
(bad)
call   *%eax
or     $0x0,%al
add    %dl,(%ecx,%ecx,8)
(bad)
decl   (%eax)
or     $0xd3440000,%eax
(bad)
decl   0x0(%ebp,%ecx,1)
add    %ah,%ah
aam    $0xff
decl   -0x2adc0000(%ebp,%ecx,1)
(bad)
inc    %eax
or     $0xd5440000,%eax
(bad)
call   *%esp
or     $0xd5640000,%eax
(bad)
(bad)
call   ac04eb96 <stdout+0xa3ffc9d6>
aad    $0xff
decl   (%esi,%ecx,1)
add    %al,(%eax)
(bad)
aad    $0xff
jmp    *(%eax)
push   %cs
add    %al,(%eax)
add    $0xd6,%al
(bad)
incl   0x0(%esi,%ecx,1)
add    %ah,-0x1(%esi,%edx,8)
(bad)
js     804ebb4 <_IO_stdin_used+0x10d0>
add    %al,(%eax)
inc    %esp
xlat   %ds:(%ebx)
(bad)
pushl  -0x288c0000(%esi,%ecx,1)
(bad)
dec    %esp
push   %cs
add    %al,(%eax)
add    $0xd8,%al
(bad)
incl   (%eax)
sldt   (%eax)
and    $0xd8,%al
(bad)
call   *(%edi,%ecx,1)
add    %al,(%eax)
inc    %esp
fdivr  %st(7),%st
ljmp   *(%eax)
sldt   (%eax)
fs
fdivr  %st(7),%st
(bad)
cmp    $0xf,%al
add    %al,(%eax)
test   %bl,%al
(bad)
call   *0xf(%eax)
add    %al,(%eax)
mov    $0xd8,%ah
(bad)
pushl  0xf(%eax)
add    %al,(%eax)
in     $0xd8,%al
(bad)
call   *0x1400000f(%eax)
fcos
ljmp   *0x4400000f(%eax)
fcos
inc    %eax
sldt   (%eax)
hlt
fcos
jmp    *%esp
sldt   (%eax)
and    $0xda,%al
(bad)
(bad)
cld
sldt   (%eax)
push   %esp
(bad)
call   *(%eax,%edx,1)
add    %al,(%eax)
test   %bl,%dl
(bad)
ljmp   *(%eax,%edx,1)
add    %al,(%eax)
xor    $0xdb,%al
(bad)
call   *0x10(%eax)
add    %al,(%eax)
je     804ec05 <_IO_stdin_used+0x1121>
(bad)
ljmp   *0x10(%eax)
add    %al,(%eax)
mov    $0xdb,%ah
(bad)
incl   -0xbfffff0(%eax)
(bad)
lcall  *0x14000010(%eax)
fdivr  %st,%st(7)
ljmp   *-0x23cc0000(%eax,%edx,1)
(bad)
inc    %eax
adc    %al,(%eax)
add    %dl,-0x1(%esp,%ebx,8)
call   *%esp
adc    %al,(%eax)
add    %dh,-0x1(%esp,%ebx,8)
(bad)
call   ec04ec71 <stdout+0xe3ffcab1>
(bad)
incl   0x11(%eax)
add    %al,(%eax)
push   %esp
jecxz  804ec6a <_IO_stdin_used+0x1186>
(bad)
fcoml  (%ecx)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
jecxz  804ec72 <_IO_stdin_used+0x118e>
push   %esp
adc    %eax,(%eax)
add    %al,(%esp,%eiz,8)
(bad)
lcall  *(%eax)
adc    (%eax),%al
add    %al,-0x1(%esp,%eiz,8)
pushl  (%eax)
adc    (%eax),%al
add    %dh,%ah
in     $0xff,%al
call   *0x0(%edx,%edx,1)
add    %ah,0x1278ffff(,%eiz,8)
add    %al,(%eax)
push   %esp
in     $0xff,%eax
lcall  *-0x1a9c0000(%edx,%edx,1)
(bad)
pushl  -0x4bffffee(%eax)
in     $0xff,%eax
jmp    *%eax
adc    (%eax),%al
add    %dh,%ah
in     $0xff,%eax
decl   (%ebx,%edx,1)
add    %al,(%eax)
push   %esp
out    %al,$0xff
(bad)
cmp    $0x13,%al
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
out    %al,$0xff
jmp    *0x13(%eax)
add    %al,(%eax)
aam    $0xe6
(bad)
incl   0x4000013(%eax)
out    %eax,$0xff
lcall  *-0x18cc0000(%ebx,%edx,1)
(bad)
(bad)
mov    $0x64000013,%esp
out    %eax,$0xff
(bad)
fcoml  (%ebx)
add    %al,(%eax)
mov    $0xe7,%ah
(bad)
push   %eax
adc    (%eax),%eax
add    %dh,%ah
out    %eax,$0xff
call   *(%esp,%edx,1)
add    %al,(%eax)
je     804ece2 <_IO_stdin_used+0x11fe>
(bad)
ljmp   *0x0(%esp,%edx,1)
add    %dl,0x1488ffff(%eax,%ebp,8)
add    %al,(%eax)
in     $0xe8,%al
(bad)
pushl  -0x16ac0000(%esp,%edx,1)
(bad)
push   %esp
adc    $0x0,%al
add    %al,0x1508ffff(%ecx,%ebp,8)
add    %al,(%eax)
inc    %esp
in     (%dx),%eax
(bad)
decl   0x15(%eax)
add    %al,(%eax)
in     $0xed,%al
(bad)
call   *0x44000015(%eax)
out    %al,(%dx)
(bad)
(bad)
mov    $0xd4000015,%esp
out    %al,(%dx)
(bad)
call   *(%esi,%edx,1)
add    %al,(%eax)
xor    $0xf0,%al
(bad)
incl   -0x5bffffea(%eax)
lock (bad)
(bad)
mov    $0xb4000016,%esp
lock (bad)
call   *%eax
push   %ss
adc    $0x0,%al
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %edi,0x52(%edx)
add    %al,(%ecx)
jl     804ed6f <_IO_stdin_used+0x128b>
add    %ebx,(%ebx)
or     $0x4,%al
add    $0x88,%al
add    %eax,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
cwtl
sahf
(bad)
jmp    *0x3(%eax)
push   %cs
or     %al,0xe(%esi)
or     $0x4a,%al
ud2
je     804ed8f <_IO_stdin_used+0x12ab>
js     804ed8d <_IO_stdin_used+0x12a9>
aas
sbb    (%ebx),%bh
sub    (%edx),%dh
and    $0x22,%al
sbb    $0x0,%al
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,-0x1(%esi,%eiz,4)
dec    %edi
add    (%eax),%al
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %al,(%eax)
add    %dh,(%eax)
add    %al,(%eax)
add    %ah,0x0(%eax)
add    %al,(%eax)
hlt
mov    0x33bffff,%eax
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x50d4202(%ebp)
inc    %ecx
xchg   %eax,(%ebx)
inc    %ebx
xchg   %al,(%esp,%ecx,2)
addl   $0xffffffc3,0xa02d003
inc    %ecx
movb   $0x41,-0x39(%ecx)
lds    (%esp,%eax,1),%ecx
add    $0x41,%al
or     (%eax),%eax
add    %ch,0x0(%eax)
add    %al,(%eax)
xchg   %eax,%esp
add    %al,(%eax)
add    %al,%al
test   $0xff,%al
(bad)
fldl   (%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x61,0x2400e48
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%edx),%eax
inc    %edi
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%esi),%ecx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
test   %al,(%eax)
add    %al,(%eax)
add    %al,(%ecx)
add    %al,(%eax)
xor    $0xa9,%al
(bad)
incl   0x6(%ebp)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1c00e46
pop    %ebp
add    (%edx),%cl
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%ebx),%eax
inc    %ebx
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%ebx),%eax
xor    %eax,(%edx)
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%edx
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
mov    %al,(%ecx)
add    %al,(%eax)
cmp    $0xaf,%al
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bl,-0x50c80000(%ecx,%eax,1)
(bad)
decl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ch,(%eax)
add    %al,(%eax)
add    %dh,0x34000001(%eax)
scas   %es:(%edi),%eax
(bad)
dec    %edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
xor    %bh,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
faddl  (%ecx)
add    %al,(%eax)
fsubrs 0x57ffff(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xa490202(%ebx)
ret
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %ah,(%eax)
add    %al,(%eax)
add    %bh,%ah
add    %eax,(%eax)
add    %bl,(%eax)
mov    $0xff,%al
pushl  (%edx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %esi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %ah,(%eax)
add    (%eax),%al
add    %dh,(%eax,%esi,4)
(bad)
(bad)
jge    804ef82 <_IO_stdin_used+0x149e>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5a,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     0xa(%ebx),%eax
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
js     804efd4 <_IO_stdin_used+0x14f0>
add    %al,(%eax)
pop    %esp
mov    $0xff,%al
decl   0x0(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x400e4502(%ebx)
add    0xe(%edi),%al
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
cmp    %al,(%eax)
add    %al,(%eax)
pushf
add    (%eax),%al
add    %cl,-0x7d000050(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4402(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xe,0xc30a6402
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
fadds  (%edx)
add    %al,(%eax)
fdivl  0x10ffff(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
in     (%dx),%al
add    (%eax),%al
add    %bl,%al
mov    $0xff,%al
decl   (%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
aam    $0xb0
(bad)
jmp    *(%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4502(%ebx)
push   %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   $0x24000000
add    (%eax),%eax
add    %ah,%al
mov    $0xff,%al
inc    %eax
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x58,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ecx),%esp
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%ebx),%esp
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
nop
add    (%eax),%eax
add    %dh,(%ecx,%esi,4)
(bad)
ljmp   *0x0(%edi)
add    %al,(%eax)
add    %dl,0x0(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
add    (%eax),%eax
add    %dl,%al
mov    $0xff,%cl
decl   (%ecx,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4304(%esi)
addl   $0x7e,0x2300e43
or     (%esi),%cl
adc    $0x46,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
insl   (%dx),%es:(%edi)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
clc
add    (%eax),%eax
add    %cl,0x8ffff(%edx,%esi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
or     $0x4,%al
add    %al,(%eax)
mov    %dh,0x8ffff(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax,%eax,1)
add    %al,0x8ffff(%edx,%esi,4)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
xor    $0x4,%al
add    %al,(%eax)
xorb   $0x0,0x49ffff(%edx)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%esi)
addl   $0x2,(%ebx)
inc    %ebp
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x38,%al
add    %al,(%eax)
add    %bl,0x4(%eax)
add    %al,(%eax)
lods   %ds:(%esi),%al
mov    $0xff,%dl
call   *0x0(%esi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa440204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xe(%ebx,%eax,8),%eax
or     $0x41,%al
(bad)
push   %cs
or     %al,0xe(%edi,%eax,8)
add    $0x38,%al
add    %al,(%eax)
add    %dl,-0x4d300000(%esp,%eax,1)
(bad)
incl   (%esi)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xfffffffa,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x44,%al
add    %al,(%eax)
add    %dl,%al
add    $0x0,%al
add    %ah,0x5bffff(%ebx,%esi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%eax),%al
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%ebp),%eax
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sbb    $0x0,%al
add    %al,(%eax)
sbb    %al,0xb3bc0000
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
adc    %ch,0xa(%ebp)
push   %cs
add    $0x41,%al
or     0xa(%ebp),%eax
push   %cs
add    $0x41,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bh,(%eax)
add    $0xb3dc0000,%eax
(bad)
call   *0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0xa450204(%ebx)
ret
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     -0x3d(%ecx),%eax
push   %cs
or     $0x43,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x34,%al
add    %al,(%eax)
add    %dh,0x0(%ebp,%eax,1)
add    %al,(%eax)
mov    $0xff,%ah
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x10,0xec35302
inc    %ecx
(bad)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x0,%al
add    %bh,(%eax)
add    %al,(%eax)
add    %ch,-0x4bd80000(%ebp,%eax,1)
(bad)
pushl  0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x62,0x2300e45
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ch,%al
add    $0xb46c0000,%eax
(bad)
pushl  (%edi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x71,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
or     $0x6,%al
add    %al,(%eax)
mov    %dh,0x24ff(%edi,%edi,8)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %ah,(%eax)
push   %es
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
mov    $0xff,%ah
(bad)
cmp    $0x1,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x3400e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     0xe(%edx,%ecx,1),%edx
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %dh,(%eax)
add    %al,(%eax)
add    %bh,0x6(%eax)
add    %al,(%eax)
mov    %?,0x8bffff(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    -0x3cbeeff2(%ecx),%al
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
xor    $0x0,%al
add    %al,(%eax)
lods   %ds:(%esi),%al
push   %es
add    %al,(%eax)
call   cf04f3c2 <stdout+0xc6ffd202>
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xe(%edx,%ecx,1),%bh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
add    %ch,0x0(%eax,%eax,1)
add    %ah,%ah
push   %es
add    %al,(%eax)
xorb   $0x0,0x18affff(%esi)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x600e4304(%ebx)
add    (%ebx),%esp
add    %ecx,(%edx)
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     0xa(%ebx),%eax
push   %cs
adc    %cl,-0x3d(%eax)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%eax
push   %cs
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ebp
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
pop    %eax
add    %al,(%eax)
add    %dl,0x0(%edi,%eax,1)
add    %ah,-0x39000049(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x400e4304(%ebx)
jnp    804f4d7 <_IO_stdin_used+0x19f3>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     (%edx),%eax
jbe    804f4ea <_IO_stdin_used+0x1a06>
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%ebx),%eax
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     (%eax),%eax
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,0x14000007(%eax)
mov    $0x5ffff,%ecx
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
les    (%edi),%eax
add    %al,(%eax)
adc    %bh,0x3cffff(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x300e4302(%ebx)
insl   (%dx),%es:(%edi)
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
cmp    $0x0,%al
add    %al,(%eax)
call   3404f54c <stdout+0x2bffd38c>
mov    $0x165ffff,%ecx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x44,0x2500e43
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
sub    %cl,(%eax)
add    %al,(%eax)
pop    %esp
mov    $0x3fffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %dh,0xe(%edi)
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
push   %esp
or     %al,(%eax)
add    %dh,-0x46(%eax)
(bad)
ljmp   *0x0
inc    %ebx
push   %cs
and    %ch,0xe(%ecx)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
or     %al,(%eax)
add    %cl,0x42ffffba(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,-0x3cf5a4fe(%ebx)
push   %cs
add    $0x44,%al
or     -0x3d(%ebp),%ebx
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
nop
or     %al,(%eax)
add    %dh,0x4fffff(%edx,%edi,4)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bl,0xa(%ebx)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x44,%al
or     (%eax,%eax,1),%ebx
add    %al,(%eax)
mov    $0xd8000008,%esp
mov    $0x1fffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
push   %ebp
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x3c,%al
add    %al,(%eax)
add    %bl,%ah
or     %al,(%eax)
add    %bl,%al
mov    $0xadffff,%edx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x77,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
sub    %al,(%eax)
add    %al,(%eax)
sbb    $0x9,%al
add    %al,(%eax)
dec    %eax
mov    $0x26ffff,%ebx
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
addl   $0x45,(%ebx)
push   %cs
adc    %dl,0xa(%eax)
push   %cs
or     $0x43,%al
ret
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%esi
add    %al,(%eax)
dec    %eax
or     %eax,(%eax)
add    %cl,-0x1(%ebx,%edi,4)
jmp    *%edx
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4504(%ebx)
popa
or     (%esi),%cl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%eax
add    %al,(%eax)
inc    %eax
add    %al,(%eax)
add    %al,0x4000009(%eax)
mov    $0xa2fffff,%esp
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x3,0x1900e43
sbb    $0x140e0a03,%eax
inc    %ecx
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%eax
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
les    (%ecx),%ecx
add    %al,(%eax)
lock (bad)
xchg   %eax,%esi
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4b,0x3500e43
add    %ecx,(%edx)
push   %cs
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%eax),%esi
add    %al,(%eax)
add    %al,(%edx,%ecx,1)
add    %al,(%eax)
push   %eax
(bad)
(bad)
pushl  (%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
insb   (%dx),%es:(%edi)
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
or     (%eax),%al
add    %bl,-0x1(%edi,%eax,8)
call   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%edx,%ecx,1)
add    %ch,-0x39(%eax)
(bad)
call   *0x0
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %ah,0xa(%eax)
add    %al,(%eax)
je     804f785 <_IO_stdin_used+0x1ca1>
(bad)
(bad)
aas
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%esi)
addl   $0x76,(%ebx)
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
test   %cl,(%edx)
add    %al,(%eax)
nop
(bad)
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %bl,-0x63fffff6(%eax)
(bad)
(bad)
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4802(%ebx)
push   $0x41080e0a
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
xor    %al,(%eax)
add    %al,(%eax)
mov    $0xb800000a,%esp
(bad)
(bad)
jmp    *0x0(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4602(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x300e4304(%ebx)
add    0xe(%ecx),%dl
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
cmp    %al,(%eax)
add    %al,(%eax)
lock or (%eax),%al
add    %ah,%ah
(bad)
(bad)
call   *%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4602(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xffffffc3,0x2500e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %ch,(%ebx,%ecx,1)
add    %al,(%eax)
mov    %cl,%al
(bad)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
xor    %al,(%eax)
add    %al,(%eax)
inc    %esp
or     (%eax),%eax
add    %ah,-0x7b000038(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4804(%ebx)
add    0xe(%ebp),%dh
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
js     804f8dd <_IO_stdin_used+0x1df9>
add    %al,(%eax)
cld
enter  $0xffff,$0x1a
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,-0x36f80000(%ebx,%ecx,1)
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,0x1400000b(%eax)
leave
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dh,-0x36e00000(%ebx,%ecx,1)
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
enter  $0xb,$0x0
sub    $0xc9,%al
(bad)
ljmp   *0x0
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
addr16 push %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %ch,%al
or     (%eax),%eax
add    %bh,(%ecx,%ecx,8)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x500e4302(%ebx)
pushw  %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x14,%al
add    %al,(%eax)
add    %cl,(%eax)
or     $0x0,%al
add    %cl,-0x1(%ecx,%ecx,8)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
and    %cl,(%eax,%eax,1)
add    %ah,-0x1(%ecx,%ecx,8)
ljmp   *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
cmp    %cl,(%eax,%eax,1)
add    %bh,-0x1(%ecx,%ecx,8)
pushl  0x0(%eax)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edx),%ch
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
pop    %esp
or     $0x0,%al
add    %cl,(%eax)
lret   $0xffff
and    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %ah,0xe(%eax)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
je     804f9da <_IO_stdin_used+0x1ef6>
add    %al,(%eax)
and    %cl,%dl
(bad)
jmp    *(%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %bl,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
mov    %cs,(%eax,%eax,1)
add    %bh,(%eax)
lret   $0xffff
and    (%eax),%eax
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %bl,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
or     $0x0,%al
add    %dl,-0x36(%eax)
(bad)
jmp    *0x0(%ebp)
inc    %ecx
push   %cs
or     %al,0x500e4302(%ebx)
add    -0x3cbef7f2(%edi),%bl
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
enter  $0xc,$0x0
fmul   %st,%st(2)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
loopne 804fa46 <_IO_stdin_used+0x1f62>
add    %al,(%eax)
add    $0xcb,%al
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    $0x0,%al
add    %al,(%eax)
clc
or     $0x0,%al
add    %ch,(%ebx,%ecx,8)
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
adc    %al,(%eax)
add    %al,(%eax)
adc    %cl,0xcb540000
(bad)
lcall  *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %ah,-0x34a00000(,%ecx,1)
(bad)
call   *(%edi)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %bh,(%eax)
or     $0xcb6c0000,%eax
(bad)
lcall  *(%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %cl,0x0(%ebp,%ecx,1)
add    %bh,-0x35(%eax)
(bad)
lcall  *(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %dl,0x0(%eax,%eax,1)
add    %ah,0xd(%eax)
add    %al,(%eax)
test   %cl,%bl
(bad)
ljmp   *0x1(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x7e,0x1f00e46
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x48,%al
or     (%edx),%eax
ret
or     (%esi),%cl
adc    $0x43,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
add    %bl,-0x48000000(%eax)
or     $0xcc9c0000,%eax
(bad)
jmp    *0x5(%edi)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x5b,0x3700e43
add    %ecx,(%edx)
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%edx),%eax
mov    0x41140e0a,%eax
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xa(%ebp),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     0xa(%edi),%edi
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x45,%al
or     (%edx),%eax
dec    %ecx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4b,%al
or     (%eax),%eax
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
push   %esp
push   %cs
add    %al,(%eax)
jo     804fb83 <_IO_stdin_used+0x209f>
(bad)
decl   0x0(%edx)
add    %al,(%eax)
add    %al,0xe(%ebx)
xor    %al,(%edx)
inc    %esi
push   %cs
add    $0x20,%al
add    %al,(%eax)
add    %ch,0x0(%esi,%ecx,1)
add    %ch,0x53ffffd1(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x600e4502(%ebx)
add    0xe(%ebx),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
adc    $0x0,%al
add    %al,(%eax)
nop
push   %cs
add    %al,(%eax)
in     $0xd1,%al
(bad)
pushl  (%ebx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
xor    %ch,0xe(%edi)
add    $0x0,%al
and    %al,(%eax)
add    %al,(%eax)
test   $0xe,%al
add    %al,(%eax)
or     $0xd2,%al
(bad)
jmp    *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
add    -0x3cbef7f2(%ecx),%ah
push   %cs
add    $0x0,%al
add    %al,(%eax)
and    %al,(%eax)
add    %al,(%eax)
int3
push   %cs
add    %al,(%eax)
cwtl
sar    %cl,%bh
jmp    *0x0
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
push   %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
lock push %cs
add    %al,(%eax)
movsb  %ds:(%esi),%es:(%edi)
sar    %cl,%bh
ljmp   *(%esi)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x100e4502(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x45,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
adc    $0xf,%al
add    %al,(%eax)
mov    $0xd2,%al
(bad)
incl   0x0
add    %al,(%eax)
add    %ch,(%eax,%eax,1)
add    %al,(%eax)
sub    %cl,(%edi)
add    %al,(%eax)
lods   %ds:(%esi),%al
sar    %cl,%bh
incl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %edi
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x44,%al
or     0xa(%edi),%ecx
push   %cs
or     %al,-0x3d(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
pop    %eax
sldt   (%eax)
int3
sar    %cl,%bh
(bad)
cmp    %al,(%eax)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4302(%esi)
addl   $0x48,(%ebx)
push   %cs
adc    %ah,0xa(%eax)
push   %cs
or     $0x41,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x45,%al
or     (%eax,%eax,1),%ebp
add    %al,(%eax)
test   %cl,(%edi)
add    %al,(%eax)
loopne 804fcb4 <_IO_stdin_used+0x21d0>
(bad)
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,-0x3cf58bfc(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
and    %al,(%eax)
add    %al,(%eax)
mov    $0xf,%ah
add    %al,(%eax)
adc    %dl,%bl
(bad)
decl   0x0(%ecx)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x100e4302(%ebx)
imul   $0xc341080e,(%edx),%ecx
push   %cs
add    $0x4a,%al
or     (%eax),%eax
sbb    $0x0,%al
add    %al,(%eax)
fmuls  (%edi)
add    %al,(%eax)
cmp    $0xd3,%al
(bad)
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x18,%al
add    %al,(%eax)
add    %bh,%al
sldt   (%eax)
dec    %esp
sar    %cl,%edi
jmp    *0x0
inc    %ebx
push   %cs
and    %bl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %bl,(%eax,%eax,1)
add    %al,(%eax)
adc    $0x10,%al
add    %al,(%eax)
pusha
sar    %cl,%edi
ljmp   *(%ecx)
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
arpl   %cx,(%esi)
or     %al,-0x3d(%ecx)
push   %cs
add    $0x1c,%al
add    %al,(%eax)
add    %dh,(%eax,%edx,1)
add    %al,(%eax)
jo     804fd65 <_IO_stdin_used+0x2281>
(bad)
jmp    *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %esi
push   %cs
or     %al,-0x3d(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dl,0x0(%eax,%edx,1)
add    %al,0x46ffffd3(%eax)
add    %al,(%eax)
add    %al,(%eax)
inc    %ebx
push   %cs
and    %ah,(%eax)
add    %al,(%eax)
add    %ch,0x10(%eax)
add    %al,(%eax)
mov    $0x37ffffd3,%esp
add    %al,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0x200e4302(%ebx)
pop    %ebp
or     (%esi),%cl
or     %al,-0x3d(%ebx)
push   %cs
add    $0x44,%al
or     (%eax),%eax
push   %esp
add    %al,(%eax)
add    %cl,-0x2c280000(%eax,%edx,1)
(bad)
(bad)
js     804fdee <_IO_stdin_used+0x230a>
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
je     804fe0f <_IO_stdin_used+0x232b>
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%edx
push   %cs
adc    %al,-0x3d(%ebx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x44,%al
or     0xe(%eax),%edx
adc    %al,-0x3d(%ebp)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %bl,(%eax)
add    %al,(%eax)
add    %ah,%ah
adc    %al,(%eax)
add    %al,(%eax)
aam    $0xff
lcall  *(%eax,%eax,1)
add    %al,(%eax)
add    %al,0xe(%ebx)
and    %dl,0xa(%ebx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %ch,(%eax)
add    %al,(%eax)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%esp,%edx,8)
(bad)
decl   0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4302(%esi)
addl   $0x43,(%ebx)
push   %cs
and    %bh,0xe(%edx,%ecx,1)
or     $0x43,%al
ret
push   %cs
or     %al,-0x3a(%ecx)
push   %cs
add    $0x41,%al
or     (%eax,%eax,1),%edi
add    %al,(%eax)
sub    $0x11,%al
add    %al,(%eax)
sub    %dl,%ah
(bad)
ljmp   *0x0(%eax,%eax,1)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x4e,0x2300e43
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x47,%al
or     (%eax),%eax
adc    %al,(%eax)
add    %al,(%eax)
insb   (%dx),%es:(%edi)
adc    %eax,(%eax)
add    %bl,-0x2c(%eax)
(bad)
ljmp   *(%eax,%eax,1)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
cmp    $0x0,%al
add    %al,(%eax)
adcb   $0x0,(%ecx)
add    %dh,-0x1(%esp,%edx,8)
(bad)
mov    $0x3,%ecx
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x2,0x1b00e46
mov    $0xa,%ah
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     0x0(%eax,%eax,1),%eax
add    %al,%al
adc    %eax,(%eax)
add    %dh,%ah
xlat   %ds:(%ebx)
(bad)
call   *0x0(%edi)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%edi)
xchg   %al,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x200e4304(%ebx)
add    0xa(%edi),%al
push   %cs
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%esi
adc    %al,-0x3d(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x39(%ecx)
push   %cs
add    $0x0,%al
add    %al,(%eax)
sub    %al,(%eax)
add    %al,(%eax)
or     %dl,(%edx)
add    %al,(%eax)
dec    %esp
fdivr  %st(7),%st
lcall  *0x0(%ebp)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4302(%ebx)
pop    %ebx
or     (%esi),%cl
or     %al,-0x3d(%ecx)
push   %cs
add    $0x48,%al
or     0xe(%edi),%ebp
or     %al,-0x3d(%ecx)
push   %cs
add    $0x0,%al
add    %dl,0x0(%eax,%eax,1)
add    %dh,(%edx,%edx,1)
add    %al,(%eax)
sbb    $0xff,%al
decl   0x41000000(%eax,%eax,1)
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0xa,0x6b300e43
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x4a,%al
or     (%edx),%eax
inc    %edx
or     (%esi),%cl
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
push   $0x8c000000
adc    (%eax),%al
add    %bh,0x57ffffd8(%eax)
add    %eax,(%eax)
add    %al,(%eax)
inc    %ecx
push   %cs
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ecx
push   %cs
adc    %al,0x240e4304(%esi)
jl     805000f <_IO_stdin_used+0x252b>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x43,%al
or     0xe(%edx,%ecx,1),%esi
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x41,%al
or     0xa(%edi),%esp
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x46,%al
or     (%edx),%eax
jnp    8050046 <_IO_stdin_used+0x2562>
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x42,%al
or     (%eax),%edi
add    %al,(%eax)
add    %bh,%al
adc    (%eax),%al
add    %ch,0x61ffff(%ecx,%ebx,8)
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0xc0e4102(%ebp)
xchg   %eax,(%ebx)
inc    %ebx
push   %cs
adc    %al,0x140e4104(%esi)
addl   $0x48,0x2300e4e
push   %cs
adc    $0x41,%al
ret
push   %cs
adc    %al,-0x3a(%ecx)
push   %cs
or     $0x41,%al
(bad)
push   %cs
or     %al,-0x3b(%ecx)
push   %cs
add    $0x10,%al
add    %al,(%eax)
add    %dh,(%ebx,%edx,1)
add    %al,(%eax)
loopne 805006b <_IO_stdin_used+0x2587>
(bad)
incl   (%edx)
add    %al,(%eax)
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%eax)
add    %al,(%eax)
add    %cl,0x13(%eax)
add    %al,(%eax)
(bad)
(bad)
(bad)
cmp    $0x0,%al
add    %al,(%eax)
add    %al,0xe(%ecx)
or     %al,0x200e4e02(%ebx)
or     0x4108,%cl
ret
push   %cs
add    $0x41,%al
or     (%eax),%eax
add    %al,(%eax)
mov    $0x93,%al
add    $0x8,%al
nop
xchg   %eax,%ebx
add    $0x8,%al
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
add    %eax,(%eax)
add    %al,(%eax)
or     $0x0,%al
add    %al,(%eax)
in     $0x8b,%al
add    $0x8,%al
or     $0xbc000000,%eax
fiaddl (%eax,%ecx,1)
sbb    %eax,(%eax)
add    %al,(%eax)
or     %bl,(%edi)
add    $0x1b08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
sbb    (%eax),%al
add    %al,(%eax)
or     $0x1f,%al
add    $0x1c08,%eax
add    %al,(%eax,%eax,1)
add    %al,(%eax)
cmc
(bad)
ljmp   *-0x54(%edi)
addl   $0x5,(%eax,%ecx,1)
adc    %al,0x60804(%esi)
add    %al,(%eax)
lock addl $0xa,(%eax,%ecx,1)
(bad)
add    (%eax),%al
add    %cl,(%ebx)
add    %al,(%eax)
add    %dl,(%eax)
add    %al,(%eax)
add    %dl,0x0
add    %al,(%eax)
add    %al,(%ebx)
add    %al,(%eax)
add    %al,(%eax)
and    %al,0x208
add    %cl,%al
add    %eax,(%eax)
add    %dl,(%eax,%eax,1)
add    %al,(%eax)
adc    %eax,(%eax)
add    %al,(%eax)
pop    %ss
add    %al,(%eax)
add    %bl,(%edx,%ecx,4)
add    $0x8,%al
adc    %eax,(%eax)
add    %al,(%eax)
in     (%dx),%al
mov    %eax,(%eax,%ecx,1)
adc    (%eax),%al
add    %al,(%eax)
xor    %al,(%eax)
add    %al,(%eax)
adc    (%eax),%eax
add    %al,(%eax)
or     %al,(%eax)
add    %al,(%eax)
(bad)
(bad)
ljmp   *0x6c(%edi)
mov    %eax,(%eax,%ecx,1)
(bad)
(bad)
ljmp   *0x1(%edi)
add    %al,(%eax)
add    %dh,%al
(bad)
ljmp   *-0x1a(%edi)
mov    %al,(%eax,%ecx,1)
add    %al,(%eax)
adc    $0x1f,%al
add    $0x8,%eax
add    %al,(%eax)
add    %al,(%eax)
add    %ah,(%esi)
mov    %es,(%eax,%ecx,1)
mov    %es,%ss:(%eax,%ecx,1)
inc    %esi
mov    %es,(%eax,%ecx,1)
push   %esi
mov    %es,(%eax,%ecx,1)
data16
mov    %es,(%eax,%ecx,1)
jbe    8051fae <_IO_stdin_used+0x44ca>
add    $0x8,%al
xchg   %cl,0x48c9608(%esp,%eax,1)
or     %ah,-0x49f7fb74(%esi)
mov    %es,(%eax,%ecx,1)
(bad)
mov    %es,(%eax,%ecx,1)
(bad)
mov    %es,(%eax,%ecx,1)
out    %al,$0x8c
add    $0x8,%al
(bad)
mov    %es,(%eax,%ecx,1)
push   %es
lea    (%eax,%ecx,1),%eax
push   %ss
lea    (%eax,%ecx,1),%eax
lea    %es:(%eax,%ecx,1),%eax
lea    %ss:(%eax,%ecx,1),%eax
inc    %esi
lea    (%eax,%ecx,1),%eax
push   %esi
lea    (%eax,%ecx,1),%eax
lea    (%eax,%ecx,1),%ax
jbe    8051fef <_IO_stdin_used+0x450b>
add    $0x8,%al
xchg   %cl,-0x7269f7fc(%ebp)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
lea    (%eax,%ecx,1),%eax
mov    $0x8d,%dh
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
(bad)
lea    (%eax,%ecx,1),%eax
out    %al,$0x8d
add    $0x8,%al
(bad)
lea    (%eax,%ecx,1),%eax
push   %es
mov    (%eax,%ecx,1),%es
push   %ss
mov    (%eax,%ecx,1),%es
mov    %es:(%eax,%ecx,1),%es
mov    %ss:(%eax,%ecx,1),%es
inc    %esi
mov    (%eax,%ecx,1),%es
push   %esi
mov    (%eax,%ecx,1),%es
data16
mov    (%eax,%ecx,1),%es
jbe    8052030 <_IO_stdin_used+0x454c>
add    $0x8,%al
xchg   %cl,-0x7169f7fc(%esi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
mov    (%eax,%ecx,1),%es
mov    $0x8e,%dh
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
(bad)
mov    (%eax,%ecx,1),%es
out    %al,$0x8e
add    $0x8,%al
(bad)
mov    (%eax,%ecx,1),%es
push   %es
popl   (%eax,%ecx,1)
push   %ss
popl   (%eax,%ecx,1)
popl   %es:(%eax,%ecx,1)
popl   %ss:(%eax,%ecx,1)
inc    %esi
popl   (%eax,%ecx,1)
push   %esi
popl   (%eax,%ecx,1)
popw   (%eax,%ecx,1)
jbe    8052071 <_IO_stdin_used+0x458d>
add    $0x8,%al
xchg   %cl,-0x7069f7fc(%edi)
add    $0x8,%al
cmpsb  %es:(%edi),%ds:(%esi)
popl   (%eax,%ecx,1)
jo     80520ec <_IO_stdin_used+0x4608>
add    $0x8,%al
add    %eax,(%eax)
add    %al,(%eax)
push   %es
add    %al,(%eax)
add    %dl,0x5(%ecx,%eiz,1)
or     %al,(%eax)
add    %eax,(%eax)
add    %ah,%al
and    %eax,0x108
add    %al,(%eax)
jb     67 <strcmp@plt-0x8048bb9>
popa
fs
insb   (%dx),%es:(%edi)
imul   $0x0,0x6b(%esi),%ebp
sahf
.byte 0xd2
fs
repz
